
103359c8ceb3fb7753e22f1b953a5ad7717eb89ecf699fe6fa827d2bca56f7c0.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x82c5]        # 0x4092e0
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x82c6]        # 0x4092f0
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x82c9]        # 0x409300
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x828c]        # 0x4092d0
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x810f]        # 0x409160
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x8261]        # 0x4092c0
  40105f:	mov    DWORD PTR [rip+0xafa3],edx        # 0x40c008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x405da0
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x404d30
  401081:	mov    rdx,QWORD PTR [rip+0x8168]        # 0x4091f0
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x814e]        # 0x4091e0
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x81b4]        # 0x409250
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x80eb]        # 0x409190
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x404910
  4010af:	mov    rax,QWORD PTR [rip+0x805a]        # 0x409110
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x405da0
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x3ae9]        # 0x404c10
  401127:	call   0x404c00
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x8115]        # 0x409280
  40116b:	lea    r8,[rip+0xaea6]        # 0x40c018
  401172:	lea    rdx,[rip+0xaea7]        # 0x40c020
  401179:	lea    rcx,[rip+0xaea8]        # 0x40c028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0xae78],eax        # 0x40c000
  401188:	lea    rax,[rip+0xae71]        # 0x40c000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x80a5]        # 0x409240
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x405db8
  4011a3:	mov    DWORD PTR [rip+0xae67],eax        # 0x40c010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x80fa]        # 0x4092c0
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x7fcb]        # 0x4091c0
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0xc9b6]        # 0x40dbb8
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x7fa7]        # 0x4091d0
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0xadba],0x1        # 0x40c004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x7eec]        # 0x409150
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x404f20
  40127d:	lea    rcx,[rip+0x423c]        # 0x4054c0
  401284:	call   QWORD PTR [rip+0xc926]        # 0x40dbb0
  40128a:	mov    rdx,QWORD PTR [rip+0x7f1f]        # 0x4091b0
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x4053d0
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x405de0
  4012a5:	call   0x404d10
  4012aa:	mov    rax,QWORD PTR [rip+0x7eaf]        # 0x409160
  4012b1:	mov    QWORD PTR [rip+0xb7d0],rax        # 0x40ca88
  4012b8:	mov    rax,QWORD PTR [rip+0x7ec1]        # 0x409180
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0xb769],rax        # 0x40ca80
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x5cca],eax        # 0x407000
  401336:	mov    r12d,DWORD PTR [rip+0xaceb]        # 0x40c028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x405d18
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0xacc2]        # 0x40c020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x405cf0
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x405d18
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x405d10
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0xac6a],rbp        # 0x40c020
  4013b6:	call   0x4048e0
  4013bb:	mov    rax,QWORD PTR [rip+0x7dae]        # 0x409170
  4013c2:	mov    rdx,QWORD PTR [rip+0xac4f]        # 0x40c018
  4013c9:	mov    ecx,DWORD PTR [rip+0xac59]        # 0x40c028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0xac3c]        # 0x40c018
  4013dc:	mov    rdx,QWORD PTR [rip+0xac3d]        # 0x40c020
  4013e3:	call   0x405eb0
  4013e8:	mov    ecx,DWORD PTR [rip+0xac1a]        # 0x40c008
  4013ee:	mov    DWORD PTR [rip+0xac18],eax        # 0x40c00c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0xac02]        # 0x40c004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x405d88
  40140b:	mov    eax,DWORD PTR [rip+0xabfb]        # 0x40c00c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x7d99]        # 0x4091d0
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x405d90
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x7dad]        # 0x409210
  401463:	mov    rcx,QWORD PTR [rip+0x7d96]        # 0x409200
  40146a:	call   0x405d78
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0xc6c7]        # 0x40db60
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x7d89]        # 0x409230
  4014a7:	mov    rcx,QWORD PTR [rip+0x7d72]        # 0x409220
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x405d78
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x405d40
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x7de5]        # 0x4092c0
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x404920
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x7db5]        # 0x4092c0
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x404920
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	push   r12
  401532:	push   rbp
  401533:	push   rdi
  401534:	push   rsi
  401535:	push   rbx
  401536:	sub    rsp,0x20
  40153a:	mov    rdi,QWORD PTR [rsp+0x70]
  40153f:	mov    rbx,rdx
  401542:	mov    rsi,rcx
  401545:	mov    rbp,r8
  401548:	mov    r12,r9
  40154b:	mov    rdx,rdi
  40154e:	call   0x4044b8
  401553:	test   rbx,rbx
  401556:	je     0x401574
  401558:	mov    r9,r12
  40155b:	mov    r8,rbp
  40155e:	mov    rdx,rdi
  401561:	mov    rcx,rsi
  401564:	mov    rax,rbx
  401567:	add    rsp,0x20
  40156b:	pop    rbx
  40156c:	pop    rsi
  40156d:	pop    rdi
  40156e:	pop    rbp
  40156f:	pop    r12
  401571:	rex.W jmp rax
  401574:	add    rsp,0x20
  401578:	pop    rbx
  401579:	pop    rsi
  40157a:	pop    rdi
  40157b:	pop    rbp
  40157c:	pop    r12
  40157e:	ret    
  40157f:	nop
  401580:	push   rdi
  401581:	push   rsi
  401582:	push   rbx
  401583:	sub    rsp,0x30
  401587:	movaps XMMWORD PTR [rsp+0x20],xmm6
  40158c:	mov    rsi,rcx
  40158f:	mov    rdi,rdx
  401592:	movapd xmm6,xmm2
  401596:	call   0x4043e8
  40159b:	mov    rbx,rax
  40159e:	mov    rcx,rax
  4015a1:	mov    eax,DWORD PTR [rip+0xaae5]        # 0x40c08c
  4015a7:	mov    r8d,0xffffffff
  4015ad:	mov    rdx,rdi
  4015b0:	test   eax,eax
  4015b2:	je     0x401700
  4015b8:	call   0x4043a8
  4015bd:	mov    edx,DWORD PTR [rip+0x5a69]        # 0x40702c
  4015c3:	mov    rcx,rbx
  4015c6:	call   0x4043d8
  4015cb:	mov    edx,DWORD PTR [rip+0xaa8f]        # 0x40c060
  4015d1:	mov    rcx,rbx
  4015d4:	call   0x4043d0
  4015d9:	mov    edx,DWORD PTR [rip+0xaa89]        # 0x40c068
  4015df:	mov    rcx,rbx
  4015e2:	call   0x4043b0
  4015e7:	mov    edx,DWORD PTR [rip+0xaa4f]        # 0x40c03c
  4015ed:	mov    rcx,rbx
  4015f0:	call   0x4043a0
  4015f5:	mov    edx,DWORD PTR [rip+0x5a21]        # 0x40701c
  4015fb:	mov    rcx,rbx
  4015fe:	call   0x404388
  401603:	mov    rcx,QWORD PTR [rip+0x5a36]        # 0x407040
  40160a:	call   0x404498
  40160f:	ucomisd xmm6,QWORD PTR [rip+0x7301]        # 0x408918
  401617:	mov    QWORD PTR [rip+0xaa82],rax        # 0x40c0a0
  40161e:	jbe    0x401634
  401620:	mulsd  xmm6,QWORD PTR [rip+0x72f8]        # 0x408920
  401628:	mov    rcx,rax
  40162b:	cvttsd2si edx,xmm6
  40162f:	call   0x404490
  401634:	mov    eax,DWORD PTR [rip+0x59ee]        # 0x407028
  40163a:	test   eax,eax
  40163c:	jle    0x401664
  40163e:	imul   eax,DWORD PTR [rip+0x5a03]        # 0x407048
  401645:	mov    edx,0x38e38e39
  40164a:	shl    eax,0xa
  40164d:	lea    ecx,[rax+0x24]
  401650:	mov    eax,ecx
  401652:	sar    ecx,0x1f
  401655:	imul   edx
  401657:	sar    edx,0x4
  40165a:	sub    edx,ecx
  40165c:	mov    rcx,rbx
  40165f:	call   0x404390
  401664:	mov    edx,DWORD PTR [rip+0x59ba]        # 0x407024
  40166a:	test   edx,edx
  40166c:	jle    0x401740
  401672:	imul   edx,DWORD PTR [rip+0x59cf]        # 0x407048
  401679:	mov    rcx,rbx
  40167c:	shl    edx,0xa
  40167f:	lea    r8d,[rdx+0x24]
  401683:	mov    edx,0x38e38e39
  401688:	mov    eax,r8d
  40168b:	sar    r8d,0x1f
  40168f:	imul   edx
  401691:	sar    edx,0x4
  401694:	sub    edx,r8d
  401697:	call   0x4043c0
  40169c:	mov    eax,DWORD PTR [rip+0xa9ca]        # 0x40c06c
  4016a2:	test   eax,eax
  4016a4:	jne    0x401710
  4016a6:	mov    edi,DWORD PTR [rip+0xa9b8]        # 0x40c064
  4016ac:	cmp    edi,0x1
  4016af:	je     0x4016c6
  4016b1:	mov    rcx,rsi
  4016b4:	call   0x4044f0
  4016b9:	test   eax,eax
  4016bb:	je     0x4016c6
  4016bd:	mov    eax,0x2
  4016c2:	sub    eax,edi
  4016c4:	mov    edi,eax
  4016c6:	mov    edx,edi
  4016c8:	mov    rcx,rbx
  4016cb:	call   0x4043e0
  4016d0:	mov    rdx,QWORD PTR [rip+0xa9c9]        # 0x40c0a0
  4016d7:	mov    rcx,rbx
  4016da:	call   0x4043c8
  4016df:	mov    rcx,QWORD PTR [rip+0xa9ba]        # 0x40c0a0
  4016e6:	call   0x4044a0
  4016eb:	nop
  4016ec:	movaps xmm6,XMMWORD PTR [rsp+0x20]
  4016f1:	mov    rax,rbx
  4016f4:	add    rsp,0x30
  4016f8:	pop    rbx
  4016f9:	pop    rsi
  4016fa:	pop    rdi
  4016fb:	ret    
  4016fc:	nop    DWORD PTR [rax+0x0]
  401700:	call   0x404398
  401705:	jmp    0x4015bd
  40170a:	nop    WORD PTR [rax+rax*1+0x0]
  401710:	imul   eax,DWORD PTR [rip+0x5931]        # 0x407048
  401717:	mov    edx,0x38e38e39
  40171c:	shl    eax,0xa
  40171f:	lea    ecx,[rax+0x24]
  401722:	mov    eax,ecx
  401724:	sar    ecx,0x1f
  401727:	imul   edx
  401729:	sar    edx,0x4
  40172c:	sub    edx,ecx
  40172e:	mov    rcx,rbx
  401731:	call   0x4043b8
  401736:	jmp    0x4016a6
  40173b:	nop    DWORD PTR [rax+rax*1+0x0]
  401740:	mov    rcx,rbx
  401743:	call   0x4043c0
  401748:	jmp    0x40169c
  40174d:	nop    DWORD PTR [rax]
  401750:	push   r15
  401752:	push   r14
  401754:	push   r13
  401756:	push   r12
  401758:	push   rbp
  401759:	push   rdi
  40175a:	push   rsi
  40175b:	push   rbx
  40175c:	sub    rsp,0x98
  401763:	movaps XMMWORD PTR [rsp+0x80],xmm6
  40176b:	mov    r15,rdx
  40176e:	mov    rbx,rcx
  401771:	mov    edx,DWORD PTR [rsp+0x110]
  401778:	mov    QWORD PTR [rsp+0xf0],r8
  401780:	mov    QWORD PTR [rsp+0xf8],r9
  401788:	mov    rbp,QWORD PTR [rsp+0x100]
  401790:	mov    r12,QWORD PTR [rsp+0x108]
  401798:	test   edx,edx
  40179a:	je     0x4019a0
  4017a0:	lea    rax,[rsp+0x50]
  4017a5:	mov    DWORD PTR [rsp+0x4c],0x0
  4017ad:	mov    DWORD PTR [rsp+0x48],0x0
  4017b5:	mov    QWORD PTR [rsp+0x40],rax
  4017ba:	mov    eax,DWORD PTR [rip+0xa8b0]        # 0x40c070
  4017c0:	test   eax,eax
  4017c2:	jne    0x401980
  4017c8:	mov    esi,0xffffffff
  4017cd:	mov    DWORD PTR [rsp+0x34],0x1
  4017d5:	mov    DWORD PTR [rsp+0x38],esi
  4017d9:	mov    eax,DWORD PTR [rsp+0x34]
  4017dd:	mov    r13d,esi
  4017e0:	mov    DWORD PTR [rbp+0x0],0x0
  4017e7:	shl    r13d,0xa
  4017eb:	mov    DWORD PTR [r12],0x0
  4017f3:	shl    eax,0xa
  4017f6:	mov    DWORD PTR [rsp+0x3c],eax
  4017fa:	jmp    0x401856
  4017fc:	nop    DWORD PTR [rax+0x0]
  401800:	mov    eax,DWORD PTR [rsp+0x58]
  401804:	add    eax,DWORD PTR [rsp+0x50]
  401808:	cmp    eax,r14d
  40180b:	jge    0x401904
  401811:	mov    eax,DWORD PTR [rbp+0x0]
  401814:	mov    edi,DWORD PTR [rsp+0x5c]
  401818:	add    edi,DWORD PTR [rsp+0x54]
  40181c:	mov    rcx,rbx
  40181f:	mov    DWORD PTR [rbp+0x0],eax
  401822:	call   0x404428
  401827:	add    eax,0x200
  40182c:	sar    eax,0xa
  40182f:	cmp    edi,eax
  401831:	jle    0x401930
  401837:	mov    eax,DWORD PTR [rsp+0x5c]
  40183b:	add    eax,DWORD PTR [rsp+0x54]
  40183f:	add    esi,DWORD PTR [rsp+0x34]
  401843:	add    DWORD PTR [r12],eax
  401847:	add    r13d,DWORD PTR [rsp+0x3c]
  40184c:	cmp    esi,DWORD PTR [rsp+0x38]
  401850:	jg     0x401945
  401856:	test   esi,esi
  401858:	jle    0x40188b
  40185a:	mov    rcx,rbx
  40185d:	call   0x404430
  401862:	mov    rcx,rax
  401865:	call   0x4044a8
  40186a:	mov    edx,r13d
  40186d:	mov    rdi,rax
  401870:	mov    rcx,rax
  401873:	call   0x404490
  401878:	mov    rcx,rbx
  40187b:	mov    rdx,rdi
  40187e:	call   0x4043c8
  401883:	mov    rcx,rdi
  401886:	call   0x4044a0
  40188b:	mov    r8,QWORD PTR [rsp+0x40]
  401890:	xor    edx,edx
  401892:	mov    rcx,rbx
  401895:	call   0x404418
  40189a:	test   r15,r15
  40189d:	je     0x4018c7
  40189f:	mov    rax,QWORD PTR [rsp+0xf8]
  4018a7:	mov    r8d,DWORD PTR [rsp+0x4c]
  4018ac:	mov    rcx,rbx
  4018af:	add    r8d,DWORD PTR [r12]
  4018b3:	mov    r9,QWORD PTR [rsp+0xf0]
  4018bb:	mov    edx,DWORD PTR [rsp+0x48]
  4018bf:	mov    QWORD PTR [rsp+0x20],rax
  4018c4:	call   r15
  4018c7:	mov    edi,DWORD PTR [rsp+0x58]
  4018cb:	add    edi,DWORD PTR [rsp+0x50]
  4018cf:	mov    rcx,rbx
  4018d2:	mov    r14d,DWORD PTR [rbp+0x0]
  4018d6:	call   0x404410
  4018db:	add    eax,0x200
  4018e0:	sar    eax,0xa
  4018e3:	cmp    edi,eax
  4018e5:	jg     0x401800
  4018eb:	mov    rcx,rbx
  4018ee:	call   0x404410
  4018f3:	add    eax,0x200
  4018f8:	sar    eax,0xa
  4018fb:	cmp    eax,r14d
  4018fe:	jl     0x401811
  401904:	mov    edi,DWORD PTR [rsp+0x58]
  401908:	add    edi,DWORD PTR [rsp+0x50]
  40190c:	mov    rcx,rbx
  40190f:	call   0x404410
  401914:	add    eax,0x200
  401919:	sar    eax,0xa
  40191c:	cmp    edi,eax
  40191e:	jle    0x401961
  401920:	mov    eax,DWORD PTR [rsp+0x58]
  401924:	add    eax,DWORD PTR [rsp+0x50]
  401928:	jmp    0x401814
  40192d:	nop    DWORD PTR [rax]
  401930:	mov    rcx,rbx
  401933:	call   0x404428
  401938:	add    eax,0x200
  40193d:	sar    eax,0xa
  401940:	jmp    0x40183f
  401945:	movaps xmm6,XMMWORD PTR [rsp+0x80]
  40194d:	add    rsp,0x98
  401954:	pop    rbx
  401955:	pop    rsi
  401956:	pop    rdi
  401957:	pop    rbp
  401958:	pop    r12
  40195a:	pop    r13
  40195c:	pop    r14
  40195e:	pop    r15
  401960:	ret    
  401961:	mov    rcx,rbx
  401964:	call   0x404410
  401969:	add    eax,0x200
  40196e:	sar    eax,0xa
  401971:	jmp    0x401814
  401976:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401980:	mov    DWORD PTR [rsp+0x34],0x4
  401988:	mov    DWORD PTR [rsp+0x38],0x30
  401990:	mov    esi,0x8
  401995:	jmp    0x4017d9
  40199a:	nop    WORD PTR [rax+rax*1+0x0]
  4019a0:	pxor   xmm6,xmm6
  4019a4:	movsd  xmm1,QWORD PTR [rip+0x6f7c]        # 0x408928
  4019ac:	movsd  QWORD PTR [rsp+0x58],xmm6
  4019b2:	movsd  QWORD PTR [rsp+0x50],xmm1
  4019b8:	movsd  QWORD PTR [rsp+0x68],xmm1
  4019be:	movsd  QWORD PTR [rsp+0x60],xmm6
  4019c4:	movsd  QWORD PTR [rsp+0x70],xmm6
  4019ca:	movsd  QWORD PTR [rsp+0x78],xmm6
  4019d0:	call   0x404440
  4019d5:	mov    rcx,rax
  4019d8:	mov    rsi,rax
  4019db:	call   0x4044e0
  4019e0:	test   rax,rax
  4019e3:	je     0x401a25
  4019e5:	movsd  xmm0,QWORD PTR [rax+0x20]
  4019ea:	addsd  xmm0,xmm6
  4019ee:	addsd  xmm6,QWORD PTR [rax+0x28]
  4019f3:	cvttsd2si edx,xmm0
  4019f7:	cvttsd2si eax,xmm6
  4019fb:	mov    DWORD PTR [rsp+0x48],edx
  4019ff:	mov    DWORD PTR [rsp+0x4c],eax
  401a03:	lea    rax,[rsp+0x50]
  401a08:	mov    rcx,rsi
  401a0b:	mov    rdx,rax
  401a0e:	mov    QWORD PTR [rsp+0x40],rax
  401a13:	call   0x4044b8
  401a18:	mov    rcx,rbx
  401a1b:	call   0x404448
  401a20:	jmp    0x4017ba
  401a25:	mov    DWORD PTR [rsp+0x4c],0x0
  401a2d:	mov    DWORD PTR [rsp+0x48],0x0
  401a35:	jmp    0x401a03
  401a37:	nop    WORD PTR [rax+rax*1+0x0]
  401a40:	sub    rsp,0x28
  401a44:	call   0x404610
  401a49:	lea    r9,[rip+0x65b0]        # 0x408000
  401a50:	lea    r8,[rip+0x65b0]        # 0x408007
  401a57:	lea    rcx,[rip+0x65af]        # 0x40800d
  401a5e:	mov    rdx,rax
  401a61:	call   0x4045c0
  401a66:	call   0x404350
  401a6b:	cmp    eax,0x36b3
  401a70:	je     0x401a86
  401a72:	call   0x404348
  401a77:	lea    rcx,[rip+0x65a2]        # 0x408020
  401a7e:	mov    rdx,rax
  401a81:	call   0x4045c0
  401a86:	xor    ecx,ecx
  401a88:	call   0x405d40
  401a8d:	nop
  401a8e:	xchg   ax,ax
  401a90:	push   rdi
  401a91:	push   rsi
  401a92:	push   rbx
  401a93:	sub    rsp,0x40
  401a97:	mov    rax,r9
  401a9a:	lea    r9,[rsp+0x38]
  401a9f:	mov    rsi,r8
  401aa2:	mov    r8,rdx
  401aa5:	mov    rdx,rax
  401aa8:	mov    QWORD PTR [rsp+0x38],0x0
  401ab1:	mov    QWORD PTR [rsp+0x20],r9
  401ab6:	xor    r9d,r9d
  401ab9:	call   0x404360
  401abe:	test   eax,eax
  401ac0:	mov    ebx,eax
  401ac2:	jne    0x401aff
  401ac4:	cmp    QWORD PTR [rsp+0x80],0x0
  401acd:	je     0x401aff
  401acf:	mov    rdi,QWORD PTR [rsp+0x38]
  401ad4:	call   0x4045e0
  401ad9:	mov    rcx,QWORD PTR [rsp+0x80]
  401ae1:	lea    r9,[rip+0x6570]        # 0x408058
  401ae8:	mov    QWORD PTR [rsp+0x20],rsi
  401aed:	mov    QWORD PTR [rsp+0x28],rdi
  401af2:	mov    r8d,0x1
  401af8:	mov    edx,eax
  401afa:	call   0x4045b8
  401aff:	mov    rcx,QWORD PTR [rsp+0x38]
  401b04:	call   0x404618
  401b09:	mov    eax,ebx
  401b0b:	add    rsp,0x40
  401b0f:	pop    rbx
  401b10:	pop    rsi
  401b11:	pop    rdi
  401b12:	ret    
  401b13:	nop    DWORD PTR [rax]
  401b16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401b20:	push   rdi
  401b21:	push   rsi
  401b22:	push   rbx
  401b23:	sub    rsp,0x30
  401b27:	mov    rbx,rcx
  401b2a:	mov    rsi,rdx
  401b2d:	mov    rdi,r9
  401b30:	call   0x404340
  401b35:	lea    rdx,[rip+0x54e0]        # 0x40701c
  401b3c:	mov    QWORD PTR [rsp+0x20],rdi
  401b41:	mov    r9,rsi
  401b44:	mov    r8,rbx
  401b47:	mov    rcx,rax
  401b4a:	call   0x401a90
  401b4f:	test   eax,eax
  401b51:	je     0x401b5d
  401b53:	mov    DWORD PTR [rip+0xa4f3],0x1        # 0x40c050
  401b5d:	add    rsp,0x30
  401b61:	pop    rbx
  401b62:	pop    rsi
  401b63:	pop    rdi
  401b64:	ret    
  401b65:	nop
  401b66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401b70:	push   rdi
  401b71:	push   rsi
  401b72:	push   rbx
  401b73:	sub    rsp,0x30
  401b77:	mov    rbx,rcx
  401b7a:	mov    rsi,rdx
  401b7d:	mov    rdi,r9
  401b80:	call   0x404468
  401b85:	lea    rdx,[rip+0xa4cc]        # 0x40c058
  401b8c:	mov    QWORD PTR [rsp+0x20],rdi
  401b91:	mov    r9,rsi
  401b94:	mov    r8,rbx
  401b97:	mov    rcx,rax
  401b9a:	call   0x401a90
  401b9f:	add    rsp,0x30
  401ba3:	pop    rbx
  401ba4:	pop    rsi
  401ba5:	pop    rdi
  401ba6:	ret    
  401ba7:	nop    WORD PTR [rax+rax*1+0x0]
  401bb0:	push   rdi
  401bb1:	push   rsi
  401bb2:	push   rbx
  401bb3:	sub    rsp,0x30
  401bb7:	mov    rbx,rcx
  401bba:	mov    rsi,rdx
  401bbd:	mov    rdi,r9
  401bc0:	call   0x404470
  401bc5:	lea    rdx,[rip+0xa490]        # 0x40c05c
  401bcc:	mov    QWORD PTR [rsp+0x20],rdi
  401bd1:	mov    r9,rsi
  401bd4:	mov    r8,rbx
  401bd7:	mov    rcx,rax
  401bda:	call   0x401a90
  401bdf:	add    rsp,0x30
  401be3:	pop    rbx
  401be4:	pop    rsi
  401be5:	pop    rdi
  401be6:	ret    
  401be7:	nop    WORD PTR [rax+rax*1+0x0]
  401bf0:	push   rdi
  401bf1:	push   rsi
  401bf2:	push   rbx
  401bf3:	sub    rsp,0x30
  401bf7:	mov    rbx,rcx
  401bfa:	mov    rsi,rdx
  401bfd:	mov    rdi,r9
  401c00:	call   0x4044b0
  401c05:	lea    rdx,[rip+0xa454]        # 0x40c060
  401c0c:	mov    QWORD PTR [rsp+0x20],rdi
  401c11:	mov    r9,rsi
  401c14:	mov    r8,rbx
  401c17:	mov    rcx,rax
  401c1a:	call   0x401a90
  401c1f:	add    rsp,0x30
  401c23:	pop    rbx
  401c24:	pop    rsi
  401c25:	pop    rdi
  401c26:	ret    
  401c27:	nop    WORD PTR [rax+rax*1+0x0]
  401c30:	push   rdi
  401c31:	push   rsi
  401c32:	push   rbx
  401c33:	sub    rsp,0x30
  401c37:	mov    rbx,rcx
  401c3a:	mov    rsi,rdx
  401c3d:	mov    rdi,r9
  401c40:	call   0x404500
  401c45:	lea    rdx,[rip+0xa418]        # 0x40c064
  401c4c:	mov    QWORD PTR [rsp+0x20],rdi
  401c51:	mov    r9,rsi
  401c54:	mov    r8,rbx
  401c57:	mov    rcx,rax
  401c5a:	call   0x401a90
  401c5f:	add    rsp,0x30
  401c63:	pop    rbx
  401c64:	pop    rsi
  401c65:	pop    rdi
  401c66:	ret    
  401c67:	nop    WORD PTR [rax+rax*1+0x0]
  401c70:	push   rsi
  401c71:	push   rbx
  401c72:	sub    rsp,0x38
  401c76:	lea    rax,[rip+0x53b3]        # 0x407030
  401c7d:	lea    r8,[rip+0x53b8]        # 0x40703c
  401c84:	mov    rcx,rdx
  401c87:	mov    rsi,r9
  401c8a:	lea    rdx,[rip+0x63e9]        # 0x40807a
  401c91:	mov    QWORD PTR [rsp+0x28],rax
  401c96:	lea    rax,[rip+0x5397]        # 0x407034
  401c9d:	lea    r9,[rip+0x5394]        # 0x407038
  401ca4:	mov    QWORD PTR [rsp+0x20],rax
  401ca9:	call   0x405cf8
  401cae:	cmp    eax,0x1
  401cb1:	mov    ebx,eax
  401cb3:	je     0x401d30
  401cb5:	jle    0x401cf4
  401cb7:	cmp    eax,0x2
  401cba:	je     0x401ce0
  401cbc:	cmp    ebx,0x3
  401cbf:	mov    eax,DWORD PTR [rip+0x5373]        # 0x407038
  401cc5:	jne    0x401d20
  401cc7:	mov    ebx,0x1
  401ccc:	mov    DWORD PTR [rip+0x535e],eax        # 0x407030
  401cd2:	mov    eax,ebx
  401cd4:	add    rsp,0x38
  401cd8:	pop    rbx
  401cd9:	pop    rsi
  401cda:	ret    
  401cdb:	nop    DWORD PTR [rax+rax*1+0x0]
  401ce0:	mov    edx,DWORD PTR [rip+0x5356]        # 0x40703c
  401ce6:	mov    eax,DWORD PTR [rip+0x534c]        # 0x407038
  401cec:	mov    DWORD PTR [rip+0x5342],edx        # 0x407034
  401cf2:	jmp    0x401cc7
  401cf4:	test   eax,eax
  401cf6:	jne    0x401d20
  401cf8:	call   0x4045e0
  401cfd:	lea    r9,[rip+0x6394]        # 0x408098
  401d04:	mov    edx,eax
  401d06:	mov    r8d,0x1
  401d0c:	mov    rcx,rsi
  401d0f:	call   0x4045b8
  401d14:	mov    eax,ebx
  401d16:	add    rsp,0x38
  401d1a:	pop    rbx
  401d1b:	pop    rsi
  401d1c:	ret    
  401d1d:	nop    DWORD PTR [rax]
  401d20:	mov    ebx,0x1
  401d25:	mov    eax,ebx
  401d27:	add    rsp,0x38
  401d2b:	pop    rbx
  401d2c:	pop    rsi
  401d2d:	ret    
  401d2e:	xchg   ax,ax
  401d30:	mov    edx,DWORD PTR [rip+0x5306]        # 0x40703c
  401d36:	mov    DWORD PTR [rip+0x52fc],edx        # 0x407038
  401d3c:	mov    eax,edx
  401d3e:	jmp    0x401cec
  401d40:	push   rdi
  401d41:	push   rsi
  401d42:	sub    rsp,0x28
  401d46:	lea    rdi,[rip+0x638d]        # 0x4080da
  401d4d:	mov    ecx,0x5
  401d52:	mov    rsi,rdx
  401d55:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  401d57:	je     0x401db0
  401d59:	lea    rdi,[rip+0x637f]        # 0x4080df
  401d60:	mov    ecx,0x5
  401d65:	mov    rsi,rdx
  401d68:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  401d6a:	je     0x401d95
  401d6c:	lea    rdi,[rip+0x6371]        # 0x4080e4
  401d73:	mov    ecx,0x5
  401d78:	mov    rsi,rdx
  401d7b:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  401d7d:	jne    0x401dd0
  401d7f:	mov    eax,0x1
  401d84:	mov    DWORD PTR [rip+0xa2c6],0x3        # 0x40c054
  401d8e:	add    rsp,0x28
  401d92:	pop    rsi
  401d93:	pop    rdi
  401d94:	ret    
  401d95:	mov    eax,0x1
  401d9a:	mov    DWORD PTR [rip+0xa2b0],0x2        # 0x40c054
  401da4:	add    rsp,0x28
  401da8:	pop    rsi
  401da9:	pop    rdi
  401daa:	ret    
  401dab:	nop    DWORD PTR [rax+rax*1+0x0]
  401db0:	mov    eax,0x1
  401db5:	mov    DWORD PTR [rip+0xa295],0x1        # 0x40c054
  401dbf:	add    rsp,0x28
  401dc3:	pop    rsi
  401dc4:	pop    rdi
  401dc5:	ret    
  401dc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401dd0:	mov    rdi,r9
  401dd3:	call   0x4045e0
  401dd8:	lea    r9,[rip+0x6311]        # 0x4080f0
  401ddf:	mov    edx,eax
  401de1:	mov    r8d,0x1
  401de7:	mov    rcx,rdi
  401dea:	call   0x4045b8
  401def:	xor    eax,eax
  401df1:	add    rsp,0x28
  401df5:	pop    rsi
  401df6:	pop    rdi
  401df7:	ret    
  401df8:	nop    DWORD PTR [rax+rax*1+0x0]
  401e00:	push   r15
  401e02:	push   r14
  401e04:	push   r13
  401e06:	push   r12
  401e08:	push   rbp
  401e09:	push   rdi
  401e0a:	push   rsi
  401e0b:	push   rbx
  401e0c:	sub    rsp,0x78
  401e10:	mov    rbx,r9
  401e13:	mov    rbp,rcx
  401e16:	mov    rcx,r9
  401e19:	mov    r12,rdx
  401e1c:	mov    r13,r8
  401e1f:	call   0x405cf0
  401e24:	cmp    BYTE PTR [rbx],0x23
  401e27:	mov    r15,rax
  401e2a:	je     0x401e92
  401e2c:	mov    eax,0xffffffff
  401e31:	mov    WORD PTR [r12],ax
  401e36:	mov    rdx,rbx
  401e39:	mov    rcx,rbp
  401e3c:	call   0x4044f8
  401e41:	test   eax,eax
  401e43:	mov    ebx,eax
  401e45:	sete   dil
  401e49:	test   dil,dil
  401e4c:	je     0x401e7f
  401e4e:	cmp    QWORD PTR [rsp+0xe0],0x0
  401e57:	je     0x401e7f
  401e59:	call   0x4045e0
  401e5e:	mov    rcx,QWORD PTR [rsp+0xe0]
  401e66:	lea    r9,[rip+0x62bb]        # 0x408128
  401e6d:	mov    QWORD PTR [rsp+0x20],r13
  401e72:	mov    r8d,0x1
  401e78:	mov    edx,eax
  401e7a:	call   0x4045b8
  401e7f:	mov    eax,ebx
  401e81:	add    rsp,0x78
  401e85:	pop    rbx
  401e86:	pop    rsi
  401e87:	pop    rdi
  401e88:	pop    rbp
  401e89:	pop    r12
  401e8b:	pop    r13
  401e8d:	pop    r14
  401e8f:	pop    r15
  401e91:	ret    
  401e92:	lea    eax,[rax-0x5]
  401e95:	and    eax,0xfffffffb
  401e98:	sete   dil
  401e9c:	cmp    r15d,0x11
  401ea0:	sete   al
  401ea3:	or     dil,al
  401ea6:	je     0x401e2c
  401ea8:	lea    esi,[r15-0x1]
  401eac:	lea    r14,[rsp+0x50]
  401eb1:	lea    r8,[r15+0x1]
  401eb5:	mov    rdx,rbx
  401eb8:	xor    ebx,ebx
  401eba:	mov    eax,esi
  401ebc:	mov    rcx,r14
  401ebf:	sar    eax,0x2
  401ec2:	mov    DWORD PTR [rsp+0x3c],eax
  401ec6:	call   0x405d10
  401ecb:	movsxd rax,DWORD PTR [rsp+0x3c]
  401ed0:	movsxd rcx,r15d
  401ed3:	lea    r8,[rsp+0x4c]
  401ed8:	lea    rdx,[rip+0x6246]        # 0x408125
  401edf:	sub    rcx,rax
  401ee2:	add    rcx,r14
  401ee5:	call   0x405cf8
  401eea:	test   eax,eax
  401eec:	je     0x401e49
  401ef2:	mov    eax,r15d
  401ef5:	sub    eax,DWORD PTR [rsp+0x3c]
  401ef9:	mov    ecx,0x11
  401efe:	sub    ecx,r15d
  401f01:	cdqe   
  401f03:	mov    BYTE PTR [rsp+rax*1+0x50],0x0
  401f08:	mov    eax,DWORD PTR [rsp+0x4c]
  401f0c:	shl    eax,cl
  401f0e:	cmp    esi,0xf
  401f11:	mov    DWORD PTR [rsp+0x4c],eax
  401f15:	jg     0x401f2f
  401f17:	nop    WORD PTR [rax+rax*1+0x0]
  401f20:	mov    edx,eax
  401f22:	mov    ecx,esi
  401f24:	add    esi,esi
  401f26:	shr    edx,cl
  401f28:	or     eax,edx
  401f2a:	cmp    esi,0xf
  401f2d:	jle    0x401f20
  401f2f:	mov    WORD PTR [r12],ax
  401f34:	mov    rbx,r14
  401f37:	jmp    0x401e36
  401f3c:	nop    DWORD PTR [rax+0x0]
  401f40:	sub    rsp,0x38
  401f44:	mov    r8,rcx
  401f47:	mov    QWORD PTR [rsp+0x20],r9
  401f4c:	lea    rcx,[rip+0xa0e1]        # 0x40c034
  401f53:	mov    r9,rdx
  401f56:	lea    rdx,[rip+0x50bb]        # 0x407018
  401f5d:	call   0x401e00
  401f62:	add    rsp,0x38
  401f66:	ret    
  401f67:	nop    WORD PTR [rax+rax*1+0x0]
  401f70:	push   rdi
  401f71:	push   rsi
  401f72:	sub    rsp,0x38
  401f76:	lea    rsi,[rip+0x61fb]        # 0x408178
  401f7d:	mov    DWORD PTR [rip+0xa0a9],0x1        # 0x40c030
  401f87:	mov    r8,rcx
  401f8a:	mov    rdi,rdx
  401f8d:	mov    ecx,0xc
  401f92:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  401f94:	jne    0x401fb0
  401f96:	xor    eax,eax
  401f98:	mov    WORD PTR [rip+0x5071],ax        # 0x407010
  401f9f:	mov    eax,0x1
  401fa4:	add    rsp,0x38
  401fa8:	pop    rsi
  401fa9:	pop    rdi
  401faa:	ret    
  401fab:	nop    DWORD PTR [rax+rax*1+0x0]
  401fb0:	mov    rax,r9
  401fb3:	lea    rcx,[rip+0x5058]        # 0x407012
  401fba:	mov    r9,rdx
  401fbd:	lea    rdx,[rip+0x504c]        # 0x407010
  401fc4:	mov    QWORD PTR [rsp+0x20],rax
  401fc9:	call   0x401e00
  401fce:	add    rsp,0x38
  401fd2:	pop    rsi
  401fd3:	pop    rdi
  401fd4:	ret    
  401fd5:	nop
  401fd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401fe0:	push   rsi
  401fe1:	push   rbx
  401fe2:	sub    rsp,0x28
  401fe6:	xor    ecx,ecx
  401fe8:	call   0x404540
  401fed:	mov    rsi,QWORD PTR [rip+0x73cc]        # 0x4093c0
  401ff4:	mov    rbx,rax
  401ff7:	mov    rax,QWORD PTR [rsi]
  401ffa:	test   rax,rax
  401ffd:	jne    0x402023
  401fff:	jmp    0x402063
  402001:	mov    rcx,QWORD PTR [rbx]
  402004:	mov    QWORD PTR [rbx+0x8],rdx
  402008:	mov    BYTE PTR [rcx+rax*1],0x2f
  40200c:	mov    rdx,QWORD PTR [rbx]
  40200f:	mov    rax,QWORD PTR [rbx+0x8]
  402013:	mov    BYTE PTR [rdx+rax*1],0x0
  402017:	add    rsi,0x8
  40201b:	mov    rax,QWORD PTR [rsi]
  40201e:	test   rax,rax
  402021:	je     0x402063
  402023:	mov    rdx,QWORD PTR [rax+0x8]
  402027:	test   rdx,rdx
  40202a:	je     0x402017
  40202c:	mov    rcx,rbx
  40202f:	call   0x404560
  402034:	mov    rax,QWORD PTR [rbx+0x8]
  402038:	lea    rdx,[rax+0x1]
  40203c:	cmp    rdx,QWORD PTR [rbx+0x10]
  402040:	jb     0x402001
  402042:	add    rsi,0x8
  402046:	mov    r8d,0x2f
  40204c:	mov    rdx,0xffffffffffffffff
  402053:	mov    rcx,rbx
  402056:	call   0x404548
  40205b:	mov    rax,QWORD PTR [rsi]
  40205e:	test   rax,rax
  402061:	jne    0x402023
  402063:	mov    rcx,QWORD PTR [rbx+0x8]
  402067:	lea    edx,[rcx-0x1]
  40206a:	test   ecx,ecx
  40206c:	mov    rcx,rbx
  40206f:	movsxd rax,edx
  402072:	mov    edx,0x0
  402077:	cmovg  rdx,rax
  40207b:	call   0x404538
  402080:	xor    edx,edx
  402082:	mov    rcx,rbx
  402085:	add    rsp,0x28
  402089:	pop    rbx
  40208a:	pop    rsi
  40208b:	jmp    0x404550
  402090:	push   rdi
  402091:	push   rsi
  402092:	push   rbx
  402093:	sub    rsp,0x30
  402097:	mov    rbx,QWORD PTR [rip+0x7322]        # 0x4093c0
  40209e:	mov    rsi,rdx
  4020a1:	mov    rdi,r9
  4020a4:	mov    rax,QWORD PTR [rbx]
  4020a7:	test   rax,rax
  4020aa:	jne    0x4020bc
  4020ac:	jmp    0x4020f0
  4020ae:	xchg   ax,ax
  4020b0:	add    rbx,0x8
  4020b4:	mov    rax,QWORD PTR [rbx]
  4020b7:	test   rax,rax
  4020ba:	je     0x4020f0
  4020bc:	mov    rcx,QWORD PTR [rax+0x8]
  4020c0:	mov    rdx,rsi
  4020c3:	call   0x404638
  4020c8:	test   eax,eax
  4020ca:	jne    0x4020b0
  4020cc:	mov    rax,QWORD PTR [rbx]
  4020cf:	test   rax,rax
  4020d2:	je     0x4020f0
  4020d4:	mov    QWORD PTR [rip+0x9f6d],rax        # 0x40c048
  4020db:	mov    eax,0x1
  4020e0:	add    rsp,0x30
  4020e4:	pop    rbx
  4020e5:	pop    rsi
  4020e6:	pop    rdi
  4020e7:	ret    
  4020e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4020f0:	call   0x401fe0
  4020f5:	mov    rbx,rax
  4020f8:	call   0x4045e0
  4020fd:	lea    r9,[rip+0x6084]        # 0x408188
  402104:	mov    edx,eax
  402106:	mov    r8d,0x1
  40210c:	mov    rcx,rdi
  40210f:	mov    QWORD PTR [rsp+0x20],rbx
  402114:	call   0x4045b8
  402119:	mov    rcx,rbx
  40211c:	call   0x404618
  402121:	xor    eax,eax
  402123:	add    rsp,0x30
  402127:	pop    rbx
  402128:	pop    rsi
  402129:	pop    rdi
  40212a:	ret    
  40212b:	nop    DWORD PTR [rax+rax*1+0x0]
  402130:	push   rbx
  402131:	sub    rsp,0x30
  402135:	mov    QWORD PTR [rsp+0x48],rdx
  40213a:	lea    rdx,[rsp+0x48]
  40213f:	mov    QWORD PTR [rsp+0x50],r8
  402144:	mov    QWORD PTR [rsp+0x58],r9
  402149:	mov    QWORD PTR [rsp+0x28],rdx
  40214e:	call   0x404570
  402153:	mov    rbx,rax
  402156:	call   0x404610
  40215b:	lea    rcx,[rip+0x604a]        # 0x4081ac
  402162:	mov    rdx,rax
  402165:	mov    r8,rbx
  402168:	call   0x4045c8
  40216d:	mov    ecx,0x1
  402172:	call   0x405d40
  402177:	nop
  402178:	nop    DWORD PTR [rax+rax*1+0x0]
  402180:	push   rdi
  402181:	push   rsi
  402182:	push   rbx
  402183:	sub    rsp,0x20
  402187:	mov    rcx,QWORD PTR [rip+0x4eb2]        # 0x407040
  40218e:	call   0x404498
  402193:	mov    rbx,rax
  402196:	mov    eax,DWORD PTR [rip+0x9ed4]        # 0x40c070
  40219c:	test   eax,eax
  40219e:	je     0x4021ad
  4021a0:	mov    edx,0x20
  4021a5:	mov    rcx,rbx
  4021a8:	call   0x404480
  4021ad:	mov    rcx,rbx
  4021b0:	call   0x404488
  4021b5:	mov    r8,rax
  4021b8:	mov    rsi,rax
  4021bb:	mov    rax,QWORD PTR [rip+0x9e86]        # 0x40c048
  4021c2:	mov    r9d,DWORD PTR [rip+0x4e7f]        # 0x407048
  4021c9:	lea    rcx,[rip+0x5fe4]        # 0x4081b4
  4021d0:	mov    rdx,QWORD PTR [rax]
  4021d3:	call   0x404578
  4021d8:	mov    rcx,rbx
  4021db:	mov    rdi,rax
  4021de:	call   0x4044a0
  4021e3:	mov    rcx,rsi
  4021e6:	call   0x404618
  4021eb:	mov    rax,rdi
  4021ee:	add    rsp,0x20
  4021f2:	pop    rbx
  4021f3:	pop    rsi
  4021f4:	pop    rdi
  4021f5:	ret    
  4021f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402200:	push   r15
  402202:	push   r14
  402204:	push   r13
  402206:	push   r12
  402208:	push   rbp
  402209:	push   rdi
  40220a:	push   rsi
  40220b:	push   rbx
  40220c:	sub    rsp,0xd8
  402213:	movaps XMMWORD PTR [rsp+0xc0],xmm6
  40221b:	pxor   xmm6,xmm6
  40221f:	mov    rbx,rcx
  402222:	mov    r14,r8
  402225:	mov    rbp,r9
  402228:	mov    eax,DWORD PTR [rip+0x4e02]        # 0x407030
  40222e:	movsd  xmm3,QWORD PTR [rip+0x66f2]        # 0x408928
  402236:	mov    QWORD PTR [rsp+0x128],rdx
  40223e:	movsd  QWORD PTR [rsp+0x98],xmm6
  402247:	movsd  QWORD PTR [rsp+0x90],xmm3
  402250:	mov    DWORD PTR [rsp+0x50],eax
  402254:	movsd  QWORD PTR [rsp+0xa8],xmm3
  40225d:	mov    eax,DWORD PTR [rip+0x4dd9]        # 0x40703c
  402263:	movsd  QWORD PTR [rsp+0xa0],xmm6
  40226c:	movsd  QWORD PTR [rsp+0xb0],xmm6
  402275:	movsd  QWORD PTR [rsp+0xb8],xmm6
  40227e:	mov    DWORD PTR [rsp+0x4c],eax
  402282:	call   0x4044e0
  402287:	mov    rcx,rax
  40228a:	call   0x404380
  40228f:	test   rax,rax
  402292:	mov    rdi,rax
  402295:	je     0x4022a3
  402297:	ucomisd xmm6,QWORD PTR [rax]
  40229b:	jp     0x4022a3
  40229d:	je     0x402550
  4022a3:	mov    r12d,0x1
  4022a9:	mov    r9,QWORD PTR [rsp+0x140]
  4022b1:	mov    rcx,rbx
  4022b4:	mov    QWORD PTR [rsp+0x20],0x0
  4022bd:	mov    r8,rbp
  4022c0:	mov    rdx,r14
  4022c3:	call   0x401530
  4022c8:	mov    rcx,QWORD PTR [rip+0x9d71]        # 0x40c040
  4022cf:	test   rcx,rcx
  4022d2:	je     0x4025c1
  4022d8:	call   0x404458
  4022dd:	mov    rdx,rax
  4022e0:	mov    rcx,rbx
  4022e3:	call   0x4044c0
  4022e8:	mov    eax,DWORD PTR [rip+0x9d9a]        # 0x40c088
  4022ee:	xor    edx,edx
  4022f0:	mov    rcx,rbx
  4022f3:	test   eax,eax
  4022f5:	setne  dl
  4022f8:	call   0x4044d8
  4022fd:	mov    edx,DWORD PTR [rip+0x9d95]        # 0x40c098
  402303:	test   edx,edx
  402305:	jne    0x4025d0
  40230b:	lea    rax,[rsp+0x80]
  402313:	mov    DWORD PTR [rsp+0x54],0x0
  40231b:	xor    esi,esi
  40231d:	mov    QWORD PTR [rsp+0x58],rax
  402322:	movsd  xmm1,QWORD PTR [rip+0x9d56]        # 0x40c080
  40232a:	ucomisd xmm1,xmm6
  40232e:	jp     0x402530
  402334:	jne    0x402530
  40233a:	lea    r13,[rsp+0x90]
  402342:	mov    edx,DWORD PTR [rip+0x9d14]        # 0x40c05c
  402348:	mov    rcx,rbx
  40234b:	call   0x4044d0
  402350:	mov    edx,DWORD PTR [rip+0x9d02]        # 0x40c058
  402356:	mov    rcx,rbx
  402359:	call   0x4044c8
  40235e:	mov    rdx,QWORD PTR [rip+0x9d43]        # 0x40c0a8
  402365:	movsd  xmm2,QWORD PTR [rip+0x65cb]        # 0x408938
  40236d:	mov    rcx,rbx
  402370:	call   0x401580
  402375:	mov    r9,QWORD PTR [rsp+0x140]
  40237d:	mov    r8,rbp
  402380:	mov    rdx,r14
  402383:	mov    rcx,rbx
  402386:	mov    QWORD PTR [rsp+0x20],r13
  40238b:	mov    r15,rax
  40238e:	call   0x401530
  402393:	lea    r11,[rsp+0x7c]
  402398:	lea    r10,[rsp+0x78]
  40239d:	xor    r9d,r9d
  4023a0:	xor    r8d,r8d
  4023a3:	xor    edx,edx
  4023a5:	mov    rcx,r15
  4023a8:	mov    QWORD PTR [rsp+0x28],r11
  4023ad:	mov    QWORD PTR [rsp+0x20],r10
  4023b2:	mov    DWORD PTR [rsp+0x30],r12d
  4023b7:	mov    QWORD PTR [rsp+0x68],r11
  4023bc:	mov    QWORD PTR [rsp+0x60],r10
  4023c1:	call   0x401750
  4023c6:	mov    eax,DWORD PTR [rsp+0x78]
  4023ca:	mov    rdx,QWORD PTR [rsp+0x58]
  4023cf:	mov    rcx,r13
  4023d2:	mov    DWORD PTR [rsp+0x84],0x0
  4023dd:	mov    DWORD PTR [rsp+0x80],0x0
  4023e8:	mov    DWORD PTR [rsp+0x88],eax
  4023ef:	mov    eax,DWORD PTR [rsp+0x7c]
  4023f3:	mov    DWORD PTR [rsp+0x8c],eax
  4023fa:	call   0x404368
  4023ff:	mov    eax,DWORD PTR [rsp+0x50]
  402403:	sub    eax,DWORD PTR [rsp+0x80]
  40240a:	mov    r8,rbp
  40240d:	pxor   xmm0,xmm0
  402411:	mov    r9,QWORD PTR [rsp+0x140]
  402419:	mov    QWORD PTR [rsp+0x20],r13
  40241e:	mov    rdx,r14
  402421:	mov    rcx,rbx
  402424:	cvtsi2sd xmm0,eax
  402428:	mov    eax,DWORD PTR [rsp+0x4c]
  40242c:	sub    eax,DWORD PTR [rsp+0x84]
  402433:	movsd  QWORD PTR [rsp+0xb0],xmm0
  40243c:	pxor   xmm0,xmm0
  402440:	cvtsi2sd xmm0,eax
  402444:	movsd  QWORD PTR [rsp+0xb8],xmm0
  40244d:	call   0x401530
  402452:	cmp    QWORD PTR [rsp+0x128],0x0
  40245b:	je     0x402491
  40245d:	mov    r11,QWORD PTR [rsp+0x68]
  402462:	mov    r10,QWORD PTR [rsp+0x60]
  402467:	mov    r8,rbp
  40246a:	mov    r9,QWORD PTR [rsp+0x140]
  402472:	mov    rdx,QWORD PTR [rsp+0x128]
  40247a:	mov    rcx,r15
  40247d:	mov    DWORD PTR [rsp+0x30],r12d
  402482:	mov    QWORD PTR [rsp+0x28],r11
  402487:	mov    QWORD PTR [rsp+0x20],r10
  40248c:	call   0x401750
  402491:	mov    eax,DWORD PTR [rsp+0x88]
  402498:	mov    edx,DWORD PTR [rip+0x4b9a]        # 0x407038
  40249e:	cmp    esi,eax
  4024a0:	cmovl  esi,eax
  4024a3:	add    edx,DWORD PTR [rip+0x4b87]        # 0x407030
  4024a9:	mov    eax,DWORD PTR [rsp+0x54]
  4024ad:	add    eax,DWORD PTR [rsp+0x8c]
  4024b4:	add    esi,edx
  4024b6:	mov    edx,DWORD PTR [rip+0x4b78]        # 0x407034
  4024bc:	add    edx,DWORD PTR [rip+0x4b7a]        # 0x40703c
  4024c2:	add    eax,edx
  4024c4:	cmp    QWORD PTR [rsp+0x148],0x0
  4024cd:	je     0x4024d9
  4024cf:	mov    rcx,QWORD PTR [rsp+0x148]
  4024d7:	mov    DWORD PTR [rcx],esi
  4024d9:	cmp    QWORD PTR [rsp+0x150],0x0
  4024e2:	je     0x4024ee
  4024e4:	mov    rsi,QWORD PTR [rsp+0x150]
  4024ec:	mov    DWORD PTR [rsi],eax
  4024ee:	mov    rdx,rdi
  4024f1:	mov    rcx,rbx
  4024f4:	call   0x4044b8
  4024f9:	mov    rcx,rdi
  4024fc:	call   0x404378
  402501:	mov    rcx,r15
  402504:	call   0x404530
  402509:	nop
  40250a:	movaps xmm6,XMMWORD PTR [rsp+0xc0]
  402512:	add    rsp,0xd8
  402519:	pop    rbx
  40251a:	pop    rsi
  40251b:	pop    rdi
  40251c:	pop    rbp
  40251d:	pop    r12
  40251f:	pop    r13
  402521:	pop    r14
  402523:	pop    r15
  402525:	ret    
  402526:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402530:	test   r12d,r12d
  402533:	je     0x4025b0
  402535:	lea    r13,[rsp+0x90]
  40253d:	mov    rcx,r13
  402540:	call   0x404370
  402545:	jmp    0x402342
  40254a:	nop    WORD PTR [rax+rax*1+0x0]
  402550:	ucomisd xmm6,QWORD PTR [rax+0x8]
  402555:	jp     0x4022a3
  40255b:	jne    0x4022a3
  402561:	ucomisd xmm6,QWORD PTR [rax+0x10]
  402566:	jp     0x4022a3
  40256c:	jne    0x4022a3
  402572:	ucomisd xmm6,QWORD PTR [rax+0x18]
  402577:	jp     0x4022a3
  40257d:	jne    0x4022a3
  402583:	ucomisd xmm6,QWORD PTR [rax+0x20]
  402588:	jp     0x4022a3
  40258e:	jne    0x4022a3
  402594:	xor    edx,edx
  402596:	ucomisd xmm6,QWORD PTR [rax+0x28]
  40259b:	mov    eax,0x1
  4025a0:	setp   dl
  4025a3:	cmove  eax,edx
  4025a6:	mov    r12d,eax
  4025a9:	jmp    0x4022a9
  4025ae:	xchg   ax,ax
  4025b0:	lea    rcx,[rip+0x5c11]        # 0x4081c8
  4025b7:	call   0x4045c8
  4025bc:	jmp    0x40233a
  4025c1:	call   0x404450
  4025c6:	mov    rdx,rax
  4025c9:	jmp    0x4022e0
  4025ce:	xchg   ax,ax
  4025d0:	call   0x402180
  4025d5:	xor    edx,edx
  4025d7:	mov    rcx,rbx
  4025da:	mov    r13,rax
  4025dd:	call   0x4044d0
  4025e2:	movsd  xmm2,QWORD PTR [rip+0x6346]        # 0x408930
  4025ea:	mov    rdx,r13
  4025ed:	mov    rcx,rbx
  4025f0:	call   0x401580
  4025f5:	mov    r15,rax
  4025f8:	lea    rax,[rsp+0x80]
  402600:	xor    edx,edx
  402602:	mov    rcx,r15
  402605:	mov    r8,rax
  402608:	mov    QWORD PTR [rsp+0x58],rax
  40260d:	call   0x404438
  402612:	mov    eax,DWORD PTR [rsp+0x88]
  402619:	lea    esi,[rax+0x200]
  40261f:	mov    eax,0x0
  402624:	sar    esi,0xa
  402627:	test   esi,esi
  402629:	cmovs  esi,eax
  40262c:	mov    eax,DWORD PTR [rsp+0x8c]
  402633:	add    eax,0x200
  402638:	sar    eax,0xa
  40263b:	cmp    QWORD PTR [rsp+0x128],0x0
  402644:	mov    DWORD PTR [rsp+0x54],eax
  402648:	je     0x40267c
  40264a:	mov    rax,QWORD PTR [rsp+0x140]
  402652:	mov    r9,rbp
  402655:	mov    r8d,DWORD PTR [rsp+0x4c]
  40265a:	mov    edx,DWORD PTR [rsp+0x50]
  40265e:	mov    rcx,r15
  402661:	mov    QWORD PTR [rsp+0x20],rax
  402666:	call   QWORD PTR [rsp+0x128]
  40266d:	mov    eax,DWORD PTR [rsp+0x8c]
  402674:	add    eax,0x200
  402679:	sar    eax,0xa
  40267c:	mov    rcx,r15
  40267f:	add    DWORD PTR [rsp+0x4c],eax
  402683:	call   0x404530
  402688:	mov    rcx,r13
  40268b:	call   0x404618
  402690:	jmp    0x402322
  402695:	nop
  402696:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4026a0:	push   r12
  4026a2:	push   rbp
  4026a3:	push   rdi
  4026a4:	push   rsi
  4026a5:	push   rbx
  4026a6:	sub    rsp,0x660
  4026ad:	mov    QWORD PTR [rsp+0x698],rdx
  4026b5:	mov    DWORD PTR [rsp+0x690],ecx
  4026bc:	call   0x401fe0
  4026c1:	mov    rsi,QWORD PTR [rip+0x6cf8]        # 0x4093c0
  4026c8:	mov    rbp,rax
  4026cb:	mov    rdx,QWORD PTR [rsi]
  4026ce:	test   rdx,rdx
  4026d1:	je     0x40310c
  4026d7:	mov    rax,rsi
  4026da:	xor    ecx,ecx
  4026dc:	nop    DWORD PTR [rax+0x0]
  4026e0:	cmp    QWORD PTR [rdx+0x8],0x1
  4026e5:	sbb    ecx,0xffffffff
  4026e8:	add    rax,0x8
  4026ec:	mov    rdx,QWORD PTR [rax]
  4026ef:	test   rdx,rdx
  4026f2:	jne    0x4026e0
  4026f4:	xor    ebx,ebx
  4026f6:	cmp    ecx,0x1
  4026f9:	setle  bl
  4026fc:	lea    rcx,[rip+0x5af5]        # 0x4081f8
  402703:	call   0x404540
  402708:	mov    r10,QWORD PTR [rsi]
  40270b:	mov    rdi,rax
  40270e:	test   r10,r10
  402711:	je     0x402745
  402713:	mov    r8,r10
  402716:	mov    rdx,rsi
  402719:	xor    r9d,r9d
  40271c:	nop    DWORD PTR [rax+0x0]
  402720:	cmp    QWORD PTR [r8+0x8],0x1
  402725:	sbb    r9d,0xffffffff
  402729:	add    rdx,0x8
  40272d:	mov    r8,QWORD PTR [rdx]
  402730:	test   r8,r8
  402733:	jne    0x402720
  402735:	cmp    r9d,0x1
  402739:	jg     0x403000
  40273f:	je     0x403080
  402745:	lea    rdx,[rip+0x5af3]        # 0x40823f
  40274c:	mov    rcx,rdi
  40274f:	call   0x404558
  402754:	xor    edx,edx
  402756:	mov    rcx,rdi
  402759:	lea    rdi,[rsp+0x60]
  40275e:	call   0x404550
  402763:	mov    ecx,0xc0
  402768:	mov    r12,rax
  40276b:	xor    eax,eax
  40276d:	rep stos QWORD PTR es:[rdi],rax
  402770:	lea    rax,[rip+0x5add]        # 0x408254
  402777:	mov    DWORD PTR [rsp+0x9c],ebx
  40277e:	mov    DWORD PTR [rsp+0x6c],0x4
  402786:	mov    DWORD PTR [rsp+0xa0],0x3
  402791:	mov    QWORD PTR [rsp+0xb0],r12
  402799:	lea    rcx,[rip+0x60c9]        # 0x408869
  4027a0:	mov    QWORD PTR [rsp+0x60],rax
  4027a5:	lea    rax,[rip+0x4880]        # 0x40702c
  4027ac:	mov    QWORD PTR [rsp+0xb8],rbp
  4027b4:	mov    DWORD PTR [rsp+0xd0],0x3
  4027bf:	mov    BYTE PTR [rsp+0xf8],0x71
  4027c7:	mov    rbx,rsi
  4027ca:	mov    QWORD PTR [rsp+0x78],rax
  4027cf:	lea    rax,[rip+0x5a8a]        # 0x408260
  4027d6:	mov    DWORD PTR [rsp+0xfc],0x4
  4027e1:	mov    DWORD PTR [rsp+0x130],0x2
  4027ec:	mov    DWORD PTR [rsp+0x160],0x3
  4027f7:	mov    QWORD PTR [rsp+0x80],rax
  4027ff:	lea    rax,[rip+0x5a84]        # 0x40828a
  402806:	mov    DWORD PTR [rsp+0x190],0x3
  402811:	mov    QWORD PTR [rsp+0x90],rax
  402819:	lea    rax,[rip+0xfffffffffffff870]        # 0x402090
  402820:	mov    QWORD PTR [rsp+0xa8],rax
  402828:	lea    rax,[rip+0x5a63]        # 0x408292
  40282f:	mov    QWORD PTR [rsp+0xc0],rax
  402837:	lea    rax,[rip+0xfffffffffffff732]        # 0x401f70
  40283e:	mov    QWORD PTR [rsp+0xd8],rax
  402846:	lea    rax,[rip+0x5a50]        # 0x40829d
  40284d:	mov    QWORD PTR [rsp+0xe0],rax
  402855:	lea    rax,[rip+0x5a5c]        # 0x4082b8
  40285c:	mov    QWORD PTR [rsp+0xe8],rax
  402864:	lea    rax,[rip+0x5a6f]        # 0x4082da
  40286b:	mov    QWORD PTR [rsp+0xf0],rax
  402873:	lea    rax,[rip+0x47d2]        # 0x40704c
  40287a:	mov    QWORD PTR [rsp+0x108],rax
  402882:	lea    rax,[rip+0x5a5f]        # 0x4082e8
  402889:	mov    QWORD PTR [rsp+0x110],rax
  402891:	lea    rax,[rip+0x5a80]        # 0x408318
  402898:	mov    QWORD PTR [rsp+0x120],rax
  4028a0:	lea    rax,[rip+0x47a1]        # 0x407048
  4028a7:	mov    QWORD PTR [rsp+0x138],rax
  4028af:	lea    rax,[rip+0x5a66]        # 0x40831c
  4028b6:	mov    QWORD PTR [rsp+0x140],rax
  4028be:	lea    rax,[rip+0x5a6a]        # 0x40832f
  4028c5:	mov    QWORD PTR [rsp+0x148],rax
  4028cd:	lea    rax,[rip+0x5a62]        # 0x408336
  4028d4:	mov    QWORD PTR [rsp+0x150],rax
  4028dc:	lea    rax,[rip+0xfffffffffffff34d]        # 0x401c30
  4028e3:	mov    QWORD PTR [rsp+0x168],rax
  4028eb:	lea    rax,[rip+0x5a4a]        # 0x40833c
  4028f2:	mov    QWORD PTR [rsp+0x170],rax
  4028fa:	lea    rax,[rip+0x5a4a]        # 0x40834b
  402901:	mov    QWORD PTR [rsp+0x178],rax
  402909:	lea    rax,[rip+0x5a4d]        # 0x40835d
  402910:	mov    QWORD PTR [rsp+0x180],rax
  402918:	lea    rax,[rip+0xfffffffffffff2d1]        # 0x401bf0
  40291f:	mov    QWORD PTR [rsp+0x198],rax
  402927:	lea    rax,[rip+0x5a39]        # 0x408367
  40292e:	mov    DWORD PTR [rsp+0x1c0],0x1
  402939:	mov    DWORD PTR [rsp+0x1f0],0x3
  402944:	mov    DWORD PTR [rsp+0x220],0x3
  40294f:	mov    QWORD PTR [rsp+0x1a0],rax
  402957:	lea    rax,[rip+0x5a1c]        # 0x40837a
  40295e:	mov    DWORD PTR [rsp+0x250],0x3
  402969:	mov    DWORD PTR [rsp+0x2b0],0x2
  402974:	mov    DWORD PTR [rsp+0x2e0],0x3
  40297f:	mov    QWORD PTR [rsp+0x1a8],rax
  402987:	lea    rax,[rip+0x59fd]        # 0x40838b
  40298e:	mov    QWORD PTR [rsp+0x1b0],rax
  402996:	lea    rax,[rip+0x46a3]        # 0x407040
  40299d:	mov    QWORD PTR [rsp+0x1c8],rax
  4029a5:	lea    rax,[rip+0x59e4]        # 0x408390
  4029ac:	mov    QWORD PTR [rsp+0x1d0],rax
  4029b4:	lea    rax,[rip+0x59ee]        # 0x4083a9
  4029bb:	mov    QWORD PTR [rsp+0x1d8],rax
  4029c3:	lea    rax,[rip+0x59eb]        # 0x4083b5
  4029ca:	mov    QWORD PTR [rsp+0x1e0],rax
  4029d2:	lea    rax,[rip+0xfffffffffffff567]        # 0x401f40
  4029d9:	mov    QWORD PTR [rsp+0x1f8],rax
  4029e1:	lea    rax,[rip+0x59d8]        # 0x4083c0
  4029e8:	mov    QWORD PTR [rsp+0x200],rax
  4029f0:	lea    rax,[rip+0x59dc]        # 0x4083d3
  4029f7:	mov    QWORD PTR [rsp+0x208],rax
  4029ff:	lea    rax,[rip+0x59e3]        # 0x4083e9
  402a06:	mov    QWORD PTR [rsp+0x210],rax
  402a0e:	lea    rax,[rip+0xfffffffffffff19b]        # 0x401bb0
  402a15:	mov    QWORD PTR [rsp+0x228],rax
  402a1d:	lea    rax,[rip+0x59cd]        # 0x4083f1
  402a24:	mov    QWORD PTR [rsp+0x230],rax
  402a2c:	lea    rax,[rip+0x59db]        # 0x40840e
  402a33:	mov    QWORD PTR [rsp+0x238],rax
  402a3b:	lea    rax,[rip+0x59e7]        # 0x408429
  402a42:	mov    QWORD PTR [rsp+0x240],rax
  402a4a:	lea    rax,[rip+0xfffffffffffff11f]        # 0x401b70
  402a51:	mov    QWORD PTR [rsp+0x258],rax
  402a59:	lea    rax,[rip+0x59d6]        # 0x408436
  402a60:	mov    QWORD PTR [rsp+0x260],rax
  402a68:	lea    rax,[rip+0x59d4]        # 0x408443
  402a6f:	mov    QWORD PTR [rsp+0x268],rax
  402a77:	lea    rax,[rip+0x59d9]        # 0x408457
  402a7e:	mov    QWORD PTR [rsp+0x270],rax
  402a86:	lea    rax,[rip+0x960b]        # 0x40c098
  402a8d:	mov    QWORD PTR [rsp+0x288],rax
  402a95:	lea    rax,[rip+0x59c4]        # 0x408460
  402a9c:	mov    QWORD PTR [rsp+0x290],rax
  402aa4:	lea    rax,[rip+0x59d7]        # 0x408482
  402aab:	mov    QWORD PTR [rsp+0x2a0],rax
  402ab3:	lea    rax,[rip+0x456a]        # 0x407024
  402aba:	mov    QWORD PTR [rsp+0x2b8],rax
  402ac2:	lea    rax,[rip+0x59c7]        # 0x408490
  402ac9:	mov    QWORD PTR [rsp+0x2c0],rax
  402ad1:	lea    rax,[rip+0x5a02]        # 0x4084da
  402ad8:	mov    QWORD PTR [rsp+0x2c8],rax
  402ae0:	lea    rax,[rip+0x5a05]        # 0x4084ec
  402ae7:	mov    QWORD PTR [rsp+0x2d0],rax
  402aef:	lea    rax,[rip+0xfffffffffffff24a]        # 0x401d40
  402af6:	mov    QWORD PTR [rsp+0x2e8],rax
  402afe:	lea    rax,[rip+0x59ef]        # 0x4084f4
  402b05:	mov    QWORD PTR [rsp+0x2f0],rax
  402b0d:	lea    rax,[rip+0x59ee]        # 0x408502
  402b14:	mov    DWORD PTR [rsp+0x310],0x2
  402b1f:	mov    DWORD PTR [rsp+0x370],0x1
  402b2a:	mov    DWORD PTR [rsp+0x3a0],0x3
  402b35:	mov    QWORD PTR [rsp+0x2f8],rax
  402b3d:	lea    rax,[rip+0x59cd]        # 0x408511
  402b44:	mov    BYTE PTR [rsp+0x3f8],0x6f
  402b4c:	mov    DWORD PTR [rsp+0x400],0x1
  402b57:	mov    DWORD PTR [rsp+0x42c],0x1
  402b62:	mov    QWORD PTR [rsp+0x300],rax
  402b6a:	lea    rax,[rip+0x94fb]        # 0x40c06c
  402b71:	mov    DWORD PTR [rsp+0x430],0x1
  402b7c:	mov    QWORD PTR [rsp+0x318],rax
  402b84:	lea    rax,[rip+0x598d]        # 0x408518
  402b8b:	mov    QWORD PTR [rsp+0x320],rax
  402b93:	lea    rax,[rip+0x59a3]        # 0x40853d
  402b9a:	mov    QWORD PTR [rsp+0x328],rax
  402ba2:	lea    rax,[rip+0x599b]        # 0x408544
  402ba9:	mov    QWORD PTR [rsp+0x330],rax
  402bb1:	lea    rax,[rip+0x94b0]        # 0x40c068
  402bb8:	mov    QWORD PTR [rsp+0x348],rax
  402bc0:	lea    rax,[rip+0x5989]        # 0x408550
  402bc7:	mov    QWORD PTR [rsp+0x350],rax
  402bcf:	lea    rax,[rip+0x59a0]        # 0x408576
  402bd6:	mov    QWORD PTR [rsp+0x360],rax
  402bde:	lea    rax,[rip+0x945b]        # 0x40c040
  402be5:	mov    QWORD PTR [rsp+0x378],rax
  402bed:	lea    rax,[rip+0x598c]        # 0x408580
  402bf4:	mov    QWORD PTR [rsp+0x380],rax
  402bfc:	lea    rax,[rip+0x59a0]        # 0x4085a3
  402c03:	mov    QWORD PTR [rsp+0x388],rax
  402c0b:	lea    rax,[rip+0x599b]        # 0x4085ad
  402c12:	mov    QWORD PTR [rsp+0x390],rax
  402c1a:	lea    rax,[rip+0xfffffffffffff04f]        # 0x401c70
  402c21:	mov    QWORD PTR [rsp+0x3a8],rax
  402c29:	lea    rax,[rip+0x5988]        # 0x4085b8
  402c30:	mov    QWORD PTR [rsp+0x3b0],rax
  402c38:	lea    rax,[rip+0x59a0]        # 0x4085df
  402c3f:	mov    QWORD PTR [rsp+0x3b8],rax
  402c47:	lea    rax,[rip+0x59ad]        # 0x4085fb
  402c4e:	mov    QWORD PTR [rsp+0x3c0],rax
  402c56:	lea    rax,[rip+0x942f]        # 0x40c08c
  402c5d:	mov    QWORD PTR [rsp+0x3d8],rax
  402c65:	lea    rax,[rip+0x599c]        # 0x408608
  402c6c:	mov    QWORD PTR [rsp+0x3e0],rax
  402c74:	lea    rax,[rip+0x59ac]        # 0x408627
  402c7b:	mov    QWORD PTR [rsp+0x3f0],rax
  402c83:	lea    rax,[rip+0x9406]        # 0x40c090
  402c8a:	mov    QWORD PTR [rsp+0x408],rax
  402c92:	lea    rax,[rip+0x5997]        # 0x408630
  402c99:	mov    QWORD PTR [rsp+0x410],rax
  402ca1:	lea    rax,[rip+0x59ab]        # 0x408653
  402ca8:	mov    QWORD PTR [rsp+0x418],rax
  402cb0:	lea    rax,[rip+0x59a1]        # 0x408658
  402cb7:	mov    QWORD PTR [rsp+0x420],rax
  402cbf:	lea    rax,[rip+0x93ea]        # 0x40c0b0
  402cc6:	mov    QWORD PTR [rsp+0x438],rax
  402cce:	lea    rax,[rip+0x598b]        # 0x408660
  402cd5:	mov    QWORD PTR [rsp+0x440],rax
  402cdd:	lea    rax,[rip+0x596f]        # 0x408653
  402ce4:	mov    QWORD PTR [rsp+0x448],rax
  402cec:	lea    rax,[rip+0x5978]        # 0x40866b
  402cf3:	mov    DWORD PTR [rsp+0x4c0],0x7
  402cfe:	mov    BYTE PTR [rsp+0x4e8],0x6e
  402d06:	mov    DWORD PTR [rsp+0x4f0],0x2
  402d11:	mov    QWORD PTR [rsp+0x450],rax
  402d19:	lea    rax,[rip+0x937c]        # 0x40c09c
  402d20:	mov    BYTE PTR [rsp+0x548],0x74
  402d28:	mov    DWORD PTR [rsp+0x550],0x1
  402d33:	mov    DWORD PTR [rsp+0x57c],0x8
  402d3e:	mov    QWORD PTR [rsp+0x468],rax
  402d46:	lea    rax,[rip+0x592b]        # 0x408678
  402d4d:	mov    DWORD PTR [rsp+0x580],0x3
  402d58:	mov    QWORD PTR [rsp+0x470],rax
  402d60:	lea    rax,[rip+0x5944]        # 0x4086ab
  402d67:	mov    QWORD PTR [rsp+0x480],rax
  402d6f:	lea    rax,[rip+0x9312]        # 0x40c088
  402d76:	mov    QWORD PTR [rsp+0x498],rax
  402d7e:	lea    rax,[rip+0x592b]        # 0x4086b0
  402d85:	mov    QWORD PTR [rsp+0x4a0],rax
  402d8d:	lea    rax,[rip+0x5940]        # 0x4086d4
  402d94:	mov    QWORD PTR [rsp+0x4b0],rax
  402d9c:	lea    rax,[rip+0x92dd]        # 0x40c080
  402da3:	mov    QWORD PTR [rsp+0x4c8],rax
  402dab:	lea    rax,[rip+0x592e]        # 0x4086e0
  402db2:	mov    QWORD PTR [rsp+0x4d0],rax
  402dba:	lea    rax,[rip+0x5940]        # 0x408701
  402dc1:	mov    QWORD PTR [rsp+0x4d8],rax
  402dc9:	lea    rax,[rip+0x5939]        # 0x408709
  402dd0:	mov    QWORD PTR [rsp+0x4e0],rax
  402dd8:	lea    rax,[rip+0x4241]        # 0x407020
  402ddf:	mov    QWORD PTR [rsp+0x4f8],rax
  402de7:	lea    rax,[rip+0x5922]        # 0x408710
  402dee:	mov    QWORD PTR [rsp+0x500],rax
  402df6:	lea    rax,[rip+0x593b]        # 0x408738
  402dfd:	mov    QWORD PTR [rsp+0x508],rax
  402e05:	lea    rax,[rip+0x5934]        # 0x408740
  402e0c:	mov    QWORD PTR [rsp+0x510],rax
  402e14:	lea    rax,[rip+0x9221]        # 0x40c03c
  402e1b:	mov    QWORD PTR [rsp+0x528],rax
  402e23:	lea    rax,[rip+0x5921]        # 0x40874b
  402e2a:	mov    QWORD PTR [rsp+0x530],rax
  402e32:	lea    rax,[rip+0x592f]        # 0x408768
  402e39:	mov    QWORD PTR [rsp+0x540],rax
  402e41:	lea    rax,[rip+0x9230]        # 0x40c078
  402e48:	mov    QWORD PTR [rsp+0x558],rax
  402e50:	lea    rax,[rip+0x5919]        # 0x408770
  402e57:	mov    QWORD PTR [rsp+0x560],rax
  402e5f:	lea    rax,[rip+0x592e]        # 0x408794
  402e66:	mov    QWORD PTR [rsp+0x568],rax
  402e6e:	lea    rax,[rip+0x5926]        # 0x40879b
  402e75:	mov    QWORD PTR [rsp+0x570],rax
  402e7d:	lea    rax,[rip+0xffffffffffffebbc]        # 0x401a40
  402e84:	mov    QWORD PTR [rsp+0x588],rax
  402e8c:	lea    rax,[rip+0x5910]        # 0x4087a3
  402e93:	mov    QWORD PTR [rsp+0x590],rax
  402e9b:	lea    rax,[rip+0x5916]        # 0x4087b8
  402ea2:	mov    QWORD PTR [rsp+0x5a0],rax
  402eaa:	lea    rax,[rip+0x91bf]        # 0x40c070
  402eb1:	mov    QWORD PTR [rsp+0x5b8],rax
  402eb9:	lea    rax,[rip+0x5902]        # 0x4087c2
  402ec0:	mov    QWORD PTR [rsp+0x5c0],rax
  402ec8:	lea    rax,[rip+0x590e]        # 0x4087dd
  402ecf:	mov    BYTE PTR [rsp+0x5d8],0x77
  402ed7:	mov    DWORD PTR [rsp+0x5e0],0x2
  402ee2:	mov    DWORD PTR [rsp+0x610],0x3
  402eed:	mov    QWORD PTR [rsp+0x5d0],rax
  402ef5:	lea    rax,[rip+0x412c]        # 0x407028
  402efc:	mov    QWORD PTR [rsp+0x48],0x0
  402f05:	mov    QWORD PTR [rsp+0x50],0x0
  402f0e:	mov    QWORD PTR [rsp+0x5e8],rax
  402f16:	lea    rax,[rip+0x58cb]        # 0x4087e8
  402f1d:	mov    QWORD PTR [rsp+0x5f0],rax
  402f25:	lea    rax,[rip+0x5611]        # 0x40853d
  402f2c:	mov    QWORD PTR [rsp+0x5f8],rax
  402f34:	lea    rax,[rip+0x58e1]        # 0x40881c
  402f3b:	mov    QWORD PTR [rsp+0x600],rax
  402f43:	lea    rax,[rip+0xffffffffffffebd6]        # 0x401b20
  402f4a:	mov    QWORD PTR [rsp+0x618],rax
  402f52:	lea    rax,[rip+0x58cf]        # 0x408828
  402f59:	mov    QWORD PTR [rsp+0x620],rax
  402f61:	lea    rax,[rip+0x58ed]        # 0x408855
  402f68:	mov    QWORD PTR [rsp+0x628],rax
  402f70:	call   0x4045f0
  402f75:	lea    rdx,[rsp+0x60]
  402f7a:	xor    r8d,r8d
  402f7d:	mov    rcx,rax
  402f80:	mov    rdi,rax
  402f83:	call   0x404600
  402f88:	mov    rcx,QWORD PTR [rsi]
  402f8b:	test   rcx,rcx
  402f8e:	je     0x402fb7
  402f90:	mov    rdx,QWORD PTR [rcx+0x78]
  402f94:	test   rdx,rdx
  402f97:	je     0x402fab
  402f99:	call   rdx
  402f9b:	test   rax,rax
  402f9e:	je     0x402fab
  402fa0:	mov    rdx,rax
  402fa3:	mov    rcx,rdi
  402fa6:	call   0x404608
  402fab:	add    rbx,0x8
  402faf:	mov    rcx,QWORD PTR [rbx]
  402fb2:	test   rcx,rcx
  402fb5:	jne    0x402f90
  402fb7:	lea    r9,[rsp+0x50]
  402fbc:	lea    r8,[rsp+0x698]
  402fc4:	lea    rdx,[rsp+0x690]
  402fcc:	mov    rcx,rdi
  402fcf:	call   0x4045e8
  402fd4:	test   eax,eax
  402fd6:	jne    0x403020
  402fd8:	mov    rax,QWORD PTR [rsp+0x50]
  402fdd:	test   rax,rax
  402fe0:	je     0x403100
  402fe6:	mov    rdx,QWORD PTR [rax+0x8]
  402fea:	lea    rcx,[rip+0x587f]        # 0x408870
  402ff1:	call   0x402130
  402ff6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403000:	mov    r8,QWORD PTR [r10+0x8]
  403004:	lea    rdx,[rip+0x5211]        # 0x40821c
  40300b:	mov    rcx,rdi
  40300e:	call   0x404558
  403013:	jmp    0x402754
  403018:	nop    DWORD PTR [rax+rax*1+0x0]
  403020:	mov    rcx,rdi
  403023:	call   0x4045f8
  403028:	mov    rcx,rbp
  40302b:	call   0x404618
  403030:	mov    rcx,r12
  403033:	call   0x404618
  403038:	mov    edx,DWORD PTR [rip+0x905e]        # 0x40c09c
  40303e:	test   edx,edx
  403040:	jne    0x403070
  403042:	mov    rcx,QWORD PTR [rip+0x902f]        # 0x40c078
  403049:	test   rcx,rcx
  40304c:	je     0x403190
  403052:	cmp    DWORD PTR [rsp+0x690],0x1
  40305a:	je     0x403098
  40305c:	lea    rcx,[rip+0x5825]        # 0x408888
  403063:	call   0x402130
  403068:	nop    DWORD PTR [rax+rax*1+0x0]
  403070:	mov    DWORD PTR [rip+0x3fce],0x48        # 0x407048
  40307a:	jmp    0x403042
  40307c:	nop    DWORD PTR [rax+0x0]
  403080:	mov    r8,QWORD PTR [r10+0x8]
  403084:	lea    rdx,[rip+0x519f]        # 0x40822a
  40308b:	mov    rcx,rdi
  40308e:	call   0x404558
  403093:	jmp    0x402754
  403098:	cmp    QWORD PTR [rip+0x8fa8],0x0        # 0x40c048
  4030a0:	je     0x4031b8
  4030a6:	call   0x404580
  4030ab:	mov    rcx,rax
  4030ae:	mov    rbx,rax
  4030b1:	mov    QWORD PTR [rip+0x8ff0],rax        # 0x40c0a8
  4030b8:	call   0x405cf0
  4030bd:	mov    QWORD PTR [rsp+0x58],rax
  4030c2:	test   rax,rax
  4030c5:	je     0x4030e2
  4030c7:	lea    rdx,[rax-0x1]
  4030cb:	lea    r8,[rbx+rdx*1]
  4030cf:	movzx  ecx,BYTE PTR [r8]
  4030d3:	cmp    cl,0xa
  4030d6:	je     0x403120
  4030d8:	cmp    cl,0xd
  4030db:	je     0x403116
  4030dd:	add    rbx,QWORD PTR [rsp+0x58]
  4030e2:	mov    BYTE PTR [rbx],0x0
  4030e5:	mov    eax,DWORD PTR [rip+0x8fa1]        # 0x40c08c
  4030eb:	test   eax,eax
  4030ed:	jne    0x40313c
  4030ef:	add    rsp,0x660
  4030f6:	pop    rbx
  4030f7:	pop    rsi
  4030f8:	pop    rdi
  4030f9:	pop    rbp
  4030fa:	pop    r12
  4030fc:	ret    
  4030fd:	nop    DWORD PTR [rax]
  403100:	lea    rcx,[rip+0x576c]        # 0x408873
  403107:	call   0x402130
  40310c:	mov    ebx,0x1
  403111:	jmp    0x4026fc
  403116:	mov    QWORD PTR [rsp+0x58],rdx
  40311b:	mov    rbx,r8
  40311e:	jmp    0x4030e2
  403120:	test   rdx,rdx
  403123:	mov    QWORD PTR [rsp+0x58],rdx
  403128:	je     0x403232
  40312e:	lea    rdx,[rax-0x2]
  403132:	lea    r8,[rbx+rdx*1]
  403136:	movzx  ecx,BYTE PTR [r8]
  40313a:	jmp    0x4030d8
  40313c:	lea    rax,[rsp+0x48]
  403141:	mov    rcx,QWORD PTR [rip+0x8f60]        # 0x40c0a8
  403148:	xor    r9d,r9d
  40314b:	xor    r8d,r8d
  40314e:	mov    QWORD PTR [rsp+0x28],0x0
  403157:	mov    QWORD PTR [rsp+0x20],0x0
  403160:	mov    QWORD PTR [rsp+0x30],rax
  403165:	mov    edx,0xffffffff
  40316a:	call   0x404358
  40316f:	test   eax,eax
  403171:	jne    0x4030ef
  403177:	mov    rax,QWORD PTR [rsp+0x48]
  40317c:	lea    rcx,[rip+0x576d]        # 0x4088f0
  403183:	mov    rdx,QWORD PTR [rax+0x8]
  403187:	call   0x402130
  40318c:	nop    DWORD PTR [rax+0x0]
  403190:	cmp    DWORD PTR [rsp+0x690],0x2
  403198:	je     0x4031e0
  40319a:	call   0x404610
  40319f:	lea    rcx,[rip+0x5712]        # 0x4088b8
  4031a6:	mov    rdx,rax
  4031a9:	call   0x4045c8
  4031ae:	mov    ecx,0x1
  4031b3:	call   0x405d40
  4031b8:	mov    rax,QWORD PTR [rsi]
  4031bb:	test   rax,rax
  4031be:	mov    QWORD PTR [rip+0x8e83],rax        # 0x40c048
  4031c5:	jne    0x4030a6
  4031cb:	lea    rcx,[rip+0x5702]        # 0x4088d4
  4031d2:	call   0x402130
  4031d7:	nop    WORD PTR [rax+rax*1+0x0]
  4031e0:	cmp    QWORD PTR [rip+0x8e60],0x0        # 0x40c048
  4031e8:	je     0x403221
  4031ea:	mov    rax,QWORD PTR [rsp+0x698]
  4031f2:	lea    r9,[rsp+0x48]
  4031f7:	lea    r8,[rsp+0x58]
  4031fc:	lea    rdx,[rip+0x8ea5]        # 0x40c0a8
  403203:	mov    rcx,QWORD PTR [rax+0x8]
  403207:	call   0x404628
  40320c:	test   eax,eax
  40320e:	je     0x40323a
  403210:	mov    rax,QWORD PTR [rsp+0x58]
  403215:	mov    rbx,QWORD PTR [rip+0x8e8c]        # 0x40c0a8
  40321c:	jmp    0x4030c2
  403221:	mov    rax,QWORD PTR [rsi]
  403224:	test   rax,rax
  403227:	mov    QWORD PTR [rip+0x8e1a],rax        # 0x40c048
  40322e:	jne    0x4031ea
  403230:	jmp    0x4031cb
  403232:	mov    rbx,r8
  403235:	jmp    0x4030e2
  40323a:	mov    rax,QWORD PTR [rsp+0x48]
  40323f:	lea    rcx,[rip+0x56a6]        # 0x4088ec
  403246:	mov    rdx,QWORD PTR [rax+0x8]
  40324a:	call   0x402130
  40324f:	nop
  403250:	mov    rcx,QWORD PTR [rip+0x8e51]        # 0x40c0a8
  403257:	jmp    0x404618
  40325c:	nop
  40325d:	nop
  40325e:	nop
  40325f:	nop
  403260:	xor    eax,eax
  403262:	ret    
  403263:	nop    DWORD PTR [rax]
  403266:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403270:	ret    
  403271:	nop    DWORD PTR [rax+rax*1+0x0]
  403276:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403280:	pxor   xmm2,xmm2
  403284:	mov    rax,QWORD PTR [rcx+0x8]
  403288:	pxor   xmm1,xmm1
  40328c:	mov    rcx,QWORD PTR [rcx]
  40328f:	cvtsi2sd xmm2,r8d
  403294:	cvtsi2sd xmm1,edx
  403298:	rex.W jmp rax
  40329b:	nop    DWORD PTR [rax+rax*1+0x0]
  4032a0:	mov    rcx,rdx
  4032a3:	jmp    0x404668
  4032a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4032b0:	mov    rcx,rdx
  4032b3:	jmp    0x404668
  4032b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4032c0:	push   rsi
  4032c1:	push   rbx
  4032c2:	sub    rsp,0x28
  4032c6:	xor    ecx,ecx
  4032c8:	call   0x404710
  4032cd:	mov    rcx,rax
  4032d0:	mov    rsi,rax
  4032d3:	call   0x404760
  4032d8:	movsd  xmm3,QWORD PTR [rip+0x5960]        # 0x408c40
  4032e0:	mov    rbx,rax
  4032e3:	mov    rcx,rax
  4032e6:	movapd xmm2,xmm3
  4032ea:	movapd xmm1,xmm3
  4032ee:	call   0x404680
  4032f3:	mov    rcx,rbx
  4032f6:	call   0x4046f8
  4032fb:	mov    rcx,rbx
  4032fe:	call   0x404750
  403303:	mov    rax,rsi
  403306:	add    rsp,0x28
  40330a:	pop    rbx
  40330b:	pop    rsi
  40330c:	ret    
  40330d:	nop    DWORD PTR [rax]
  403310:	mov    rdx,rcx
  403313:	mov    ecx,0x10
  403318:	jmp    0x4045a0
  40331d:	nop    DWORD PTR [rax]
  403320:	push   rbx
  403321:	sub    rsp,0x20
  403325:	call   0x4046d8
  40332a:	mov    edx,0x1
  40332f:	mov    rbx,rax
  403332:	mov    rcx,rax
  403335:	call   0x4046d0
  40333a:	mov    rax,rbx
  40333d:	add    rsp,0x20
  403341:	pop    rbx
  403342:	ret    
  403343:	nop    DWORD PTR [rax]
  403346:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403350:	push   rbp
  403351:	push   rdi
  403352:	push   rsi
  403353:	push   rbx
  403354:	sub    rsp,0x28
  403358:	mov    rsi,QWORD PTR [rip+0x6031]        # 0x409390
  40335f:	mov    rcx,QWORD PTR [rsi]
  403362:	test   rcx,rcx
  403365:	je     0x4033d0
  403367:	mov    edx,0x2e
  40336c:	call   0x405ce0
  403371:	test   rax,rax
  403374:	je     0x4033d0
  403376:	add    rax,0x1
  40337a:	mov    rbx,rax
  40337d:	je     0x4033d0
  40337f:	lea    rdx,[rip+0x573a]        # 0x408ac0
  403386:	mov    rcx,rax
  403389:	mov    rdi,QWORD PTR [rip+0xa8e0]        # 0x40dc70
  403390:	call   rdi
  403392:	test   eax,eax
  403394:	lea    rbp,[rip+0x12ad]        # 0x404648
  40339b:	jne    0x4033e0
  40339d:	mov    ecx,0x10
  4033a2:	call   0x4045a8
  4033a7:	mov    rdx,QWORD PTR [rsi]
  4033aa:	mov    QWORD PTR [rax+0x8],rbp
  4033ae:	mov    QWORD PTR [rsi],0x0
  4033b5:	mov    QWORD PTR [rax],rdx
  4033b8:	mov    rdx,QWORD PTR [rip+0x5f91]        # 0x409350
  4033bf:	mov    DWORD PTR [rdx],0x48
  4033c5:	add    rsp,0x28
  4033c9:	pop    rbx
  4033ca:	pop    rsi
  4033cb:	pop    rdi
  4033cc:	pop    rbp
  4033cd:	ret    
  4033ce:	xchg   ax,ax
  4033d0:	xor    eax,eax
  4033d2:	add    rsp,0x28
  4033d6:	pop    rbx
  4033d7:	pop    rsi
  4033d8:	pop    rdi
  4033d9:	pop    rbp
  4033da:	ret    
  4033db:	nop    DWORD PTR [rax+rax*1+0x0]
  4033e0:	lea    rdx,[rip+0x56dd]        # 0x408ac4
  4033e7:	mov    rcx,rbx
  4033ea:	lea    rbp,[rip+0x12ef]        # 0x4046e0
  4033f1:	call   rdi
  4033f3:	test   eax,eax
  4033f5:	je     0x40339d
  4033f7:	lea    rdx,[rip+0x56ca]        # 0x408ac8
  4033fe:	mov    rcx,rbx
  403401:	lea    rbp,[rip+0x12d0]        # 0x4046d8
  403408:	call   rdi
  40340a:	test   eax,eax
  40340c:	je     0x40339d
  40340e:	lea    rdx,[rip+0x56b6]        # 0x408acb
  403415:	mov    rcx,rbx
  403418:	call   rdi
  40341a:	test   eax,eax
  40341c:	jne    0x4033d0
  40341e:	lea    rbp,[rip+0xfffffffffffffefb]        # 0x403320
  403425:	jmp    0x40339d
  40342a:	nop    WORD PTR [rax+rax*1+0x0]
  403430:	mov    rcx,rdx
  403433:	jmp    0x404658
  403438:	nop    DWORD PTR [rax+rax*1+0x0]
  403440:	push   rbx
  403441:	sub    rsp,0x30
  403445:	movsd  xmm3,QWORD PTR [rip+0x57f3]        # 0x408c40
  40344d:	mov    rbx,rdx
  403450:	mov    rcx,rdx
  403453:	movapd xmm2,xmm3
  403457:	movapd xmm1,xmm3
  40345b:	call   0x404680
  403460:	mov    rcx,rbx
  403463:	call   0x4046f8
  403468:	mov    rax,QWORD PTR [rip+0x5ec1]        # 0x409330
  40346f:	mov    eax,DWORD PTR [rax]
  403471:	test   eax,eax
  403473:	jne    0x403480
  403475:	add    rsp,0x30
  403479:	pop    rbx
  40347a:	ret    
  40347b:	nop    DWORD PTR [rax+rax*1+0x0]
  403480:	mov    rcx,rbx
  403483:	mov    edx,0x1
  403488:	call   0x404690
  40348d:	mov    rdx,QWORD PTR [rip+0x5e8c]        # 0x409320
  403494:	pxor   xmm3,xmm3
  403498:	pxor   xmm2,xmm2
  40349c:	mov    rcx,rbx
  40349f:	pxor   xmm1,xmm1
  4034a3:	movzx  eax,WORD PTR [rdx+0x4]
  4034a7:	pxor   xmm0,xmm0
  4034ab:	movsd  xmm4,QWORD PTR [rip+0x5795]        # 0x408c48
  4034b3:	cvtsi2sd xmm3,eax
  4034b7:	movzx  eax,WORD PTR [rdx+0x2]
  4034bb:	cvtsi2sd xmm2,eax
  4034bf:	movzx  eax,WORD PTR [rdx]
  4034c2:	cvtsi2sd xmm1,eax
  4034c6:	mov    rax,QWORD PTR [rip+0x5e43]        # 0x409310
  4034cd:	movzx  eax,WORD PTR [rax]
  4034d0:	divsd  xmm3,xmm4
  4034d4:	cvtsi2sd xmm0,eax
  4034d8:	divsd  xmm0,xmm4
  4034dc:	divsd  xmm2,xmm4
  4034e0:	movsd  QWORD PTR [rsp+0x20],xmm0
  4034e6:	divsd  xmm1,xmm4
  4034ea:	call   0x404678
  4034ef:	mov    rcx,rbx
  4034f2:	add    rsp,0x30
  4034f6:	pop    rbx
  4034f7:	jmp    0x4046f8
  4034fc:	nop    DWORD PTR [rax+0x0]
  403500:	push   rbx
  403501:	sub    rsp,0x30
  403505:	mov    rax,QWORD PTR [rip+0x5e24]        # 0x409330
  40350c:	mov    eax,DWORD PTR [rax]
  40350e:	test   eax,eax
  403510:	jne    0x403520
  403512:	add    rsp,0x30
  403516:	pop    rbx
  403517:	ret    
  403518:	nop    DWORD PTR [rax+rax*1+0x0]
  403520:	mov    rbx,rdx
  403523:	mov    edx,0x1
  403528:	mov    rcx,rbx
  40352b:	call   0x404690
  403530:	mov    rdx,QWORD PTR [rip+0x5de9]        # 0x409320
  403537:	pxor   xmm3,xmm3
  40353b:	pxor   xmm2,xmm2
  40353f:	mov    rcx,rbx
  403542:	pxor   xmm1,xmm1
  403546:	movzx  eax,WORD PTR [rdx+0x4]
  40354a:	pxor   xmm0,xmm0
  40354e:	movsd  xmm4,QWORD PTR [rip+0x56f2]        # 0x408c48
  403556:	cvtsi2sd xmm3,eax
  40355a:	movzx  eax,WORD PTR [rdx+0x2]
  40355e:	cvtsi2sd xmm2,eax
  403562:	movzx  eax,WORD PTR [rdx]
  403565:	cvtsi2sd xmm1,eax
  403569:	mov    rax,QWORD PTR [rip+0x5da0]        # 0x409310
  403570:	movzx  eax,WORD PTR [rax]
  403573:	divsd  xmm3,xmm4
  403577:	cvtsi2sd xmm0,eax
  40357b:	divsd  xmm0,xmm4
  40357f:	divsd  xmm2,xmm4
  403583:	movsd  QWORD PTR [rsp+0x20],xmm0
  403589:	divsd  xmm1,xmm4
  40358d:	call   0x404678
  403592:	mov    rcx,rbx
  403595:	add    rsp,0x30
  403599:	pop    rbx
  40359a:	jmp    0x4046f8
  40359f:	nop
  4035a0:	push   rbx
  4035a1:	sub    rsp,0x20
  4035a5:	lea    rax,[rip+0x3ab4]        # 0x407060
  4035ac:	mov    rbx,rcx
  4035af:	mov    QWORD PTR [rcx],rax
  4035b2:	mov    rax,QWORD PTR [rip+0x3aa7]        # 0x407060
  4035b9:	mov    rcx,rax
  4035bc:	call   QWORD PTR [rax+0x18]
  4035bf:	test   rax,rax
  4035c2:	je     0x4035d0
  4035c4:	add    rsp,0x20
  4035c8:	pop    rbx
  4035c9:	ret    
  4035ca:	nop    WORD PTR [rax+rax*1+0x0]
  4035d0:	lea    rax,[rip+0x3aa9]        # 0x407080
  4035d7:	mov    QWORD PTR [rbx],rax
  4035da:	mov    rcx,QWORD PTR [rip+0x3a9f]        # 0x407080
  4035e1:	mov    rax,QWORD PTR [rcx+0x18]
  4035e5:	add    rsp,0x20
  4035e9:	pop    rbx
  4035ea:	rex.W jmp rax
  4035ed:	nop    DWORD PTR [rax]
  4035f0:	ret    
  4035f1:	nop
  4035f2:	nop
  4035f3:	nop
  4035f4:	nop
  4035f5:	nop
  4035f6:	nop
  4035f7:	nop
  4035f8:	nop
  4035f9:	nop
  4035fa:	nop
  4035fb:	nop
  4035fc:	nop
  4035fd:	nop
  4035fe:	nop
  4035ff:	nop
  403600:	mov    rax,QWORD PTR [rcx]
  403603:	mov    rax,QWORD PTR [rax]
  403606:	mov    rax,QWORD PTR [rax+0x50]
  40360a:	test   rax,rax
  40360d:	je     0x403620
  40360f:	mov    rcx,QWORD PTR [rcx+0x8]
  403613:	rex.W jmp rax
  403616:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403620:	xor    eax,eax
  403622:	ret    
  403623:	nop    DWORD PTR [rax]
  403626:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403630:	mov    rax,rcx
  403633:	mov    rcx,QWORD PTR [rcx+0x8]
  403637:	mov    rax,QWORD PTR [rax]
  40363a:	mov    rax,QWORD PTR [rax]
  40363d:	mov    rax,QWORD PTR [rax+0x58]
  403641:	rex.W jmp rax
  403644:	xchg   ax,ax
  403646:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403650:	mov    rdx,QWORD PTR [rdx]
  403653:	mov    rax,rcx
  403656:	mov    rcx,QWORD PTR [rcx+0x8]
  40365a:	mov    rax,QWORD PTR [rax]
  40365d:	mov    rax,QWORD PTR [rax]
  403660:	mov    rax,QWORD PTR [rax+0x60]
  403664:	rex.W jmp rax
  403667:	nop    WORD PTR [rax+rax*1+0x0]
  403670:	push   rdi
  403671:	push   rbx
  403672:	sub    rsp,0x98
  403679:	xor    eax,eax
  40367b:	mov    ecx,0xc
  403680:	lea    r8,[rip+0x5621]        # 0x408ca8
  403687:	lea    rdi,[rsp+0x30]
  40368c:	lea    rdx,[rip+0x563d]        # 0x408cd0
  403693:	xor    r9d,r9d
  403696:	rep stos QWORD PTR es:[rdi],rax
  403699:	lea    rax,[rip+0x55e0]        # 0x408c80
  4036a0:	lea    rcx,[rip+0x5640]        # 0x408ce7
  4036a7:	mov    QWORD PTR [rsp+0x20],0x0
  4036b0:	mov    DWORD PTR [rsp+0x40],0x2
  4036b8:	mov    QWORD PTR [rsp+0x30],rax
  4036bd:	lea    rax,[rip+0x89fc]        # 0x40c0c0
  4036c4:	mov    QWORD PTR [rsp+0x48],rax
  4036c9:	lea    rax,[rip+0x55b9]        # 0x408c89
  4036d0:	mov    QWORD PTR [rsp+0x50],rax
  4036d5:	lea    rax,[rip+0x55c1]        # 0x408c9d
  4036dc:	mov    QWORD PTR [rsp+0x58],rax
  4036e1:	call   0x4045d0
  4036e6:	lea    rdx,[rsp+0x30]
  4036eb:	mov    rbx,rax
  4036ee:	mov    rcx,rax
  4036f1:	call   0x4045d8
  4036f6:	mov    rcx,rbx
  4036f9:	call   0x4035f0
  4036fe:	mov    rax,rbx
  403701:	add    rsp,0x98
  403708:	pop    rbx
  403709:	pop    rdi
  40370a:	ret    
  40370b:	nop    DWORD PTR [rax+rax*1+0x0]
  403710:	mov    rcx,QWORD PTR [rdx+0x8]
  403714:	lea    rdx,[rip+0x5]        # 0x403720
  40371b:	jmp    0x404650
  403720:	push   rbx
  403721:	sub    rsp,0x20
  403725:	mov    r8d,r8d
  403728:	mov    r9,rcx
  40372b:	mov    rcx,rdx
  40372e:	mov    rbx,r8
  403731:	mov    edx,0x1
  403736:	call   0x405d20
  40373b:	mov    edx,0xb
  403740:	cmp    ebx,eax
  403742:	mov    eax,0x0
  403747:	cmovne eax,edx
  40374a:	add    rsp,0x20
  40374e:	pop    rbx
  40374f:	ret    
  403750:	push   r12
  403752:	push   rbp
  403753:	push   rdi
  403754:	push   rsi
  403755:	push   rbx
  403756:	sub    rsp,0x100
  40375d:	movaps XMMWORD PTR [rsp+0x60],xmm6
  403762:	movaps XMMWORD PTR [rsp+0x70],xmm7
  403767:	movaps XMMWORD PTR [rsp+0x80],xmm8
  403770:	movaps XMMWORD PTR [rsp+0x90],xmm9
  403779:	movaps XMMWORD PTR [rsp+0xa0],xmm10
  403782:	movaps XMMWORD PTR [rsp+0xb0],xmm11
  40378b:	movaps XMMWORD PTR [rsp+0xc0],xmm12
  403794:	movaps XMMWORD PTR [rsp+0xd0],xmm13
  40379d:	movaps XMMWORD PTR [rsp+0xe0],xmm14
  4037a6:	movaps XMMWORD PTR [rsp+0xf0],xmm15
  4037af:	mov    esi,0x55555556
  4037b4:	mov    rbp,rcx
  4037b7:	mov    edi,edx
  4037b9:	mov    r12d,r8d
  4037bc:	mov    ecx,DWORD PTR [rip+0x88fe]        # 0x40c0c0
  4037c2:	add    ecx,DWORD PTR [rsp+0x150]
  4037c9:	mov    rbx,r9
  4037cc:	mov    eax,ecx
  4037ce:	imul   esi
  4037d0:	mov    eax,ecx
  4037d2:	mov    esi,ecx
  4037d4:	sar    eax,0x1f
  4037d7:	mov    rcx,r9
  4037da:	sub    edx,eax
  4037dc:	lea    eax,[rdx+rdx*2]
  4037df:	sub    esi,eax
  4037e1:	call   0x4046a8
  4037e6:	pxor   xmm2,xmm2
  4037ea:	mov    rcx,rbx
  4037ed:	pxor   xmm1,xmm1
  4037f1:	cvtsi2sd xmm2,r12d
  4037f6:	cvtsi2sd xmm1,edi
  4037fa:	call   0x404640
  4037ff:	test   esi,esi
  403801:	jne    0x4038a0
  403807:	pxor   xmm2,xmm2
  40380b:	mov    rcx,rbx
  40380e:	movapd xmm1,xmm2
  403812:	call   0x404700
  403817:	mov    rdx,rbp
  40381a:	mov    rcx,rbx
  40381d:	call   0x404510
  403822:	mov    rcx,rbx
  403825:	call   0x4046b8
  40382a:	mov    rcx,rbx
  40382d:	call   0x404718
  403832:	mov    rcx,rax
  403835:	call   0x404660
  40383a:	nop
  40383b:	movaps xmm6,XMMWORD PTR [rsp+0x60]
  403840:	movaps xmm7,XMMWORD PTR [rsp+0x70]
  403845:	movaps xmm8,XMMWORD PTR [rsp+0x80]
  40384e:	movaps xmm9,XMMWORD PTR [rsp+0x90]
  403857:	movaps xmm10,XMMWORD PTR [rsp+0xa0]
  403860:	movaps xmm11,XMMWORD PTR [rsp+0xb0]
  403869:	movaps xmm12,XMMWORD PTR [rsp+0xc0]
  403872:	movaps xmm13,XMMWORD PTR [rsp+0xd0]
  40387b:	movaps xmm14,XMMWORD PTR [rsp+0xe0]
  403884:	movaps xmm15,XMMWORD PTR [rsp+0xf0]
  40388d:	add    rsp,0x100
  403894:	pop    rbx
  403895:	pop    rsi
  403896:	pop    rdi
  403897:	pop    rbp
  403898:	pop    r12
  40389a:	ret    
  40389b:	nop    DWORD PTR [rax+rax*1+0x0]
  4038a0:	mov    rcx,rbx
  4038a3:	call   0x404720
  4038a8:	lea    rdx,[rsp+0x40]
  4038ad:	lea    r8,[rsp+0x50]
  4038b2:	mov    rcx,rbp
  4038b5:	movapd xmm13,xmm0
  4038ba:	call   0x404438
  4038bf:	cmp    esi,0x2
  4038c2:	jne    0x403fb0
  4038c8:	mov    rcx,rbx
  4038cb:	pxor   xmm6,xmm6
  4038cf:	call   0x4046a8
  4038d4:	pxor   xmm2,xmm2
  4038d8:	mov    rcx,rbx
  4038db:	pxor   xmm1,xmm1
  4038df:	movsd  xmm7,QWORD PTR [rip+0x54d9]        # 0x408dc0
  4038e7:	cvtsi2sd xmm2,DWORD PTR [rsp+0x54]
  4038ed:	cvtsi2sd xmm1,DWORD PTR [rsp+0x50]
  4038f3:	mulsd  xmm2,xmm7
  4038f7:	mulsd  xmm1,xmm7
  4038fb:	call   0x404640
  403900:	pxor   xmm2,xmm2
  403904:	mov    rcx,rbx
  403907:	pxor   xmm1,xmm1
  40390b:	movsd  xmm10,QWORD PTR [rip+0x54b4]        # 0x408dc8
  403914:	cvtsi2sd xmm2,DWORD PTR [rsp+0x5c]
  40391a:	mulsd  xmm2,xmm7
  40391e:	cvtsi2sd xmm1,DWORD PTR [rsp+0x58]
  403924:	mulsd  xmm1,xmm7
  403928:	mulsd  xmm2,xmm10
  40392d:	mulsd  xmm1,xmm10
  403932:	call   0x4046a0
  403937:	movsd  xmm2,QWORD PTR [rip+0x5491]        # 0x408dd0
  40393f:	mov    rcx,rbx
  403942:	movapd xmm1,xmm2
  403946:	call   0x404640
  40394b:	mov    rcx,rbp
  40394e:	call   0x404440
  403953:	mov    rcx,rax
  403956:	call   0x4044e8
  40395b:	mov    ecx,eax
  40395d:	call   0x404460
  403962:	movapd xmm1,xmm0
  403966:	mov    rcx,rbx
  403969:	call   0x4046b0
  40396e:	movsd  xmm2,QWORD PTR [rip+0x5462]        # 0x408dd8
  403976:	mov    rcx,rbx
  403979:	movapd xmm1,xmm2
  40397d:	call   0x404700
  403982:	movsd  xmm2,QWORD PTR [rip+0x5456]        # 0x408de0
  40398a:	mov    rcx,rbx
  40398d:	movsd  xmm1,QWORD PTR [rip+0x543b]        # 0x408dd0
  403995:	call   0x4046c0
  40399a:	movsd  xmm4,QWORD PTR [rip+0x5446]        # 0x408de8
  4039a2:	mov    rcx,rbx
  4039a5:	movsd  xmm1,QWORD PTR [rip+0x5423]        # 0x408dd0
  4039ad:	movapd xmm2,xmm4
  4039b1:	movapd xmm12,xmm4
  4039b6:	movsd  QWORD PTR [rsp+0x38],xmm4
  4039bc:	call   0x4046c0
  4039c1:	mov    rcx,rbx
  4039c4:	call   0x404768
  4039c9:	pxor   xmm2,xmm2
  4039cd:	movsd  xmm3,QWORD PTR [rip+0x541b]        # 0x408df0
  4039d5:	movsd  xmm1,QWORD PTR [rip+0x53fb]        # 0x408dd8
  4039dd:	movapd xmm0,xmm2
  4039e1:	call   0x4046e8
  4039e6:	movsd  xmm8,QWORD PTR [rip+0x53e1]        # 0x408dd0
  4039ef:	mov    rcx,rax
  4039f2:	movapd xmm3,xmm6
  4039f6:	movsd  QWORD PTR [rsp+0x28],xmm6
  4039fc:	movapd xmm2,xmm6
  403a00:	movsd  QWORD PTR [rsp+0x20],xmm8
  403a07:	movapd xmm1,xmm6
  403a0b:	mov    rsi,rax
  403a0e:	call   0x4046f0
  403a13:	movsd  xmm5,QWORD PTR [rip+0x53dd]        # 0x408df8
  403a1b:	mov    rcx,rsi
  403a1e:	movapd xmm3,xmm6
  403a22:	movsd  QWORD PTR [rsp+0x20],xmm8
  403a29:	movsd  QWORD PTR [rsp+0x28],xmm5
  403a2f:	movapd xmm2,xmm6
  403a33:	movapd xmm1,xmm8
  403a38:	call   0x4046f0
  403a3d:	mov    rdx,rsi
  403a40:	mov    rcx,rbx
  403a43:	call   0x404688
  403a48:	mov    rcx,rbx
  403a4b:	call   0x404748
  403a50:	movsd  xmm2,QWORD PTR [rip+0x5380]        # 0x408dd8
  403a58:	mov    rcx,rbx
  403a5b:	movapd xmm1,xmm2
  403a5f:	call   0x404700
  403a64:	movsd  xmm2,QWORD PTR [rip+0x5374]        # 0x408de0
  403a6c:	mov    rcx,rbx
  403a6f:	movapd xmm1,xmm8
  403a74:	call   0x4046c0
  403a79:	movapd xmm2,xmm12
  403a7e:	mov    rcx,rbx
  403a81:	movapd xmm1,xmm8
  403a86:	call   0x4046c0
  403a8b:	mov    rcx,rbx
  403a8e:	call   0x4046b8
  403a93:	mov    rcx,rbx
  403a96:	call   0x4046a8
  403a9b:	movsd  xmm3,QWORD PTR [rip+0x535d]        # 0x408e00
  403aa3:	mov    rcx,rbx
  403aa6:	movapd xmm2,xmm6
  403aaa:	movsd  QWORD PTR [rsp+0x20],xmm12
  403ab1:	movapd xmm1,xmm6
  403ab5:	call   0x404678
  403aba:	mov    rcx,rbx
  403abd:	call   0x404670
  403ac2:	mov    rcx,rbx
  403ac5:	call   0x4046b8
  403aca:	mov    rcx,rbx
  403acd:	call   0x4046a8
  403ad2:	pxor   xmm2,xmm2
  403ad6:	mov    rcx,rbx
  403ad9:	pxor   xmm1,xmm1
  403add:	cvtsi2sd xmm2,DWORD PTR [rsp+0x54]
  403ae3:	mulsd  xmm2,xmm7
  403ae7:	cvtsi2sd xmm1,DWORD PTR [rsp+0x50]
  403aed:	mulsd  xmm1,xmm7
  403af1:	call   0x404640
  403af6:	pxor   xmm2,xmm2
  403afa:	mov    rcx,rbx
  403afd:	pxor   xmm1,xmm1
  403b01:	cvtsi2sd xmm2,DWORD PTR [rsp+0x5c]
  403b07:	mulsd  xmm2,xmm7
  403b0b:	cvtsi2sd xmm1,DWORD PTR [rsp+0x58]
  403b11:	mulsd  xmm1,xmm7
  403b15:	mulsd  xmm2,xmm10
  403b1a:	mulsd  xmm1,xmm10
  403b1f:	call   0x4046a0
  403b24:	movapd xmm2,xmm8
  403b29:	mov    rcx,rbx
  403b2c:	movapd xmm1,xmm8
  403b31:	call   0x404640
  403b36:	movsd  xmm2,QWORD PTR [rip+0x52ca]        # 0x408e08
  403b3e:	mov    rcx,rbx
  403b41:	movsd  xmm1,QWORD PTR [rip+0x52c7]        # 0x408e10
  403b49:	call   0x404700
  403b4e:	movapd xmm2,xmm6
  403b52:	mov    rcx,rbx
  403b55:	movsd  xmm1,QWORD PTR [rip+0x52bb]        # 0x408e18
  403b5d:	call   0x4046c0
  403b62:	movsd  xmm11,QWORD PTR [rip+0x52b5]        # 0x408e20
  403b6b:	mov    rcx,rbx
  403b6e:	movapd xmm1,xmm6
  403b72:	movapd xmm2,xmm11
  403b77:	call   0x4046c0
  403b7c:	movapd xmm2,xmm6
  403b80:	mov    rcx,rbx
  403b83:	movsd  xmm1,QWORD PTR [rip+0x529d]        # 0x408e28
  403b8b:	call   0x4046c0
  403b90:	movapd xmm2,xmm10
  403b95:	mov    rcx,rbx
  403b98:	movsd  xmm1,QWORD PTR [rip+0x5290]        # 0x408e30
  403ba0:	call   0x4046c0
  403ba5:	movsd  xmm2,QWORD PTR [rip+0x528b]        # 0x408e38
  403bad:	mov    rcx,rbx
  403bb0:	movsd  xmm1,QWORD PTR [rip+0x5278]        # 0x408e30
  403bb8:	call   0x4046c0
  403bbd:	movapd xmm2,xmm6
  403bc1:	mov    rcx,rbx
  403bc4:	movsd  xmm1,QWORD PTR [rip+0x525c]        # 0x408e28
  403bcc:	call   0x4046c0
  403bd1:	mov    rcx,rbx
  403bd4:	call   0x404768
  403bd9:	movapd xmm0,xmm6
  403bdd:	movsd  xmm3,QWORD PTR [rip+0x521b]        # 0x408e00
  403be5:	movapd xmm2,xmm6
  403be9:	movsd  xmm1,QWORD PTR [rip+0x5217]        # 0x408e08
  403bf1:	call   0x4046e8
  403bf6:	movapd xmm3,xmm8
  403bfb:	movsd  QWORD PTR [rsp+0x28],xmm6
  403c01:	movapd xmm2,xmm6
  403c05:	movsd  QWORD PTR [rsp+0x20],xmm6
  403c0b:	movapd xmm1,xmm6
  403c0f:	mov    rcx,rax
  403c12:	mov    rsi,rax
  403c15:	call   0x4046f0
  403c1a:	movsd  xmm5,QWORD PTR [rip+0x51d6]        # 0x408df8
  403c22:	mov    rcx,rsi
  403c25:	movapd xmm3,xmm8
  403c2a:	movsd  QWORD PTR [rsp+0x20],xmm6
  403c30:	movsd  QWORD PTR [rsp+0x28],xmm5
  403c36:	movapd xmm2,xmm6
  403c3a:	movapd xmm1,xmm8
  403c3f:	call   0x4046f0
  403c44:	mov    rdx,rsi
  403c47:	mov    rcx,rbx
  403c4a:	call   0x404688
  403c4f:	mov    rcx,rbx
  403c52:	call   0x404740
  403c57:	mov    rcx,rbx
  403c5a:	call   0x4046b8
  403c5f:	mov    rcx,rbx
  403c62:	call   0x4046a8
  403c67:	movapd xmm3,xmm6
  403c6b:	movsd  QWORD PTR [rsp+0x20],xmm12
  403c72:	movsd  xmm2,QWORD PTR [rip+0x5186]        # 0x408e00
  403c7a:	mov    rcx,rbx
  403c7d:	movapd xmm1,xmm6
  403c81:	call   0x404678
  403c86:	mov    rcx,rbx
  403c89:	call   0x404670
  403c8e:	mov    rcx,rbx
  403c91:	call   0x4046b8
  403c96:	mov    rcx,rbx
  403c99:	movapd xmm8,xmm13
  403c9e:	call   0x4046a8
  403ca3:	movsd  xmm5,QWORD PTR [rip+0x511d]        # 0x408dc8
  403cab:	mov    rcx,rbx
  403cae:	pxor   xmm3,xmm3
  403cb2:	movsd  QWORD PTR [rsp+0x20],xmm5
  403cb8:	movapd xmm2,xmm10
  403cbd:	movsd  xmm1,QWORD PTR [rip+0x510b]        # 0x408dd0
  403cc5:	call   0x404678
  403cca:	mov    rcx,rbp
  403ccd:	call   0x404420
  403cd2:	xorpd  xmm8,XMMWORD PTR [rip+0x5165]        # 0x408e40
  403cdb:	mov    rdi,rax
  403cde:	movsd  xmm12,QWORD PTR [rip+0x5179]        # 0x408e60
  403ce7:	jmp    0x403ddb
  403cec:	nop    DWORD PTR [rax+0x0]
  403cf0:	movapd xmm9,xmm6
  403cf5:	mov    rcx,rbx
  403cf8:	movsd  xmm2,QWORD PTR [rsp+0x38]
  403cfe:	xorpd  xmm9,XMMWORD PTR [rip+0x5139]        # 0x408e40
  403d07:	mulsd  xmm2,xmm8
  403d0c:	movapd xmm1,xmm9
  403d11:	mulsd  xmm1,xmm10
  403d16:	call   0x404700
  403d1b:	movsd  xmm15,QWORD PTR [rip+0x512c]        # 0x408e50
  403d24:	mov    rcx,rbx
  403d27:	movapd xmm1,xmm6
  403d2b:	mulsd  xmm15,xmm8
  403d30:	mulsd  xmm1,xmm11
  403d35:	movapd xmm2,xmm15
  403d3a:	call   0x4046c0
  403d3f:	pxor   xmm1,xmm1
  403d43:	mov    rcx,rbx
  403d46:	movapd xmm2,xmm8
  403d4b:	call   0x4046c0
  403d50:	movsd  xmm14,QWORD PTR [rip+0x50ff]        # 0x408e58
  403d59:	mov    rcx,rbx
  403d5c:	mulsd  xmm6,xmm12
  403d61:	mulsd  xmm14,xmm13
  403d66:	movapd xmm1,xmm6
  403d6a:	movapd xmm2,xmm14
  403d6f:	call   0x4046c0
  403d74:	movapd xmm1,xmm9
  403d79:	mov    rcx,rbx
  403d7c:	movapd xmm2,xmm14
  403d81:	mulsd  xmm1,xmm12
  403d86:	call   0x4046c0
  403d8b:	pxor   xmm1,xmm1
  403d8f:	mov    rcx,rbx
  403d92:	movapd xmm2,xmm8
  403d97:	call   0x4046c0
  403d9c:	movapd xmm1,xmm9
  403da1:	mov    rcx,rbx
  403da4:	movapd xmm2,xmm15
  403da9:	mulsd  xmm1,xmm11
  403dae:	call   0x4046c0
  403db3:	mov    rcx,rbx
  403db6:	call   0x404768
  403dbb:	mov    rcx,rbx
  403dbe:	call   0x404748
  403dc3:	mov    rcx,rbx
  403dc6:	call   0x4046b8
  403dcb:	mov    rcx,rdi
  403dce:	call   0x4043f0
  403dd3:	test   eax,eax
  403dd5:	je     0x403e60
  403ddb:	pxor   xmm6,xmm6
  403ddf:	mov    rcx,rdi
  403de2:	call   0x4043f8
  403de7:	mov    rcx,rdi
  403dea:	mov    r12,rax
  403ded:	cvtsi2sd xmm6,DWORD PTR [rsp+0x58]
  403df3:	call   0x404400
  403df8:	mov    rcx,rbx
  403dfb:	mov    esi,eax
  403dfd:	mulsd  xmm6,xmm7
  403e01:	call   0x4046a8
  403e06:	pxor   xmm2,xmm2
  403e0a:	mov    rcx,rbx
  403e0d:	pxor   xmm1,xmm1
  403e11:	movapd xmm0,xmm6
  403e15:	cvtsi2sd xmm2,esi
  403e19:	cvtsi2sd xmm1,DWORD PTR [rsp+0x50]
  403e1f:	mulsd  xmm0,xmm10
  403e24:	mulsd  xmm1,xmm7
  403e28:	addsd  xmm1,xmm0
  403e2c:	mulsd  xmm2,xmm7
  403e30:	call   0x404640
  403e35:	test   BYTE PTR [r12+0x18],0xe
  403e3b:	je     0x403cf0
  403e41:	movsd  xmm2,QWORD PTR [rip+0x4f87]        # 0x408dd0
  403e49:	mov    rcx,rbx
  403e4c:	movsd  xmm1,QWORD PTR [rip+0x4f84]        # 0x408dd8
  403e54:	call   0x4046a0
  403e59:	jmp    0x403cf0
  403e5e:	xchg   ax,ax
  403e60:	mov    rcx,rdi
  403e63:	call   0x404408
  403e68:	mov    rcx,rbx
  403e6b:	call   0x4046b8
  403e70:	mov    rcx,rbx
  403e73:	call   0x4046a8
  403e78:	pxor   xmm3,xmm3
  403e7c:	mov    rcx,rbx
  403e7f:	movsd  xmm5,QWORD PTR [rip+0x4f41]        # 0x408dc8
  403e87:	movsd  xmm1,QWORD PTR [rip+0x4f41]        # 0x408dd0
  403e8f:	movsd  QWORD PTR [rsp+0x20],xmm5
  403e95:	movapd xmm2,xmm3
  403e99:	call   0x404678
  403e9e:	pxor   xmm0,xmm0
  403ea2:	mov    rcx,rbx
  403ea5:	pxor   xmm3,xmm3
  403ea9:	pxor   xmm2,xmm2
  403ead:	pxor   xmm1,xmm1
  403eb1:	cvtsi2sd xmm0,DWORD PTR [rsp+0x5c]
  403eb7:	mulsd  xmm0,xmm7
  403ebb:	cvtsi2sd xmm3,DWORD PTR [rsp+0x58]
  403ec1:	mulsd  xmm10,xmm13
  403ec6:	cvtsi2sd xmm2,DWORD PTR [rsp+0x54]
  403ecc:	cvtsi2sd xmm1,DWORD PTR [rsp+0x50]
  403ed2:	mulsd  xmm3,xmm7
  403ed6:	mulsd  xmm2,xmm7
  403eda:	mulsd  xmm1,xmm7
  403ede:	addsd  xmm0,xmm13
  403ee3:	addsd  xmm3,xmm13
  403ee8:	subsd  xmm2,xmm10
  403eed:	subsd  xmm1,xmm10
  403ef2:	movsd  QWORD PTR [rsp+0x20],xmm0
  403ef8:	call   0x4046c8
  403efd:	mov    rcx,rbx
  403f00:	call   0x404670
  403f05:	mov    rcx,rbx
  403f08:	call   0x4046b8
  403f0d:	mov    rcx,rbx
  403f10:	call   0x4046a8
  403f15:	pxor   xmm3,xmm3
  403f19:	mov    rcx,rbx
  403f1c:	movsd  xmm4,QWORD PTR [rip+0x4ea4]        # 0x408dc8
  403f24:	movsd  xmm2,QWORD PTR [rip+0x4ea4]        # 0x408dd0
  403f2c:	movsd  QWORD PTR [rsp+0x20],xmm4
  403f32:	movapd xmm1,xmm3
  403f36:	call   0x404678
  403f3b:	pxor   xmm3,xmm3
  403f3f:	mov    rcx,rbx
  403f42:	pxor   xmm2,xmm2
  403f46:	pxor   xmm1,xmm1
  403f4a:	pxor   xmm0,xmm0
  403f4e:	cvtsi2sd xmm3,DWORD PTR [rsp+0x48]
  403f54:	cvtsi2sd xmm2,DWORD PTR [rsp+0x44]
  403f5a:	mulsd  xmm3,xmm7
  403f5e:	cvtsi2sd xmm1,DWORD PTR [rsp+0x40]
  403f64:	mulsd  xmm2,xmm7
  403f68:	cvtsi2sd xmm0,DWORD PTR [rsp+0x4c]
  403f6e:	mulsd  xmm1,xmm7
  403f72:	mulsd  xmm7,xmm0
  403f76:	addsd  xmm3,xmm13
  403f7b:	subsd  xmm2,xmm10
  403f80:	subsd  xmm1,xmm10
  403f85:	addsd  xmm7,xmm13
  403f8a:	movsd  QWORD PTR [rsp+0x20],xmm7
  403f90:	call   0x4046c8
  403f95:	mov    rcx,rbx
  403f98:	call   0x404670
  403f9d:	mov    rcx,rbx
  403fa0:	call   0x4046b8
  403fa5:	jmp    0x403807
  403faa:	nop    WORD PTR [rax+rax*1+0x0]
  403fb0:	movsd  xmm4,QWORD PTR [rip+0x4e30]        # 0x408de8
  403fb8:	movsd  xmm7,QWORD PTR [rip+0x4e00]        # 0x408dc0
  403fc0:	movsd  xmm10,QWORD PTR [rip+0x4dff]        # 0x408dc8
  403fc9:	movsd  QWORD PTR [rsp+0x38],xmm4
  403fcf:	movsd  xmm11,QWORD PTR [rip+0x4e48]        # 0x408e20
  403fd8:	jmp    0x403c96
  403fdd:	nop    DWORD PTR [rax]
  403fe0:	push   rdi
  403fe1:	push   rbx
  403fe2:	sub    rsp,0x68
  403fe6:	test   rdx,rdx
  403fe9:	mov    rdi,rcx
  403fec:	mov    rbx,r8
  403fef:	je     0x404052
  403ff1:	movsd  xmm0,QWORD PTR [rdx]
  403ff5:	movsd  QWORD PTR [rsp+0x30],xmm0
  403ffb:	movsd  xmm0,QWORD PTR [rdx+0x10]
  404000:	movsd  QWORD PTR [rsp+0x38],xmm0
  404006:	movsd  xmm0,QWORD PTR [rdx+0x8]
  40400b:	movsd  QWORD PTR [rsp+0x40],xmm0
  404011:	movsd  xmm0,QWORD PTR [rdx+0x18]
  404016:	movsd  QWORD PTR [rsp+0x48],xmm0
  40401c:	movsd  xmm0,QWORD PTR [rdx+0x20]
  404021:	movsd  QWORD PTR [rsp+0x50],xmm0
  404027:	movsd  xmm0,QWORD PTR [rdx+0x28]
  40402c:	lea    rdx,[rsp+0x30]
  404031:	movsd  QWORD PTR [rsp+0x58],xmm0
  404037:	mov    rcx,rbx
  40403a:	call   0x404698
  40403f:	mov    rdx,rdi
  404042:	mov    rcx,rbx
  404045:	call   0x404508
  40404a:	nop
  40404b:	add    rsp,0x68
  40404f:	pop    rbx
  404050:	pop    rdi
  404051:	ret    
  404052:	lea    rdx,[rsp+0x30]
  404057:	mov    rcx,rdx
  40405a:	mov    QWORD PTR [rsp+0x28],rdx
  40405f:	call   0x404708
  404064:	mov    rdx,QWORD PTR [rsp+0x28]
  404069:	jmp    0x404037
  40406b:	nop    DWORD PTR [rax+rax*1+0x0]
  404070:	push   r13
  404072:	push   r12
  404074:	push   rbp
  404075:	push   rdi
  404076:	push   rsi
  404077:	push   rbx
  404078:	sub    rsp,0x48
  40407c:	mov    r12,QWORD PTR [rsp+0xa0]
  404084:	mov    rdi,QWORD PTR [rsp+0xa8]
  40408c:	test   rdx,rdx
  40408f:	mov    r13,rcx
  404092:	mov    rsi,r8
  404095:	mov    rbp,r9
  404098:	je     0x404172
  40409e:	mov    rcx,QWORD PTR [rdx+0x8]
  4040a2:	call   0x404760
  4040a7:	mov    r9,rdi
  4040aa:	mov    r8,rax
  4040ad:	xor    edx,edx
  4040af:	mov    rcx,rsi
  4040b2:	mov    rbx,rax
  4040b5:	call   0x403fe0
  4040ba:	mov    rax,QWORD PTR [r13+0x0]
  4040be:	mov    rdx,rbx
  4040c1:	mov    rcx,r13
  4040c4:	call   QWORD PTR [rax+0x10]
  4040c7:	mov    rcx,rbx
  4040ca:	mov    edx,0x2
  4040cf:	call   0x404690
  4040d4:	mov    rdx,QWORD PTR [rip+0x5295]        # 0x409370
  4040db:	pxor   xmm3,xmm3
  4040df:	pxor   xmm2,xmm2
  4040e3:	mov    rcx,rbx
  4040e6:	pxor   xmm1,xmm1
  4040ea:	movzx  eax,WORD PTR [rdx+0x4]
  4040ee:	pxor   xmm0,xmm0
  4040f2:	movsd  xmm4,QWORD PTR [rip+0x4d6e]        # 0x408e68
  4040fa:	cvtsi2sd xmm3,eax
  4040fe:	movzx  eax,WORD PTR [rdx+0x2]
  404102:	cvtsi2sd xmm2,eax
  404106:	movzx  eax,WORD PTR [rdx]
  404109:	cvtsi2sd xmm1,eax
  40410d:	mov    rax,QWORD PTR [rip+0x524c]        # 0x409360
  404114:	movzx  eax,WORD PTR [rax]
  404117:	divsd  xmm3,xmm4
  40411b:	cvtsi2sd xmm0,eax
  40411f:	divsd  xmm0,xmm4
  404123:	divsd  xmm2,xmm4
  404127:	movsd  QWORD PTR [rsp+0x20],xmm0
  40412d:	divsd  xmm1,xmm4
  404131:	call   0x404678
  404136:	lea    r8,[rip+0xfffffffffffffea3]        # 0x403fe0
  40413d:	lea    rdx,[rip+0xfffffffffffff60c]        # 0x403750
  404144:	mov    rcx,rsi
  404147:	mov    QWORD PTR [rsp+0x30],r12
  40414c:	mov    QWORD PTR [rsp+0x28],rbp
  404151:	mov    r9,rbx
  404154:	mov    QWORD PTR [rsp+0x20],rdi
  404159:	call   0x402200
  40415e:	mov    rcx,rbx
  404161:	add    rsp,0x48
  404165:	pop    rbx
  404166:	pop    rsi
  404167:	pop    rdi
  404168:	pop    rbp
  404169:	pop    r12
  40416b:	pop    r13
  40416d:	jmp    0x404750
  404172:	lea    rax,[rip+0x4b88]        # 0x408d01
  404179:	lea    r9,[rip+0x4b90]        # 0x408d10
  404180:	lea    rdx,[rip+0x4b66]        # 0x408ced
  404187:	mov    r8d,0x143
  40418d:	xor    ecx,ecx
  40418f:	mov    QWORD PTR [rsp+0x20],rax
  404194:	call   0x404630
  404199:	nop
  40419a:	nop    WORD PTR [rax+rax*1+0x0]
  4041a0:	push   rbx
  4041a1:	sub    rsp,0x20
  4041a5:	mov    rax,rcx
  4041a8:	mov    rbx,rdx
  4041ab:	mov    rcx,QWORD PTR [rcx+0x8]
  4041af:	mov    rax,QWORD PTR [rax]
  4041b2:	mov    rdx,QWORD PTR [rdx]
  4041b5:	mov    rax,QWORD PTR [rax]
  4041b8:	call   QWORD PTR [rax+0x38]
  4041bb:	mov    rcx,QWORD PTR [rbx+0x8]
  4041bf:	call   0x404668
  4041c4:	mov    rdx,rbx
  4041c7:	mov    ecx,0x10
  4041cc:	add    rsp,0x20
  4041d0:	pop    rbx
  4041d1:	jmp    0x4045a0
  4041d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4041e0:	push   rbp
  4041e1:	push   rdi
  4041e2:	push   rsi
  4041e3:	push   rbx
  4041e4:	sub    rsp,0x28
  4041e8:	mov    rbx,rcx
  4041eb:	mov    ecx,0x10
  4041f0:	mov    edi,edx
  4041f2:	mov    ebp,r8d
  4041f5:	call   0x4045a8
  4041fa:	mov    rsi,rax
  4041fd:	mov    rax,QWORD PTR [rbx]
  404200:	mov    rcx,QWORD PTR [rbx+0x8]
  404204:	mov    r8d,ebp
  404207:	mov    edx,edi
  404209:	mov    rax,QWORD PTR [rax]
  40420c:	call   QWORD PTR [rax+0x30]
  40420f:	mov    r10,QWORD PTR [rbx]
  404212:	mov    rcx,QWORD PTR [rbx+0x8]
  404216:	mov    r9d,ebp
  404219:	mov    QWORD PTR [rsi],rax
  40421c:	mov    r8d,edi
  40421f:	mov    rdx,rax
  404222:	call   QWORD PTR [r10+0x8]
  404226:	mov    QWORD PTR [rsi+0x8],rax
  40422a:	mov    rax,rsi
  40422d:	add    rsp,0x28
  404231:	pop    rbx
  404232:	pop    rsi
  404233:	pop    rdi
  404234:	pop    rbp
  404235:	ret    
  404236:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404240:	push   rsi
  404241:	push   rbx
  404242:	sub    rsp,0x28
  404246:	mov    rsi,rcx
  404249:	mov    rcx,QWORD PTR [rcx+0x10]
  40424d:	call   0x404478
  404252:	mov    rdx,QWORD PTR [rsi+0x18]
  404256:	mov    rbx,rax
  404259:	mov    rcx,rax
  40425c:	call   0x404528
  404261:	mov    rax,rbx
  404264:	add    rsp,0x28
  404268:	pop    rbx
  404269:	pop    rsi
  40426a:	ret    
  40426b:	nop    DWORD PTR [rax+rax*1+0x0]
  404270:	push   rbx
  404271:	sub    rsp,0x20
  404275:	mov    rbx,rcx
  404278:	mov    rcx,QWORD PTR [rcx+0x18]
  40427c:	call   0x404730
  404281:	mov    rcx,QWORD PTR [rbx+0x10]
  404285:	call   0x404530
  40428a:	mov    rax,QWORD PTR [rbx]
  40428d:	mov    rcx,QWORD PTR [rbx+0x8]
  404291:	mov    rax,QWORD PTR [rax]
  404294:	call   QWORD PTR [rax+0x20]
  404297:	call   0x404758
  40429c:	mov    rdx,rbx
  40429f:	mov    ecx,0x20
  4042a4:	add    rsp,0x20
  4042a8:	pop    rbx
  4042a9:	jmp    0x4045a0
  4042ae:	xchg   ax,ax
  4042b0:	push   rbx
  4042b1:	sub    rsp,0x20
  4042b5:	mov    ecx,0x20
  4042ba:	call   0x4045a8
  4042bf:	mov    rbx,rax
  4042c2:	mov    rcx,rax
  4042c5:	call   0x4035a0
  4042ca:	mov    QWORD PTR [rbx+0x8],rax
  4042ce:	call   0x404520
  4042d3:	mov    rdx,QWORD PTR [rip+0x5076]        # 0x409350
  4042da:	pxor   xmm1,xmm1
  4042de:	mov    rcx,rax
  4042e1:	mov    QWORD PTR [rbx+0x10],rax
  4042e5:	cvtsi2sd xmm1,DWORD PTR [rdx]
  4042e9:	call   0x404518
  4042ee:	call   0x404738
  4042f3:	mov    rdx,QWORD PTR [rip+0x5086]        # 0x409380
  4042fa:	mov    QWORD PTR [rbx+0x18],rax
  4042fe:	mov    edx,DWORD PTR [rdx]
  404300:	test   edx,edx
  404302:	je     0x40430e
  404304:	cmp    edx,0x1
  404307:	je     0x404322
  404309:	cmp    edx,0x3
  40430c:	je     0x404320
  40430e:	mov    rax,rbx
  404311:	add    rsp,0x20
  404315:	pop    rbx
  404316:	ret    
  404317:	nop    WORD PTR [rax+rax*1+0x0]
  404320:	mov    dl,0x4
  404322:	mov    rcx,rax
  404325:	call   0x404728
  40432a:	mov    rax,rbx
  40432d:	add    rsp,0x20
  404331:	pop    rbx
  404332:	ret    
  404333:	nop
  404334:	nop
  404335:	nop
  404336:	nop
  404337:	nop
  404338:	nop
  404339:	nop
  40433a:	nop
  40433b:	nop
  40433c:	nop
  40433d:	nop
  40433e:	nop
  40433f:	nop
  404340:	jmp    QWORD PTR [rip+0x9552]        # 0x40d898
  404346:	nop
  404347:	nop
  404348:	jmp    QWORD PTR [rip+0x9542]        # 0x40d890
  40434e:	nop
  40434f:	nop
  404350:	jmp    QWORD PTR [rip+0x9532]        # 0x40d888
  404356:	nop
  404357:	nop
  404358:	jmp    QWORD PTR [rip+0x9522]        # 0x40d880
  40435e:	nop
  40435f:	nop
  404360:	jmp    QWORD PTR [rip+0x9512]        # 0x40d878
  404366:	nop
  404367:	nop
  404368:	jmp    QWORD PTR [rip+0x9502]        # 0x40d870
  40436e:	nop
  40436f:	nop
  404370:	jmp    QWORD PTR [rip+0x94f2]        # 0x40d868
  404376:	nop
  404377:	nop
  404378:	jmp    QWORD PTR [rip+0x94e2]        # 0x40d860
  40437e:	nop
  40437f:	nop
  404380:	jmp    QWORD PTR [rip+0x94d2]        # 0x40d858
  404386:	nop
  404387:	nop
  404388:	jmp    QWORD PTR [rip+0x94c2]        # 0x40d850
  40438e:	nop
  40438f:	nop
  404390:	jmp    QWORD PTR [rip+0x94b2]        # 0x40d848
  404396:	nop
  404397:	nop
  404398:	jmp    QWORD PTR [rip+0x94a2]        # 0x40d840
  40439e:	nop
  40439f:	nop
  4043a0:	jmp    QWORD PTR [rip+0x9492]        # 0x40d838
  4043a6:	nop
  4043a7:	nop
  4043a8:	jmp    QWORD PTR [rip+0x9482]        # 0x40d830
  4043ae:	nop
  4043af:	nop
  4043b0:	jmp    QWORD PTR [rip+0x9472]        # 0x40d828
  4043b6:	nop
  4043b7:	nop
  4043b8:	jmp    QWORD PTR [rip+0x9462]        # 0x40d820
  4043be:	nop
  4043bf:	nop
  4043c0:	jmp    QWORD PTR [rip+0x9452]        # 0x40d818
  4043c6:	nop
  4043c7:	nop
  4043c8:	jmp    QWORD PTR [rip+0x9442]        # 0x40d810
  4043ce:	nop
  4043cf:	nop
  4043d0:	jmp    QWORD PTR [rip+0x9432]        # 0x40d808
  4043d6:	nop
  4043d7:	nop
  4043d8:	jmp    QWORD PTR [rip+0x9422]        # 0x40d800
  4043de:	nop
  4043df:	nop
  4043e0:	jmp    QWORD PTR [rip+0x9412]        # 0x40d7f8
  4043e6:	nop
  4043e7:	nop
  4043e8:	jmp    QWORD PTR [rip+0x9402]        # 0x40d7f0
  4043ee:	nop
  4043ef:	nop
  4043f0:	jmp    QWORD PTR [rip+0x93f2]        # 0x40d7e8
  4043f6:	nop
  4043f7:	nop
  4043f8:	jmp    QWORD PTR [rip+0x93e2]        # 0x40d7e0
  4043fe:	nop
  4043ff:	nop
  404400:	jmp    QWORD PTR [rip+0x93d2]        # 0x40d7d8
  404406:	nop
  404407:	nop
  404408:	jmp    QWORD PTR [rip+0x93c2]        # 0x40d7d0
  40440e:	nop
  40440f:	nop
  404410:	jmp    QWORD PTR [rip+0x93b2]        # 0x40d7c8
  404416:	nop
  404417:	nop
  404418:	jmp    QWORD PTR [rip+0x93a2]        # 0x40d7c0
  40441e:	nop
  40441f:	nop
  404420:	jmp    QWORD PTR [rip+0x9392]        # 0x40d7b8
  404426:	nop
  404427:	nop
  404428:	jmp    QWORD PTR [rip+0x9382]        # 0x40d7b0
  40442e:	nop
  40442f:	nop
  404430:	jmp    QWORD PTR [rip+0x9372]        # 0x40d7a8
  404436:	nop
  404437:	nop
  404438:	jmp    QWORD PTR [rip+0x9362]        # 0x40d7a0
  40443e:	nop
  40443f:	nop
  404440:	jmp    QWORD PTR [rip+0x9352]        # 0x40d798
  404446:	nop
  404447:	nop
  404448:	jmp    QWORD PTR [rip+0x9342]        # 0x40d790
  40444e:	nop
  40444f:	nop
  404450:	jmp    QWORD PTR [rip+0x9332]        # 0x40d788
  404456:	nop
  404457:	nop
  404458:	jmp    QWORD PTR [rip+0x9322]        # 0x40d780
  40445e:	nop
  40445f:	nop
  404460:	jmp    QWORD PTR [rip+0x9312]        # 0x40d778
  404466:	nop
  404467:	nop
  404468:	jmp    QWORD PTR [rip+0x9302]        # 0x40d770
  40446e:	nop
  40446f:	nop
  404470:	jmp    QWORD PTR [rip+0x92f2]        # 0x40d768
  404476:	nop
  404477:	nop
  404478:	jmp    QWORD PTR [rip+0x92e2]        # 0x40d760
  40447e:	nop
  40447f:	nop
  404480:	jmp    QWORD PTR [rip+0x92d2]        # 0x40d758
  404486:	nop
  404487:	nop
  404488:	jmp    QWORD PTR [rip+0x92c2]        # 0x40d750
  40448e:	nop
  40448f:	nop
  404490:	jmp    QWORD PTR [rip+0x92b2]        # 0x40d748
  404496:	nop
  404497:	nop
  404498:	jmp    QWORD PTR [rip+0x92a2]        # 0x40d740
  40449e:	nop
  40449f:	nop
  4044a0:	jmp    QWORD PTR [rip+0x9292]        # 0x40d738
  4044a6:	nop
  4044a7:	nop
  4044a8:	jmp    QWORD PTR [rip+0x9282]        # 0x40d730
  4044ae:	nop
  4044af:	nop
  4044b0:	jmp    QWORD PTR [rip+0x9272]        # 0x40d728
  4044b6:	nop
  4044b7:	nop
  4044b8:	jmp    QWORD PTR [rip+0x9262]        # 0x40d720
  4044be:	nop
  4044bf:	nop
  4044c0:	jmp    QWORD PTR [rip+0x9252]        # 0x40d718
  4044c6:	nop
  4044c7:	nop
  4044c8:	jmp    QWORD PTR [rip+0x9242]        # 0x40d710
  4044ce:	nop
  4044cf:	nop
  4044d0:	jmp    QWORD PTR [rip+0x9232]        # 0x40d708
  4044d6:	nop
  4044d7:	nop
  4044d8:	jmp    QWORD PTR [rip+0x9222]        # 0x40d700
  4044de:	nop
  4044df:	nop
  4044e0:	jmp    QWORD PTR [rip+0x9212]        # 0x40d6f8
  4044e6:	nop
  4044e7:	nop
  4044e8:	jmp    QWORD PTR [rip+0x9202]        # 0x40d6f0
  4044ee:	nop
  4044ef:	nop
  4044f0:	jmp    QWORD PTR [rip+0x91f2]        # 0x40d6e8
  4044f6:	nop
  4044f7:	nop
  4044f8:	jmp    QWORD PTR [rip+0x91e2]        # 0x40d6e0
  4044fe:	nop
  4044ff:	nop
  404500:	jmp    QWORD PTR [rip+0x91d2]        # 0x40d6d8
  404506:	nop
  404507:	nop
  404508:	jmp    QWORD PTR [rip+0x93ba]        # 0x40d8c8
  40450e:	nop
  40450f:	nop
  404510:	jmp    QWORD PTR [rip+0x93aa]        # 0x40d8c0
  404516:	nop
  404517:	nop
  404518:	jmp    QWORD PTR [rip+0x939a]        # 0x40d8b8
  40451e:	nop
  40451f:	nop
  404520:	jmp    QWORD PTR [rip+0x938a]        # 0x40d8b0
  404526:	nop
  404527:	nop
  404528:	jmp    QWORD PTR [rip+0x937a]        # 0x40d8a8
  40452e:	nop
  40452f:	nop
  404530:	jmp    QWORD PTR [rip+0x95ea]        # 0x40db20
  404536:	nop
  404537:	nop
  404538:	jmp    QWORD PTR [rip+0x95d2]        # 0x40db10
  40453e:	nop
  40453f:	nop
  404540:	jmp    QWORD PTR [rip+0x95c2]        # 0x40db08
  404546:	nop
  404547:	nop
  404548:	jmp    QWORD PTR [rip+0x95b2]        # 0x40db00
  40454e:	nop
  40454f:	nop
  404550:	jmp    QWORD PTR [rip+0x95a2]        # 0x40daf8
  404556:	nop
  404557:	nop
  404558:	jmp    QWORD PTR [rip+0x9592]        # 0x40daf0
  40455e:	nop
  40455f:	nop
  404560:	jmp    QWORD PTR [rip+0x9582]        # 0x40dae8
  404566:	nop
  404567:	nop
  404568:	jmp    QWORD PTR [rip+0x9572]        # 0x40dae0
  40456e:	nop
  40456f:	nop
  404570:	jmp    QWORD PTR [rip+0x9562]        # 0x40dad8
  404576:	nop
  404577:	nop
  404578:	jmp    QWORD PTR [rip+0x9552]        # 0x40dad0
  40457e:	nop
  40457f:	nop
  404580:	jmp    QWORD PTR [rip+0x9542]        # 0x40dac8
  404586:	nop
  404587:	nop
  404588:	jmp    QWORD PTR [rip+0x9532]        # 0x40dac0
  40458e:	nop
  40458f:	nop
  404590:	jmp    QWORD PTR [rip+0x9522]        # 0x40dab8
  404596:	nop
  404597:	nop
  404598:	jmp    QWORD PTR [rip+0x9512]        # 0x40dab0
  40459e:	nop
  40459f:	nop
  4045a0:	jmp    QWORD PTR [rip+0x9502]        # 0x40daa8
  4045a6:	nop
  4045a7:	nop
  4045a8:	jmp    QWORD PTR [rip+0x94f2]        # 0x40daa0
  4045ae:	nop
  4045af:	nop
  4045b0:	jmp    QWORD PTR [rip+0x94e2]        # 0x40da98
  4045b6:	nop
  4045b7:	nop
  4045b8:	jmp    QWORD PTR [rip+0x94d2]        # 0x40da90
  4045be:	nop
  4045bf:	nop
  4045c0:	jmp    QWORD PTR [rip+0x94c2]        # 0x40da88
  4045c6:	nop
  4045c7:	nop
  4045c8:	jmp    QWORD PTR [rip+0x94b2]        # 0x40da80
  4045ce:	nop
  4045cf:	nop
  4045d0:	jmp    QWORD PTR [rip+0x94a2]        # 0x40da78
  4045d6:	nop
  4045d7:	nop
  4045d8:	jmp    QWORD PTR [rip+0x9492]        # 0x40da70
  4045de:	nop
  4045df:	nop
  4045e0:	jmp    QWORD PTR [rip+0x9482]        # 0x40da68
  4045e6:	nop
  4045e7:	nop
  4045e8:	jmp    QWORD PTR [rip+0x9472]        # 0x40da60
  4045ee:	nop
  4045ef:	nop
  4045f0:	jmp    QWORD PTR [rip+0x9462]        # 0x40da58
  4045f6:	nop
  4045f7:	nop
  4045f8:	jmp    QWORD PTR [rip+0x9452]        # 0x40da50
  4045fe:	nop
  4045ff:	nop
  404600:	jmp    QWORD PTR [rip+0x9442]        # 0x40da48
  404606:	nop
  404607:	nop
  404608:	jmp    QWORD PTR [rip+0x9432]        # 0x40da40
  40460e:	nop
  40460f:	nop
  404610:	jmp    QWORD PTR [rip+0x9422]        # 0x40da38
  404616:	nop
  404617:	nop
  404618:	jmp    QWORD PTR [rip+0x9412]        # 0x40da30
  40461e:	nop
  40461f:	nop
  404620:	jmp    QWORD PTR [rip+0x9402]        # 0x40da28
  404626:	nop
  404627:	nop
  404628:	jmp    QWORD PTR [rip+0x93f2]        # 0x40da20
  40462e:	nop
  40462f:	nop
  404630:	jmp    QWORD PTR [rip+0x93e2]        # 0x40da18
  404636:	nop
  404637:	nop
  404638:	jmp    QWORD PTR [rip+0x93d2]        # 0x40da10
  40463e:	nop
  40463f:	nop
  404640:	jmp    QWORD PTR [rip+0x93ba]        # 0x40da00
  404646:	nop
  404647:	nop
  404648:	jmp    QWORD PTR [rip+0x93aa]        # 0x40d9f8
  40464e:	nop
  40464f:	nop
  404650:	jmp    QWORD PTR [rip+0x939a]        # 0x40d9f0
  404656:	nop
  404657:	nop
  404658:	jmp    QWORD PTR [rip+0x938a]        # 0x40d9e8
  40465e:	nop
  40465f:	nop
  404660:	jmp    QWORD PTR [rip+0x937a]        # 0x40d9e0
  404666:	nop
  404667:	nop
  404668:	jmp    QWORD PTR [rip+0x936a]        # 0x40d9d8
  40466e:	nop
  40466f:	nop
  404670:	jmp    QWORD PTR [rip+0x935a]        # 0x40d9d0
  404676:	nop
  404677:	nop
  404678:	jmp    QWORD PTR [rip+0x934a]        # 0x40d9c8
  40467e:	nop
  40467f:	nop
  404680:	jmp    QWORD PTR [rip+0x933a]        # 0x40d9c0
  404686:	nop
  404687:	nop
  404688:	jmp    QWORD PTR [rip+0x932a]        # 0x40d9b8
  40468e:	nop
  40468f:	nop
  404690:	jmp    QWORD PTR [rip+0x931a]        # 0x40d9b0
  404696:	nop
  404697:	nop
  404698:	jmp    QWORD PTR [rip+0x930a]        # 0x40d9a8
  40469e:	nop
  40469f:	nop
  4046a0:	jmp    QWORD PTR [rip+0x92fa]        # 0x40d9a0
  4046a6:	nop
  4046a7:	nop
  4046a8:	jmp    QWORD PTR [rip+0x92ea]        # 0x40d998
  4046ae:	nop
  4046af:	nop
  4046b0:	jmp    QWORD PTR [rip+0x92da]        # 0x40d990
  4046b6:	nop
  4046b7:	nop
  4046b8:	jmp    QWORD PTR [rip+0x92ca]        # 0x40d988
  4046be:	nop
  4046bf:	nop
  4046c0:	jmp    QWORD PTR [rip+0x92ba]        # 0x40d980
  4046c6:	nop
  4046c7:	nop
  4046c8:	jmp    QWORD PTR [rip+0x92aa]        # 0x40d978
  4046ce:	nop
  4046cf:	nop
  4046d0:	jmp    QWORD PTR [rip+0x929a]        # 0x40d970
  4046d6:	nop
  4046d7:	nop
  4046d8:	jmp    QWORD PTR [rip+0x928a]        # 0x40d968
  4046de:	nop
  4046df:	nop
  4046e0:	jmp    QWORD PTR [rip+0x927a]        # 0x40d960
  4046e6:	nop
  4046e7:	nop
  4046e8:	jmp    QWORD PTR [rip+0x926a]        # 0x40d958
  4046ee:	nop
  4046ef:	nop
  4046f0:	jmp    QWORD PTR [rip+0x925a]        # 0x40d950
  4046f6:	nop
  4046f7:	nop
  4046f8:	jmp    QWORD PTR [rip+0x924a]        # 0x40d948
  4046fe:	nop
  4046ff:	nop
  404700:	jmp    QWORD PTR [rip+0x923a]        # 0x40d940
  404706:	nop
  404707:	nop
  404708:	jmp    QWORD PTR [rip+0x922a]        # 0x40d938
  40470e:	nop
  40470f:	nop
  404710:	jmp    QWORD PTR [rip+0x921a]        # 0x40d930
  404716:	nop
  404717:	nop
  404718:	jmp    QWORD PTR [rip+0x920a]        # 0x40d928
  40471e:	nop
  40471f:	nop
  404720:	jmp    QWORD PTR [rip+0x91fa]        # 0x40d920
  404726:	nop
  404727:	nop
  404728:	jmp    QWORD PTR [rip+0x91ea]        # 0x40d918
  40472e:	nop
  40472f:	nop
  404730:	jmp    QWORD PTR [rip+0x91da]        # 0x40d910
  404736:	nop
  404737:	nop
  404738:	jmp    QWORD PTR [rip+0x91ca]        # 0x40d908
  40473e:	nop
  40473f:	nop
  404740:	jmp    QWORD PTR [rip+0x91ba]        # 0x40d900
  404746:	nop
  404747:	nop
  404748:	jmp    QWORD PTR [rip+0x91aa]        # 0x40d8f8
  40474e:	nop
  40474f:	nop
  404750:	jmp    QWORD PTR [rip+0x919a]        # 0x40d8f0
  404756:	nop
  404757:	nop
  404758:	jmp    QWORD PTR [rip+0x918a]        # 0x40d8e8
  40475e:	nop
  40475f:	nop
  404760:	jmp    QWORD PTR [rip+0x917a]        # 0x40d8e0
  404766:	nop
  404767:	nop
  404768:	jmp    QWORD PTR [rip+0x916a]        # 0x40d8d8
  40476e:	nop
  40476f:	nop
  404770:	push   rbx
  404771:	sub    rsp,0x30
  404775:	mov    rbx,rcx
  404778:	mov    rcx,QWORD PTR [rip+0x8311]        # 0x40ca90
  40477f:	call   0x404d20
  404784:	cmp    rax,0xffffffffffffffff
  404788:	mov    QWORD PTR [rsp+0x20],rax
  40478d:	je     0x404805
  40478f:	mov    ecx,0x8
  404794:	call   0x405d70
  404799:	mov    rcx,QWORD PTR [rip+0x82f0]        # 0x40ca90
  4047a0:	call   0x404d20
  4047a5:	mov    rcx,QWORD PTR [rip+0x82ec]        # 0x40ca98
  4047ac:	mov    QWORD PTR [rsp+0x20],rax
  4047b1:	call   0x404d20
  4047b6:	lea    rdx,[rsp+0x20]
  4047bb:	lea    r8,[rsp+0x28]
  4047c0:	mov    rcx,rbx
  4047c3:	mov    QWORD PTR [rsp+0x28],rax
  4047c8:	call   0x405dc0
  4047cd:	mov    rcx,QWORD PTR [rsp+0x20]
  4047d2:	mov    rbx,rax
  4047d5:	call   0x404d30
  4047da:	mov    rcx,QWORD PTR [rsp+0x28]
  4047df:	mov    QWORD PTR [rip+0x82aa],rax        # 0x40ca90
  4047e6:	call   0x404d30
  4047eb:	mov    ecx,0x8
  4047f0:	mov    QWORD PTR [rip+0x82a1],rax        # 0x40ca98
  4047f7:	call   0x405d58
  4047fc:	mov    rax,rbx
  4047ff:	add    rsp,0x30
  404803:	pop    rbx
  404804:	ret    
  404805:	mov    rax,QWORD PTR [rip+0x4994]        # 0x4091a0
  40480c:	mov    rcx,rbx
  40480f:	call   QWORD PTR [rax]
  404811:	add    rsp,0x30
  404815:	pop    rbx
  404816:	ret    
  404817:	nop    WORD PTR [rax+rax*1+0x0]
  404820:	sub    rsp,0x28
  404824:	call   0x404770
  404829:	test   rax,rax
  40482c:	sete   al
  40482f:	movzx  eax,al
  404832:	neg    eax
  404834:	add    rsp,0x28
  404838:	ret    
  404839:	nop
  40483a:	nop
  40483b:	nop
  40483c:	nop
  40483d:	nop
  40483e:	nop
  40483f:	nop
  404840:	sub    rsp,0x28
  404844:	mov    rax,QWORD PTR [rip+0x2855]        # 0x4070a0
  40484b:	mov    rax,QWORD PTR [rax]
  40484e:	test   rax,rax
  404851:	je     0x404870
  404853:	call   rax
  404855:	mov    rax,QWORD PTR [rip+0x2844]        # 0x4070a0
  40485c:	lea    rdx,[rax+0x8]
  404860:	mov    rax,QWORD PTR [rax+0x8]
  404864:	mov    QWORD PTR [rip+0x2835],rdx        # 0x4070a0
  40486b:	test   rax,rax
  40486e:	jne    0x404853
  404870:	add    rsp,0x28
  404874:	ret    
  404875:	nop
  404876:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404880:	push   rsi
  404881:	push   rbx
  404882:	sub    rsp,0x28
  404886:	mov    rsi,QWORD PTR [rip+0x4893]        # 0x409120
  40488d:	mov    rax,QWORD PTR [rsi]
  404890:	cmp    eax,0xffffffff
  404893:	mov    ebx,eax
  404895:	je     0x4048c0
  404897:	test   ebx,ebx
  404899:	je     0x4048aa
  40489b:	nop    DWORD PTR [rax+rax*1+0x0]
  4048a0:	mov    eax,ebx
  4048a2:	call   QWORD PTR [rsi+rax*8]
  4048a5:	sub    ebx,0x1
  4048a8:	jne    0x4048a0
  4048aa:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x404840
  4048b1:	add    rsp,0x28
  4048b5:	pop    rbx
  4048b6:	pop    rsi
  4048b7:	jmp    0x404820
  4048bc:	nop    DWORD PTR [rax+0x0]
  4048c0:	xor    ebx,ebx
  4048c2:	jmp    0x4048c6
  4048c4:	mov    ebx,eax
  4048c6:	lea    edx,[rbx+0x1]
  4048c9:	cmp    QWORD PTR [rsi+rdx*8],0x0
  4048ce:	mov    rax,rdx
  4048d1:	jne    0x4048c4
  4048d3:	jmp    0x404897
  4048d5:	nop
  4048d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4048e0:	mov    eax,DWORD PTR [rip+0x77ea]        # 0x40c0d0
  4048e6:	test   eax,eax
  4048e8:	je     0x4048f0
  4048ea:	repz ret 
  4048ec:	nop    DWORD PTR [rax+0x0]
  4048f0:	mov    DWORD PTR [rip+0x77d6],0x1        # 0x40c0d0
  4048fa:	jmp    0x404880
  4048fc:	nop
  4048fd:	nop
  4048fe:	nop
  4048ff:	nop
  404900:	mov    rax,QWORD PTR [rip+0x9311]        # 0x40dc18
  404907:	rex.W jmp rax
  40490a:	nop
  40490b:	nop
  40490c:	nop
  40490d:	nop
  40490e:	nop
  40490f:	nop
  404910:	xor    eax,eax
  404912:	ret    
  404913:	nop
  404914:	nop
  404915:	nop
  404916:	nop
  404917:	nop
  404918:	nop
  404919:	nop
  40491a:	nop
  40491b:	nop
  40491c:	nop
  40491d:	nop
  40491e:	nop
  40491f:	nop
  404920:	push   r12
  404922:	push   rbp
  404923:	push   rdi
  404924:	push   rsi
  404925:	push   rbx
  404926:	sub    rsp,0x40
  40492a:	mov    rbx,QWORD PTR [rip+0x27cf]        # 0x407100
  404931:	movabs rax,0x2b992ddfa232
  40493b:	mov    QWORD PTR [rsp+0x20],0x0
  404944:	cmp    rbx,rax
  404947:	je     0x404960
  404949:	not    rbx
  40494c:	mov    QWORD PTR [rip+0x27bd],rbx        # 0x407110
  404953:	add    rsp,0x40
  404957:	pop    rbx
  404958:	pop    rsi
  404959:	pop    rdi
  40495a:	pop    rbp
  40495b:	pop    r12
  40495d:	ret    
  40495e:	xchg   ax,ax
  404960:	lea    rcx,[rsp+0x20]
  404965:	call   QWORD PTR [rip+0x91fd]        # 0x40db68
  40496b:	mov    r12,QWORD PTR [rsp+0x20]
  404970:	call   QWORD PTR [rip+0x91d2]        # 0x40db48
  404976:	mov    ebp,eax
  404978:	call   QWORD PTR [rip+0x91d2]        # 0x40db50
  40497e:	mov    edi,eax
  404980:	call   QWORD PTR [rip+0x91ea]        # 0x40db70
  404986:	lea    rcx,[rsp+0x30]
  40498b:	mov    esi,eax
  40498d:	call   QWORD PTR [rip+0x91f5]        # 0x40db88
  404993:	xor    r12,QWORD PTR [rsp+0x30]
  404998:	mov    edx,edi
  40499a:	movabs rax,0xffffffffffff
  4049a4:	xor    rbp,r12
  4049a7:	mov    rdi,rbp
  4049aa:	xor    rdi,rdx
  4049ad:	mov    edx,esi
  4049af:	xor    rdi,rdx
  4049b2:	mov    rsi,rdi
  4049b5:	and    rsi,rax
  4049b8:	cmp    rsi,rbx
  4049bb:	je     0x4049e0
  4049bd:	mov    rax,rsi
  4049c0:	not    rax
  4049c3:	mov    QWORD PTR [rip+0x2736],rsi        # 0x407100
  4049ca:	mov    QWORD PTR [rip+0x273f],rax        # 0x407110
  4049d1:	add    rsp,0x40
  4049d5:	pop    rbx
  4049d6:	pop    rsi
  4049d7:	pop    rdi
  4049d8:	pop    rbp
  4049d9:	pop    r12
  4049db:	ret    
  4049dc:	nop    DWORD PTR [rax+0x0]
  4049e0:	movabs rax,0xffffd466d2205dcc
  4049ea:	movabs rsi,0x2b992ddfa233
  4049f4:	jmp    0x4049c3
  4049f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404a00:	push   rbp
  404a01:	push   rsi
  404a02:	push   rbx
  404a03:	mov    rbp,rsp
  404a06:	sub    rsp,0x70
  404a0a:	mov    rsi,rcx
  404a0d:	lea    rcx,[rip+0x76ec]        # 0x40c100
  404a14:	call   QWORD PTR [rip+0x917e]        # 0x40db98
  404a1a:	mov    rbx,QWORD PTR [rip+0x77d7]        # 0x40c1f8
  404a21:	xor    r8d,r8d
  404a24:	lea    rdx,[rbp-0x28]
  404a28:	mov    rcx,rbx
  404a2b:	call   QWORD PTR [rip+0x916f]        # 0x40dba0
  404a31:	test   rax,rax
  404a34:	mov    r9,rax
  404a37:	je     0x404ae0
  404a3d:	lea    rax,[rbp-0x20]
  404a41:	mov    QWORD PTR [rsp+0x38],0x0
  404a4a:	mov    r8,rbx
  404a4d:	mov    rdx,QWORD PTR [rbp-0x28]
  404a51:	xor    ecx,ecx
  404a53:	mov    QWORD PTR [rsp+0x30],rax
  404a58:	lea    rax,[rbp-0x18]
  404a5c:	mov    QWORD PTR [rsp+0x28],rax
  404a61:	lea    rax,[rip+0x7698]        # 0x40c100
  404a68:	mov    QWORD PTR [rsp+0x20],rax
  404a6d:	call   QWORD PTR [rip+0x9135]        # 0x40dba8
  404a73:	mov    rax,QWORD PTR [rip+0x777e]        # 0x40c1f8
  404a7a:	xor    ecx,ecx
  404a7c:	mov    QWORD PTR [rip+0x76fd],rsi        # 0x40c180
  404a83:	mov    DWORD PTR [rip+0x7b73],0xc0000409        # 0x40c600
  404a8d:	mov    DWORD PTR [rip+0x7b6d],0x1        # 0x40c604
  404a97:	mov    QWORD PTR [rip+0x7b72],rax        # 0x40c610
  404a9e:	mov    rax,QWORD PTR [rip+0x265b]        # 0x407100
  404aa5:	mov    QWORD PTR [rbp-0x10],rax
  404aa9:	mov    rax,QWORD PTR [rip+0x2660]        # 0x407110
  404ab0:	mov    QWORD PTR [rbp-0x8],rax
  404ab4:	call   QWORD PTR [rip+0x90f6]        # 0x40dbb0
  404aba:	lea    rcx,[rip+0x43bf]        # 0x408e80
  404ac1:	call   QWORD PTR [rip+0x9109]        # 0x40dbd0
  404ac7:	call   QWORD PTR [rip+0x9073]        # 0x40db40
  404acd:	mov    edx,0xc0000409
  404ad2:	mov    rcx,rax
  404ad5:	call   QWORD PTR [rip+0x90e5]        # 0x40dbc0
  404adb:	call   0x405d50
  404ae0:	mov    rax,QWORD PTR [rbp+0x18]
  404ae4:	mov    QWORD PTR [rip+0x770d],rax        # 0x40c1f8
  404aeb:	lea    rax,[rbp+0x8]
  404aef:	mov    QWORD PTR [rip+0x76a2],rax        # 0x40c198
  404af6:	jmp    0x404a73
  404afb:	nop
  404afc:	nop
  404afd:	nop
  404afe:	nop
  404aff:	nop
  404b00:	sub    rsp,0x28
  404b04:	test   edx,edx
  404b06:	je     0x404b20
  404b08:	cmp    edx,0x3
  404b0b:	je     0x404b20
  404b0d:	mov    eax,0x1
  404b12:	add    rsp,0x28
  404b16:	ret    
  404b17:	nop    WORD PTR [rax+rax*1+0x0]
  404b20:	call   0x405810
  404b25:	mov    eax,0x1
  404b2a:	add    rsp,0x28
  404b2e:	ret    
  404b2f:	nop
  404b30:	push   rsi
  404b31:	push   rbx
  404b32:	sub    rsp,0x28
  404b36:	mov    rax,QWORD PTR [rip+0x45c3]        # 0x409100
  404b3d:	cmp    DWORD PTR [rax],0x2
  404b40:	je     0x404b48
  404b42:	mov    DWORD PTR [rax],0x2
  404b48:	cmp    edx,0x2
  404b4b:	je     0x404b60
  404b4d:	cmp    edx,0x1
  404b50:	je     0x404b92
  404b52:	mov    eax,0x1
  404b57:	add    rsp,0x28
  404b5b:	pop    rbx
  404b5c:	pop    rsi
  404b5d:	ret    
  404b5e:	xchg   ax,ax
  404b60:	lea    rbx,[rip+0xb4f9]        # 0x410060
  404b67:	lea    rsi,[rip+0xb4f2]        # 0x410060
  404b6e:	cmp    rbx,rsi
  404b71:	je     0x404b52
  404b73:	mov    rax,QWORD PTR [rbx]
  404b76:	test   rax,rax
  404b79:	je     0x404b7d
  404b7b:	call   rax
  404b7d:	add    rbx,0x8
  404b81:	cmp    rbx,rsi
  404b84:	jne    0x404b73
  404b86:	mov    eax,0x1
  404b8b:	add    rsp,0x28
  404b8f:	pop    rbx
  404b90:	pop    rsi
  404b91:	ret    
  404b92:	call   0x405810
  404b97:	jmp    0x404b52
  404b99:	nop    DWORD PTR [rax+0x0]
  404ba0:	xor    eax,eax
  404ba2:	ret    
  404ba3:	nop
  404ba4:	nop
  404ba5:	nop
  404ba6:	nop
  404ba7:	nop
  404ba8:	nop
  404ba9:	nop
  404baa:	nop
  404bab:	nop
  404bac:	nop
  404bad:	nop
  404bae:	nop
  404baf:	nop
  404bb0:	sub    rsp,0x58
  404bb4:	mov    rax,QWORD PTR [rip+0x7b25]        # 0x40c6e0
  404bbb:	test   rax,rax
  404bbe:	je     0x404bec
  404bc0:	movsd  xmm0,QWORD PTR [rsp+0x80]
  404bc9:	mov    DWORD PTR [rsp+0x20],ecx
  404bcd:	lea    rcx,[rsp+0x20]
  404bd2:	mov    QWORD PTR [rsp+0x28],rdx
  404bd7:	movsd  QWORD PTR [rsp+0x30],xmm2
  404bdd:	movsd  QWORD PTR [rsp+0x38],xmm3
  404be3:	movsd  QWORD PTR [rsp+0x40],xmm0
  404be9:	call   rax
  404beb:	nop
  404bec:	add    rsp,0x58
  404bf0:	ret    
  404bf1:	nop    DWORD PTR [rax+rax*1+0x0]
  404bf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404c00:	mov    QWORD PTR [rip+0x7ad9],rcx        # 0x40c6e0
  404c07:	jmp    0x405d98
  404c0c:	nop    DWORD PTR [rax+0x0]
  404c10:	push   rsi
  404c11:	push   rbx
  404c12:	sub    rsp,0x78
  404c16:	movaps XMMWORD PTR [rsp+0x40],xmm6
  404c1b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  404c20:	movaps XMMWORD PTR [rsp+0x60],xmm8
  404c26:	cmp    DWORD PTR [rcx],0x6
  404c29:	ja     0x404d00
  404c2f:	mov    edx,DWORD PTR [rcx]
  404c31:	lea    rax,[rip+0x438c]        # 0x408fc4
  404c38:	movsxd rdx,DWORD PTR [rax+rdx*4]
  404c3c:	add    rax,rdx
  404c3f:	jmp    rax
  404c41:	lea    rbx,[rip+0x4258]        # 0x408ea0
  404c48:	nop    DWORD PTR [rax+rax*1+0x0]
  404c50:	movsd  xmm8,QWORD PTR [rcx+0x20]
  404c56:	mov    rsi,QWORD PTR [rcx+0x8]
  404c5a:	movsd  xmm7,QWORD PTR [rcx+0x18]
  404c5f:	movsd  xmm6,QWORD PTR [rcx+0x10]
  404c64:	call   0x405db0
  404c69:	movsd  QWORD PTR [rsp+0x30],xmm8
  404c70:	lea    rcx,[rax+0x60]
  404c74:	lea    rdx,[rip+0x431d]        # 0x408f98
  404c7b:	movsd  QWORD PTR [rsp+0x28],xmm7
  404c81:	mov    r9,rsi
  404c84:	mov    r8,rbx
  404c87:	movsd  QWORD PTR [rsp+0x20],xmm6
  404c8d:	call   0x405d30
  404c92:	nop
  404c93:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  404c98:	xor    eax,eax
  404c9a:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  404c9f:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  404ca5:	add    rsp,0x78
  404ca9:	pop    rbx
  404caa:	pop    rsi
  404cab:	ret    
  404cac:	nop    DWORD PTR [rax+0x0]
  404cb0:	lea    rbx,[rip+0x4208]        # 0x408ebf
  404cb7:	jmp    0x404c50
  404cb9:	nop    DWORD PTR [rax+0x0]
  404cc0:	lea    rbx,[rip+0x4219]        # 0x408ee0
  404cc7:	jmp    0x404c50
  404cc9:	nop    DWORD PTR [rax+0x0]
  404cd0:	lea    rbx,[rip+0x4279]        # 0x408f50
  404cd7:	jmp    0x404c50
  404cdc:	nop    DWORD PTR [rax+0x0]
  404ce0:	lea    rbx,[rip+0x4241]        # 0x408f28
  404ce7:	jmp    0x404c50
  404cec:	nop    DWORD PTR [rax+0x0]
  404cf0:	lea    rbx,[rip+0x4209]        # 0x408f00
  404cf7:	jmp    0x404c50
  404cfc:	nop    DWORD PTR [rax+0x0]
  404d00:	lea    rbx,[rip+0x427f]        # 0x408f86
  404d07:	jmp    0x404c50
  404d0c:	nop
  404d0d:	nop
  404d0e:	nop
  404d0f:	nop
  404d10:	fninit 
  404d12:	ret    
  404d13:	nop
  404d14:	nop
  404d15:	nop
  404d16:	nop
  404d17:	nop
  404d18:	nop
  404d19:	nop
  404d1a:	nop
  404d1b:	nop
  404d1c:	nop
  404d1d:	nop
  404d1e:	nop
  404d1f:	nop
  404d20:	mov    rax,rcx
  404d23:	ret    
  404d24:	xchg   ax,ax
  404d26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404d30:	mov    rax,rcx
  404d33:	ret    
  404d34:	nop
  404d35:	nop
  404d36:	nop
  404d37:	nop
  404d38:	nop
  404d39:	nop
  404d3a:	nop
  404d3b:	nop
  404d3c:	nop
  404d3d:	nop
  404d3e:	nop
  404d3f:	nop
  404d40:	push   rsi
  404d41:	push   rbx
  404d42:	sub    rsp,0x38
  404d46:	lea    rax,[rsp+0x58]
  404d4b:	mov    rbx,rcx
  404d4e:	mov    QWORD PTR [rsp+0x58],rdx
  404d53:	mov    QWORD PTR [rsp+0x60],r8
  404d58:	mov    QWORD PTR [rsp+0x68],r9
  404d5d:	mov    QWORD PTR [rsp+0x28],rax
  404d62:	call   0x405db0
  404d67:	lea    rcx,[rip+0x4272]        # 0x408fe0
  404d6e:	lea    r9,[rax+0x60]
  404d72:	mov    r8d,0x1b
  404d78:	mov    edx,0x1
  404d7d:	call   0x405d20
  404d82:	mov    rsi,QWORD PTR [rsp+0x28]
  404d87:	call   0x405db0
  404d8c:	lea    rcx,[rax+0x60]
  404d90:	mov    rdx,rbx
  404d93:	mov    r8,rsi
  404d96:	call   0x405cd8
  404d9b:	call   0x405d50
  404da0:	nop
  404da1:	nop    DWORD PTR [rax+rax*1+0x0]
  404da6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404db0:	push   r13
  404db2:	push   r12
  404db4:	push   rbp
  404db5:	push   rdi
  404db6:	push   rsi
  404db7:	push   rbx
  404db8:	sub    rsp,0x58
  404dbc:	movsxd rbp,DWORD PTR [rip+0x7941]        # 0x40c704
  404dc3:	mov    rbx,rcx
  404dc6:	mov    rsi,rdx
  404dc9:	mov    rdi,r8
  404dcc:	test   ebp,ebp
  404dce:	jle    0x404eca
  404dd4:	mov    rax,QWORD PTR [rip+0x792d]        # 0x40c708
  404ddb:	xor    r9d,r9d
  404dde:	add    rax,0x8
  404de2:	mov    r10,QWORD PTR [rax]
  404de5:	cmp    rbx,r10
  404de8:	jb     0x404dfe
  404dea:	mov    rdx,QWORD PTR [rax+0x8]
  404dee:	mov    r11d,DWORD PTR [rdx+0x8]
  404df2:	add    r10,r11
  404df5:	cmp    rbx,r10
  404df8:	jb     0x404eb0
  404dfe:	add    r9d,0x1
  404e02:	add    rax,0x18
  404e06:	cmp    r9d,ebp
  404e09:	jne    0x404de2
  404e0b:	mov    rcx,rbx
  404e0e:	call   0x405a20
  404e13:	test   rax,rax
  404e16:	mov    r12,rax
  404e19:	je     0x404f02
  404e1f:	lea    rbp,[rbp+rbp*2+0x0]
  404e24:	shl    rbp,0x3
  404e28:	mov    r13,rbp
  404e2b:	add    r13,QWORD PTR [rip+0x78d6]        # 0x40c708
  404e32:	mov    QWORD PTR [r13+0x10],rax
  404e36:	mov    DWORD PTR [r13+0x0],0x0
  404e3e:	call   0x405b40
  404e43:	mov    edx,DWORD PTR [r12+0xc]
  404e48:	mov    r8d,0x30
  404e4e:	add    rax,rdx
  404e51:	lea    rdx,[rsp+0x20]
  404e56:	mov    QWORD PTR [r13+0x8],rax
  404e5a:	mov    rax,QWORD PTR [rip+0x78a7]        # 0x40c708
  404e61:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  404e66:	call   QWORD PTR [rip+0x8d74]        # 0x40dbe0
  404e6c:	test   rax,rax
  404e6f:	je     0x404ee5
  404e71:	mov    eax,DWORD PTR [rsp+0x44]
  404e75:	lea    edx,[rax-0x4]
  404e78:	and    edx,0xfffffffb
  404e7b:	je     0x404ea9
  404e7d:	sub    eax,0x40
  404e80:	and    eax,0xffffffbf
  404e83:	je     0x404ea9
  404e85:	mov    r9,rbp
  404e88:	add    r9,QWORD PTR [rip+0x7879]        # 0x40c708
  404e8f:	mov    r8d,0x40
  404e95:	mov    rdx,QWORD PTR [rsp+0x38]
  404e9a:	mov    rcx,QWORD PTR [rsp+0x20]
  404e9f:	call   QWORD PTR [rip+0x8d33]        # 0x40dbd8
  404ea5:	test   eax,eax
  404ea7:	je     0x404ed1
  404ea9:	add    DWORD PTR [rip+0x7854],0x1        # 0x40c704
  404eb0:	mov    r8,rdi
  404eb3:	mov    rdx,rsi
  404eb6:	mov    rcx,rbx
  404eb9:	add    rsp,0x58
  404ebd:	pop    rbx
  404ebe:	pop    rsi
  404ebf:	pop    rdi
  404ec0:	pop    rbp
  404ec1:	pop    r12
  404ec3:	pop    r13
  404ec5:	jmp    0x405d10
  404eca:	xor    ebp,ebp
  404ecc:	jmp    0x404e0b
  404ed1:	call   QWORD PTR [rip+0x8c81]        # 0x40db58
  404ed7:	lea    rcx,[rip+0x417a]        # 0x409058
  404ede:	mov    edx,eax
  404ee0:	call   0x404d40
  404ee5:	mov    rax,QWORD PTR [rip+0x781c]        # 0x40c708
  404eec:	mov    edx,DWORD PTR [r12+0x8]
  404ef1:	lea    rcx,[rip+0x4128]        # 0x409020
  404ef8:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  404efd:	call   0x404d40
  404f02:	lea    rcx,[rip+0x40f7]        # 0x409000
  404f09:	mov    rdx,rbx
  404f0c:	call   0x404d40
  404f11:	nop
  404f12:	nop    DWORD PTR [rax+0x0]
  404f16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404f20:	push   rbp
  404f21:	push   r14
  404f23:	push   r13
  404f25:	push   r12
  404f27:	push   rdi
  404f28:	push   rsi
  404f29:	push   rbx
  404f2a:	mov    rbp,rsp
  404f2d:	sub    rsp,0x60
  404f31:	mov    ebx,DWORD PTR [rip+0x77c9]        # 0x40c700
  404f37:	test   ebx,ebx
  404f39:	je     0x404f50
  404f3b:	mov    rsp,rbp
  404f3e:	pop    rbx
  404f3f:	pop    rsi
  404f40:	pop    rdi
  404f41:	pop    r12
  404f43:	pop    r13
  404f45:	pop    r14
  404f47:	pop    rbp
  404f48:	ret    
  404f49:	nop    DWORD PTR [rax+0x0]
  404f50:	mov    DWORD PTR [rip+0x77a6],0x1        # 0x40c700
  404f5a:	call   0x405a70
  404f5f:	cdqe   
  404f61:	lea    rax,[rax+rax*2]
  404f65:	lea    rax,[rax*8+0x1e]
  404f6d:	and    rax,0xfffffffffffffff0
  404f71:	call   0x405c90
  404f76:	mov    rsi,QWORD PTR [rip+0x41b3]        # 0x409130
  404f7d:	mov    rbx,QWORD PTR [rip+0x41bc]        # 0x409140
  404f84:	sub    rsp,rax
  404f87:	mov    DWORD PTR [rip+0x7773],0x0        # 0x40c704
  404f91:	lea    rax,[rsp+0x20]
  404f96:	mov    QWORD PTR [rip+0x776b],rax        # 0x40c708
  404f9d:	mov    rax,rsi
  404fa0:	sub    rax,rbx
  404fa3:	cmp    rax,0x7
  404fa7:	jle    0x404f3b
  404fa9:	cmp    rax,0xb
  404fad:	jle    0x404fd5
  404faf:	mov    r11d,DWORD PTR [rbx]
  404fb2:	test   r11d,r11d
  404fb5:	jne    0x405100
  404fbb:	mov    r10d,DWORD PTR [rbx+0x4]
  404fbf:	test   r10d,r10d
  404fc2:	jne    0x405100
  404fc8:	mov    r9d,DWORD PTR [rbx+0x8]
  404fcc:	test   r9d,r9d
  404fcf:	jne    0x404fec
  404fd1:	add    rbx,0xc
  404fd5:	mov    r8d,DWORD PTR [rbx]
  404fd8:	test   r8d,r8d
  404fdb:	jne    0x405100
  404fe1:	mov    ecx,DWORD PTR [rbx+0x4]
  404fe4:	test   ecx,ecx
  404fe6:	jne    0x405100
  404fec:	mov    edx,DWORD PTR [rbx+0x8]
  404fef:	cmp    edx,0x1
  404ff2:	jne    0x40520c
  404ff8:	add    rbx,0xc
  404ffc:	cmp    rbx,rsi
  404fff:	jae    0x404f3b
  405005:	mov    r12,QWORD PTR [rip+0x4154]        # 0x409160
  40500c:	lea    r13,[rbp-0x30]
  405010:	movabs r14,0xffffffff00000000
  40501a:	mov    ecx,DWORD PTR [rbx+0x4]
  40501d:	mov    eax,DWORD PTR [rbx]
  40501f:	movzx  edx,BYTE PTR [rbx+0x8]
  405023:	add    rax,r12
  405026:	add    rcx,r12
  405029:	cmp    edx,0x10
  40502c:	mov    r8,QWORD PTR [rax]
  40502f:	je     0x405176
  405035:	jbe    0x40513d
  40503b:	cmp    edx,0x20
  40503e:	je     0x4051bf
  405044:	cmp    edx,0x40
  405047:	jne    0x4051ab
  40504d:	sub    r8,rax
  405050:	mov    rdx,r13
  405053:	mov    rdi,r13
  405056:	mov    rax,r8
  405059:	add    rax,QWORD PTR [rcx]
  40505c:	mov    r8d,0x8
  405062:	mov    QWORD PTR [rbp-0x30],rax
  405066:	call   0x404db0
  40506b:	add    rbx,0xc
  40506f:	cmp    rbx,rsi
  405072:	jb     0x40501a
  405074:	mov    eax,DWORD PTR [rip+0x768a]        # 0x40c704
  40507a:	xor    ebx,ebx
  40507c:	xor    esi,esi
  40507e:	test   eax,eax
  405080:	jle    0x404f3b
  405086:	mov    r14,QWORD PTR [rip+0x8b53]        # 0x40dbe0
  40508d:	lea    r13,[rbp-0x34]
  405091:	mov    r12,QWORD PTR [rip+0x8b40]        # 0x40dbd8
  405098:	jmp    0x4050b3
  40509a:	nop    WORD PTR [rax+rax*1+0x0]
  4050a0:	add    esi,0x1
  4050a3:	add    rbx,0x18
  4050a7:	cmp    esi,DWORD PTR [rip+0x7657]        # 0x40c704
  4050ad:	jge    0x404f3b
  4050b3:	mov    rax,rbx
  4050b6:	add    rax,QWORD PTR [rip+0x764b]        # 0x40c708
  4050bd:	mov    edx,DWORD PTR [rax]
  4050bf:	test   edx,edx
  4050c1:	je     0x4050a0
  4050c3:	mov    rcx,QWORD PTR [rax+0x8]
  4050c7:	mov    r8d,0x30
  4050cd:	mov    rdx,rdi
  4050d0:	call   r14
  4050d3:	test   rax,rax
  4050d6:	je     0x4051ee
  4050dc:	mov    rax,QWORD PTR [rip+0x7625]        # 0x40c708
  4050e3:	mov    r9,r13
  4050e6:	mov    rdx,QWORD PTR [rbp-0x18]
  4050ea:	mov    rcx,QWORD PTR [rbp-0x30]
  4050ee:	mov    r8d,DWORD PTR [rax+rbx*1]
  4050f2:	call   r12
  4050f5:	jmp    0x4050a0
  4050f7:	nop    WORD PTR [rax+rax*1+0x0]
  405100:	cmp    rbx,rsi
  405103:	jae    0x404f3b
  405109:	mov    r12,QWORD PTR [rip+0x4050]        # 0x409160
  405110:	lea    rdi,[rbp-0x30]
  405114:	mov    ecx,DWORD PTR [rbx+0x4]
  405117:	mov    eax,DWORD PTR [rbx]
  405119:	mov    r8d,0x4
  40511f:	mov    rdx,rdi
  405122:	add    rbx,0x8
  405126:	add    rcx,r12
  405129:	add    eax,DWORD PTR [rcx]
  40512b:	mov    DWORD PTR [rbp-0x30],eax
  40512e:	call   0x404db0
  405133:	cmp    rbx,rsi
  405136:	jb     0x405114
  405138:	jmp    0x405074
  40513d:	cmp    edx,0x8
  405140:	jne    0x4051ab
  405142:	movzx  edx,BYTE PTR [rcx]
  405145:	mov    rdi,r13
  405148:	mov    r10,rdx
  40514b:	or     r10,0xffffffffffffff00
  405152:	test   dl,dl
  405154:	cmovs  rdx,r10
  405158:	sub    rdx,rax
  40515b:	lea    rax,[r8+rdx*1]
  40515f:	mov    r8d,0x1
  405165:	mov    rdx,r13
  405168:	mov    QWORD PTR [rbp-0x30],rax
  40516c:	call   0x404db0
  405171:	jmp    0x40506b
  405176:	movzx  edx,WORD PTR [rcx]
  405179:	mov    rdi,r13
  40517c:	mov    r10,rdx
  40517f:	or     r10,0xffffffffffff0000
  405186:	test   dx,dx
  405189:	cmovs  rdx,r10
  40518d:	sub    rdx,rax
  405190:	lea    rax,[r8+rdx*1]
  405194:	mov    r8d,0x2
  40519a:	mov    rdx,r13
  40519d:	mov    QWORD PTR [rbp-0x30],rax
  4051a1:	call   0x404db0
  4051a6:	jmp    0x40506b
  4051ab:	lea    rcx,[rip+0x3f06]        # 0x4090b8
  4051b2:	mov    QWORD PTR [rbp-0x30],0x0
  4051ba:	call   0x404d40
  4051bf:	mov    edx,DWORD PTR [rcx]
  4051c1:	mov    rdi,r13
  4051c4:	mov    r10,rdx
  4051c7:	or     r10,r14
  4051ca:	test   edx,edx
  4051cc:	cmovs  rdx,r10
  4051d0:	sub    rdx,rax
  4051d3:	lea    rax,[r8+rdx*1]
  4051d7:	mov    r8d,0x4
  4051dd:	mov    rdx,r13
  4051e0:	mov    QWORD PTR [rbp-0x30],rax
  4051e4:	call   0x404db0
  4051e9:	jmp    0x40506b
  4051ee:	add    rbx,QWORD PTR [rip+0x7513]        # 0x40c708
  4051f5:	lea    rcx,[rip+0x3e24]        # 0x409020
  4051fc:	mov    rax,QWORD PTR [rbx+0x10]
  405200:	mov    r8,QWORD PTR [rbx+0x8]
  405204:	mov    edx,DWORD PTR [rax+0x8]
  405207:	call   0x404d40
  40520c:	lea    rcx,[rip+0x3e6d]        # 0x409080
  405213:	call   0x404d40
  405218:	nop
  405219:	nop
  40521a:	nop
  40521b:	nop
  40521c:	nop
  40521d:	nop
  40521e:	nop
  40521f:	nop
  405220:	sub    rsp,0x28
  405224:	mov    eax,DWORD PTR [rcx]
  405226:	cmp    eax,0xc0000091
  40522b:	ja     0x405290
  40522d:	cmp    eax,0xc000008d
  405232:	jae    0x4052af
  405234:	cmp    eax,0xc0000008
  405239:	je     0x405350
  40523f:	ja     0x405320
  405245:	cmp    eax,0x80000002
  40524a:	je     0x405350
  405250:	cmp    eax,0xc0000005
  405255:	jne    0x40532e
  40525b:	xor    edx,edx
  40525d:	mov    ecx,0xb
  405262:	call   0x405d00
  405267:	cmp    rax,0x1
  40526b:	je     0x4053b0
  405271:	test   rax,rax
  405274:	je     0x405390
  40527a:	mov    ecx,0xb
  40527f:	call   rax
  405281:	xor    eax,eax
  405283:	add    rsp,0x28
  405287:	ret    
  405288:	nop    DWORD PTR [rax+rax*1+0x0]
  405290:	cmp    eax,0xc0000094
  405295:	je     0x405360
  40529b:	ja     0x4052e0
  40529d:	cmp    eax,0xc0000092
  4052a2:	je     0x405350
  4052a8:	cmp    eax,0xc0000093
  4052ad:	jne    0x40532e
  4052af:	xor    edx,edx
  4052b1:	mov    ecx,0x8
  4052b6:	call   0x405d00
  4052bb:	cmp    rax,0x1
  4052bf:	mov    rdx,rax
  4052c2:	je     0x405338
  4052c4:	test   rdx,rdx
  4052c7:	mov    eax,0x1
  4052cc:	je     0x405283
  4052ce:	mov    ecx,0x8
  4052d3:	call   rdx
  4052d5:	xor    eax,eax
  4052d7:	add    rsp,0x28
  4052db:	ret    
  4052dc:	nop    DWORD PTR [rax+0x0]
  4052e0:	cmp    eax,0xc0000095
  4052e5:	je     0x405350
  4052e7:	cmp    eax,0xc0000096
  4052ec:	jne    0x40532e
  4052ee:	xor    edx,edx
  4052f0:	mov    ecx,0x4
  4052f5:	call   0x405d00
  4052fa:	cmp    rax,0x1
  4052fe:	je     0x40539a
  405304:	test   rax,rax
  405307:	je     0x405390
  40530d:	mov    ecx,0x4
  405312:	call   rax
  405314:	xor    eax,eax
  405316:	jmp    0x405283
  40531b:	nop    DWORD PTR [rax+rax*1+0x0]
  405320:	cmp    eax,0xc000001d
  405325:	je     0x4052ee
  405327:	cmp    eax,0xc000008c
  40532c:	je     0x405350
  40532e:	mov    eax,0x1
  405333:	add    rsp,0x28
  405337:	ret    
  405338:	mov    edx,0x1
  40533d:	mov    ecx,0x8
  405342:	call   0x405d00
  405347:	call   0x404d10
  40534c:	nop    DWORD PTR [rax+0x0]
  405350:	xor    eax,eax
  405352:	add    rsp,0x28
  405356:	ret    
  405357:	nop    WORD PTR [rax+rax*1+0x0]
  405360:	xor    edx,edx
  405362:	mov    ecx,0x8
  405367:	call   0x405d00
  40536c:	cmp    rax,0x1
  405370:	mov    rdx,rax
  405373:	jne    0x4052c4
  405379:	mov    edx,0x1
  40537e:	mov    ecx,0x8
  405383:	call   0x405d00
  405388:	xor    eax,eax
  40538a:	jmp    0x405283
  40538f:	nop
  405390:	mov    eax,0x4
  405395:	add    rsp,0x28
  405399:	ret    
  40539a:	mov    edx,0x1
  40539f:	mov    ecx,0x4
  4053a4:	call   0x405d00
  4053a9:	xor    eax,eax
  4053ab:	jmp    0x405283
  4053b0:	mov    edx,0x1
  4053b5:	mov    ecx,0xb
  4053ba:	call   0x405d00
  4053bf:	xor    eax,eax
  4053c1:	jmp    0x405283
  4053c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4053d0:	push   r12
  4053d2:	push   rbp
  4053d3:	push   rdi
  4053d4:	push   rsi
  4053d5:	push   rbx
  4053d6:	sub    rsp,0x20
  4053da:	call   0x405b40
  4053df:	mov    rbp,rax
  4053e2:	mov    eax,DWORD PTR [rip+0x7360]        # 0x40c748
  4053e8:	test   eax,eax
  4053ea:	jne    0x405411
  4053ec:	test   rbp,rbp
  4053ef:	je     0x405411
  4053f1:	lea    rcx,[rip+0x3cf8]        # 0x4090f0
  4053f8:	mov    DWORD PTR [rip+0x7346],0x1        # 0x40c748
  405402:	call   0x405980
  405407:	test   rax,rax
  40540a:	je     0x405420
  40540c:	mov    eax,0x1
  405411:	add    rsp,0x20
  405415:	pop    rbx
  405416:	pop    rsi
  405417:	pop    rdi
  405418:	pop    rbp
  405419:	pop    r12
  40541b:	ret    
  40541c:	nop    DWORD PTR [rax+0x0]
  405420:	lea    rbx,[rip+0x7459]        # 0x40c880
  405427:	mov    ecx,0x30
  40542c:	lea    rdx,[rip+0x734d]        # 0x40c780
  405433:	lea    r12,[rip+0xfffffffffffffde6]        # 0x405220
  40543a:	xor    esi,esi
  40543c:	mov    rdi,rbx
  40543f:	rep stos QWORD PTR es:[rdi],rax
  405442:	mov    rdi,rdx
  405445:	sub    r12,rbp
  405448:	mov    cl,0x20
  40544a:	rep stos QWORD PTR es:[rdi],rax
  40544d:	mov    rdi,rdx
  405450:	jmp    0x405480
  405452:	mov    BYTE PTR [rdi],0x9
  405455:	mov    DWORD PTR [rdi+0x4],r12d
  405459:	add    rsi,0x1
  40545d:	mov    edx,DWORD PTR [rax+0xc]
  405460:	add    rbx,0xc
  405464:	mov    DWORD PTR [rbx-0xc],edx
  405467:	add    edx,DWORD PTR [rax+0x8]
  40546a:	mov    rax,rdi
  40546d:	sub    rax,rbp
  405470:	add    rdi,0x8
  405474:	mov    DWORD PTR [rbx-0x4],eax
  405477:	mov    DWORD PTR [rbx-0x8],edx
  40547a:	cmp    rsi,0x20
  40547e:	je     0x4054b5
  405480:	mov    rcx,rsi
  405483:	call   0x405ab0
  405488:	test   rax,rax
  40548b:	jne    0x405452
  40548d:	test   rsi,rsi
  405490:	je     0x40540c
  405496:	mov    edx,esi
  405498:	nop    DWORD PTR [rax+rax*1+0x0]
  4054a0:	mov    r8,rbp
  4054a3:	lea    rcx,[rip+0x73d6]        # 0x40c880
  4054aa:	call   QWORD PTR [rip+0x86e0]        # 0x40db90
  4054b0:	jmp    0x40540c
  4054b5:	mov    edx,0x20
  4054ba:	jmp    0x4054a0
  4054bc:	nop    DWORD PTR [rax+0x0]
  4054c0:	push   rbx
  4054c1:	sub    rsp,0x20
  4054c5:	mov    rdx,QWORD PTR [rcx]
  4054c8:	mov    eax,DWORD PTR [rdx]
  4054ca:	mov    r8d,eax
  4054cd:	and    r8d,0x20ffffff
  4054d4:	cmp    r8d,0x20474343
  4054db:	je     0x4055e0
  4054e1:	cmp    eax,0xc0000091
  4054e6:	mov    rbx,rcx
  4054e9:	ja     0x405570
  4054ef:	cmp    eax,0xc000008d
  4054f4:	jae    0x405587
  4054fa:	cmp    eax,0xc0000008
  4054ff:	je     0x405533
  405501:	ja     0x405540
  405503:	cmp    eax,0x80000002
  405508:	je     0x405533
  40550a:	cmp    eax,0xc0000005
  40550f:	jne    0x405552
  405511:	xor    edx,edx
  405513:	mov    ecx,0xb
  405518:	call   0x405d00
  40551d:	cmp    rax,0x1
  405521:	je     0x405650
  405527:	test   rax,rax
  40552a:	je     0x405552
  40552c:	mov    ecx,0xb
  405531:	call   rax
  405533:	mov    eax,0xffffffff
  405538:	add    rsp,0x20
  40553c:	pop    rbx
  40553d:	ret    
  40553e:	xchg   ax,ax
  405540:	cmp    eax,0xc000001d
  405545:	je     0x405606
  40554b:	cmp    eax,0xc000008c
  405550:	je     0x405533
  405552:	mov    rax,QWORD PTR [rip+0x71e7]        # 0x40c740
  405559:	test   rax,rax
  40555c:	je     0x405538
  40555e:	mov    rcx,rbx
  405561:	add    rsp,0x20
  405565:	pop    rbx
  405566:	rex.W jmp rax
  405569:	nop    DWORD PTR [rax+0x0]
  405570:	cmp    eax,0xc0000094
  405575:	je     0x4055b2
  405577:	ja     0x4055f0
  405579:	cmp    eax,0xc0000092
  40557e:	je     0x405533
  405580:	cmp    eax,0xc0000093
  405585:	jne    0x405552
  405587:	xor    edx,edx
  405589:	mov    ecx,0x8
  40558e:	call   0x405d00
  405593:	cmp    rax,0x1
  405597:	jne    0x4055c4
  405599:	mov    edx,0x1
  40559e:	mov    ecx,0x8
  4055a3:	call   0x405d00
  4055a8:	call   0x404d10
  4055ad:	jmp    0x405533
  4055b2:	xor    edx,edx
  4055b4:	mov    ecx,0x8
  4055b9:	call   0x405d00
  4055be:	cmp    rax,0x1
  4055c2:	je     0x405632
  4055c4:	test   rax,rax
  4055c7:	je     0x405552
  4055c9:	mov    ecx,0x8
  4055ce:	call   rax
  4055d0:	mov    eax,0xffffffff
  4055d5:	jmp    0x405538
  4055da:	nop    WORD PTR [rax+rax*1+0x0]
  4055e0:	test   BYTE PTR [rdx+0x4],0x1
  4055e4:	jne    0x4054e1
  4055ea:	jmp    0x405533
  4055ef:	nop
  4055f0:	cmp    eax,0xc0000095
  4055f5:	je     0x405533
  4055fb:	cmp    eax,0xc0000096
  405600:	jne    0x405552
  405606:	xor    edx,edx
  405608:	mov    ecx,0x4
  40560d:	call   0x405d00
  405612:	cmp    rax,0x1
  405616:	je     0x405664
  405618:	test   rax,rax
  40561b:	je     0x405552
  405621:	mov    ecx,0x4
  405626:	call   rax
  405628:	mov    eax,0xffffffff
  40562d:	jmp    0x405538
  405632:	mov    edx,0x1
  405637:	mov    ecx,0x8
  40563c:	call   0x405d00
  405641:	jmp    0x405533
  405646:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405650:	mov    edx,0x1
  405655:	mov    ecx,0xb
  40565a:	call   0x405d00
  40565f:	jmp    0x405533
  405664:	mov    edx,0x1
  405669:	mov    ecx,0x4
  40566e:	call   0x405d00
  405673:	jmp    0x405533
  405678:	nop
  405679:	nop
  40567a:	nop
  40567b:	nop
  40567c:	nop
  40567d:	nop
  40567e:	nop
  40567f:	nop
  405680:	push   rbp
  405681:	push   rdi
  405682:	push   rsi
  405683:	push   rbx
  405684:	sub    rsp,0x28
  405688:	lea    rcx,[rip+0x7391]        # 0x40ca20
  40568f:	call   QWORD PTR [rip+0x84a3]        # 0x40db38
  405695:	mov    rbx,QWORD PTR [rip+0x7364]        # 0x40ca00
  40569c:	test   rbx,rbx
  40569f:	je     0x4056d4
  4056a1:	mov    rbp,QWORD PTR [rip+0x8520]        # 0x40dbc8
  4056a8:	mov    rdi,QWORD PTR [rip+0x84a9]        # 0x40db58
  4056af:	nop
  4056b0:	mov    ecx,DWORD PTR [rbx]
  4056b2:	call   rbp
  4056b4:	mov    rsi,rax
  4056b7:	call   rdi
  4056b9:	test   eax,eax
  4056bb:	jne    0x4056cb
  4056bd:	test   rsi,rsi
  4056c0:	je     0x4056cb
  4056c2:	mov    rax,QWORD PTR [rbx+0x8]
  4056c6:	mov    rcx,rsi
  4056c9:	call   rax
  4056cb:	mov    rbx,QWORD PTR [rbx+0x10]
  4056cf:	test   rbx,rbx
  4056d2:	jne    0x4056b0
  4056d4:	mov    rax,QWORD PTR [rip+0x84a5]        # 0x40db80
  4056db:	lea    rcx,[rip+0x733e]        # 0x40ca20
  4056e2:	add    rsp,0x28
  4056e6:	pop    rbx
  4056e7:	pop    rsi
  4056e8:	pop    rdi
  4056e9:	pop    rbp
  4056ea:	rex.W jmp rax
  4056ed:	nop    DWORD PTR [rax]
  4056f0:	push   rdi
  4056f1:	push   rsi
  4056f2:	push   rbx
  4056f3:	sub    rsp,0x20
  4056f7:	mov    eax,DWORD PTR [rip+0x730b]        # 0x40ca08
  4056fd:	test   eax,eax
  4056ff:	jne    0x405710
  405701:	add    rsp,0x20
  405705:	pop    rbx
  405706:	pop    rsi
  405707:	pop    rdi
  405708:	ret    
  405709:	nop    DWORD PTR [rax+0x0]
  405710:	mov    rsi,rdx
  405713:	mov    edi,ecx
  405715:	mov    edx,0x18
  40571a:	mov    ecx,0x1
  40571f:	call   0x405d48
  405724:	test   rax,rax
  405727:	mov    rbx,rax
  40572a:	je     0x405768
  40572c:	mov    DWORD PTR [rax],edi
  40572e:	mov    QWORD PTR [rax+0x8],rsi
  405732:	lea    rcx,[rip+0x72e7]        # 0x40ca20
  405739:	call   QWORD PTR [rip+0x83f9]        # 0x40db38
  40573f:	mov    rax,QWORD PTR [rip+0x72ba]        # 0x40ca00
  405746:	lea    rcx,[rip+0x72d3]        # 0x40ca20
  40574d:	mov    QWORD PTR [rip+0x72ac],rbx        # 0x40ca00
  405754:	mov    QWORD PTR [rbx+0x10],rax
  405758:	call   QWORD PTR [rip+0x8422]        # 0x40db80
  40575e:	xor    eax,eax
  405760:	add    rsp,0x20
  405764:	pop    rbx
  405765:	pop    rsi
  405766:	pop    rdi
  405767:	ret    
  405768:	mov    eax,0xffffffff
  40576d:	jmp    0x405701
  40576f:	nop
  405770:	push   rbx
  405771:	sub    rsp,0x20
  405775:	mov    eax,DWORD PTR [rip+0x728d]        # 0x40ca08
  40577b:	test   eax,eax
  40577d:	jne    0x405790
  40577f:	xor    eax,eax
  405781:	add    rsp,0x20
  405785:	pop    rbx
  405786:	ret    
  405787:	nop    WORD PTR [rax+rax*1+0x0]
  405790:	mov    ebx,ecx
  405792:	lea    rcx,[rip+0x7287]        # 0x40ca20
  405799:	call   QWORD PTR [rip+0x8399]        # 0x40db38
  40579f:	mov    rdx,QWORD PTR [rip+0x725a]        # 0x40ca00
  4057a6:	test   rdx,rdx
  4057a9:	je     0x4057c7
  4057ab:	mov    eax,DWORD PTR [rdx]
  4057ad:	cmp    eax,ebx
  4057af:	jne    0x4057be
  4057b1:	jmp    0x4057ff
  4057b3:	mov    r8d,DWORD PTR [rax]
  4057b6:	cmp    r8d,ebx
  4057b9:	je     0x4057e0
  4057bb:	mov    rdx,rax
  4057be:	mov    rax,QWORD PTR [rdx+0x10]
  4057c2:	test   rax,rax
  4057c5:	jne    0x4057b3
  4057c7:	lea    rcx,[rip+0x7252]        # 0x40ca20
  4057ce:	call   QWORD PTR [rip+0x83ac]        # 0x40db80
  4057d4:	xor    eax,eax
  4057d6:	add    rsp,0x20
  4057da:	pop    rbx
  4057db:	ret    
  4057dc:	nop    DWORD PTR [rax+0x0]
  4057e0:	mov    rcx,rax
  4057e3:	mov    rax,QWORD PTR [rax+0x10]
  4057e7:	mov    QWORD PTR [rdx+0x10],rax
  4057eb:	call   0x405d28
  4057f0:	lea    rcx,[rip+0x7229]        # 0x40ca20
  4057f7:	call   QWORD PTR [rip+0x8383]        # 0x40db80
  4057fd:	jmp    0x4057d4
  4057ff:	mov    rax,QWORD PTR [rdx+0x10]
  405803:	mov    rcx,rdx
  405806:	mov    QWORD PTR [rip+0x71f3],rax        # 0x40ca00
  40580d:	jmp    0x4057eb
  40580f:	nop
  405810:	push   rbx
  405811:	sub    rsp,0x20
  405815:	cmp    edx,0x1
  405818:	je     0x4058b0
  40581e:	jb     0x405850
  405820:	cmp    edx,0x2
  405823:	je     0x405840
  405825:	cmp    edx,0x3
  405828:	jne    0x405845
  40582a:	mov    eax,DWORD PTR [rip+0x71d8]        # 0x40ca08
  405830:	test   eax,eax
  405832:	je     0x405845
  405834:	call   0x405680
  405839:	jmp    0x405845
  40583b:	nop    DWORD PTR [rax+rax*1+0x0]
  405840:	call   0x404d10
  405845:	mov    eax,0x1
  40584a:	add    rsp,0x20
  40584e:	pop    rbx
  40584f:	ret    
  405850:	mov    eax,DWORD PTR [rip+0x71b2]        # 0x40ca08
  405856:	test   eax,eax
  405858:	jne    0x4058e0
  40585e:	mov    eax,DWORD PTR [rip+0x71a4]        # 0x40ca08
  405864:	cmp    eax,0x1
  405867:	jne    0x405845
  405869:	mov    rcx,QWORD PTR [rip+0x7190]        # 0x40ca00
  405870:	test   rcx,rcx
  405873:	je     0x405886
  405875:	mov    rbx,QWORD PTR [rcx+0x10]
  405879:	call   0x405d28
  40587e:	test   rbx,rbx
  405881:	mov    rcx,rbx
  405884:	jne    0x405875
  405886:	lea    rcx,[rip+0x7193]        # 0x40ca20
  40588d:	mov    QWORD PTR [rip+0x7168],0x0        # 0x40ca00
  405898:	mov    DWORD PTR [rip+0x7166],0x0        # 0x40ca08
  4058a2:	call   QWORD PTR [rip+0x8288]        # 0x40db30
  4058a8:	jmp    0x405845
  4058aa:	nop    WORD PTR [rax+rax*1+0x0]
  4058b0:	mov    eax,DWORD PTR [rip+0x7152]        # 0x40ca08
  4058b6:	test   eax,eax
  4058b8:	je     0x4058d0
  4058ba:	mov    eax,0x1
  4058bf:	mov    DWORD PTR [rip+0x713f],0x1        # 0x40ca08
  4058c9:	add    rsp,0x20
  4058cd:	pop    rbx
  4058ce:	ret    
  4058cf:	nop
  4058d0:	lea    rcx,[rip+0x7149]        # 0x40ca20
  4058d7:	call   QWORD PTR [rip+0x829b]        # 0x40db78
  4058dd:	jmp    0x4058ba
  4058df:	nop
  4058e0:	call   0x405680
  4058e5:	jmp    0x40585e
  4058ea:	nop
  4058eb:	nop
  4058ec:	nop
  4058ed:	nop
  4058ee:	nop
  4058ef:	nop
  4058f0:	movsxd rax,DWORD PTR [rcx+0x3c]
  4058f4:	add    rcx,rax
  4058f7:	xor    eax,eax
  4058f9:	cmp    DWORD PTR [rcx],0x4550
  4058ff:	je     0x405903
  405901:	repz ret 
  405903:	xor    eax,eax
  405905:	cmp    WORD PTR [rcx+0x18],0x20b
  40590b:	sete   al
  40590e:	ret    
  40590f:	nop
  405910:	cmp    WORD PTR [rcx],0x5a4d
  405915:	je     0x405920
  405917:	xor    eax,eax
  405919:	ret    
  40591a:	nop    WORD PTR [rax+rax*1+0x0]
  405920:	jmp    0x4058f0
  405922:	nop    DWORD PTR [rax+0x0]
  405926:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405930:	movsxd rax,DWORD PTR [rcx+0x3c]
  405934:	add    rcx,rax
  405937:	movzx  eax,WORD PTR [rcx+0x14]
  40593b:	lea    rax,[rcx+rax*1+0x18]
  405940:	movzx  ecx,WORD PTR [rcx+0x6]
  405944:	test   ecx,ecx
  405946:	je     0x405971
  405948:	sub    ecx,0x1
  40594b:	lea    rcx,[rcx+rcx*4]
  40594f:	lea    r9,[rax+rcx*8+0x28]
  405954:	mov    r8d,DWORD PTR [rax+0xc]
  405958:	cmp    r8,rdx
  40595b:	mov    rcx,r8
  40595e:	ja     0x405968
  405960:	add    ecx,DWORD PTR [rax+0x8]
  405963:	cmp    rdx,rcx
  405966:	jb     0x405973
  405968:	add    rax,0x28
  40596c:	cmp    rax,r9
  40596f:	jne    0x405954
  405971:	xor    eax,eax
  405973:	repz ret 
  405975:	nop
  405976:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405980:	push   rdi
  405981:	push   rsi
  405982:	push   rbx
  405983:	sub    rsp,0x20
  405987:	mov    rsi,rcx
  40598a:	call   0x405cf0
  40598f:	cmp    rax,0x8
  405993:	ja     0x4059b0
  405995:	mov    rbx,QWORD PTR [rip+0x37c4]        # 0x409160
  40599c:	xor    edi,edi
  40599e:	cmp    WORD PTR [rbx],0x5a4d
  4059a3:	je     0x4059c0
  4059a5:	mov    rax,rdi
  4059a8:	add    rsp,0x20
  4059ac:	pop    rbx
  4059ad:	pop    rsi
  4059ae:	pop    rdi
  4059af:	ret    
  4059b0:	xor    edi,edi
  4059b2:	mov    rax,rdi
  4059b5:	add    rsp,0x20
  4059b9:	pop    rbx
  4059ba:	pop    rsi
  4059bb:	pop    rdi
  4059bc:	ret    
  4059bd:	nop    DWORD PTR [rax]
  4059c0:	mov    rcx,rbx
  4059c3:	call   0x4058f0
  4059c8:	test   eax,eax
  4059ca:	je     0x4059a5
  4059cc:	movsxd rdx,DWORD PTR [rbx+0x3c]
  4059d0:	add    rdx,rbx
  4059d3:	movzx  eax,WORD PTR [rdx+0x14]
  4059d7:	lea    rbx,[rdx+rax*1+0x18]
  4059dc:	movzx  eax,WORD PTR [rdx+0x6]
  4059e0:	test   eax,eax
  4059e2:	je     0x4059a5
  4059e4:	sub    eax,0x1
  4059e7:	lea    rax,[rax+rax*4]
  4059eb:	lea    rdi,[rbx+rax*8+0x28]
  4059f0:	jmp    0x4059fb
  4059f2:	add    rbx,0x28
  4059f6:	cmp    rbx,rdi
  4059f9:	je     0x4059b0
  4059fb:	mov    r8d,0x8
  405a01:	mov    rdx,rsi
  405a04:	mov    rcx,rbx
  405a07:	call   0x405ce8
  405a0c:	test   eax,eax
  405a0e:	jne    0x4059f2
  405a10:	mov    rdi,rbx
  405a13:	mov    rax,rdi
  405a16:	add    rsp,0x20
  405a1a:	pop    rbx
  405a1b:	pop    rsi
  405a1c:	pop    rdi
  405a1d:	ret    
  405a1e:	xchg   ax,ax
  405a20:	push   rsi
  405a21:	push   rbx
  405a22:	sub    rsp,0x28
  405a26:	mov    rbx,QWORD PTR [rip+0x3733]        # 0x409160
  405a2d:	cmp    WORD PTR [rbx],0x5a4d
  405a32:	je     0x405a40
  405a34:	xor    eax,eax
  405a36:	add    rsp,0x28
  405a3a:	pop    rbx
  405a3b:	pop    rsi
  405a3c:	ret    
  405a3d:	nop    DWORD PTR [rax]
  405a40:	mov    rsi,rcx
  405a43:	mov    rcx,rbx
  405a46:	call   0x4058f0
  405a4b:	test   eax,eax
  405a4d:	je     0x405a34
  405a4f:	sub    rsi,rbx
  405a52:	mov    rcx,rbx
  405a55:	mov    rdx,rsi
  405a58:	add    rsp,0x28
  405a5c:	pop    rbx
  405a5d:	pop    rsi
  405a5e:	jmp    0x405930
  405a63:	nop    DWORD PTR [rax]
  405a66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405a70:	push   rbx
  405a71:	sub    rsp,0x20
  405a75:	mov    rbx,QWORD PTR [rip+0x36e4]        # 0x409160
  405a7c:	xor    eax,eax
  405a7e:	cmp    WORD PTR [rbx],0x5a4d
  405a83:	je     0x405a90
  405a85:	add    rsp,0x20
  405a89:	pop    rbx
  405a8a:	ret    
  405a8b:	nop    DWORD PTR [rax+rax*1+0x0]
  405a90:	mov    rcx,rbx
  405a93:	call   0x4058f0
  405a98:	test   eax,eax
  405a9a:	je     0x405a85
  405a9c:	movsxd rax,DWORD PTR [rbx+0x3c]
  405aa0:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  405aa5:	add    rsp,0x20
  405aa9:	pop    rbx
  405aaa:	ret    
  405aab:	nop    DWORD PTR [rax+rax*1+0x0]
  405ab0:	push   rdi
  405ab1:	push   rsi
  405ab2:	push   rbx
  405ab3:	sub    rsp,0x20
  405ab7:	mov    rsi,QWORD PTR [rip+0x36a2]        # 0x409160
  405abe:	xor    edi,edi
  405ac0:	mov    rbx,rcx
  405ac3:	cmp    WORD PTR [rsi],0x5a4d
  405ac8:	je     0x405ad5
  405aca:	mov    rax,rdi
  405acd:	add    rsp,0x20
  405ad1:	pop    rbx
  405ad2:	pop    rsi
  405ad3:	pop    rdi
  405ad4:	ret    
  405ad5:	mov    rcx,rsi
  405ad8:	call   0x4058f0
  405add:	test   eax,eax
  405adf:	je     0x405aca
  405ae1:	movsxd rax,DWORD PTR [rsi+0x3c]
  405ae5:	add    rsi,rax
  405ae8:	movzx  eax,WORD PTR [rsi+0x14]
  405aec:	lea    rdx,[rsi+rax*1+0x18]
  405af1:	movzx  eax,WORD PTR [rsi+0x6]
  405af5:	test   eax,eax
  405af7:	je     0x405aca
  405af9:	sub    eax,0x1
  405afc:	lea    rax,[rax+rax*4]
  405b00:	lea    rax,[rdx+rax*8+0x28]
  405b05:	test   BYTE PTR [rdx+0x27],0x20
  405b09:	je     0x405b14
  405b0b:	test   rbx,rbx
  405b0e:	je     0x405b30
  405b10:	sub    rbx,0x1
  405b14:	add    rdx,0x28
  405b18:	cmp    rdx,rax
  405b1b:	jne    0x405b05
  405b1d:	xor    edi,edi
  405b1f:	mov    rax,rdi
  405b22:	add    rsp,0x20
  405b26:	pop    rbx
  405b27:	pop    rsi
  405b28:	pop    rdi
  405b29:	ret    
  405b2a:	nop    WORD PTR [rax+rax*1+0x0]
  405b30:	mov    rdi,rdx
  405b33:	mov    rax,rdi
  405b36:	add    rsp,0x20
  405b3a:	pop    rbx
  405b3b:	pop    rsi
  405b3c:	pop    rdi
  405b3d:	ret    
  405b3e:	xchg   ax,ax
  405b40:	push   rsi
  405b41:	push   rbx
  405b42:	sub    rsp,0x28
  405b46:	mov    rsi,QWORD PTR [rip+0x3613]        # 0x409160
  405b4d:	xor    ebx,ebx
  405b4f:	cmp    WORD PTR [rsi],0x5a4d
  405b54:	je     0x405b60
  405b56:	mov    rax,rbx
  405b59:	add    rsp,0x28
  405b5d:	pop    rbx
  405b5e:	pop    rsi
  405b5f:	ret    
  405b60:	mov    rcx,rsi
  405b63:	call   0x4058f0
  405b68:	test   eax,eax
  405b6a:	cmovne rbx,rsi
  405b6e:	mov    rax,rbx
  405b71:	add    rsp,0x28
  405b75:	pop    rbx
  405b76:	pop    rsi
  405b77:	ret    
  405b78:	nop    DWORD PTR [rax+rax*1+0x0]
  405b80:	push   rsi
  405b81:	push   rbx
  405b82:	sub    rsp,0x28
  405b86:	mov    rbx,QWORD PTR [rip+0x35d3]        # 0x409160
  405b8d:	xor    eax,eax
  405b8f:	cmp    WORD PTR [rbx],0x5a4d
  405b94:	je     0x405ba0
  405b96:	add    rsp,0x28
  405b9a:	pop    rbx
  405b9b:	pop    rsi
  405b9c:	ret    
  405b9d:	nop    DWORD PTR [rax]
  405ba0:	mov    rsi,rcx
  405ba3:	mov    rcx,rbx
  405ba6:	call   0x4058f0
  405bab:	test   eax,eax
  405bad:	je     0x405b96
  405baf:	sub    rsi,rbx
  405bb2:	mov    rcx,rbx
  405bb5:	mov    rdx,rsi
  405bb8:	call   0x405930
  405bbd:	test   rax,rax
  405bc0:	je     0x405bd1
  405bc2:	mov    eax,DWORD PTR [rax+0x24]
  405bc5:	not    eax
  405bc7:	shr    eax,0x1f
  405bca:	add    rsp,0x28
  405bce:	pop    rbx
  405bcf:	pop    rsi
  405bd0:	ret    
  405bd1:	xor    eax,eax
  405bd3:	jmp    0x405b96
  405bd5:	nop
  405bd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405be0:	push   rbp
  405be1:	push   rdi
  405be2:	push   rsi
  405be3:	push   rbx
  405be4:	sub    rsp,0x28
  405be8:	mov    rdi,QWORD PTR [rip+0x3571]        # 0x409160
  405bef:	xor    ebp,ebp
  405bf1:	mov    esi,ecx
  405bf3:	cmp    WORD PTR [rdi],0x5a4d
  405bf8:	je     0x405c10
  405bfa:	mov    rax,rbp
  405bfd:	add    rsp,0x28
  405c01:	pop    rbx
  405c02:	pop    rsi
  405c03:	pop    rdi
  405c04:	pop    rbp
  405c05:	ret    
  405c06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405c10:	mov    rcx,rdi
  405c13:	call   0x4058f0
  405c18:	test   eax,eax
  405c1a:	je     0x405bfa
  405c1c:	movsxd rax,DWORD PTR [rdi+0x3c]
  405c20:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  405c27:	test   edx,edx
  405c29:	je     0x405bfa
  405c2b:	mov    ebx,edx
  405c2d:	mov    rcx,rdi
  405c30:	mov    rdx,rbx
  405c33:	call   0x405930
  405c38:	test   rax,rax
  405c3b:	je     0x405bfa
  405c3d:	add    rbx,rdi
  405c40:	mov    rdx,rbx
  405c43:	jne    0x405c57
  405c45:	jmp    0x405bfa
  405c47:	nop    WORD PTR [rax+rax*1+0x0]
  405c50:	sub    esi,0x1
  405c53:	add    rdx,0x14
  405c57:	mov    ecx,DWORD PTR [rdx+0x4]
  405c5a:	test   ecx,ecx
  405c5c:	jne    0x405c65
  405c5e:	mov    eax,DWORD PTR [rdx+0xc]
  405c61:	test   eax,eax
  405c63:	je     0x405c80
  405c65:	test   esi,esi
  405c67:	jg     0x405c50
  405c69:	mov    ebp,DWORD PTR [rdx+0xc]
  405c6c:	add    rbp,rdi
  405c6f:	mov    rax,rbp
  405c72:	add    rsp,0x28
  405c76:	pop    rbx
  405c77:	pop    rsi
  405c78:	pop    rdi
  405c79:	pop    rbp
  405c7a:	ret    
  405c7b:	nop    DWORD PTR [rax+rax*1+0x0]
  405c80:	xor    ebp,ebp
  405c82:	mov    rax,rbp
  405c85:	add    rsp,0x28
  405c89:	pop    rbx
  405c8a:	pop    rsi
  405c8b:	pop    rdi
  405c8c:	pop    rbp
  405c8d:	ret    
  405c8e:	nop
  405c8f:	nop
  405c90:	push   rcx
  405c91:	push   rax
  405c92:	cmp    rax,0x1000
  405c98:	lea    rcx,[rsp+0x18]
  405c9d:	jb     0x405cb8
  405c9f:	sub    rcx,0x1000
  405ca6:	or     QWORD PTR [rcx],0x0
  405caa:	sub    rax,0x1000
  405cb0:	cmp    rax,0x1000
  405cb6:	ja     0x405c9f
  405cb8:	sub    rcx,rax
  405cbb:	or     QWORD PTR [rcx],0x0
  405cbf:	pop    rax
  405cc0:	pop    rcx
  405cc1:	ret    
  405cc2:	nop
  405cc3:	nop
  405cc4:	nop
  405cc5:	nop
  405cc6:	nop
  405cc7:	nop
  405cc8:	nop
  405cc9:	nop
  405cca:	nop
  405ccb:	nop
  405ccc:	nop
  405ccd:	nop
  405cce:	nop
  405ccf:	nop
  405cd0:	jmp    QWORD PTR [rip+0x802a]        # 0x40dd00
  405cd6:	nop
  405cd7:	nop
  405cd8:	jmp    QWORD PTR [rip+0x801a]        # 0x40dcf8
  405cde:	nop
  405cdf:	nop
  405ce0:	jmp    QWORD PTR [rip+0x800a]        # 0x40dcf0
  405ce6:	nop
  405ce7:	nop
  405ce8:	jmp    QWORD PTR [rip+0x7ffa]        # 0x40dce8
  405cee:	nop
  405cef:	nop
  405cf0:	jmp    QWORD PTR [rip+0x7fea]        # 0x40dce0
  405cf6:	nop
  405cf7:	nop
  405cf8:	jmp    QWORD PTR [rip+0x7fda]        # 0x40dcd8
  405cfe:	nop
  405cff:	nop
  405d00:	jmp    QWORD PTR [rip+0x7fca]        # 0x40dcd0
  405d06:	nop
  405d07:	nop
  405d08:	jmp    QWORD PTR [rip+0x7fba]        # 0x40dcc8
  405d0e:	nop
  405d0f:	nop
  405d10:	jmp    QWORD PTR [rip+0x7faa]        # 0x40dcc0
  405d16:	nop
  405d17:	nop
  405d18:	jmp    QWORD PTR [rip+0x7f9a]        # 0x40dcb8
  405d1e:	nop
  405d1f:	nop
  405d20:	jmp    QWORD PTR [rip+0x7f8a]        # 0x40dcb0
  405d26:	nop
  405d27:	nop
  405d28:	jmp    QWORD PTR [rip+0x7f7a]        # 0x40dca8
  405d2e:	nop
  405d2f:	nop
  405d30:	jmp    QWORD PTR [rip+0x7f6a]        # 0x40dca0
  405d36:	nop
  405d37:	nop
  405d38:	jmp    QWORD PTR [rip+0x7f5a]        # 0x40dc98
  405d3e:	nop
  405d3f:	nop
  405d40:	jmp    QWORD PTR [rip+0x7f4a]        # 0x40dc90
  405d46:	nop
  405d47:	nop
  405d48:	jmp    QWORD PTR [rip+0x7f3a]        # 0x40dc88
  405d4e:	nop
  405d4f:	nop
  405d50:	jmp    QWORD PTR [rip+0x7f2a]        # 0x40dc80
  405d56:	nop
  405d57:	nop
  405d58:	jmp    QWORD PTR [rip+0x7f1a]        # 0x40dc78
  405d5e:	nop
  405d5f:	nop
  405d60:	jmp    QWORD PTR [rip+0x7f0a]        # 0x40dc70
  405d66:	nop
  405d67:	nop
  405d68:	jmp    QWORD PTR [rip+0x7efa]        # 0x40dc68
  405d6e:	nop
  405d6f:	nop
  405d70:	jmp    QWORD PTR [rip+0x7eea]        # 0x40dc60
  405d76:	nop
  405d77:	nop
  405d78:	jmp    QWORD PTR [rip+0x7eda]        # 0x40dc58
  405d7e:	nop
  405d7f:	nop
  405d80:	jmp    QWORD PTR [rip+0x7ec2]        # 0x40dc48
  405d86:	nop
  405d87:	nop
  405d88:	jmp    QWORD PTR [rip+0x7eb2]        # 0x40dc40
  405d8e:	nop
  405d8f:	nop
  405d90:	jmp    QWORD PTR [rip+0x7ea2]        # 0x40dc38
  405d96:	nop
  405d97:	nop
  405d98:	jmp    QWORD PTR [rip+0x7e8a]        # 0x40dc28
  405d9e:	nop
  405d9f:	nop
  405da0:	jmp    QWORD PTR [rip+0x7e7a]        # 0x40dc20
  405da6:	nop
  405da7:	nop
  405da8:	jmp    QWORD PTR [rip+0x7e6a]        # 0x40dc18
  405dae:	nop
  405daf:	nop
  405db0:	jmp    QWORD PTR [rip+0x7e5a]        # 0x40dc10
  405db6:	nop
  405db7:	nop
  405db8:	jmp    QWORD PTR [rip+0x7e42]        # 0x40dc00
  405dbe:	nop
  405dbf:	nop
  405dc0:	jmp    QWORD PTR [rip+0x7e32]        # 0x40dbf8
  405dc6:	nop
  405dc7:	nop
  405dc8:	jmp    QWORD PTR [rip+0x7e22]        # 0x40dbf0
  405dce:	nop
  405dcf:	nop
  405dd0:	mov    rax,QWORD PTR [rip+0x6c99]        # 0x40ca70
  405dd7:	ret    
  405dd8:	nop    DWORD PTR [rax+rax*1+0x0]
  405de0:	mov    rax,rcx
  405de3:	xchg   QWORD PTR [rip+0x6c86],rax        # 0x40ca70
  405dea:	ret    
  405deb:	nop
  405dec:	nop
  405ded:	nop
  405dee:	nop
  405def:	nop
  405df0:	jmp    QWORD PTR [rip+0x7dea]        # 0x40dbe0
  405df6:	nop
  405df7:	nop
  405df8:	jmp    QWORD PTR [rip+0x7dda]        # 0x40dbd8
  405dfe:	nop
  405dff:	nop
  405e00:	jmp    QWORD PTR [rip+0x7dca]        # 0x40dbd0
  405e06:	nop
  405e07:	nop
  405e08:	jmp    QWORD PTR [rip+0x7dba]        # 0x40dbc8
  405e0e:	nop
  405e0f:	nop
  405e10:	jmp    QWORD PTR [rip+0x7daa]        # 0x40dbc0
  405e16:	nop
  405e17:	nop
  405e18:	jmp    QWORD PTR [rip+0x7d9a]        # 0x40dbb8
  405e1e:	nop
  405e1f:	nop
  405e20:	jmp    QWORD PTR [rip+0x7d8a]        # 0x40dbb0
  405e26:	nop
  405e27:	nop
  405e28:	jmp    QWORD PTR [rip+0x7d7a]        # 0x40dba8
  405e2e:	nop
  405e2f:	nop
  405e30:	jmp    QWORD PTR [rip+0x7d6a]        # 0x40dba0
  405e36:	nop
  405e37:	nop
  405e38:	jmp    QWORD PTR [rip+0x7d5a]        # 0x40db98
  405e3e:	nop
  405e3f:	nop
  405e40:	jmp    QWORD PTR [rip+0x7d4a]        # 0x40db90
  405e46:	nop
  405e47:	nop
  405e48:	jmp    QWORD PTR [rip+0x7d3a]        # 0x40db88
  405e4e:	nop
  405e4f:	nop
  405e50:	jmp    QWORD PTR [rip+0x7d2a]        # 0x40db80
  405e56:	nop
  405e57:	nop
  405e58:	jmp    QWORD PTR [rip+0x7d1a]        # 0x40db78
  405e5e:	nop
  405e5f:	nop
  405e60:	jmp    QWORD PTR [rip+0x7d0a]        # 0x40db70
  405e66:	nop
  405e67:	nop
  405e68:	jmp    QWORD PTR [rip+0x7cfa]        # 0x40db68
  405e6e:	nop
  405e6f:	nop
  405e70:	jmp    QWORD PTR [rip+0x7cea]        # 0x40db60
  405e76:	nop
  405e77:	nop
  405e78:	jmp    QWORD PTR [rip+0x7cda]        # 0x40db58
  405e7e:	nop
  405e7f:	nop
  405e80:	jmp    QWORD PTR [rip+0x7cca]        # 0x40db50
  405e86:	nop
  405e87:	nop
  405e88:	jmp    QWORD PTR [rip+0x7cba]        # 0x40db48
  405e8e:	nop
  405e8f:	nop
  405e90:	jmp    QWORD PTR [rip+0x7caa]        # 0x40db40
  405e96:	nop
  405e97:	nop
  405e98:	jmp    QWORD PTR [rip+0x7c9a]        # 0x40db38
  405e9e:	nop
  405e9f:	nop
  405ea0:	jmp    QWORD PTR [rip+0x7c8a]        # 0x40db30
  405ea6:	nop
  405ea7:	nop
  405ea8:	nop    DWORD PTR [rax+rax*1+0x0]
  405eb0:	push   r15
  405eb2:	push   r14
  405eb4:	push   r13
  405eb6:	push   r12
  405eb8:	push   rbp
  405eb9:	push   rdi
  405eba:	push   rsi
  405ebb:	push   rbx
  405ebc:	sub    rsp,0xc8
  405ec3:	mov    ebx,ecx
  405ec5:	mov    rsi,rdx
  405ec8:	call   0x4048e0
  405ecd:	lea    rcx,[rip+0x2a6c]        # 0x408940
  405ed4:	call   0x4045b0
  405ed9:	lea    rdx,[rip+0x2a6b]        # 0x40894b
  405ee0:	xor    ecx,ecx
  405ee2:	call   0x405d08
  405ee7:	mov    ecx,ebx
  405ee9:	mov    rdx,rsi
  405eec:	call   0x4026a0
  405ef1:	mov    rax,QWORD PTR [rip+0x34b8]        # 0x4093b0
  405ef8:	mov    rbx,QWORD PTR [rax]
  405efb:	cmp    QWORD PTR [rbx+0x8],0x0
  405f00:	je     0x406321
  405f06:	mov    rcx,rbx
  405f09:	lea    r13,[rsp+0x74]
  405f0e:	lea    r14,[rsp+0x78]
  405f13:	call   QWORD PTR [rbx+0x18]
  405f16:	mov    rsi,rax
  405f19:	mov    rcx,rax
  405f1c:	xor    r15d,r15d
  405f1f:	call   QWORD PTR [rbx+0x28]
  405f22:	mov    r8d,0x1
  405f28:	mov    r12,rax
  405f2b:	mov    edx,0x1
  405f30:	mov    rcx,rsi
  405f33:	mov    DWORD PTR [rsp+0x78],0x1
  405f3b:	mov    DWORD PTR [rsp+0x74],0x1
  405f43:	call   QWORD PTR [rbx+0x30]
  405f46:	mov    rdi,rax
  405f49:	mov    rdx,rax
  405f4c:	mov    r9,r13
  405f4f:	mov    r8,r12
  405f52:	mov    rcx,rsi
  405f55:	mov    QWORD PTR [rsp+0x28],0x0
  405f5e:	mov    QWORD PTR [rsp+0x20],r14
  405f63:	call   QWORD PTR [rbx+0x40]
  405f66:	mov    rdx,rdi
  405f69:	mov    rcx,rsi
  405f6c:	call   QWORD PTR [rbx+0x38]
  405f6f:	mov    r8d,DWORD PTR [rsp+0x78]
  405f74:	mov    edx,DWORD PTR [rsp+0x74]
  405f78:	mov    rcx,rsi
  405f7b:	call   QWORD PTR [rbx+0x30]
  405f7e:	mov    rdi,QWORD PTR [rip+0x341b]        # 0x4093a0
  405f85:	mov    rbp,rax
  405f88:	nop    DWORD PTR [rax+rax*1+0x0]
  405f90:	mov    rdx,rbp
  405f93:	mov    QWORD PTR [rsp+0x28],0x0
  405f9c:	mov    QWORD PTR [rsp+0x20],r14
  405fa1:	mov    r9,r13
  405fa4:	mov    r8,r12
  405fa7:	mov    rcx,rsi
  405faa:	call   QWORD PTR [rbx+0x40]
  405fad:	mov    edx,DWORD PTR [rdi]
  405faf:	add    r15d,0x1
  405fb3:	test   edx,edx
  405fb5:	mov    edx,0x1
  405fba:	cmovg  edx,DWORD PTR [rdi]
  405fbd:	cmp    edx,r15d
  405fc0:	jg     0x405f90
  405fc2:	mov    r15,QWORD PTR [rip+0x33c7]        # 0x409390
  405fc9:	mov    rcx,QWORD PTR [r15]
  405fcc:	test   rcx,rcx
  405fcf:	je     0x4060d6
  405fd5:	cmp    QWORD PTR [rbx+0x48],0x0
  405fda:	je     0x40638e
  405fe0:	mov    QWORD PTR [rsp+0x80],0x0
  405fec:	mov    rdx,QWORD PTR [rbx+0x10]
  405ff0:	test   rdx,rdx
  405ff3:	je     0x406002
  405ff5:	call   0x404588
  405ffa:	test   eax,eax
  405ffc:	jne    0x4062e7
  406002:	lea    rdi,[rsp+0x90]
  40600a:	xor    eax,eax
  40600c:	mov    ecx,0x8
  406011:	lea    rdx,[rsp+0x90]
  406019:	xor    r8d,r8d
  40601c:	mov    r9d,0x1e
  406022:	rep stos DWORD PTR es:[rdi],eax
  406024:	lea    rax,[rip+0x2975]        # 0x4089a0
  40602b:	mov    QWORD PTR [rsp+0x90],rax
  406033:	lea    rax,[rip+0x296e]        # 0x4089a8
  40603a:	mov    QWORD PTR [rsp+0x98],rax
  406042:	mov    rax,QWORD PTR [r15]
  406045:	mov    QWORD PTR [rsp+0x48],0x0
  40604e:	mov    QWORD PTR [rsp+0x40],0x0
  406057:	mov    QWORD PTR [rsp+0x28],0x0
  406060:	mov    QWORD PTR [rsp+0x20],0x0
  406069:	mov    QWORD PTR [rsp+0xa0],rax
  406071:	lea    rax,[rsp+0x88]
  406079:	mov    QWORD PTR [rsp+0x50],rax
  40607e:	lea    rax,[rsp+0x7c]
  406083:	mov    QWORD PTR [rsp+0x38],rax
  406088:	lea    rax,[rsp+0x80]
  406090:	mov    QWORD PTR [rsp+0x30],rax
  406095:	call   0x404598
  40609a:	test   eax,eax
  40609c:	je     0x406376
  4060a2:	mov    ecx,DWORD PTR [rsp+0x7c]
  4060a6:	lea    rdx,[rip+0x28ce]        # 0x40897b
  4060ad:	call   0x405cd0
  4060b2:	mov    rdi,rax
  4060b5:	mov    eax,DWORD PTR [rsp+0x78]
  4060b9:	mov    rcx,rsi
  4060bc:	mov    r9d,DWORD PTR [rsp+0x74]
  4060c1:	mov    r8,rdi
  4060c4:	mov    rdx,rbp
  4060c7:	mov    DWORD PTR [rsp+0x20],eax
  4060cb:	call   QWORD PTR [rbx+0x48]
  4060ce:	mov    rcx,rdi
  4060d1:	call   0x405d38
  4060d6:	mov    rax,QWORD PTR [rip+0x3263]        # 0x409340
  4060dd:	mov    eax,DWORD PTR [rax]
  4060df:	test   eax,eax
  4060e1:	je     0x4062b5
  4060e7:	call   0x402180
  4060ec:	cmp    QWORD PTR [rbx+0x60],0x0
  4060f1:	mov    rdx,rax
  4060f4:	mov    QWORD PTR [rsp+0x68],rax
  4060f9:	je     0x406186
  4060ff:	mov    rax,QWORD PTR [rbx+0x50]
  406103:	test   rax,rax
  406106:	je     0x406348
  40610c:	mov    r9d,DWORD PTR [rsp+0x78]
  406111:	mov    r8d,DWORD PTR [rsp+0x74]
  406116:	mov    rcx,rsi
  406119:	call   rax
  40611b:	test   rax,rax
  40611e:	mov    rdi,rax
  406121:	je     0x406186
  406123:	mov    rax,QWORD PTR [rip+0x3216]        # 0x409340
  40612a:	xor    r15d,r15d
  40612d:	mov    DWORD PTR [rax],0x0
  406133:	jmp    0x40614e
  406135:	mov    QWORD PTR [rsp+0x28],rax
  40613a:	mov    QWORD PTR [rsp+0x20],r14
  40613f:	mov    r9,r13
  406142:	mov    r8,r12
  406145:	mov    rdx,rbp
  406148:	mov    rcx,rsi
  40614b:	call   QWORD PTR [rbx+0x40]
  40614e:	mov    eax,DWORD PTR [rsp+0x78]
  406152:	mov    QWORD PTR [rsp+0x28],r15
  406157:	mov    r8,rdi
  40615a:	mov    r9d,DWORD PTR [rsp+0x74]
  40615f:	mov    rdx,rbp
  406162:	mov    rcx,rsi
  406165:	mov    DWORD PTR [rsp+0x20],eax
  406169:	call   QWORD PTR [rbx+0x60]
  40616c:	cmp    rax,0xffffffffffffffff
  406170:	mov    r15,rax
  406173:	jne    0x406135
  406175:	mov    rax,QWORD PTR [rbx+0x58]
  406179:	test   rax,rax
  40617c:	je     0x406186
  40617e:	mov    rdx,rdi
  406181:	mov    rcx,rsi
  406184:	call   rax
  406186:	mov    rax,QWORD PTR [rip+0x31b3]        # 0x409340
  40618d:	cmp    DWORD PTR [rax],0x0
  406190:	je     0x4062ab
  406196:	lea    rdx,[rsp+0x90]
  40619e:	xor    eax,eax
  4061a0:	mov    ecx,0xa
  4061a5:	mov    QWORD PTR [rsp+0x80],0x0
  4061b1:	mov    rdi,rdx
  4061b4:	rep stos DWORD PTR es:[rdi],eax
  4061b6:	lea    rax,[rip+0x2823]        # 0x4089e0
  4061bd:	mov    QWORD PTR [rsp+0x90],rax
  4061c5:	lea    rax,[rip+0x281c]        # 0x4089e8
  4061cc:	mov    QWORD PTR [rsp+0x98],rax
  4061d4:	lea    rax,[rip+0x2814]        # 0x4089ef
  4061db:	mov    QWORD PTR [rsp+0xa0],rax
  4061e3:	lea    rax,[rip+0x27be]        # 0x4089a8
  4061ea:	mov    QWORD PTR [rsp+0xa8],rax
  4061f2:	cmp    QWORD PTR [rbx+0x48],0x0
  4061f7:	je     0x40634f
  4061fd:	mov    rax,QWORD PTR [rsp+0x68]
  406202:	xor    r8d,r8d
  406205:	xor    ecx,ecx
  406207:	mov    QWORD PTR [rsp+0x48],0x0
  406210:	mov    QWORD PTR [rsp+0x40],0x0
  406219:	mov    r9d,0x1e
  40621f:	mov    QWORD PTR [rsp+0x28],0x0
  406228:	mov    QWORD PTR [rsp+0x20],0x0
  406231:	mov    QWORD PTR [rsp+0xa0],rax
  406239:	lea    rax,[rsp+0x80]
  406241:	mov    QWORD PTR [rsp+0x50],rax
  406246:	lea    rax,[rsp+0x7c]
  40624b:	mov    QWORD PTR [rsp+0x38],rax
  406250:	lea    rax,[rsp+0x88]
  406258:	mov    QWORD PTR [rsp+0x30],rax
  40625d:	call   0x404598
  406262:	test   eax,eax
  406264:	je     0x40635e
  40626a:	mov    ecx,DWORD PTR [rsp+0x7c]
  40626e:	lea    rdx,[rip+0x2706]        # 0x40897b
  406275:	call   0x405cd0
  40627a:	mov    rdi,rax
  40627d:	mov    eax,DWORD PTR [rsp+0x78]
  406281:	mov    r9d,DWORD PTR [rsp+0x74]
  406286:	mov    r8,rdi
  406289:	mov    rdx,rbp
  40628c:	mov    rcx,rsi
  40628f:	mov    DWORD PTR [rsp+0x20],eax
  406293:	call   QWORD PTR [rbx+0x48]
  406296:	mov    rcx,rdi
  406299:	call   0x405d38
  40629e:	mov    rcx,QWORD PTR [rsp+0x88]
  4062a6:	call   0x404590
  4062ab:	mov    rcx,QWORD PTR [rsp+0x68]
  4062b0:	call   0x404618
  4062b5:	mov    rdx,rbp
  4062b8:	mov    rcx,rsi
  4062bb:	call   QWORD PTR [rbx+0x38]
  4062be:	mov    rcx,r12
  4062c1:	call   0x404530
  4062c6:	mov    rcx,rsi
  4062c9:	call   QWORD PTR [rbx+0x20]
  4062cc:	call   0x403250
  4062d1:	xor    eax,eax
  4062d3:	add    rsp,0xc8
  4062da:	pop    rbx
  4062db:	pop    rsi
  4062dc:	pop    rdi
  4062dd:	pop    rbp
  4062de:	pop    r12
  4062e0:	pop    r13
  4062e2:	pop    r14
  4062e4:	pop    r15
  4062e6:	ret    
  4062e7:	mov    rcx,QWORD PTR [r15]
  4062ea:	lea    rdx,[rip+0x268a]        # 0x40897b
  4062f1:	call   0x404620
  4062f6:	test   rax,rax
  4062f9:	mov    rdi,rax
  4062fc:	jne    0x4060b5
  406302:	call   QWORD PTR [rip+0x7940]        # 0x40dc48
  406308:	mov    ecx,DWORD PTR [rax]
  40630a:	call   0x404568
  40630f:	mov    rdx,QWORD PTR [r15]
  406312:	lea    rcx,[rip+0x2667]        # 0x408980
  406319:	mov    r8,rax
  40631c:	call   0x402130
  406321:	lea    rax,[rip+0x274e]        # 0x408a76
  406328:	lea    r9,[rip+0x2750]        # 0x408a7f
  40632f:	lea    rdx,[rip+0x2732]        # 0x408a68
  406336:	mov    r8d,0x3b
  40633c:	xor    ecx,ecx
  40633e:	mov    QWORD PTR [rsp+0x20],rax
  406343:	call   0x404630
  406348:	xor    edi,edi
  40634a:	jmp    0x406123
  40634f:	mov    rdx,QWORD PTR [rbx]
  406352:	lea    rcx,[rip+0x269f]        # 0x4089f8
  406359:	call   0x402130
  40635e:	mov    rax,QWORD PTR [rsp+0x80]
  406366:	lea    rcx,[rip+0x26cb]        # 0x408a38
  40636d:	mov    rdx,QWORD PTR [rax+0x8]
  406371:	call   0x402130
  406376:	mov    rax,QWORD PTR [rsp+0x88]
  40637e:	lea    rcx,[rip+0x262b]        # 0x4089b0
  406385:	mov    rdx,QWORD PTR [rax+0x8]
  406389:	call   0x402130
  40638e:	mov    rdx,QWORD PTR [rbx]
  406391:	lea    rcx,[rip+0x25b8]        # 0x408950
  406398:	call   0x402130
  40639d:	nop
  40639e:	nop
  40639f:	nop
  4063a0:	(bad)  
  4063a1:	(bad)  
  4063a2:	(bad)  
  4063a3:	(bad)  
  4063a4:	(bad)  
  4063a5:	(bad)  
  4063a6:	(bad)  
  4063a7:	inc    DWORD PTR [rax]
  4063a9:	add    BYTE PTR [rax],al
  4063ab:	add    BYTE PTR [rax],al
  4063ad:	add    BYTE PTR [rax],al
  4063af:	add    bh,bh
  4063b1:	(bad)  
  4063b2:	(bad)  
  4063b3:	(bad)  
  4063b4:	(bad)  
  4063b5:	(bad)  
  4063b6:	(bad)  
  4063b7:	inc    DWORD PTR [rax]
  4063b9:	add    BYTE PTR [rax],al
  4063bb:	add    BYTE PTR [rax],al
  4063bd:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000407000 <.data>:
  407000:	or     al,BYTE PTR [rax]
	...
  40700e:	add    BYTE PTR [rax],al
  407010:	(bad)  
  407011:	(bad)  
  407012:	(bad)  
  407013:	(bad)  
  407014:	(bad)  
  407015:	(bad)  
  407016:	(bad)  
  407017:	(bad)  
  407018:	(bad)  
  407019:	inc    DWORD PTR [rax]
  40701b:	add    BYTE PTR [rdx],al
  40701d:	add    BYTE PTR [rax],al
  40701f:	add    BYTE PTR [rcx],al
  407021:	add    BYTE PTR [rax],al
  407023:	add    bh,bh
  407025:	(bad)  
  407026:	(bad)  
  407027:	(bad)  
  407028:	(bad)  
  407029:	(bad)  
  40702a:	(bad)  
  40702b:	inc    DWORD PTR [rcx]
  40702d:	add    BYTE PTR [rax],al
  40702f:	add    BYTE PTR [rdx],cl
  407031:	add    BYTE PTR [rax],al
  407033:	add    BYTE PTR [rdx],cl
  407035:	add    BYTE PTR [rax],al
  407037:	add    BYTE PTR [rdx],cl
  407039:	add    BYTE PTR [rax],al
  40703b:	add    BYTE PTR [rdx],cl
  40703d:	add    BYTE PTR [rax],al
  40703f:	add    BYTE PTR [rcx],dl
  407041:	mov    DWORD PTR [rax+0x0],eax
  407044:	add    BYTE PTR [rax],al
  407046:	add    BYTE PTR [rax],al
  407048:	(bad)  
  407049:	add    BYTE PTR [rax],al
  40704b:	add    BYTE PTR [rcx],al
  40704d:	add    BYTE PTR [rax],al
  40704f:	add    BYTE PTR [rax-0x73],al
  407052:	add    BYTE PTR [rax],al
	...
  407061:	mov    eax,DWORD PTR [rax+0x0]
  407064:	add    BYTE PTR [rax],al
  407066:	add    BYTE PTR [rax],al
  407068:	xor    BYTE PTR [rax+rax*2],dh
  40706b:	add    BYTE PTR [rax],al
  40706d:	add    BYTE PTR [rax],al
  40706f:	add    BYTE PTR [rax],al
  407071:	xor    eax,0x40
	...
  40707e:	add    BYTE PTR [rax],al
  407080:	ror    BYTE PTR [rbx+0x40],0x0
  407087:	add    BYTE PTR [rax],dh
  407089:	xor    al,0x40
  40708b:	add    BYTE PTR [rax],al
  40708d:	add    BYTE PTR [rax],al
  40708f:	add    BYTE PTR [rax+0x34],al
  407092:	add    BYTE PTR [rax],al
	...
  40709d:	add    BYTE PTR [rax],al
  40709f:	add    BYTE PTR [rax+0x4063],bh
	...
  4070ad:	add    BYTE PTR [rax],al
  4070af:	add    bh,bh
  4070b1:	(bad)  
  4070b2:	(bad)  
  4070b3:	(bad)  
  4070b4:	(bad)  
  4070b5:	(bad)  
  4070b6:	(bad)  
  4070b7:	inc    DWORD PTR [rax]
  4070b9:	add    BYTE PTR [rax],al
  4070bb:	add    BYTE PTR [rax],al
  4070bd:	add    BYTE PTR [rax],al
  4070bf:	add    bh,bh
	...
  4070cd:	add    BYTE PTR [rax],al
  4070cf:	add    BYTE PTR [rdx],al
	...
  4070dd:	add    BYTE PTR [rax],al
  4070df:	add    bh,bh
  4070e1:	(bad)  
  4070e2:	(bad)  
  4070e3:	inc    DWORD PTR [rax]
	...
  4070ed:	add    BYTE PTR [rax],al
  4070ef:	add    al,dl
  4070f1:	pop    rbp
  4070f2:	add    BYTE PTR [rax],al
  4070f5:	add    BYTE PTR [rax],al
  4070f7:	add    al,ah
  4070f9:	pop    rbp
  4070fa:	add    BYTE PTR [rax],al
  4070fd:	add    BYTE PTR [rax],al
  4070ff:	add    BYTE PTR [rdx],dh
  407101:	movabs ds:0x2b992ddf,al
  40710a:	add    BYTE PTR [rax],al
  40710c:	add    BYTE PTR [rax],al
  40710e:	add    BYTE PTR [rax],al
  407110:	int    0x5d
  407112:	and    dl,dl
  407114:	data16 (bad) 
  407116:	(bad)  
  407117:	inc    DWORD PTR [rax]
  407119:	add    BYTE PTR [rax],al
  40711b:	add    BYTE PTR [rax],al
  40711d:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000000408000 <.rdata>:
  408000:	xor    DWORD PTR [rsi],ebp
  408002:	xor    al,0x30
  408004:	xor    eax,DWORD PTR cs:[rax]
  408007:	jo     0x40806a
  408009:	outs   dx,BYTE PTR ds:[rsi]
  40800a:	outs   dx,DWORD PTR ds:[esi]
  40800c:	add    BYTE PTR [rip+0x25282073],ah        # 0x2568a085
  408012:	jae    0x40803d
  408014:	and    BYTE PTR [rip+0xa73],ah        # 0x408a8d
  40801a:	add    BYTE PTR [rax],al
  40801c:	add    BYTE PTR [rax],al
  40801e:	add    BYTE PTR [rax],al
  408020:	imul   r13,QWORD PTR [rsi+0x6b],0x50206465
  408028:	(bad)  
  408029:	outs   dx,BYTE PTR ds:[rsi]
  40802a:	outs   dx,DWORD PTR ds:[esi]
  40802c:	and    BYTE PTR [rcx+rbp*2+0x62],ch
  408030:	jb     0x408093
  408032:	jb     0x4080ad
  408034:	and    BYTE PTR [rax+0x61],ch
  408037:	jae    0x408059
  408039:	(bad)  
  40803a:	and    BYTE PTR [rcx+rbp*2+0x66],ah
  40803e:	data16 gs jb 0x4080a7
  408042:	outs   dx,BYTE PTR ds:[rsi]
  408043:	je     0x408065
  408045:	jbe    0x4080ac
  408047:	jb     0x4080bc
  408049:	imul   ebp,DWORD PTR [rdi+0x6e],0x7325203a
  408050:	or     al,BYTE PTR [rax]
  408052:	add    BYTE PTR [rax],al
  408054:	add    BYTE PTR [rax],al
  408056:	add    BYTE PTR [rax],al
  408058:	rex.B jb 0x4080c2
  40805b:	jne    0x4080ca
  40805d:	outs   dx,BYTE PTR gs:[rsi]
  40805f:	je     0x408081
  408061:	outs   dx,WORD PTR ds:[rsi]
  408063:	jb     0x408085
  408065:	and    eax,0x756d2073
  40806a:	jae    0x4080e0
  40806c:	and    BYTE PTR [rdx+0x65],ah
  40806f:	and    BYTE PTR [rdi+0x6e],ch
  408072:	and    BYTE PTR gs:[rdi+0x66],ch
  408076:	and    BYTE PTR [rip+0x64250073],ah        # 0x646580ef
  40807c:	and    eax,0x2c205b2a
  408081:	pop    rbp
  408082:	and    eax,0x5b2a2564
  408087:	and    BYTE PTR [rbx*2+0x2a256425],ch
  40808e:	pop    rbx
  40808f:	and    BYTE PTR [rbx*2+0x6425],ch
  408096:	add    BYTE PTR [rax],al
  408098:	rex.B jb 0x408102
  40809b:	jne    0x40810a
  40809d:	outs   dx,BYTE PTR gs:[rsi]
  40809f:	je     0x4080c1
  4080a1:	outs   dx,WORD PTR ds:[rsi]
  4080a3:	jb     0x4080c5
  4080a5:	sub    eax,0x72616d2d
  4080aa:	imul   ebp,DWORD PTR [esi+0x20],0x7473756d
  4080b2:	and    BYTE PTR [rdx+0x65],ah
  4080b5:	and    BYTE PTR [rdi+0x6e],ch
  4080b8:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  4080bd:	outs   dx,WORD PTR ds:[rsi]
  4080bf:	jne    0x408133
  4080c1:	and    BYTE PTR [rbx+0x70],dh
  4080c4:	(bad)  
  4080c5:	movsxd esp,DWORD PTR [rbp+0x2d]
  4080c8:	jae    0x40812f
  4080ca:	jo     0x40812d
  4080cc:	jb     0x40812f
  4080ce:	je     0x408135
  4080d0:	and    BYTE PTR fs:[rsi+0x75],ch
  4080d4:	ins    DWORD PTR es:[rdi],dx
  4080d5:	(bad)  
  4080d6:	gs jb  0x40814c
  4080d9:	add    BYTE PTR [rsi+0x6f],ch
  4080dc:	outs   dx,BYTE PTR ds:[rsi]
  4080dd:	add    BYTE PTR gs:[rcx+0x75],ah
  4080e1:	je     0x408152
  4080e3:	add    BYTE PTR [rsi+0x75],ah
  4080e6:	ins    BYTE PTR es:[rdi],dx
  4080e7:	ins    BYTE PTR es:[rdi],dx
	...
  4080f0:	rex.B jb 0x40815a
  4080f3:	jne    0x408162
  4080f5:	outs   dx,BYTE PTR gs:[rsi]
  4080f7:	je     0x408119
  4080f9:	outs   dx,WORD PTR ds:[rsi]
  4080fb:	jb     0x40811d
  4080fd:	sub    eax,0x6e69682d
  408102:	je     0x40816d
  408104:	outs   dx,BYTE PTR ds:[rsi]
  408105:	and    BYTE PTR [ebp+0x75],ch
  408109:	jae    0x40817f
  40810b:	and    BYTE PTR [rdx+0x65],ah
  40810e:	and    BYTE PTR [rdi+0x6e],ch
  408111:	and    BYTE PTR gs:[rdi+0x66],ch
  408115:	and    BYTE PTR [rsi+0x6f],ch
  408118:	outs   dx,BYTE PTR ds:[rsi]
  408119:	gs (bad) 
  40811b:	(bad)  
  40811c:	jne    0x408192
  40811e:	outs   dx,DWORD PTR ds:[rsi]
  40811f:	(bad)  
  408120:	data16 jne 0x40818f
  408123:	ins    BYTE PTR es:[rdi],dx
  408124:	add    BYTE PTR [rip+0x72410078],ah        # 0x728181a2
  40812a:	addr32 jne 0x40819a
  40812d:	outs   dx,BYTE PTR gs:[rsi]
  40812f:	je     0x408151
  408131:	outs   dx,WORD PTR ds:[rsi]
  408133:	jb     0x408155
  408135:	and    eax,0x756d2073
  40813a:	jae    0x4081b0
  40813c:	and    BYTE PTR [rdx+0x65],ah
  40813f:	and    BYTE PTR [rcx+0x20],ah
  408142:	movsxd ebp,DWORD PTR [rdi+0x6c]
  408145:	outs   dx,DWORD PTR ds:[rsi]
  408146:	jb     0x408168
  408148:	outs   dx,BYTE PTR ds:[rsi]
  408149:	(bad)  
  40814a:	ins    DWORD PTR es:[rdi],dx
  40814b:	and    BYTE PTR gs:[rcx+rbp*2+0x6b],ch
  408150:	and    BYTE PTR gs:[rdx+0x65],dh
  408154:	fs sub al,0x20
  408157:	outs   dx,DWORD PTR ds:[rsi]
  408158:	jb     0x40817a
  40815a:	rex.XB push r11
  40815c:	push   rbx
  40815d:	sub    eax,0x6c797473
  408162:	and    BYTE PTR gs:[rbx],ah
  408165:	jb     0x4081d9
  408167:	addr32 addr32 (bad) 
  40816b:	and    BYTE PTR [rdi],ch
  40816d:	and    BYTE PTR [rbx],ah
  40816f:	jb     0x4081e3
  408171:	addr32 addr32 (bad) 
  408175:	(bad)  
  408176:	(bad)  
  408177:	add    BYTE PTR [rdx+rsi*2+0x61],dh
  40817b:	outs   dx,BYTE PTR ds:[rsi]
  40817c:	jae    0x4081ee
  40817e:	(bad)  
  40817f:	jb     0x4081e6
  408181:	outs   dx,BYTE PTR ds:[rsi]
  408182:	je     0x408184
  408184:	add    BYTE PTR [rax],al
  408186:	add    BYTE PTR [rax],al
  408188:	rex.B jbe 0x4081ec
  40818b:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x2d20656c
  408193:	sub    eax,0x6b636162
  408198:	outs   dx,BYTE PTR gs:[rsi]
  40819a:	and    BYTE PTR fs:[rdi+0x70],ch
  40819e:	je     0x408209
  4081a0:	outs   dx,DWORD PTR ds:[rsi]
  4081a1:	outs   dx,BYTE PTR ds:[rsi]
  4081a2:	jae    0x4081c4
  4081a4:	(bad)  
  4081a5:	jb     0x40820c
  4081a7:	cmp    ah,BYTE PTR [rax]
  4081a9:	and    eax,0x73250073
  4081ae:	cmp    ah,BYTE PTR [rax]
  4081b0:	and    eax,0x25000a73
  4081b5:	jae    0x4081f1
  4081b7:	and    BYTE PTR [rip+0x25282073],ah        # 0x2568a230
  4081bd:	and    BYTE PTR fs:[rax+rsi*2+0x69],ah
  4081c2:	sub    DWORD PTR [rax],eax
  4081c4:	add    BYTE PTR [rax],al
  4081c6:	add    BYTE PTR [rax],al
  4081c8:	push   rsp
  4081c9:	push   0x61622065
  4081ce:	movsxd ebp,DWORD PTR [rbx+0x65]
  4081d1:	outs   dx,BYTE PTR ds:[rsi]
  4081d2:	and    BYTE PTR fs:[rdi+rbp*2+0x65],ah
  4081d7:	jae    0x4081f9
  4081d9:	outs   dx,BYTE PTR ds:[rsi]
  4081da:	outs   dx,DWORD PTR ds:[rsi]
  4081db:	je     0x4081fd
  4081dd:	jae    0x408254
  4081df:	jo     0x408251
  4081e1:	outs   dx,DWORD PTR ds:[rsi]
  4081e2:	jb     0x408258
  4081e4:	and    BYTE PTR [rdx+0x6f],dh
  4081e7:	je     0x40824a
  4081e9:	je     0x408250
  4081eb:	and    BYTE PTR fs:[rbp+riz*2+0x78],dh
  4081f0:	je     0x4081fc
  4081f2:	add    BYTE PTR [rax],al
  4081f4:	add    BYTE PTR [rax],al
  4081f6:	add    BYTE PTR [rax],al
  4081f8:	push   rax
  4081f9:	(bad)  
  4081fa:	outs   dx,BYTE PTR ds:[rsi]
  4081fb:	outs   dx,DWORD PTR ds:[esi]
  4081fd:	and    BYTE PTR [rdx+0x61],ah
  408200:	movsxd ebp,DWORD PTR [rbx+0x65]
  408203:	outs   dx,BYTE PTR ds:[rsi]
  408204:	and    BYTE PTR fs:[rdi+rbp*2+0x20],dh
  408209:	jne    0x40827e
  40820b:	and    BYTE PTR gs:[rsi+0x6f],ah
  40820f:	jb     0x408231
  408211:	jb     0x408278
  408213:	outs   dx,BYTE PTR ds:[rsi]
  408214:	fs gs jb 0x408281
  408218:	outs   dx,BYTE PTR ds:[rsi]
  408219:	and    BYTE PTR [eax],al
  40821c:	sub    BYTE PTR [rbp+riz*2+0x66],ah
  408220:	(bad)  
  408221:	jne    0x40828f
  408223:	je     0x40825f
  408225:	and    BYTE PTR [rip+0x28002973],ah        # 0x2840ab9e
  40822b:	outs   dx,DWORD PTR ds:[rsi]
  40822c:	outs   dx,BYTE PTR ds:[rsi]
  40822d:	ins    BYTE PTR es:[rdi],dx
  40822e:	jns    0x408250
  408230:	(bad)  
  408231:	jbe    0x408294
  408233:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x203a656c
  40823b:	and    eax,0x28002973
  408240:	outs   dx,BYTE PTR ds:[rsi]
  408241:	outs   dx,DWORD PTR ds:[rsi]
  408242:	and    BYTE PTR [rdx+0x61],ah
  408245:	movsxd ebp,DWORD PTR [rbx+0x65]
  408248:	outs   dx,BYTE PTR ds:[rsi]
  408249:	fs jae 0x40826c
  40824c:	outs   dx,WORD PTR ds:[rsi]
  40824e:	jne    0x4082be
  408250:	and    DWORD PTR fs:[rcx],ebp
  408253:	add    BYTE PTR [rsi+0x6f],ch
  408256:	sub    eax,0x6f747561
  40825b:	sub    eax,0x726964
  408260:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  408262:	and    BYTE PTR [rcx+riz*2+0x79],ch
  408266:	outs   dx,DWORD PTR ds:[rsi]
  408267:	jne    0x4082dd
  408269:	and    BYTE PTR [rcx+rbp*2+0x72],ah
  40826d:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  408272:	outs   dx,BYTE PTR ds:[rsi]
  408273:	and    BYTE PTR [rcx+0x63],ah
  408276:	movsxd ebp,DWORD PTR [rdi+0x72]
  408279:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x206f7420
  408281:	movsxd ebp,DWORD PTR [rdi+0x6e]
  408284:	je     0x4082eb
  408286:	outs   dx,BYTE PTR ds:[rsi]
  408287:	je     0x4082fc
  408289:	add    BYTE PTR [rdx+0x61],ah
  40828c:	movsxd ebp,DWORD PTR [rbx+0x65]
  40828f:	outs   dx,BYTE PTR ds:[rsi]
  408290:	add    BYTE PTR fs:[rdx+0x61],ah
  408294:	movsxd ebp,DWORD PTR [rbx+0x67]
  408297:	jb     0x408308
  408299:	jne    0x408309
  40829b:	add    BYTE PTR fs:[rbx+0x65],dl
  40829f:	je     0x4082c1
  4082a1:	je     0x40830b
  4082a3:	and    BYTE PTR gs:[rdx+0x61],ah
  4082a7:	movsxd ebp,DWORD PTR [rbx+0x67]
  4082aa:	jb     0x40831b
  4082ac:	jne    0x40831c
  4082ae:	and    BYTE PTR fs:[rbx+0x6f],ah
  4082b2:	ins    BYTE PTR es:[rdi],dx
  4082b3:	outs   dx,DWORD PTR ds:[rsi]
  4082b4:	jb     0x4082b6
  4082b6:	add    BYTE PTR [rax],al
  4082b8:	jb     0x40831f
  4082ba:	fs (bad) 
  4082bc:	and    esi,DWORD PTR [rdx+0x72]
  4082bf:	addr32 vcvtne2ps2bf16 ymm30{k3},ymm26,YMMWORD PTR [edx+0xce0]
  4082c8:	addr32 (bad) 
  4082cb:	(bad)  
  4082cc:	(bad)  
  4082cd:	(bad)  
  4082ce:	je     0x408342
  4082d0:	(bad)  
  4082d1:	outs   dx,BYTE PTR ds:[rsi]
  4082d2:	jae    0x408344
  4082d4:	(bad)  
  4082d5:	jb     0x40833c
  4082d7:	outs   dx,BYTE PTR ds:[rsi]
  4082d8:	je     0x4082da
  4082da:	outs   dx,BYTE PTR ds:[rsi]
  4082db:	outs   dx,DWORD PTR ds:[rsi]
  4082dc:	sub    eax,0x70736964
  4082e1:	ins    BYTE PTR es:[rdi],dx
  4082e2:	(bad)  
  4082e3:	jns    0x4082e5
  4082e5:	add    BYTE PTR [rax],al
  4082e7:	add    BYTE PTR [rdi+rbp*2+0x20],al
  4082eb:	outs   dx,BYTE PTR ds:[rsi]
  4082ec:	outs   dx,DWORD PTR ds:[rsi]
  4082ed:	je     0x40830f
  4082ef:	imul   esi,DWORD PTR fs:[rbx+0x70],0x2079616c
  4082f7:	sub    BYTE PTR [rdx+0x75],ch
  4082fa:	jae    0x408370
  4082fc:	and    BYTE PTR [rdi+0x72],dh
  4082ff:	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x66206f74
  408307:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x7720726f
  40830f:	push   0x76657461
  408314:	gs jb  0x408340
  408317:	add    BYTE PTR [rax+rsi*2+0x69],ah
  40831b:	add    BYTE PTR [rbx+0x65],dl
  40831e:	je     0x408340
  408320:	je     0x40838a
  408322:	and    BYTE PTR gs:[rdx+0x65],dh
  408326:	jae    0x408397
  408328:	ins    BYTE PTR es:[rdi],dx
  408329:	jne    0x40839f
  40832b:	imul   ebp,DWORD PTR [rdi+0x6e],0x6d756e00
  408332:	(bad)  
  408333:	gs jb  0x408336
  408336:	(bad)  
  408337:	ins    BYTE PTR es:[rdi],dx
  408338:	imul   esp,DWORD PTR [rdi+0x6e],0x78655400
  40833f:	je     0x408361
  408341:	(bad)  
  408342:	ins    BYTE PTR es:[rdi],dx
  408343:	imul   esp,DWORD PTR [rdi+0x6e],0x746e656d
  40834a:	add    BYTE PTR [rbp+riz*2+0x66],ch
  40834e:	je     0x40837f
  408350:	movsxd esp,DWORD PTR [rbp+0x6e]
  408353:	je     0x4083ba
  408355:	jb     0x408386
  408357:	jb     0x4083c2
  408359:	addr32 push 0x6c650074
  40835f:	ins    BYTE PTR es:[rdi],dx
  408360:	imul   esi,DWORD PTR [rax+0x73],0x657a69
  408367:	rex.RB ins BYTE PTR es:[rdi],dx
  408369:	ins    BYTE PTR es:[rdi],dx
  40836a:	imul   esi,DWORD PTR [rax+0x73],0x74617a69
  408371:	imul   ebp,DWORD PTR [rdi+0x6e],0x646f6d20
  408378:	add    BYTE PTR gs:[rbx+0x74],dh
  40837c:	(bad)  
  40837d:	jb     0x4083f3
  40837f:	(bad)  
  408380:	ins    DWORD PTR es:[rdi],dx
  408381:	imul   esp,DWORD PTR [rsp+riz*2+0x6c],0x6e652f65
  408389:	add    BYTE PTR fs:[rsi+0x6f],ah
  40838d:	outs   dx,BYTE PTR ds:[rsi]
  40838e:	je     0x408390
  408390:	push   rbx
  408391:	gs je  0x4083b4
  408394:	je     0x4083fe
  408396:	and    BYTE PTR gs:[rsi+0x6f],ah
  40839a:	outs   dx,BYTE PTR ds:[rsi]
  40839b:	je     0x4083bd
  40839d:	fs gs jae 0x408404
  4083a1:	jb     0x40840c
  4083a3:	jo     0x408419
  4083a5:	imul   ebp,DWORD PTR [rdi+0x6e],0x73656400
  4083ac:	movsxd esi,DWORD PTR [rdx+0x69]
  4083af:	jo     0x408425
  4083b1:	imul   ebp,DWORD PTR [rdi+0x6e],0x726f6600
  4083b8:	gs addr32 jb 0x40842b
  4083bc:	jne    0x40842c
  4083be:	add    BYTE PTR fs:[rbx+0x65],dl
  4083c2:	je     0x4083e4
  4083c4:	je     0x40842e
  4083c6:	and    BYTE PTR gs:[rbp+riz*2+0x78],dh
  4083cb:	je     0x4083ed
  4083cd:	movsxd ebp,DWORD PTR [rdi+0x6c]
  4083d0:	outs   dx,DWORD PTR ds:[rsi]
  4083d1:	jb     0x4083d3
  4083d3:	jb     0x40843a
  4083d5:	fs (bad) 
  4083d7:	and    esi,DWORD PTR [rdx+0x72]
  4083da:	addr32 vcvtne2ps2bf16 ymm30{k3},ymm26,YMMWORD PTR [edx+0xce0]
  4083e3:	addr32 (bad) 
  4083e6:	(bad)  
  4083e7:	(bad)  
  4083e8:	add    BYTE PTR [rdi+0x72],ah
  4083eb:	(bad)  
  4083ec:	jbe    0x408457
  4083ee:	je     0x408469
  4083f0:	add    BYTE PTR [rdx+0x61],al
  4083f3:	jae    0x40845a
  4083f5:	and    BYTE PTR [rdi+0x72],ah
  4083f8:	(bad)  
  4083f9:	jbe    0x408464
  4083fb:	je     0x408476
  4083fd:	cmp    ah,BYTE PTR [rax]
  4083ff:	ins    BYTE PTR es:[edi],dx
  408401:	jns    0x408473
  408403:	push   0x746f7220
  408408:	(bad)  
  408409:	je     0x408474
  40840b:	outs   dx,DWORD PTR ds:[rsi]
  40840c:	outs   dx,BYTE PTR ds:[rsi]
  40840d:	add    BYTE PTR [rbx+0x6f],dh
  408410:	jne    0x408486
  408412:	push   0x7361652f
  408417:	je     0x408448
  408419:	outs   dx,BYTE PTR ds:[rsi]
  40841a:	outs   dx,DWORD PTR ds:[rsi]
  40841b:	jb     0x408491
  40841d:	push   0x7365772f
  408422:	je     0x408453
  408424:	(bad)  
  408425:	jne    0x40849b
  408427:	outs   dx,DWORD PTR ds:[rsi]
  408428:	add    BYTE PTR [rdi+0x72],ah
  40842b:	(bad)  
  40842c:	jbe    0x408497
  40842e:	je     0x4084a9
  408430:	sub    eax,0x746e6968
  408435:	add    BYTE PTR [rdi+0x72],al
  408438:	(bad)  
  408439:	jbe    0x4084a4
  40843b:	je     0x4084b6
  40843d:	and    BYTE PTR [rax+0x69],ch
  408440:	outs   dx,BYTE PTR ds:[rsi]
  408441:	je     0x408443
  408443:	outs   dx,BYTE PTR ds:[rsi]
  408444:	(bad)  
  408445:	je     0x4084bc
  408447:	jb     0x4084aa
  408449:	ins    BYTE PTR es:[rdi],dx
  40844a:	(bad)  
  40844b:	jae    0x4084c1
  40844d:	jb     0x4084be
  40844f:	outs   dx,BYTE PTR ds:[rsi]
  408450:	addr32 (bad) 
  408452:	ins    BYTE PTR es:[rdi],dx
  408453:	imul   ebp,DWORD PTR [rsi+0x65],0x61656800
  40845a:	fs gs jb 0x40845e
  40845e:	add    BYTE PTR [rax],al
  408460:	imul   r14d,DWORD PTR [rbx+0x70],0x2079616c
  408468:	je     0x4084d2
  40846a:	and    BYTE PTR gs:[rdi+0x70],ch
  40846e:	je     0x4084d9
  408470:	outs   dx,DWORD PTR ds:[rsi]
  408471:	outs   dx,BYTE PTR ds:[rsi]
  408472:	jae    0x408494
  408474:	imul   ebp,DWORD PTR [rsi+0x20],0x20656874
  40847b:	outs   dx,DWORD PTR ds:[rsi]
  40847c:	jne    0x4084f2
  40847e:	jo     0x4084f5
  408480:	je     0x408482
  408482:	push   0x68676965
  408487:	je     0x408489
  408489:	add    BYTE PTR [rax],al
  40848b:	add    BYTE PTR [rax],al
  40848d:	add    BYTE PTR [rax],al
  40848f:	add    BYTE PTR [rax+0x65],cl
  408492:	imul   esp,DWORD PTR [rdi+0x68],0x6e692074
  408499:	and    BYTE PTR [rax+0x6f],dh
  40849c:	imul   ebp,DWORD PTR [rsi+0x74],0x70282073
  4084a3:	outs   dx,DWORD PTR ds:[rsi]
  4084a4:	jae    0x40850f
  4084a6:	je     0x408511
  4084a8:	jbe    0x40850f
  4084aa:	sub    DWORD PTR [rax],esp
  4084ac:	outs   dx,DWORD PTR ds:[rsi]
  4084ad:	jb     0x4084cf
  4084af:	outs   dx,BYTE PTR ds:[rsi]
  4084b0:	jne    0x40851f
  4084b2:	(bad)  
  4084b3:	gs jb  0x4084d6
  4084b6:	outs   dx,DWORD PTR ds:[rsi]
  4084b7:	data16 and BYTE PTR [rcx+rbp*2+0x6e],ch
  4084bc:	gs jae 0x4084df
  4084bf:	sub    BYTE PTR [rsi+0x65],ch
  4084c2:	addr32 (bad) 
  4084c4:	je     0x40852f
  4084c6:	jbe    0x40852d
  4084c8:	sub    DWORD PTR [rax],esp
  4084ca:	outs   dx,WORD PTR ds:[rsi]
  4084cc:	jb     0x4084ee
  4084ce:	gs ins BYTE PTR es:[rdi],dx
  4084d0:	ins    BYTE PTR es:[rdi],dx
  4084d1:	imul   esi,DWORD PTR [rax+0x73],0x6e697a69
  4084d8:	add    BYTE PTR [ebx],ch
  4084db:	jo     0x40854c
  4084dd:	imul   ebp,DWORD PTR [rsi+0x74],0x6e2d2f73
  4084e4:	jne    0x408553
  4084e6:	ins    BYTE PTR es:[rdi],dx
  4084e7:	imul   ebp,DWORD PTR [rsi+0x65],0x69680073
  4084ee:	outs   dx,BYTE PTR ds:[rsi]
  4084ef:	je     0x40855a
  4084f1:	outs   dx,BYTE PTR ds:[rsi]
  4084f2:	add    BYTE PTR [eax+0x69],cl
  4084f6:	outs   dx,BYTE PTR ds:[rsi]
  4084f7:	je     0x408562
  4084f9:	outs   dx,BYTE PTR ds:[rsi]
  4084fa:	and    BYTE PTR [ebx+0x74],dh
  4084fe:	jns    0x40856c
  408500:	add    BYTE PTR gs:[rsi+0x6f],ch
  408504:	outs   dx,BYTE PTR ds:[rsi]
  408505:	gs (bad) 
  408507:	(bad)  
  408508:	jne    0x40857e
  40850a:	outs   dx,DWORD PTR ds:[rsi]
  40850b:	(bad)  
  40850c:	data16 jne 0x40857b
  40850f:	ins    BYTE PTR es:[rdi],dx
  408510:	add    BYTE PTR [rcx+0x6e],ch
  408513:	fs outs dx,BYTE PTR gs:[rsi]
  408516:	je     0x408518
  408518:	push   rdi
  408519:	imul   esp,DWORD PTR [rsp+rsi*2+0x68],0x206e6920
  408521:	jo     0x408592
  408523:	imul   ebp,DWORD PTR [rsi+0x74],0x6f742073
  40852a:	and    BYTE PTR [rcx+0x6e],ch
  40852d:	fs outs dx,BYTE PTR gs:[rsi]
  408530:	je     0x408552
  408532:	jo     0x408595
  408534:	jb     0x408597
  408536:	addr32 jb 0x40859a
  408539:	jo     0x4085a3
  40853b:	jae    0x40853d
  40853d:	jo     0x4085ae
  40853f:	imul   ebp,DWORD PTR [rsi+0x74],0x756a0073
  408546:	jae    0x4085bc
  408548:	imul   esp,DWORD PTR [rsi+0x79],0x0
  40854f:	add    BYTE PTR [rcx+0x6c],al
  408552:	imul   esp,DWORD PTR [rdi+0x6e],0x72617020
  408559:	(bad)  
  40855a:	addr32 jb 0x4085be
  40855d:	jo     0x4085c7
  40855f:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
  408563:	gs jae 0x408586
  408566:	je     0x4085d7
  408568:	and    BYTE PTR [rdx+0x65],ah
  40856b:	and    BYTE PTR [rdx+0x75],ch
  40856e:	jae    0x4085e4
  408570:	imul   esp,DWORD PTR [rsi+0x69],0x6c006465
  408577:	(bad)  
  408578:	outs   dx,BYTE PTR ds:[rsi]
  408579:	addr32 jne 0x4085dd
  40857c:	add    BYTE PTR gs:[eax],al
  408580:	rex.WR (bad) 
  408582:	outs   dx,BYTE PTR ds:[rsi]
  408583:	addr32 jne 0x4085e7
  408586:	and    BYTE PTR gs:[edi+ebp*2+0x20],dh
  40858c:	jne    0x408601
  40858e:	and    BYTE PTR gs:[rsi+0x6f],ah
  408592:	jb     0x4085b4
  408594:	outs   dx,WORD PTR ds:[rsi]
  408596:	outs   dx,BYTE PTR ds:[rsi]
  408597:	je     0x4085b9
  408599:	jae    0x408600
  40859b:	ins    BYTE PTR es:[rdi],dx
  40859c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4085a1:	outs   dx,BYTE PTR ds:[rsi]
  4085a2:	add    BYTE PTR [rbp+0x6e],ah
  4085a5:	pop    rdi
  4085a6:	push   rbp
  4085a7:	push   rbx
  4085a8:	(bad)  
  4085a9:	gs je  0x40860f
  4085ac:	add    BYTE PTR [rbp+0x61],ch
  4085af:	jb     0x408618
  4085b1:	imul   ebp,DWORD PTR [rsi+0x0],0x0
  4085b8:	push   rbx
  4085b9:	gs je  0x4085dc
  4085bc:	je     0x408626
  4085be:	and    BYTE PTR gs:[rbp+0x61],ch
  4085c2:	jb     0x40862b
  4085c4:	imul   ebp,DWORD PTR [rsi+0x20],0x74206e6f
  4085cb:	push   0x756f2065
  4085d0:	je     0x408642
  4085d2:	jne    0x408648
  4085d4:	and    BYTE PTR [rcx+0x6e],ch
  4085d7:	and    BYTE PTR [rax+0x69],dh
  4085da:	js     0x408641
  4085dc:	ins    BYTE PTR es:[rdi],dx
  4085dd:	jae    0x4085df
  4085df:	rex.XB push r11
  4085e1:	push   rbx
  4085e2:	sub    eax,0x6c797473
  4085e7:	and    BYTE PTR gs:[rsi+0x75],ch
  4085eb:	ins    DWORD PTR es:[rdi],dx
  4085ec:	(bad)  
  4085ed:	gs jb  0x408663
  4085f0:	and    BYTE PTR [rcx+0x6e],ch
  4085f3:	and    BYTE PTR [rax+0x69],dh
  4085f6:	js     0x40865d
  4085f8:	ins    BYTE PTR es:[rdi],dx
  4085f9:	jae    0x4085fb
  4085fb:	ins    DWORD PTR es:[rdi],dx
  4085fc:	(bad)  
  4085fd:	jb     0x40866a
  4085ff:	jne    0x408671
  408601:	add    BYTE PTR [rax],al
  408603:	add    BYTE PTR [rax],al
  408605:	add    BYTE PTR [rax],al
  408607:	add    BYTE PTR [rcx+0x6e],cl
  40860a:	je     0x408671
  40860c:	jb     0x40867e
  40860e:	jb     0x408675
  408610:	je     0x408632
  408612:	je     0x408679
  408614:	js     0x40868a
  408616:	and    BYTE PTR [rcx+0x73],ah
  408619:	and    BYTE PTR [rax+0x61],dl
  40861c:	outs   dx,BYTE PTR ds:[rsi]
  40861d:	outs   dx,DWORD PTR ds:[esi]
  40861f:	and    BYTE PTR [rbp+0x61],ch
  408622:	jb     0x40868f
  408624:	jne    0x408696
  408626:	add    BYTE PTR [rdi+0x75],ch
  408629:	je     0x40869b
  40862b:	jne    0x4086a1
  40862d:	add    BYTE PTR [rax],al
  40862f:	add    BYTE PTR [rbx+0x61],dl
  408632:	jbe    0x408699
  408634:	and    BYTE PTR [rdx+0x65],dh
  408637:	outs   dx,BYTE PTR ds:[rsi]
  408638:	fs gs jb 0x4086a1
  40863c:	and    BYTE PTR fs:[rcx+0x6d],ch
  408640:	(bad)  
  408641:	and    BYTE PTR gs:[edi+ebp*2+0x20],dh
  408647:	outs   dx,DWORD PTR ds:[rsi]
  408648:	jne    0x4086be
  40864a:	jo     0x4086c1
  40864c:	je     0x40866e
  40864e:	imul   bp,WORD PTR [rbp+riz*2+0x0],0x6966
  408655:	ins    BYTE PTR es:[rdi],dx
  408656:	add    BYTE PTR gs:[rax+0x61],dh
  40865a:	outs   dx,BYTE PTR ds:[rsi]
  40865b:	outs   dx,DWORD PTR ds:[esi]
  40865d:	jb     0x4086c2
  40865f:	add    BYTE PTR [rbp+riz*2+0x70],al
  408663:	jb     0x4086ca
  408665:	movsxd esp,DWORD PTR [rcx+0x74]
  408668:	gs add BYTE PTR fs:[rax+0x69],dh
  40866d:	js     0x4086d4
  40866f:	ins    BYTE PTR es:[rdi],dx
  408670:	jae    0x408672
  408672:	add    BYTE PTR [rax],al
  408674:	add    BYTE PTR [rax],al
  408676:	add    BYTE PTR [rax],al
  408678:	push   rbp
  408679:	jae    0x4086e0
  40867b:	and    BYTE PTR [rax+0x69],dh
  40867e:	js     0x4086e5
  408680:	ins    BYTE PTR es:[rdi],dx
  408681:	and    BYTE PTR [rbp+0x6e],dh
  408684:	imul   esi,DWORD PTR [rbx+rsi*2+0x20],0x74736e69
  40868c:	gs (bad) 
  40868e:	and    BYTE PTR fs:[rdi+0x66],ch
  408692:	and    BYTE PTR [rax+0x6f],dh
  408695:	imul   ebp,DWORD PTR [rsi+0x74],0x73282073
  40869c:	gs je  0x408712
  40869f:	and    BYTE PTR [rax+rsi*2+0x69],ah
  4086a3:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  4086a7:	(bad)  
  4086a8:	xor    ch,BYTE PTR [rcx]
  4086aa:	add    BYTE PTR [rdx+0x74],dh
  4086ad:	ins    BYTE PTR es:[rdi],dx
  4086ae:	add    BYTE PTR [rax],al
  4086b0:	push   rbx
  4086b1:	gs je  0x4086d4
  4086b4:	(bad)  
  4086b6:	jae    0x40871d
  4086b8:	and    BYTE PTR [rcx+rbp*2+0x72],ah
  4086bc:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4086c1:	outs   dx,BYTE PTR ds:[rsi]
  4086c2:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  4086c6:	jb     0x408731
  4086c8:	addr32 push 0x6f742d74
  4086ce:	sub    eax,0x7466656c
  4086d3:	add    BYTE PTR [rdx+0x6f],dh
  4086d6:	je     0x408739
  4086d8:	je     0x40873f
  4086da:	add    BYTE PTR [rax],al
  4086dc:	add    BYTE PTR [rax],al
  4086de:	add    BYTE PTR [rax],al
  4086e0:	rex.B outs dx,BYTE PTR ds:[rsi]
  4086e2:	ins    BYTE PTR es:[edi],dx
  4086e4:	and    BYTE PTR gs:[rcx+0x74],ah
  4086e8:	and    BYTE PTR [rdi+0x68],dh
  4086eb:	imul   esp,DWORD PTR [rbx+0x68],0x206f7420
  4086f2:	jb     0x408763
  4086f4:	je     0x408757
  4086f6:	je     0x40875d
  4086f8:	and    BYTE PTR [rdx+0x65],dh
  4086fb:	jae    0x408772
  4086fd:	ins    BYTE PTR es:[rdi],dx
  4086fe:	je     0x408773
  408700:	add    BYTE PTR [rbp+riz*2+0x67],ah
  408704:	jb     0x40876b
  408706:	gs jae 0x408709
  408709:	jb     0x408780
  40870b:	outs   dx,BYTE PTR ds:[rsi]
  40870c:	jae    0x40870e
  40870e:	add    BYTE PTR [rax],al
  408710:	push   rdx
  408711:	jne    0x408781
  408713:	and    BYTE PTR [rax+0x61],dl
  408716:	outs   dx,BYTE PTR ds:[rsi]
  408717:	outs   dx,DWORD PTR ds:[esi]
  408719:	and    BYTE PTR [rcx+riz*2+0x79],ch
  40871d:	outs   dx,DWORD PTR ds:[rsi]
  40871e:	jne    0x408794
  408720:	and    BYTE PTR [rbp+0x6e],ah
  408723:	imul   ebp,DWORD PTR [esi+0x65],0x69687420
  40872b:	jae    0x40874d
  40872d:	ins    DWORD PTR es:[rdi],dx
  40872e:	(bad)  
  40872f:	outs   dx,BYTE PTR ds:[rsi]
  408730:	jns    0x408752
  408732:	je     0x40879d
  408734:	ins    DWORD PTR es:[rdi],dx
  408735:	gs jae 0x408738
  408738:	imul   ebp,DWORD PTR [rsi+0x74],0x72656765
  40873f:	add    BYTE PTR [rbx+0x69],dh
  408742:	outs   dx,BYTE PTR ds:[rsi]
  408743:	ins    BYTE PTR es:[edi],dx
  408745:	gs sub eax,0x726170
  40874b:	rex.RB outs dx,BYTE PTR ds:[rsi]
  40874d:	(bad)  
  40874e:	(bad)  
  40874f:	ins    BYTE PTR es:[rdi],dx
  408750:	and    BYTE PTR gs:[rbx+0x69],dh
  408754:	outs   dx,BYTE PTR ds:[rsi]
  408755:	ins    BYTE PTR es:[edi],dx
  408757:	gs sub eax,0x61726170
  40875d:	addr32 jb 0x4087c1
  408760:	jo     0x4087ca
  408762:	and    BYTE PTR [rbp+0x6f],ch
  408765:	fs add BYTE PTR gs:[rbp+riz*2+0x78],dh
  40876b:	je     0x40876d
  40876d:	add    BYTE PTR [rax],al
  40876f:	add    BYTE PTR [rbp+riz*2+0x78],dl
  408773:	je     0x408795
  408775:	je     0x4087e6
  408777:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  40877b:	jo     0x4087e9
  40877d:	(bad)  
  40877e:	jns    0x4087a0
  408780:	sub    BYTE PTR [rcx+0x6e],ch
  408783:	jae    0x4087f9
  408785:	gs (bad) 
  408787:	and    BYTE PTR fs:[rdi+0x66],ch
  40878b:	and    BYTE PTR [rcx+0x20],ah
  40878e:	imul   bp,WORD PTR [rbp+riz*2+0x29],0x7300
  408795:	je     0x408809
  408797:	imul   ebp,DWORD PTR [rsi+0x67],0x72657600
  40879e:	jae    0x408809
  4087a0:	outs   dx,DWORD PTR ds:[rsi]
  4087a1:	outs   dx,BYTE PTR ds:[rsi]
  4087a2:	add    BYTE PTR [rbx+0x68],dl
  4087a5:	outs   dx,DWORD PTR ds:[rsi]
  4087a6:	ja     0x4087c8
  4087a8:	jbe    0x40880f
  4087aa:	jb     0x40881f
  4087ac:	imul   ebp,DWORD PTR [rdi+0x6e],0x6d756e20
  4087b3:	(bad)  
  4087b4:	gs jb  0x40882a
  4087b7:	add    BYTE PTR [rdi+0x61],dh
  4087ba:	je     0x408821
  4087bc:	jb     0x408824
  4087be:	(bad)  
  4087bf:	ins    BYTE PTR es:[rdi],dx
  4087c0:	ins    BYTE PTR es:[rdi],dx
  4087c1:	add    BYTE PTR [rbx+0x72],al
  4087c4:	gs (bad) 
  4087c6:	je     0x40882d
  4087c8:	and    BYTE PTR [rcx+0x20],ah
  4087cb:	ja     0x40882e
  4087cd:	je     0x408834
  4087cf:	jb     0x408837
  4087d1:	(bad)  
  4087d2:	ins    BYTE PTR es:[rdi],dx
  4087d3:	ins    BYTE PTR es:[rdi],dx
  4087d4:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  4087d8:	jo     0x408846
  4087da:	(bad)  
  4087db:	jns    0x4087dd
  4087dd:	ja     0x408848
  4087df:	fs je  0x40884a
  4087e2:	add    BYTE PTR [rax],al
  4087e4:	add    BYTE PTR [rax],al
  4087e6:	add    BYTE PTR [rax],al
  4087e8:	push   rdi
  4087e9:	imul   esp,DWORD PTR [rsp+rsi*2+0x68],0x206e6920
  4087f1:	jo     0x408862
  4087f3:	imul   ebp,DWORD PTR [rsi+0x74],0x6f742073
  4087fa:	and    BYTE PTR [rdi+0x68],dh
  4087fd:	imul   esp,DWORD PTR [rbx+0x68],0x206f7420
  408804:	ja     0x408878
  408806:	(bad)  
  408807:	jo     0x408829
  408809:	ins    BYTE PTR es:[rdi],dx
  40880a:	imul   ebp,DWORD PTR [rsi+0x65],0x726f2073
  408811:	and    BYTE PTR [rbp+0x6c],ah
  408814:	ins    BYTE PTR es:[rdi],dx
  408815:	imul   esi,DWORD PTR [rax+0x73],0x657a69
  40881c:	ja     0x408890
  40881e:	(bad)  
  40881f:	jo     0x408821
  408821:	add    BYTE PTR [rax],al
  408823:	add    BYTE PTR [rax],al
  408825:	add    BYTE PTR [rax],al
  408827:	add    BYTE PTR [rbp+riz*2+0x78],dl
  40882b:	je     0x40884d
  40882d:	ja     0x4088a1
  40882f:	(bad)  
  408830:	jo     0x4088a2
  408832:	imul   ebp,DWORD PTR [rsi+0x67],0x646f6d20
  408839:	and    BYTE PTR gs:[rax],ch
  40883c:	outs   dx,BYTE PTR ds:[rsi]
  40883d:	gs gs fs jae 0x408862
  408842:	(bad)  
  408843:	and    BYTE PTR [rdi+0x69],dh
  408846:	fs je  0x4088b1
  408849:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40884d:	(bad)  
  40884e:	and    BYTE PTR gs:[rbx+0x65],dh
  408852:	je     0x40887d
  408854:	add    BYTE PTR [rdi+0x6f],dh
  408857:	jb     0x4088bd
  408859:	(bad)  
  40885a:	movsxd ebp,DWORD PTR [rax+0x61]
  40885d:	jb     0x40888e
  40885f:	ja     0x4088d0
  408861:	jb     0x4088c7
  408863:	sub    eax,0x72616863
  408868:	add    BYTE PTR [rip+0x4c494620],ch        # 0x4c89ce8e
  40886e:	add    BYTE PTR [rip+0x704f0073],r12b        # 0x708f88e8
  408875:	je     0x4088e0
  408877:	outs   dx,DWORD PTR ds:[rsi]
  408878:	outs   dx,BYTE PTR ds:[rsi]
  408879:	and    BYTE PTR [rax+0x61],dh
  40887c:	jb     0x4088f1
  40887e:	and    BYTE PTR gs:[rbp+0x72],ah
  408882:	jb     0x4088f3
  408884:	jb     0x408886
  408886:	add    BYTE PTR [rax],al
  408888:	push   rdi
  408889:	push   0x73206e65
  40888e:	jo     0x4088f5
  408890:	movsxd ebp,DWORD PTR [rcx+0x66]
  408893:	jns    0x4088fe
  408895:	outs   dx,BYTE PTR ds:[rsi]
  408896:	and    BYTE PTR [eip+0x7865742d],ch        # 0x78a5fcca
  40889d:	je     0x4088cb
  40889f:	and    BYTE PTR [rsi+0x6f],ch
  4088a2:	and    BYTE PTR [rsi+0x69],ah
  4088a5:	ins    BYTE PTR es:[rdi],dx
  4088a6:	and    BYTE PTR gs:[rbx+0x68],dh
  4088aa:	outs   dx,DWORD PTR ds:[rsi]
  4088ab:	jne    0x408919
  4088ad:	and    BYTE PTR fs:[rdx+0x65],ah
  4088b1:	and    BYTE PTR [rdi+0x69],ah
  4088b4:	jbe    0x40891b
  4088b6:	outs   dx,BYTE PTR ds:[rsi]
  4088b7:	add    BYTE PTR [rbp+0x73],dl
  4088ba:	(bad)  
  4088bb:	cmp    ah,BYTE PTR gs:[eax]
  4088bf:	and    eax,0x4f5b2073
  4088c4:	push   rax
  4088c5:	push   rsp
  4088c6:	rex.WB
  4088c7:	rex.WRXB
  4088c8:	rex.WRX
  4088c9:	cs cs cs pop rbp
  4088cd:	and    BYTE PTR [rsi+0x49],al
  4088d0:	rex.WR
  4088d1:	or     r8b,BYTE PTR [r8]
  4088d4:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  4088d6:	and    BYTE PTR [rsi+0x69],dh
  4088d9:	gs ja  0x408941
  4088dc:	jb     0x4088fe
  4088de:	(bad)  
  4088e0:	movsxd ebp,DWORD PTR [rbx+0x65]
  4088e3:	outs   dx,BYTE PTR ds:[rsi]
  4088e4:	and    BYTE PTR fs:[rsi+0x6f],ah
  4088e8:	jne    0x408958
  4088ea:	add    BYTE PTR fs:[rip+0x43000a73],ah        # 0x43409364
  4088f1:	(bad)  
  4088f2:	outs   dx,BYTE PTR ds:[rsi]
  4088f3:	outs   dx,BYTE PTR ds:[rsi]
  4088f4:	outs   dx,DWORD PTR ds:[rsi]
  4088f5:	je     0x408917
  4088f7:	jo     0x40895a
  4088f9:	jb     0x40896e
  4088fb:	and    BYTE PTR gs:[rcx+0x6e],ch
  4088ff:	jo     0x408976
  408901:	je     0x408923
  408903:	(bad)  
  408904:	jae    0x408926
  408906:	ins    DWORD PTR es:[rdi],dx
  408907:	(bad)  
  408908:	jb     0x408975
  40890a:	jne    0x40897c
  40890c:	cmp    ah,BYTE PTR [rax]
  40890e:	and    eax,0x73
	...
  408923:	add    BYTE PTR [rax],al
  408925:	add    BYTE PTR [rax+0x40],dl
  40892b:	add    BYTE PTR [rax],al
  40892d:	add    al,dh
  40892f:	(bad)  
  408930:	add    BYTE PTR [rax],al
  408932:	add    BYTE PTR [rax],al
  408934:	add    BYTE PTR [rax],al
  408936:	and    al,0x40
  408938:	add    BYTE PTR [rax],al
  40893a:	add    BYTE PTR [rax],al
  40893c:	add    BYTE PTR [rax],al
  40893e:	lock mov edi,0x676e6170
  408944:	outs   dx,DWORD PTR ds:[rsi]
  408945:	sub    eax,0x77656976
  40894a:	add    BYTE PTR [rax],al
  40894c:	add    BYTE PTR [rax],al
  40894e:	add    BYTE PTR [rax],al
  408950:	and    eax,0x69762073
  408955:	gs ja  0x4089bd
  408958:	jb     0x40897a
  40895a:	(bad)  
  40895c:	movsxd ebp,DWORD PTR [rbx+0x65]
  40895f:	outs   dx,BYTE PTR ds:[rsi]
  408960:	and    BYTE PTR fs:[rdi+rbp*2+0x65],ah
  408965:	jae    0x408987
  408967:	outs   dx,BYTE PTR ds:[rsi]
  408968:	outs   dx,DWORD PTR ds:[rsi]
  408969:	je     0x40898b
  40896b:	jae    0x4089e2
  40896d:	jo     0x4089df
  40896f:	outs   dx,DWORD PTR ds:[rsi]
  408970:	jb     0x4089e6
  408972:	and    BYTE PTR [rdi+0x72],dh
  408975:	imul   esi,DWORD PTR [rcx+rbp*2+0x6e],0x62770067
  40897d:	add    BYTE PTR [rax],al
  40897f:	add    BYTE PTR [rbx+0x61],al
  408982:	outs   dx,BYTE PTR ds:[rsi]
  408983:	outs   dx,BYTE PTR ds:[rsi]
  408984:	outs   dx,DWORD PTR ds:[rsi]
  408985:	je     0x4089a7
  408987:	outs   dx,DWORD PTR ds:[rsi]
  408988:	jo     0x4089ef
  40898a:	outs   dx,BYTE PTR ds:[rsi]
  40898b:	and    BYTE PTR [rdi+0x75],ch
  40898e:	je     0x408a00
  408990:	jne    0x408a06
  408992:	and    BYTE PTR [rsi+0x69],ah
  408995:	ins    BYTE PTR es:[rdi],dx
  408996:	and    BYTE PTR gs:[rip+0x25203a73],ah        # 0x2560c410
  40899d:	jae    0x4089a9
  40899f:	add    BYTE PTR [rbx+0x6f],ah
  4089a2:	outs   dx,BYTE PTR ds:[rsi]
  4089a3:	jbe    0x408a0a
  4089a5:	jb     0x408a1b
  4089a7:	add    BYTE PTR [rip+0x0],ch        # 0x4089ad
  4089ad:	add    BYTE PTR [rax],al
  4089af:	add    BYTE PTR [rdi+0x68],dl
  4089b2:	outs   dx,BYTE PTR gs:[rsi]
  4089b4:	and    BYTE PTR [rdx+0x75],dh
  4089b7:	outs   dx,BYTE PTR ds:[rsi]
  4089b8:	outs   dx,BYTE PTR ds:[rsi]
  4089b9:	imul   ebp,DWORD PTR [rsi+0x67],0x616d4920
  4089c0:	addr32 gs rex.WRB (bad) 
  4089c4:	imul   esp,DWORD PTR [ebx+0x6b],0x6f632720
  4089cc:	outs   dx,BYTE PTR ds:[rsi]
  4089cd:	jbe    0x408a34
  4089cf:	jb     0x408a45
  4089d1:	(bad)  
  4089d2:	and    BYTE PTR [rbx+0x6f],ah
  4089d5:	ins    DWORD PTR es:[rdi],dx
  4089d6:	ins    DWORD PTR es:[rdi],dx
  4089d7:	(bad)  
  4089d8:	outs   dx,BYTE PTR ds:[rsi]
  4089d9:	cmp    ah,BYTE PTR fs:[rax]
  4089dc:	and    eax,0x64000a73
  4089e1:	imul   esi,DWORD PTR [rbx+0x70],0x79616c
  4089e8:	sub    eax,0x6c746974
  4089ed:	add    BYTE PTR gs:[rip+0x73],ah        # 0x408a67
  4089f4:	add    BYTE PTR [rax],al
  4089f6:	add    BYTE PTR [rax],al
  4089f8:	and    eax,0x69762073
  4089fd:	gs ja  0x408a65
  408a00:	jb     0x408a22
  408a02:	(bad)  
  408a04:	movsxd ebp,DWORD PTR [rbx+0x65]
  408a07:	outs   dx,BYTE PTR ds:[rsi]
  408a08:	and    BYTE PTR fs:[rdi+rbp*2+0x65],ah
  408a0d:	jae    0x408a2f
  408a0f:	outs   dx,BYTE PTR ds:[rsi]
  408a10:	outs   dx,DWORD PTR ds:[rsi]
  408a11:	je     0x408a33
  408a13:	jae    0x408a8a
  408a15:	jo     0x408a87
  408a17:	outs   dx,DWORD PTR ds:[rsi]
  408a18:	jb     0x408a8e
  408a1a:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  408a1e:	jo     0x408a8c
  408a20:	(bad)  
  408a21:	jns    0x408a8c
  408a23:	outs   dx,BYTE PTR ds:[rsi]
  408a24:	and    BYTE PTR [edi+0x72],ch
  408a28:	and    BYTE PTR [rdi+0x72],dh
  408a2b:	imul   esi,DWORD PTR [rcx+rbp*2+0x6e],0x67
  408a33:	add    BYTE PTR [rax],al
  408a35:	add    BYTE PTR [rax],al
  408a37:	add    BYTE PTR [rdi+0x68],dl
  408a3a:	outs   dx,BYTE PTR gs:[rsi]
  408a3c:	and    BYTE PTR [rdx+0x75],dh
  408a3f:	outs   dx,BYTE PTR ds:[rsi]
  408a40:	outs   dx,BYTE PTR ds:[rsi]
  408a41:	imul   ebp,DWORD PTR [rsi+0x67],0x616d4920
  408a48:	addr32 gs rex.WRB (bad) 
  408a4c:	imul   esp,DWORD PTR [ebx+0x6b],0x69642720
  408a54:	jae    0x408ac6
  408a56:	ins    BYTE PTR es:[rdi],dx
  408a57:	(bad)  
  408a58:	jns    0x408a81
  408a5a:	and    BYTE PTR [rbx+0x6f],ah
  408a5d:	ins    DWORD PTR es:[rdi],dx
  408a5e:	ins    DWORD PTR es:[rdi],dx
  408a5f:	(bad)  
  408a60:	outs   dx,BYTE PTR ds:[rsi]
  408a61:	cmp    ah,BYTE PTR fs:[rax]
  408a64:	and    eax,0x76000a73
  408a69:	imul   esp,DWORD PTR [rbp+0x77],0x6d2d7265
  408a70:	(bad)  
  408a71:	imul   ebp,DWORD PTR [rsi+0x2e],0x69760063
  408a78:	gs ja  0x408aa8
  408a7b:	imul   esp,DWORD PTR ds:[rax+rax*1+0x6d],0x6e6961
	...
  408ac0:	jae    0x408b38
  408ac2:	add    BYTE PTR [eax+0x64],dh
  408ac6:	data16 add BYTE PTR [rax+0x73],dh
  408aca:	add    BYTE PTR [rbp+0x70],ah
  408acd:	jae    0x408acf
  408acf:	rex.XB (bad) 
  408ad1:	imul   esi,DWORD PTR [rdx+0x6f],0x656c6946
	...
  408b00:	iret   
  408b01:	mov    al,BYTE PTR [rax+0x0]
	...
  408b18:	push   rax
  408b19:	xor    eax,DWORD PTR [rax+0x0]
  408b1c:	add    BYTE PTR [rax],al
  408b1e:	add    BYTE PTR [rax],al
  408b20:	adc    BYTE PTR [rbx],dh
  408b22:	add    BYTE PTR [rax],al
	...
  408b2d:	add    BYTE PTR [rax],al
  408b2f:	add    BYTE PTR [rax+0x4032],al
  408b35:	add    BYTE PTR [rax],al
  408b37:	add    BYTE PTR [rax+0x4032],dh
	...
  408b7d:	add    BYTE PTR [rax],al
  408b7f:	add    BYTE PTR [rbx+0x61],al
  408b82:	imul   esi,DWORD PTR [rdx+0x6f],0x67616d49
  408b89:	add    BYTE PTR gs:[rax],al
	...
  408bc0:	or     BYTE PTR [rbx+0x40],0x0
	...
  408bd7:	add    BYTE PTR [rax+0x32],ah
  408bda:	add    BYTE PTR [rax],al
  408bdd:	add    BYTE PTR [rax],al
  408bdf:	add    BYTE PTR [rax+0x32],dh
  408be2:	add    BYTE PTR [rax],al
	...
  408bed:	add    BYTE PTR [rax],al
  408bef:	add    al,al
  408bf1:	xor    al,BYTE PTR [rax+0x0]
  408bf4:	add    BYTE PTR [rax],al
  408bf6:	add    BYTE PTR [rax],al
  408bf8:	movabs al,ds:0x4032
	...
  408c45:	add    al,dh
  408c47:	(bad)  
  408c48:	add    BYTE PTR [rax],al
  408c4a:	add    BYTE PTR [rax],al
  408c4c:	loopne 0x408c4d
  408c4e:	out    dx,eax
  408c4f:	add    BYTE PTR [rax],al
	...
  408c7e:	add    BYTE PTR [rax],al
  408c80:	(bad)  
  408c81:	outs   dx,BYTE PTR ds:[rsi]
  408c82:	outs   dx,BYTE PTR ds:[rsi]
  408c83:	outs   dx,DWORD PTR ds:[rsi]
  408c84:	je     0x408ce7
  408c86:	je     0x408ced
  408c88:	add    BYTE PTR [rcx+0x6e],al
  408c8b:	outs   dx,BYTE PTR ds:[rsi]
  408c8c:	outs   dx,DWORD PTR ds:[rsi]
  408c8d:	je     0x408cf0
  408c8f:	je     0x408cf6
  408c91:	and    BYTE PTR [rax+rbp*2+0x65],dh
  408c95:	and    BYTE PTR [rdi+0x75],ch
  408c98:	je     0x408d0a
  408c9a:	jne    0x408d10
  408c9c:	add    BYTE PTR [rcx],dh
  408c9e:	and    BYTE PTR [rdi+0x72],ch
  408ca1:	and    BYTE PTR [rdx],dh
  408ca3:	add    BYTE PTR [rax],al
  408ca5:	add    BYTE PTR [rax],al
  408ca7:	add    BYTE PTR [rdi+0x70],cl
  408caa:	je     0x408d15
  408cac:	outs   dx,DWORD PTR ds:[rsi]
  408cad:	outs   dx,BYTE PTR ds:[rsi]
  408cae:	jae    0x408cd0
  408cb0:	jne    0x408d20
  408cb2:	fs gs jb 0x408d29
  408cb6:	je     0x408d27
  408cb8:	outs   dx,DWORD PTR ds:[rsi]
  408cb9:	and    BYTE PTR fs:[rdx+0x79],ah
  408cbd:	and    BYTE PTR [rax+rbp*2+0x65],dh
  408cc1:	and    BYTE PTR [rbx+0x61],ah
  408cc4:	imul   esi,DWORD PTR [rdx+0x6f],0x63616220
  408ccb:	imul   esp,DWORD PTR [rbp+0x6e],0x64
  408ccf:	add    BYTE PTR [rbx+0x61],al
  408cd2:	imul   esi,DWORD PTR [rdx+0x6f],0x63616220
  408cd9:	imul   esp,DWORD PTR [rbp+0x6e],0x64
  408cdd:	and    BYTE PTR [rdi+0x70],ch
  408ce0:	je     0x408d4b
  408ce2:	outs   dx,DWORD PTR ds:[rsi]
  408ce3:	outs   dx,BYTE PTR ds:[rsi]
  408ce4:	jae    0x408d20
  408ce6:	add    BYTE PTR [rbx+0x61],ah
  408ce9:	imul   esi,DWORD PTR [rdx+0x6f],0x65697600
  408cf0:	ja     0x408d57
  408cf2:	jb     0x408d21
  408cf4:	jo     0x408d57
  408cf6:	outs   dx,BYTE PTR ds:[rsi]
  408cf7:	outs   dx,DWORD PTR ds:[esi]
  408cf9:	movsxd esp,DWORD PTR [rcx+0x69]
  408cfc:	jb     0x408d6d
  408cfe:	movsxd eax,DWORD PTR cs:[rax]
  408d01:	jae    0x408d78
  408d03:	jb     0x408d6b
  408d05:	(bad)  
  408d06:	movsxd esp,DWORD PTR [rbp+0x0]
  408d09:	add    BYTE PTR [rax],al
  408d0b:	add    BYTE PTR [rax],al
  408d0d:	add    BYTE PTR [rax],al
  408d0f:	add    BYTE PTR [rax+0x61],dh
  408d12:	outs   dx,BYTE PTR ds:[rsi]
  408d13:	outs   dx,DWORD PTR ds:[esi]
  408d15:	movsxd esp,DWORD PTR [rcx+0x69]
  408d18:	jb     0x408d89
  408d1a:	pop    rdi
  408d1b:	jbe    0x408d86
  408d1d:	gs ja  0x408d7f
  408d20:	jb     0x408d87
  408d22:	outs   dx,BYTE PTR ds:[rsi]
  408d23:	fs gs jb 0x408d27
  408d27:	push   rax
  408d28:	(bad)  
  408d29:	outs   dx,BYTE PTR ds:[rsi]
  408d2a:	outs   dx,DWORD PTR ds:[esi]
  408d2c:	rex.XB (bad) 
  408d2e:	imul   esi,DWORD PTR [rdx+0x6f],0x676e7000
	...
  408d3d:	add    BYTE PTR [rax],al
  408d3f:	add    BYTE PTR [rdi],ah
  408d41:	lea    eax,[rax+0x0]
  408d44:	add    BYTE PTR [rax],al
  408d46:	add    BYTE PTR [rax],al
  408d48:	out    0x8c,eax
  408d4a:	add    BYTE PTR [rax],al
  408d4d:	add    BYTE PTR [rax],al
  408d4f:	add    BYTE PTR [rdx],dh
  408d51:	lea    eax,[rax+0x0]
  408d54:	add    BYTE PTR [rax],al
  408d56:	add    BYTE PTR [rax],al
  408d58:	mov    al,0x42
  408d5a:	add    BYTE PTR [rax],al
  408d5d:	add    BYTE PTR [rax],al
  408d5f:	add    BYTE PTR [rax+0x42],dh
  408d62:	add    BYTE PTR [rax],al
  408d65:	add    BYTE PTR [rax],al
  408d67:	add    BYTE PTR [rax+0x42],al
  408d6a:	add    BYTE PTR [rax],al
  408d6d:	add    BYTE PTR [rax],al
  408d6f:	add    al,ah
  408d71:	rex.B
  408d72:	add    BYTE PTR [rax],al
  408d75:	add    BYTE PTR [rax],al
  408d77:	add    BYTE PTR [rax+0x4041],ah
  408d7d:	add    BYTE PTR [rax],al
  408d7f:	add    BYTE PTR [rax+0x40],dh
  408d82:	add    BYTE PTR [rax],al
  408d85:	add    BYTE PTR [rax],al
  408d87:	add    BYTE PTR [rax],dl
  408d89:	(bad)  
  408d8a:	add    BYTE PTR [rax],al
  408d8d:	add    BYTE PTR [rax],al
  408d8f:	add    BYTE PTR [rax],al
  408d91:	add    BYTE PTR ss:[rax],al
  408d95:	add    BYTE PTR [rax],al
  408d97:	add    BYTE PTR [rax],dh
  408d99:	add    BYTE PTR ss:[rax],al
  408d9d:	add    BYTE PTR [rax],al
  408d9f:	add    BYTE PTR [rax+0x36],dl
  408da2:	add    BYTE PTR [rax],al
	...
  408db5:	add    BYTE PTR [rax],al
  408db7:	add    BYTE PTR [rax+0x36],dh
  408dba:	add    BYTE PTR [rax],al
	...
  408dc5:	add    BYTE PTR [rax+0x3f],dl
  408dc8:	add    BYTE PTR [rax],al
  408dca:	add    BYTE PTR [rax],al
  408dcc:	add    BYTE PTR [rax],al
  408dce:	loopne 0x408e0f
  408dd0:	add    BYTE PTR [rax],al
  408dd2:	add    BYTE PTR [rax],al
  408dd4:	add    BYTE PTR [rax],al
  408dd6:	lock (bad) 
  408dd8:	add    BYTE PTR [rax],al
  408dda:	add    BYTE PTR [rax],al
  408ddc:	add    BYTE PTR [rax],al
  408dde:	lock mov edi,0x9999999a
  408de4:	cdq    
  408de5:	cdq    
  408de6:	leave  
  408de7:	mov    edi,0x9999999a
  408dec:	cdq    
  408ded:	cdq    
  408dee:	leave  
  408def:	(bad)  
  408df0:	xor    esi,DWORD PTR [rbx]
  408df2:	xor    esi,DWORD PTR [rbx]
  408df4:	xor    esi,DWORD PTR [rbx]
  408df6:	repz mov edi,0x33333333
  408dfc:	xor    esi,DWORD PTR [rbx]
  408dfe:	ret    
  408dff:	(bad)  
  408e00:	data16 data16 data16 data16 data16 data16 out 0x3f,al
  408e08:	data16 data16 data16 data16 data16 data16 out 0xbf,al
  408e10:	(bad)  
  408e11:	cdq    
  408e12:	cdq    
  408e13:	cdq    
  408e14:	cdq    
  408e15:	cdq    
  408e16:	fnstcw WORD PTR [rdi-0x66666666]
  408e1c:	cdq    
  408e1d:	cdq    
  408e1e:	jmp    0xffffffffcd0d5b62
  408e23:	int3   
  408e24:	int3   
  408e25:	int3   
  408e26:	in     al,dx
  408e27:	(bad)  
  408e28:	(bad)  
  408e29:	cdq    
  408e2a:	cdq    
  408e2b:	cdq    
  408e2c:	cdq    
  408e2d:	cdq    
  408e2e:	fnstcw WORD PTR [rdi]
  408e30:	(bad)  
  408e31:	cdq    
  408e32:	cdq    
  408e33:	cdq    
  408e34:	cdq    
  408e35:	cdq    
  408e36:	jmp    0x408efa
  408e3b:	add    BYTE PTR [rax],al
  408e3d:	add    al,ah
  408e3f:	mov    edi,0x0
  408e44:	add    BYTE PTR [rax],al
  408e46:	add    BYTE PTR [rax+0x0],al
  408e4c:	add    BYTE PTR [rax],al
  408e4e:	add    BYTE PTR [rax],al
  408e50:	xor    esi,DWORD PTR [rbx]
  408e52:	xor    esi,DWORD PTR [rbx]
  408e54:	xor    esi,DWORD PTR [rbx]
  408e56:	sar    DWORD PTR [rdi],cl
  408e58:	add    BYTE PTR [rax],al
  408e5a:	add    BYTE PTR [rax],al
  408e5c:	add    BYTE PTR [rax],al
  408e5e:	clc    
  408e5f:	(bad)  
  408e60:	(bad)  
  408e61:	cdq    
  408e62:	cdq    
  408e63:	cdq    
  408e64:	cdq    
  408e65:	cdq    
  408e66:	mov    ecx,0x3f
  408e6b:	add    al,ah
  408e6d:	(bad)  
  408e6e:	out    dx,eax
  408e6f:	add    BYTE PTR [rax],al
	...
  408e7e:	add    BYTE PTR [rax],al
  408e80:	add    dh,al
  408e82:	add    BYTE PTR [rax],al
  408e85:	add    BYTE PTR [rax],al
  408e87:	add    BYTE PTR [rax],al
  408e89:	rol    DWORD PTR [rax+0x0],0x0
  408e8d:	add    BYTE PTR [rax],al
  408e8f:	add    BYTE PTR [rax],dh
  408e91:	rex.WXB
  408e92:	add    BYTE PTR [rax],al
	...
  408e9d:	add    BYTE PTR [rax],al
  408e9f:	add    BYTE PTR [rcx+0x72],al
  408ea2:	addr32 jne 0x408f12
  408ea5:	outs   dx,BYTE PTR gs:[rsi]
  408ea7:	je     0x408ec9
  408ea9:	outs   dx,DWORD PTR fs:[rsi]
  408eab:	ins    DWORD PTR es:[rdi],dx
  408eac:	(bad)  
  408ead:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  408eb4:	jb     0x408ed6
  408eb6:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  408eba:	rex.B
  408ebb:	rex.WB
  408ebc:	rex.WRX sub QWORD PTR [rax],r8
  408ebf:	rex.B jb 0x408f29
  408ec2:	jne    0x408f31
  408ec4:	outs   dx,BYTE PTR gs:[rsi]
  408ec6:	je     0x408ee8
  408ec8:	jae    0x408f33
  408eca:	outs   dx,BYTE PTR ds:[rsi]
  408ecb:	addr32 jne 0x408f3a
  408ece:	(bad)  
  408ecf:	jb     0x408f3a
  408ed1:	je     0x408f4c
  408ed3:	and    BYTE PTR [rax],ch
  408ed5:	push   rbx
  408ed6:	rex.WB
  408ed7:	rex.RXB
  408ed8:	rex.WRX sub QWORD PTR [rax],r8
  408edb:	add    BYTE PTR [rax],al
  408edd:	add    BYTE PTR [rax],al
  408edf:	add    BYTE PTR [rdi+0x76],cl
  408ee2:	gs jb  0x408f4b
  408ee5:	ins    BYTE PTR es:[rdi],dx
  408ee6:	outs   dx,DWORD PTR ds:[rsi]
  408ee7:	ja     0x408f09
  408ee9:	jb     0x408f4c
  408eeb:	outs   dx,BYTE PTR ds:[rsi]
  408eec:	and    BYTE PTR gs:[ebp+0x72],ah
  408ef1:	jb     0x408f62
  408ef3:	jb     0x408f15
  408ef5:	sub    BYTE PTR [rdi+0x56],cl
  408ef8:	rex.RB push r10
  408efa:	rex.RX
  408efb:	rex.WR
  408efc:	rex.WRXB push r15
  408efe:	sub    DWORD PTR [rax],eax
  408f00:	push   rax
  408f01:	(bad)  
  408f02:	jb     0x408f78
  408f04:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  408f0b:	jae    0x408f2d
  408f0d:	outs   dx,DWORD PTR ds:[rsi]
  408f0e:	data16 and BYTE PTR [rbx+0x69],dh
  408f12:	outs   dx,BYTE PTR ds:[esi]
  408f14:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  408f1b:	and    BYTE PTR gs:[rax],ch
  408f1e:	push   rax
  408f1f:	rex.WR
  408f20:	rex.WRXB push r11
  408f22:	push   rbx
  408f23:	sub    DWORD PTR [rax],eax
  408f25:	add    BYTE PTR [rax],al
  408f27:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  408f2b:	(bad)  
  408f2c:	ins    BYTE PTR es:[rdi],dx
  408f2d:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  408f31:	jae    0x408f53
  408f33:	outs   dx,DWORD PTR ds:[rsi]
  408f34:	data16 and BYTE PTR [rbx+0x69],dh
  408f38:	outs   dx,BYTE PTR ds:[esi]
  408f3a:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  408f41:	and    BYTE PTR gs:[rax],ch
  408f44:	push   rsp
  408f45:	rex.WR
  408f46:	rex.WRXB push r11
  408f48:	push   rbx
  408f49:	sub    DWORD PTR [rax],eax
  408f4b:	add    BYTE PTR [rax],al
  408f4d:	add    BYTE PTR [rax],al
  408f4f:	add    BYTE PTR [rax+rbp*2+0x65],dl
  408f53:	and    BYTE PTR [rdx+0x65],dh
  408f56:	jae    0x408fcd
  408f58:	ins    BYTE PTR es:[rdi],dx
  408f59:	je     0x408f7b
  408f5b:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  408f62:	jae    0x408fd1
  408f64:	(bad)  
  408f65:	ins    BYTE PTR es:[rdi],dx
  408f66:	ins    BYTE PTR es:[rdi],dx
  408f67:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  408f6b:	(bad)  
  408f6c:	and    BYTE PTR gs:[rdx+0x65],dh
  408f70:	jo     0x408fe4
  408f72:	gs jae 0x408fda
  408f75:	outs   dx,BYTE PTR ds:[rsi]
  408f76:	je     0x408fdd
  408f78:	and    BYTE PTR fs:[rax],ch
  408f7b:	push   rbp
  408f7c:	rex.WRX
  408f7d:	rex.R
  408f7e:	rex.RB push r10
  408f80:	rex.RX
  408f81:	rex.WR
  408f82:	rex.WRXB push r15
  408f84:	sub    DWORD PTR [rax],eax
  408f86:	push   rbp
  408f87:	outs   dx,BYTE PTR ds:[rsi]
  408f88:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  408f8c:	outs   dx,BYTE PTR ds:[rsi]
  408f8d:	and    BYTE PTR [rbp+0x72],ah
  408f90:	jb     0x409001
  408f92:	jb     0x408f94
  408f94:	add    BYTE PTR [rax],al
  408f96:	add    BYTE PTR [rax],al
  408f98:	pop    rdi
  408f99:	ins    DWORD PTR es:[rdi],dx
  408f9a:	(bad)  
  408f9b:	je     0x409005
  408f9d:	gs jb  0x409012
  408fa0:	sub    BYTE PTR [rcx],ch
  408fa2:	cmp    ah,BYTE PTR [rax]
  408fa4:	and    eax,0x6e692073
  408fa9:	and    BYTE PTR [rip+0x67252873],ah        # 0x6765b822
  408faf:	sub    al,0x20
  408fb1:	and    eax,0x20202967
  408fb6:	sub    BYTE PTR [rdx+0x65],dh
  408fb9:	je     0x409031
  408fbb:	(bad)  
  408fbc:	ins    BYTE PTR es:[rdi],dx
  408fbd:	cmp    eax,0xa296725
  408fc2:	add    BYTE PTR [rax],al
  408fc4:	cmp    al,0xbd
  408fc6:	(bad)  
  408fc7:	(bad)  
  408fc8:	jge    0x408f86
  408fca:	(bad)  
  408fcb:	(bad)  
  408fcc:	in     al,dx
  408fcd:	mov    esp,0xbcfcffff
  408fd2:	(bad)  
  408fd3:	dec    DWORD PTR [rdi*4-0x42e30001]
  408fda:	(bad)  
  408fdb:	jmp    FWORD PTR [rdi*4+0x694dffff]
  408fe2:	outs   dx,BYTE PTR ds:[rsi]
  408fe3:	addr32 ja 0x409013
  408fe6:	ja     0x40901e
  408fe8:	xor    al,0x20
  408fea:	jb     0x409061
  408fec:	outs   dx,BYTE PTR ds:[rsi]
  408fed:	je     0x409058
  408fef:	ins    DWORD PTR es:[rdi],dx
  408ff0:	and    BYTE PTR gs:[rsi+0x61],ah
  408ff4:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  408ffc:	add    BYTE PTR [rax],al
  408ffe:	add    BYTE PTR [rax],al
  409000:	rex.B
  409001:	fs fs jb 0x40906a
  409005:	jae    0x40907a
  409007:	and    BYTE PTR [rip+0x61682070],ah        # 0x61a8b07d
  40900d:	jae    0x40902f
  40900f:	outs   dx,BYTE PTR ds:[rsi]
  409010:	outs   dx,DWORD PTR ds:[rsi]
  409011:	and    BYTE PTR [rcx+0x6d],ch
  409014:	(bad)  
  409015:	addr32 gs sub eax,0x74636573
  40901c:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  409023:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40902a:	jne    0x409091
  40902c:	jb     0x4090a7
  40902e:	and    BYTE PTR [rsi+0x61],ah
  409031:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  409039:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a2b0a3
  40903f:	je     0x4090a6
  409041:	jae    0x409063
  409043:	(bad)  
  409044:	je     0x409066
  409046:	(bad)  
  409047:	fs fs jb 0x4090b0
  40904b:	jae    0x4090c0
  40904d:	and    BYTE PTR [rip+0x70],ah        # 0x4090c3
  409053:	add    BYTE PTR [rax],al
  409055:	add    BYTE PTR [rax],al
  409057:	add    BYTE PTR [rax],ah
  409059:	and    BYTE PTR [rsi+0x69],dl
  40905c:	jb     0x4090d2
  40905e:	jne    0x4090c1
  409060:	ins    BYTE PTR es:[rdi],dx
  409061:	push   rax
  409062:	jb     0x4090d3
  409064:	je     0x4090cb
  409066:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  40906a:	(bad)  
  40906b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  409073:	push   0x646f6320
  409078:	and    BYTE PTR gs:[rax],dh
  40907b:	js     0x4090a2
  40907d:	js     0x40907f
  40907f:	add    BYTE PTR [rax],ah
  409081:	and    BYTE PTR [rbp+0x6e],dl
  409084:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  409088:	outs   dx,BYTE PTR ds:[rsi]
  409089:	and    BYTE PTR [rax+0x73],dh
  40908c:	gs jne 0x4090f3
  40908f:	outs   dx,DWORD PTR ds:[rsi]
  409090:	and    BYTE PTR [rdx+0x65],dh
  409093:	ins    BYTE PTR es:[rdi],dx
  409094:	outs   dx,DWORD PTR ds:[rsi]
  409095:	movsxd esp,DWORD PTR [rcx+0x74]
  409098:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  40909f:	je     0x409110
  4090a1:	movsxd ebp,DWORD PTR [rdi+0x6c]
  4090a4:	and    BYTE PTR [rsi+0x65],dh
  4090a7:	jb     0x40911c
  4090a9:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  4090b0:	or     al,BYTE PTR [rax]
  4090b2:	add    BYTE PTR [rax],al
  4090b4:	add    BYTE PTR [rax],al
  4090b6:	add    BYTE PTR [rax],al
  4090b8:	and    BYTE PTR [rax],ah
  4090ba:	push   rbp
  4090bb:	outs   dx,BYTE PTR ds:[rsi]
  4090bc:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4090c0:	outs   dx,BYTE PTR ds:[rsi]
  4090c1:	and    BYTE PTR [rax+0x73],dh
  4090c4:	gs jne 0x40912b
  4090c7:	outs   dx,DWORD PTR ds:[rsi]
  4090c8:	and    BYTE PTR [rdx+0x65],dh
  4090cb:	ins    BYTE PTR es:[rdi],dx
  4090cc:	outs   dx,DWORD PTR ds:[rsi]
  4090cd:	movsxd esp,DWORD PTR [rcx+0x74]
  4090d0:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  4090d7:	and    BYTE PTR [rbx+0x69],dh
  4090da:	jp     0x409141
  4090dc:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4abf46
	...
  4090ee:	add    BYTE PTR [rax],al
  4090f0:	cs jo  0x409157
  4090f3:	(bad)  
  4090f4:	je     0x409157
	...
  4090fe:	add    BYTE PTR [rax],al
  409100:	shl    BYTE PTR [rax+0x40],1
	...
  40910f:	add    al,ah
  409111:	jo     0x409153
	...
  40911f:	add    BYTE PTR [rax+0x4063],ah
	...
  40912d:	add    BYTE PTR [rax],al
  40912f:	add    BYTE PTR [rax+0x4097],dh
	...
  40913d:	add    BYTE PTR [rax],al
  40913f:	add    BYTE PTR [rax+0x4097],dh
	...
  40914d:	add    BYTE PTR [rax],al
  40914f:	add    BYTE PTR [rax+0x408e],dl
	...
  409161:	add    BYTE PTR [rax+0x0],al
	...
  409170:	or     ah,bl
  409172:	add    BYTE PTR [rax],al
	...
  40917d:	add    BYTE PTR [rax],al
  40917f:	add    BYTE PTR [rax],dh
  409181:	fadd   QWORD PTR [rax+0x0]
	...
  409190:	push   rax
  409191:	fadd   QWORD PTR [rax+0x0]
	...
  4091a0:	push   0x40dc
	...
  4091ad:	add    BYTE PTR [rax],al
  4091af:	add    BYTE PTR [rax-0x39],al
  4091b2:	add    BYTE PTR [rax],al
	...
  4091bd:	add    BYTE PTR [rax],al
  4091bf:	add    BYTE PTR [rax+0x40ca],ch
	...
  4091cd:	add    BYTE PTR [rax],al
  4091cf:	add    BYTE PTR [rax+0x40ca],ah
	...
  4091dd:	add    BYTE PTR [rax],al
  4091df:	add    BYTE PTR [rax+0x40ca],dl
	...
  4091ed:	add    BYTE PTR [rax],al
  4091ef:	add    BYTE PTR [rax+0x40ca],bl
	...
  409201:	add    BYTE PTR [rcx+0x0],al
	...
  409210:	adc    BYTE PTR [rax],al
  409212:	add    BYTE PTR [r8],al
	...
  40921d:	add    BYTE PTR [rax],al
  40921f:	add    BYTE PTR [rax],bl
  409221:	add    BYTE PTR [rcx+0x0],al
	...
  409230:	xor    BYTE PTR [rax],al
  409232:	add    BYTE PTR [r8],al
	...
  40923d:	add    BYTE PTR [rax],al
  40923f:	add    al,ah
  409241:	rol    BYTE PTR [rax+0x0],0x0
	...
  40924d:	add    BYTE PTR [rax],al
  40924f:	add    BYTE PTR [rax],dl
  409251:	mov    DWORD PTR [rax+0x0],0x0
	...
  409260:	rcl    BYTE PTR [rax+rax*2+0x0],0x0
	...
  40926d:	add    BYTE PTR [rax],al
  40926f:	add    BYTE PTR [rax],dl
  409271:	rex.WR
  409272:	add    BYTE PTR [rax],al
	...
  40927d:	add    BYTE PTR [rax],al
  40927f:	add    al,al
  409281:	mov    BYTE PTR [rax+0x0],0x0
	...
  40928d:	add    BYTE PTR [rax],al
  40928f:	add    al,ah
  409291:	rex.RX
  409292:	add    BYTE PTR [rax],al
	...
  40929d:	add    BYTE PTR [rax],al
  40929f:	add    al,bl
  4092a1:	rex.RX
  4092a2:	add    BYTE PTR [rax],al
	...
  4092ad:	add    BYTE PTR [rax],al
  4092af:	add    BYTE PTR [rax+0x46],cl
  4092b2:	add    BYTE PTR [rax],al
	...
  4092bd:	add    BYTE PTR [rax],al
  4092bf:	add    al,dh
  4092c1:	mov    BYTE PTR [rax+0x0],0x0
	...
  4092cd:	add    BYTE PTR [rax],al
  4092cf:	add    al,dh
  4092d1:	rol    BYTE PTR [rax+0x0],0x0
	...
  4092dd:	add    BYTE PTR [rax],al
  4092df:	add    al,bl
  4092e1:	mov    BYTE PTR [rax+0x0],0x0
	...
  4092ed:	add    BYTE PTR [rax],al
  4092ef:	add    ah,dl
  4092f1:	mov    BYTE PTR [rax+0x0],0x0
	...
  4092fd:	add    BYTE PTR [rax],al
  4092ff:	add    al,dl
  409301:	mov    BYTE PTR [rax+0x0],0x0
	...
  40930d:	add    BYTE PTR [rax],al
  40930f:	add    BYTE PTR [rax],dl
  409311:	jo     0x409353
	...
  40931f:	add    BYTE PTR [rdx],dl
  409321:	jo     0x409363
	...
  40932f:	add    BYTE PTR [rax],dh
  409331:	rol    BYTE PTR [rax+0x0],0x0
	...
  40933d:	add    BYTE PTR [rax],al
  40933f:	add    BYTE PTR [rax+rsi*2+0x40],cl
	...
  40934f:	add    BYTE PTR [rax+0x70],cl
  409352:	add    BYTE PTR [rax],al
	...
  40935d:	add    BYTE PTR [rax],al
  40935f:	add    BYTE PTR [rax],bl
  409361:	jo     0x4093a3
	...
  40936f:	add    BYTE PTR [rax+rax*8],dh
  409372:	add    BYTE PTR [rax],al
	...
  40937d:	add    BYTE PTR [rax],al
  40937f:	add    BYTE PTR [rax+rax*8+0x40],dl
	...
  40938f:	add    BYTE PTR [rax+0x40c0],dl
	...
  40939d:	add    BYTE PTR [rax],al
  40939f:	add    BYTE PTR [rax],ah
  4093a1:	jo     0x4093e3
	...
  4093af:	add    BYTE PTR [rax-0x40],cl
  4093b2:	add    BYTE PTR [rax],al
	...
  4093bd:	add    BYTE PTR [rax],al
  4093bf:	add    BYTE PTR [rax+0x70],dl
  4093c2:	add    BYTE PTR [rax],al
	...
  4093cd:	add    BYTE PTR [rax],al
  4093cf:	add    BYTE PTR [rdi+0x43],al
  4093d2:	rex.XB cmp spl,BYTE PTR [r8]
  4093d5:	sub    BYTE PTR [rdi+0x4e],al
  4093d8:	push   rbp
  4093d9:	sub    DWORD PTR [rax],esp
  4093db:	xor    al,0x2e
  4093dd:	cmp    DWORD PTR [rsi],ebp
  4093df:	xor    al,0x0
	...
  4093ed:	add    BYTE PTR [rax],al
  4093ef:	add    BYTE PTR [rdi+0x43],al
  4093f2:	rex.XB cmp spl,BYTE PTR [r8]
  4093f5:	sub    BYTE PTR [rdi+0x4e],al
  4093f8:	push   rbp
  4093f9:	sub    DWORD PTR [rax],esp
  4093fb:	xor    al,0x2e
  4093fd:	cmp    DWORD PTR [rsi],ebp
  4093ff:	xor    al,0x0
	...
  40940d:	add    BYTE PTR [rax],al
  40940f:	add    BYTE PTR [rdi+0x43],al
  409412:	rex.XB cmp spl,BYTE PTR [r8]
  409415:	sub    BYTE PTR [rdi+0x4e],al
  409418:	push   rbp
  409419:	sub    DWORD PTR [rax],esp
  40941b:	xor    al,0x2e
  40941d:	cmp    DWORD PTR [rsi],ebp
  40941f:	xor    al,0x0
	...
  40942d:	add    BYTE PTR [rax],al
  40942f:	add    BYTE PTR [rdi+0x43],al
  409432:	rex.XB cmp spl,BYTE PTR [r8]
  409435:	sub    BYTE PTR [rdi+0x4e],al
  409438:	push   rbp
  409439:	sub    DWORD PTR [rax],esp
  40943b:	xor    al,0x2e
  40943d:	cmp    DWORD PTR [rsi],ebp
  40943f:	xor    al,0x0
	...
  40944d:	add    BYTE PTR [rax],al
  40944f:	add    BYTE PTR [rdi+0x43],al
  409452:	rex.XB cmp spl,BYTE PTR [r8]
  409455:	sub    BYTE PTR [rdi+0x4e],al
  409458:	push   rbp
  409459:	sub    DWORD PTR [rax],esp
  40945b:	xor    al,0x2e
  40945d:	cmp    DWORD PTR [rsi],ebp
  40945f:	xor    al,0x0
	...
  40946d:	add    BYTE PTR [rax],al
  40946f:	add    BYTE PTR [rdi+0x43],al
  409472:	rex.XB cmp spl,BYTE PTR [r8]
  409475:	sub    BYTE PTR [rdi+0x4e],al
  409478:	push   rbp
  409479:	sub    DWORD PTR [rax],esp
  40947b:	xor    al,0x2e
  40947d:	cmp    DWORD PTR [rsi],ebp
  40947f:	xor    al,0x0
	...
  40948d:	add    BYTE PTR [rax],al
  40948f:	add    BYTE PTR [rdi+0x43],al
  409492:	rex.XB cmp spl,BYTE PTR [r8]
  409495:	sub    BYTE PTR [rdi+0x4e],al
  409498:	push   rbp
  409499:	sub    DWORD PTR [rax],esp
  40949b:	xor    al,0x2e
  40949d:	cmp    DWORD PTR [rsi],ebp
  40949f:	xor    al,0x0
	...
  4094ad:	add    BYTE PTR [rax],al
  4094af:	add    BYTE PTR [rdi+0x43],al
  4094b2:	rex.XB cmp spl,BYTE PTR [r8]
  4094b5:	sub    BYTE PTR [rdi+0x4e],al
  4094b8:	push   rbp
  4094b9:	sub    DWORD PTR [rax],esp
  4094bb:	xor    al,0x2e
  4094bd:	cmp    DWORD PTR [rsi],ebp
  4094bf:	xor    al,0x0
	...
  4094cd:	add    BYTE PTR [rax],al
  4094cf:	add    BYTE PTR [rdi+0x43],al
  4094d2:	rex.XB cmp spl,BYTE PTR [r8]
  4094d5:	sub    BYTE PTR [rdi+0x4e],al
  4094d8:	push   rbp
  4094d9:	sub    DWORD PTR [rax],esp
  4094db:	xor    al,0x2e
  4094dd:	cmp    DWORD PTR [rsi],ebp
  4094df:	xor    al,0x0
	...
  4094ed:	add    BYTE PTR [rax],al
  4094ef:	add    BYTE PTR [rdi+0x43],al
  4094f2:	rex.XB cmp spl,BYTE PTR [r8]
  4094f5:	sub    BYTE PTR [rdi+0x4e],al
  4094f8:	push   rbp
  4094f9:	sub    DWORD PTR [rax],esp
  4094fb:	xor    al,0x2e
  4094fd:	cmp    DWORD PTR [rsi],ebp
  4094ff:	xor    al,0x0
	...
  40950d:	add    BYTE PTR [rax],al
  40950f:	add    BYTE PTR [rdi+0x43],al
  409512:	rex.XB cmp spl,BYTE PTR [r8]
  409515:	sub    BYTE PTR [rdi+0x4e],al
  409518:	push   rbp
  409519:	sub    DWORD PTR [rax],esp
  40951b:	xor    al,0x2e
  40951d:	cmp    DWORD PTR [rsi],ebp
  40951f:	xor    al,0x0
	...
  40952d:	add    BYTE PTR [rax],al
  40952f:	add    BYTE PTR [rdi+0x43],al
  409532:	rex.XB cmp spl,BYTE PTR [r8]
  409535:	sub    BYTE PTR [rdi+0x4e],al
  409538:	push   rbp
  409539:	sub    DWORD PTR [rax],esp
  40953b:	xor    al,0x2e
  40953d:	cmp    DWORD PTR [rsi],ebp
  40953f:	xor    al,0x0
	...
  40954d:	add    BYTE PTR [rax],al
  40954f:	add    BYTE PTR [rdi+0x43],al
  409552:	rex.XB cmp spl,BYTE PTR [r8]
  409555:	sub    BYTE PTR [rdi+0x4e],al
  409558:	push   rbp
  409559:	sub    DWORD PTR [rax],esp
  40955b:	xor    al,0x2e
  40955d:	cmp    DWORD PTR [rsi],ebp
  40955f:	xor    al,0x0
	...
  40956d:	add    BYTE PTR [rax],al
  40956f:	add    BYTE PTR [rdi+0x43],al
  409572:	rex.XB cmp spl,BYTE PTR [r8]
  409575:	sub    BYTE PTR [rdi+0x4e],al
  409578:	push   rbp
  409579:	sub    DWORD PTR [rax],esp
  40957b:	xor    al,0x2e
  40957d:	cmp    DWORD PTR [rsi],ebp
  40957f:	xor    al,0x0
	...
  40958d:	add    BYTE PTR [rax],al
  40958f:	add    BYTE PTR [rdi+0x43],al
  409592:	rex.XB cmp spl,BYTE PTR [r8]
  409595:	sub    BYTE PTR [rdi+0x4e],al
  409598:	push   rbp
  409599:	sub    DWORD PTR [rax],esp
  40959b:	xor    al,0x2e
  40959d:	cmp    DWORD PTR [rsi],ebp
  40959f:	xor    al,0x0
	...
  4095ad:	add    BYTE PTR [rax],al
  4095af:	add    BYTE PTR [rdi+0x43],al
  4095b2:	rex.XB cmp spl,BYTE PTR [r8]
  4095b5:	sub    BYTE PTR [rdi+0x4e],al
  4095b8:	push   rbp
  4095b9:	sub    DWORD PTR [rax],esp
  4095bb:	xor    al,0x2e
  4095bd:	cmp    DWORD PTR [rsi],ebp
  4095bf:	xor    al,0x0
	...
  4095cd:	add    BYTE PTR [rax],al
  4095cf:	add    BYTE PTR [rdi+0x43],al
  4095d2:	rex.XB cmp spl,BYTE PTR [r8]
  4095d5:	sub    BYTE PTR [rdi+0x4e],al
  4095d8:	push   rbp
  4095d9:	sub    DWORD PTR [rax],esp
  4095db:	xor    al,0x2e
  4095dd:	cmp    DWORD PTR [rsi],ebp
  4095df:	xor    al,0x0
	...
  4095ed:	add    BYTE PTR [rax],al
  4095ef:	add    BYTE PTR [rdi+0x43],al
  4095f2:	rex.XB cmp spl,BYTE PTR [r8]
  4095f5:	sub    BYTE PTR [rdi+0x4e],al
  4095f8:	push   rbp
  4095f9:	sub    DWORD PTR [rax],esp
  4095fb:	xor    al,0x2e
  4095fd:	cmp    DWORD PTR [rsi],ebp
  4095ff:	xor    al,0x0
	...
  40960d:	add    BYTE PTR [rax],al
  40960f:	add    BYTE PTR [rdi+0x43],al
  409612:	rex.XB cmp spl,BYTE PTR [r8]
  409615:	sub    BYTE PTR [rdi+0x4e],al
  409618:	push   rbp
  409619:	sub    DWORD PTR [rax],esp
  40961b:	xor    al,0x2e
  40961d:	cmp    DWORD PTR [rsi],ebp
  40961f:	xor    al,0x0
	...
  40962d:	add    BYTE PTR [rax],al
  40962f:	add    BYTE PTR [rdi+0x43],al
  409632:	rex.XB cmp spl,BYTE PTR [r8]
  409635:	sub    BYTE PTR [rdi+0x4e],al
  409638:	push   rbp
  409639:	sub    DWORD PTR [rax],esp
  40963b:	xor    al,0x2e
  40963d:	cmp    DWORD PTR [rsi],ebp
  40963f:	xor    al,0x0
	...
  40964d:	add    BYTE PTR [rax],al
  40964f:	add    BYTE PTR [rdi+0x43],al
  409652:	rex.XB cmp spl,BYTE PTR [r8]
  409655:	sub    BYTE PTR [rdi+0x4e],al
  409658:	push   rbp
  409659:	sub    DWORD PTR [rax],esp
  40965b:	xor    al,0x2e
  40965d:	cmp    DWORD PTR [rsi],ebp
  40965f:	xor    al,0x0
	...
  40966d:	add    BYTE PTR [rax],al
  40966f:	add    BYTE PTR [rdi+0x43],al
  409672:	rex.XB cmp spl,BYTE PTR [r8]
  409675:	sub    BYTE PTR [rdi+0x4e],al
  409678:	push   rbp
  409679:	sub    DWORD PTR [rax],esp
  40967b:	xor    al,0x2e
  40967d:	cmp    DWORD PTR [rsi],ebp
  40967f:	xor    al,0x0
	...
  40968d:	add    BYTE PTR [rax],al
  40968f:	add    BYTE PTR [rdi+0x43],al
  409692:	rex.XB cmp spl,BYTE PTR [r8]
  409695:	sub    BYTE PTR [rdi+0x4e],al
  409698:	push   rbp
  409699:	sub    DWORD PTR [rax],esp
  40969b:	xor    al,0x2e
  40969d:	cmp    DWORD PTR [rsi],ebp
  40969f:	xor    al,0x0
	...
  4096ad:	add    BYTE PTR [rax],al
  4096af:	add    BYTE PTR [rdi+0x43],al
  4096b2:	rex.XB cmp spl,BYTE PTR [r8]
  4096b5:	sub    BYTE PTR [rdi+0x4e],al
  4096b8:	push   rbp
  4096b9:	sub    DWORD PTR [rax],esp
  4096bb:	xor    al,0x2e
  4096bd:	cmp    DWORD PTR [rsi],ebp
  4096bf:	xor    al,0x0
	...
  4096cd:	add    BYTE PTR [rax],al
  4096cf:	add    BYTE PTR [rdi+0x43],al
  4096d2:	rex.XB cmp spl,BYTE PTR [r8]
  4096d5:	sub    BYTE PTR [rdi+0x4e],al
  4096d8:	push   rbp
  4096d9:	sub    DWORD PTR [rax],esp
  4096db:	xor    al,0x2e
  4096dd:	cmp    DWORD PTR [rsi],ebp
  4096df:	xor    al,0x0
	...
  4096ed:	add    BYTE PTR [rax],al
  4096ef:	add    BYTE PTR [rdi+0x43],al
  4096f2:	rex.XB cmp spl,BYTE PTR [r8]
  4096f5:	sub    BYTE PTR [rdi+0x4e],al
  4096f8:	push   rbp
  4096f9:	sub    DWORD PTR [rax],esp
  4096fb:	xor    al,0x2e
  4096fd:	cmp    DWORD PTR [rsi],ebp
  4096ff:	xor    al,0x0
	...
  40970d:	add    BYTE PTR [rax],al
  40970f:	add    BYTE PTR [rdi+0x43],al
  409712:	rex.XB cmp spl,BYTE PTR [r8]
  409715:	sub    BYTE PTR [rdi+0x4e],al
  409718:	push   rbp
  409719:	sub    DWORD PTR [rax],esp
  40971b:	xor    al,0x2e
  40971d:	cmp    DWORD PTR [rsi],ebp
  40971f:	xor    al,0x0
	...
  40972d:	add    BYTE PTR [rax],al
  40972f:	add    BYTE PTR [rdi+0x43],al
  409732:	rex.XB cmp spl,BYTE PTR [r8]
  409735:	sub    BYTE PTR [rdi+0x4e],al
  409738:	push   rbp
  409739:	sub    DWORD PTR [rax],esp
  40973b:	xor    al,0x2e
  40973d:	cmp    DWORD PTR [rsi],ebp
  40973f:	xor    al,0x0
	...
  40974d:	add    BYTE PTR [rax],al
  40974f:	add    BYTE PTR [rdi+0x43],al
  409752:	rex.XB cmp spl,BYTE PTR [r8]
  409755:	sub    BYTE PTR [rdi+0x4e],al
  409758:	push   rbp
  409759:	sub    DWORD PTR [rax],esp
  40975b:	xor    al,0x2e
  40975d:	cmp    DWORD PTR [rsi],ebp
  40975f:	xor    al,0x0
	...
  40976d:	add    BYTE PTR [rax],al
  40976f:	add    BYTE PTR [rdi+0x43],al
  409772:	rex.XB cmp spl,BYTE PTR [r8]
  409775:	sub    BYTE PTR [rdi+0x4e],al
  409778:	push   rbp
  409779:	sub    DWORD PTR [rax],esp
  40977b:	xor    al,0x2e
  40977d:	cmp    DWORD PTR [rsi],ebp
  40977f:	xor    al,0x0
	...
  40978d:	add    BYTE PTR [rax],al
  40978f:	add    BYTE PTR [rdi+0x43],al
  409792:	rex.XB cmp spl,BYTE PTR [r8]
  409795:	sub    BYTE PTR [rdi+0x4e],al
  409798:	push   rbp
  409799:	sub    DWORD PTR [rax],esp
  40979b:	xor    al,0x2e
  40979d:	cmp    DWORD PTR [rsi],ebp
  40979f:	xor    al,0x0
	...

Disassembly of section .pdata:

000000000040a000 <.pdata>:
  40a000:	add    BYTE PTR [rax],dl
  40a002:	add    BYTE PTR [rax],al
  40a004:	add    DWORD PTR [rax],edx
  40a006:	add    BYTE PTR [rax],al
  40a008:	add    BYTE PTR [rax+0x10100000],dh
  40a00e:	add    BYTE PTR [rax],al
  40a010:	push   rcx
  40a011:	adc    DWORD PTR [rax],eax
  40a013:	add    BYTE PTR [rax+rsi*4],al
  40a016:	add    BYTE PTR [rax],al
  40a018:	(bad)  
  40a019:	adc    DWORD PTR [rax],eax
  40a01b:	add    BYTE PTR [rsi+0xc000011],ch
  40a021:	mov    al,0x0
  40a023:	add    BYTE PTR [rax-0x31ffffef],dh
  40a029:	adc    al,0x0
  40a02b:	add    BYTE PTR [rax+rsi*4],dl
  40a02e:	add    BYTE PTR [rax],al
  40a030:	rcl    BYTE PTR [rax+rax*1],1
  40a033:	add    dl,dh
  40a035:	adc    al,0x0
  40a037:	add    BYTE PTR [rax],ch
  40a039:	mov    al,0x0
  40a03b:	add    BYTE PTR [rax],al
  40a03d:	adc    eax,0x15220000
  40a042:	add    BYTE PTR [rax],al
  40a044:	rex.W mov al,0x0
  40a047:	add    BYTE PTR [rax],dh
  40a049:	adc    eax,0x157f0000
  40a04e:	add    BYTE PTR [rax],al
  40a050:	push   0xffffffff800000b0
  40a055:	adc    eax,0x174d0000
  40a05a:	add    BYTE PTR [rax],al
  40a05c:	js     0x40a00e
  40a05e:	add    BYTE PTR [rax],al
  40a060:	push   rax
  40a061:	(bad)  
  40a062:	add    BYTE PTR [rax],al
  40a064:	(bad)  
  40a065:	sbb    al,BYTE PTR [rax]
  40a067:	add    BYTE PTR [rax+0x400000b0],cl
  40a06d:	sbb    al,BYTE PTR [rax]
  40a06f:	add    BYTE PTR [rsi-0x5bffffe6],cl
  40a075:	mov    al,0x0
  40a077:	add    BYTE PTR [rax+0x1300001a],dl
  40a07d:	sbb    eax,DWORD PTR [rax]
  40a07f:	add    BYTE PTR [rax+rsi*4+0x1b200000],ch
  40a086:	add    BYTE PTR [rax],al
  40a088:	sbb    eax,DWORD PTR gs:[rax]
  40a08b:	add    BYTE PTR [rax+0x700000b0],bh
  40a091:	sbb    eax,DWORD PTR [rax]
  40a093:	add    BYTE PTR [rdi-0x3bffffe5],ah
  40a099:	mov    al,0x0
  40a09b:	add    BYTE PTR [rax-0x18ffffe5],dh
  40a0a1:	sbb    eax,DWORD PTR [rax]
  40a0a3:	add    al,dl
  40a0a5:	mov    al,0x0
  40a0a7:	add    al,dh
  40a0a9:	sbb    eax,DWORD PTR [rax]
  40a0ab:	add    BYTE PTR [rdi],ah
  40a0ad:	sbb    al,0x0
  40a0af:	add    ah,bl
  40a0b1:	mov    al,0x0
  40a0b3:	add    BYTE PTR [rax],dh
  40a0b5:	sbb    al,0x0
  40a0b7:	add    BYTE PTR [rdi+0x1c],ah
  40a0ba:	add    BYTE PTR [rax],al
  40a0bc:	call   0x7040a171
  40a0c1:	sbb    al,0x0
  40a0c3:	add    BYTE PTR [rax+0x1d],al
  40a0c6:	add    BYTE PTR [rax],al
  40a0c8:	hlt    
  40a0c9:	mov    al,0x0
  40a0cb:	add    BYTE PTR [rax+0x1d],al
  40a0ce:	add    BYTE PTR [rax],al
  40a0d0:	clc    
  40a0d1:	sbb    eax,0xb1000000
  40a0d6:	add    BYTE PTR [rax],al
  40a0d8:	add    BYTE PTR [rsi],bl
  40a0da:	add    BYTE PTR [rax],al
  40a0dc:	cmp    al,0x1f
  40a0de:	add    BYTE PTR [rax],al
  40a0e0:	or     al,0xb1
  40a0e2:	add    BYTE PTR [rax],al
  40a0e4:	rex (bad) 
  40a0e6:	add    BYTE PTR [rax],al
  40a0e8:	addr32 (bad) 
  40a0ea:	add    BYTE PTR [rax],al
  40a0ec:	and    al,0xb1
  40a0ee:	add    BYTE PTR [rax],al
  40a0f0:	jo     0x40a111
  40a0f2:	add    BYTE PTR [rax],al
  40a0f4:	(bad)  
  40a0f5:	(bad)  
  40a0f6:	add    BYTE PTR [rax],al
  40a0f8:	sub    al,0xb1
  40a0fa:	add    BYTE PTR [rax],al
  40a0fc:	loopne 0x40a11d
  40a0fe:	add    BYTE PTR [rax],al
  40a100:	nop
  40a101:	and    BYTE PTR [rax],al
  40a103:	add    BYTE PTR [rax],bh
  40a105:	mov    cl,0x0
  40a107:	add    BYTE PTR [rax+0x2b000020],dl
  40a10d:	and    DWORD PTR [rax],eax
  40a10f:	add    BYTE PTR [rcx+rsi*4+0x0],al
  40a113:	add    BYTE PTR [rax],dh
  40a115:	and    DWORD PTR [rax],eax
  40a117:	add    BYTE PTR [rax+0x21],bh
  40a11a:	add    BYTE PTR [rax],al
  40a11c:	push   rax
  40a11d:	mov    cl,0x0
  40a11f:	add    BYTE PTR [rax-0x9ffffdf],al
  40a125:	and    DWORD PTR [rax],eax
  40a127:	add    BYTE PTR [rax-0x4f],bl
  40a12a:	add    BYTE PTR [rax],al
  40a12c:	add    BYTE PTR [rdx],ah
  40a12e:	add    BYTE PTR [rax],al
  40a130:	xchg   ebp,eax
  40a131:	add    BYTE PTR es:[rax],al
  40a134:	fs mov cl,0x0
  40a137:	add    BYTE PTR [rax+0x50000026],ah
  40a13d:	xor    al,BYTE PTR [rax]
  40a13f:	add    BYTE PTR [rax+0x500000b1],al
  40a145:	xor    al,BYTE PTR [rax]
  40a147:	add    BYTE PTR [rdx+rsi*1+0x0],bl
  40a14b:	add    BYTE PTR [rcx+rsi*4+0x32600000],dl
  40a152:	add    BYTE PTR [rax],al
  40a154:	movsxd esi,DWORD PTR [rdx]
  40a156:	add    BYTE PTR [rax],al
  40a158:	mov    al,0xb1
  40a15a:	add    BYTE PTR [rax],al
  40a15c:	jo     0x40a190
  40a15e:	add    BYTE PTR [rax],al
  40a160:	jno    0x40a194
  40a162:	add    BYTE PTR [rax],al
  40a164:	mov    ah,0xb1
  40a166:	add    BYTE PTR [rax],al
  40a168:	xor    BYTE PTR [rdx],0x0
  40a16b:	add    BYTE PTR [rbx-0x47ffffce],bl
  40a171:	mov    cl,0x0
  40a173:	add    BYTE PTR [rax-0x57ffffce],ah
  40a179:	xor    al,BYTE PTR [rax]
  40a17b:	add    BYTE PTR [rcx+rsi*4+0x32b00000],bh
  40a182:	add    BYTE PTR [rax],al
  40a184:	mov    eax,0xc0000032
  40a189:	mov    cl,0x0
  40a18b:	add    al,al
  40a18d:	xor    al,BYTE PTR [rax]
  40a18f:	add    BYTE PTR [rip+0xffffffffc4000033],cl        # 0xffffffffc440a1c8
  40a195:	mov    cl,0x0
  40a197:	add    BYTE PTR [rax],dl
  40a199:	xor    eax,DWORD PTR [rax]
  40a19b:	add    BYTE PTR [rip+0xffffffffd0000033],bl        # 0xffffffffd040a1d4
  40a1a1:	mov    cl,0x0
  40a1a3:	add    BYTE PTR [rax],ah
  40a1a5:	xor    eax,DWORD PTR [rax]
  40a1a7:	add    BYTE PTR [rbx+0x33],al
  40a1aa:	add    BYTE PTR [rax],al
  40a1ac:	(bad)  
  40a1ad:	mov    cl,0x0
  40a1af:	add    BYTE PTR [rax+0x33],dl
  40a1b2:	add    BYTE PTR [rax],al
  40a1b4:	sub    dh,BYTE PTR [rax+rax*1]
  40a1b7:	add    ah,bl
  40a1b9:	mov    cl,0x0
  40a1bb:	add    BYTE PTR [rax],dh
  40a1bd:	xor    al,0x0
  40a1bf:	add    BYTE PTR [rax],bh
  40a1c1:	xor    al,0x0
  40a1c3:	add    ah,ch
  40a1c5:	mov    cl,0x0
  40a1c7:	add    BYTE PTR [rax+0x34],al
  40a1ca:	add    BYTE PTR [rax],al
  40a1cc:	cld    
  40a1cd:	xor    al,0x0
  40a1cf:	add    al,dh
  40a1d1:	mov    cl,0x0
  40a1d3:	add    BYTE PTR [rax],al
  40a1d5:	xor    eax,0x359f0000
  40a1da:	add    BYTE PTR [rax],al
  40a1dc:	clc    
  40a1dd:	mov    cl,0x0
  40a1df:	add    BYTE PTR [rax-0x12ffffcb],ah
  40a1e5:	xor    eax,0xb2000000
  40a1ea:	add    BYTE PTR [rax],al
  40a1ec:	lock xor eax,0x35f10000
  40a1f2:	add    BYTE PTR [rax],al
  40a1f4:	or     BYTE PTR [rdx+0x36000000],dh
  40a1fa:	add    BYTE PTR [rax],al
  40a1fc:	and    esi,DWORD PTR [rsi]
  40a1fe:	add    BYTE PTR [rax],al
  40a200:	or     al,0xb2
  40a202:	add    BYTE PTR [rax],al
  40a204:	xor    BYTE PTR [rsi],dh
  40a206:	add    BYTE PTR [rax],al
  40a208:	rex.R
  40a209:	add    BYTE PTR ss:[rax],al
  40a20c:	adc    BYTE PTR [rdx+0x36500000],dh
  40a212:	add    BYTE PTR [rax],al
  40a214:	add    BYTE PTR ss:[eax],al
  40a218:	adc    al,0xb2
  40a21a:	add    BYTE PTR [rax],al
  40a21c:	jo     0x40a254
  40a21e:	add    BYTE PTR [rax],al
  40a220:	or     esi,DWORD PTR [rdi]
  40a222:	add    BYTE PTR [rax],al
  40a224:	sbb    BYTE PTR [rdx+0x37100000],dh
  40a22a:	add    BYTE PTR [rax],al
  40a22c:	and    BYTE PTR [rdi],dh
  40a22e:	add    BYTE PTR [rax],al
  40a230:	and    al,0xb2
  40a232:	add    BYTE PTR [rax],al
  40a234:	and    BYTE PTR [rdi],dh
  40a236:	add    BYTE PTR [rax],al
  40a238:	push   rax
  40a239:	(bad)  
  40a23a:	add    BYTE PTR [rax],al
  40a23c:	sub    BYTE PTR [rdx+0x37500000],dh
  40a242:	add    BYTE PTR [rax],al
  40a244:	fnstsw WORD PTR [rdi]
  40a246:	add    BYTE PTR [rax],al
  40a248:	xor    BYTE PTR [rdx+0x3fe00000],dh
  40a24e:	add    BYTE PTR [rax],al
  40a250:	imul   eax,DWORD PTR [rax+0x0],0x0
  40a254:	ins    BYTE PTR es:[rdi],dx
  40a255:	mov    dl,0x0
  40a257:	add    BYTE PTR [rax+0x40],dh
  40a25a:	add    BYTE PTR [rax],al
  40a25c:	(bad)  
  40a25d:	add    BYTE PTR [r8],al
  40a260:	js     0x40a214
  40a262:	add    BYTE PTR [rax],al
  40a264:	movabs al,ds:0x8c000041d6000041
  40a26d:	mov    dl,0x0
  40a26f:	add    al,ah
  40a271:	add    BYTE PTR [r8],al
  40a274:	rex.X add BYTE PTR ss:[rax],al
  40a278:	xchg   esp,eax
  40a279:	mov    dl,0x0
  40a27b:	add    BYTE PTR [rax+0x42],al
  40a27e:	add    BYTE PTR [rax],al
  40a280:	imul   eax,DWORD PTR [rdx+0x0],0x0
  40a284:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40a285:	mov    dl,0x0
  40a287:	add    BYTE PTR [rax+0x42],dh
  40a28a:	add    BYTE PTR [rax],al
  40a28c:	scas   al,BYTE PTR es:[rdi]
  40a28d:	rex.X add BYTE PTR [rax],al
  40a290:	mov    al,0xb2
  40a292:	add    BYTE PTR [rax],al
  40a294:	mov    al,0x42
  40a296:	add    BYTE PTR [rax],al
  40a298:	xor    eax,DWORD PTR [rbx+0x0]
  40a29b:	add    BYTE PTR [rax+0x700000b2],bh
  40a2a1:	rex.RXB add BYTE PTR [r8],r8b
  40a2a4:	(bad)  
  40a2a5:	rex.W add BYTE PTR [rax],al
  40a2a8:	shl    BYTE PTR [rdx+0x48200000],0x0
  40a2af:	add    BYTE PTR [rcx],bh
  40a2b1:	rex.W add BYTE PTR [rax],al
  40a2b4:	enter  0xb2,0x0
  40a2b8:	rex
  40a2b9:	rex.W add BYTE PTR [rax],al
  40a2bc:	jne    0x40a306
  40a2be:	add    BYTE PTR [rax],al
  40a2c0:	shl    BYTE PTR [rdx+0x48800000],1
  40a2c6:	add    BYTE PTR [rax],al
  40a2c8:	(bad)  
  40a2c9:	rex.W add BYTE PTR [rax],al
  40a2cc:	fdiv   DWORD PTR [rdx+0x48e00000]
  40a2d2:	add    BYTE PTR [rax],al
  40a2d4:	cld    
  40a2d5:	rex.W add BYTE PTR [rax],al
  40a2d8:	in     al,0xb2
  40a2da:	add    BYTE PTR [rax],al
  40a2dc:	add    BYTE PTR [rcx+0x0],cl
  40a2df:	add    BYTE PTR [rdx],cl
  40a2e1:	rex.WB add BYTE PTR [r8],al
  40a2e4:	call   0x1040a39b
  40a2e9:	rex.WB add BYTE PTR [r8],al
  40a2ec:	adc    ecx,DWORD PTR [rcx+0x0]
  40a2ef:	add    ah,ch
  40a2f1:	mov    dl,0x0
  40a2f3:	add    BYTE PTR [rax],ah
  40a2f5:	rex.WB add BYTE PTR [r8],al
  40a2f8:	test   BYTE PTR [rcx+0x0],0x0
  40a2fc:	lock mov dl,0x0
  40a2ff:	add    BYTE PTR [rax],al
  40a301:	rex.WX add BYTE PTR [rax],al
  40a304:	sti    
  40a305:	rex.WX add BYTE PTR [rax],al
  40a308:	add    BYTE PTR [rbx+0x4b000000],dh
  40a30e:	add    BYTE PTR [rax],al
  40a310:	(bad)  
  40a311:	rex.WXB add BYTE PTR [r8],al
  40a314:	adc    BYTE PTR [rbx+0x4b300000],dh
  40a31a:	add    BYTE PTR [rax],al
  40a31c:	cdq    
  40a31d:	rex.WXB add BYTE PTR [r8],al
  40a320:	sbb    BYTE PTR [rbx+0x4ba00000],dh
  40a326:	add    BYTE PTR [rax],al
  40a328:	movabs ds:0xb00000b32400004b,eax
  40a331:	rex.WXB add BYTE PTR [r8],al
  40a334:	icebp  
  40a335:	rex.WXB add BYTE PTR [r8],al
  40a338:	sub    BYTE PTR [rbx+0x4c000000],dh
  40a33e:	add    BYTE PTR [rax],al
  40a340:	or     al,0x4c
  40a342:	add    BYTE PTR [rax],al
  40a344:	xor    BYTE PTR [rbx+0x4c100000],dh
  40a34a:	add    BYTE PTR [rax],al
  40a34c:	or     al,0x4d
  40a34e:	add    BYTE PTR [rax],al
  40a350:	xor    al,0xb3
  40a352:	add    BYTE PTR [rax],al
  40a354:	adc    BYTE PTR [rbp+0x0],cl
  40a357:	add    BYTE PTR [rbx],dl
  40a359:	rex.WRB add BYTE PTR [r8],r8b
  40a35c:	rex.WR mov bl,0x0
  40a35f:	add    BYTE PTR [rax],ah
  40a361:	rex.WRB add BYTE PTR [r8],r8b
  40a364:	and    al,0x4d
  40a366:	add    BYTE PTR [rax],al
  40a368:	push   rax
  40a369:	mov    bl,0x0
  40a36b:	add    BYTE PTR [rax],dh
  40a36d:	rex.WRB add BYTE PTR [r8],r8b
  40a370:	xor    al,0x4d
  40a372:	add    BYTE PTR [rax],al
  40a374:	push   rsp
  40a375:	mov    bl,0x0
  40a377:	add    BYTE PTR [rax+0x4d],al
  40a37a:	add    BYTE PTR [rax],al
  40a37c:	movabs eax,ds:0xb00000b35800004d
  40a385:	rex.WRB add BYTE PTR [r8],r8b
  40a388:	adc    cl,BYTE PTR [rdi+0x0]
  40a38b:	add    BYTE PTR [rbx+rsi*4+0x0],ah
  40a38f:	add    BYTE PTR [rax],ah
  40a391:	rex.WRXB add BYTE PTR [r8],r8b
  40a394:	sbb    DWORD PTR [rdx+0x0],edx
  40a397:	add    BYTE PTR [rax-0x4d],bh
  40a39a:	add    BYTE PTR [rax],al
  40a39c:	and    BYTE PTR [rdx+0x0],dl
  40a39f:	add    dh,al
  40a3a1:	push   rbx
  40a3a2:	add    BYTE PTR [rax],al
  40a3a4:	nop
  40a3a5:	mov    bl,0x0
  40a3a7:	add    al,dl
  40a3a9:	push   rbx
  40a3aa:	add    BYTE PTR [rax],al
  40a3ac:	mov    esp,0x98000054
  40a3b1:	mov    bl,0x0
  40a3b3:	add    al,al
  40a3b5:	push   rsp
  40a3b6:	add    BYTE PTR [rax],al
  40a3b8:	js     0x40a410
  40a3ba:	add    BYTE PTR [rax],al
  40a3bc:	test   al,0xb3
  40a3be:	add    BYTE PTR [rax],al
  40a3c0:	adc    BYTE PTR [rsi+0x0],0x0
  40a3c4:	in     eax,dx
  40a3c5:	push   rsi
  40a3c6:	add    BYTE PTR [rax],al
  40a3c8:	mov    al,0xb3
  40a3ca:	add    BYTE PTR [rax],al
  40a3cc:	lock push rsi
  40a3ce:	add    BYTE PTR [rax],al
  40a3d0:	outs   dx,DWORD PTR ds:[rsi]
  40a3d1:	push   rdi
  40a3d2:	add    BYTE PTR [rax],al
  40a3d4:	shl    BYTE PTR [rbx+0x57700000],0x0
  40a3db:	add    BYTE PTR [rdi],cl
  40a3dd:	pop    rax
  40a3de:	add    BYTE PTR [rax],al
  40a3e0:	int3   
  40a3e1:	mov    bl,0x0
  40a3e3:	add    BYTE PTR [rax],dl
  40a3e5:	pop    rax
  40a3e6:	add    BYTE PTR [rax],al
  40a3e8:	(bad)  
  40a3e9:	pop    rax
  40a3ea:	add    BYTE PTR [rax],al
  40a3ec:	(bad)  
  40a3ed:	mov    bl,0x0
  40a3ef:	add    al,dh
  40a3f1:	pop    rax
  40a3f2:	add    BYTE PTR [rax],al
  40a3f4:	mulps  xmm0,XMMWORD PTR [rax]
  40a3f7:	add    ah,bl
  40a3f9:	mov    bl,0x0
  40a3fb:	add    BYTE PTR [rax],dl
  40a3fd:	pop    rcx
  40a3fe:	add    BYTE PTR [rax],al
  40a400:	and    bl,BYTE PTR [rcx+0x0]
  40a403:	add    al,ah
  40a405:	mov    bl,0x0
  40a407:	add    BYTE PTR [rax],dh
  40a409:	pop    rcx
  40a40a:	add    BYTE PTR [rax],al
  40a40c:	jne    0x40a467
  40a40e:	add    BYTE PTR [rax],al
  40a410:	in     al,0xb3
  40a412:	add    BYTE PTR [rax],al
  40a414:	sbb    BYTE PTR [rcx+0x0],0x0
  40a418:	(bad)  
  40a419:	pop    rdx
  40a41a:	add    BYTE PTR [rax],al
  40a41c:	call   0x2040a4d4
  40a421:	pop    rdx
  40a422:	add    BYTE PTR [rax],al
  40a424:	movsxd ebx,DWORD PTR [rdx+0x0]
  40a427:	add    ah,dh
  40a429:	mov    bl,0x0
  40a42b:	add    BYTE PTR [rax+0x5a],dh
  40a42e:	add    BYTE PTR [rax],al
  40a430:	stos   DWORD PTR es:[rdi],eax
  40a431:	pop    rdx
  40a432:	add    BYTE PTR [rax],al
  40a434:	add    BYTE PTR [rax+rax*1+0x5ab000],dh
  40a43b:	add    BYTE PTR [rsi],bh
  40a43d:	pop    rbx
  40a43e:	add    BYTE PTR [rax],al
  40a440:	or     BYTE PTR [rax+rax*1+0x5b4000],dh
  40a447:	add    BYTE PTR [rax+0x5b],bh
  40a44a:	add    BYTE PTR [rax],al
  40a44c:	adc    al,0xb4
  40a44e:	add    BYTE PTR [rax],al
  40a450:	sbb    BYTE PTR [rbx+0x0],0x0
  40a454:	(bad)  
  40a455:	pop    rbx
  40a456:	add    BYTE PTR [rax],al
  40a458:	and    BYTE PTR [rax+rax*1+0x5be000],dh
  40a45f:	add    BYTE PTR [rsi+0x2c00005c],cl
  40a465:	mov    ah,0x0
  40a467:	add    al,dl
  40a469:	pop    rbp
  40a46a:	add    BYTE PTR [rax],al
  40a46c:	fcomp  DWORD PTR [rbp+0x0]
  40a46f:	add    BYTE PTR [rsp+rsi*4],bh
  40a472:	add    BYTE PTR [rax],al
  40a474:	loopne 0x40a4d3
  40a476:	add    BYTE PTR [rax],al
  40a478:	jmp    0x40a4d7
  40a47a:	add    BYTE PTR [rax],al
  40a47c:	mov    spl,0x0
  40a47f:	add    BYTE PTR [rax-0x61ffffa2],dh
  40a485:	movsxd eax,DWORD PTR [rax]
  40a487:	.byte 0x0
  40a488:	cwde   
  40a489:	mov    cl,0x0
	...

Disassembly of section .xdata:

000000000040b000 <.xdata>:
  40b000:	add    DWORD PTR [rax],eax
  40b002:	add    BYTE PTR [rax],al
  40b004:	add    DWORD PTR [rcx+rax*1],eax
  40b007:	add    BYTE PTR [rdx+rax*2],al
  40b00a:	add    BYTE PTR [rax],al
  40b00c:	add    DWORD PTR [rcx+rax*1],eax
  40b00f:	add    BYTE PTR [rdx+riz*2],al
  40b012:	add    BYTE PTR [rax],al
  40b014:	add    DWORD PTR [rdi],ecx
  40b016:	or     BYTE PTR [rax],al
  40b018:	lgdt   [rbx]
  40b01b:	add    BYTE PTR [rax],cl
  40b01d:	xor    BYTE PTR [rdi],al
  40b01f:	(bad)  
  40b020:	(bad)  
  40b021:	jo     0x40b028
  40b023:	push   rax
  40b024:	add    al,0xc0
  40b026:	add    dl,al
  40b028:	or     DWORD PTR [rcx+rax*1],eax
  40b02b:	add    BYTE PTR [rdx+rax*2],al
  40b02e:	add    BYTE PTR [rax],al
  40b030:	enter  0x5d,0x0
  40b034:	add    DWORD PTR [rax],eax
  40b036:	add    BYTE PTR [rax],al
  40b038:	(bad)  
  40b039:	adc    al,0x0
  40b03b:	add    ah,ch
  40b03d:	adc    al,0x0
  40b03f:	add    al,al
  40b041:	push   rsp
  40b042:	add    BYTE PTR [rax],al
  40b044:	in     al,dx
  40b045:	adc    al,0x0
  40b047:	add    BYTE PTR [rcx],cl
  40b049:	add    al,0x1
  40b04b:	add    BYTE PTR [rdx+rax*2],al
  40b04e:	add    BYTE PTR [rax],al
  40b050:	enter  0x5d,0x0
  40b054:	add    DWORD PTR [rax],eax
  40b056:	add    BYTE PTR [rax],al
  40b058:	add    al,0x15
  40b05a:	add    BYTE PTR [rax],al
  40b05c:	sbb    al,0x15
  40b05e:	add    BYTE PTR [rax],al
  40b060:	rcl    BYTE PTR [rax+rax*1+0x0],0x1c
  40b065:	adc    eax,0xa010000
  40b06a:	(bad)  
  40b06b:	add    BYTE PTR [rdx],cl
  40b06d:	xor    al,BYTE PTR [rsi]
  40b06f:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0b4d5
  40b075:	push   rax
  40b076:	add    al,al
  40b078:	add    DWORD PTR [rsi+rax*1],ecx
  40b07b:	add    BYTE PTR [rax+rbp*2],cl
  40b07e:	add    al,BYTE PTR [rax]
  40b080:	(bad)  
  40b081:	push   rdx
  40b082:	add    esi,DWORD PTR [rax]
  40b084:	add    ah,BYTE PTR [rax+0x1]
  40b087:	jo     0x40b08a
  40b089:	sbb    ecx,DWORD PTR [rax+rax*1]
  40b08c:	sbb    ebp,DWORD PTR [rax+0x8]
  40b08f:	add    BYTE PTR [rbx],dl
  40b091:	add    DWORD PTR [rbx],edx
  40b093:	add    BYTE PTR [rax+rsi*1],cl
  40b096:	or     esp,DWORD PTR [rax+0xa]
  40b099:	jo     0x40b0a4
  40b09b:	push   rax
  40b09c:	or     al,al
  40b09e:	(bad)  
  40b09f:	rol    BYTE PTR [rax+riz*8],1
  40b0a2:	add    dh,al
  40b0a4:	add    DWORD PTR [rcx+rax*1],eax
  40b0a7:	add    BYTE PTR [rdx+rax*2],al
  40b0aa:	add    BYTE PTR [rax],al
  40b0ac:	add    DWORD PTR [rdi],eax
  40b0ae:	add    al,0x0
  40b0b0:	(bad)  
  40b0b1:	jb     0x40b0b6
  40b0b3:	xor    BYTE PTR [rdx],al
  40b0b5:	(bad)  
  40b0b6:	add    DWORD PTR [rax+0x1],esi
  40b0b9:	(bad)  
  40b0ba:	add    al,0x0
  40b0bc:	(bad)  
  40b0bd:	push   rdx
  40b0be:	add    esi,DWORD PTR [rax]
  40b0c0:	add    ah,BYTE PTR [rax+0x1]
  40b0c3:	jo     0x40b0c6
  40b0c5:	(bad)  
  40b0c6:	add    al,0x0
  40b0c8:	(bad)  
  40b0c9:	push   rdx
  40b0ca:	add    esi,DWORD PTR [rax]
  40b0cc:	add    ah,BYTE PTR [rax+0x1]
  40b0cf:	jo     0x40b0d2
  40b0d1:	(bad)  
  40b0d2:	add    al,0x0
  40b0d4:	(bad)  
  40b0d5:	push   rdx
  40b0d6:	add    esi,DWORD PTR [rax]
  40b0d8:	add    ah,BYTE PTR [rax+0x1]
  40b0db:	jo     0x40b0de
  40b0dd:	(bad)  
  40b0de:	add    al,0x0
  40b0e0:	(bad)  
  40b0e1:	push   rdx
  40b0e2:	add    esi,DWORD PTR [rax]
  40b0e4:	add    ah,BYTE PTR [rax+0x1]
  40b0e7:	jo     0x40b0ea
  40b0e9:	(bad)  
  40b0ea:	add    al,0x0
  40b0ec:	(bad)  
  40b0ed:	push   rdx
  40b0ee:	add    esi,DWORD PTR [rax]
  40b0f0:	add    ah,BYTE PTR [rax+0x1]
  40b0f3:	jo     0x40b0f6
  40b0f5:	(bad)  
  40b0f6:	add    eax,DWORD PTR [rax]
  40b0f8:	(bad)  
  40b0f9:	(bad)  
  40b0fb:	xor    BYTE PTR [rcx],al
  40b0fd:	(bad)  
  40b0fe:	add    BYTE PTR [rax],al
  40b100:	add    DWORD PTR [rsi],eax
  40b102:	add    eax,DWORD PTR [rax]
  40b104:	(bad)  
  40b105:	rex.X add spl,BYTE PTR [rax+0x1]
  40b109:	jo     0x40b10b
  40b10b:	add    BYTE PTR [rcx],al
  40b10d:	adc    BYTE PTR [rcx],cl
  40b10f:	add    BYTE PTR [rax],dl
  40b111:	loop   0x40b11f
  40b113:	xor    BYTE PTR [rbx],cl
  40b115:	(bad)  
  40b116:	or     dh,BYTE PTR [rax+0x9]
  40b119:	push   rax
  40b11a:	or     al,al
  40b11c:	(bad)  
  40b11d:	rol    BYTE PTR [rax+riz*8],1
  40b120:	add    dh,al
  40b122:	add    BYTE PTR [rax],al
  40b124:	add    DWORD PTR [rcx+rax*1],eax
  40b127:	add    BYTE PTR [rdx+riz*2],al
  40b12a:	add    BYTE PTR [rax],al
  40b12c:	add    DWORD PTR [rsi],eax
  40b12e:	add    eax,DWORD PTR [rax]
  40b130:	(bad)  
  40b131:	(bad)  
  40b133:	(bad)  
  40b134:	add    DWORD PTR [rax+0x0],esi
  40b137:	add    BYTE PTR [rcx],al
  40b139:	(bad)  
  40b13a:	add    eax,DWORD PTR [rax]
  40b13c:	(bad)  
  40b13d:	rex.X add sil,BYTE PTR [rax]
  40b140:	add    DWORD PTR [rax+0x0],esp
  40b143:	add    BYTE PTR [rcx],al
  40b145:	(bad)  
  40b146:	add    al,0x0
  40b148:	(bad)  
  40b149:	push   rdx
  40b14a:	add    esi,DWORD PTR [rax]
  40b14c:	add    ah,BYTE PTR [rax+0x1]
  40b14f:	jo     0x40b152
  40b151:	add    eax,0x52050002
  40b156:	add    DWORD PTR [rax],esi
  40b158:	add    DWORD PTR [rdi],eax
  40b15a:	add    al,0x0
  40b15c:	(bad)  
  40b15d:	xor    al,BYTE PTR [rbx]
  40b15f:	xor    BYTE PTR [rdx],al
  40b161:	(bad)  
  40b162:	add    DWORD PTR [rax+0x1],esi
  40b165:	sbb    ecx,DWORD PTR [rax+rax*1]
  40b168:	sbb    ebp,DWORD PTR [rax+0xc]
  40b16b:	add    BYTE PTR [rbx],dl
  40b16d:	add    DWORD PTR [rbx],ebx
  40b16f:	add    BYTE PTR [rax+rsi*1],cl
  40b172:	or     esp,DWORD PTR [rax+0xa]
  40b175:	jo     0x40b180
  40b177:	push   rax
  40b178:	or     al,al
  40b17a:	(bad)  
  40b17b:	rol    BYTE PTR [rax+riz*8],1
  40b17e:	add    dh,al
  40b180:	add    DWORD PTR [rip+0x10d0007],ecx        # 0x14db18d
  40b186:	int3   
  40b187:	add    BYTE PTR [rsi],al
  40b189:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0b5ef
  40b18f:	push   rax
  40b190:	add    al,al
  40b192:	add    BYTE PTR [rax],al
  40b194:	add    DWORD PTR [rax],eax
  40b196:	add    BYTE PTR [rax],al
  40b198:	add    DWORD PTR [rbx],edx
  40b19a:	or     al,BYTE PTR [rax]
  40b19c:	adc    eax,DWORD PTR [rcx]
  40b19e:	sbb    DWORD PTR [rax],eax
  40b1a0:	or     al,0x30
  40b1a2:	or     esp,DWORD PTR [rax+0xa]
  40b1a5:	jo     0x40b1b0
  40b1a7:	push   rax
  40b1a8:	or     al,al
  40b1aa:	(bad)  
  40b1ab:	rol    BYTE PTR [rax+riz*8],1
  40b1ae:	add    dh,al
  40b1b0:	add    DWORD PTR [rax],eax
  40b1b2:	add    BYTE PTR [rax],al
  40b1b4:	add    DWORD PTR [rax],eax
  40b1b6:	add    BYTE PTR [rax],al
  40b1b8:	add    DWORD PTR [rax],eax
  40b1ba:	add    BYTE PTR [rax],al
  40b1bc:	add    DWORD PTR [rax],eax
  40b1be:	add    BYTE PTR [rax],al
  40b1c0:	add    DWORD PTR [rax],eax
  40b1c2:	add    BYTE PTR [rax],al
  40b1c4:	add    DWORD PTR [rsi],eax
  40b1c6:	add    eax,DWORD PTR [rax]
  40b1c8:	(bad)  
  40b1c9:	rex.X add sil,BYTE PTR [rax]
  40b1cc:	add    DWORD PTR [rax+0x0],esp
  40b1cf:	add    BYTE PTR [rcx],al
  40b1d1:	add    BYTE PTR [rax],al
  40b1d3:	add    BYTE PTR [rcx],al
  40b1d5:	add    eax,0x32050002
  40b1da:	add    DWORD PTR [rax],esi
  40b1dc:	add    DWORD PTR [rax],ecx
  40b1de:	add    eax,0x4420800
  40b1e3:	xor    BYTE PTR [rbx],al
  40b1e5:	(bad)  
  40b1e6:	add    dh,BYTE PTR [rax+0x1]
  40b1e9:	push   rax
  40b1ea:	add    BYTE PTR [rax],al
  40b1ec:	add    DWORD PTR [rax],eax
  40b1ee:	add    BYTE PTR [rax],al
  40b1f0:	add    DWORD PTR [rip+0x52050002],eax        # 0x5245b1f8
  40b1f6:	add    DWORD PTR [rax],esi
  40b1f8:	add    DWORD PTR [rip+0x52050002],eax        # 0x5245b200
  40b1fe:	add    DWORD PTR [rax],esi
  40b200:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245b208
  40b206:	add    DWORD PTR [rax],esi
  40b208:	add    DWORD PTR [rax],eax
  40b20a:	add    BYTE PTR [rax],al
  40b20c:	add    DWORD PTR [rax],eax
  40b20e:	add    BYTE PTR [rax],al
  40b210:	add    DWORD PTR [rax],eax
  40b212:	add    BYTE PTR [rax],al
  40b214:	add    DWORD PTR [rax],eax
  40b216:	add    BYTE PTR [rax],al
  40b218:	add    DWORD PTR [rcx],ecx
  40b21a:	add    al,0x0
  40b21c:	or     DWORD PTR [rcx],eax
  40b21e:	adc    eax,DWORD PTR [rax]
  40b220:	add    dh,BYTE PTR [rax]
  40b222:	add    DWORD PTR [rax+0x1],esi
  40b225:	add    BYTE PTR [rax],al
  40b227:	add    BYTE PTR [rcx],al
  40b229:	add    eax,0x32050002
  40b22e:	add    DWORD PTR [rax],esi
  40b230:	add    DWORD PTR [rdi+0x1b],ebx
  40b233:	add    BYTE PTR [rdi-0x8],bl
  40b236:	lldt   WORD PTR [rsi-0x18]
  40b23a:	(bad)  
  40b23b:	add    BYTE PTR [rbp-0x28],cl
  40b23e:	or     eax,0xcc84400
  40b243:	add    BYTE PTR [rbx],bh
  40b245:	mov    eax,0xa832000b
  40b24a:	or     al,BYTE PTR [rax]
  40b24c:	sub    DWORD PTR [rax-0x77dffff7],ebx
  40b252:	or     BYTE PTR [rax],al
  40b254:	(bad)  
  40b255:	js     0x40b25e
  40b257:	add    BYTE PTR [rdx],dl
  40b259:	push   0x10d0006
  40b25e:	and    BYTE PTR [rax],al
  40b260:	(bad)  
  40b261:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0b6c7
  40b267:	push   rax
  40b268:	add    al,al
  40b26a:	add    BYTE PTR [rax],al
  40b26c:	add    DWORD PTR [rsi],eax
  40b26e:	add    eax,DWORD PTR [rax]
  40b270:	(bad)  
  40b271:	ret    0x3002
  40b274:	add    DWORD PTR [rax+0x0],esi
  40b277:	add    BYTE PTR [rcx],al
  40b279:	or     al,0x7
  40b27b:	add    BYTE PTR [rdx+rax*4],cl
  40b27e:	or     BYTE PTR [rax],dh
  40b280:	(bad)  
  40b281:	(bad)  
  40b282:	(bad)  
  40b283:	jo     0x40b28a
  40b285:	push   rax
  40b286:	add    al,0xc0
  40b288:	add    dl,al
  40b28a:	add    BYTE PTR [rax],al
  40b28c:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245b294
  40b292:	add    DWORD PTR [rax],esi
  40b294:	add    DWORD PTR [rax],ecx
  40b296:	add    eax,0x4420800
  40b29b:	xor    BYTE PTR [rbx],al
  40b29d:	(bad)  
  40b29e:	add    dh,BYTE PTR [rax+0x1]
  40b2a1:	push   rax
  40b2a2:	add    BYTE PTR [rax],al
  40b2a4:	add    DWORD PTR [rsi],eax
  40b2a6:	add    eax,DWORD PTR [rax]
  40b2a8:	(bad)  
  40b2a9:	rex.X add sil,BYTE PTR [rax]
  40b2ac:	add    DWORD PTR [rax+0x0],esp
  40b2af:	add    BYTE PTR [rcx],al
  40b2b1:	add    eax,0x32050002
  40b2b6:	add    DWORD PTR [rax],esi
  40b2b8:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245b2c0
  40b2be:	add    DWORD PTR [rax],esi
  40b2c0:	add    DWORD PTR [rip+0x52050002],eax        # 0x5245b2c8
  40b2c6:	add    DWORD PTR [rax],esi
  40b2c8:	add    DWORD PTR [rcx+rax*1],eax
  40b2cb:	add    BYTE PTR [rdx+rax*2],al
  40b2ce:	add    BYTE PTR [rax],al
  40b2d0:	add    DWORD PTR [rcx+rax*1],eax
  40b2d3:	add    BYTE PTR [rdx+rax*2],al
  40b2d6:	add    BYTE PTR [rax],al
  40b2d8:	add    DWORD PTR [rsi],eax
  40b2da:	add    eax,DWORD PTR [rax]
  40b2dc:	(bad)  
  40b2dd:	rex.X add sil,BYTE PTR [rax]
  40b2e0:	add    DWORD PTR [rax+0x0],esp
  40b2e3:	add    BYTE PTR [rcx],al
  40b2e5:	add    BYTE PTR [rax],al
  40b2e7:	add    BYTE PTR [rcx],al
  40b2e9:	add    BYTE PTR [rax],al
  40b2eb:	add    BYTE PTR [rcx],al
  40b2ed:	add    BYTE PTR [rax],al
  40b2ef:	add    BYTE PTR [rcx],al
  40b2f1:	or     al,BYTE PTR [rsi]
  40b2f3:	add    BYTE PTR [rdx],cl
  40b2f5:	jb     0x40b2fd
  40b2f7:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0b75d
  40b2fd:	push   rax
  40b2fe:	add    al,al
  40b300:	add    DWORD PTR [rdx],ecx
  40b302:	add    eax,0x6d20a05
  40b307:	add    eax,DWORD PTR [rbx]
  40b309:	xor    BYTE PTR [rdx],al
  40b30b:	(bad)  
  40b30c:	add    DWORD PTR [rax+0x0],edx
  40b30f:	add    BYTE PTR [rcx],al
  40b311:	add    al,0x1
  40b313:	add    BYTE PTR [rdx+rax*2],al
  40b316:	add    BYTE PTR [rax],al
  40b318:	add    DWORD PTR [rsi],eax
  40b31a:	add    eax,DWORD PTR [rax]
  40b31c:	(bad)  
  40b31d:	rex.X add sil,BYTE PTR [rax]
  40b320:	add    DWORD PTR [rax+0x0],esp
  40b323:	add    BYTE PTR [rcx],al
  40b325:	add    BYTE PTR [rax],al
  40b327:	add    BYTE PTR [rcx],al
  40b329:	add    al,0x1
  40b32b:	add    BYTE PTR [rdx+riz*4],al
  40b32e:	add    BYTE PTR [rax],al
  40b330:	add    DWORD PTR [rax],eax
  40b332:	add    BYTE PTR [rax],al
  40b334:	add    DWORD PTR [rsi],edx
  40b336:	or     DWORD PTR [rax],eax
  40b338:	(bad)  
  40b339:	mov    BYTE PTR [rsi],al
  40b33b:	add    BYTE PTR [rax],dl
  40b33d:	js     0x40b344
  40b33f:	add    BYTE PTR [rbx],cl
  40b341:	push   0xffffffffe2060004
  40b346:	add    dh,BYTE PTR [rax]
  40b348:	add    DWORD PTR [rax+0x0],esp
  40b34b:	add    BYTE PTR [rcx],al
  40b34d:	add    BYTE PTR [rax],al
  40b34f:	add    BYTE PTR [rcx],al
  40b351:	add    BYTE PTR [rax],al
  40b353:	add    BYTE PTR [rcx],al
  40b355:	add    BYTE PTR [rax],al
  40b357:	add    BYTE PTR [rcx],al
  40b359:	(bad)  
  40b35a:	add    eax,DWORD PTR [rax]
  40b35c:	(bad)  
  40b35d:	(bad)  
  40b35f:	xor    BYTE PTR [rcx],al
  40b361:	(bad)  
  40b362:	add    BYTE PTR [rax],al
  40b364:	add    DWORD PTR [rdi+rax*1],ecx
  40b367:	add    BYTE PTR [rdx+riz*4],cl
  40b36a:	or     BYTE PTR [rax],dh
  40b36c:	(bad)  
  40b36d:	(bad)  
  40b36e:	(bad)  
  40b36f:	jo     0x40b376
  40b371:	push   rax
  40b372:	add    al,0xc0
  40b374:	add    dl,al
  40b376:	add    BYTE PTR [rax],al
  40b378:	add    DWORD PTR [rcx],edx
  40b37a:	or     DWORD PTR [rip+0x30db211],eax        # 0x34e6591
  40b380:	or     dh,BYTE PTR [rax]
  40b382:	or     DWORD PTR [rax+0x8],esp
  40b385:	jo     0x40b38e
  40b387:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x220b75e
  40b38e:	add    BYTE PTR [rax],al
  40b390:	add    DWORD PTR [rcx+rax*1],eax
  40b393:	add    BYTE PTR [rdx+rax*2],al
  40b396:	add    BYTE PTR [rax],al
  40b398:	add    DWORD PTR [rdx],ecx
  40b39a:	(bad)  
  40b39b:	add    BYTE PTR [rdx],cl
  40b39d:	xor    al,BYTE PTR [rsi]
  40b39f:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0b805
  40b3a5:	push   rax
  40b3a6:	add    al,al
  40b3a8:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245b3b0
  40b3ae:	add    DWORD PTR [rax],esi
  40b3b0:	add    DWORD PTR [rax],ecx
  40b3b2:	add    eax,0x4420800
  40b3b7:	xor    BYTE PTR [rbx],al
  40b3b9:	(bad)  
  40b3ba:	add    dh,BYTE PTR [rax+0x1]
  40b3bd:	push   rax
  40b3be:	add    BYTE PTR [rax],al
  40b3c0:	add    DWORD PTR [rdi],eax
  40b3c2:	add    al,0x0
  40b3c4:	(bad)  
  40b3c5:	xor    al,BYTE PTR [rbx]
  40b3c7:	xor    BYTE PTR [rdx],al
  40b3c9:	(bad)  
  40b3ca:	add    DWORD PTR [rax+0x1],esi
  40b3cd:	add    eax,0x32050002
  40b3d2:	add    DWORD PTR [rax],esi
  40b3d4:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245b3dc
  40b3da:	add    DWORD PTR [rax],esi
  40b3dc:	add    DWORD PTR [rax],eax
  40b3de:	add    BYTE PTR [rax],al
  40b3e0:	add    DWORD PTR [rax],eax
  40b3e2:	add    BYTE PTR [rax],al
  40b3e4:	add    DWORD PTR [rax],eax
  40b3e6:	add    BYTE PTR [rax],al
  40b3e8:	add    DWORD PTR [rdi],eax
  40b3ea:	add    al,0x0
  40b3ec:	(bad)  
  40b3ed:	xor    al,BYTE PTR [rbx]
  40b3ef:	xor    BYTE PTR [rdx],al
  40b3f1:	(bad)  
  40b3f2:	add    DWORD PTR [rax+0x1],esi
  40b3f5:	(bad)  
  40b3f6:	add    eax,DWORD PTR [rax]
  40b3f8:	(bad)  
  40b3f9:	rex.X add sil,BYTE PTR [rax]
  40b3fc:	add    DWORD PTR [rax+0x0],esp
  40b3ff:	add    BYTE PTR [rcx],al
  40b401:	add    eax,0x32050002
  40b406:	add    DWORD PTR [rax],esi
  40b408:	add    DWORD PTR [rdi],eax
  40b40a:	add    al,0x0
  40b40c:	(bad)  
  40b40d:	xor    al,BYTE PTR [rbx]
  40b40f:	xor    BYTE PTR [rdx],al
  40b411:	(bad)  
  40b412:	add    DWORD PTR [rax+0x1],esi
  40b415:	(bad)  
  40b416:	add    eax,DWORD PTR [rax]
  40b418:	(bad)  
  40b419:	rex.X add sil,BYTE PTR [rax]
  40b41c:	add    DWORD PTR [rax+0x0],esp
  40b41f:	add    BYTE PTR [rcx],al
  40b421:	(bad)  
  40b422:	add    eax,DWORD PTR [rax]
  40b424:	(bad)  
  40b425:	rex.X add sil,BYTE PTR [rax]
  40b428:	add    DWORD PTR [rax+0x0],esp
  40b42b:	add    BYTE PTR [rcx],al
  40b42d:	or     BYTE PTR [rip+0x4420800],al        # 0x482bc33
  40b433:	xor    BYTE PTR [rbx],al
  40b435:	(bad)  
  40b436:	add    dh,BYTE PTR [rax+0x1]
  40b439:	push   rax
  40b43a:	add    BYTE PTR [rax],al
  40b43c:	add    DWORD PTR [rax],eax
  40b43e:	add    BYTE PTR [rax],al
  40b440:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

000000000040c000 <.bss>:
	...

Disassembly of section .idata:

000000000040d000 <.idata>:
  40d000:	movabs al,ds:0xd0
  40d009:	add    BYTE PTR [rax],al
  40d00b:	add    BYTE PTR [rdi+rbp*8],dl
  40d00e:	add    BYTE PTR [rax],al
  40d010:	fcom   st(6)
  40d012:	add    BYTE PTR [rax],al
  40d014:	jo     0x40cfe8
	...
  40d01e:	add    BYTE PTR [rax],al
  40d020:	cmp    al,0xef
  40d022:	add    BYTE PTR [rax],al
  40d024:	test   al,0xd8
  40d026:	add    BYTE PTR [rax],al
  40d028:	movabs al,ds:0xd2
  40d031:	add    BYTE PTR [rax],al
  40d033:	add    ah,ch
  40d035:	out    dx,eax
  40d036:	add    BYTE PTR [rax],al
  40d038:	fcomp  st(0)
  40d03a:	add    BYTE PTR [rax],al
  40d03c:	fcom   st(3)
	...
  40d046:	add    BYTE PTR [rax],al
  40d048:	xor    al,0x0
  40d04b:	add    BYTE PTR [rax],dl
  40d04d:	fiadd  DWORD PTR [rax]
  40d04f:	add    al,ch
  40d051:	(bad)  
	...
  40d05a:	add    BYTE PTR [rax],al
  40d05c:	cwde   
  40d05d:	lock add BYTE PTR [rax],al
  40d060:	and    bl,bl
  40d062:	add    BYTE PTR [rax],al
  40d064:	clc    
  40d065:	(bad)  
	...
  40d06e:	add    BYTE PTR [rax],al
  40d070:	or     al,0xf1
  40d072:	add    BYTE PTR [rax],al
  40d074:	xor    bl,bl
  40d076:	add    BYTE PTR [rax],al
  40d078:	mov    eax,0xd5
  40d07d:	add    BYTE PTR [rax],al
  40d07f:	add    BYTE PTR [rax],al
  40d081:	add    BYTE PTR [rax],al
  40d083:	add    BYTE PTR [rax-0xfffff0f],ch
  40d089:	fild   DWORD PTR [rax]
	...
  40d09f:	add    BYTE PTR [rax],dl
  40d0a1:	fld    QWORD PTR [rax]
  40d0a3:	add    BYTE PTR [rax],al
  40d0a5:	add    BYTE PTR [rax],al
  40d0a7:	add    BYTE PTR [rbx*8+0x0],ch
  40d0ae:	add    BYTE PTR [rax],al
  40d0b0:	rex fld QWORD PTR [rax]
  40d0b3:	add    BYTE PTR [rax],al
  40d0b5:	add    BYTE PTR [rax],al
  40d0b7:	add    BYTE PTR [rax-0x23],ah
  40d0ba:	add    BYTE PTR [rax],al
  40d0bc:	add    BYTE PTR [rax],al
  40d0be:	add    BYTE PTR [rax],al
  40d0c0:	jl     0x40d09f
  40d0c2:	add    BYTE PTR [rax],al
  40d0c4:	add    BYTE PTR [rax],al
  40d0c6:	add    BYTE PTR [rax],al
  40d0c8:	cwde   
  40d0c9:	fld    QWORD PTR [rax]
  40d0cb:	add    BYTE PTR [rax],al
  40d0cd:	add    BYTE PTR [rax],al
  40d0cf:	add    BYTE PTR [rax+0xdd],bh
  40d0d5:	add    BYTE PTR [rax],al
  40d0d7:	add    ah,bl
  40d0d9:	fld    QWORD PTR [rax]
  40d0db:	add    BYTE PTR [rax],al
  40d0dd:	add    BYTE PTR [rax],al
  40d0df:	add    BYTE PTR [rax],al
  40d0e1:	fiadd  WORD PTR [rax]
  40d0e3:	add    BYTE PTR [rax],al
  40d0e5:	add    BYTE PTR [rax],al
  40d0e7:	add    BYTE PTR [rax],ah
  40d0e9:	fiadd  WORD PTR [rax]
  40d0eb:	add    BYTE PTR [rax],al
  40d0ed:	add    BYTE PTR [rax],al
  40d0ef:	add    BYTE PTR [rsi+rbx*8],bh
  40d0f2:	add    BYTE PTR [rax],al
  40d0f4:	add    BYTE PTR [rax],al
  40d0f6:	add    BYTE PTR [rax],al
  40d0f8:	pop    rsp
  40d0f9:	fiadd  WORD PTR [rax]
  40d0fb:	add    BYTE PTR [rax],al
  40d0fd:	add    BYTE PTR [rax],al
  40d0ff:	add    BYTE PTR [rsi+rbx*8+0x0],bh
  40d103:	add    BYTE PTR [rax],al
  40d105:	add    BYTE PTR [rax],al
  40d107:	add    BYTE PTR [rsi+rbx*8+0x0],bl
  40d10e:	add    BYTE PTR [rax],al
  40d110:	(bad)  
  40d111:	fiadd  WORD PTR [rax]
  40d113:	add    BYTE PTR [rax],al
  40d115:	add    BYTE PTR [rax],al
  40d117:	add    al,ch
  40d119:	fiadd  WORD PTR [rax]
  40d11b:	add    BYTE PTR [rax],al
  40d11d:	add    BYTE PTR [rax],al
  40d11f:	add    BYTE PTR [rdi+rbx*8],cl
  40d122:	add    BYTE PTR [rax],al
  40d124:	add    BYTE PTR [rax],al
  40d126:	add    BYTE PTR [rax],al
  40d128:	xor    al,0xdf
  40d12a:	add    BYTE PTR [rax],al
  40d12c:	add    BYTE PTR [rax],al
  40d12e:	add    BYTE PTR [rax],al
  40d130:	push   rsp
  40d131:	fild   WORD PTR [rax]
  40d133:	add    BYTE PTR [rax],al
  40d135:	add    BYTE PTR [rax],al
  40d137:	add    BYTE PTR [rax-0x21],dh
  40d13a:	add    BYTE PTR [rax],al
  40d13c:	add    BYTE PTR [rax],al
  40d13e:	add    BYTE PTR [rax],al
  40d140:	nop
  40d141:	fild   WORD PTR [rax]
  40d143:	add    BYTE PTR [rax],al
  40d145:	add    BYTE PTR [rax],al
  40d147:	add    BYTE PTR [rdi+rbx*8+0x0],ch
  40d14e:	add    BYTE PTR [rax],al
  40d150:	int3   
  40d151:	fild   WORD PTR [rax]
  40d153:	add    BYTE PTR [rax],al
  40d155:	add    BYTE PTR [rax],al
  40d157:	add    ah,ch
  40d159:	fild   WORD PTR [rax]
  40d15b:	add    BYTE PTR [rax],al
  40d15d:	add    BYTE PTR [rax],al
  40d15f:	add    BYTE PTR [rax+riz*8],cl
  40d162:	add    BYTE PTR [rax],al
  40d164:	add    BYTE PTR [rax],al
  40d166:	add    BYTE PTR [rax],al
  40d168:	sub    al,ah
  40d16a:	add    BYTE PTR [rax],al
  40d16c:	add    BYTE PTR [rax],al
  40d16e:	add    BYTE PTR [rax],al
  40d170:	rex.R loopne 0x40d173
  40d173:	add    BYTE PTR [rax],al
  40d175:	add    BYTE PTR [rax],al
  40d177:	add    BYTE PTR [rax-0x20],ch
  40d17a:	add    BYTE PTR [rax],al
  40d17c:	add    BYTE PTR [rax],al
  40d17e:	add    BYTE PTR [rax],al
  40d180:	test   al,ah
  40d182:	add    BYTE PTR [rax],al
  40d184:	add    BYTE PTR [rax],al
  40d186:	add    BYTE PTR [rax],al
  40d188:	pushf  
  40d189:	loopne 0x40d18b
  40d18b:	add    BYTE PTR [rax],al
  40d18d:	add    BYTE PTR [rax],al
  40d18f:	add    al,al
  40d191:	loopne 0x40d193
  40d193:	add    BYTE PTR [rax],al
  40d195:	add    BYTE PTR [rax],al
  40d197:	add    ah,bl
  40d199:	loopne 0x40d19b
  40d19b:	add    BYTE PTR [rax],al
  40d19d:	add    BYTE PTR [rax],al
  40d19f:	add    al,bh
  40d1a1:	loopne 0x40d1a3
  40d1a3:	add    BYTE PTR [rax],al
  40d1a5:	add    BYTE PTR [rax],al
  40d1a7:	add    BYTE PTR [rcx+riz*8],bl
  40d1aa:	add    BYTE PTR [rax],al
  40d1ac:	add    BYTE PTR [rax],al
  40d1ae:	add    BYTE PTR [rax],al
  40d1b0:	cmp    al,0xe1
  40d1b2:	add    BYTE PTR [rax],al
  40d1b4:	add    BYTE PTR [rax],al
  40d1b6:	add    BYTE PTR [rax],al
  40d1b8:	pop    rsp
  40d1b9:	loope  0x40d1bb
  40d1bb:	add    BYTE PTR [rax],al
  40d1bd:	add    BYTE PTR [rax],al
  40d1bf:	add    BYTE PTR [rax-0x1f],dh
  40d1c2:	add    BYTE PTR [rax],al
  40d1c4:	add    BYTE PTR [rax],al
  40d1c6:	add    BYTE PTR [rax],al
  40d1c8:	nop
  40d1c9:	loope  0x40d1cb
  40d1cb:	add    BYTE PTR [rax],al
  40d1cd:	add    BYTE PTR [rax],al
  40d1cf:	add    BYTE PTR [rcx+riz*8+0x0],ch
  40d1d6:	add    BYTE PTR [rax],al
  40d1d8:	int3   
  40d1d9:	loope  0x40d1db
  40d1db:	add    BYTE PTR [rax],al
  40d1dd:	add    BYTE PTR [rax],al
  40d1df:	add    al,dh
  40d1e1:	loope  0x40d1e3
  40d1e3:	add    BYTE PTR [rax],al
  40d1e5:	add    BYTE PTR [rax],al
  40d1e7:	add    BYTE PTR [rdx+riz*8],cl
  40d1ea:	add    BYTE PTR [rax],al
  40d1ec:	add    BYTE PTR [rax],al
  40d1ee:	add    BYTE PTR [rax],al
  40d1f0:	sub    dl,ah
  40d1f2:	add    BYTE PTR [rax],al
  40d1f4:	add    BYTE PTR [rax],al
  40d1f6:	add    BYTE PTR [rax],al
  40d1f8:	rex.R loop 0x40d1fb
  40d1fb:	add    BYTE PTR [rax],al
  40d1fd:	add    BYTE PTR [rax],al
  40d1ff:	add    BYTE PTR [rax-0x1e],ah
  40d202:	add    BYTE PTR [rax],al
  40d204:	add    BYTE PTR [rax],al
  40d206:	add    BYTE PTR [rax],al
  40d208:	mov    edx,fs
  40d20a:	add    BYTE PTR [rax],al
  40d20c:	add    BYTE PTR [rax],al
  40d20e:	add    BYTE PTR [rax],al
  40d210:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40d211:	loop   0x40d213
  40d213:	add    BYTE PTR [rax],al
  40d215:	add    BYTE PTR [rax],al
  40d217:	add    al,al
  40d219:	loop   0x40d21b
  40d21b:	add    BYTE PTR [rax],al
  40d21d:	add    BYTE PTR [rax],al
  40d21f:	add    al,bl
  40d221:	loop   0x40d223
  40d223:	add    BYTE PTR [rax],al
  40d225:	add    BYTE PTR [rax],al
  40d227:	add    ah,ch
  40d229:	loop   0x40d22b
  40d22b:	add    BYTE PTR [rax],al
  40d22d:	add    BYTE PTR [rax],al
  40d22f:	add    BYTE PTR [rax],al
  40d231:	jrcxz  0x40d233
  40d233:	add    BYTE PTR [rax],al
  40d235:	add    BYTE PTR [rax],al
  40d237:	add    BYTE PTR [rax],bl
  40d239:	jrcxz  0x40d23b
  40d23b:	add    BYTE PTR [rax],al
  40d23d:	add    BYTE PTR [rax],al
  40d23f:	add    BYTE PTR [rbx+riz*8+0x0],al
  40d243:	add    BYTE PTR [rax],al
  40d245:	add    BYTE PTR [rax],al
  40d247:	add    BYTE PTR [rax-0x1d],bl
  40d24a:	add    BYTE PTR [rax],al
  40d24c:	add    BYTE PTR [rax],al
  40d24e:	add    BYTE PTR [rax],al
  40d250:	jo     0x40d235
  40d252:	add    BYTE PTR [rax],al
  40d254:	add    BYTE PTR [rax],al
  40d256:	add    BYTE PTR [rax],al
  40d258:	and    bl,0x0
  40d25b:	add    BYTE PTR [rax],al
  40d25d:	add    BYTE PTR [rax],al
  40d25f:	add    BYTE PTR [rax+0xe3],bl
	...
  40d26d:	add    BYTE PTR [rax],al
  40d26f:	add    BYTE PTR [rbx+riz*8+0x0],dh
  40d276:	add    BYTE PTR [rax],al
  40d278:	fsubr  st(3),st
  40d27a:	add    BYTE PTR [rax],al
  40d27c:	add    BYTE PTR [rax],al
  40d27e:	add    BYTE PTR [rax],al
  40d280:	clc    
  40d281:	jrcxz  0x40d283
  40d283:	add    BYTE PTR [rax],al
  40d285:	add    BYTE PTR [rax],al
  40d287:	add    BYTE PTR [rax],ah
  40d289:	in     al,0x0
  40d28b:	add    BYTE PTR [rax],al
  40d28d:	add    BYTE PTR [rax],al
  40d28f:	add    BYTE PTR [rsp+riz*8],bh
	...
  40d29e:	add    BYTE PTR [rax],al
  40d2a0:	pop    rsp
  40d2a1:	in     al,0x0
  40d2a3:	add    BYTE PTR [rax],al
  40d2a5:	add    BYTE PTR [rax],al
  40d2a7:	add    BYTE PTR [rax-0x1c],dh
  40d2aa:	add    BYTE PTR [rax],al
  40d2ac:	add    BYTE PTR [rax],al
  40d2ae:	add    BYTE PTR [rax],al
  40d2b0:	and    ah,0x0
  40d2b3:	add    BYTE PTR [rax],al
  40d2b5:	add    BYTE PTR [rax],al
  40d2b7:	add    BYTE PTR [rax+0xe4],ah
  40d2bd:	add    BYTE PTR [rax],al
  40d2bf:	add    BYTE PTR [rax+0xe4],dh
  40d2c5:	add    BYTE PTR [rax],al
  40d2c7:	add    al,al
  40d2c9:	in     al,0x0
  40d2cb:	add    BYTE PTR [rax],al
  40d2cd:	add    BYTE PTR [rax],al
  40d2cf:	add    al,bl
  40d2d1:	in     al,0x0
  40d2d3:	add    BYTE PTR [rax],al
  40d2d5:	add    BYTE PTR [rax],al
  40d2d7:	add    ah,dh
  40d2d9:	in     al,0x0
  40d2db:	add    BYTE PTR [rax],al
  40d2dd:	add    BYTE PTR [rax],al
  40d2df:	add    BYTE PTR [riz*8+0x0],dl
  40d2e6:	add    BYTE PTR [rax],al
  40d2e8:	cmp    ch,ah
  40d2ea:	add    BYTE PTR [rax],al
  40d2ec:	add    BYTE PTR [rax],al
  40d2ee:	add    BYTE PTR [rax],al
  40d2f0:	push   rax
  40d2f1:	in     eax,0x0
  40d2f3:	add    BYTE PTR [rax],al
  40d2f5:	add    BYTE PTR [rax],al
  40d2f7:	add    BYTE PTR [rbp+riz*8+0x0],ah
  40d2fb:	add    BYTE PTR [rax],al
  40d2fd:	add    BYTE PTR [rax],al
  40d2ff:	add    BYTE PTR [rbp+riz*8+0x0],al
  40d306:	add    BYTE PTR [rax],al
  40d308:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40d309:	in     eax,0x0
  40d30b:	add    BYTE PTR [rax],al
  40d30d:	add    BYTE PTR [rax],al
  40d30f:	add    BYTE PTR [rbp+riz*8+0x0],dh
  40d316:	add    BYTE PTR [rax],al
  40d318:	(bad)  
  40d319:	in     eax,0x0
  40d31b:	add    BYTE PTR [rax],al
  40d31d:	add    BYTE PTR [rax],al
  40d31f:	add    al,ch
  40d321:	in     eax,0x0
  40d323:	add    BYTE PTR [rax],al
  40d325:	add    BYTE PTR [rax],al
  40d327:	add    BYTE PTR [rax],cl
  40d329:	out    0x0,al
  40d32b:	add    BYTE PTR [rax],al
  40d32d:	add    BYTE PTR [rax],al
  40d32f:	add    BYTE PTR [rsi+riz*8],ah
  40d332:	add    BYTE PTR [rax],al
  40d334:	add    BYTE PTR [rax],al
  40d336:	add    BYTE PTR [rax],al
  40d338:	out    0x0,al
  40d33b:	add    BYTE PTR [rax],al
  40d33d:	add    BYTE PTR [rax],al
  40d33f:	add    BYTE PTR [rsi+riz*8+0x0],bl
  40d343:	add    BYTE PTR [rax],al
  40d345:	add    BYTE PTR [rax],al
  40d347:	add    BYTE PTR [rax-0x1a],dh
  40d34a:	add    BYTE PTR [rax],al
  40d34c:	add    BYTE PTR [rax],al
  40d34e:	add    BYTE PTR [rax],al
  40d350:	test   dh,ah
  40d352:	add    BYTE PTR [rax],al
  40d354:	add    BYTE PTR [rax],al
  40d356:	add    BYTE PTR [rax],al
  40d358:	xchg   esp,eax
  40d359:	out    0x0,al
  40d35b:	add    BYTE PTR [rax],al
  40d35d:	add    BYTE PTR [rax],al
  40d35f:	add    BYTE PTR [rsi+riz*8+0x0],ah
  40d366:	add    BYTE PTR [rax],al
  40d368:	mov    ah,0xe6
  40d36a:	add    BYTE PTR [rax],al
  40d36c:	add    BYTE PTR [rax],al
  40d36e:	add    BYTE PTR [rax],al
  40d370:	(bad)  
  40d371:	out    0x0,al
  40d373:	add    BYTE PTR [rax],al
  40d375:	add    BYTE PTR [rax],al
  40d377:	add    al,bl
  40d379:	out    0x0,al
  40d37b:	add    BYTE PTR [rax],al
  40d37d:	add    BYTE PTR [rax],al
  40d37f:	add    al,dh
  40d381:	out    0x0,al
  40d383:	add    BYTE PTR [rax],al
  40d385:	add    BYTE PTR [rax],al
  40d387:	add    BYTE PTR [rdi+riz*8],al
  40d38a:	add    BYTE PTR [rax],al
  40d38c:	add    BYTE PTR [rax],al
  40d38e:	add    BYTE PTR [rax],al
  40d390:	sbb    al,0xe7
  40d392:	add    BYTE PTR [rax],al
  40d394:	add    BYTE PTR [rax],al
  40d396:	add    BYTE PTR [rax],al
  40d398:	xor    al,0xe7
  40d39a:	add    BYTE PTR [rax],al
  40d39c:	add    BYTE PTR [rax],al
  40d39e:	add    BYTE PTR [rax],al
  40d3a0:	rex.R out 0x0,eax
  40d3a3:	add    BYTE PTR [rax],al
  40d3a5:	add    BYTE PTR [rax],al
  40d3a7:	add    BYTE PTR [rdi+riz*8+0x0],bl
  40d3ab:	add    BYTE PTR [rax],al
  40d3ad:	add    BYTE PTR [rax],al
  40d3af:	add    BYTE PTR [rdi+riz*8+0x0],dh
  40d3b3:	add    BYTE PTR [rax],al
  40d3b5:	add    BYTE PTR [rax],al
  40d3b7:	add    BYTE PTR [rax+0xe7],dl
  40d3bd:	add    BYTE PTR [rax],al
  40d3bf:	add    BYTE PTR [rdi+riz*8+0x0],dh
  40d3c6:	add    BYTE PTR [rax],al
  40d3c8:	shl    bh,1
	...
  40d3d6:	add    BYTE PTR [rax],al
  40d3d8:	in     al,0xe7
  40d3da:	add    BYTE PTR [rax],al
  40d3dc:	add    BYTE PTR [rax],al
  40d3de:	add    BYTE PTR [rax],al
  40d3e0:	cld    
  40d3e1:	out    0x0,eax
  40d3e3:	add    BYTE PTR [rax],al
  40d3e5:	add    BYTE PTR [rax],al
  40d3e7:	add    BYTE PTR [rax],bl
  40d3e9:	call   0x40d3ee
  40d3ee:	add    BYTE PTR [rax],al
  40d3f0:	xor    al,0xe8
  40d3f2:	add    BYTE PTR [rax],al
  40d3f4:	add    BYTE PTR [rax],al
  40d3f6:	add    BYTE PTR [rax],al
  40d3f8:	rex call 0x40d3fe
  40d3fe:	add    BYTE PTR [rax],al
  40d400:	rex.WR call 0x40d406
  40d406:	add    BYTE PTR [rax],al
  40d408:	pop    rsp
  40d409:	call   0x40d40e
  40d40e:	add    BYTE PTR [rax],al
  40d410:	jl     0x40d3fa
  40d412:	add    BYTE PTR [rax],al
  40d414:	add    BYTE PTR [rax],al
  40d416:	add    BYTE PTR [rax],al
  40d418:	movabs al,ds:0xb8000000000000e8
  40d421:	call   0x40d426
  40d426:	add    BYTE PTR [rax],al
  40d428:	shr    al,1
  40d42a:	add    BYTE PTR [rax],al
  40d42c:	add    BYTE PTR [rax],al
  40d42e:	add    BYTE PTR [rax],al
  40d430:	in     al,dx
  40d431:	call   0x40d436
  40d436:	add    BYTE PTR [rax],al
  40d438:	add    al,0xe9
  40d43a:	add    BYTE PTR [rax],al
  40d43c:	add    BYTE PTR [rax],al
  40d43e:	add    BYTE PTR [rax],al
  40d440:	and    al,0xe9
  40d442:	add    BYTE PTR [rax],al
  40d444:	add    BYTE PTR [rax],al
  40d446:	add    BYTE PTR [rax],al
  40d448:	cmp    al,0xe9
  40d44a:	add    BYTE PTR [rax],al
  40d44c:	add    BYTE PTR [rax],al
  40d44e:	add    BYTE PTR [rax],al
  40d450:	rex.WR jmp 0x40d456
  40d456:	add    BYTE PTR [rax],al
  40d458:	pop    rax
  40d459:	jmp    0x40d45e
  40d45e:	add    BYTE PTR [rax],al
  40d460:	push   0xe9
  40d465:	add    BYTE PTR [rax],al
  40d467:	add    BYTE PTR [rax-0x17],bh
  40d46a:	add    BYTE PTR [rax],al
  40d46c:	add    BYTE PTR [rax],al
  40d46e:	add    BYTE PTR [rax],al
  40d470:	mov    cl,ch
  40d472:	add    BYTE PTR [rax],al
  40d474:	add    BYTE PTR [rax],al
  40d476:	add    BYTE PTR [rax],al
  40d478:	cwde   
  40d479:	jmp    0x40d47e
  40d47e:	add    BYTE PTR [rax],al
  40d480:	mov    eax,0xe9
  40d485:	add    BYTE PTR [rax],al
  40d487:	add    ah,cl
  40d489:	jmp    0x40d48e
  40d48e:	add    BYTE PTR [rax],al
  40d490:	loopne 0x40d47b
  40d492:	add    BYTE PTR [rax],al
  40d494:	add    BYTE PTR [rax],al
  40d496:	add    BYTE PTR [rax],al
  40d498:	in     al,dx
  40d499:	jmp    0x40d49e
  40d49e:	add    BYTE PTR [rax],al
  40d4a0:	add    dl,ch
  40d4a2:	add    BYTE PTR [rax],al
  40d4a4:	add    BYTE PTR [rax],al
  40d4a6:	add    BYTE PTR [rax],al
  40d4a8:	adc    al,0xea
  40d4aa:	add    BYTE PTR [rax],al
  40d4ac:	add    BYTE PTR [rax],al
  40d4ae:	add    BYTE PTR [rax],al
  40d4b0:	and    al,0xea
  40d4b2:	add    BYTE PTR [rax],al
  40d4b4:	add    BYTE PTR [rax],al
  40d4b6:	add    BYTE PTR [rax],al
  40d4b8:	cmp    dl,ch
  40d4ba:	add    BYTE PTR [rax],al
  40d4bc:	add    BYTE PTR [rax],al
  40d4be:	add    BYTE PTR [rax],al
  40d4c0:	push   rsp
  40d4c1:	(bad)  
  40d4c2:	add    BYTE PTR [rax],al
  40d4c4:	add    BYTE PTR [rax],al
  40d4c6:	add    BYTE PTR [rax],al
  40d4c8:	fs (bad) 
  40d4ca:	add    BYTE PTR [rax],al
  40d4cc:	add    BYTE PTR [rax],al
  40d4ce:	add    BYTE PTR [rax],al
  40d4d0:	js     0x40d4bc
  40d4d2:	add    BYTE PTR [rax],al
  40d4d4:	add    BYTE PTR [rax],al
  40d4d6:	add    BYTE PTR [rax],al
  40d4d8:	mov    dl,ch
	...
  40d4e6:	add    BYTE PTR [rax],al
  40d4e8:	pushf  
  40d4e9:	(bad)  
	...
  40d4f6:	add    BYTE PTR [rax],al
  40d4f8:	mov    al,0xea
  40d4fa:	add    BYTE PTR [rax],al
  40d4fc:	add    BYTE PTR [rax],al
  40d4fe:	add    BYTE PTR [rax],al
  40d500:	enter  0xea,0x0
  40d504:	add    BYTE PTR [rax],al
  40d506:	add    BYTE PTR [rax],al
  40d508:	loopne 0x40d4f4
  40d50a:	add    BYTE PTR [rax],al
  40d50c:	add    BYTE PTR [rax],al
  40d50e:	add    BYTE PTR [rax],al
  40d510:	hlt    
  40d511:	(bad)  
  40d512:	add    BYTE PTR [rax],al
  40d514:	add    BYTE PTR [rax],al
  40d516:	add    BYTE PTR [rax],al
  40d518:	or     ch,bl
  40d51a:	add    BYTE PTR [rax],al
  40d51c:	add    BYTE PTR [rax],al
  40d51e:	add    BYTE PTR [rax],al
  40d520:	and    bl,ch
  40d522:	add    BYTE PTR [rax],al
  40d524:	add    BYTE PTR [rax],al
  40d526:	add    BYTE PTR [rax],al
  40d528:	xor    bl,ch
  40d52a:	add    BYTE PTR [rax],al
  40d52c:	add    BYTE PTR [rax],al
  40d52e:	add    BYTE PTR [rax],al
  40d530:	rex.X jmp 0x40d533
  40d533:	add    BYTE PTR [rax],al
  40d535:	add    BYTE PTR [rax],al
  40d537:	add    BYTE PTR [rbx+rbp*8+0x0],bl
  40d53b:	add    BYTE PTR [rax],al
  40d53d:	add    BYTE PTR [rax],al
  40d53f:	add    BYTE PTR [rbx+rbp*8+0x0],ch
  40d543:	add    BYTE PTR [rax],al
  40d545:	add    BYTE PTR [rax],al
  40d547:	add    BYTE PTR [rax+0xeb],cl
  40d54d:	add    BYTE PTR [rax],al
  40d54f:	add    BYTE PTR [rax+0xeb],ah
  40d555:	add    BYTE PTR [rax],al
  40d557:	add    BYTE PTR [rdx+0xeb],bh
  40d55d:	add    BYTE PTR [rax],al
  40d55f:	add    al,dl
  40d561:	jmp    0x40d563
  40d563:	add    BYTE PTR [rax],al
  40d565:	add    BYTE PTR [rax],al
  40d567:	add    ah,ah
  40d569:	jmp    0x40d56b
  40d56b:	add    BYTE PTR [rax],al
  40d56d:	add    BYTE PTR [rax],al
  40d56f:	add    dh,bh
  40d571:	jmp    0x40d573
  40d573:	add    BYTE PTR [rax],al
  40d575:	add    BYTE PTR [rax],al
  40d577:	add    BYTE PTR [rdx],dl
  40d579:	in     al,dx
  40d57a:	add    BYTE PTR [rax],al
  40d57c:	add    BYTE PTR [rax],al
  40d57e:	add    BYTE PTR [rax],al
  40d580:	xor    ah,ch
  40d582:	add    BYTE PTR [rax],al
  40d584:	add    BYTE PTR [rax],al
  40d586:	add    BYTE PTR [rax],al
  40d588:	cmp    ah,ch
  40d58a:	add    BYTE PTR [rax],al
  40d58c:	add    BYTE PTR [rax],al
  40d58e:	add    BYTE PTR [rax],al
  40d590:	rex.WR in al,dx
  40d592:	add    BYTE PTR [rax],al
  40d594:	add    BYTE PTR [rax],al
  40d596:	add    BYTE PTR [rax],al
  40d598:	pop    rdx
  40d599:	in     al,dx
  40d59a:	add    BYTE PTR [rax],al
  40d59c:	add    BYTE PTR [rax],al
  40d59e:	add    BYTE PTR [rax],al
  40d5a0:	jbe    0x40d58e
  40d5a2:	add    BYTE PTR [rax],al
  40d5a4:	add    BYTE PTR [rax],al
  40d5a6:	add    BYTE PTR [rax],al
  40d5a8:	mov    ah,ch
	...
  40d5b6:	add    BYTE PTR [rax],al
  40d5b8:	cwde   
  40d5b9:	in     al,dx
  40d5ba:	add    BYTE PTR [rax],al
  40d5bc:	add    BYTE PTR [rax],al
  40d5be:	add    BYTE PTR [rax],al
  40d5c0:	mov    al,0xec
  40d5c2:	add    BYTE PTR [rax],al
  40d5c4:	add    BYTE PTR [rax],al
  40d5c6:	add    BYTE PTR [rax],al
  40d5c8:	mov    esi,0xec
  40d5cd:	add    BYTE PTR [rax],al
  40d5cf:	add    dh,cl
  40d5d1:	in     al,dx
  40d5d2:	add    BYTE PTR [rax],al
  40d5d4:	add    BYTE PTR [rax],al
  40d5d6:	add    BYTE PTR [rax],al
  40d5d8:	(bad)  
  40d5da:	add    BYTE PTR [rax],al
  40d5dc:	add    BYTE PTR [rax],al
  40d5de:	add    BYTE PTR [rax],al
  40d5e0:	call   0x40d6d1
  40d5e5:	add    BYTE PTR [rax],al
  40d5e7:	add    al,bh
  40d5e9:	in     al,dx
  40d5ea:	add    BYTE PTR [rax],al
  40d5ec:	add    BYTE PTR [rax],al
  40d5ee:	add    BYTE PTR [rax],al
  40d5f0:	or     ch,ch
  40d5f2:	add    BYTE PTR [rax],al
  40d5f4:	add    BYTE PTR [rax],al
  40d5f6:	add    BYTE PTR [rax],al
  40d5f8:	(bad)  
  40d5f9:	in     eax,dx
  40d5fa:	add    BYTE PTR [rax],al
  40d5fc:	add    BYTE PTR [rax],al
  40d5fe:	add    BYTE PTR [rax],al
  40d600:	sub    ch,ch
  40d602:	add    BYTE PTR [rax],al
  40d604:	add    BYTE PTR [rax],al
  40d606:	add    BYTE PTR [rax],al
  40d608:	ss in  eax,dx
  40d60a:	add    BYTE PTR [rax],al
  40d60c:	add    BYTE PTR [rax],al
  40d60e:	add    BYTE PTR [rax],al
  40d610:	rex in eax,dx
  40d612:	add    BYTE PTR [rax],al
  40d614:	add    BYTE PTR [rax],al
  40d616:	add    BYTE PTR [rax],al
  40d618:	rex.WX in eax,dx
  40d61a:	add    BYTE PTR [rax],al
  40d61c:	add    BYTE PTR [rax],al
  40d61e:	add    BYTE PTR [rax],al
  40d620:	push   rsp
  40d621:	in     eax,dx
  40d622:	add    BYTE PTR [rax],al
  40d624:	add    BYTE PTR [rax],al
  40d626:	add    BYTE PTR [rax],al
  40d628:	(bad)  
  40d629:	in     eax,dx
  40d62a:	add    BYTE PTR [rax],al
  40d62c:	add    BYTE PTR [rax],al
  40d62e:	add    BYTE PTR [rax],al
  40d630:	push   0xed
  40d635:	add    BYTE PTR [rax],al
  40d637:	add    BYTE PTR [rdx-0x13],dh
  40d63a:	add    BYTE PTR [rax],al
  40d63c:	add    BYTE PTR [rax],al
  40d63e:	add    BYTE PTR [rax],al
  40d640:	jle    0x40d62f
  40d642:	add    BYTE PTR [rax],al
  40d644:	add    BYTE PTR [rax],al
  40d646:	add    BYTE PTR [rax],al
  40d648:	mov    ch,ch
  40d64a:	add    BYTE PTR [rax],al
  40d64c:	add    BYTE PTR [rax],al
  40d64e:	add    BYTE PTR [rax],al
  40d650:	nop
  40d651:	in     eax,dx
  40d652:	add    BYTE PTR [rax],al
  40d654:	add    BYTE PTR [rax],al
  40d656:	add    BYTE PTR [rax],al
  40d658:	(bad)  
  40d659:	in     eax,dx
  40d65a:	add    BYTE PTR [rax],al
  40d65c:	add    BYTE PTR [rax],al
  40d65e:	add    BYTE PTR [rax],al
  40d660:	movabs ds:0xac000000000000ed,al
  40d669:	in     eax,dx
  40d66a:	add    BYTE PTR [rax],al
  40d66c:	add    BYTE PTR [rax],al
  40d66e:	add    BYTE PTR [rax],al
  40d670:	mov    dh,0xed
  40d672:	add    BYTE PTR [rax],al
  40d674:	add    BYTE PTR [rax],al
  40d676:	add    BYTE PTR [rax],al
  40d678:	mov    esi,0xed
  40d67d:	add    BYTE PTR [rax],al
  40d67f:	add    al,cl
  40d681:	in     eax,dx
  40d682:	add    BYTE PTR [rax],al
  40d684:	add    BYTE PTR [rax],al
  40d686:	add    BYTE PTR [rax],al
  40d688:	shr    ch,cl
  40d68a:	add    BYTE PTR [rax],al
  40d68c:	add    BYTE PTR [rax],al
  40d68e:	add    BYTE PTR [rax],al
  40d690:	fsub   st(5),st
  40d692:	add    BYTE PTR [rax],al
  40d694:	add    BYTE PTR [rax],al
  40d696:	add    BYTE PTR [rax],al
  40d698:	call   0x40d78a
  40d69d:	add    BYTE PTR [rax],al
  40d69f:	add    dl,dh
  40d6a1:	in     eax,dx
  40d6a2:	add    BYTE PTR [rax],al
  40d6a4:	add    BYTE PTR [rax],al
  40d6a6:	add    BYTE PTR [rax],al
  40d6a8:	cld    
  40d6a9:	in     eax,dx
  40d6aa:	add    BYTE PTR [rax],al
  40d6ac:	add    BYTE PTR [rax],al
  40d6ae:	add    BYTE PTR [rax],al
  40d6b0:	(bad)  
  40d6b1:	out    dx,al
  40d6b2:	add    BYTE PTR [rax],al
  40d6b4:	add    BYTE PTR [rax],al
  40d6b6:	add    BYTE PTR [rax],al
  40d6b8:	adc    dh,ch
  40d6ba:	add    BYTE PTR [rax],al
  40d6bc:	add    BYTE PTR [rax],al
  40d6be:	add    BYTE PTR [rax],al
  40d6c0:	sbb    ch,dh
  40d6c2:	add    BYTE PTR [rax],al
  40d6c4:	add    BYTE PTR [rax],al
  40d6c6:	add    BYTE PTR [rax],al
  40d6c8:	es out dx,al
	...
  40d6d6:	add    BYTE PTR [rax],al
  40d6d8:	adc    ch,bl
  40d6da:	add    BYTE PTR [rax],al
  40d6dc:	add    BYTE PTR [rax],al
  40d6de:	add    BYTE PTR [rax],al
  40d6e0:	sub    al,0xdd
  40d6e2:	add    BYTE PTR [rax],al
  40d6e4:	add    BYTE PTR [rax],al
  40d6e6:	add    BYTE PTR [rax],al
  40d6e8:	rex fld QWORD PTR [rax]
  40d6eb:	add    BYTE PTR [rax],al
  40d6ed:	add    BYTE PTR [rax],al
  40d6ef:	add    BYTE PTR [rax-0x23],ah
  40d6f2:	add    BYTE PTR [rax],al
  40d6f4:	add    BYTE PTR [rax],al
  40d6f6:	add    BYTE PTR [rax],al
  40d6f8:	jl     0x40d6d7
  40d6fa:	add    BYTE PTR [rax],al
  40d6fc:	add    BYTE PTR [rax],al
  40d6fe:	add    BYTE PTR [rax],al
  40d700:	cwde   
  40d701:	fld    QWORD PTR [rax]
  40d703:	add    BYTE PTR [rax],al
  40d705:	add    BYTE PTR [rax],al
  40d707:	add    BYTE PTR [rax+0xdd],bh
  40d70d:	add    BYTE PTR [rax],al
  40d70f:	add    ah,bl
  40d711:	fld    QWORD PTR [rax]
  40d713:	add    BYTE PTR [rax],al
  40d715:	add    BYTE PTR [rax],al
  40d717:	add    BYTE PTR [rax],al
  40d719:	fiadd  WORD PTR [rax]
  40d71b:	add    BYTE PTR [rax],al
  40d71d:	add    BYTE PTR [rax],al
  40d71f:	add    BYTE PTR [rax],ah
  40d721:	fiadd  WORD PTR [rax]
  40d723:	add    BYTE PTR [rax],al
  40d725:	add    BYTE PTR [rax],al
  40d727:	add    BYTE PTR [rsi+rbx*8],bh
  40d72a:	add    BYTE PTR [rax],al
  40d72c:	add    BYTE PTR [rax],al
  40d72e:	add    BYTE PTR [rax],al
  40d730:	pop    rsp
  40d731:	fiadd  WORD PTR [rax]
  40d733:	add    BYTE PTR [rax],al
  40d735:	add    BYTE PTR [rax],al
  40d737:	add    BYTE PTR [rsi+rbx*8+0x0],bh
  40d73b:	add    BYTE PTR [rax],al
  40d73d:	add    BYTE PTR [rax],al
  40d73f:	add    BYTE PTR [rsi+rbx*8+0x0],bl
  40d746:	add    BYTE PTR [rax],al
  40d748:	(bad)  
  40d749:	fiadd  WORD PTR [rax]
  40d74b:	add    BYTE PTR [rax],al
  40d74d:	add    BYTE PTR [rax],al
  40d74f:	add    al,ch
  40d751:	fiadd  WORD PTR [rax]
  40d753:	add    BYTE PTR [rax],al
  40d755:	add    BYTE PTR [rax],al
  40d757:	add    BYTE PTR [rdi+rbx*8],cl
  40d75a:	add    BYTE PTR [rax],al
  40d75c:	add    BYTE PTR [rax],al
  40d75e:	add    BYTE PTR [rax],al
  40d760:	xor    al,0xdf
  40d762:	add    BYTE PTR [rax],al
  40d764:	add    BYTE PTR [rax],al
  40d766:	add    BYTE PTR [rax],al
  40d768:	push   rsp
  40d769:	fild   WORD PTR [rax]
  40d76b:	add    BYTE PTR [rax],al
  40d76d:	add    BYTE PTR [rax],al
  40d76f:	add    BYTE PTR [rax-0x21],dh
  40d772:	add    BYTE PTR [rax],al
  40d774:	add    BYTE PTR [rax],al
  40d776:	add    BYTE PTR [rax],al
  40d778:	nop
  40d779:	fild   WORD PTR [rax]
  40d77b:	add    BYTE PTR [rax],al
  40d77d:	add    BYTE PTR [rax],al
  40d77f:	add    BYTE PTR [rdi+rbx*8+0x0],ch
  40d786:	add    BYTE PTR [rax],al
  40d788:	int3   
  40d789:	fild   WORD PTR [rax]
  40d78b:	add    BYTE PTR [rax],al
  40d78d:	add    BYTE PTR [rax],al
  40d78f:	add    ah,ch
  40d791:	fild   WORD PTR [rax]
  40d793:	add    BYTE PTR [rax],al
  40d795:	add    BYTE PTR [rax],al
  40d797:	add    BYTE PTR [rax+riz*8],cl
  40d79a:	add    BYTE PTR [rax],al
  40d79c:	add    BYTE PTR [rax],al
  40d79e:	add    BYTE PTR [rax],al
  40d7a0:	sub    al,ah
  40d7a2:	add    BYTE PTR [rax],al
  40d7a4:	add    BYTE PTR [rax],al
  40d7a6:	add    BYTE PTR [rax],al
  40d7a8:	rex.R loopne 0x40d7ab
  40d7ab:	add    BYTE PTR [rax],al
  40d7ad:	add    BYTE PTR [rax],al
  40d7af:	add    BYTE PTR [rax-0x20],ch
  40d7b2:	add    BYTE PTR [rax],al
  40d7b4:	add    BYTE PTR [rax],al
  40d7b6:	add    BYTE PTR [rax],al
  40d7b8:	test   al,ah
  40d7ba:	add    BYTE PTR [rax],al
  40d7bc:	add    BYTE PTR [rax],al
  40d7be:	add    BYTE PTR [rax],al
  40d7c0:	pushf  
  40d7c1:	loopne 0x40d7c3
  40d7c3:	add    BYTE PTR [rax],al
  40d7c5:	add    BYTE PTR [rax],al
  40d7c7:	add    al,al
  40d7c9:	loopne 0x40d7cb
  40d7cb:	add    BYTE PTR [rax],al
  40d7cd:	add    BYTE PTR [rax],al
  40d7cf:	add    ah,bl
  40d7d1:	loopne 0x40d7d3
  40d7d3:	add    BYTE PTR [rax],al
  40d7d5:	add    BYTE PTR [rax],al
  40d7d7:	add    al,bh
  40d7d9:	loopne 0x40d7db
  40d7db:	add    BYTE PTR [rax],al
  40d7dd:	add    BYTE PTR [rax],al
  40d7df:	add    BYTE PTR [rcx+riz*8],bl
  40d7e2:	add    BYTE PTR [rax],al
  40d7e4:	add    BYTE PTR [rax],al
  40d7e6:	add    BYTE PTR [rax],al
  40d7e8:	cmp    al,0xe1
  40d7ea:	add    BYTE PTR [rax],al
  40d7ec:	add    BYTE PTR [rax],al
  40d7ee:	add    BYTE PTR [rax],al
  40d7f0:	pop    rsp
  40d7f1:	loope  0x40d7f3
  40d7f3:	add    BYTE PTR [rax],al
  40d7f5:	add    BYTE PTR [rax],al
  40d7f7:	add    BYTE PTR [rax-0x1f],dh
  40d7fa:	add    BYTE PTR [rax],al
  40d7fc:	add    BYTE PTR [rax],al
  40d7fe:	add    BYTE PTR [rax],al
  40d800:	nop
  40d801:	loope  0x40d803
  40d803:	add    BYTE PTR [rax],al
  40d805:	add    BYTE PTR [rax],al
  40d807:	add    BYTE PTR [rcx+riz*8+0x0],ch
  40d80e:	add    BYTE PTR [rax],al
  40d810:	int3   
  40d811:	loope  0x40d813
  40d813:	add    BYTE PTR [rax],al
  40d815:	add    BYTE PTR [rax],al
  40d817:	add    al,dh
  40d819:	loope  0x40d81b
  40d81b:	add    BYTE PTR [rax],al
  40d81d:	add    BYTE PTR [rax],al
  40d81f:	add    BYTE PTR [rdx+riz*8],cl
  40d822:	add    BYTE PTR [rax],al
  40d824:	add    BYTE PTR [rax],al
  40d826:	add    BYTE PTR [rax],al
  40d828:	sub    dl,ah
  40d82a:	add    BYTE PTR [rax],al
  40d82c:	add    BYTE PTR [rax],al
  40d82e:	add    BYTE PTR [rax],al
  40d830:	rex.R loop 0x40d833
  40d833:	add    BYTE PTR [rax],al
  40d835:	add    BYTE PTR [rax],al
  40d837:	add    BYTE PTR [rax-0x1e],ah
  40d83a:	add    BYTE PTR [rax],al
  40d83c:	add    BYTE PTR [rax],al
  40d83e:	add    BYTE PTR [rax],al
  40d840:	mov    edx,fs
  40d842:	add    BYTE PTR [rax],al
  40d844:	add    BYTE PTR [rax],al
  40d846:	add    BYTE PTR [rax],al
  40d848:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40d849:	loop   0x40d84b
  40d84b:	add    BYTE PTR [rax],al
  40d84d:	add    BYTE PTR [rax],al
  40d84f:	add    al,al
  40d851:	loop   0x40d853
  40d853:	add    BYTE PTR [rax],al
  40d855:	add    BYTE PTR [rax],al
  40d857:	add    al,bl
  40d859:	loop   0x40d85b
  40d85b:	add    BYTE PTR [rax],al
  40d85d:	add    BYTE PTR [rax],al
  40d85f:	add    ah,ch
  40d861:	loop   0x40d863
  40d863:	add    BYTE PTR [rax],al
  40d865:	add    BYTE PTR [rax],al
  40d867:	add    BYTE PTR [rax],al
  40d869:	jrcxz  0x40d86b
  40d86b:	add    BYTE PTR [rax],al
  40d86d:	add    BYTE PTR [rax],al
  40d86f:	add    BYTE PTR [rax],bl
  40d871:	jrcxz  0x40d873
  40d873:	add    BYTE PTR [rax],al
  40d875:	add    BYTE PTR [rax],al
  40d877:	add    BYTE PTR [rbx+riz*8+0x0],al
  40d87b:	add    BYTE PTR [rax],al
  40d87d:	add    BYTE PTR [rax],al
  40d87f:	add    BYTE PTR [rax-0x1d],bl
  40d882:	add    BYTE PTR [rax],al
  40d884:	add    BYTE PTR [rax],al
  40d886:	add    BYTE PTR [rax],al
  40d888:	jo     0x40d86d
  40d88a:	add    BYTE PTR [rax],al
  40d88c:	add    BYTE PTR [rax],al
  40d88e:	add    BYTE PTR [rax],al
  40d890:	and    bl,0x0
  40d893:	add    BYTE PTR [rax],al
  40d895:	add    BYTE PTR [rax],al
  40d897:	add    BYTE PTR [rax+0xe3],bl
	...
  40d8a5:	add    BYTE PTR [rax],al
  40d8a7:	add    BYTE PTR [rbx+riz*8+0x0],dh
  40d8ae:	add    BYTE PTR [rax],al
  40d8b0:	fsubr  st(3),st
  40d8b2:	add    BYTE PTR [rax],al
  40d8b4:	add    BYTE PTR [rax],al
  40d8b6:	add    BYTE PTR [rax],al
  40d8b8:	clc    
  40d8b9:	jrcxz  0x40d8bb
  40d8bb:	add    BYTE PTR [rax],al
  40d8bd:	add    BYTE PTR [rax],al
  40d8bf:	add    BYTE PTR [rax],ah
  40d8c1:	in     al,0x0
  40d8c3:	add    BYTE PTR [rax],al
  40d8c5:	add    BYTE PTR [rax],al
  40d8c7:	add    BYTE PTR [rsp+riz*8],bh
	...
  40d8d6:	add    BYTE PTR [rax],al
  40d8d8:	pop    rsp
  40d8d9:	in     al,0x0
  40d8db:	add    BYTE PTR [rax],al
  40d8dd:	add    BYTE PTR [rax],al
  40d8df:	add    BYTE PTR [rax-0x1c],dh
  40d8e2:	add    BYTE PTR [rax],al
  40d8e4:	add    BYTE PTR [rax],al
  40d8e6:	add    BYTE PTR [rax],al
  40d8e8:	and    ah,0x0
  40d8eb:	add    BYTE PTR [rax],al
  40d8ed:	add    BYTE PTR [rax],al
  40d8ef:	add    BYTE PTR [rax+0xe4],ah
  40d8f5:	add    BYTE PTR [rax],al
  40d8f7:	add    BYTE PTR [rax+0xe4],dh
  40d8fd:	add    BYTE PTR [rax],al
  40d8ff:	add    al,al
  40d901:	in     al,0x0
  40d903:	add    BYTE PTR [rax],al
  40d905:	add    BYTE PTR [rax],al
  40d907:	add    al,bl
  40d909:	in     al,0x0
  40d90b:	add    BYTE PTR [rax],al
  40d90d:	add    BYTE PTR [rax],al
  40d90f:	add    ah,dh
  40d911:	in     al,0x0
  40d913:	add    BYTE PTR [rax],al
  40d915:	add    BYTE PTR [rax],al
  40d917:	add    BYTE PTR [riz*8+0x0],dl
  40d91e:	add    BYTE PTR [rax],al
  40d920:	cmp    ch,ah
  40d922:	add    BYTE PTR [rax],al
  40d924:	add    BYTE PTR [rax],al
  40d926:	add    BYTE PTR [rax],al
  40d928:	push   rax
  40d929:	in     eax,0x0
  40d92b:	add    BYTE PTR [rax],al
  40d92d:	add    BYTE PTR [rax],al
  40d92f:	add    BYTE PTR [rbp+riz*8+0x0],ah
  40d933:	add    BYTE PTR [rax],al
  40d935:	add    BYTE PTR [rax],al
  40d937:	add    BYTE PTR [rbp+riz*8+0x0],al
  40d93e:	add    BYTE PTR [rax],al
  40d940:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40d941:	in     eax,0x0
  40d943:	add    BYTE PTR [rax],al
  40d945:	add    BYTE PTR [rax],al
  40d947:	add    BYTE PTR [rbp+riz*8+0x0],dh
  40d94e:	add    BYTE PTR [rax],al
  40d950:	(bad)  
  40d951:	in     eax,0x0
  40d953:	add    BYTE PTR [rax],al
  40d955:	add    BYTE PTR [rax],al
  40d957:	add    al,ch
  40d959:	in     eax,0x0
  40d95b:	add    BYTE PTR [rax],al
  40d95d:	add    BYTE PTR [rax],al
  40d95f:	add    BYTE PTR [rax],cl
  40d961:	out    0x0,al
  40d963:	add    BYTE PTR [rax],al
  40d965:	add    BYTE PTR [rax],al
  40d967:	add    BYTE PTR [rsi+riz*8],ah
  40d96a:	add    BYTE PTR [rax],al
  40d96c:	add    BYTE PTR [rax],al
  40d96e:	add    BYTE PTR [rax],al
  40d970:	out    0x0,al
  40d973:	add    BYTE PTR [rax],al
  40d975:	add    BYTE PTR [rax],al
  40d977:	add    BYTE PTR [rsi+riz*8+0x0],bl
  40d97b:	add    BYTE PTR [rax],al
  40d97d:	add    BYTE PTR [rax],al
  40d97f:	add    BYTE PTR [rax-0x1a],dh
  40d982:	add    BYTE PTR [rax],al
  40d984:	add    BYTE PTR [rax],al
  40d986:	add    BYTE PTR [rax],al
  40d988:	test   dh,ah
  40d98a:	add    BYTE PTR [rax],al
  40d98c:	add    BYTE PTR [rax],al
  40d98e:	add    BYTE PTR [rax],al
  40d990:	xchg   esp,eax
  40d991:	out    0x0,al
  40d993:	add    BYTE PTR [rax],al
  40d995:	add    BYTE PTR [rax],al
  40d997:	add    BYTE PTR [rsi+riz*8+0x0],ah
  40d99e:	add    BYTE PTR [rax],al
  40d9a0:	mov    ah,0xe6
  40d9a2:	add    BYTE PTR [rax],al
  40d9a4:	add    BYTE PTR [rax],al
  40d9a6:	add    BYTE PTR [rax],al
  40d9a8:	(bad)  
  40d9a9:	out    0x0,al
  40d9ab:	add    BYTE PTR [rax],al
  40d9ad:	add    BYTE PTR [rax],al
  40d9af:	add    al,bl
  40d9b1:	out    0x0,al
  40d9b3:	add    BYTE PTR [rax],al
  40d9b5:	add    BYTE PTR [rax],al
  40d9b7:	add    al,dh
  40d9b9:	out    0x0,al
  40d9bb:	add    BYTE PTR [rax],al
  40d9bd:	add    BYTE PTR [rax],al
  40d9bf:	add    BYTE PTR [rdi+riz*8],al
  40d9c2:	add    BYTE PTR [rax],al
  40d9c4:	add    BYTE PTR [rax],al
  40d9c6:	add    BYTE PTR [rax],al
  40d9c8:	sbb    al,0xe7
  40d9ca:	add    BYTE PTR [rax],al
  40d9cc:	add    BYTE PTR [rax],al
  40d9ce:	add    BYTE PTR [rax],al
  40d9d0:	xor    al,0xe7
  40d9d2:	add    BYTE PTR [rax],al
  40d9d4:	add    BYTE PTR [rax],al
  40d9d6:	add    BYTE PTR [rax],al
  40d9d8:	rex.R out 0x0,eax
  40d9db:	add    BYTE PTR [rax],al
  40d9dd:	add    BYTE PTR [rax],al
  40d9df:	add    BYTE PTR [rdi+riz*8+0x0],bl
  40d9e3:	add    BYTE PTR [rax],al
  40d9e5:	add    BYTE PTR [rax],al
  40d9e7:	add    BYTE PTR [rdi+riz*8+0x0],dh
  40d9eb:	add    BYTE PTR [rax],al
  40d9ed:	add    BYTE PTR [rax],al
  40d9ef:	add    BYTE PTR [rax+0xe7],dl
  40d9f5:	add    BYTE PTR [rax],al
  40d9f7:	add    BYTE PTR [rdi+riz*8+0x0],dh
  40d9fe:	add    BYTE PTR [rax],al
  40da00:	shl    bh,1
	...
  40da0e:	add    BYTE PTR [rax],al
  40da10:	in     al,0xe7
  40da12:	add    BYTE PTR [rax],al
  40da14:	add    BYTE PTR [rax],al
  40da16:	add    BYTE PTR [rax],al
  40da18:	cld    
  40da19:	out    0x0,eax
  40da1b:	add    BYTE PTR [rax],al
  40da1d:	add    BYTE PTR [rax],al
  40da1f:	add    BYTE PTR [rax],bl
  40da21:	call   0x40da26
  40da26:	add    BYTE PTR [rax],al
  40da28:	xor    al,0xe8
  40da2a:	add    BYTE PTR [rax],al
  40da2c:	add    BYTE PTR [rax],al
  40da2e:	add    BYTE PTR [rax],al
  40da30:	rex call 0x40da36
  40da36:	add    BYTE PTR [rax],al
  40da38:	rex.WR call 0x40da3e
  40da3e:	add    BYTE PTR [rax],al
  40da40:	pop    rsp
  40da41:	call   0x40da46
  40da46:	add    BYTE PTR [rax],al
  40da48:	jl     0x40da32
  40da4a:	add    BYTE PTR [rax],al
  40da4c:	add    BYTE PTR [rax],al
  40da4e:	add    BYTE PTR [rax],al
  40da50:	movabs al,ds:0xb8000000000000e8
  40da59:	call   0x40da5e
  40da5e:	add    BYTE PTR [rax],al
  40da60:	shr    al,1
  40da62:	add    BYTE PTR [rax],al
  40da64:	add    BYTE PTR [rax],al
  40da66:	add    BYTE PTR [rax],al
  40da68:	in     al,dx
  40da69:	call   0x40da6e
  40da6e:	add    BYTE PTR [rax],al
  40da70:	add    al,0xe9
  40da72:	add    BYTE PTR [rax],al
  40da74:	add    BYTE PTR [rax],al
  40da76:	add    BYTE PTR [rax],al
  40da78:	and    al,0xe9
  40da7a:	add    BYTE PTR [rax],al
  40da7c:	add    BYTE PTR [rax],al
  40da7e:	add    BYTE PTR [rax],al
  40da80:	cmp    al,0xe9
  40da82:	add    BYTE PTR [rax],al
  40da84:	add    BYTE PTR [rax],al
  40da86:	add    BYTE PTR [rax],al
  40da88:	rex.WR jmp 0x40da8e
  40da8e:	add    BYTE PTR [rax],al
  40da90:	pop    rax
  40da91:	jmp    0x40da96
  40da96:	add    BYTE PTR [rax],al
  40da98:	push   0xe9
  40da9d:	add    BYTE PTR [rax],al
  40da9f:	add    BYTE PTR [rax-0x17],bh
  40daa2:	add    BYTE PTR [rax],al
  40daa4:	add    BYTE PTR [rax],al
  40daa6:	add    BYTE PTR [rax],al
  40daa8:	mov    cl,ch
  40daaa:	add    BYTE PTR [rax],al
  40daac:	add    BYTE PTR [rax],al
  40daae:	add    BYTE PTR [rax],al
  40dab0:	cwde   
  40dab1:	jmp    0x40dab6
  40dab6:	add    BYTE PTR [rax],al
  40dab8:	mov    eax,0xe9
  40dabd:	add    BYTE PTR [rax],al
  40dabf:	add    ah,cl
  40dac1:	jmp    0x40dac6
  40dac6:	add    BYTE PTR [rax],al
  40dac8:	loopne 0x40dab3
  40daca:	add    BYTE PTR [rax],al
  40dacc:	add    BYTE PTR [rax],al
  40dace:	add    BYTE PTR [rax],al
  40dad0:	in     al,dx
  40dad1:	jmp    0x40dad6
  40dad6:	add    BYTE PTR [rax],al
  40dad8:	add    dl,ch
  40dada:	add    BYTE PTR [rax],al
  40dadc:	add    BYTE PTR [rax],al
  40dade:	add    BYTE PTR [rax],al
  40dae0:	adc    al,0xea
  40dae2:	add    BYTE PTR [rax],al
  40dae4:	add    BYTE PTR [rax],al
  40dae6:	add    BYTE PTR [rax],al
  40dae8:	and    al,0xea
  40daea:	add    BYTE PTR [rax],al
  40daec:	add    BYTE PTR [rax],al
  40daee:	add    BYTE PTR [rax],al
  40daf0:	cmp    dl,ch
  40daf2:	add    BYTE PTR [rax],al
  40daf4:	add    BYTE PTR [rax],al
  40daf6:	add    BYTE PTR [rax],al
  40daf8:	push   rsp
  40daf9:	(bad)  
  40dafa:	add    BYTE PTR [rax],al
  40dafc:	add    BYTE PTR [rax],al
  40dafe:	add    BYTE PTR [rax],al
  40db00:	fs (bad) 
  40db02:	add    BYTE PTR [rax],al
  40db04:	add    BYTE PTR [rax],al
  40db06:	add    BYTE PTR [rax],al
  40db08:	js     0x40daf4
  40db0a:	add    BYTE PTR [rax],al
  40db0c:	add    BYTE PTR [rax],al
  40db0e:	add    BYTE PTR [rax],al
  40db10:	mov    dl,ch
	...
  40db1e:	add    BYTE PTR [rax],al
  40db20:	pushf  
  40db21:	(bad)  
	...
  40db2e:	add    BYTE PTR [rax],al
  40db30:	mov    al,0xea
  40db32:	add    BYTE PTR [rax],al
  40db34:	add    BYTE PTR [rax],al
  40db36:	add    BYTE PTR [rax],al
  40db38:	enter  0xea,0x0
  40db3c:	add    BYTE PTR [rax],al
  40db3e:	add    BYTE PTR [rax],al
  40db40:	loopne 0x40db2c
  40db42:	add    BYTE PTR [rax],al
  40db44:	add    BYTE PTR [rax],al
  40db46:	add    BYTE PTR [rax],al
  40db48:	hlt    
  40db49:	(bad)  
  40db4a:	add    BYTE PTR [rax],al
  40db4c:	add    BYTE PTR [rax],al
  40db4e:	add    BYTE PTR [rax],al
  40db50:	or     ch,bl
  40db52:	add    BYTE PTR [rax],al
  40db54:	add    BYTE PTR [rax],al
  40db56:	add    BYTE PTR [rax],al
  40db58:	and    bl,ch
  40db5a:	add    BYTE PTR [rax],al
  40db5c:	add    BYTE PTR [rax],al
  40db5e:	add    BYTE PTR [rax],al
  40db60:	xor    bl,ch
  40db62:	add    BYTE PTR [rax],al
  40db64:	add    BYTE PTR [rax],al
  40db66:	add    BYTE PTR [rax],al
  40db68:	rex.X jmp 0x40db6b
  40db6b:	add    BYTE PTR [rax],al
  40db6d:	add    BYTE PTR [rax],al
  40db6f:	add    BYTE PTR [rbx+rbp*8+0x0],bl
  40db73:	add    BYTE PTR [rax],al
  40db75:	add    BYTE PTR [rax],al
  40db77:	add    BYTE PTR [rbx+rbp*8+0x0],ch
  40db7b:	add    BYTE PTR [rax],al
  40db7d:	add    BYTE PTR [rax],al
  40db7f:	add    BYTE PTR [rax+0xeb],cl
  40db85:	add    BYTE PTR [rax],al
  40db87:	add    BYTE PTR [rax+0xeb],ah
  40db8d:	add    BYTE PTR [rax],al
  40db8f:	add    BYTE PTR [rdx+0xeb],bh
  40db95:	add    BYTE PTR [rax],al
  40db97:	add    al,dl
  40db99:	jmp    0x40db9b
  40db9b:	add    BYTE PTR [rax],al
  40db9d:	add    BYTE PTR [rax],al
  40db9f:	add    ah,ah
  40dba1:	jmp    0x40dba3
  40dba3:	add    BYTE PTR [rax],al
  40dba5:	add    BYTE PTR [rax],al
  40dba7:	add    dh,bh
  40dba9:	jmp    0x40dbab
  40dbab:	add    BYTE PTR [rax],al
  40dbad:	add    BYTE PTR [rax],al
  40dbaf:	add    BYTE PTR [rdx],dl
  40dbb1:	in     al,dx
  40dbb2:	add    BYTE PTR [rax],al
  40dbb4:	add    BYTE PTR [rax],al
  40dbb6:	add    BYTE PTR [rax],al
  40dbb8:	xor    ah,ch
  40dbba:	add    BYTE PTR [rax],al
  40dbbc:	add    BYTE PTR [rax],al
  40dbbe:	add    BYTE PTR [rax],al
  40dbc0:	cmp    ah,ch
  40dbc2:	add    BYTE PTR [rax],al
  40dbc4:	add    BYTE PTR [rax],al
  40dbc6:	add    BYTE PTR [rax],al
  40dbc8:	rex.WR in al,dx
  40dbca:	add    BYTE PTR [rax],al
  40dbcc:	add    BYTE PTR [rax],al
  40dbce:	add    BYTE PTR [rax],al
  40dbd0:	pop    rdx
  40dbd1:	in     al,dx
  40dbd2:	add    BYTE PTR [rax],al
  40dbd4:	add    BYTE PTR [rax],al
  40dbd6:	add    BYTE PTR [rax],al
  40dbd8:	jbe    0x40dbc6
  40dbda:	add    BYTE PTR [rax],al
  40dbdc:	add    BYTE PTR [rax],al
  40dbde:	add    BYTE PTR [rax],al
  40dbe0:	mov    ah,ch
	...
  40dbee:	add    BYTE PTR [rax],al
  40dbf0:	cwde   
  40dbf1:	in     al,dx
  40dbf2:	add    BYTE PTR [rax],al
  40dbf4:	add    BYTE PTR [rax],al
  40dbf6:	add    BYTE PTR [rax],al
  40dbf8:	mov    al,0xec
  40dbfa:	add    BYTE PTR [rax],al
  40dbfc:	add    BYTE PTR [rax],al
  40dbfe:	add    BYTE PTR [rax],al
  40dc00:	mov    esi,0xec
  40dc05:	add    BYTE PTR [rax],al
  40dc07:	add    dh,cl
  40dc09:	in     al,dx
  40dc0a:	add    BYTE PTR [rax],al
  40dc0c:	add    BYTE PTR [rax],al
  40dc0e:	add    BYTE PTR [rax],al
  40dc10:	(bad)  
  40dc12:	add    BYTE PTR [rax],al
  40dc14:	add    BYTE PTR [rax],al
  40dc16:	add    BYTE PTR [rax],al
  40dc18:	call   0x40dd09
  40dc1d:	add    BYTE PTR [rax],al
  40dc1f:	add    al,bh
  40dc21:	in     al,dx
  40dc22:	add    BYTE PTR [rax],al
  40dc24:	add    BYTE PTR [rax],al
  40dc26:	add    BYTE PTR [rax],al
  40dc28:	or     ch,ch
  40dc2a:	add    BYTE PTR [rax],al
  40dc2c:	add    BYTE PTR [rax],al
  40dc2e:	add    BYTE PTR [rax],al
  40dc30:	(bad)  
  40dc31:	in     eax,dx
  40dc32:	add    BYTE PTR [rax],al
  40dc34:	add    BYTE PTR [rax],al
  40dc36:	add    BYTE PTR [rax],al
  40dc38:	sub    ch,ch
  40dc3a:	add    BYTE PTR [rax],al
  40dc3c:	add    BYTE PTR [rax],al
  40dc3e:	add    BYTE PTR [rax],al
  40dc40:	ss in  eax,dx
  40dc42:	add    BYTE PTR [rax],al
  40dc44:	add    BYTE PTR [rax],al
  40dc46:	add    BYTE PTR [rax],al
  40dc48:	rex in eax,dx
  40dc4a:	add    BYTE PTR [rax],al
  40dc4c:	add    BYTE PTR [rax],al
  40dc4e:	add    BYTE PTR [rax],al
  40dc50:	rex.WX in eax,dx
  40dc52:	add    BYTE PTR [rax],al
  40dc54:	add    BYTE PTR [rax],al
  40dc56:	add    BYTE PTR [rax],al
  40dc58:	push   rsp
  40dc59:	in     eax,dx
  40dc5a:	add    BYTE PTR [rax],al
  40dc5c:	add    BYTE PTR [rax],al
  40dc5e:	add    BYTE PTR [rax],al
  40dc60:	(bad)  
  40dc61:	in     eax,dx
  40dc62:	add    BYTE PTR [rax],al
  40dc64:	add    BYTE PTR [rax],al
  40dc66:	add    BYTE PTR [rax],al
  40dc68:	push   0xed
  40dc6d:	add    BYTE PTR [rax],al
  40dc6f:	add    BYTE PTR [rdx-0x13],dh
  40dc72:	add    BYTE PTR [rax],al
  40dc74:	add    BYTE PTR [rax],al
  40dc76:	add    BYTE PTR [rax],al
  40dc78:	jle    0x40dc67
  40dc7a:	add    BYTE PTR [rax],al
  40dc7c:	add    BYTE PTR [rax],al
  40dc7e:	add    BYTE PTR [rax],al
  40dc80:	mov    ch,ch
  40dc82:	add    BYTE PTR [rax],al
  40dc84:	add    BYTE PTR [rax],al
  40dc86:	add    BYTE PTR [rax],al
  40dc88:	nop
  40dc89:	in     eax,dx
  40dc8a:	add    BYTE PTR [rax],al
  40dc8c:	add    BYTE PTR [rax],al
  40dc8e:	add    BYTE PTR [rax],al
  40dc90:	(bad)  
  40dc91:	in     eax,dx
  40dc92:	add    BYTE PTR [rax],al
  40dc94:	add    BYTE PTR [rax],al
  40dc96:	add    BYTE PTR [rax],al
  40dc98:	movabs ds:0xac000000000000ed,al
  40dca1:	in     eax,dx
  40dca2:	add    BYTE PTR [rax],al
  40dca4:	add    BYTE PTR [rax],al
  40dca6:	add    BYTE PTR [rax],al
  40dca8:	mov    dh,0xed
  40dcaa:	add    BYTE PTR [rax],al
  40dcac:	add    BYTE PTR [rax],al
  40dcae:	add    BYTE PTR [rax],al
  40dcb0:	mov    esi,0xed
  40dcb5:	add    BYTE PTR [rax],al
  40dcb7:	add    al,cl
  40dcb9:	in     eax,dx
  40dcba:	add    BYTE PTR [rax],al
  40dcbc:	add    BYTE PTR [rax],al
  40dcbe:	add    BYTE PTR [rax],al
  40dcc0:	shr    ch,cl
  40dcc2:	add    BYTE PTR [rax],al
  40dcc4:	add    BYTE PTR [rax],al
  40dcc6:	add    BYTE PTR [rax],al
  40dcc8:	fsub   st(5),st
  40dcca:	add    BYTE PTR [rax],al
  40dccc:	add    BYTE PTR [rax],al
  40dcce:	add    BYTE PTR [rax],al
  40dcd0:	call   0x40ddc2
  40dcd5:	add    BYTE PTR [rax],al
  40dcd7:	add    dl,dh
  40dcd9:	in     eax,dx
  40dcda:	add    BYTE PTR [rax],al
  40dcdc:	add    BYTE PTR [rax],al
  40dcde:	add    BYTE PTR [rax],al
  40dce0:	cld    
  40dce1:	in     eax,dx
  40dce2:	add    BYTE PTR [rax],al
  40dce4:	add    BYTE PTR [rax],al
  40dce6:	add    BYTE PTR [rax],al
  40dce8:	(bad)  
  40dce9:	out    dx,al
  40dcea:	add    BYTE PTR [rax],al
  40dcec:	add    BYTE PTR [rax],al
  40dcee:	add    BYTE PTR [rax],al
  40dcf0:	adc    dh,ch
  40dcf2:	add    BYTE PTR [rax],al
  40dcf4:	add    BYTE PTR [rax],al
  40dcf6:	add    BYTE PTR [rax],al
  40dcf8:	sbb    ch,dh
  40dcfa:	add    BYTE PTR [rax],al
  40dcfc:	add    BYTE PTR [rax],al
  40dcfe:	add    BYTE PTR [rax],al
  40dd00:	es out dx,al
	...
  40dd12:	jo     0x40dd75
  40dd14:	outs   dx,BYTE PTR ds:[rsi]
  40dd15:	outs   dx,DWORD PTR ds:[esi]
  40dd17:	pop    rdi
  40dd18:	(bad)  
  40dd19:	ins    BYTE PTR es:[rdi],dx
  40dd1a:	imul   esp,DWORD PTR [rdi+0x6e],0x746e656d
  40dd21:	pop    rdi
  40dd22:	addr32 gs je 0x40dd85
  40dd26:	je     0x40dda1
  40dd28:	jo     0x40dd8f
  40dd2a:	add    BYTE PTR [rax],al
  40dd2c:	cmp    al,BYTE PTR [rax]
  40dd2e:	jo     0x40dd91
  40dd30:	outs   dx,BYTE PTR ds:[rsi]
  40dd31:	outs   dx,DWORD PTR ds:[esi]
  40dd33:	pop    rdi
  40dd34:	movsxd ebp,DWORD PTR [rdi+0x6c]
  40dd37:	outs   dx,DWORD PTR ds:[rsi]
  40dd38:	jb     0x40dd99
  40dd3a:	jo     0x40dd9d
  40dd3c:	jb     0x40ddb1
  40dd3e:	add    BYTE PTR gs:[rdi],bh
  40dd41:	add    BYTE PTR [rax+0x61],dh
  40dd44:	outs   dx,BYTE PTR ds:[rsi]
  40dd45:	outs   dx,DWORD PTR ds:[esi]
  40dd47:	pop    rdi
  40dd48:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40dd4b:	je     0x40ddb2
  40dd4d:	js     0x40ddc3
  40dd4f:	pop    rdi
  40dd50:	addr32 gs je 0x40ddb3
  40dd54:	(bad)  
  40dd56:	jae    0x40ddbd
  40dd58:	pop    rdi
  40dd59:	imul   esi,DWORD PTR fs:[rdx+0x0],0x43000000
  40dd61:	add    BYTE PTR [rax+0x61],dh
  40dd64:	outs   dx,BYTE PTR ds:[rsi]
  40dd65:	outs   dx,DWORD PTR ds:[esi]
  40dd67:	pop    rdi
  40dd68:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40dd6b:	je     0x40ddd2
  40dd6d:	js     0x40dde3
  40dd6f:	pop    rdi
  40dd70:	addr32 gs je 0x40ddd3
  40dd74:	addr32 jb 0x40ddd8
  40dd77:	jbe    0x40dde2
  40dd79:	je     0x40ddf4
  40dd7b:	add    BYTE PTR [rsi+0x0],al
  40dd7e:	jo     0x40dde1
  40dd80:	outs   dx,BYTE PTR ds:[rsi]
  40dd81:	outs   dx,DWORD PTR ds:[esi]
  40dd83:	pop    rdi
  40dd84:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40dd87:	je     0x40ddee
  40dd89:	js     0x40ddff
  40dd8b:	pop    rdi
  40dd8c:	addr32 gs je 0x40ddef
  40dd90:	ins    DWORD PTR es:[rdi],dx
  40dd91:	(bad)  
  40dd92:	je     0x40de06
  40dd94:	imul   edi,DWORD PTR [rax+0x0],0x70004e00
  40dd9b:	(bad)  
  40dd9c:	outs   dx,BYTE PTR ds:[rsi]
  40dd9d:	outs   dx,DWORD PTR ds:[esi]
  40dd9f:	pop    rdi
  40dda0:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40dda3:	je     0x40de0a
  40dda5:	js     0x40de1b
  40dda7:	pop    rdi
  40dda8:	jae    0x40de0f
  40ddaa:	je     0x40de0b
  40ddac:	(bad)  
  40ddae:	jae    0x40de15
  40ddb0:	pop    rdi
  40ddb1:	imul   esi,DWORD PTR fs:[rdx+0x0],0x4f000000
  40ddb9:	add    BYTE PTR [rax+0x61],dh
  40ddbc:	outs   dx,BYTE PTR ds:[rsi]
  40ddbd:	outs   dx,DWORD PTR ds:[esi]
  40ddbf:	pop    rdi
  40ddc0:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40ddc3:	je     0x40de2a
  40ddc5:	js     0x40de3b
  40ddc7:	pop    rdi
  40ddc8:	jae    0x40de2f
  40ddca:	je     0x40de2b
  40ddcc:	(bad)  
  40ddce:	jae    0x40de35
  40ddd0:	pop    rdi
  40ddd1:	addr32 jb 0x40de35
  40ddd4:	jbe    0x40de3f
  40ddd6:	je     0x40de51
  40ddd8:	add    BYTE PTR [rax],al
  40ddda:	add    BYTE PTR [rax],al
  40dddc:	push   rdx
  40dddd:	add    BYTE PTR [rax+0x61],dh
  40dde0:	outs   dx,BYTE PTR ds:[rsi]
  40dde1:	outs   dx,DWORD PTR ds:[esi]
  40dde3:	pop    rdi
  40dde4:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40dde7:	je     0x40de4e
  40dde9:	js     0x40de5f
  40ddeb:	pop    rdi
  40ddec:	jae    0x40de53
  40ddee:	je     0x40de4f
  40ddf0:	addr32 jb 0x40de54
  40ddf3:	jbe    0x40de5e
  40ddf5:	je     0x40de70
  40ddf7:	pop    rdi
  40ddf8:	push   0x746e69
  40ddfd:	add    BYTE PTR [rax],al
  40ddff:	add    BYTE PTR [rbx+0x0],dl
  40de02:	jo     0x40de65
  40de04:	outs   dx,BYTE PTR ds:[rsi]
  40de05:	outs   dx,DWORD PTR ds:[esi]
  40de07:	pop    rdi
  40de08:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40de0b:	je     0x40de72
  40de0d:	js     0x40de83
  40de0f:	pop    rdi
  40de10:	jae    0x40de77
  40de12:	je     0x40de73
  40de14:	ins    BYTE PTR es:[rdi],dx
  40de15:	(bad)  
  40de16:	outs   dx,BYTE PTR ds:[rsi]
  40de17:	addr32 jne 0x40de7b
  40de1a:	add    BYTE PTR gs:[eax],al
  40de1e:	add    BYTE PTR [rax],al
  40de20:	push   rsp
  40de21:	add    BYTE PTR [rax+0x61],dh
  40de24:	outs   dx,BYTE PTR ds:[rsi]
  40de25:	outs   dx,DWORD PTR ds:[esi]
  40de27:	pop    rdi
  40de28:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40de2b:	je     0x40de92
  40de2d:	js     0x40dea3
  40de2f:	pop    rdi
  40de30:	jae    0x40de97
  40de32:	je     0x40de93
  40de34:	ins    DWORD PTR es:[rdi],dx
  40de35:	(bad)  
  40de36:	je     0x40deaa
  40de38:	imul   edi,DWORD PTR [rax+0x0],0x70006100
  40de3f:	(bad)  
  40de40:	outs   dx,BYTE PTR ds:[rsi]
  40de41:	outs   dx,DWORD PTR ds:[esi]
  40de43:	pop    rdi
  40de44:	gs ins BYTE PTR es:[rdi],dx
  40de46:	ins    BYTE PTR es:[rdi],dx
  40de47:	imul   esi,DWORD PTR [rax+0x73],0x5f657a69
  40de4e:	ins    DWORD PTR es:[rdi],dx
  40de4f:	outs   dx,DWORD PTR ds:[rsi]
  40de50:	fs gs pop rdi
  40de53:	addr32 gs je 0x40deb6
  40de57:	je     0x40ded2
  40de59:	jo     0x40dec0
  40de5b:	add    BYTE PTR [rax+rax*1+0x70],ch
  40de5f:	(bad)  
  40de60:	outs   dx,BYTE PTR ds:[rsi]
  40de61:	outs   dx,DWORD PTR ds:[esi]
  40de63:	pop    rdi
  40de64:	outs   dx,WORD PTR ds:[rsi]
  40de66:	outs   dx,BYTE PTR ds:[rsi]
  40de67:	je     0x40dec8
  40de69:	fs gs jae 0x40ded0
  40de6d:	jb     0x40ded8
  40de6f:	jo     0x40dee5
  40de71:	imul   ebp,DWORD PTR [rdi+0x6e],0x706f635f
  40de78:	jns    0x40de7a
  40de7a:	add    BYTE PTR [rax],al
  40de7c:	outs   dx,DWORD PTR ds:[rsi]
  40de7d:	add    BYTE PTR [rax+0x61],dh
  40de80:	outs   dx,BYTE PTR ds:[rsi]
  40de81:	outs   dx,DWORD PTR ds:[esi]
  40de83:	pop    rdi
  40de84:	outs   dx,WORD PTR ds:[rsi]
  40de86:	outs   dx,BYTE PTR ds:[rsi]
  40de87:	je     0x40dee8
  40de89:	fs gs jae 0x40def0
  40de8d:	jb     0x40def8
  40de8f:	jo     0x40df05
  40de91:	imul   ebp,DWORD PTR [rdi+0x6e],0x6572665f
  40de98:	add    BYTE PTR gs:[rax],al
  40de9b:	add    BYTE PTR [rax+0x0],dh
  40de9e:	jo     0x40df01
  40dea0:	outs   dx,BYTE PTR ds:[rsi]
  40dea1:	outs   dx,DWORD PTR ds:[esi]
  40dea3:	pop    rdi
  40dea4:	outs   dx,WORD PTR ds:[rsi]
  40dea6:	outs   dx,BYTE PTR ds:[rsi]
  40dea7:	je     0x40df08
  40dea9:	fs gs jae 0x40df10
  40dead:	jb     0x40df18
  40deaf:	jo     0x40df25
  40deb1:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f72665f
  40deb8:	ins    DWORD PTR es:[rdi],dx
  40deb9:	pop    rdi
  40deba:	jae    0x40df30
  40debc:	jb     0x40df27
  40debe:	outs   dx,BYTE PTR ds:[rsi]
  40debf:	add    BYTE PTR [eax],al
  40dec2:	add    BYTE PTR [rax],al
  40dec4:	add    DWORD PTR [rax],0x70
  40dec7:	(bad)  
  40dec8:	outs   dx,BYTE PTR ds:[rsi]
  40dec9:	outs   dx,DWORD PTR ds:[esi]
  40decb:	pop    rdi
  40decc:	outs   dx,WORD PTR ds:[rsi]
  40dece:	outs   dx,BYTE PTR ds:[rsi]
  40decf:	je     0x40df30
  40ded1:	fs gs jae 0x40df38
  40ded5:	jb     0x40df40
  40ded7:	jo     0x40df4d
  40ded9:	imul   ebp,DWORD PTR [rdi+0x6e],0x7465735f
  40dee0:	pop    rdi
  40dee1:	jae    0x40df4c
  40dee3:	jp     0x40df4a
  40dee5:	add    BYTE PTR [rax],al
  40dee7:	add    BYTE PTR [rcx+0x6e617000],cl
  40deed:	outs   dx,DWORD PTR ds:[esi]
  40deef:	pop    rdi
  40def0:	outs   dx,WORD PTR ds:[rsi]
  40def2:	outs   dx,BYTE PTR ds:[rsi]
  40def3:	je     0x40df54
  40def5:	fs gs jae 0x40df5c
  40def9:	jb     0x40df64
  40defb:	jo     0x40df71
  40defd:	imul   ebp,DWORD PTR [rdi+0x6e],0x5f6f745f
  40df04:	jae    0x40df7a
  40df06:	jb     0x40df71
  40df08:	outs   dx,BYTE PTR ds:[rsi]
  40df09:	add    BYTE PTR [eax],al
  40df0c:	mov    al,BYTE PTR [rax]
  40df0e:	jo     0x40df71
  40df10:	outs   dx,BYTE PTR ds:[rsi]
  40df11:	outs   dx,DWORD PTR ds:[esi]
  40df13:	pop    rdi
  40df14:	outs   dx,WORD PTR ds:[rsi]
  40df16:	outs   dx,BYTE PTR ds:[rsi]
  40df17:	je     0x40df78
  40df19:	fs gs jae 0x40df80
  40df1d:	jb     0x40df88
  40df1f:	jo     0x40df95
  40df21:	imul   ebp,DWORD PTR [rdi+0x6e],0x736e755f
  40df28:	gs je  0x40df8a
  40df2b:	imul   sp,WORD PTR [rbp+0x6c],0x7364
  40df31:	add    BYTE PTR [rax],al
  40df33:	add    BYTE PTR [rax+rax*1+0x676e6170],bl
  40df3a:	outs   dx,DWORD PTR ds:[rsi]
  40df3b:	pop    rdi
  40df3c:	outs   dx,WORD PTR ds:[rsi]
  40df3e:	outs   dx,BYTE PTR ds:[rsi]
  40df3f:	je     0x40dfa0
  40df41:	ins    DWORD PTR es:[rdi],dx
  40df42:	(bad)  
  40df43:	jo     0x40dfa4
  40df45:	movsxd esi,DWORD PTR [rdx+0x65]
  40df48:	(bad)  
  40df49:	je     0x40dfb0
  40df4b:	pop    rdi
  40df4c:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40df4f:	je     0x40dfb6
  40df51:	js     0x40dfc7
  40df53:	add    al,bl
  40df55:	add    BYTE PTR [rax+0x61],dh
  40df58:	outs   dx,BYTE PTR ds:[rsi]
  40df59:	outs   dx,DWORD PTR ds:[esi]
  40df5b:	pop    rdi
  40df5c:	addr32 jb 0x40dfc0
  40df5f:	jbe    0x40dfca
  40df61:	je     0x40dfdc
  40df63:	pop    rdi
  40df64:	addr32 gs je 0x40dfc7
  40df68:	je     0x40dfe3
  40df6a:	jo     0x40dfd1
  40df6c:	add    BYTE PTR [rax],al
  40df6e:	add    BYTE PTR [rax],al
  40df70:	fld    DWORD PTR [rax]
  40df72:	jo     0x40dfd5
  40df74:	outs   dx,BYTE PTR ds:[rsi]
  40df75:	outs   dx,DWORD PTR ds:[esi]
  40df77:	pop    rdi
  40df78:	addr32 jb 0x40dfdc
  40df7b:	jbe    0x40dfe6
  40df7d:	je     0x40dff8
  40df7f:	pop    rdi
  40df80:	push   0x5f746e69
  40df85:	addr32 gs je 0x40dfe8
  40df89:	je     0x40e004
  40df8b:	jo     0x40dff2
  40df8d:	add    BYTE PTR [rax],al
  40df8f:	add    dl,bl
  40df91:	add    BYTE PTR [rax+0x61],dh
  40df94:	outs   dx,BYTE PTR ds:[rsi]
  40df95:	outs   dx,DWORD PTR ds:[esi]
  40df97:	pop    rdi
  40df98:	addr32 jb 0x40dffc
  40df9b:	jbe    0x40e006
  40df9d:	je     0x40e018
  40df9f:	pop    rdi
  40dfa0:	je     0x40e011
  40dfa2:	pop    rdi
  40dfa3:	jb     0x40e014
  40dfa5:	je     0x40e008
  40dfa7:	je     0x40e012
  40dfa9:	outs   dx,DWORD PTR ds:[rsi]
  40dfaa:	outs   dx,BYTE PTR ds:[rsi]
  40dfab:	add    bl,ah
  40dfad:	add    BYTE PTR [rax+0x61],dh
  40dfb0:	outs   dx,BYTE PTR ds:[rsi]
  40dfb1:	outs   dx,DWORD PTR ds:[esi]
  40dfb3:	pop    rdi
  40dfb4:	ins    BYTE PTR es:[rdi],dx
  40dfb5:	(bad)  
  40dfb6:	outs   dx,BYTE PTR ds:[rsi]
  40dfb7:	addr32 jne 0x40e01b
  40dfba:	addr32 gs pop rdi
  40dfbd:	data16 jb 0x40e02f
  40dfc0:	ins    DWORD PTR es:[rdi],dx
  40dfc1:	pop    rdi
  40dfc2:	jae    0x40e038
  40dfc4:	jb     0x40e02f
  40dfc6:	outs   dx,BYTE PTR ds:[rsi]
  40dfc7:	add    BYTE PTR [eax],al
  40dfca:	add    BYTE PTR [rax],al
  40dfcc:	in     al,0x0
  40dfce:	jo     0x40e031
  40dfd0:	outs   dx,BYTE PTR ds:[rsi]
  40dfd1:	outs   dx,DWORD PTR ds:[esi]
  40dfd3:	pop    rdi
  40dfd4:	ins    BYTE PTR es:[rdi],dx
  40dfd5:	(bad)  
  40dfd6:	outs   dx,BYTE PTR ds:[rsi]
  40dfd7:	addr32 jne 0x40e03b
  40dfda:	addr32 gs pop rdi
  40dfdd:	addr32 gs je 0x40e040
  40dfe1:	fs gs data16 (bad) 
  40dfe5:	jne    0x40e053
  40dfe7:	je     0x40dfe9
  40dfe9:	add    BYTE PTR [rax],al
  40dfeb:	add    bl,ch
  40dfed:	add    BYTE PTR [rax+0x61],dh
  40dff0:	outs   dx,BYTE PTR ds:[rsi]
  40dff1:	outs   dx,DWORD PTR ds:[esi]
  40dff3:	pop    rdi
  40dff4:	ins    BYTE PTR es:[rdi],dx
  40dff5:	(bad)  
  40dff6:	jns    0x40e067
  40dff8:	jne    0x40e06e
  40dffa:	pop    rdi
  40dffb:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40dffe:	je     0x40e065
  40e000:	js     0x40e076
  40e002:	pop    rdi
  40e003:	movsxd ebp,DWORD PTR [rax+0x61]
  40e006:	outs   dx,BYTE PTR ds:[rsi]
  40e007:	gs add BYTE PTR fs:[eax],al
  40e00c:	repnz add BYTE PTR [rax+0x61],dh
  40e010:	outs   dx,BYTE PTR ds:[rsi]
  40e011:	outs   dx,DWORD PTR ds:[esi]
  40e013:	pop    rdi
  40e014:	ins    BYTE PTR es:[rdi],dx
  40e015:	(bad)  
  40e016:	jns    0x40e087
  40e018:	jne    0x40e08e
  40e01a:	pop    rdi
  40e01b:	addr32 gs je 0x40e07e
  40e01f:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40e022:	je     0x40e089
  40e024:	js     0x40e09a
  40e026:	add    BYTE PTR [rax],al
  40e028:	cmc    
  40e029:	add    BYTE PTR [rax+0x61],dh
  40e02c:	outs   dx,BYTE PTR ds:[rsi]
  40e02d:	outs   dx,DWORD PTR ds:[esi]
  40e02f:	pop    rdi
  40e030:	ins    BYTE PTR es:[rdi],dx
  40e031:	(bad)  
  40e032:	jns    0x40e0a3
  40e034:	jne    0x40e0aa
  40e036:	pop    rdi
  40e037:	addr32 gs je 0x40e09a
  40e03b:	gs js  0x40e0b2
  40e03e:	outs   dx,BYTE PTR gs:[rsi]
  40e040:	je     0x40e0b5
  40e042:	add    BYTE PTR [rax],al
  40e044:	test   BYTE PTR [rax],0x70
  40e047:	(bad)  
  40e048:	outs   dx,BYTE PTR ds:[rsi]
  40e049:	outs   dx,DWORD PTR ds:[esi]
  40e04b:	pop    rdi
  40e04c:	ins    BYTE PTR es:[rdi],dx
  40e04d:	(bad)  
  40e04e:	jns    0x40e0bf
  40e050:	jne    0x40e0c6
  40e052:	pop    rdi
  40e053:	addr32 gs je 0x40e0b6
  40e057:	outs   dx,WORD PTR ds:[rsi]
  40e059:	outs   dx,BYTE PTR ds:[rsi]
  40e05a:	je     0x40e0bb
  40e05c:	fs gs jae 0x40e0c3
  40e060:	jb     0x40e0cb
  40e062:	jo     0x40e0d8
  40e064:	imul   ebp,DWORD PTR [rdi+0x6e],0x7000f700
  40e06b:	(bad)  
  40e06c:	outs   dx,BYTE PTR ds:[rsi]
  40e06d:	outs   dx,DWORD PTR ds:[esi]
  40e06f:	pop    rdi
  40e070:	ins    BYTE PTR es:[rdi],dx
  40e071:	(bad)  
  40e072:	jns    0x40e0e3
  40e074:	jne    0x40e0ea
  40e076:	pop    rdi
  40e077:	addr32 gs je 0x40e0da
  40e07b:	push   0x68676965
  40e080:	je     0x40e082
  40e082:	add    BYTE PTR [rax],al
  40e084:	stc    
  40e085:	add    BYTE PTR [rax+0x61],dh
  40e088:	outs   dx,BYTE PTR ds:[rsi]
  40e089:	outs   dx,DWORD PTR ds:[esi]
  40e08b:	pop    rdi
  40e08c:	ins    BYTE PTR es:[rdi],dx
  40e08d:	(bad)  
  40e08e:	jns    0x40e0ff
  40e090:	jne    0x40e106
  40e092:	pop    rdi
  40e093:	addr32 gs je 0x40e0f6
  40e097:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x70010200
  40e09f:	(bad)  
  40e0a0:	outs   dx,BYTE PTR ds:[rsi]
  40e0a1:	outs   dx,DWORD PTR ds:[esi]
  40e0a3:	pop    rdi
  40e0a4:	ins    BYTE PTR es:[rdi],dx
  40e0a5:	(bad)  
  40e0a6:	jns    0x40e117
  40e0a8:	jne    0x40e11e
  40e0aa:	pop    rdi
  40e0ab:	addr32 gs je 0x40e10e
  40e0af:	jo     0x40e11a
  40e0b1:	js     0x40e118
  40e0b3:	ins    BYTE PTR es:[rdi],dx
  40e0b4:	pop    rdi
  40e0b5:	gs js  0x40e12c
  40e0b8:	outs   dx,BYTE PTR gs:[rsi]
  40e0ba:	je     0x40e12f
  40e0bc:	add    BYTE PTR [rax],al
  40e0be:	add    BYTE PTR [rax],al
  40e0c0:	or     al,0x1
  40e0c2:	jo     0x40e125
  40e0c4:	outs   dx,BYTE PTR ds:[rsi]
  40e0c5:	outs   dx,DWORD PTR ds:[esi]
  40e0c7:	pop    rdi
  40e0c8:	ins    BYTE PTR es:[rdi],dx
  40e0c9:	(bad)  
  40e0ca:	jns    0x40e13b
  40e0cc:	jne    0x40e142
  40e0ce:	pop    rdi
  40e0cf:	addr32 gs je 0x40e132
  40e0d3:	ja     0x40e13e
  40e0d5:	fs je  0x40e140
  40e0d8:	add    BYTE PTR [rax],al
  40e0da:	add    BYTE PTR [rax],al
  40e0dc:	adc    al,0x1
  40e0de:	jo     0x40e141
  40e0e0:	outs   dx,BYTE PTR ds:[rsi]
  40e0e1:	outs   dx,DWORD PTR ds:[esi]
  40e0e3:	pop    rdi
  40e0e4:	ins    BYTE PTR es:[rdi],dx
  40e0e5:	(bad)  
  40e0e6:	jns    0x40e157
  40e0e8:	jne    0x40e15e
  40e0ea:	pop    rdi
  40e0eb:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x6572665f
  40e0f3:	add    BYTE PTR gs:[rax],al
  40e0f6:	add    BYTE PTR [rax],al
  40e0f8:	adc    eax,0x6e617001
  40e0fd:	outs   dx,DWORD PTR ds:[esi]
  40e0ff:	pop    rdi
  40e100:	ins    BYTE PTR es:[rdi],dx
  40e101:	(bad)  
  40e102:	jns    0x40e173
  40e104:	jne    0x40e17a
  40e106:	pop    rdi
  40e107:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x7465675f
  40e10f:	pop    rdi
  40e110:	(bad)  
  40e112:	jae    0x40e179
  40e114:	ins    BYTE PTR es:[rdi],dx
  40e115:	imul   ebp,DWORD PTR [rsi+0x65],0x0
  40e11c:	sbb    eax,DWORD PTR [rcx]
  40e11e:	jo     0x40e181
  40e120:	outs   dx,BYTE PTR ds:[rsi]
  40e121:	outs   dx,DWORD PTR ds:[esi]
  40e123:	pop    rdi
  40e124:	ins    BYTE PTR es:[rdi],dx
  40e125:	(bad)  
  40e126:	jns    0x40e197
  40e128:	jne    0x40e19e
  40e12a:	pop    rdi
  40e12b:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x7465675f
  40e133:	pop    rdi
  40e134:	ins    BYTE PTR es:[rdi],dx
  40e135:	imul   ebp,DWORD PTR [rsi+0x65],0x0
  40e13c:	and    eax,0x6e617001
  40e141:	outs   dx,DWORD PTR ds:[esi]
  40e143:	pop    rdi
  40e144:	ins    BYTE PTR es:[rdi],dx
  40e145:	(bad)  
  40e146:	jns    0x40e1b7
  40e148:	jne    0x40e1be
  40e14a:	pop    rdi
  40e14b:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x78656e5f
  40e153:	je     0x40e1b4
  40e155:	ins    BYTE PTR es:[rdi],dx
  40e156:	imul   ebp,DWORD PTR [rsi+0x65],0x30000000
  40e15d:	add    DWORD PTR [rax+0x61],esi
  40e160:	outs   dx,BYTE PTR ds:[rsi]
  40e161:	outs   dx,DWORD PTR ds:[esi]
  40e163:	pop    rdi
  40e164:	ins    BYTE PTR es:[rdi],dx
  40e165:	(bad)  
  40e166:	jns    0x40e1d7
  40e168:	jne    0x40e1de
  40e16a:	pop    rdi
  40e16b:	outs   dx,BYTE PTR ds:[rsi]
  40e16c:	gs ja  0x40e16f
  40e16f:	add    BYTE PTR [rcx],dh
  40e171:	add    DWORD PTR [rax+0x61],esi
  40e174:	outs   dx,BYTE PTR ds:[rsi]
  40e175:	outs   dx,DWORD PTR ds:[esi]
  40e177:	pop    rdi
  40e178:	ins    BYTE PTR es:[rdi],dx
  40e179:	(bad)  
  40e17a:	jns    0x40e1eb
  40e17c:	jne    0x40e1f2
  40e17e:	pop    rdi
  40e17f:	jae    0x40e1e6
  40e181:	je     0x40e1e2
  40e183:	(bad)  
  40e184:	ins    BYTE PTR es:[rdi],dx
  40e185:	imul   esp,DWORD PTR [rdi+0x6e],0x746e656d
  40e18c:	add    BYTE PTR [rax],al
  40e18e:	add    BYTE PTR [rax],al
  40e190:	xor    eax,DWORD PTR [rcx]
  40e192:	jo     0x40e1f5
  40e194:	outs   dx,BYTE PTR ds:[rsi]
  40e195:	outs   dx,DWORD PTR ds:[esi]
  40e197:	pop    rdi
  40e198:	ins    BYTE PTR es:[rdi],dx
  40e199:	(bad)  
  40e19a:	jns    0x40e20b
  40e19c:	jne    0x40e212
  40e19e:	pop    rdi
  40e19f:	jae    0x40e206
  40e1a1:	je     0x40e202
  40e1a3:	(bad)  
  40e1a4:	jne    0x40e21a
  40e1a6:	outs   dx,DWORD PTR ds:[rsi]
  40e1a7:	pop    rdi
  40e1a8:	imul   esi,DWORD PTR fs:[rdx+0x0],0x61700134
  40e1b0:	outs   dx,BYTE PTR ds:[rsi]
  40e1b1:	outs   dx,DWORD PTR ds:[esi]
  40e1b3:	pop    rdi
  40e1b4:	ins    BYTE PTR es:[rdi],dx
  40e1b5:	(bad)  
  40e1b6:	jns    0x40e227
  40e1b8:	jne    0x40e22e
  40e1ba:	pop    rdi
  40e1bb:	jae    0x40e222
  40e1bd:	je     0x40e21e
  40e1bf:	gs ins BYTE PTR es:[rdi],dx
  40e1c1:	ins    BYTE PTR es:[rdi],dx
  40e1c2:	imul   esi,DWORD PTR [rax+0x73],0x657a69
  40e1c9:	add    BYTE PTR [rax],al
  40e1cb:	add    BYTE PTR [rip+0x6e617001],dh        # 0x6ea251d2
  40e1d1:	outs   dx,DWORD PTR ds:[esi]
  40e1d3:	pop    rdi
  40e1d4:	ins    BYTE PTR es:[rdi],dx
  40e1d5:	(bad)  
  40e1d6:	jns    0x40e247
  40e1d8:	jne    0x40e24e
  40e1da:	pop    rdi
  40e1db:	jae    0x40e242
  40e1dd:	je     0x40e23e
  40e1df:	outs   dx,WORD PTR ds:[rsi]
  40e1e1:	outs   dx,BYTE PTR ds:[rsi]
  40e1e2:	je     0x40e243
  40e1e4:	fs gs jae 0x40e24b
  40e1e8:	jb     0x40e253
  40e1ea:	jo     0x40e260
  40e1ec:	imul   ebp,DWORD PTR [rdi+0x6e],0x70013600
  40e1f3:	(bad)  
  40e1f4:	outs   dx,BYTE PTR ds:[rsi]
  40e1f5:	outs   dx,DWORD PTR ds:[esi]
  40e1f7:	pop    rdi
  40e1f8:	ins    BYTE PTR es:[rdi],dx
  40e1f9:	(bad)  
  40e1fa:	jns    0x40e26b
  40e1fc:	jne    0x40e272
  40e1fe:	pop    rdi
  40e1ff:	jae    0x40e266
  40e201:	je     0x40e262
  40e203:	push   0x68676965
  40e208:	je     0x40e20a
  40e20a:	add    BYTE PTR [rax],al
  40e20c:	(bad)  
  40e20d:	add    DWORD PTR [rax+0x61],esi
  40e210:	outs   dx,BYTE PTR ds:[rsi]
  40e211:	outs   dx,DWORD PTR ds:[esi]
  40e213:	pop    rdi
  40e214:	ins    BYTE PTR es:[rdi],dx
  40e215:	(bad)  
  40e216:	jns    0x40e287
  40e218:	jne    0x40e28e
  40e21a:	pop    rdi
  40e21b:	jae    0x40e282
  40e21d:	je     0x40e27e
  40e21f:	imul   ebp,DWORD PTR [rsi+0x64],0x746e65
  40e226:	add    BYTE PTR [rax],al
  40e228:	cmp    BYTE PTR [rcx],al
  40e22a:	jo     0x40e28d
  40e22c:	outs   dx,BYTE PTR ds:[rsi]
  40e22d:	outs   dx,DWORD PTR ds:[esi]
  40e22f:	pop    rdi
  40e230:	ins    BYTE PTR es:[rdi],dx
  40e231:	(bad)  
  40e232:	jns    0x40e2a3
  40e234:	jne    0x40e2aa
  40e236:	pop    rdi
  40e237:	jae    0x40e29e
  40e239:	je     0x40e29a
  40e23b:	push   0x75
  40e23d:	jae    0x40e2b3
  40e23f:	imul   esp,DWORD PTR [rsi+0x79],0x1390000
  40e246:	jo     0x40e2a9
  40e248:	outs   dx,BYTE PTR ds:[rsi]
  40e249:	outs   dx,DWORD PTR ds:[esi]
  40e24b:	pop    rdi
  40e24c:	ins    BYTE PTR es:[rdi],dx
  40e24d:	(bad)  
  40e24e:	jns    0x40e2bf
  40e250:	jne    0x40e2c6
  40e252:	pop    rdi
  40e253:	jae    0x40e2ba
  40e255:	je     0x40e2b6
  40e257:	ins    DWORD PTR es:[rdi],dx
  40e258:	(bad)  
  40e259:	jb     0x40e2c6
  40e25b:	jne    0x40e2cd
  40e25d:	add    BYTE PTR [rax],al
  40e25f:	add    BYTE PTR [rbx],bh
  40e261:	add    DWORD PTR [rax+0x61],esi
  40e264:	outs   dx,BYTE PTR ds:[rsi]
  40e265:	outs   dx,DWORD PTR ds:[esi]
  40e267:	pop    rdi
  40e268:	ins    BYTE PTR es:[rdi],dx
  40e269:	(bad)  
  40e26a:	jns    0x40e2db
  40e26c:	jne    0x40e2e2
  40e26e:	pop    rdi
  40e26f:	jae    0x40e2d6
  40e271:	je     0x40e2d2
  40e273:	jae    0x40e2de
  40e275:	outs   dx,BYTE PTR ds:[rsi]
  40e276:	ins    BYTE PTR es:[edi],dx
  40e278:	gs pop rdi
  40e27a:	jo     0x40e2dd
  40e27c:	jb     0x40e2df
  40e27e:	addr32 jb 0x40e2e2
  40e281:	jo     0x40e2eb
  40e283:	pop    rdi
  40e284:	ins    DWORD PTR es:[rdi],dx
  40e285:	outs   dx,DWORD PTR ds:[rsi]
  40e286:	fs add BYTE PTR gs:[rax],al
  40e28a:	add    BYTE PTR [rax],al
  40e28c:	add    DWORD PTR ds:[rax+0x61],esi
  40e290:	outs   dx,BYTE PTR ds:[rsi]
  40e291:	outs   dx,DWORD PTR ds:[esi]
  40e293:	pop    rdi
  40e294:	ins    BYTE PTR es:[rdi],dx
  40e295:	(bad)  
  40e296:	jns    0x40e307
  40e298:	jne    0x40e30e
  40e29a:	pop    rdi
  40e29b:	jae    0x40e302
  40e29d:	je     0x40e2fe
  40e29f:	je     0x40e306
  40e2a1:	js     0x40e317
  40e2a3:	add    BYTE PTR [rdi],bh
  40e2a5:	add    DWORD PTR [rax+0x61],esi
  40e2a8:	outs   dx,BYTE PTR ds:[rsi]
  40e2a9:	outs   dx,DWORD PTR ds:[esi]
  40e2ab:	pop    rdi
  40e2ac:	ins    BYTE PTR es:[rdi],dx
  40e2ad:	(bad)  
  40e2ae:	jns    0x40e31f
  40e2b0:	jne    0x40e326
  40e2b2:	pop    rdi
  40e2b3:	jae    0x40e31a
  40e2b5:	je     0x40e316
  40e2b7:	ja     0x40e322
  40e2b9:	fs je  0x40e324
  40e2bc:	add    BYTE PTR [rax],al
  40e2be:	add    BYTE PTR [rax],al
  40e2c0:	rex add DWORD PTR [rax+0x61],esi
  40e2c4:	outs   dx,BYTE PTR ds:[rsi]
  40e2c5:	outs   dx,DWORD PTR ds:[esi]
  40e2c7:	pop    rdi
  40e2c8:	ins    BYTE PTR es:[rdi],dx
  40e2c9:	(bad)  
  40e2ca:	jns    0x40e33b
  40e2cc:	jne    0x40e342
  40e2ce:	pop    rdi
  40e2cf:	jae    0x40e336
  40e2d1:	je     0x40e332
  40e2d3:	ja     0x40e347
  40e2d5:	(bad)  
  40e2d6:	jo     0x40e2d8
  40e2d8:	add    QWORD PTR [r8+0x61],rsi
  40e2dc:	outs   dx,BYTE PTR ds:[rsi]
  40e2dd:	outs   dx,DWORD PTR ds:[esi]
  40e2df:	pop    rdi
  40e2e0:	ins    DWORD PTR es:[rdi],dx
  40e2e1:	(bad)  
  40e2e2:	je     0x40e356
  40e2e4:	imul   edi,DWORD PTR [rax+0x5f],0x79706f63
  40e2eb:	add    BYTE PTR [rdx+0x1],cl
  40e2ee:	jo     0x40e351
  40e2f0:	outs   dx,BYTE PTR ds:[rsi]
  40e2f1:	outs   dx,DWORD PTR ds:[esi]
  40e2f3:	pop    rdi
  40e2f4:	ins    DWORD PTR es:[rdi],dx
  40e2f5:	(bad)  
  40e2f6:	je     0x40e36a
  40e2f8:	imul   edi,DWORD PTR [rax+0x5f],0x65657266
  40e2ff:	add    BYTE PTR [rsi+0x1],cl
  40e302:	jo     0x40e365
  40e304:	outs   dx,BYTE PTR ds:[rsi]
  40e305:	outs   dx,DWORD PTR ds:[esi]
  40e307:	pop    rdi
  40e308:	ins    DWORD PTR es:[rdi],dx
  40e309:	(bad)  
  40e30a:	je     0x40e37e
  40e30c:	imul   edi,DWORD PTR [rax+0x5f],0x61746f72
  40e313:	je     0x40e37a
  40e315:	add    BYTE PTR [rax],al
  40e317:	add    BYTE PTR [rcx+0x1],dl
  40e31a:	jo     0x40e37d
  40e31c:	outs   dx,BYTE PTR ds:[rsi]
  40e31d:	outs   dx,DWORD PTR ds:[esi]
  40e31f:	pop    rdi
  40e320:	ins    DWORD PTR es:[rdi],dx
  40e321:	(bad)  
  40e322:	je     0x40e396
  40e324:	imul   edi,DWORD PTR [rax+0x5f],0x6e617274
  40e32b:	jae    0x40e393
  40e32d:	outs   dx,DWORD PTR ds:[rsi]
  40e32e:	jb     0x40e39d
  40e330:	pop    rdi
  40e331:	jo     0x40e39c
  40e333:	js     0x40e39a
  40e335:	ins    BYTE PTR es:[rdi],dx
  40e336:	pop    rdi
  40e337:	jb     0x40e39e
  40e339:	movsxd esi,DWORD PTR [rcx+riz*2+0x6e]
  40e33d:	ins    BYTE PTR es:[edi],dx
  40e33f:	add    BYTE PTR gs:[rax],al
  40e342:	add    BYTE PTR [rax],al
  40e344:	push   rsi
  40e345:	add    DWORD PTR [rax+0x61],esi
  40e348:	outs   dx,BYTE PTR ds:[rsi]
  40e349:	outs   dx,DWORD PTR ds:[esi]
  40e34b:	pop    rdi
  40e34c:	jo     0x40e3af
  40e34e:	jb     0x40e3c3
  40e350:	gs pop rdi
  40e352:	outs   dx,BYTE PTR gs:[rsi]
  40e354:	jne    0x40e3c3
  40e356:	add    BYTE PTR [rax],al
  40e358:	push   rdi
  40e359:	add    DWORD PTR [rax+0x61],esi
  40e35c:	outs   dx,BYTE PTR ds:[rsi]
  40e35d:	outs   dx,DWORD PTR ds:[esi]
  40e35f:	pop    rdi
  40e360:	jo     0x40e3c3
  40e362:	jb     0x40e3d7
  40e364:	gs pop rdi
  40e366:	ins    DWORD PTR es:[rdi],dx
  40e367:	(bad)  
  40e368:	jb     0x40e3d5
  40e36a:	jne    0x40e3dc
  40e36c:	add    BYTE PTR [rax],al
  40e36e:	add    BYTE PTR [rax],al
  40e370:	xchg   esi,eax
  40e371:	add    DWORD PTR [rax+0x61],esi
  40e374:	outs   dx,BYTE PTR ds:[rsi]
  40e375:	outs   dx,DWORD PTR ds:[esi]
  40e377:	pop    rdi
  40e378:	jbe    0x40e3df
  40e37a:	jb     0x40e3ef
  40e37c:	imul   ebp,DWORD PTR [rdi+0x6e],0x70019800
  40e383:	(bad)  
  40e384:	outs   dx,BYTE PTR ds:[rsi]
  40e385:	outs   dx,DWORD PTR ds:[esi]
  40e387:	pop    rdi
  40e388:	jbe    0x40e3ef
  40e38a:	jb     0x40e3ff
  40e38c:	imul   ebp,DWORD PTR [rdi+0x6e],0x7274735f
  40e393:	imul   ebp,DWORD PTR [rsi+0x67],0x19a0000
  40e39a:	jo     0x40e3fd
  40e39c:	outs   dx,BYTE PTR ds:[rsi]
  40e39d:	outs   dx,DWORD PTR ds:[esi]
  40e39f:	pop    rdi
  40e3a0:	ja     0x40e414
  40e3a2:	(bad)  
  40e3a3:	jo     0x40e404
  40e3a5:	ins    DWORD PTR es:[rdi],dx
  40e3a6:	outs   dx,DWORD PTR ds:[rsi]
  40e3a7:	fs gs pop rdi
  40e3aa:	addr32 gs je 0x40e40d
  40e3ae:	je     0x40e429
  40e3b0:	jo     0x40e417
  40e3b2:	add    BYTE PTR [rax],al
  40e3b4:	add    eax,DWORD PTR [rax]
  40e3b6:	jo     0x40e419
  40e3b8:	outs   dx,BYTE PTR ds:[rsi]
  40e3b9:	outs   dx,DWORD PTR ds:[esi]
  40e3bb:	pop    rdi
  40e3bc:	movsxd esp,DWORD PTR [rcx+0x69]
  40e3bf:	jb     0x40e430
  40e3c1:	pop    rdi
  40e3c2:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40e3c5:	je     0x40e42c
  40e3c7:	js     0x40e43d
  40e3c9:	pop    rdi
  40e3ca:	jae    0x40e431
  40e3cc:	je     0x40e42d
  40e3ce:	outs   dx,WORD PTR ds:[rsi]
  40e3d0:	outs   dx,BYTE PTR ds:[rsi]
  40e3d1:	je     0x40e432
  40e3d3:	outs   dx,DWORD PTR ds:[rsi]
  40e3d4:	jo     0x40e44a
  40e3d6:	imul   ebp,DWORD PTR [rdi+0x6e],0x10000073
  40e3dd:	add    BYTE PTR [rax+0x61],dh
  40e3e0:	outs   dx,BYTE PTR ds:[rsi]
  40e3e1:	outs   dx,DWORD PTR ds:[esi]
  40e3e3:	pop    rdi
  40e3e4:	movsxd esp,DWORD PTR [rcx+0x69]
  40e3e7:	jb     0x40e458
  40e3e9:	pop    rdi
  40e3ea:	outs   dx,WORD PTR ds:[rsi]
  40e3ec:	outs   dx,BYTE PTR ds:[rsi]
  40e3ed:	je     0x40e44e
  40e3ef:	ins    DWORD PTR es:[rdi],dx
  40e3f0:	(bad)  
  40e3f1:	jo     0x40e452
  40e3f3:	outs   dx,BYTE PTR ds:[rsi]
  40e3f4:	gs ja  0x40e3f7
  40e3f7:	add    BYTE PTR [rbx],dl
  40e3f9:	add    BYTE PTR [rax+0x61],dh
  40e3fc:	outs   dx,BYTE PTR ds:[rsi]
  40e3fd:	outs   dx,DWORD PTR ds:[esi]
  40e3ff:	pop    rdi
  40e400:	movsxd esp,DWORD PTR [rcx+0x69]
  40e403:	jb     0x40e474
  40e405:	pop    rdi
  40e406:	outs   dx,WORD PTR ds:[rsi]
  40e408:	outs   dx,BYTE PTR ds:[rsi]
  40e409:	je     0x40e46a
  40e40b:	ins    DWORD PTR es:[rdi],dx
  40e40c:	(bad)  
  40e40d:	jo     0x40e46e
  40e40f:	jae    0x40e476
  40e411:	je     0x40e472
  40e413:	jb     0x40e47a
  40e415:	jae    0x40e486
  40e417:	ins    BYTE PTR es:[rdi],dx
  40e418:	jne    0x40e48e
  40e41a:	imul   ebp,DWORD PTR [rdi+0x6e],0x1b000000
  40e421:	add    BYTE PTR [rax+0x61],dh
  40e424:	outs   dx,BYTE PTR ds:[rsi]
  40e425:	outs   dx,DWORD PTR ds:[esi]
  40e427:	pop    rdi
  40e428:	movsxd esp,DWORD PTR [rcx+0x69]
  40e42b:	jb     0x40e49c
  40e42d:	pop    rdi
  40e42e:	jae    0x40e498
  40e430:	outs   dx,DWORD PTR ds:[rsi]
  40e431:	ja     0x40e492
  40e433:	ins    BYTE PTR es:[rdi],dx
  40e434:	(bad)  
  40e435:	jns    0x40e4a6
  40e437:	jne    0x40e4ad
  40e439:	add    BYTE PTR [rax],al
  40e43b:	add    BYTE PTR [rip+0x6e617000],bl        # 0x6ea25441
  40e441:	outs   dx,DWORD PTR ds:[esi]
  40e443:	pop    rdi
  40e444:	movsxd esp,DWORD PTR [rcx+0x69]
  40e447:	jb     0x40e4b8
  40e449:	pop    rdi
  40e44a:	jne    0x40e4bc
  40e44c:	fs (bad) 
  40e44e:	je     0x40e4b5
  40e450:	pop    rdi
  40e451:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40e454:	je     0x40e4bb
  40e456:	js     0x40e4cc
  40e458:	add    BYTE PTR [rax],al
  40e45a:	add    BYTE PTR [rax],al
  40e45c:	(bad)  
  40e45d:	add    BYTE PTR [rbx+0x61],ah
  40e460:	imul   esi,DWORD PTR [rdx+0x6f],0x6f6c635f
  40e467:	jae    0x40e4ce
  40e469:	pop    rdi
  40e46a:	jo     0x40e4cd
  40e46c:	je     0x40e4d6
  40e46e:	add    BYTE PTR [rax],al
  40e470:	or     eax,DWORD PTR [rax]
  40e472:	movsxd esp,DWORD PTR [rcx+0x69]
  40e475:	jb     0x40e4e6
  40e477:	pop    rdi
  40e478:	movsxd esi,DWORD PTR [rdx+0x65]
  40e47b:	(bad)  
  40e47c:	je     0x40e4e3
  40e47e:	add    BYTE PTR [rax],al
  40e480:	or     eax,0x69616300
  40e485:	jb     0x40e4f6
  40e487:	pop    rdi
  40e488:	fs gs (bad) 
  40e48b:	jne    0x40e4f4
  40e48d:	pop    rdi
  40e48e:	jb     0x40e4f5
  40e490:	jae    0x40e4f7
  40e492:	je     0x40e4f3
  40e494:	jae    0x40e50a
  40e496:	(bad)  
  40e497:	je     0x40e502
  40e499:	movsxd ebx,DWORD PTR [rdi+0x64]
  40e49c:	(bad)  
  40e49d:	je     0x40e500
  40e49f:	add    BYTE PTR [rsi],cl
  40e4a1:	add    BYTE PTR [rbx+0x61],ah
  40e4a4:	imul   esi,DWORD PTR [rdx+0x6f],0x7365645f
  40e4ab:	je     0x40e51f
  40e4ad:	outs   dx,DWORD PTR ds:[rsi]
  40e4ae:	jns    0x40e4b0
  40e4b0:	and    eax,DWORD PTR [rax]
  40e4b2:	movsxd esp,DWORD PTR [rcx+0x69]
  40e4b5:	jb     0x40e526
  40e4b7:	pop    rdi
  40e4b8:	imul   bp,WORD PTR [rsp+rbp*2+0x0],0x0
  40e4bf:	add    BYTE PTR [rip+0x69616300],ah        # 0x69a247c5
  40e4c5:	jb     0x40e536
  40e4c7:	pop    rdi
  40e4c8:	imul   bp,WORD PTR [rsp+rbp*2+0x5f],0x7270
  40e4cf:	gs jae 0x40e537
  40e4d2:	jb     0x40e54a
  40e4d4:	add    BYTE PTR gs:[rax],al
  40e4d7:	add    BYTE PTR [rdi],ch
  40e4d9:	add    BYTE PTR [rbx+0x61],ah
  40e4dc:	imul   esi,DWORD PTR [rdx+0x6f],0x6e6f665f
  40e4e3:	je     0x40e544
  40e4e5:	outs   dx,DWORD PTR ds:[rsi]
  40e4e6:	jo     0x40e55c
  40e4e8:	imul   ebp,DWORD PTR [rdi+0x6e],0x72635f73
  40e4ef:	gs (bad) 
  40e4f1:	je     0x40e558
  40e4f3:	add    BYTE PTR [rax],dh
  40e4f5:	add    BYTE PTR [rbx+0x61],ah
  40e4f8:	imul   esi,DWORD PTR [rdx+0x6f],0x6e6f665f
  40e4ff:	je     0x40e560
  40e501:	outs   dx,DWORD PTR ds:[rsi]
  40e502:	jo     0x40e578
  40e504:	imul   ebp,DWORD PTR [rdi+0x6e],0x65645f73
  40e50b:	jae    0x40e581
  40e50d:	jb     0x40e57e
  40e50f:	jns    0x40e511
  40e511:	add    BYTE PTR [rax],al
  40e513:	add    BYTE PTR [rdx],bh
  40e515:	add    BYTE PTR [rbx+0x61],ah
  40e518:	imul   esi,DWORD PTR [rdx+0x6f],0x6e6f665f
  40e51f:	je     0x40e580
  40e521:	outs   dx,DWORD PTR ds:[rsi]
  40e522:	jo     0x40e598
  40e524:	imul   ebp,DWORD PTR [rdi+0x6e],0x65735f73
  40e52b:	je     0x40e58c
  40e52d:	push   0x5f746e69
  40e532:	jae    0x40e5a8
  40e534:	jns    0x40e5a2
  40e536:	add    BYTE PTR gs:[rcx+0x0],dl
  40e53a:	movsxd esp,DWORD PTR [rcx+0x69]
  40e53d:	jb     0x40e5ae
  40e53f:	pop    rdi
  40e540:	addr32 gs je 0x40e5a3
  40e544:	ins    BYTE PTR es:[rdi],dx
  40e545:	imul   ebp,DWORD PTR [rsi+0x65],0x6469775f
  40e54c:	je     0x40e5b6
  40e54e:	add    BYTE PTR [rax],al
  40e550:	pop    rax
  40e551:	add    BYTE PTR [rbx+0x61],ah
  40e554:	imul   esi,DWORD PTR [rdx+0x6f],0x7465675f
  40e55b:	pop    rdi
  40e55c:	je     0x40e5bf
  40e55e:	jb     0x40e5c7
  40e560:	gs je  0x40e563
  40e563:	add    BYTE PTR [rcx+0x0],ah
  40e566:	movsxd esp,DWORD PTR [rcx+0x69]
  40e569:	jb     0x40e5da
  40e56b:	pop    rdi
  40e56c:	imul   ebp,DWORD PTR [rbp+0x61],0x735f6567
  40e573:	jne    0x40e5e7
  40e575:	data16 (bad) 
  40e577:	movsxd esp,DWORD PTR [rbp+0x5f]
  40e57a:	movsxd esi,DWORD PTR [rdx+0x65]
  40e57d:	(bad)  
  40e57e:	je     0x40e5e5
  40e580:	add    BYTE PTR [rax],al
  40e582:	add    BYTE PTR [rax],al
  40e584:	jno    0x40e586
  40e586:	movsxd esp,DWORD PTR [rcx+0x69]
  40e589:	jb     0x40e5fa
  40e58b:	pop    rdi
  40e58c:	ins    DWORD PTR es:[rdi],dx
  40e58d:	(bad)  
  40e58e:	je     0x40e602
  40e590:	imul   edi,DWORD PTR [rax+0x5f],0x74696e69
  40e597:	pop    rdi
  40e598:	imul   esp,DWORD PTR [rbp+riz*2+0x6e],0x79746974
  40e5a0:	add    BYTE PTR [rax],al
  40e5a2:	add    BYTE PTR [rax],al
  40e5a4:	mov    BYTE PTR [rax],al
  40e5a6:	movsxd esp,DWORD PTR [rcx+0x69]
  40e5a9:	jb     0x40e61a
  40e5ab:	pop    rdi
  40e5ac:	ins    DWORD PTR es:[rdi],dx
  40e5ad:	outs   dx,DWORD PTR ds:[rsi]
  40e5ae:	jbe    0x40e615
  40e5b0:	pop    rdi
  40e5b1:	je     0x40e622
  40e5b3:	add    BYTE PTR [rbx+0x69616300],cl
  40e5b9:	jb     0x40e62a
  40e5bb:	pop    rdi
  40e5bc:	jo     0x40e61f
  40e5be:	imul   ebp,DWORD PTR [rsi+0x74],0x90000000
  40e5c5:	add    BYTE PTR [rbx+0x61],ah
  40e5c8:	imul   esi,DWORD PTR [rdx+0x6f],0x7461705f
  40e5cf:	je     0x40e636
  40e5d1:	jb     0x40e641
  40e5d3:	pop    rdi
  40e5d4:	(bad)  
  40e5d5:	fs fs pop rdi
  40e5d8:	movsxd ebp,DWORD PTR [rdi+0x6c]
  40e5db:	outs   dx,DWORD PTR ds:[rsi]
  40e5dc:	jb     0x40e63d
  40e5de:	jae    0x40e654
  40e5e0:	outs   dx,DWORD PTR ds:[rsi]
  40e5e1:	jo     0x40e642
  40e5e3:	jb     0x40e64c
  40e5e5:	(bad)  
  40e5e7:	add    BYTE PTR [rdx+0x69616300],dl
  40e5ed:	jb     0x40e65e
  40e5ef:	pop    rdi
  40e5f0:	jo     0x40e653
  40e5f2:	je     0x40e668
  40e5f4:	gs jb  0x40e665
  40e5f7:	pop    rdi
  40e5f8:	movsxd esi,DWORD PTR [rdx+0x65]
  40e5fb:	(bad)  
  40e5fc:	je     0x40e663
  40e5fe:	pop    rdi
  40e5ff:	ins    BYTE PTR es:[rdi],dx
  40e600:	imul   ebp,DWORD PTR [rsi+0x65],0x7261
  40e607:	add    BYTE PTR [rax+rax*1+0x72696163],ch
  40e60e:	outs   dx,DWORD PTR ds:[rsi]
  40e60f:	pop    rdi
  40e610:	jo     0x40e676
  40e612:	pop    di
  40e614:	jae    0x40e68b
  40e616:	jb     0x40e67e
  40e618:	(bad)  
  40e619:	movsxd esp,DWORD PTR [rbp+0x5f]
  40e61c:	movsxd esi,DWORD PTR [rdx+0x65]
  40e61f:	(bad)  
  40e620:	je     0x40e687
  40e622:	add    BYTE PTR [rax],al
  40e624:	mov    ch,0x0
  40e626:	movsxd esp,DWORD PTR [rcx+0x69]
  40e629:	jb     0x40e69a
  40e62b:	pop    rdi
  40e62c:	jo     0x40e6a1
  40e62e:	pop    rdi
  40e62f:	jae    0x40e6a6
  40e631:	jb     0x40e699
  40e633:	(bad)  
  40e634:	movsxd esp,DWORD PTR [rbp+0x5f]
  40e637:	movsxd esi,DWORD PTR [rdx+0x65]
  40e63a:	(bad)  
  40e63b:	je     0x40e6a2
  40e63d:	add    BYTE PTR [rax],al
  40e63f:	add    BYTE PTR [rax+rax*1+0x72696163],bh
  40e646:	outs   dx,DWORD PTR ds:[rsi]
  40e647:	pop    rdi
  40e648:	jo     0x40e6bd
  40e64a:	pop    rdi
  40e64b:	jae    0x40e6c2
  40e64d:	jb     0x40e6b5
  40e64f:	(bad)  
  40e650:	movsxd esp,DWORD PTR [rbp+0x5f]
  40e653:	jae    0x40e6ba
  40e655:	je     0x40e6b6
  40e657:	gs jo  0x40e6cd
  40e65a:	add    BYTE PTR [rax],al
  40e65c:	int    0x0
  40e65e:	movsxd esp,DWORD PTR [rcx+0x69]
  40e661:	jb     0x40e6d2
  40e663:	pop    rdi
  40e664:	jb     0x40e6cb
  40e666:	movsxd esi,DWORD PTR [rcx+riz*2+0x6e]
  40e66a:	ins    BYTE PTR es:[edi],dx
  40e66c:	add    BYTE PTR gs:[rax],al
  40e66f:	add    al,ch
  40e671:	add    BYTE PTR [rbx+0x61],ah
  40e674:	imul   esi,DWORD PTR [rdx+0x6f],0x6c65725f
  40e67b:	pop    rdi
  40e67c:	ins    BYTE PTR es:[rdi],dx
  40e67d:	imul   ebp,DWORD PTR [rsi+0x65],0x6f745f
  40e684:	jmp    0x40e686
  40e686:	movsxd esp,DWORD PTR [rcx+0x69]
  40e689:	jb     0x40e6fa
  40e68b:	pop    rdi
  40e68c:	jb     0x40e6f3
  40e68e:	jae    0x40e704
  40e690:	outs   dx,DWORD PTR ds:[rsi]
  40e691:	jb     0x40e6f8
  40e693:	add    ah,ch
  40e695:	add    BYTE PTR [rbx+0x61],ah
  40e698:	imul   esi,DWORD PTR [rdx+0x6f],0x746f725f
  40e69f:	(bad)  
  40e6a0:	je     0x40e707
  40e6a2:	add    BYTE PTR [rax],al
  40e6a4:	in     eax,dx
  40e6a5:	add    BYTE PTR [rbx+0x61],ah
  40e6a8:	imul   esi,DWORD PTR [rdx+0x6f],0x7661735f
  40e6af:	add    BYTE PTR gs:[rax],al
  40e6b2:	add    BYTE PTR [rax],al
  40e6b4:	out    dx,al
  40e6b5:	add    BYTE PTR [rbx+0x61],ah
  40e6b8:	imul   esi,DWORD PTR [rdx+0x6f],0x6163735f
  40e6bf:	ins    BYTE PTR es:[rdi],dx
  40e6c0:	add    BYTE PTR gs:[rax],al
  40e6c3:	add    BYTE PTR [rbx],dl
  40e6c5:	add    DWORD PTR [rbx+0x61],esp
  40e6c8:	imul   esi,DWORD PTR [rdx+0x6f],0x7465735f
  40e6cf:	pop    rdi
  40e6d0:	ins    DWORD PTR es:[rdi],dx
  40e6d1:	(bad)  
  40e6d2:	je     0x40e746
  40e6d4:	imul   edi,DWORD PTR [rax+0x0],0x63011500
  40e6db:	(bad)  
  40e6dc:	imul   esi,DWORD PTR [rdx+0x6f],0x7465735f
  40e6e3:	pop    rdi
  40e6e4:	outs   dx,DWORD PTR ds:[rsi]
  40e6e5:	jo     0x40e74c
  40e6e7:	jb     0x40e74a
  40e6e9:	je     0x40e75a
  40e6eb:	jb     0x40e6ed
  40e6ed:	add    BYTE PTR [rax],al
  40e6ef:	add    BYTE PTR [rdi],dl
  40e6f1:	add    DWORD PTR [rbx+0x61],esp
  40e6f4:	imul   esi,DWORD PTR [rdx+0x6f],0x7465735f
  40e6fb:	pop    rdi
  40e6fc:	jae    0x40e76d
  40e6fe:	jne    0x40e772
  40e700:	movsxd esp,DWORD PTR [rbp+0x0]
  40e703:	add    BYTE PTR [rax],bl
  40e705:	add    DWORD PTR [rbx+0x61],esp
  40e708:	imul   esi,DWORD PTR [rdx+0x6f],0x7465735f
  40e70f:	pop    rdi
  40e710:	jae    0x40e781
  40e712:	jne    0x40e786
  40e714:	movsxd esp,DWORD PTR [rbp+0x5f]
  40e717:	jb     0x40e780
  40e719:	(bad)  
  40e71a:	add    BYTE PTR [rax],al
  40e71c:	sbb    DWORD PTR [rcx],eax
  40e71e:	movsxd esp,DWORD PTR [rcx+0x69]
  40e721:	jb     0x40e792
  40e723:	pop    rdi
  40e724:	jae    0x40e78b
  40e726:	je     0x40e787
  40e728:	jae    0x40e799
  40e72a:	jne    0x40e79e
  40e72c:	movsxd esp,DWORD PTR [rbp+0x5f]
  40e72f:	jb     0x40e798
  40e731:	(bad)  
  40e733:	add    BYTE PTR [rbx],ah
  40e735:	add    DWORD PTR [rbx+0x61],esp
  40e738:	imul   esi,DWORD PTR [rdx+0x6f],0x7274735f
  40e73f:	outs   dx,DWORD PTR ds:[rsi]
  40e740:	imul   esp,DWORD PTR [rbp+0x0],0x0
  40e744:	sub    eax,DWORD PTR [rcx]
  40e746:	movsxd esp,DWORD PTR [rcx+0x69]
  40e749:	jb     0x40e7ba
  40e74b:	pop    rdi
  40e74c:	jae    0x40e7c3
  40e74e:	jb     0x40e7b6
  40e750:	(bad)  
  40e751:	movsxd esp,DWORD PTR [rbp+0x5f]
  40e754:	fs gs jae 0x40e7cc
  40e758:	jb     0x40e7c9
  40e75a:	jns    0x40e75c
  40e75c:	sub    eax,0x69616301
  40e761:	jb     0x40e7d2
  40e763:	pop    rdi
  40e764:	jae    0x40e7db
  40e766:	jb     0x40e7ce
  40e768:	(bad)  
  40e769:	movsxd esp,DWORD PTR [rbp+0x5f]
  40e76c:	data16 ins BYTE PTR es:[rdi],dx
  40e76e:	jne    0x40e7e3
  40e770:	push   0x45000000
  40e775:	add    DWORD PTR [rbx+0x61],esp
  40e778:	imul   esi,DWORD PTR [rdx+0x6f],0x7275735f
  40e77f:	data16 (bad) 
  40e781:	movsxd esp,DWORD PTR [rbp+0x5f]
  40e784:	jb     0x40e7eb
  40e786:	data16 gs jb 0x40e7ef
  40e78a:	outs   dx,BYTE PTR ds:[rsi]
  40e78b:	movsxd esp,DWORD PTR [rbp+0x0]
  40e78e:	add    BYTE PTR [rax],al
  40e790:	push   rax
  40e791:	add    DWORD PTR [rbx+0x61],esp
  40e794:	imul   esi,DWORD PTR [rdx+0x6f],0x7275735f
  40e79b:	data16 (bad) 
  40e79d:	movsxd esp,DWORD PTR [rbp+0x5f]
  40e7a0:	ja     0x40e814
  40e7a2:	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x705f6f74
  40e7aa:	outs   dx,BYTE PTR ds:[rsi]
  40e7ab:	addr32 pop rdi
  40e7ad:	jae    0x40e823
  40e7af:	jb     0x40e816
  40e7b1:	(bad)  
  40e7b2:	ins    DWORD PTR es:[rdi],dx
  40e7b3:	add    BYTE PTR [rdx+0x1],dl
  40e7b6:	movsxd esp,DWORD PTR [rcx+0x69]
  40e7b9:	jb     0x40e82a
  40e7bb:	pop    rdi
  40e7bc:	jae    0x40e834
  40e7be:	addr32 pop rdi
  40e7c0:	jae    0x40e837
  40e7c2:	jb     0x40e82a
  40e7c4:	(bad)  
  40e7c5:	movsxd esp,DWORD PTR [rbp+0x5f]
  40e7c8:	movsxd esi,DWORD PTR [rdx+0x65]
  40e7cb:	(bad)  
  40e7cc:	je     0x40e833
  40e7ce:	add    BYTE PTR [rax],al
  40e7d0:	pop    rdi
  40e7d1:	add    DWORD PTR [rbx+0x61],esp
  40e7d4:	imul   esi,DWORD PTR [rdx+0x6f],0x6172745f
  40e7db:	outs   dx,BYTE PTR ds:[rsi]
  40e7dc:	jae    0x40e84a
  40e7de:	(bad)  
  40e7df:	je     0x40e846
  40e7e1:	add    BYTE PTR [rax],al
  40e7e3:	add    BYTE PTR [rax],bl
  40e7e5:	add    BYTE PTR [rdi+0x5f],ah
  40e7e8:	(bad)  
  40e7e9:	jae    0x40e84e
  40e7eb:	imul   ebp,DWORD PTR [rcx+0x5f],0x63727473
  40e7f2:	(bad)  
  40e7f3:	jae    0x40e85a
  40e7f5:	movsxd ebp,DWORD PTR [rbp+0x70]
  40e7f8:	add    BYTE PTR [rax],al
  40e7fa:	add    BYTE PTR [rax],al
  40e7fc:	sub    BYTE PTR [rax],al
  40e7fe:	addr32 pop rdi
  40e800:	(bad)  
  40e801:	jae    0x40e876
  40e803:	gs jb  0x40e87a
  40e806:	imul   ebp,DWORD PTR [rdi+0x6e],0x73656d5f
  40e80d:	jae    0x40e870
  40e80f:	addr32 gs pop rdi
  40e812:	gs js  0x40e885
  40e815:	jb     0x40e817
  40e817:	add    BYTE PTR [rcx+0x1],ch
  40e81a:	addr32 pop rdi
  40e81c:	imul   bp,WORD PTR [rbp+riz*2+0x5f],0x6567
  40e823:	je     0x40e884
  40e825:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40e828:	je     0x40e88f
  40e82a:	outs   dx,BYTE PTR ds:[rsi]
  40e82b:	je     0x40e8a0
  40e82d:	pop    rdi
  40e82e:	jne    0x40e8a4
  40e830:	data16 cmp BYTE PTR [rax],al
  40e833:	add    BYTE PTR [rbp+0x1],dh
  40e836:	addr32 pop rdi
  40e838:	outs   dx,WORD PTR ds:[rsi]
  40e83a:	jo     0x40e8a1
  40e83c:	outs   dx,BYTE PTR ds:[rsi]
  40e83d:	add    BYTE PTR [rax],al
  40e83f:	add    BYTE PTR [rdx+0x1],bh
  40e842:	addr32 pop rdi
  40e844:	data16 jb 0x40e8ac
  40e847:	add    BYTE PTR gs:[rax],al
  40e84a:	add    BYTE PTR [rax],al
  40e84c:	mov    DWORD PTR [rcx],eax
  40e84e:	addr32 pop rdi
  40e850:	addr32 gs je 0x40e8b3
  40e854:	jo     0x40e8c8
  40e856:	outs   dx,BYTE PTR ds:[esi]
  40e858:	(bad)  
  40e859:	ins    DWORD PTR es:[rdi],dx
  40e85a:	add    BYTE PTR gs:[rax],al
  40e85d:	add    esp,DWORD PTR [rdi+0x5f]
  40e860:	outs   dx,DWORD PTR ds:[rsi]
  40e861:	jo     0x40e8d7
  40e863:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e6f635f
  40e86a:	je     0x40e8d1
  40e86c:	js     0x40e8e2
  40e86e:	pop    rdi
  40e86f:	(bad)  
  40e870:	fs fs pop rdi
  40e873:	addr32 jb 0x40e8e5
  40e876:	jne    0x40e8e8
  40e878:	add    BYTE PTR [rax],al
  40e87a:	add    BYTE PTR [rax],al
  40e87c:	add    DWORD PTR [rbx],eax
  40e87e:	addr32 pop rdi
  40e880:	outs   dx,DWORD PTR ds:[rsi]
  40e881:	jo     0x40e8f7
  40e883:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e6f635f
  40e88a:	je     0x40e8f1
  40e88c:	js     0x40e902
  40e88e:	pop    rdi
  40e88f:	(bad)  
  40e890:	fs fs pop rdi
  40e893:	ins    DWORD PTR es:[rdi],dx
  40e894:	(bad)  
  40e895:	imul   ebp,DWORD PTR [rsi+0x5f],0x72746e65
  40e89c:	imul   esp,DWORD PTR [rbp+0x73],0x67030200
  40e8a3:	pop    rdi
  40e8a4:	outs   dx,DWORD PTR ds:[rsi]
  40e8a5:	jo     0x40e91b
  40e8a7:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e6f635f
  40e8ae:	je     0x40e915
  40e8b0:	js     0x40e926
  40e8b2:	pop    rdi
  40e8b3:	data16 jb 0x40e91b
  40e8b6:	add    BYTE PTR gs:[rdx],cl
  40e8b9:	add    esp,DWORD PTR [rdi+0x5f]
  40e8bc:	outs   dx,DWORD PTR ds:[rsi]
  40e8bd:	jo     0x40e933
  40e8bf:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e6f635f
  40e8c6:	je     0x40e92d
  40e8c8:	js     0x40e93e
  40e8ca:	pop    rdi
  40e8cb:	outs   dx,BYTE PTR ds:[rsi]
  40e8cc:	gs ja  0x40e8cf
  40e8cf:	add    BYTE PTR [rbx],cl
  40e8d1:	add    esp,DWORD PTR [rdi+0x5f]
  40e8d4:	outs   dx,DWORD PTR ds:[rsi]
  40e8d5:	jo     0x40e94b
  40e8d7:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e6f635f
  40e8de:	je     0x40e945
  40e8e0:	js     0x40e956
  40e8e2:	pop    rdi
  40e8e3:	jo     0x40e946
  40e8e5:	jb     0x40e95a
  40e8e7:	add    BYTE PTR gs:[rax],al
  40e8ea:	add    BYTE PTR [rax],al
  40e8ec:	adc    eax,0x6f5f6703
  40e8f1:	jo     0x40e967
  40e8f3:	imul   ebp,DWORD PTR [rdi+0x6e],0x7272655f
  40e8fa:	outs   dx,DWORD PTR ds:[rsi]
  40e8fb:	jb     0x40e95c
  40e8fd:	jno    0x40e974
  40e8ff:	(bad)  
  40e900:	jb     0x40e96d
  40e902:	add    BYTE PTR [rax],al
  40e904:	(bad)  
  40e905:	add    esp,DWORD PTR [rdi+0x5f]
  40e908:	outs   dx,DWORD PTR ds:[rsi]
  40e909:	jo     0x40e97f
  40e90b:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f72675f
  40e912:	jne    0x40e984
  40e914:	pop    rdi
  40e915:	(bad)  
  40e916:	fs fs pop rdi
  40e919:	outs   dx,BYTE PTR gs:[rsi]
  40e91b:	je     0x40e98f
  40e91d:	imul   esp,DWORD PTR [rbp+0x73],0x0
  40e924:	sbb    BYTE PTR [rbx],al
  40e926:	addr32 pop rdi
  40e928:	outs   dx,DWORD PTR ds:[rsi]
  40e929:	jo     0x40e99f
  40e92b:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f72675f
  40e932:	jne    0x40e9a4
  40e934:	pop    rdi
  40e935:	outs   dx,BYTE PTR ds:[rsi]
  40e936:	gs ja  0x40e939
  40e939:	add    BYTE PTR [rax],al
  40e93b:	add    BYTE PTR [rax],dh
  40e93d:	add    esp,DWORD PTR [rdi+0x5f]
  40e940:	jo     0x40e9b4
  40e942:	imul   ebp,DWORD PTR [rsi+0x74],0x727265
  40e949:	add    BYTE PTR [rax],al
  40e94b:	add    BYTE PTR [rcx],dh
  40e94d:	add    esp,DWORD PTR [rdi+0x5f]
  40e950:	jo     0x40e9c4
  40e952:	imul   ebp,DWORD PTR [rsi+0x74],0xfc000066
  40e959:	add    esp,DWORD PTR [rdi+0x5f]
  40e95c:	jae    0x40e9c3
  40e95e:	je     0x40e9bf
  40e960:	gs jb  0x40e9d5
  40e963:	outs   dx,DWORD PTR ds:[rsi]
  40e964:	jb     0x40e966
  40e966:	add    BYTE PTR [rax],al
  40e968:	inc    BYTE PTR [rbx]
  40e96a:	addr32 pop rdi
  40e96c:	jae    0x40e9d3
  40e96e:	je     0x40e9cf
  40e970:	jo     0x40e9e4
  40e972:	outs   dx,BYTE PTR ds:[esi]
  40e974:	(bad)  
  40e975:	ins    DWORD PTR es:[rdi],dx
  40e976:	add    BYTE PTR gs:[rsi],al
  40e979:	add    al,0x67
  40e97b:	pop    rdi
  40e97c:	jae    0x40e9ea
  40e97e:	imul   esp,DWORD PTR [rbx+0x65],0x6c6c615f
  40e985:	outs   dx,DWORD PTR ds:[rsi]
  40e986:	movsxd eax,DWORD PTR [rax]
  40e988:	or     DWORD PTR [rdi+riz*2],eax
  40e98b:	pop    rdi
  40e98c:	jae    0x40e9fa
  40e98e:	imul   esp,DWORD PTR [rbx+0x65],0x6572665f
  40e995:	xor    DWORD PTR gs:[rax],eax
  40e998:	rex.WRB add al,0x67
  40e99b:	pop    rdi
  40e99c:	jae    0x40ea0e
  40e99e:	(bad)  
  40e99f:	ja     0x40ea0f
  40e9a1:	pop    rdi
  40e9a2:	(bad)  
  40e9a3:	jae    0x40ea1e
  40e9a5:	outs   dx,BYTE PTR ds:[rsi]
  40e9a6:	movsxd ebx,DWORD PTR [rdi+0x77]
  40e9a9:	imul   esi,DWORD PTR [rax+rbp*2+0x5f],0x65706970
  40e9b1:	jae    0x40ea12
  40e9b3:	jne    0x40ea29
  40e9b5:	data16 cmp BYTE PTR [rax],al
  40e9b8:	rex.WRXB add al,0x67
  40e9bb:	pop    rdi
  40e9bc:	jae    0x40ea2e
  40e9be:	(bad)  
  40e9bf:	ja     0x40ea2f
  40e9c1:	pop    rdi
  40e9c2:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
  40e9c6:	gs pop rdi
  40e9c8:	jo     0x40ea33
  40e9ca:	add    BYTE PTR fs:[rax+0x4],dh
  40e9ce:	addr32 pop rdi
  40e9d0:	jae    0x40ea46
  40e9d2:	jb     0x40ea33
  40e9d4:	push   0x735f7361
  40e9d9:	jne    0x40ea41
  40e9db:	imul   di,WORD PTR [rax+0x0],0x7f00
  40e9e1:	add    al,0x67
  40e9e3:	pop    rdi
  40e9e4:	jae    0x40ea5a
  40e9e6:	jb     0x40ea4c
  40e9e8:	jne    0x40ea5a
  40e9ea:	add    BYTE PTR [rax],al
  40e9ec:	add    BYTE PTR [rdi+riz*2],0x5f
  40e9f0:	jae    0x40ea66
  40e9f2:	jb     0x40ea58
  40e9f4:	jne    0x40ea66
  40e9f6:	pop    rdi
  40e9f7:	jo     0x40ea6b
  40e9f9:	imul   ebp,DWORD PTR [rsi+0x74],0x66
  40ea00:	add    DWORD PTR [rdi+riz*2],0x7274735f
  40ea07:	fs jne 0x40ea7a
  40ea0a:	pop    rdi
  40ea0b:	jbe    0x40ea7d
  40ea0d:	jb     0x40ea78
  40ea0f:	outs   dx,BYTE PTR ds:[rsi]
  40ea10:	je     0x40ea78
  40ea12:	add    BYTE PTR [rax],al
  40ea14:	add    DWORD PTR [rdi+riz*2],0x5f
  40ea18:	jae    0x40ea8e
  40ea1a:	jb     0x40ea81
  40ea1c:	jb     0x40ea90
  40ea1e:	outs   dx,DWORD PTR ds:[rsi]
  40ea1f:	jb     0x40ea21
  40ea21:	add    BYTE PTR [rax],al
  40ea23:	add    BYTE PTR [rsi+0x735f6704],al
  40ea29:	je     0x40ea9d
  40ea2b:	imul   ebp,DWORD PTR [rsi+0x67],0x7070615f
  40ea32:	outs   dx,BYTE PTR gs:[rsi]
  40ea34:	add    BYTE PTR fs:[rax],al
  40ea37:	add    BYTE PTR [rcx+0x735f6704],cl
  40ea3d:	je     0x40eab1
  40ea3f:	imul   ebp,DWORD PTR [rsi+0x67],0x7070615f
  40ea46:	outs   dx,BYTE PTR gs:[rsi]
  40ea48:	fs pop rdi
  40ea4a:	jo     0x40eabe
  40ea4c:	imul   ebp,DWORD PTR [rsi+0x74],0x66
  40ea53:	add    BYTE PTR [rcx+0x735f6704],bl
  40ea59:	je     0x40eacd
  40ea5b:	imul   ebp,DWORD PTR [rsi+0x67],0x6572665f
  40ea62:	add    BYTE PTR gs:[rbp+0x735f6704],bl
  40ea69:	je     0x40eadd
  40ea6b:	imul   ebp,DWORD PTR [rsi+0x67],0x736e695f
  40ea72:	gs jb  0x40eae9
  40ea75:	pop    rdi
  40ea76:	movsxd eax,DWORD PTR [rax]
  40ea78:	movabs al,ds:0x6e697274735f6704
  40ea81:	addr32 pop rdi
  40ea83:	outs   dx,BYTE PTR ds:[rsi]
  40ea84:	gs ja  0x40ea87
  40ea87:	add    BYTE PTR [rbx+0x735f6704],ch
  40ea8d:	je     0x40eb01
  40ea8f:	imul   ebp,DWORD PTR [rsi+0x67],0x7572745f
  40ea96:	outs   dx,BYTE PTR ds:[rsi]
  40ea97:	movsxd esp,DWORD PTR [rcx+0x74]
  40ea9a:	add    BYTE PTR gs:[rbx+0x6f5f6700],bl
  40eaa1:	(bad)  
  40eaa2:	push   0x65
  40eaa4:	movsxd esi,DWORD PTR [rdi+rbx*2+0x75]
  40eaa8:	outs   dx,BYTE PTR ds:[rsi]
  40eaa9:	jb     0x40eb10
  40eaab:	data16 add BYTE PTR [rax],al
  40eaae:	add    BYTE PTR [rax],al
  40eab0:	fadd   DWORD PTR [rax]
  40eab2:	rex.R
  40eab3:	gs ins BYTE PTR es:[rdi],dx
  40eab5:	gs je  0x40eb1d
  40eab8:	rex.XB jb 0x40eb24
  40eabb:	je     0x40eb26
  40eabd:	movsxd esp,DWORD PTR [rcx+0x6c]
  40eac0:	push   rbx
  40eac1:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40eac6:	outs   dx,BYTE PTR ds:[rsi]
  40eac7:	add    al,bh
  40eac9:	add    BYTE PTR [rbp+0x6e],al
  40eacc:	je     0x40eb33
  40eace:	jb     0x40eb13
  40ead0:	jb     0x40eb3b
  40ead2:	je     0x40eb3d
  40ead4:	movsxd esp,DWORD PTR [rcx+0x6c]
  40ead7:	push   rbx
  40ead8:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40eadd:	outs   dx,BYTE PTR ds:[rsi]
  40eade:	add    BYTE PTR [rax],al
  40eae0:	int    0x1
  40eae2:	rex.RXB
  40eae3:	gs je  0x40eb29
  40eae6:	jne    0x40eb5a
  40eae8:	jb     0x40eb4f
  40eaea:	outs   dx,BYTE PTR ds:[rsi]
  40eaeb:	je     0x40eb3d
  40eaed:	jb     0x40eb5e
  40eaef:	movsxd esp,DWORD PTR [rbp+0x73]
  40eaf2:	jae    0x40eaf4
  40eaf4:	(bad)  
  40eaf5:	add    DWORD PTR [rdi+0x65],eax
  40eaf8:	je     0x40eb3d
  40eafa:	jne    0x40eb6e
  40eafc:	jb     0x40eb63
  40eafe:	outs   dx,BYTE PTR ds:[rsi]
  40eaff:	je     0x40eb51
  40eb01:	jb     0x40eb72
  40eb03:	movsxd esp,DWORD PTR [rbp+0x73]
  40eb06:	jae    0x40eb51
  40eb08:	fs add dl,dl
  40eb0b:	add    DWORD PTR [rdi+0x65],eax
  40eb0e:	je     0x40eb53
  40eb10:	jne    0x40eb84
  40eb12:	jb     0x40eb79
  40eb14:	outs   dx,BYTE PTR ds:[rsi]
  40eb15:	je     0x40eb6b
  40eb17:	push   0x64616572
  40eb1c:	rex.WB
  40eb1d:	add    BYTE PTR fs:[rax],al
  40eb20:	adc    BYTE PTR [rdx],al
  40eb22:	rex.RXB
  40eb23:	gs je  0x40eb72
  40eb26:	(bad)  
  40eb27:	jae    0x40eb9d
  40eb29:	rex.RB jb 0x40eb9e
  40eb2c:	outs   dx,DWORD PTR ds:[rsi]
  40eb2d:	jb     0x40eb2f
  40eb2f:	add    BYTE PTR [rbx+0x2],dh
  40eb32:	rex.RXB
  40eb33:	gs je  0x40eb89
  40eb36:	je     0x40eb99
  40eb38:	jb     0x40ebae
  40eb3a:	jne    0x40ebac
  40eb3c:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40eb3e:	outs   dx,WORD PTR ds:[rsi]
  40eb40:	add    BYTE PTR [r10+0x74654702],cl
  40eb47:	push   rbx
  40eb48:	jns    0x40ebbd
  40eb4a:	je     0x40ebb1
  40eb4c:	ins    DWORD PTR es:[rdi],dx
  40eb4d:	push   rsp
  40eb4e:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  40eb55:	ins    BYTE PTR es:[rdi],dx
  40eb56:	gs push rsp
  40eb58:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  40eb5f:	gs je  0x40ebb6
  40eb62:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  40eb69:	je     0x40eb6b
  40eb6b:	add    cl,bh
  40eb6d:	add    cl,BYTE PTR [rcx+0x6e]
  40eb70:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  40eb78:	rex.XB jb 0x40ebe4
  40eb7b:	je     0x40ebe6
  40eb7d:	movsxd esp,DWORD PTR [rcx+0x6c]
  40eb80:	push   rbx
  40eb81:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40eb86:	outs   dx,BYTE PTR ds:[rsi]
  40eb87:	add    BYTE PTR [rbx+0x3],cl
  40eb8a:	rex.WR
  40eb8b:	gs (bad) 
  40eb8d:	jbe    0x40ebf4
  40eb8f:	rex.XB jb 0x40ebfb
  40eb92:	je     0x40ebfd
  40eb94:	movsxd esp,DWORD PTR [rcx+0x6c]
  40eb97:	push   rbx
  40eb98:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40eb9d:	outs   dx,BYTE PTR ds:[rsi]
  40eb9e:	add    BYTE PTR [rax],al
  40eba0:	mov    ebx,0x65755103
  40eba5:	jb     0x40ec20
  40eba7:	push   rax
  40eba8:	gs jb  0x40ec11
  40ebab:	outs   dx,DWORD PTR ds:[rsi]
  40ebac:	jb     0x40ec1b
  40ebae:	(bad)  
  40ebaf:	outs   dx,BYTE PTR ds:[rsi]
  40ebb0:	movsxd esp,DWORD PTR [rbp+0x43]
  40ebb3:	outs   dx,DWORD PTR ds:[rsi]
  40ebb4:	jne    0x40ec24
  40ebb6:	je     0x40ec1d
  40ebb8:	jb     0x40ebba
  40ebba:	add    DWORD PTR [rdx+rdx*2],eax
  40ebbd:	je     0x40ec2b
  40ebbf:	rex.B
  40ebc0:	fs fs rex.RX jne 0x40ec33
  40ebc5:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40ebc9:	outs   dx,BYTE PTR ds:[rsi]
  40ebca:	push   rsp
  40ebcb:	(bad)  
  40ebcc:	(bad)  
  40ebcd:	ins    BYTE PTR es:[rdi],dx
  40ebce:	add    BYTE PTR gs:[rdx],al
  40ebd1:	add    al,0x52
  40ebd3:	je     0x40ec41
  40ebd5:	rex.XB (bad) 
  40ebd7:	jo     0x40ec4d
  40ebd9:	jne    0x40ec4d
  40ebdb:	rex.XB outs dx,DWORD PTR gs:[rsi]
  40ebde:	outs   dx,BYTE PTR ds:[rsi]
  40ebdf:	je     0x40ec46
  40ebe1:	js     0x40ec57
  40ebe3:	add    BYTE PTR [rcx],cl
  40ebe5:	add    al,0x52
  40ebe7:	je     0x40ec55
  40ebe9:	rex.WR outs dx,DWORD PTR ds:[rsi]
  40ebeb:	outs   dx,DWORD PTR ds:[rsi]
  40ebec:	imul   esi,DWORD PTR [rbp+0x70],0x46
  40ebf0:	jne    0x40ec60
  40ebf2:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40ebf6:	outs   dx,BYTE PTR ds:[rsi]
  40ebf7:	rex.RB outs dx,BYTE PTR ds:[rsi]
  40ebf9:	je     0x40ec6d
  40ebfb:	jns    0x40ebfd
  40ebfd:	add    BYTE PTR [rax],dl
  40ebff:	add    al,0x52
  40ec01:	je     0x40ec6f
  40ec03:	push   rsi
  40ec04:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  40ec0b:	outs   dx,BYTE PTR ds:[rsi]
  40ec0c:	ja     0x40ec77
  40ec0e:	outs   dx,BYTE PTR ds:[rsi]
  40ec0f:	add    BYTE PTR fs:[rax],al
  40ec12:	lahf   
  40ec13:	add    al,0x53
  40ec15:	gs je  0x40ec6d
  40ec18:	outs   dx,BYTE PTR ds:[rsi]
  40ec19:	push   0x6c646e61
  40ec1e:	gs fs rex.RB js 0x40ec86
  40ec23:	gs jo  0x40ec9a
  40ec26:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  40ec2d:	gs jb  0x40ec30
  40ec30:	lods   al,BYTE PTR ds:[rsi]
  40ec31:	add    al,0x53
  40ec33:	ins    BYTE PTR es:[rdi],dx
  40ec34:	gs gs jo 0x40ec38
  40ec38:	mov    edx,0x72655404
  40ec3d:	ins    DWORD PTR es:[rdi],dx
  40ec3e:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  40ec45:	outs   dx,DWORD PTR ds:[rsi]
  40ec46:	movsxd esp,DWORD PTR [rbp+0x73]
  40ec49:	jae    0x40ec4b
  40ec4b:	add    cl,al
  40ec4d:	add    al,0x54
  40ec4f:	ins    BYTE PTR es:[rdi],dx
  40ec50:	jae    0x40ec99
  40ec52:	gs je  0x40ecab
  40ec55:	(bad)  
  40ec56:	ins    BYTE PTR es:[rdi],dx
  40ec57:	jne    0x40ecbe
  40ec59:	add    dh,cl
  40ec5b:	add    al,0x55
  40ec5d:	outs   dx,BYTE PTR ds:[rsi]
  40ec5e:	push   0x6c646e61
  40ec63:	gs fs rex.RB js 0x40eccb
  40ec68:	gs jo  0x40ecdf
  40ec6b:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  40ec72:	gs jb  0x40ec75
  40ec75:	add    ah,ch
  40ec77:	add    al,0x56
  40ec79:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  40ec80:	jb     0x40ecf1
  40ec82:	je     0x40ece9
  40ec84:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  40ec88:	out    dx,al
  40ec89:	add    al,0x56
  40ec8b:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40ec92:	jne    0x40ecf9
  40ec94:	jb     0x40ed0f
  40ec96:	add    BYTE PTR [rax],al
  40ec98:	(bad)  
  40ec99:	add    BYTE PTR [rdi+0x5f],bl
  40ec9c:	rex.XB pop r15
  40ec9e:	jae    0x40ed10
  40eca0:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40eca4:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  40ecab:	ins    BYTE PTR es:[rdi],dx
  40ecac:	gs jb  0x40ecaf
  40ecaf:	add    BYTE PTR [rsi+0x0],cl
  40ecb2:	pop    rdi
  40ecb3:	pop    rdi
  40ecb4:	fs ins BYTE PTR es:[rdi],dx
  40ecb6:	ins    BYTE PTR es:[rdi],dx
  40ecb7:	outs   dx,DWORD PTR ds:[rsi]
  40ecb8:	outs   dx,BYTE PTR ds:[rsi]
  40ecb9:	gs js  0x40ed25
  40ecbc:	je     0x40ecbe
  40ecbe:	push   rcx
  40ecbf:	add    BYTE PTR [rdi+0x5f],bl
  40ecc2:	addr32 gs je 0x40ed33
  40ecc6:	(bad)  
  40ecc7:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  40ecce:	push   rdx
  40eccf:	add    BYTE PTR [rdi+0x5f],bl
  40ecd2:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  40ecd9:	add    BYTE PTR [rbx+0x0],dl
  40ecdc:	pop    rdi
  40ecdd:	pop    rdi
  40ecde:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  40ece5:	movsxd eax,DWORD PTR [rax]
  40ece7:	add    BYTE PTR [rdx+0x0],bl
  40ecea:	pop    rdi
  40eceb:	pop    rdi
  40ecec:	ins    BYTE PTR es:[rdi],dx
  40eced:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40ecf0:	jbe    0x40ed51
  40ecf2:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  40ecf9:	add    BYTE PTR [rdi+0x5f],bl
  40ecfc:	jae    0x40ed63
  40ecfe:	je     0x40ed5f
  40ed00:	(bad)  
  40ed01:	jo     0x40ed73
  40ed03:	pop    rdi
  40ed04:	je     0x40ed7f
  40ed06:	jo     0x40ed6d
  40ed08:	add    BYTE PTR [rax],al
  40ed0a:	(bad)  
  40ed0b:	add    BYTE PTR [rdi+0x5f],bl
  40ed0e:	jae    0x40ed75
  40ed10:	je     0x40ed87
  40ed12:	jae    0x40ed79
  40ed14:	jb     0x40ed83
  40ed16:	(bad)  
  40ed17:	je     0x40ed81
  40ed19:	gs jb  0x40ed8e
  40ed1c:	add    BYTE PTR [rax],al
  40ed1e:	jno    0x40ed20
  40ed20:	pop    rdi
  40ed21:	(bad)  
  40ed22:	movsxd ebp,DWORD PTR [rbp+0x64]
  40ed25:	ins    BYTE PTR es:[rdi],dx
  40ed26:	outs   dx,BYTE PTR ds:[rsi]
  40ed27:	add    BYTE PTR [rax+0x0],bh
  40ed2a:	pop    rdi
  40ed2b:	(bad)  
  40ed2c:	ins    DWORD PTR es:[rdi],dx
  40ed2d:	jae    0x40ed96
  40ed2f:	pop    rdi
  40ed30:	gs js  0x40ed9c
  40ed33:	je     0x40ed35
  40ed35:	add    BYTE PTR [rdx+0x65635f00],cl
  40ed3b:	js     0x40eda6
  40ed3d:	je     0x40ed3f
  40ed3f:	add    BYTE PTR [rdx+0x72655f00],bh
  40ed45:	jb     0x40edb5
  40ed47:	outs   dx,DWORD PTR ds:[rsi]
  40ed48:	add    BYTE PTR [rax],al
  40ed4a:	fiadd  DWORD PTR [rax]
  40ed4c:	pop    rdi
  40ed4d:	ins    WORD PTR es:[rdi],dx
  40ed4f:	outs   dx,DWORD PTR ds:[rsi]
  40ed50:	fs add BYTE PTR gs:[rax],al
  40ed54:	sbb    al,BYTE PTR [rcx]
  40ed56:	pop    rdi
  40ed57:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  40ed5e:	ins    DWORD PTR es:[rdi],dx
  40ed5f:	add    BYTE PTR [rax+0x6f6c5f01],al
  40ed65:	movsxd ebp,DWORD PTR [rbx+0x0]
  40ed68:	and    eax,0x6e6f5f02
  40ed6d:	gs js  0x40edd9
  40ed70:	je     0x40ed72
  40ed72:	add    DWORD PTR [rdx],0x5f
  40ed75:	jae    0x40edeb
  40ed77:	jb     0x40ede2
  40ed79:	movsxd ebp,DWORD PTR [rbp+0x70]
  40ed7c:	add    BYTE PTR [rax],al
  40ed7e:	(bad)
  40ed82:	outs   dx,BYTE PTR ds:[rsi]
  40ed83:	ins    BYTE PTR es:[rdi],dx
  40ed84:	outs   dx,DWORD PTR ds:[rsi]
  40ed85:	movsxd ebp,DWORD PTR [rbx+0x0]
  40ed88:	jg     0x40ed8d
  40ed8a:	(bad)  
  40ed8b:	(bad)  
  40ed8c:	outs   dx,DWORD PTR ds:[rsi]
  40ed8d:	jb     0x40ee03
  40ed8f:	add    BYTE PTR [rax+0x6c616303],dl
  40ed95:	ins    BYTE PTR es:[rdi],dx
  40ed96:	outs   dx,DWORD PTR ds:[rsi]
  40ed97:	movsxd eax,DWORD PTR [rax]
  40ed99:	add    BYTE PTR [rbp+0x69786503],bl
  40ed9f:	je     0x40eda1
  40eda1:	add    BYTE PTR [rcx+0x6c636603],ah
  40eda7:	outs   dx,DWORD PTR ds:[rsi]
  40eda8:	jae    0x40ee0f
  40edaa:	add    BYTE PTR [rax],al
  40edac:	mov    al,0x3
  40edae:	data16 jo 0x40ee23
  40edb1:	imul   ebp,DWORD PTR [rsi+0x74],0x3b70066
  40edb8:	data16 jb 0x40ee20
  40edbb:	add    BYTE PTR gs:[rax],al
  40edbe:	ret    0x6603
  40edc1:	ja     0x40ee35
  40edc3:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6d03f000
  40edcb:	(bad)  
  40edcc:	ins    BYTE PTR es:[rdi],dx
  40edcd:	ins    BYTE PTR es:[rdi],dx
  40edce:	outs   dx,DWORD PTR ds:[rsi]
  40edcf:	movsxd eax,DWORD PTR [rax]
  40edd1:	add    al,bh
  40edd3:	add    ebp,DWORD PTR [rbp+0x65]
  40edd6:	ins    DWORD PTR es:[rdi],dx
  40edd7:	movsxd esi,DWORD PTR [rax+0x79]
  40edda:	add    BYTE PTR [rax],al
  40eddc:	adc    al,0x4
  40edde:	jae    0x40ee45
  40ede0:	je     0x40ee4e
  40ede2:	outs   dx,DWORD PTR ds:[rsi]
  40ede3:	movsxd esp,DWORD PTR [rcx+0x6c]
  40ede6:	add    BYTE PTR gs:[rsi],dl
  40ede9:	add    al,0x73
  40edeb:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  40edf2:	(bad)  
  40edf3:	add    al,0x73
  40edf5:	jae    0x40ee5a
  40edf7:	(bad)  
  40edf8:	outs   dx,BYTE PTR ds:[rsi]
  40edf9:	data16 add BYTE PTR [rax],al
  40edfc:	sub    eax,DWORD PTR [rbx+rsi*2]
  40edff:	je     0x40ee73
  40ee01:	ins    BYTE PTR es:[rdi],dx
  40ee02:	outs   dx,BYTE PTR gs:[rsi]
  40ee04:	add    BYTE PTR [rax],al
  40ee06:	cs add al,0x73
  40ee09:	je     0x40ee7d
  40ee0b:	outs   dx,BYTE PTR ds:[rsi]
  40ee0c:	movsxd ebp,DWORD PTR [rbp+0x70]
  40ee0f:	add    BYTE PTR [rdx],dh
  40ee11:	add    al,0x73
  40ee13:	je     0x40ee87
  40ee15:	jb     0x40ee7a
  40ee17:	push   0x44e0072
  40ee1c:	jbe    0x40ee84
  40ee1e:	jo     0x40ee92
  40ee20:	imul   ebp,DWORD PTR [rsi+0x74],0xec000066
  40ee27:	add    al,0x5f
  40ee29:	outs   dx,WORD PTR fs:[rsi]
  40ee2c:	jo     0x40ee93
  40ee2e:	outs   dx,BYTE PTR ds:[rsi]
  40ee2f:	add    BYTE PTR [rax],al
  40ee31:	rol    BYTE PTR [rax],1
  40ee33:	add    BYTE PTR [rax],al
  40ee35:	rol    BYTE PTR [rax],1
  40ee37:	add    BYTE PTR [rax],al
  40ee39:	rol    BYTE PTR [rax],1
  40ee3b:	add    BYTE PTR [rax],al
  40ee3d:	rol    BYTE PTR [rax],1
  40ee3f:	add    BYTE PTR [rax],al
  40ee41:	rol    BYTE PTR [rax],1
  40ee43:	add    BYTE PTR [rax],al
  40ee45:	rol    BYTE PTR [rax],1
  40ee47:	add    BYTE PTR [rax],al
  40ee49:	rol    BYTE PTR [rax],1
  40ee4b:	add    BYTE PTR [rax],al
  40ee4d:	rol    BYTE PTR [rax],1
  40ee4f:	add    BYTE PTR [rax],al
  40ee51:	rol    BYTE PTR [rax],1
  40ee53:	add    BYTE PTR [rax],al
  40ee55:	rol    BYTE PTR [rax],1
  40ee57:	add    BYTE PTR [rax],al
  40ee59:	rol    BYTE PTR [rax],1
  40ee5b:	add    BYTE PTR [rax],al
  40ee5d:	rol    BYTE PTR [rax],1
  40ee5f:	add    BYTE PTR [rax],al
  40ee61:	rol    BYTE PTR [rax],1
  40ee63:	add    BYTE PTR [rax],al
  40ee65:	rol    BYTE PTR [rax],1
  40ee67:	add    BYTE PTR [rax],al
  40ee69:	rol    BYTE PTR [rax],1
  40ee6b:	add    BYTE PTR [rax],al
  40ee6d:	rol    BYTE PTR [rax],1
  40ee6f:	add    BYTE PTR [rax],al
  40ee71:	rol    BYTE PTR [rax],1
  40ee73:	add    BYTE PTR [rax],al
  40ee75:	rol    BYTE PTR [rax],1
  40ee77:	add    BYTE PTR [rax],al
  40ee79:	rol    BYTE PTR [rax],1
  40ee7b:	add    BYTE PTR [rax],al
  40ee7d:	rol    BYTE PTR [rax],1
  40ee7f:	add    BYTE PTR [rax],al
  40ee81:	rol    BYTE PTR [rax],1
  40ee83:	add    BYTE PTR [rax],al
  40ee85:	rol    BYTE PTR [rax],1
  40ee87:	add    BYTE PTR [rax],al
  40ee89:	rol    BYTE PTR [rax],1
  40ee8b:	add    BYTE PTR [rax],al
  40ee8d:	rol    BYTE PTR [rax],1
  40ee8f:	add    BYTE PTR [rax],al
  40ee91:	rol    BYTE PTR [rax],1
  40ee93:	add    BYTE PTR [rax],al
  40ee95:	rol    BYTE PTR [rax],1
  40ee97:	add    BYTE PTR [rax],al
  40ee99:	rol    BYTE PTR [rax],1
  40ee9b:	add    BYTE PTR [rax],al
  40ee9d:	rol    BYTE PTR [rax],1
  40ee9f:	add    BYTE PTR [rax],al
  40eea1:	rol    BYTE PTR [rax],1
  40eea3:	add    BYTE PTR [rax],al
  40eea5:	rol    BYTE PTR [rax],1
  40eea7:	add    BYTE PTR [rax],al
  40eea9:	rol    BYTE PTR [rax],1
  40eeab:	add    BYTE PTR [rax],al
  40eead:	rol    BYTE PTR [rax],1
  40eeaf:	add    BYTE PTR [rax],al
  40eeb1:	rol    BYTE PTR [rax],1
  40eeb3:	add    BYTE PTR [rax],al
  40eeb5:	rol    BYTE PTR [rax],1
  40eeb7:	add    BYTE PTR [rax],al
  40eeb9:	rol    BYTE PTR [rax],1
  40eebb:	add    BYTE PTR [rax],al
  40eebd:	rol    BYTE PTR [rax],1
  40eebf:	add    BYTE PTR [rax],al
  40eec1:	rol    BYTE PTR [rax],1
  40eec3:	add    BYTE PTR [rax],al
  40eec5:	rol    BYTE PTR [rax],1
  40eec7:	add    BYTE PTR [rax],al
  40eec9:	rol    BYTE PTR [rax],1
  40eecb:	add    BYTE PTR [rax],al
  40eecd:	rol    BYTE PTR [rax],1
  40eecf:	add    BYTE PTR [rax],al
  40eed1:	rol    BYTE PTR [rax],1
  40eed3:	add    BYTE PTR [rax],al
  40eed5:	rol    BYTE PTR [rax],1
  40eed7:	add    BYTE PTR [rax],al
  40eed9:	rol    BYTE PTR [rax],1
  40eedb:	add    BYTE PTR [rax],al
  40eedd:	rol    BYTE PTR [rax],1
  40eedf:	add    BYTE PTR [rax],al
  40eee1:	rol    BYTE PTR [rax],1
  40eee3:	add    BYTE PTR [rax],al
  40eee5:	rol    BYTE PTR [rax],1
  40eee7:	add    BYTE PTR [rax],al
  40eee9:	rol    BYTE PTR [rax],1
  40eeeb:	add    BYTE PTR [rax],al
  40eeed:	rol    BYTE PTR [rax],1
  40eeef:	add    BYTE PTR [rax],al
  40eef1:	rol    BYTE PTR [rax],1
  40eef3:	add    BYTE PTR [rax],al
  40eef5:	rol    BYTE PTR [rax],1
  40eef7:	add    BYTE PTR [rax],al
  40eef9:	rol    BYTE PTR [rax],1
  40eefb:	add    BYTE PTR [rax],al
  40eefd:	rol    BYTE PTR [rax],1
  40eeff:	add    BYTE PTR [rax],al
  40ef01:	rol    BYTE PTR [rax],1
  40ef03:	add    BYTE PTR [rax],al
  40ef05:	rol    BYTE PTR [rax],1
  40ef07:	add    BYTE PTR [rax],al
  40ef09:	rol    BYTE PTR [rax],1
  40ef0b:	add    BYTE PTR [rax],al
  40ef0d:	rol    BYTE PTR [rax],1
  40ef0f:	add    BYTE PTR [rax],al
  40ef11:	rol    BYTE PTR [rax],1
  40ef13:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  40ef17:	jo     0x40ef7a
  40ef19:	outs   dx,BYTE PTR ds:[rsi]
  40ef1a:	outs   dx,DWORD PTR ds:[esi]
  40ef1c:	sub    eax,0x2d302e31
  40ef21:	xor    BYTE PTR [rsi],ch
  40ef23:	fs ins BYTE PTR es:[rdi],dx
  40ef25:	ins    BYTE PTR es:[rdi],dx
  40ef26:	add    BYTE PTR [rax],al
  40ef28:	adc    al,0xd0
  40ef2a:	add    BYTE PTR [rax],al
  40ef2c:	adc    al,0xd0
  40ef2e:	add    BYTE PTR [rax],al
  40ef30:	adc    al,0xd0
  40ef32:	add    BYTE PTR [rax],al
  40ef34:	adc    al,0xd0
  40ef36:	add    BYTE PTR [rax],al
  40ef38:	adc    al,0xd0
  40ef3a:	add    BYTE PTR [rax],al
  40ef3c:	ins    BYTE PTR es:[rdi],dx
  40ef3d:	imul   esp,DWORD PTR [rdx+0x70],0x6f676e61
  40ef44:	movsxd esp,DWORD PTR [rcx+0x69]
  40ef47:	jb     0x40efb8
  40ef49:	sub    eax,0x2d302e31
  40ef4e:	xor    BYTE PTR [rsi],ch
  40ef50:	fs ins BYTE PTR es:[rdi],dx
  40ef52:	ins    BYTE PTR es:[rdi],dx
  40ef53:	add    BYTE PTR [rax],ch
  40ef55:	rol    BYTE PTR [rax],1
  40ef57:	add    BYTE PTR [rax],ch
  40ef59:	rol    BYTE PTR [rax],1
  40ef5b:	add    BYTE PTR [rax],ch
  40ef5d:	rol    BYTE PTR [rax],1
  40ef5f:	add    BYTE PTR [rax],ch
  40ef61:	rol    BYTE PTR [rax],1
  40ef63:	add    BYTE PTR [rax],ch
  40ef65:	rol    BYTE PTR [rax],1
  40ef67:	add    BYTE PTR [rax],ch
  40ef69:	rol    BYTE PTR [rax],1
  40ef6b:	add    BYTE PTR [rax],ch
  40ef6d:	rol    BYTE PTR [rax],1
  40ef6f:	add    BYTE PTR [rax],ch
  40ef71:	rol    BYTE PTR [rax],1
  40ef73:	add    BYTE PTR [rax],ch
  40ef75:	rol    BYTE PTR [rax],1
  40ef77:	add    BYTE PTR [rax],ch
  40ef79:	rol    BYTE PTR [rax],1
  40ef7b:	add    BYTE PTR [rax],ch
  40ef7d:	rol    BYTE PTR [rax],1
  40ef7f:	add    BYTE PTR [rax],ch
  40ef81:	rol    BYTE PTR [rax],1
  40ef83:	add    BYTE PTR [rax],ch
  40ef85:	rol    BYTE PTR [rax],1
  40ef87:	add    BYTE PTR [rax],ch
  40ef89:	rol    BYTE PTR [rax],1
  40ef8b:	add    BYTE PTR [rax],ch
  40ef8d:	rol    BYTE PTR [rax],1
  40ef8f:	add    BYTE PTR [rax],ch
  40ef91:	rol    BYTE PTR [rax],1
  40ef93:	add    BYTE PTR [rax],ch
  40ef95:	rol    BYTE PTR [rax],1
  40ef97:	add    BYTE PTR [rax],ch
  40ef99:	rol    BYTE PTR [rax],1
  40ef9b:	add    BYTE PTR [rax],ch
  40ef9d:	rol    BYTE PTR [rax],1
  40ef9f:	add    BYTE PTR [rax],ch
  40efa1:	rol    BYTE PTR [rax],1
  40efa3:	add    BYTE PTR [rax],ch
  40efa5:	rol    BYTE PTR [rax],1
  40efa7:	add    BYTE PTR [rax],ch
  40efa9:	rol    BYTE PTR [rax],1
  40efab:	add    BYTE PTR [rax],ch
  40efad:	rol    BYTE PTR [rax],1
  40efaf:	add    BYTE PTR [rax],ch
  40efb1:	rol    BYTE PTR [rax],1
  40efb3:	add    BYTE PTR [rax],ch
  40efb5:	rol    BYTE PTR [rax],1
  40efb7:	add    BYTE PTR [rax],ch
  40efb9:	rol    BYTE PTR [rax],1
  40efbb:	add    BYTE PTR [rax],ch
  40efbd:	rol    BYTE PTR [rax],1
  40efbf:	add    BYTE PTR [rax],ch
  40efc1:	rol    BYTE PTR [rax],1
  40efc3:	add    BYTE PTR [rax],ch
  40efc5:	rol    BYTE PTR [rax],1
  40efc7:	add    BYTE PTR [rax],ch
  40efc9:	rol    BYTE PTR [rax],1
  40efcb:	add    BYTE PTR [rax],ch
  40efcd:	rol    BYTE PTR [rax],1
  40efcf:	add    BYTE PTR [rax],ch
  40efd1:	rol    BYTE PTR [rax],1
  40efd3:	add    BYTE PTR [rax],ch
  40efd5:	rol    BYTE PTR [rax],1
  40efd7:	add    BYTE PTR [rax],ch
  40efd9:	rol    BYTE PTR [rax],1
  40efdb:	add    BYTE PTR [rax],ch
  40efdd:	rol    BYTE PTR [rax],1
  40efdf:	add    BYTE PTR [rax],ch
  40efe1:	rol    BYTE PTR [rax],1
  40efe3:	add    BYTE PTR [rax],ch
  40efe5:	rol    BYTE PTR [rax],1
  40efe7:	add    BYTE PTR [rax],ch
  40efe9:	rol    BYTE PTR [rax],1
  40efeb:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  40efef:	movsxd esp,DWORD PTR [rcx+0x69]
  40eff2:	jb     0x40f063
  40eff4:	sub    eax,0x6c642e32
  40eff9:	ins    BYTE PTR es:[rdi],dx
  40effa:	add    BYTE PTR [rax],al
  40effc:	cmp    al,0xd0
  40effe:	add    BYTE PTR [rax],al
  40f000:	cmp    al,0xd0
  40f002:	add    BYTE PTR [rax],al
  40f004:	cmp    al,0xd0
  40f006:	add    BYTE PTR [rax],al
  40f008:	cmp    al,0xd0
  40f00a:	add    BYTE PTR [rax],al
  40f00c:	cmp    al,0xd0
  40f00e:	add    BYTE PTR [rax],al
  40f010:	cmp    al,0xd0
  40f012:	add    BYTE PTR [rax],al
  40f014:	cmp    al,0xd0
  40f016:	add    BYTE PTR [rax],al
  40f018:	cmp    al,0xd0
  40f01a:	add    BYTE PTR [rax],al
  40f01c:	cmp    al,0xd0
  40f01e:	add    BYTE PTR [rax],al
  40f020:	cmp    al,0xd0
  40f022:	add    BYTE PTR [rax],al
  40f024:	cmp    al,0xd0
  40f026:	add    BYTE PTR [rax],al
  40f028:	cmp    al,0xd0
  40f02a:	add    BYTE PTR [rax],al
  40f02c:	cmp    al,0xd0
  40f02e:	add    BYTE PTR [rax],al
  40f030:	cmp    al,0xd0
  40f032:	add    BYTE PTR [rax],al
  40f034:	cmp    al,0xd0
  40f036:	add    BYTE PTR [rax],al
  40f038:	cmp    al,0xd0
  40f03a:	add    BYTE PTR [rax],al
  40f03c:	cmp    al,0xd0
  40f03e:	add    BYTE PTR [rax],al
  40f040:	cmp    al,0xd0
  40f042:	add    BYTE PTR [rax],al
  40f044:	cmp    al,0xd0
  40f046:	add    BYTE PTR [rax],al
  40f048:	cmp    al,0xd0
  40f04a:	add    BYTE PTR [rax],al
  40f04c:	cmp    al,0xd0
  40f04e:	add    BYTE PTR [rax],al
  40f050:	cmp    al,0xd0
  40f052:	add    BYTE PTR [rax],al
  40f054:	cmp    al,0xd0
  40f056:	add    BYTE PTR [rax],al
  40f058:	cmp    al,0xd0
  40f05a:	add    BYTE PTR [rax],al
  40f05c:	cmp    al,0xd0
  40f05e:	add    BYTE PTR [rax],al
  40f060:	cmp    al,0xd0
  40f062:	add    BYTE PTR [rax],al
  40f064:	cmp    al,0xd0
  40f066:	add    BYTE PTR [rax],al
  40f068:	cmp    al,0xd0
  40f06a:	add    BYTE PTR [rax],al
  40f06c:	cmp    al,0xd0
  40f06e:	add    BYTE PTR [rax],al
  40f070:	cmp    al,0xd0
  40f072:	add    BYTE PTR [rax],al
  40f074:	cmp    al,0xd0
  40f076:	add    BYTE PTR [rax],al
  40f078:	cmp    al,0xd0
  40f07a:	add    BYTE PTR [rax],al
  40f07c:	cmp    al,0xd0
  40f07e:	add    BYTE PTR [rax],al
  40f080:	ins    BYTE PTR es:[rdi],dx
  40f081:	imul   esp,DWORD PTR [rdx+0x67],0x2d62696c
  40f088:	xor    ch,BYTE PTR [rsi]
  40f08a:	xor    BYTE PTR [rip+0x6c642e30],ch        # 0x6ca51ec0
  40f090:	ins    BYTE PTR es:[rdi],dx
  40f091:	add    BYTE PTR [rax],al
  40f093:	add    BYTE PTR [rax-0x30],dl
  40f096:	add    BYTE PTR [rax],al
  40f098:	ins    BYTE PTR es:[rdi],dx
  40f099:	imul   esp,DWORD PTR [rdx+0x67],0x656a626f
  40f0a0:	movsxd esi,DWORD PTR [rbp+rbp*1+0x32]
  40f0a4:	xor    BYTE PTR cs:[rip+0x6c642e30],ch        # 0x6ca51edb
  40f0ab:	ins    BYTE PTR es:[rdi],dx
  40f0ac:	add    BYTE PTR [rax],al
  40f0ae:	add    BYTE PTR [rax],al
  40f0b0:	rol    BYTE PTR fs:[rax],1
  40f0b3:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40f0b7:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40f0bb:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40f0bf:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40f0c3:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40f0c7:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40f0cb:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40f0cf:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40f0d3:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40f0d7:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40f0db:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40f0df:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40f0e3:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40f0e7:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40f0eb:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40f0ef:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40f0f3:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40f0f7:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40f0fb:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40f0ff:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40f103:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40f107:	add    BYTE PTR [rax+rdx*8+0x0],ah
  40f10b:	add    BYTE PTR [rbx+0x45],cl
  40f10e:	push   rdx
  40f10f:	rex.WRX
  40f110:	rex.RB
  40f111:	xor    r14,QWORD PTR [rdx]
  40f114:	cs fs ins BYTE PTR es:[rdi],dx
  40f117:	ins    BYTE PTR es:[rdi],dx
  40f118:	add    BYTE PTR [rax],al
  40f11a:	add    BYTE PTR [rax],al
  40f11c:	js     0x40f0ee
  40f11e:	add    BYTE PTR [rax],al
  40f120:	js     0x40f0f2
  40f122:	add    BYTE PTR [rax],al
  40f124:	js     0x40f0f6
  40f126:	add    BYTE PTR [rax],al
  40f128:	js     0x40f0fa
  40f12a:	add    BYTE PTR [rax],al
  40f12c:	js     0x40f0fe
  40f12e:	add    BYTE PTR [rax],al
  40f130:	js     0x40f102
  40f132:	add    BYTE PTR [rax],al
  40f134:	js     0x40f106
  40f136:	add    BYTE PTR [rax],al
  40f138:	js     0x40f10a
  40f13a:	add    BYTE PTR [rax],al
  40f13c:	js     0x40f10e
  40f13e:	add    BYTE PTR [rax],al
  40f140:	js     0x40f112
  40f142:	add    BYTE PTR [rax],al
  40f144:	js     0x40f116
  40f146:	add    BYTE PTR [rax],al
  40f148:	js     0x40f11a
  40f14a:	add    BYTE PTR [rax],al
  40f14c:	js     0x40f11e
  40f14e:	add    BYTE PTR [rax],al
  40f150:	js     0x40f122
  40f152:	add    BYTE PTR [rax],al
  40f154:	js     0x40f126
  40f156:	add    BYTE PTR [rax],al
  40f158:	js     0x40f12a
  40f15a:	add    BYTE PTR [rax],al
  40f15c:	js     0x40f12e
  40f15e:	add    BYTE PTR [rax],al
  40f160:	js     0x40f132
  40f162:	add    BYTE PTR [rax],al
  40f164:	js     0x40f136
  40f166:	add    BYTE PTR [rax],al
  40f168:	js     0x40f13a
  40f16a:	add    BYTE PTR [rax],al
  40f16c:	js     0x40f13e
  40f16e:	add    BYTE PTR [rax],al
  40f170:	js     0x40f142
  40f172:	add    BYTE PTR [rax],al
  40f174:	js     0x40f146
  40f176:	add    BYTE PTR [rax],al
  40f178:	js     0x40f14a
  40f17a:	add    BYTE PTR [rax],al
  40f17c:	js     0x40f14e
  40f17e:	add    BYTE PTR [rax],al
  40f180:	js     0x40f152
  40f182:	add    BYTE PTR [rax],al
  40f184:	js     0x40f156
  40f186:	add    BYTE PTR [rax],al
  40f188:	js     0x40f15a
  40f18a:	add    BYTE PTR [rax],al
  40f18c:	js     0x40f15e
  40f18e:	add    BYTE PTR [rax],al
  40f190:	js     0x40f162
  40f192:	add    BYTE PTR [rax],al
  40f194:	js     0x40f166
  40f196:	add    BYTE PTR [rax],al
  40f198:	js     0x40f16a
  40f19a:	add    BYTE PTR [rax],al
  40f19c:	js     0x40f16e
  40f19e:	add    BYTE PTR [rax],al
  40f1a0:	js     0x40f172
  40f1a2:	add    BYTE PTR [rax],al
  40f1a4:	js     0x40f176
  40f1a6:	add    BYTE PTR [rax],al
  40f1a8:	ins    DWORD PTR es:[rdi],dx
  40f1a9:	jae    0x40f221
  40f1ab:	movsxd esi,DWORD PTR [rdx+0x74]
  40f1ae:	cs fs ins BYTE PTR es:[rdi],dx
  40f1b1:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

0000000000410000 <.CRT>:
	...
  410008:	(bad)  
  410009:	adc    DWORD PTR [rax+0x0],eax
	...
  410020:	adc    BYTE PTR [rax],dl
  410022:	add    BYTE PTR [rax],al
  410025:	add    BYTE PTR [rax],al
  410027:	add    BYTE PTR [rax],al
  410029:	rex.WB
  41002a:	add    BYTE PTR [rax],al
	...
  41003d:	add    BYTE PTR [rax],al
  41003f:	add    BYTE PTR [rax],dh
  410041:	rex.WXB
  410042:	add    BYTE PTR [rax],al
  410045:	add    BYTE PTR [rax],al
  410047:	add    BYTE PTR [rax],al
  410049:	rex.WXB
  41004a:	add    BYTE PTR [rax],al
	...

Disassembly of section .tls:

0000000000411000 <.tls>:
	...
  411020:	add    BYTE PTR [rax],dl
  411022:	add    BYTE PTR [r8],al
  411025:	add    BYTE PTR [rax],al
  411027:	add    BYTE PTR [rax+0x10],ah
  41102a:	add    BYTE PTR [r8],al
  41102d:	add    BYTE PTR [rax],al
  41102f:	add    ah,bl
  411031:	mov    BYTE PTR [rax+0x0],0x0
  411035:	add    BYTE PTR [rax],al
  411037:	add    BYTE PTR [rax+0x0],al
  41103a:	add    BYTE PTR [r8],al
	...
