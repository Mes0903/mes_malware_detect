
69df4166f03247f9694d0300db13485c0c6e4a4cf1b6968118fb4f0f9cf846dd.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
	...
   140001008:	mov    rax,rsp
   14000100b:	mov    QWORD PTR [rax+0x8],rbx
   14000100f:	mov    QWORD PTR [rax+0x18],rsi
   140001013:	push   rdi
   140001014:	push   r12
   140001016:	push   r13
   140001018:	push   r14
   14000101a:	push   r15
   14000101c:	sub    rsp,0x60
   140001020:	mov    r12,r8
   140001023:	mov    r15,rdx
   140001026:	xor    r13d,r13d
   140001029:	mov    QWORD PTR [rax+0x10],r13
   14000102d:	mov    edi,r13d
   140001030:	mov    QWORD PTR [rax-0x60],r13
   140001034:	test   rdx,rdx
   140001037:	jne    0x140001043
   140001039:	mov    ebx,0x80070057
   14000103e:	jmp    0x1400011a2
   140001043:	xor    r9d,r9d
   140001046:	lea    r8,[rsp+0x98]
   14000104e:	mov    edx,ecx
   140001050:	mov    rcx,QWORD PTR [rip+0x5579]        # 0x1400065d0
   140001057:	call   QWORD PTR [rip+0x31cb]        # 0x140004228
   14000105d:	movsxd r14,eax
   140001060:	test   eax,eax
   140001062:	jne    0x140001072
   140001064:	mov    ebx,0x80004005
   140001069:	mov    DWORD PTR [rsp+0x24],ebx
   14000106d:	jmp    0x14000119a
   140001072:	lea    eax,[r14+0x1]
   140001076:	movsxd rsi,eax
   140001079:	mov    eax,0x2
   14000107e:	mul    rsi
   140001081:	mov    rcx,0xffffffffffffffff
   140001088:	cmovo  rax,rcx
   14000108c:	mov    rcx,rax
   14000108f:	call   0x140002630
   140001094:	mov    rdi,rax
   140001097:	mov    QWORD PTR [rsp+0x28],rax
   14000109c:	test   rax,rax
   14000109f:	jne    0x1400010a8
   1400010a1:	mov    ebx,0x8007000e
   1400010a6:	jmp    0x140001069
   1400010a8:	mov    r8,r14
   1400010ab:	lea    rax,[rsi-0x1]
   1400010af:	mov    ecx,r13d
   1400010b2:	mov    ebx,0x80070057
   1400010b7:	mov    edx,0x7ffffffe
   1400010bc:	cmp    rax,rdx
   1400010bf:	cmova  ecx,ebx
   1400010c2:	mov    DWORD PTR [rsp+0x20],ecx
   1400010c6:	test   ecx,ecx
   1400010c8:	js     0x140001171
   1400010ce:	cmp    r14,rdx
   1400010d1:	jbe    0x1400010de
   1400010d3:	mov    ecx,ebx
   1400010d5:	mov    DWORD PTR [rsp+0x20],ebx
   1400010d9:	jmp    0x140001176
   1400010de:	mov    QWORD PTR [rsp+0x50],r14
   1400010e3:	mov    r9,QWORD PTR [rsp+0x98]
   1400010eb:	mov    QWORD PTR [rsp+0x40],r9
   1400010f0:	mov    QWORD PTR [rsp+0x48],rsi
   1400010f5:	mov    rax,rdi
   1400010f8:	mov    QWORD PTR [rsp+0x30],rax
   1400010fd:	mov    ecx,r13d
   140001100:	mov    rdx,r13
   140001103:	mov    QWORD PTR [rsp+0x38],rdx
   140001108:	test   rsi,rsi
   14000110b:	je     0x140001151
   14000110d:	test   r8,r8
   140001110:	je     0x14000114c
   140001112:	movzx  r10d,WORD PTR [r9]
   140001116:	test   r10w,r10w
   14000111a:	je     0x14000114c
   14000111c:	mov    WORD PTR [rax],r10w
   140001120:	add    rax,0x2
   140001124:	mov    QWORD PTR [rsp+0x30],rax
   140001129:	add    r9,0x2
   14000112d:	mov    QWORD PTR [rsp+0x40],r9
   140001132:	dec    rsi
   140001135:	mov    QWORD PTR [rsp+0x48],rsi
   14000113a:	dec    r8
   14000113d:	mov    QWORD PTR [rsp+0x50],r8
   140001142:	inc    rdx
   140001145:	mov    QWORD PTR [rsp+0x38],rdx
   14000114a:	jmp    0x140001108
   14000114c:	test   rsi,rsi
   14000114f:	jne    0x140001167
   140001151:	sub    rax,0x2
   140001155:	mov    QWORD PTR [rsp+0x30],rax
   14000115a:	dec    rdx
   14000115d:	mov    QWORD PTR [rsp+0x38],rdx
   140001162:	mov    ecx,0x8007007a
   140001167:	mov    WORD PTR [rax],r13w
   14000116b:	mov    DWORD PTR [rsp+0x20],ecx
   14000116f:	jmp    0x14000117a
   140001171:	test   rsi,rsi
   140001174:	je     0x14000117a
   140001176:	mov    WORD PTR [rdi],r13w
   14000117a:	mov    ebx,ecx
   14000117c:	mov    DWORD PTR [rsp+0x24],ecx
   140001180:	test   ecx,ecx
   140001182:	js     0x14000119a
   140001184:	lea    eax,[r14+0x1]
   140001188:	movsxd rcx,eax
   14000118b:	mov    QWORD PTR [r12],rcx
   14000118f:	mov    QWORD PTR [r15],rdi
   140001192:	mov    rdi,r13
   140001195:	mov    QWORD PTR [rsp+0x28],r13
   14000119a:	mov    rcx,rdi
   14000119d:	call   0x140002624
   1400011a2:	mov    eax,ebx
   1400011a4:	lea    r11,[rsp+0x60]
   1400011a9:	mov    rbx,QWORD PTR [r11+0x30]
   1400011ad:	mov    rsi,QWORD PTR [r11+0x40]
   1400011b1:	mov    rsp,r11
   1400011b4:	pop    r15
   1400011b6:	pop    r14
   1400011b8:	pop    r13
   1400011ba:	pop    r12
   1400011bc:	pop    rdi
   1400011bd:	ret    
   1400011be:	int3   
   1400011bf:	int3   
   1400011c0:	int3   
   1400011c1:	int3   
   1400011c2:	int3   
   1400011c3:	int3   
   1400011c4:	test   rcx,rcx
   1400011c7:	je     0x1400012cc
   1400011cd:	mov    QWORD PTR [rsp+0x8],rbx
   1400011d2:	push   rdi
   1400011d3:	sub    rsp,0x20
   1400011d7:	mov    rbx,rcx
   1400011da:	lea    rcx,[rip+0x32e7]        # 0x1400044c8
   1400011e1:	call   QWORD PTR [rip+0x2fb1]        # 0x140004198
   1400011e7:	movzx  edx,ax
   1400011ea:	mov    rcx,rbx
   1400011ed:	call   QWORD PTR [rip+0x2fc5]        # 0x1400041b8
   1400011f3:	mov    rdi,rax
   1400011f6:	test   rax,rax
   1400011f9:	je     0x140001214
   1400011fb:	xor    edx,edx
   1400011fd:	mov    rcx,rax
   140001200:	call   QWORD PTR [rip+0x2ef2]        # 0x1400040f8
   140001206:	mov    edx,0xfffffffd
   14000120b:	mov    rcx,rdi
   14000120e:	call   QWORD PTR [rip+0x2eec]        # 0x140004100
   140001214:	lea    rcx,[rip+0x32cd]        # 0x1400044e8
   14000121b:	call   QWORD PTR [rip+0x2f77]        # 0x140004198
   140001221:	movzx  edx,ax
   140001224:	mov    rcx,rbx
   140001227:	call   QWORD PTR [rip+0x2f8b]        # 0x1400041b8
   14000122d:	mov    rdi,rax
   140001230:	test   rax,rax
   140001233:	je     0x14000124e
   140001235:	xor    edx,edx
   140001237:	mov    rcx,rax
   14000123a:	call   QWORD PTR [rip+0x2eb8]        # 0x1400040f8
   140001240:	mov    edx,0xfffffffd
   140001245:	mov    rcx,rdi
   140001248:	call   QWORD PTR [rip+0x2eb2]        # 0x140004100
   14000124e:	lea    rcx,[rip+0x32b3]        # 0x140004508
   140001255:	call   QWORD PTR [rip+0x2f3d]        # 0x140004198
   14000125b:	movzx  edx,ax
   14000125e:	mov    rcx,rbx
   140001261:	call   QWORD PTR [rip+0x2f51]        # 0x1400041b8
   140001267:	mov    rdi,rax
   14000126a:	test   rax,rax
   14000126d:	je     0x140001288
   14000126f:	xor    edx,edx
   140001271:	mov    rcx,rax
   140001274:	call   QWORD PTR [rip+0x2e7e]        # 0x1400040f8
   14000127a:	mov    edx,0xfffffffd
   14000127f:	mov    rcx,rdi
   140001282:	call   QWORD PTR [rip+0x2e78]        # 0x140004100
   140001288:	lea    rcx,[rip+0x3279]        # 0x140004508
   14000128f:	call   QWORD PTR [rip+0x2f03]        # 0x140004198
   140001295:	movzx  edx,ax
   140001298:	mov    rcx,rbx
   14000129b:	call   QWORD PTR [rip+0x2f17]        # 0x1400041b8
   1400012a1:	mov    rbx,rax
   1400012a4:	test   rax,rax
   1400012a7:	je     0x1400012c2
   1400012a9:	mov    dl,0x1
   1400012ab:	mov    rcx,rax
   1400012ae:	call   QWORD PTR [rip+0x2e44]        # 0x1400040f8
   1400012b4:	mov    edx,0x4
   1400012b9:	mov    rcx,rbx
   1400012bc:	call   QWORD PTR [rip+0x2e3e]        # 0x140004100
   1400012c2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400012c7:	add    rsp,0x20
   1400012cb:	pop    rdi
   1400012cc:	ret    
   1400012cd:	int3   
   1400012ce:	int3   
   1400012cf:	int3   
   1400012d0:	int3   
   1400012d1:	int3   
   1400012d2:	int3   
   1400012d3:	int3   
   1400012d4:	int3   
   1400012d5:	int3   
   1400012d6:	int3   
   1400012d7:	int3   
   1400012d8:	int3   
   1400012d9:	int3   
   1400012da:	int3   
   1400012db:	int3   
   1400012dc:	int3   
   1400012dd:	int3   
   1400012de:	int3   
   1400012df:	int3   
   1400012e0:	mov    eax,0x14
   1400012e5:	ret    
   1400012e6:	int3   
   1400012e7:	int3   
   1400012e8:	int3   
   1400012e9:	int3   
   1400012ea:	int3   
   1400012eb:	int3   
   1400012ec:	int3   
   1400012ed:	int3   
   1400012ee:	int3   
   1400012ef:	int3   
   1400012f0:	lea    rax,[rip+0x3231]        # 0x140004528
   1400012f7:	ret    
   1400012f8:	int3   
   1400012f9:	int3   
   1400012fa:	int3   
   1400012fb:	int3   
   1400012fc:	int3   
   1400012fd:	int3   
   1400012fe:	int3   
   1400012ff:	int3   
   140001300:	mov    QWORD PTR [rsp+0x8],rbx
   140001305:	push   rdi
   140001306:	sub    rsp,0x20
   14000130a:	mov    rbx,QWORD PTR [rcx+0x40]
   14000130e:	mov    rdi,rcx
   140001311:	lea    rcx,[rip+0x3220]        # 0x140004538
   140001318:	call   QWORD PTR [rip+0x2e7a]        # 0x140004198
   14000131e:	movzx  edx,ax
   140001321:	mov    rcx,rbx
   140001324:	call   QWORD PTR [rip+0x2e8e]        # 0x1400041b8
   14000132a:	mov    rbx,QWORD PTR [rdi+0x40]
   14000132e:	lea    rcx,[rip+0x321b]        # 0x140004550
   140001335:	mov    QWORD PTR [rdi+0x50],rax
   140001339:	call   QWORD PTR [rip+0x2e59]        # 0x140004198
   14000133f:	movzx  edx,ax
   140001342:	mov    rcx,rbx
   140001345:	call   QWORD PTR [rip+0x2e6d]        # 0x1400041b8
   14000134b:	mov    rbx,QWORD PTR [rdi+0x40]
   14000134f:	lea    rcx,[rip+0x3212]        # 0x140004568
   140001356:	mov    QWORD PTR [rdi+0x58],rax
   14000135a:	call   QWORD PTR [rip+0x2e38]        # 0x140004198
   140001360:	movzx  edx,ax
   140001363:	mov    rcx,rbx
   140001366:	call   QWORD PTR [rip+0x2e4c]        # 0x1400041b8
   14000136c:	test   rax,rax
   14000136f:	je     0x14000137f
   140001371:	mov    edx,0x100
   140001376:	mov    rcx,rax
   140001379:	call   QWORD PTR [rip+0x2d99]        # 0x140004118
   14000137f:	mov    ebx,0x10
   140001384:	xor    r8d,r8d
   140001387:	mov    r9d,ebx
   14000138a:	mov    edx,0x470
   14000138f:	mov    rcx,rdi
   140001392:	call   QWORD PTR [rip+0x2d38]        # 0x1400040d0
   140001398:	lea    r9d,[rbx+0x7]
   14000139c:	mov    r8d,ebx
   14000139f:	mov    edx,0x48a
   1400013a4:	mov    rcx,rdi
   1400013a7:	call   QWORD PTR [rip+0x2d23]        # 0x1400040d0
   1400013ad:	cmp    QWORD PTR [rdi+0x68],0x0
   1400013b2:	jne    0x1400013cc
   1400013b4:	mov    rcx,QWORD PTR [rdi+0x38]
   1400013b8:	lea    r8d,[rbx-0xb]
   1400013bc:	xor    r9d,r9d
   1400013bf:	mov    edx,0x471
   1400013c4:	call   QWORD PTR [rip+0x2e76]        # 0x140004240
   1400013ca:	jmp    0x1400013d4
   1400013cc:	mov    rcx,rdi
   1400013cf:	call   0x140001674
   1400013d4:	xor    eax,eax
   1400013d6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400013db:	add    rsp,0x20
   1400013df:	pop    rdi
   1400013e0:	ret    
   1400013e1:	int3   
   1400013e2:	int3   
   1400013e3:	int3   
   1400013e4:	int3   
   1400013e5:	int3   
   1400013e6:	int3   
   1400013e7:	int3   
   1400013e8:	int3   
   1400013e9:	int3   
   1400013ea:	int3   
   1400013eb:	int3   
   1400013ec:	int3   
   1400013ed:	int3   
   1400013ee:	int3   
   1400013ef:	int3   
   1400013f0:	xor    eax,eax
   1400013f2:	ret    
   1400013f3:	int3   
   1400013f4:	int3   
   1400013f5:	int3   
   1400013f6:	int3   
   1400013f7:	int3   
   1400013f8:	int3   
   1400013f9:	int3   
   1400013fa:	int3   
   1400013fb:	int3   
   1400013fc:	int3   
   1400013fd:	int3   
   1400013fe:	int3   
   1400013ff:	int3   
   140001400:	mov    QWORD PTR [rsp+0x10],rbx
   140001405:	mov    QWORD PTR [rsp+0x20],rsi
   14000140a:	push   rbp
   14000140b:	push   rdi
   14000140c:	push   r12
   14000140e:	push   r14
   140001410:	push   r15
   140001412:	lea    rbp,[rsp-0x160]
   14000141a:	sub    rsp,0x260
   140001421:	mov    rax,QWORD PTR [rip+0x4be0]        # 0x140006008
   140001428:	xor    rax,rsp
   14000142b:	mov    QWORD PTR [rbp+0x150],rax
   140001432:	mov    rbx,rcx
   140001435:	mov    rsi,r8
   140001438:	lea    rcx,[rsp+0x30]
   14000143d:	call   QWORD PTR [rip+0x2d5d]        # 0x1400041a0
   140001443:	mov    rcx,QWORD PTR [rax]
   140001446:	cmp    QWORD PTR [rsi+0x8],rcx
   14000144a:	jne    0x140001641
   140001450:	mov    rax,QWORD PTR [rsi]
   140001453:	lea    rcx,[rip+0x3126]        # 0x140004580
   14000145a:	movzx  edi,WORD PTR [rax+0x90]
   140001461:	call   QWORD PTR [rip+0x2d31]        # 0x140004198
   140001467:	cmp    di,ax
   14000146a:	jne    0x140001641
   140001470:	xor    r12d,r12d
   140001473:	mov    BYTE PTR [rsi+0x10],0x1
   140001477:	xor    edx,edx
   140001479:	mov    WORD PTR [rsp+0x40],r12w
   14000147f:	mov    r8d,0x200
   140001485:	lea    rcx,[rsp+0x42]
   14000148a:	call   0x1400030ea
   14000148f:	mov    rdi,QWORD PTR [rbx+0x40]
   140001493:	lea    rcx,[rip+0x30ce]        # 0x140004568
   14000149a:	call   QWORD PTR [rip+0x2cf8]        # 0x140004198
   1400014a0:	movzx  edx,ax
   1400014a3:	mov    rcx,rdi
   1400014a6:	call   QWORD PTR [rip+0x2d0c]        # 0x1400041b8
   1400014ac:	mov    rsi,rax
   1400014af:	test   rax,rax
   1400014b2:	je     0x140001641
   1400014b8:	mov    r8d,0x101
   1400014be:	lea    rdx,[rsp+0x40]
   1400014c3:	mov    rcx,rax
   1400014c6:	call   QWORD PTR [rip+0x2cc4]        # 0x140004190
   1400014cc:	test   eax,eax
   1400014ce:	jns    0x1400014d6
   1400014d0:	mov    WORD PTR [rsp+0x40],r12w
   1400014d6:	lea    rdx,[rip+0x2fe3]        # 0x1400044c0
   1400014dd:	mov    rcx,rsi
   1400014e0:	call   QWORD PTR [rip+0x2c22]        # 0x140004108
   1400014e6:	mov    rdi,QWORD PTR [rbx+0x68]
   1400014ea:	test   rdi,rdi
   1400014ed:	je     0x140001633
   1400014f3:	mov    r14d,DWORD PTR [rdi+0xc]
   1400014f7:	mov    DWORD PTR [rsp+0x38],r12d
   1400014fc:	mov    DWORD PTR [rsp+0x30],r12d
   140001501:	test   r14d,r14d
   140001504:	jle    0x140001538
   140001506:	mov    rcx,QWORD PTR [rdi]
   140001509:	lea    rax,[rsp+0x30]
   14000150e:	lea    r9,[rsp+0x38]
   140001513:	mov    QWORD PTR [rsp+0x20],rax
   140001518:	xor    r8d,r8d
   14000151b:	lea    rdx,[rsp+0x40]
   140001520:	call   QWORD PTR [rip+0x2b7a]        # 0x1400040a0
   140001526:	test   eax,eax
   140001528:	je     0x140001538
   14000152a:	mov    eax,DWORD PTR [rsp+0x38]
   14000152e:	add    DWORD PTR [rdi+0x8],eax
   140001531:	mov    eax,DWORD PTR [rsp+0x30]
   140001535:	mov    DWORD PTR [rdi+0xc],eax
   140001538:	xor    eax,eax
   14000153a:	lea    rdi,[rsp+0x40]
   14000153f:	mov    ecx,0x202
   140001544:	rep stos BYTE PTR es:[rdi],al
   140001546:	mov    rax,QWORD PTR [rbx+0x68]
   14000154a:	lea    rcx,[rip+0x303f]        # 0x140004590
   140001551:	mov    rdi,QWORD PTR [rbx+0x40]
   140001555:	mov    r15d,DWORD PTR [rax+0xc]
   140001559:	call   QWORD PTR [rip+0x2c39]        # 0x140004198
   14000155f:	movzx  edx,ax
   140001562:	mov    rcx,rdi
   140001565:	call   QWORD PTR [rip+0x2c4d]        # 0x1400041b8
   14000156b:	mov    rdi,rax
   14000156e:	test   rax,rax
   140001571:	je     0x1400015f1
   140001573:	cmp    r14d,r15d
   140001576:	je     0x140001590
   140001578:	mov    rcx,QWORD PTR [rbx+0x38]
   14000157c:	xor    r9d,r9d
   14000157f:	mov    edx,0x471
   140001584:	lea    r8d,[r9+0x5]
   140001588:	call   QWORD PTR [rip+0x2cb2]        # 0x140004240
   14000158e:	jmp    0x1400015f1
   140001590:	lea    r8,[rsp+0x38]
   140001595:	mov    QWORD PTR [rsp+0x30],r12
   14000159a:	lea    rdx,[rsp+0x30]
   14000159f:	mov    ecx,0x3ea
   1400015a4:	call   0x140001008
   1400015a9:	test   eax,eax
   1400015ab:	js     0x1400015e7
   1400015ad:	mov    rdx,QWORD PTR [rsp+0x30]
   1400015b2:	mov    rcx,rdi
   1400015b5:	call   QWORD PTR [rip+0x2b4d]        # 0x140004108
   1400015bb:	mov    dl,0x1
   1400015bd:	mov    rcx,rdi
   1400015c0:	call   QWORD PTR [rip+0x2b32]        # 0x1400040f8
   1400015c6:	mov    rcx,QWORD PTR [rbx+0x40]
   1400015ca:	call   0x1400011c4
   1400015cf:	mov    rax,QWORD PTR [rsi]
   1400015d2:	mov    rdi,QWORD PTR [rax+0xa8]
   1400015d9:	mov    rcx,rdi
   1400015dc:	call   QWORD PTR [rip+0x2dfe]        # 0x1400043e0
   1400015e2:	mov    rcx,rsi
   1400015e5:	call   rdi
   1400015e7:	mov    rcx,QWORD PTR [rsp+0x30]
   1400015ec:	call   0x140002624
   1400015f1:	mov    rax,QWORD PTR [rbx+0x68]
   1400015f5:	cmp    DWORD PTR [rax+0xc],r12d
   1400015f9:	jne    0x140001613
   1400015fb:	mov    rcx,QWORD PTR [rbx+0x38]
   1400015ff:	xor    r9d,r9d
   140001602:	mov    edx,0x471
   140001607:	lea    r8d,[r9+0x5]
   14000160b:	call   QWORD PTR [rip+0x2c2f]        # 0x140004240
   140001611:	jmp    0x140001633
   140001613:	mov    rcx,rbx
   140001616:	call   0x140001674
   14000161b:	mov    rax,QWORD PTR [rsi]
   14000161e:	mov    rdi,QWORD PTR [rax+0xa8]
   140001625:	mov    rcx,rdi
   140001628:	call   QWORD PTR [rip+0x2db2]        # 0x1400043e0
   14000162e:	mov    rcx,rsi
   140001631:	call   rdi
   140001633:	lea    rdi,[rsp+0x40]
   140001638:	xor    eax,eax
   14000163a:	mov    ecx,0x202
   14000163f:	rep stos BYTE PTR es:[rdi],al
   140001641:	mov    rcx,QWORD PTR [rbp+0x150]
   140001648:	xor    rcx,rsp
   14000164b:	call   0x140002a20
   140001650:	lea    r11,[rsp+0x260]
   140001658:	mov    rbx,QWORD PTR [r11+0x38]
   14000165c:	mov    rsi,QWORD PTR [r11+0x48]
   140001660:	mov    rsp,r11
   140001663:	pop    r15
   140001665:	pop    r14
   140001667:	pop    r12
   140001669:	pop    rdi
   14000166a:	pop    rbp
   14000166b:	ret    
   14000166c:	int3   
   14000166d:	int3   
   14000166e:	int3   
   14000166f:	int3   
   140001670:	int3   
   140001671:	int3   
   140001672:	int3   
   140001673:	int3   
   140001674:	mov    QWORD PTR [rsp+0x8],rbx
   140001679:	mov    QWORD PTR [rsp+0x10],rsi
   14000167e:	push   rdi
   14000167f:	sub    rsp,0x20
   140001683:	mov    rdx,QWORD PTR [rcx+0x68]
   140001687:	mov    rdi,rcx
   14000168a:	test   rdx,rdx
   14000168d:	jne    0x1400016aa
   14000168f:	mov    rcx,QWORD PTR [rcx+0x38]
   140001693:	xor    r9d,r9d
   140001696:	mov    edx,0x471
   14000169b:	lea    r8d,[r9+0x5]
   14000169f:	call   QWORD PTR [rip+0x2b9b]        # 0x140004240
   1400016a5:	jmp    0x140001865
   1400016aa:	mov    rcx,QWORD PTR [rcx+0x50]
   1400016ae:	test   rcx,rcx
   1400016b1:	je     0x1400016bd
   1400016b3:	add    rdx,0x10
   1400016b7:	call   QWORD PTR [rip+0x2a4b]        # 0x140004108
   1400016bd:	mov    rcx,QWORD PTR [rdi+0x58]
   1400016c1:	test   rcx,rcx
   1400016c4:	je     0x1400016d7
   1400016c6:	mov    rdx,QWORD PTR [rdi+0x68]
   1400016ca:	add    rdx,0x210
   1400016d1:	call   QWORD PTR [rip+0x2a31]        # 0x140004108
   1400016d7:	mov    rbx,QWORD PTR [rdi+0x40]
   1400016db:	lea    rcx,[rip+0x2e86]        # 0x140004568
   1400016e2:	call   QWORD PTR [rip+0x2ab0]        # 0x140004198
   1400016e8:	movzx  edx,ax
   1400016eb:	mov    rcx,rbx
   1400016ee:	call   QWORD PTR [rip+0x2ac4]        # 0x1400041b8
   1400016f4:	test   rax,rax
   1400016f7:	je     0x140001709
   1400016f9:	lea    rdx,[rip+0x2dc0]        # 0x1400044c0
   140001700:	mov    rcx,rax
   140001703:	call   QWORD PTR [rip+0x29ff]        # 0x140004108
   140001709:	mov    rax,QWORD PTR [rdi+0x68]
   14000170d:	lea    rcx,[rip+0x2e94]        # 0x1400045a8
   140001714:	mov    rbx,QWORD PTR [rdi+0x40]
   140001718:	cmp    DWORD PTR [rax+0xc],0x0
   14000171c:	setne  sil
   140001720:	call   QWORD PTR [rip+0x2a72]        # 0x140004198
   140001726:	movzx  edx,ax
   140001729:	mov    rcx,rbx
   14000172c:	call   QWORD PTR [rip+0x2a86]        # 0x1400041b8
   140001732:	test   rax,rax
   140001735:	je     0x140001743
   140001737:	mov    dl,sil
   14000173a:	mov    rcx,rax
   14000173d:	call   QWORD PTR [rip+0x29cd]        # 0x140004110
   140001743:	mov    rbx,QWORD PTR [rdi+0x40]
   140001747:	lea    rcx,[rip+0x2dea]        # 0x140004538
   14000174e:	call   QWORD PTR [rip+0x2a44]        # 0x140004198
   140001754:	movzx  edx,ax
   140001757:	mov    rcx,rbx
   14000175a:	call   QWORD PTR [rip+0x2a58]        # 0x1400041b8
   140001760:	test   rax,rax
   140001763:	je     0x140001771
   140001765:	mov    dl,sil
   140001768:	mov    rcx,rax
   14000176b:	call   QWORD PTR [rip+0x299f]        # 0x140004110
   140001771:	mov    rbx,QWORD PTR [rdi+0x40]
   140001775:	lea    rcx,[rip+0x2e54]        # 0x1400045d0
   14000177c:	call   QWORD PTR [rip+0x2a16]        # 0x140004198
   140001782:	movzx  edx,ax
   140001785:	mov    rcx,rbx
   140001788:	call   QWORD PTR [rip+0x2a2a]        # 0x1400041b8
   14000178e:	test   rax,rax
   140001791:	je     0x14000179f
   140001793:	mov    dl,sil
   140001796:	mov    rcx,rax
   140001799:	call   QWORD PTR [rip+0x2971]        # 0x140004110
   14000179f:	mov    rbx,QWORD PTR [rdi+0x40]
   1400017a3:	lea    rcx,[rip+0x2da6]        # 0x140004550
   1400017aa:	call   QWORD PTR [rip+0x29e8]        # 0x140004198
   1400017b0:	movzx  edx,ax
   1400017b3:	mov    rcx,rbx
   1400017b6:	call   QWORD PTR [rip+0x29fc]        # 0x1400041b8
   1400017bc:	test   rax,rax
   1400017bf:	je     0x1400017cd
   1400017c1:	mov    dl,sil
   1400017c4:	mov    rcx,rax
   1400017c7:	call   QWORD PTR [rip+0x2943]        # 0x140004110
   1400017cd:	mov    rbx,QWORD PTR [rdi+0x40]
   1400017d1:	lea    rcx,[rip+0x2e18]        # 0x1400045f0
   1400017d8:	call   QWORD PTR [rip+0x29ba]        # 0x140004198
   1400017de:	movzx  edx,ax
   1400017e1:	mov    rcx,rbx
   1400017e4:	call   QWORD PTR [rip+0x29ce]        # 0x1400041b8
   1400017ea:	test   rax,rax
   1400017ed:	je     0x1400017fb
   1400017ef:	mov    dl,sil
   1400017f2:	mov    rcx,rax
   1400017f5:	call   QWORD PTR [rip+0x2915]        # 0x140004110
   1400017fb:	mov    rbx,QWORD PTR [rdi+0x40]
   1400017ff:	lea    rcx,[rip+0x2d62]        # 0x140004568
   140001806:	call   QWORD PTR [rip+0x298c]        # 0x140004198
   14000180c:	movzx  edx,ax
   14000180f:	mov    rcx,rbx
   140001812:	call   QWORD PTR [rip+0x29a0]        # 0x1400041b8
   140001818:	test   rax,rax
   14000181b:	je     0x140001829
   14000181d:	mov    dl,sil
   140001820:	mov    rcx,rax
   140001823:	call   QWORD PTR [rip+0x28e7]        # 0x140004110
   140001829:	mov    rbx,QWORD PTR [rdi+0x40]
   14000182d:	lea    rcx,[rip+0x2d4c]        # 0x140004580
   140001834:	call   QWORD PTR [rip+0x295e]        # 0x140004198
   14000183a:	movzx  edx,ax
   14000183d:	mov    rcx,rbx
   140001840:	call   QWORD PTR [rip+0x2972]        # 0x1400041b8
   140001846:	test   rax,rax
   140001849:	je     0x140001857
   14000184b:	mov    dl,sil
   14000184e:	mov    rcx,rax
   140001851:	call   QWORD PTR [rip+0x28b9]        # 0x140004110
   140001857:	and    DWORD PTR [rdi+0x64],0x0
   14000185b:	mov    rax,QWORD PTR [rdi+0x68]
   14000185f:	mov    ecx,DWORD PTR [rax+0xc]
   140001862:	mov    DWORD PTR [rdi+0x64],ecx
   140001865:	mov    rbx,QWORD PTR [rsp+0x30]
   14000186a:	mov    rsi,QWORD PTR [rsp+0x38]
   14000186f:	add    rsp,0x20
   140001873:	pop    rdi
   140001874:	ret    
   140001875:	int3   
   140001876:	int3   
   140001877:	int3   
   140001878:	int3   
   140001879:	int3   
   14000187a:	int3   
   14000187b:	int3   
   14000187c:	int3   
   14000187d:	int3   
   14000187e:	int3   
   14000187f:	int3   
   140001880:	mov    QWORD PTR [rsp+0x8],rbx
   140001885:	push   rdi
   140001886:	sub    rsp,0x20
   14000188a:	mov    ebx,edx
   14000188c:	mov    rdi,rcx
   14000188f:	call   QWORD PTR [rip+0x284b]        # 0x1400040e0
   140001895:	test   bl,0x1
   140001898:	je     0x1400018a2
   14000189a:	mov    rcx,rdi
   14000189d:	call   0x140002624
   1400018a2:	mov    rax,rdi
   1400018a5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400018aa:	add    rsp,0x20
   1400018ae:	pop    rdi
   1400018af:	ret    
   1400018b0:	int3   
   1400018b1:	int3   
   1400018b2:	int3   
   1400018b3:	int3   
   1400018b4:	int3   
   1400018b5:	int3   
   1400018b6:	int3   
   1400018b7:	int3   
   1400018b8:	mov    QWORD PTR [rsp+0x8],rbx
   1400018bd:	mov    QWORD PTR [rsp+0x20],rsi
   1400018c2:	push   rbp
   1400018c3:	push   rdi
   1400018c4:	push   r14
   1400018c6:	lea    rbp,[rsp-0x47]
   1400018cb:	sub    rsp,0x100
   1400018d2:	mov    edi,ecx
   1400018d4:	xor    esi,esi
   1400018d6:	xorps  xmm0,xmm0
   1400018d9:	mov    QWORD PTR [rbp+0x6f],rsi
   1400018dd:	lea    rcx,[rbp-0x29]
   1400018e1:	mov    r14d,esi
   1400018e4:	movdqu XMMWORD PTR [rsp+0x20],xmm0
   1400018ea:	mov    rbx,rdx
   1400018ed:	call   QWORD PTR [rip+0x28b5]        # 0x1400041a8
   1400018f3:	mov    rdx,QWORD PTR [rip+0x4cd6]        # 0x1400065d0
   1400018fa:	lea    rax,[rip+0x2de7]        # 0x1400046e8
   140001901:	mov    QWORD PTR [rbp-0x29],rax
   140001905:	lea    rcx,[rbp-0x29]
   140001909:	lea    rax,[rip+0x2e80]        # 0x140004790
   140001910:	mov    QWORD PTR [rbp+0x3f],rbx
   140001914:	mov    QWORD PTR [rbp-0x21],rax
   140001918:	mov    DWORD PTR [rbp+0x37],edi
   14000191b:	mov    DWORD PTR [rbp+0x3b],edi
   14000191e:	call   QWORD PTR [rip+0x27b4]        # 0x1400040d8
   140001924:	test   eax,eax
   140001926:	js     0x140001935
   140001928:	mov    rax,QWORD PTR [rbp-0x9]
   14000192c:	lea    r14d,[rsi+0x1]
   140001930:	mov    QWORD PTR [rsp+0x20],rax
   140001935:	xor    edx,edx
   140001937:	lea    rcx,[rsp+0x34]
   14000193c:	lea    r8d,[rdx+0x5c]
   140001940:	call   0x1400030ea
   140001945:	mov    rax,QWORD PTR [rip+0x4c84]        # 0x1400065d0
   14000194c:	lea    r8,[rbp+0x77]
   140001950:	mov    QWORD PTR [rbp-0x79],rax
   140001954:	lea    rdx,[rbp+0x6f]
   140001958:	lea    rax,[rsp+0x20]
   14000195d:	mov    DWORD PTR [rsp+0x30],0x60
   140001965:	mov    ecx,0x3e9
   14000196a:	mov    QWORD PTR [rbp-0x51],rax
   14000196e:	mov    DWORD PTR [rsp+0x34],0x4004020
   140001976:	mov    QWORD PTR [rsp+0x38],rsi
   14000197b:	mov    DWORD PTR [rbp-0x61],r14d
   14000197f:	mov    DWORD PTR [rbp-0x59],esi
   140001982:	call   0x140001008
   140001987:	mov    rcx,QWORD PTR [rbp-0x69]
   14000198b:	test   eax,eax
   14000198d:	mov    edx,0x40
   140001992:	cmovns rcx,QWORD PTR [rbp+0x6f]
   140001997:	or     DWORD PTR [rsp+0x34],0x2
   14000199c:	mov    QWORD PTR [rbp-0x69],rcx
   1400019a0:	mov    rcx,QWORD PTR [rip+0x4c29]        # 0x1400065d0
   1400019a7:	call   QWORD PTR [rip+0x288b]        # 0x140004238
   1400019ad:	lea    rcx,[rsp+0x30]
   1400019b2:	mov    QWORD PTR [rbp-0x71],rax
   1400019b6:	call   QWORD PTR [rip+0x26d4]        # 0x140004090
   1400019bc:	cmp    rax,0xffffffffffffffff
   1400019c0:	jne    0x1400019d6
   1400019c2:	call   QWORD PTR [rip+0x2830]        # 0x1400041f8
   1400019c8:	movzx  esi,ax
   1400019cb:	or     esi,0x80070000
   1400019d1:	test   eax,eax
   1400019d3:	cmovle esi,eax
   1400019d6:	mov    rcx,QWORD PTR [rbp+0x6f]
   1400019da:	call   0x140002624
   1400019df:	lea    rcx,[rbp-0x29]
   1400019e3:	call   QWORD PTR [rip+0x26f7]        # 0x1400040e0
   1400019e9:	lea    r11,[rsp+0x100]
   1400019f1:	mov    eax,esi
   1400019f3:	mov    rbx,QWORD PTR [r11+0x20]
   1400019f7:	mov    rsi,QWORD PTR [r11+0x38]
   1400019fb:	mov    rsp,r11
   1400019fe:	pop    r14
   140001a00:	pop    rdi
   140001a01:	pop    rbp
   140001a02:	ret    
   140001a03:	int3   
   140001a04:	int3   
   140001a05:	int3   
   140001a06:	int3   
   140001a07:	int3   
   140001a08:	int3   
   140001a09:	int3   
   140001a0a:	int3   
   140001a0b:	int3   
   140001a0c:	mov    rax,rsp
   140001a0f:	mov    QWORD PTR [rax+0x10],rbx
   140001a13:	mov    DWORD PTR [rax+0x20],r9d
   140001a17:	mov    QWORD PTR [rax+0x8],rcx
   140001a1b:	push   rbp
   140001a1c:	lea    rbp,[rax-0x57]
   140001a20:	sub    rsp,0xd0
   140001a27:	xor    edx,edx
   140001a29:	mov    DWORD PTR [rbp-0x51],0xa0
   140001a30:	mov    r8d,0x9c
   140001a36:	lea    rcx,[rbp-0x4d]
   140001a3a:	call   0x1400030ea
   140001a3f:	mov    rax,QWORD PTR [rip+0x4b8a]        # 0x1400065d0
   140001a46:	lea    rdx,[rbp+0x77]
   140001a4a:	xor    ebx,ebx
   140001a4c:	mov    QWORD PTR [rbp-0x45],rax
   140001a50:	xor    r9d,r9d
   140001a53:	mov    QWORD PTR [rbp+0x7f],rbx
   140001a57:	xor    r8d,r8d
   140001a5a:	mov    QWORD PTR [rbp+0x5f],rbx
   140001a5e:	lea    rcx,[rbp-0x51]
   140001a62:	mov    QWORD PTR [rbp-0x4d],rbx
   140001a66:	mov    QWORD PTR [rbp-0x35],0x3e9
   140001a6e:	mov    QWORD PTR [rbp-0x25],rbx
   140001a72:	mov    QWORD PTR [rbp-0x1d],0x3ed
   140001a7a:	mov    QWORD PTR [rbp-0x2d],0xfffd
   140001a82:	call   QWORD PTR [rip+0x2600]        # 0x140004088
   140001a88:	test   eax,eax
   140001a8a:	jns    0x140001ad1
   140001a8c:	lea    r8,[rbp-0x61]
   140001a90:	mov    ecx,0x3ed
   140001a95:	lea    rdx,[rbp+0x7f]
   140001a99:	call   0x140001008
   140001a9e:	test   eax,eax
   140001aa0:	js     0x140001ad1
   140001aa2:	lea    r8,[rbp-0x61]
   140001aa6:	mov    ecx,0x3e9
   140001aab:	lea    rdx,[rbp+0x5f]
   140001aaf:	call   0x140001008
   140001ab4:	mov    rbx,QWORD PTR [rbp+0x5f]
   140001ab8:	test   eax,eax
   140001aba:	js     0x140001ad1
   140001abc:	mov    rdx,QWORD PTR [rbp+0x7f]
   140001ac0:	mov    r9d,0x10
   140001ac6:	mov    r8,rbx
   140001ac9:	xor    ecx,ecx
   140001acb:	call   QWORD PTR [rip+0x275f]        # 0x140004230
   140001ad1:	mov    rcx,QWORD PTR [rbp+0x7f]
   140001ad5:	call   0x140002624
   140001ada:	mov    rcx,rbx
   140001add:	call   0x140002624
   140001ae2:	mov    rbx,QWORD PTR [rsp+0xe8]
   140001aea:	add    rsp,0xd0
   140001af1:	pop    rbp
   140001af2:	ret    
   140001af3:	int3   
   140001af4:	int3   
   140001af5:	int3   
   140001af6:	int3   
   140001af7:	int3   
   140001af8:	int3   
   140001af9:	int3   
   140001afa:	int3   
   140001afb:	int3   
   140001afc:	mov    QWORD PTR [rsp+0x18],rbx
   140001b01:	push   rbp
   140001b02:	push   rsi
   140001b03:	push   rdi
   140001b04:	push   r14
   140001b06:	push   r15
   140001b08:	lea    rbp,[rsp-0x170]
   140001b10:	sub    rsp,0x270
   140001b17:	mov    rax,QWORD PTR [rip+0x44ea]        # 0x140006008
   140001b1e:	xor    rax,rsp
   140001b21:	mov    QWORD PTR [rbp+0x160],rax
   140001b28:	xor    r14d,r14d
   140001b2b:	mov    rdi,rcx
   140001b2e:	mov    QWORD PTR [rsp+0x50],r14
   140001b33:	mov    ecx,r14d
   140001b36:	mov    QWORD PTR [rsp+0x48],rcx
   140001b3b:	mov    rsi,rdx
   140001b3e:	test   rdi,rdi
   140001b41:	je     0x140001cc3
   140001b47:	test   rdx,rdx
   140001b4a:	je     0x140001cc3
   140001b50:	lea    rax,[rsp+0x50]
   140001b55:	mov    r9d,0x20019
   140001b5b:	xor    r8d,r8d
   140001b5e:	mov    QWORD PTR [rsp+0x20],rax
   140001b63:	lea    rdx,[rip+0x2aa6]        # 0x140004610
   140001b6a:	mov    rcx,rdi
   140001b6d:	call   QWORD PTR [rip+0x24e5]        # 0x140004058
   140001b73:	mov    ebx,eax
   140001b75:	test   eax,eax
   140001b77:	jne    0x140001cbc
   140001b7d:	mov    ebx,r14d
   140001b80:	mov    r15d,0x100
   140001b86:	mov    rcx,QWORD PTR [rsp+0x50]
   140001b8b:	lea    r9,[rsp+0x40]
   140001b90:	mov    QWORD PTR [rsp+0x38],r14
   140001b95:	lea    r8,[rsp+0x60]
   140001b9a:	mov    QWORD PTR [rsp+0x30],r14
   140001b9f:	mov    edx,ebx
   140001ba1:	mov    QWORD PTR [rsp+0x28],r14
   140001ba6:	mov    QWORD PTR [rsp+0x20],r14
   140001bab:	mov    DWORD PTR [rsp+0x40],r15d
   140001bb0:	call   QWORD PTR [rip+0x2492]        # 0x140004048
   140001bb6:	mov    r10d,eax
   140001bb9:	test   eax,eax
   140001bbb:	jne    0x140001bfc
   140001bbd:	lea    rdx,[rsi+0x10]
   140001bc1:	mov    r8,r15
   140001bc4:	lea    r9,[rsp+0x60]
   140001bc9:	sub    r9,rdx
   140001bcc:	lea    rcx,[r8+0x7ffffefe]
   140001bd3:	test   rcx,rcx
   140001bd6:	je     0x140001bef
   140001bd8:	movzx  eax,WORD PTR [r9+rdx*1]
   140001bdd:	test   ax,ax
   140001be0:	je     0x140001bef
   140001be2:	mov    WORD PTR [rdx],ax
   140001be5:	add    rdx,0x2
   140001be9:	sub    r8,0x1
   140001bed:	jne    0x140001bcc
   140001bef:	test   r8,r8
   140001bf2:	jne    0x140001bf8
   140001bf4:	sub    rdx,0x2
   140001bf8:	mov    WORD PTR [rdx],r14w
   140001bfc:	inc    ebx
   140001bfe:	test   r10d,r10d
   140001c01:	je     0x140001b86
   140001c03:	lea    rax,[rsp+0x48]
   140001c08:	mov    r9d,0x20019
   140001c0e:	xor    r8d,r8d
   140001c11:	mov    QWORD PTR [rsp+0x20],rax
   140001c16:	lea    rdx,[rip+0x2a0b]        # 0x140004628
   140001c1d:	mov    rcx,rdi
   140001c20:	call   QWORD PTR [rip+0x2432]        # 0x140004058
   140001c26:	mov    ebx,eax
   140001c28:	test   eax,eax
   140001c2a:	jne    0x140001cbc
   140001c30:	mov    edi,r14d
   140001c33:	mov    rcx,QWORD PTR [rsp+0x48]
   140001c38:	lea    r9,[rsp+0x40]
   140001c3d:	mov    QWORD PTR [rsp+0x38],r14
   140001c42:	lea    r8,[rsp+0x60]
   140001c47:	mov    QWORD PTR [rsp+0x30],r14
   140001c4c:	mov    edx,edi
   140001c4e:	mov    QWORD PTR [rsp+0x28],r14
   140001c53:	mov    QWORD PTR [rsp+0x20],r14
   140001c58:	mov    DWORD PTR [rsp+0x40],r15d
   140001c5d:	call   QWORD PTR [rip+0x23e5]        # 0x140004048
   140001c63:	mov    ebx,eax
   140001c65:	test   eax,eax
   140001c67:	jne    0x140001cab
   140001c69:	lea    rcx,[rsi+0x210]
   140001c70:	mov    rdx,r15
   140001c73:	lea    r8,[rsp+0x60]
   140001c78:	sub    r8,rcx
   140001c7b:	lea    rax,[rdx+0x7ffffefe]
   140001c82:	test   rax,rax
   140001c85:	je     0x140001c9e
   140001c87:	movzx  eax,WORD PTR [r8+rcx*1]
   140001c8c:	test   ax,ax
   140001c8f:	je     0x140001c9e
   140001c91:	mov    WORD PTR [rcx],ax
   140001c94:	add    rcx,0x2
   140001c98:	sub    rdx,0x1
   140001c9c:	jne    0x140001c7b
   140001c9e:	test   rdx,rdx
   140001ca1:	jne    0x140001ca7
   140001ca3:	sub    rcx,0x2
   140001ca7:	mov    WORD PTR [rcx],r14w
   140001cab:	inc    edi
   140001cad:	test   ebx,ebx
   140001caf:	je     0x140001c33
   140001cb1:	cmp    ebx,0x103
   140001cb7:	jne    0x140001cbc
   140001cb9:	mov    ebx,r14d
   140001cbc:	mov    rcx,QWORD PTR [rsp+0x48]
   140001cc1:	jmp    0x140001cc8
   140001cc3:	mov    ebx,0x57
   140001cc8:	test   rcx,rcx
   140001ccb:	je     0x140001cd3
   140001ccd:	call   QWORD PTR [rip+0x23a5]        # 0x140004078
   140001cd3:	mov    rcx,QWORD PTR [rsp+0x50]
   140001cd8:	test   rcx,rcx
   140001cdb:	je     0x140001ce3
   140001cdd:	call   QWORD PTR [rip+0x2395]        # 0x140004078
   140001ce3:	mov    eax,ebx
   140001ce5:	mov    rcx,QWORD PTR [rbp+0x160]
   140001cec:	xor    rcx,rsp
   140001cef:	call   0x140002a20
   140001cf4:	mov    rbx,QWORD PTR [rsp+0x2b0]
   140001cfc:	add    rsp,0x270
   140001d03:	pop    r15
   140001d05:	pop    r14
   140001d07:	pop    rdi
   140001d08:	pop    rsi
   140001d09:	pop    rbp
   140001d0a:	ret    
   140001d0b:	int3   
   140001d0c:	int3   
   140001d0d:	int3   
   140001d0e:	int3   
   140001d0f:	int3   
   140001d10:	int3   
   140001d11:	int3   
   140001d12:	int3   
   140001d13:	int3   
   140001d14:	rex push rbx
   140001d16:	sub    rsp,0x30
   140001d1a:	and    QWORD PTR [rsp+0x48],0x0
   140001d20:	lea    rax,[rsp+0x48]
   140001d25:	mov    rbx,rcx
   140001d28:	mov    QWORD PTR [rsp+0x20],rax
   140001d2d:	mov    rcx,0xffffffff80000001
   140001d34:	lea    rdx,[rip+0x2905]        # 0x140004640
   140001d3b:	mov    r9d,0x10000
   140001d41:	xor    r8d,r8d
   140001d44:	call   QWORD PTR [rip+0x230e]        # 0x140004058
   140001d4a:	test   eax,eax
   140001d4c:	jne    0x140001d6b
   140001d4e:	mov    rcx,QWORD PTR [rsp+0x48]
   140001d53:	mov    rdx,rbx
   140001d56:	call   QWORD PTR [rip+0x22e4]        # 0x140004040
   140001d5c:	mov    rcx,QWORD PTR [rsp+0x48]
   140001d61:	mov    ebx,eax
   140001d63:	call   QWORD PTR [rip+0x230f]        # 0x140004078
   140001d69:	mov    eax,ebx
   140001d6b:	add    rsp,0x30
   140001d6f:	pop    rbx
   140001d70:	ret    
   140001d71:	int3   
   140001d72:	int3   
   140001d73:	int3   
   140001d74:	int3   
   140001d75:	int3   
   140001d76:	int3   
   140001d77:	int3   
   140001d78:	rex push rbx
   140001d7a:	sub    rsp,0x20
   140001d7e:	and    QWORD PTR [rsp+0x30],0x0
   140001d84:	mov    rbx,rcx
   140001d87:	test   rcx,rcx
   140001d8a:	jne    0x140001d91
   140001d8c:	lea    eax,[rcx+0x57]
   140001d8f:	jmp    0x140001dce
   140001d91:	call   QWORD PTR [rip+0x22b9]        # 0x140004050
   140001d97:	test   eax,eax
   140001d99:	je     0x140001dc8
   140001d9b:	lea    rdx,[rsp+0x30]
   140001da0:	mov    rcx,rbx
   140001da3:	call   QWORD PTR [rip+0x22c7]        # 0x140004070
   140001da9:	test   eax,eax
   140001dab:	je     0x140001dc8
   140001dad:	mov    rcx,QWORD PTR [rsp+0x30]
   140001db2:	call   0x140001d14
   140001db7:	mov    rcx,QWORD PTR [rsp+0x30]
   140001dbc:	mov    ebx,eax
   140001dbe:	call   QWORD PTR [rip+0x2444]        # 0x140004208
   140001dc4:	mov    eax,ebx
   140001dc6:	jmp    0x140001dce
   140001dc8:	call   QWORD PTR [rip+0x242a]        # 0x1400041f8
   140001dce:	add    rsp,0x20
   140001dd2:	pop    rbx
   140001dd3:	ret    
   140001dd4:	int3   
   140001dd5:	int3   
   140001dd6:	int3   
   140001dd7:	int3   
   140001dd8:	int3   
   140001dd9:	int3   
   140001dda:	int3   
   140001ddb:	int3   
   140001ddc:	mov    QWORD PTR [rsp+0x18],rbx
   140001de1:	push   rsi
   140001de2:	push   rdi
   140001de3:	push   r14
   140001de5:	sub    rsp,0x30
   140001de9:	and    QWORD PTR [rsp+0x58],0x0
   140001def:	xor    esi,esi
   140001df1:	and    DWORD PTR [rsp+0x50],esi
   140001df5:	xor    edi,edi
   140001df7:	mov    r14,rcx
   140001dfa:	test   rcx,rcx
   140001dfd:	jne    0x140001e07
   140001dff:	lea    ebx,[rcx+0x57]
   140001e02:	jmp    0x140001f59
   140001e07:	call   QWORD PTR [rip+0x23db]        # 0x1400041e8
   140001e0d:	mov    edx,0x8
   140001e12:	lea    r9,[rsp+0x58]
   140001e17:	mov    rcx,rax
   140001e1a:	lea    r8d,[rdx-0x7]
   140001e1e:	call   QWORD PTR [rip+0x21f4]        # 0x140004018
   140001e24:	test   eax,eax
   140001e26:	jne    0x140001e5c
   140001e28:	call   QWORD PTR [rip+0x23ca]        # 0x1400041f8
   140001e2e:	mov    ebx,eax
   140001e30:	cmp    eax,0x3f0
   140001e35:	jne    0x140001f2d
   140001e3b:	call   QWORD PTR [rip+0x239f]        # 0x1400041e0
   140001e41:	lea    r8,[rsp+0x58]
   140001e46:	mov    edx,0x8
   140001e4b:	mov    rcx,rax
   140001e4e:	call   QWORD PTR [rip+0x21b4]        # 0x140004008
   140001e54:	test   eax,eax
   140001e56:	je     0x140001f25
   140001e5c:	mov    rcx,QWORD PTR [rsp+0x58]
   140001e61:	lea    rax,[rsp+0x50]
   140001e66:	xor    r9d,r9d
   140001e69:	mov    QWORD PTR [rsp+0x20],rax
   140001e6e:	xor    r8d,r8d
   140001e71:	lea    edx,[r9+0x1]
   140001e75:	call   QWORD PTR [rip+0x21ad]        # 0x140004028
   140001e7b:	test   eax,eax
   140001e7d:	jne    0x140001ec9
   140001e7f:	call   QWORD PTR [rip+0x2373]        # 0x1400041f8
   140001e85:	mov    ebx,eax
   140001e87:	cmp    eax,0x7a
   140001e8a:	jne    0x140001f2d
   140001e90:	mov    edx,DWORD PTR [rsp+0x50]
   140001e94:	lea    ecx,[rax-0x3a]
   140001e97:	call   QWORD PTR [rip+0x2363]        # 0x140004200
   140001e9d:	mov    rsi,rax
   140001ea0:	test   rax,rax
   140001ea3:	je     0x140001ef6
   140001ea5:	mov    r9d,DWORD PTR [rsp+0x50]
   140001eaa:	lea    rax,[rsp+0x50]
   140001eaf:	mov    rcx,QWORD PTR [rsp+0x58]
   140001eb4:	lea    edx,[rbx-0x79]
   140001eb7:	mov    r8,rsi
   140001eba:	mov    QWORD PTR [rsp+0x20],rax
   140001ebf:	call   QWORD PTR [rip+0x2163]        # 0x140004028
   140001ec5:	test   eax,eax
   140001ec7:	je     0x140001f25
   140001ec9:	mov    rcx,QWORD PTR [rsi]
   140001ecc:	call   QWORD PTR [rip+0x217e]        # 0x140004050
   140001ed2:	test   eax,eax
   140001ed4:	je     0x140001f25
   140001ed6:	mov    rcx,QWORD PTR [rsi]
   140001ed9:	call   QWORD PTR [rip+0x2181]        # 0x140004060
   140001edf:	mov    edx,eax
   140001ee1:	mov    ecx,0x40
   140001ee6:	mov    ebx,eax
   140001ee8:	call   QWORD PTR [rip+0x2312]        # 0x140004200
   140001eee:	mov    rdi,rax
   140001ef1:	test   rax,rax
   140001ef4:	jne    0x140001efd
   140001ef6:	mov    ebx,0xe
   140001efb:	jmp    0x140001f2d
   140001efd:	mov    r8,QWORD PTR [rsi]
   140001f00:	mov    rdx,rax
   140001f03:	mov    ecx,ebx
   140001f05:	call   QWORD PTR [rip+0x2125]        # 0x140004030
   140001f0b:	test   eax,eax
   140001f0d:	je     0x140001f25
   140001f0f:	mov    rcx,rdi
   140001f12:	call   QWORD PTR [rip+0x2138]        # 0x140004050
   140001f18:	test   eax,eax
   140001f1a:	je     0x140001f25
   140001f1c:	mov    QWORD PTR [r14],rdi
   140001f1f:	xor    edi,edi
   140001f21:	xor    ebx,ebx
   140001f23:	jmp    0x140001f2d
   140001f25:	call   QWORD PTR [rip+0x22cd]        # 0x1400041f8
   140001f2b:	mov    ebx,eax
   140001f2d:	mov    rcx,QWORD PTR [rsp+0x58]
   140001f32:	test   rcx,rcx
   140001f35:	je     0x140001f3d
   140001f37:	call   QWORD PTR [rip+0x2293]        # 0x1400041d0
   140001f3d:	test   rsi,rsi
   140001f40:	je     0x140001f4b
   140001f42:	mov    rcx,rsi
   140001f45:	call   QWORD PTR [rip+0x22bd]        # 0x140004208
   140001f4b:	test   rdi,rdi
   140001f4e:	je     0x140001f59
   140001f50:	mov    rcx,rdi
   140001f53:	call   QWORD PTR [rip+0x22af]        # 0x140004208
   140001f59:	mov    eax,ebx
   140001f5b:	mov    rbx,QWORD PTR [rsp+0x60]
   140001f60:	add    rsp,0x30
   140001f64:	pop    r14
   140001f66:	pop    rdi
   140001f67:	pop    rsi
   140001f68:	ret    
   140001f69:	int3   
   140001f6a:	int3   
   140001f6b:	int3   
   140001f6c:	int3   
   140001f6d:	int3   
   140001f6e:	int3   
   140001f6f:	int3   
   140001f70:	mov    QWORD PTR [rsp+0x10],rbx
   140001f75:	mov    QWORD PTR [rsp+0x18],rdi
   140001f7a:	push   rbp
   140001f7b:	push   r12
   140001f7d:	push   r13
   140001f7f:	push   r14
   140001f81:	push   r15
   140001f83:	lea    rbp,[rsp-0x190]
   140001f8b:	sub    rsp,0x290
   140001f92:	mov    rax,QWORD PTR [rip+0x406f]        # 0x140006008
   140001f99:	xor    rax,rsp
   140001f9c:	mov    QWORD PTR [rbp+0x180],rax
   140001fa3:	xor    r13d,r13d
   140001fa6:	mov    r15,rcx
   140001fa9:	mov    QWORD PTR [rsp+0x60],r13
   140001fae:	mov    ebx,r13d
   140001fb1:	mov    QWORD PTR [rsp+0x58],r13
   140001fb6:	mov    r12d,r13d
   140001fb9:	mov    QWORD PTR [rsp+0x50],r13
   140001fbe:	mov    QWORD PTR [rsp+0x68],r13
   140001fc3:	test   rcx,rcx
   140001fc6:	jne    0x140001fd0
   140001fc8:	lea    edi,[rcx+0x57]
   140001fcb:	jmp    0x1400022e9
   140001fd0:	lea    rcx,[rsp+0x50]
   140001fd5:	call   0x140001ddc
   140001fda:	mov    edi,eax
   140001fdc:	test   eax,eax
   140001fde:	jne    0x140002289
   140001fe4:	mov    rcx,QWORD PTR [rsp+0x50]
   140001fe9:	call   QWORD PTR [rip+0x2061]        # 0x140004050
   140001fef:	test   eax,eax
   140001ff1:	je     0x140002281
   140001ff7:	mov    rcx,QWORD PTR [rsp+0x50]
   140001ffc:	lea    rdx,[rsp+0x68]
   140002001:	call   QWORD PTR [rip+0x2069]        # 0x140004070
   140002007:	test   eax,eax
   140002009:	je     0x140002281
   14000200f:	lea    rax,[rsp+0x60]
   140002014:	mov    r9d,0x20019
   14000201a:	xor    r8d,r8d
   14000201d:	mov    QWORD PTR [rsp+0x20],rax
   140002022:	lea    rdx,[rip+0x2617]        # 0x140004640
   140002029:	mov    rcx,0xffffffff80000001
   140002030:	call   QWORD PTR [rip+0x2022]        # 0x140004058
   140002036:	mov    edi,eax
   140002038:	test   eax,eax
   14000203a:	jne    0x140002289
   140002040:	mov    r14d,r13d
   140002043:	test   r12d,r12d
   140002046:	jne    0x140002289
   14000204c:	mov    rcx,QWORD PTR [rsp+0x60]
   140002051:	lea    r9,[rsp+0x70]
   140002056:	mov    QWORD PTR [rsp+0x38],r13
   14000205b:	lea    r8,[rbp-0x80]
   14000205f:	mov    QWORD PTR [rsp+0x30],r13
   140002064:	mov    edx,r14d
   140002067:	mov    QWORD PTR [rsp+0x28],r13
   14000206c:	mov    QWORD PTR [rsp+0x20],r13
   140002071:	mov    DWORD PTR [rsp+0x70],0x100
   140002079:	call   QWORD PTR [rip+0x1fe9]        # 0x140004068
   14000207f:	inc    r14d
   140002082:	mov    edi,eax
   140002084:	test   eax,eax
   140002086:	jne    0x140002275
   14000208c:	mov    r8,QWORD PTR [rsp+0x68]
   140002091:	lea    rcx,[rbp-0x80]
   140002095:	or     eax,0xffffffff
   140002098:	mov    DWORD PTR [rsp+0x20],r13d
   14000209d:	mov    r9d,eax
   1400020a0:	mov    edx,eax
   1400020a2:	call   QWORD PTR [rip+0x2148]        # 0x1400041f0
   1400020a8:	cmp    eax,0x2
   1400020ab:	jne    0x1400020bc
   1400020ad:	mov    rcx,QWORD PTR [rsp+0x50]
   1400020b2:	dec    r14d
   1400020b5:	call   0x140001d78
   1400020ba:	jmp    0x140002043
   1400020bc:	mov    rcx,QWORD PTR [rsp+0x60]
   1400020c1:	lea    rax,[rsp+0x58]
   1400020c6:	mov    r9d,0x20019
   1400020cc:	mov    QWORD PTR [rsp+0x20],rax
   1400020d1:	xor    r8d,r8d
   1400020d4:	lea    rdx,[rbp-0x80]
   1400020d8:	call   QWORD PTR [rip+0x1f7a]        # 0x140004058
   1400020de:	mov    edi,eax
   1400020e0:	test   eax,eax
   1400020e2:	jne    0x140002289
   1400020e8:	mov    ecx,0x410
   1400020ed:	call   0x140002630
   1400020f2:	mov    rbx,rax
   1400020f5:	test   rax,rax
   1400020f8:	je     0x140002117
   1400020fa:	mov    QWORD PTR [rax],r13
   1400020fd:	mov    DWORD PTR [rax+0x8],r13d
   140002101:	mov    DWORD PTR [rax+0xc],0x1
   140002108:	mov    WORD PTR [rax+0x210],r13w
   140002110:	mov    WORD PTR [rax+0x10],r13w
   140002115:	jmp    0x14000211a
   140002117:	mov    rbx,r13
   14000211a:	test   rbx,rbx
   14000211d:	je     0x14000226e
   140002123:	lea    rdx,[rsp+0x48]
   140002128:	mov    QWORD PTR [rsp+0x48],r13
   14000212d:	lea    rcx,[rbp-0x80]
   140002131:	call   QWORD PTR [rip+0x1f01]        # 0x140004038
   140002137:	test   eax,eax
   140002139:	jne    0x140002143
   14000213b:	call   QWORD PTR [rip+0x20b7]        # 0x1400041f8
   140002141:	jmp    0x14000215c
   140002143:	mov    rcx,QWORD PTR [rbx]
   140002146:	test   rcx,rcx
   140002149:	je     0x140002151
   14000214b:	call   QWORD PTR [rip+0x20b7]        # 0x140004208
   140002151:	mov    rax,QWORD PTR [rsp+0x48]
   140002156:	mov    QWORD PTR [rbx],rax
   140002159:	mov    eax,r13d
   14000215c:	test   eax,eax
   14000215e:	je     0x14000218a
   140002160:	lea    rcx,[rbp-0x80]
   140002164:	call   0x140001d14
   140002169:	mov    edi,r13d
   14000216c:	mov    rcx,QWORD PTR [rbx]
   14000216f:	test   rcx,rcx
   140002172:	je     0x14000217d
   140002174:	call   QWORD PTR [rip+0x208e]        # 0x140004208
   14000217a:	mov    QWORD PTR [rbx],r13
   14000217d:	mov    rcx,rbx
   140002180:	call   0x140002624
   140002185:	jmp    0x140002266
   14000218a:	mov    rcx,QWORD PTR [rsp+0x58]
   14000218f:	mov    rdx,rbx
   140002192:	call   0x140001afc
   140002197:	mov    edi,eax
   140002199:	cmp    eax,0xea
   14000219e:	je     0x140002169
   1400021a0:	test   eax,eax
   1400021a2:	jne    0x140002289
   1400021a8:	mov    rcx,QWORD PTR [rsp+0x58]
   1400021ad:	test   rcx,rcx
   1400021b0:	je     0x1400021bd
   1400021b2:	call   QWORD PTR [rip+0x1ec0]        # 0x140004078
   1400021b8:	mov    QWORD PTR [rsp+0x58],r13
   1400021bd:	mov    DWORD PTR [rsp+0x40],r13d
   1400021c2:	mov    DWORD PTR [rsp+0x48],r13d
   1400021c7:	cmp    DWORD PTR [rbx+0xc],r13d
   1400021cb:	jle    0x140002201
   1400021cd:	mov    rcx,QWORD PTR [rbx]
   1400021d0:	lea    rax,[rsp+0x48]
   1400021d5:	lea    r9,[rsp+0x40]
   1400021da:	mov    QWORD PTR [rsp+0x20],rax
   1400021df:	xor    r8d,r8d
   1400021e2:	lea    rdx,[rip+0x22d7]        # 0x1400044c0
   1400021e9:	call   QWORD PTR [rip+0x1eb1]        # 0x1400040a0
   1400021ef:	test   eax,eax
   1400021f1:	je     0x140002201
   1400021f3:	mov    eax,DWORD PTR [rsp+0x40]
   1400021f7:	add    DWORD PTR [rbx+0x8],eax
   1400021fa:	mov    eax,DWORD PTR [rsp+0x48]
   1400021fe:	mov    DWORD PTR [rbx+0xc],eax
   140002201:	mov    DWORD PTR [rsp+0x48],r13d
   140002206:	mov    DWORD PTR [rsp+0x40],r13d
   14000220b:	cmp    DWORD PTR [rbx+0xc],r13d
   14000220f:	jle    0x140002244
   140002211:	mov    rcx,QWORD PTR [rbx]
   140002214:	lea    rax,[rsp+0x40]
   140002219:	lea    r9,[rsp+0x48]
   14000221e:	mov    QWORD PTR [rsp+0x20],rax
   140002223:	xor    r8d,r8d
   140002226:	xor    edx,edx
   140002228:	call   QWORD PTR [rip+0x1e72]        # 0x1400040a0
   14000222e:	test   eax,eax
   140002230:	je     0x140002240
   140002232:	mov    eax,DWORD PTR [rsp+0x48]
   140002236:	add    DWORD PTR [rbx+0x8],eax
   140002239:	mov    eax,DWORD PTR [rsp+0x40]
   14000223d:	mov    DWORD PTR [rbx+0xc],eax
   140002240:	cmp    DWORD PTR [rbx+0xc],r13d
   140002244:	jne    0x14000225d
   140002246:	cmp    DWORD PTR [rbx+0x8],r13d
   14000224a:	jne    0x14000225d
   14000224c:	dec    r14d
   14000224f:	lea    rcx,[rbp-0x80]
   140002253:	call   0x140001d14
   140002258:	jmp    0x14000216c
   14000225d:	mov    r12d,0x1
   140002263:	mov    QWORD PTR [r15],rbx
   140002266:	mov    rbx,r13
   140002269:	jmp    0x140002043
   14000226e:	mov    edi,0xe
   140002273:	jmp    0x140002289
   140002275:	cmp    eax,0x103
   14000227a:	jne    0x140002289
   14000227c:	mov    edi,r13d
   14000227f:	jmp    0x140002289
   140002281:	call   QWORD PTR [rip+0x1f71]        # 0x1400041f8
   140002287:	mov    edi,eax
   140002289:	cmp    QWORD PTR [rsp+0x50],r13
   14000228e:	je     0x14000229b
   140002290:	mov    rcx,QWORD PTR [rsp+0x50]
   140002295:	call   QWORD PTR [rip+0x1f6d]        # 0x140004208
   14000229b:	mov    rcx,QWORD PTR [rsp+0x68]
   1400022a0:	test   rcx,rcx
   1400022a3:	je     0x1400022ab
   1400022a5:	call   QWORD PTR [rip+0x1f5d]        # 0x140004208
   1400022ab:	test   rbx,rbx
   1400022ae:	je     0x1400022c9
   1400022b0:	mov    rcx,QWORD PTR [rbx]
   1400022b3:	test   rcx,rcx
   1400022b6:	je     0x1400022c1
   1400022b8:	call   QWORD PTR [rip+0x1f4a]        # 0x140004208
   1400022be:	mov    QWORD PTR [rbx],r13
   1400022c1:	mov    rcx,rbx
   1400022c4:	call   0x140002624
   1400022c9:	mov    rcx,QWORD PTR [rsp+0x60]
   1400022ce:	test   rcx,rcx
   1400022d1:	je     0x1400022d9
   1400022d3:	call   QWORD PTR [rip+0x1d9f]        # 0x140004078
   1400022d9:	mov    rcx,QWORD PTR [rsp+0x58]
   1400022de:	test   rcx,rcx
   1400022e1:	je     0x1400022e9
   1400022e3:	call   QWORD PTR [rip+0x1d8f]        # 0x140004078
   1400022e9:	mov    eax,edi
   1400022eb:	mov    rcx,QWORD PTR [rbp+0x180]
   1400022f2:	xor    rcx,rsp
   1400022f5:	call   0x140002a20
   1400022fa:	lea    r11,[rsp+0x290]
   140002302:	mov    rbx,QWORD PTR [r11+0x38]
   140002306:	mov    rdi,QWORD PTR [r11+0x40]
   14000230a:	mov    rsp,r11
   14000230d:	pop    r15
   14000230f:	pop    r14
   140002311:	pop    r13
   140002313:	pop    r12
   140002315:	pop    rbp
   140002316:	ret    
   140002317:	int3   
   140002318:	int3   
   140002319:	int3   
   14000231a:	int3   
   14000231b:	int3   
   14000231c:	int3   
   14000231d:	int3   
   14000231e:	int3   
   14000231f:	int3   
   140002320:	mov    rax,rsp
   140002323:	mov    QWORD PTR [rax+0x18],rbx
   140002327:	mov    QWORD PTR [rax+0x20],rbp
   14000232b:	push   rsi
   14000232c:	push   r14
   14000232e:	push   r15
   140002330:	sub    rsp,0x20
   140002334:	and    QWORD PTR [rax+0x10],0x0
   140002339:	lea    rcx,[rax+0x8]
   14000233d:	and    QWORD PTR [rax+0x8],0x0
   140002342:	xor    r15d,r15d
   140002345:	call   0x140001ddc
   14000234a:	test   eax,eax
   14000234c:	jne    0x14000242f
   140002352:	mov    rcx,QWORD PTR [rsp+0x40]
   140002357:	call   QWORD PTR [rip+0x1cf3]        # 0x140004050
   14000235d:	test   eax,eax
   14000235f:	je     0x14000242f
   140002365:	mov    rcx,QWORD PTR [rsp+0x40]
   14000236a:	call   QWORD PTR [rip+0x1cb0]        # 0x140004020
   140002370:	test   rax,rax
   140002373:	je     0x14000242f
   140002379:	movzx  ebx,BYTE PTR [rax]
   14000237c:	cmp    ebx,0x1
   14000237f:	je     0x14000242f
   140002385:	lea    r8,[rsp+0x48]
   14000238a:	xor    ecx,ecx
   14000238c:	lea    edx,[r15+0x2]
   140002390:	call   QWORD PTR [rip+0x203a]        # 0x1400043d0
   140002396:	test   eax,eax
   140002398:	jne    0x14000242f
   14000239e:	mov    rax,QWORD PTR [rsp+0x48]
   1400023a3:	test   rax,rax
   1400023a6:	je     0x14000243f
   1400023ac:	mov    r14,QWORD PTR [rax+0x8]
   1400023b0:	mov    rcx,r14
   1400023b3:	call   QWORD PTR [rip+0x1c97]        # 0x140004050
   1400023b9:	test   eax,eax
   1400023bb:	je     0x14000242f
   1400023bd:	mov    rcx,r14
   1400023c0:	call   QWORD PTR [rip+0x1c5a]        # 0x140004020
   1400023c6:	test   rax,rax
   1400023c9:	je     0x14000242f
   1400023cb:	movzx  ebp,BYTE PTR [rax]
   1400023ce:	cmp    ebp,ebx
   1400023d0:	jae    0x14000242f
   1400023d2:	mov    rcx,QWORD PTR [rsp+0x40]
   1400023d7:	call   QWORD PTR [rip+0x1c23]        # 0x140004000
   1400023dd:	mov    rcx,r14
   1400023e0:	mov    rbx,rax
   1400023e3:	call   QWORD PTR [rip+0x1c17]        # 0x140004000
   1400023e9:	mov    rcx,rax
   1400023ec:	mov    eax,DWORD PTR [rax]
   1400023ee:	cmp    eax,DWORD PTR [rbx]
   1400023f0:	jne    0x14000242f
   1400023f2:	movzx  eax,WORD PTR [rcx+0x4]
   1400023f6:	cmp    ax,WORD PTR [rbx+0x4]
   1400023fa:	jne    0x14000242f
   1400023fc:	xor    esi,esi
   1400023fe:	test   ebp,ebp
   140002400:	je     0x140002429
   140002402:	mov    edx,esi
   140002404:	mov    rcx,r14
   140002407:	call   QWORD PTR [rip+0x1c03]        # 0x140004010
   14000240d:	mov    rcx,QWORD PTR [rsp+0x40]
   140002412:	mov    edx,esi
   140002414:	mov    rbx,rax
   140002417:	call   QWORD PTR [rip+0x1bf3]        # 0x140004010
   14000241d:	mov    ecx,DWORD PTR [rax]
   14000241f:	cmp    DWORD PTR [rbx],ecx
   140002421:	jne    0x14000242f
   140002423:	inc    esi
   140002425:	cmp    esi,ebp
   140002427:	jb     0x140002402
   140002429:	mov    r15d,0x1
   14000242f:	mov    rcx,QWORD PTR [rsp+0x48]
   140002434:	test   rcx,rcx
   140002437:	je     0x14000243f
   140002439:	call   QWORD PTR [rip+0x1f71]        # 0x1400043b0
   14000243f:	cmp    QWORD PTR [rsp+0x40],0x0
   140002445:	je     0x140002452
   140002447:	mov    rcx,QWORD PTR [rsp+0x40]
   14000244c:	call   QWORD PTR [rip+0x1db6]        # 0x140004208
   140002452:	mov    rbx,QWORD PTR [rsp+0x50]
   140002457:	mov    eax,r15d
   14000245a:	mov    rbp,QWORD PTR [rsp+0x58]
   14000245f:	add    rsp,0x20
   140002463:	pop    r15
   140002465:	pop    r14
   140002467:	pop    rsi
   140002468:	ret    
   140002469:	int3   
   14000246a:	int3   
   14000246b:	int3   
   14000246c:	int3   
   14000246d:	int3   
   14000246e:	int3   
   14000246f:	int3   
   140002470:	mov    QWORD PTR [rsp+0x10],rbx
   140002475:	mov    QWORD PTR [rsp+0x18],rsi
   14000247a:	push   rdi
   14000247b:	sub    rsp,0x40
   14000247f:	and    QWORD PTR [rsp+0x30],0x0
   140002485:	mov    QWORD PTR [rip+0x4144],rcx        # 0x1400065d0
   14000248c:	call   QWORD PTR [rip+0x1d46]        # 0x1400041d8
   140002492:	mov    rcx,rax
   140002495:	lea    rdx,[rsp+0x50]
   14000249a:	call   QWORD PTR [rip+0x1d78]        # 0x140004218
   1400024a0:	mov    rsi,rax
   1400024a3:	test   rax,rax
   1400024a6:	je     0x140002608
   1400024ac:	mov    edi,0x1
   1400024b1:	cmp    DWORD PTR [rsp+0x50],edi
   1400024b5:	jle    0x14000250f
   1400024b7:	lea    rbx,[rax+0x8]
   1400024bb:	mov    rcx,QWORD PTR [rbx]
   1400024be:	lea    rdx,[rip+0x2203]        # 0x1400046c8
   1400024c5:	mov    r8d,0x7
   1400024cb:	call   QWORD PTR [rip+0x1e37]        # 0x140004308
   1400024d1:	test   eax,eax
   1400024d3:	jne    0x1400024de
   1400024d5:	mov    BYTE PTR [rip+0x40fd],0x1        # 0x1400065d9
   1400024dc:	jmp    0x140002503
   1400024de:	mov    rcx,QWORD PTR [rbx]
   1400024e1:	lea    rdx,[rip+0x21f0]        # 0x1400046d8
   1400024e8:	mov    r8d,0x8
   1400024ee:	call   QWORD PTR [rip+0x1e14]        # 0x140004308
   1400024f4:	test   eax,eax
   1400024f6:	jne    0x1400025b7
   1400024fc:	mov    BYTE PTR [rip+0x40d5],0x1        # 0x1400065d8
   140002503:	inc    edi
   140002505:	add    rbx,0x8
   140002509:	cmp    edi,DWORD PTR [rsp+0x50]
   14000250d:	jl     0x1400024bb
   14000250f:	mov    bl,0x1
   140002511:	mov    rcx,rsi
   140002514:	call   QWORD PTR [rip+0x1cee]        # 0x140004208
   14000251a:	test   bl,bl
   14000251c:	je     0x140002608
   140002522:	call   0x140002320
   140002527:	test   eax,eax
   140002529:	jne    0x140002537
   14000252b:	cmp    BYTE PTR [rip+0x40a7],al        # 0x1400065d8
   140002531:	je     0x140002608
   140002537:	lea    rcx,[rsp+0x30]
   14000253c:	call   0x140001f70
   140002541:	mov    rbx,QWORD PTR [rsp+0x30]
   140002546:	cmp    eax,0x2
   140002549:	je     0x140002550
   14000254b:	test   rbx,rbx
   14000254e:	jne    0x140002555
   140002550:	test   rbx,rbx
   140002553:	je     0x1400025be
   140002555:	mov    edi,DWORD PTR [rbx+0xc]
   140002558:	test   edi,edi
   14000255a:	je     0x1400025be
   14000255c:	xor    ecx,ecx
   14000255e:	call   QWORD PTR [rip+0x1e5c]        # 0x1400043c0
   140002564:	test   eax,eax
   140002566:	js     0x1400025d1
   140002568:	mov    r9b,0x1
   14000256b:	mov    BYTE PTR [rsp+0x20],0x1
   140002570:	mov    r8b,r9b
   140002573:	lea    rdx,[rip+0xffffffffffffda86]        # 0x140000000
   14000257a:	mov    ecx,0xe
   14000257f:	call   QWORD PTR [rip+0x1c2b]        # 0x1400041b0
   140002585:	test   eax,eax
   140002587:	js     0x1400025d1
   140002589:	mov    ecx,0x2
   14000258e:	call   QWORD PTR [rip+0x1b54]        # 0x1400040e8
   140002594:	test   eax,eax
   140002596:	js     0x1400025a8
   140002598:	mov    rdx,rbx
   14000259b:	mov    ecx,edi
   14000259d:	call   0x1400018b8
   1400025a2:	call   QWORD PTR [rip+0x1b48]        # 0x1400040f0
   1400025a8:	lea    rcx,[rip+0xffffffffffffda51]        # 0x140000000
   1400025af:	call   QWORD PTR [rip+0x1c0b]        # 0x1400041c0
   1400025b5:	jmp    0x1400025d1
   1400025b7:	xor    bl,bl
   1400025b9:	jmp    0x140002511
   1400025be:	cmp    BYTE PTR [rip+0x4014],0x0        # 0x1400065d9
   1400025c5:	jne    0x1400025d1
   1400025c7:	test   rbx,rbx
   1400025ca:	jne    0x1400025d6
   1400025cc:	call   0x140001a0c
   1400025d1:	test   rbx,rbx
   1400025d4:	je     0x1400025fe
   1400025d6:	cmp    DWORD PTR [rbx+0xc],0x0
   1400025da:	jne    0x1400025e4
   1400025dc:	mov    rcx,QWORD PTR [rbx]
   1400025df:	call   0x140001d78
   1400025e4:	mov    rcx,QWORD PTR [rbx]
   1400025e7:	test   rcx,rcx
   1400025ea:	je     0x1400025f6
   1400025ec:	call   QWORD PTR [rip+0x1c16]        # 0x140004208
   1400025f2:	and    QWORD PTR [rbx],0x0
   1400025f6:	mov    rcx,rbx
   1400025f9:	call   0x140002624
   1400025fe:	call   QWORD PTR [rip+0x1c4c]        # 0x140004250
   140002604:	xor    eax,eax
   140002606:	jmp    0x14000260b
   140002608:	or     eax,0xffffffff
   14000260b:	mov    rbx,QWORD PTR [rsp+0x58]
   140002610:	mov    rsi,QWORD PTR [rsp+0x60]
   140002615:	add    rsp,0x40
   140002619:	pop    rdi
   14000261a:	ret    
   14000261b:	int3   
   14000261c:	int3   
   14000261d:	int3   
   14000261e:	int3   
   14000261f:	int3   
   140002620:	int3   
   140002621:	int3   
   140002622:	int3   
   140002623:	int3   
   140002624:	jmp    0x140002bf8
   140002629:	int3   
   14000262a:	int3   
   14000262b:	int3   
   14000262c:	int3   
   14000262d:	int3   
   14000262e:	int3   
   14000262f:	int3   
   140002630:	mov    QWORD PTR [rsp+0x8],rbx
   140002635:	push   rdi
   140002636:	sub    rsp,0x20
   14000263a:	mov    rdi,rcx
   14000263d:	jmp    0x14000264e
   14000263f:	mov    rcx,rdi
   140002642:	call   0x140002c10
   140002647:	test   eax,eax
   140002649:	je     0x14000265b
   14000264b:	mov    rcx,rdi
   14000264e:	call   0x140002c04
   140002653:	mov    rbx,rax
   140002656:	test   rax,rax
   140002659:	je     0x14000263f
   14000265b:	mov    rax,rbx
   14000265e:	mov    rbx,QWORD PTR [rsp+0x30]
   140002663:	add    rsp,0x20
   140002667:	pop    rdi
   140002668:	ret    
   140002669:	int3   
   14000266a:	int3   
   14000266b:	int3   
   14000266c:	int3   
   14000266d:	int3   
   14000266e:	int3   
   14000266f:	int3   
   140002670:	sub    rsp,0x28
   140002674:	mov    eax,0x5a4d
   140002679:	cmp    WORD PTR [rip+0xffffffffffffd980],ax        # 0x140000000
   140002680:	je     0x140002686
   140002682:	xor    eax,eax
   140002684:	jmp    0x1400026d5
   140002686:	movsxd rcx,DWORD PTR [rip+0xffffffffffffd9af]        # 0x14000003c
   14000268d:	lea    rax,[rip+0xffffffffffffd96c]        # 0x140000000
   140002694:	add    rcx,rax
   140002697:	cmp    DWORD PTR [rcx],0x4550
   14000269d:	jne    0x140002682
   14000269f:	movzx  eax,WORD PTR [rcx+0x18]
   1400026a3:	cmp    eax,0x10b
   1400026a8:	je     0x1400026c4
   1400026aa:	cmp    eax,0x20b
   1400026af:	jne    0x140002682
   1400026b1:	xor    eax,eax
   1400026b3:	cmp    DWORD PTR [rcx+0x84],0xe
   1400026ba:	jbe    0x1400026d5
   1400026bc:	cmp    DWORD PTR [rcx+0xf8],eax
   1400026c2:	jmp    0x1400026d2
   1400026c4:	xor    eax,eax
   1400026c6:	cmp    DWORD PTR [rcx+0x74],0xe
   1400026ca:	jbe    0x1400026d5
   1400026cc:	cmp    DWORD PTR [rcx+0xe8],eax
   1400026d2:	setne  al
   1400026d5:	mov    ecx,0x2
   1400026da:	mov    DWORD PTR [rip+0x3960],eax        # 0x140006040
   1400026e0:	call   0x140002ce8
   1400026e5:	mov    ecx,eax
   1400026e7:	call   QWORD PTR [rip+0x1ca3]        # 0x140004390
   1400026ed:	mov    rcx,QWORD PTR [rip+0x1c54]        # 0x140004348
   1400026f4:	or     rax,0xffffffffffffffff
   1400026f8:	mov    QWORD PTR [rip+0x3ee1],rax        # 0x1400065e0
   1400026ff:	mov    QWORD PTR [rip+0x3ee2],rax        # 0x1400065e8
   140002706:	mov    eax,DWORD PTR [rip+0x3ec0]        # 0x1400065cc
   14000270c:	mov    DWORD PTR [rcx],eax
   14000270e:	mov    rcx,QWORD PTR [rip+0x1c2b]        # 0x140004340
   140002715:	mov    eax,DWORD PTR [rip+0x3ea5]        # 0x1400065c0
   14000271b:	mov    DWORD PTR [rcx],eax
   14000271d:	call   0x1400013f0
   140002722:	cmp    DWORD PTR [rip+0x38d7],0x0        # 0x140006000
   140002729:	jne    0x140002738
   14000272b:	lea    rcx,[rip+0xffffffffffffecbe]        # 0x1400013f0
   140002732:	call   QWORD PTR [rip+0x1c30]        # 0x140004368
   140002738:	xor    eax,eax
   14000273a:	add    rsp,0x28
   14000273e:	ret    
   14000273f:	int3   
   140002740:	int3   
   140002741:	int3   
   140002742:	int3   
   140002743:	int3   
   140002744:	int3   
   140002745:	int3   
   140002746:	int3   
   140002747:	int3   
   140002748:	int3   
   140002749:	int3   
   14000274a:	int3   
   14000274b:	int3   
   14000274c:	int3   
   14000274d:	int3   
   14000274e:	int3   
   14000274f:	int3   
   140002750:	sub    rsp,0x38
   140002754:	mov    eax,DWORD PTR [rip+0x3e6e]        # 0x1400065c8
   14000275a:	lea    r8,[rip+0x38d7]        # 0x140006038
   140002761:	mov    r9d,DWORD PTR [rip+0x3e5c]        # 0x1400065c4
   140002768:	lea    rdx,[rip+0x38c1]        # 0x140006030
   14000276f:	mov    DWORD PTR [rip+0x38cf],eax        # 0x140006044
   140002775:	lea    rcx,[rip+0x38ac]        # 0x140006028
   14000277c:	lea    rax,[rip+0x38c1]        # 0x140006044
   140002783:	mov    QWORD PTR [rsp+0x20],rax
   140002788:	call   QWORD PTR [rip+0x1c0a]        # 0x140004398
   14000278e:	mov    DWORD PTR [rip+0x3898],eax        # 0x14000602c
   140002794:	add    rsp,0x38
   140002798:	ret    
   140002799:	int3   
   14000279a:	int3   
   14000279b:	int3   
   14000279c:	int3   
   14000279d:	int3   
   14000279e:	int3   
   14000279f:	int3   
   1400027a0:	sub    rsp,0x28
   1400027a4:	call   0x140002e24
   1400027a9:	add    rsp,0x28
   1400027ad:	jmp    0x1400027b8
   1400027b2:	int3   
   1400027b3:	int3   
   1400027b4:	int3   
   1400027b5:	int3   
   1400027b6:	int3   
   1400027b7:	int3   
   1400027b8:	mov    rax,rsp
   1400027bb:	mov    QWORD PTR [rax+0x8],rbx
   1400027bf:	mov    QWORD PTR [rax+0x10],rsi
   1400027c3:	mov    QWORD PTR [rax+0x18],rdi
   1400027c7:	push   r15
   1400027c9:	sub    rsp,0xb0
   1400027d0:	and    DWORD PTR [rsp+0x20],0x0
   1400027d5:	lea    rcx,[rax-0x78]
   1400027d9:	call   QWORD PTR [rip+0x1ab9]        # 0x140004298
   1400027df:	nop
   1400027e0:	mov    rax,QWORD PTR gs:0x30
   1400027e9:	mov    rbx,QWORD PTR [rax+0x8]
   1400027ed:	xor    esi,esi
   1400027ef:	xor    eax,eax
   1400027f1:	lock cmpxchg QWORD PTR [rip+0x3df6],rbx        # 0x1400065f0
   1400027fa:	je     0x140002815
   1400027fc:	cmp    rax,rbx
   1400027ff:	jne    0x140002808
   140002801:	mov    esi,0x1
   140002806:	jmp    0x140002815
   140002808:	mov    ecx,0x3e8
   14000280d:	call   QWORD PTR [rip+0x1acd]        # 0x1400042e0
   140002813:	jmp    0x1400027ef
   140002815:	mov    eax,DWORD PTR [rip+0x3ddd]        # 0x1400065f8
   14000281b:	cmp    eax,0x1
   14000281e:	jne    0x14000282a
   140002820:	lea    ecx,[rax+0x1e]
   140002823:	call   0x140002d34
   140002828:	jmp    0x14000289b
   14000282a:	mov    eax,DWORD PTR [rip+0x3dc8]        # 0x1400065f8
   140002830:	test   eax,eax
   140002832:	jne    0x140002891
   140002834:	mov    DWORD PTR [rip+0x3dba],0x1        # 0x1400065f8
   14000283e:	lea    r15,[rip+0x1bdb]        # 0x140004420
   140002845:	lea    rbx,[rip+0x1bbc]        # 0x140004408
   14000284c:	mov    QWORD PTR [rsp+0x38],rbx
   140002851:	mov    DWORD PTR [rsp+0x30],eax
   140002855:	cmp    rbx,r15
   140002858:	jae    0x140002883
   14000285a:	test   eax,eax
   14000285c:	jne    0x140002887
   14000285e:	mov    rdi,QWORD PTR [rbx]
   140002861:	test   rdi,rdi
   140002864:	je     0x140002878
   140002866:	mov    rcx,rdi
   140002869:	mov    rax,QWORD PTR [rip+0x1b70]        # 0x1400043e0
   140002870:	call   rax
   140002872:	call   rdi
   140002874:	mov    DWORD PTR [rsp+0x30],eax
   140002878:	add    rbx,0x8
   14000287c:	mov    QWORD PTR [rsp+0x38],rbx
   140002881:	jmp    0x140002855
   140002883:	test   eax,eax
   140002885:	je     0x14000289b
   140002887:	mov    eax,0xff
   14000288c:	jmp    0x1400029f4
   140002891:	mov    DWORD PTR [rip+0x3789],0x1        # 0x140006024
   14000289b:	mov    eax,DWORD PTR [rip+0x3d57]        # 0x1400065f8
   1400028a1:	cmp    eax,0x1
   1400028a4:	jne    0x1400028c3
   1400028a6:	lea    rdx,[rip+0x1b53]        # 0x140004400
   1400028ad:	lea    rcx,[rip+0x1b3c]        # 0x1400043f0
   1400028b4:	call   0x140002efa
   1400028b9:	mov    DWORD PTR [rip+0x3d35],0x2        # 0x1400065f8
   1400028c3:	test   esi,esi
   1400028c5:	jne    0x1400028d0
   1400028c7:	xor    eax,eax
   1400028c9:	xchg   QWORD PTR [rip+0x3d20],rax        # 0x1400065f0
   1400028d0:	cmp    QWORD PTR [rip+0x3d28],0x0        # 0x140006600
   1400028d8:	je     0x140002908
   1400028da:	lea    rcx,[rip+0x3d1f]        # 0x140006600
   1400028e1:	call   0x140002d90
   1400028e6:	test   eax,eax
   1400028e8:	je     0x140002908
   1400028ea:	mov    rbx,QWORD PTR [rip+0x3d0f]        # 0x140006600
   1400028f1:	mov    rcx,rbx
   1400028f4:	mov    rax,QWORD PTR [rip+0x1ae5]        # 0x1400043e0
   1400028fb:	call   rax
   1400028fd:	xor    r8d,r8d
   140002900:	lea    edx,[r8+0x2]
   140002904:	xor    ecx,ecx
   140002906:	call   rbx
   140002908:	mov    rax,QWORD PTR [rip+0x1a41]        # 0x140004350
   14000290f:	mov    rbx,QWORD PTR [rax]
   140002912:	mov    QWORD PTR [rsp+0x28],rbx
   140002917:	mov    edi,DWORD PTR [rsp+0x20]
   14000291b:	cmp    BYTE PTR [rbx],0x20
   14000291e:	ja     0x140002993
   140002920:	cmp    BYTE PTR [rbx],0x0
   140002923:	je     0x140002929
   140002925:	test   edi,edi
   140002927:	jne    0x140002993
   140002929:	mov    al,BYTE PTR [rbx]
   14000292b:	dec    al
   14000292d:	cmp    al,0x1f
   14000292f:	ja     0x14000293b
   140002931:	inc    rbx
   140002934:	mov    QWORD PTR [rsp+0x28],rbx
   140002939:	jmp    0x140002929
   14000293b:	mov    ecx,DWORD PTR [rsp+0x7c]
   14000293f:	movzx  eax,WORD PTR [rsp+0x80]
   140002947:	mov    r9d,0xa
   14000294d:	and    cl,0x1
   140002950:	cmovne r9d,eax
   140002954:	mov    r8,rbx
   140002957:	xor    edx,edx
   140002959:	lea    rcx,[rip+0xffffffffffffd6a0]        # 0x140000000
   140002960:	call   0x140002470
   140002965:	mov    DWORD PTR [rip+0x36b5],eax        # 0x140006020
   14000296b:	cmp    DWORD PTR [rip+0x36ce],0x0        # 0x140006040
   140002972:	jne    0x14000297c
   140002974:	mov    ecx,eax
   140002976:	call   QWORD PTR [rip+0x1a0c]        # 0x140004388
   14000297c:	cmp    DWORD PTR [rip+0x36a1],0x0        # 0x140006024
   140002983:	jne    0x140002991
   140002985:	call   QWORD PTR [rip+0x19ed]        # 0x140004378
   14000298b:	mov    eax,DWORD PTR [rip+0x368f]        # 0x140006020
   140002991:	jmp    0x1400029f4
   140002993:	cmp    BYTE PTR [rbx],0x22
   140002996:	jne    0x1400029a5
   140002998:	xor    eax,eax
   14000299a:	test   edi,edi
   14000299c:	sete   al
   14000299f:	mov    edi,eax
   1400029a1:	mov    DWORD PTR [rsp+0x20],eax
   1400029a5:	movzx  ecx,BYTE PTR [rbx]
   1400029a8:	call   QWORD PTR [rip+0x19c2]        # 0x140004370
   1400029ae:	test   eax,eax
   1400029b0:	je     0x1400029ba
   1400029b2:	inc    rbx
   1400029b5:	mov    QWORD PTR [rsp+0x28],rbx
   1400029ba:	inc    rbx
   1400029bd:	mov    QWORD PTR [rsp+0x28],rbx
   1400029c2:	jmp    0x14000291b
   1400029c7:	mov    DWORD PTR [rip+0x3653],eax        # 0x140006020
   1400029cd:	cmp    DWORD PTR [rip+0x366c],0x0        # 0x140006040
   1400029d4:	jne    0x1400029df
   1400029d6:	mov    ecx,eax
   1400029d8:	call   QWORD PTR [rip+0x19a2]        # 0x140004380
   1400029de:	int3   
   1400029df:	cmp    DWORD PTR [rip+0x363e],0x0        # 0x140006024
   1400029e6:	jne    0x1400029f4
   1400029e8:	call   QWORD PTR [rip+0x198a]        # 0x140004378
   1400029ee:	mov    eax,DWORD PTR [rip+0x362c]        # 0x140006020
   1400029f4:	lea    r11,[rsp+0xb0]
   1400029fc:	mov    rbx,QWORD PTR [r11+0x10]
   140002a00:	mov    rsi,QWORD PTR [r11+0x18]
   140002a04:	mov    rdi,QWORD PTR [r11+0x20]
   140002a08:	mov    rsp,r11
   140002a0b:	pop    r15
   140002a0d:	ret    
   140002a0e:	int3   
   140002a0f:	int3   
   140002a10:	int3   
   140002a11:	int3   
   140002a12:	int3   
   140002a13:	int3   
   140002a14:	int3   
   140002a15:	int3   
   140002a16:	data16 nop WORD PTR [rax+rax*1+0x0]
   140002a20:	cmp    rcx,QWORD PTR [rip+0x35e1]        # 0x140006008
   140002a27:	jne    0x140002a39
   140002a29:	rol    rcx,0x10
   140002a2d:	test   cx,0xffff
   140002a32:	jne    0x140002a35
   140002a34:	ret    
   140002a35:	ror    rcx,0x10
   140002a39:	jmp    0x140002a80
   140002a3e:	int3   
   140002a3f:	int3   
   140002a40:	int3   
   140002a41:	int3   
   140002a42:	int3   
   140002a43:	int3   
   140002a44:	rex push rbx
   140002a46:	sub    rsp,0x20
   140002a4a:	mov    rbx,rcx
   140002a4d:	xor    ecx,ecx
   140002a4f:	call   QWORD PTR [rip+0x180b]        # 0x140004260
   140002a55:	mov    rcx,rbx
   140002a58:	call   QWORD PTR [rip+0x180a]        # 0x140004268
   140002a5e:	call   QWORD PTR [rip+0x177c]        # 0x1400041e0
   140002a64:	mov    rcx,rax
   140002a67:	mov    edx,0xc0000409
   140002a6c:	add    rsp,0x20
   140002a70:	pop    rbx
   140002a71:	rex.W jmp QWORD PTR [rip+0x1828]        # 0x1400042a0
   140002a78:	int3   
   140002a79:	int3   
   140002a7a:	int3   
   140002a7b:	int3   
   140002a7c:	int3   
   140002a7d:	int3   
   140002a7e:	int3   
   140002a7f:	int3   
   140002a80:	mov    QWORD PTR [rsp+0x8],rcx
   140002a85:	sub    rsp,0x88
   140002a8c:	lea    rcx,[rip+0x365d]        # 0x1400060f0
   140002a93:	call   QWORD PTR [rip+0x1837]        # 0x1400042d0
   140002a99:	mov    rax,QWORD PTR [rip+0x3748]        # 0x1400061e8
   140002aa0:	mov    QWORD PTR [rsp+0x48],rax
   140002aa5:	xor    r8d,r8d
   140002aa8:	lea    rdx,[rsp+0x50]
   140002aad:	mov    rcx,QWORD PTR [rsp+0x48]
   140002ab2:	call   QWORD PTR [rip+0x1810]        # 0x1400042c8
   140002ab8:	mov    QWORD PTR [rsp+0x40],rax
   140002abd:	cmp    QWORD PTR [rsp+0x40],0x0
   140002ac3:	je     0x140002b07
   140002ac5:	mov    QWORD PTR [rsp+0x38],0x0
   140002ace:	lea    rax,[rsp+0x58]
   140002ad3:	mov    QWORD PTR [rsp+0x30],rax
   140002ad8:	lea    rax,[rsp+0x60]
   140002add:	mov    QWORD PTR [rsp+0x28],rax
   140002ae2:	lea    rax,[rip+0x3607]        # 0x1400060f0
   140002ae9:	mov    QWORD PTR [rsp+0x20],rax
   140002aee:	mov    r9,QWORD PTR [rsp+0x40]
   140002af3:	mov    r8,QWORD PTR [rsp+0x48]
   140002af8:	mov    rdx,QWORD PTR [rsp+0x50]
   140002afd:	xor    ecx,ecx
   140002aff:	call   QWORD PTR [rip+0x17bb]        # 0x1400042c0
   140002b05:	jmp    0x140002b2a
   140002b07:	mov    rax,QWORD PTR [rip+0x367a]        # 0x140006188
   140002b0e:	mov    rax,QWORD PTR [rax]
   140002b11:	mov    QWORD PTR [rip+0x36d0],rax        # 0x1400061e8
   140002b18:	mov    rax,QWORD PTR [rip+0x3669]        # 0x140006188
   140002b1f:	add    rax,0x8
   140002b23:	mov    QWORD PTR [rip+0x365e],rax        # 0x140006188
   140002b2a:	mov    rax,QWORD PTR [rip+0x36b7]        # 0x1400061e8
   140002b31:	mov    QWORD PTR [rip+0x3528],rax        # 0x140006060
   140002b38:	mov    rax,QWORD PTR [rsp+0x90]
   140002b40:	mov    QWORD PTR [rip+0x3629],rax        # 0x140006170
   140002b47:	mov    DWORD PTR [rip+0x34ff],0xc0000409        # 0x140006050
   140002b51:	mov    DWORD PTR [rip+0x34f9],0x1        # 0x140006054
   140002b5b:	mov    DWORD PTR [rip+0x3503],0x3        # 0x140006068
   140002b65:	mov    eax,0x8
   140002b6a:	imul   rax,rax,0x0
   140002b6e:	lea    rcx,[rip+0x34fb]        # 0x140006070
   140002b75:	mov    QWORD PTR [rcx+rax*1],0x2
   140002b7d:	mov    eax,0x8
   140002b82:	imul   rax,rax,0x1
   140002b86:	lea    rcx,[rip+0x34e3]        # 0x140006070
   140002b8d:	mov    rdx,QWORD PTR [rip+0x3474]        # 0x140006008
   140002b94:	mov    QWORD PTR [rcx+rax*1],rdx
   140002b98:	mov    eax,0x8
   140002b9d:	imul   rax,rax,0x2
   140002ba1:	lea    rcx,[rip+0x34c8]        # 0x140006070
   140002ba8:	mov    rdx,QWORD PTR [rip+0x3461]        # 0x140006010
   140002baf:	mov    QWORD PTR [rcx+rax*1],rdx
   140002bb3:	mov    eax,0x8
   140002bb8:	imul   rax,rax,0x0
   140002bbc:	mov    rcx,QWORD PTR [rip+0x3445]        # 0x140006008
   140002bc3:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140002bc8:	mov    eax,0x8
   140002bcd:	imul   rax,rax,0x1
   140002bd1:	mov    rcx,QWORD PTR [rip+0x3438]        # 0x140006010
   140002bd8:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140002bdd:	lea    rcx,[rip+0x18cc]        # 0x1400044b0
   140002be4:	call   0x140002a44
   140002be9:	add    rsp,0x88
   140002bf0:	ret    
   140002bf1:	int3   
   140002bf2:	int3   
   140002bf3:	int3   
   140002bf4:	int3   
   140002bf5:	int3   
   140002bf6:	int3   
   140002bf7:	int3   
   140002bf8:	jmp    QWORD PTR [rip+0x171a]        # 0x140004318
   140002bfe:	int3   
   140002bff:	int3   
   140002c00:	int3   
   140002c01:	int3   
   140002c02:	int3   
   140002c03:	int3   
   140002c04:	jmp    QWORD PTR [rip+0x1706]        # 0x140004310
   140002c0a:	int3   
   140002c0b:	int3   
   140002c0c:	int3   
   140002c0d:	int3   
   140002c0e:	int3   
   140002c0f:	int3   
   140002c10:	jmp    QWORD PTR [rip+0x170a]        # 0x140004320
   140002c16:	int3   
   140002c17:	int3   
   140002c18:	int3   
   140002c19:	int3   
   140002c1a:	int3   
   140002c1b:	int3   
   140002c1c:	int3   
   140002c1d:	int3   
   140002c1e:	int3   
   140002c1f:	int3   
   140002c20:	sub    rsp,0x28
   140002c24:	mov    rax,QWORD PTR [rcx]
   140002c27:	cmp    DWORD PTR [rax],0xe06d7363
   140002c2d:	jne    0x140002c52
   140002c2f:	cmp    DWORD PTR [rax+0x18],0x4
   140002c33:	jne    0x140002c52
   140002c35:	mov    ecx,DWORD PTR [rax+0x20]
   140002c38:	lea    eax,[rcx-0x19930520]
   140002c3e:	cmp    eax,0x2
   140002c41:	jbe    0x140002c4b
   140002c43:	cmp    ecx,0x1994000
   140002c49:	jne    0x140002c52
   140002c4b:	call   QWORD PTR [rip+0x16e7]        # 0x140004338
   140002c51:	int3   
   140002c52:	xor    eax,eax
   140002c54:	add    rsp,0x28
   140002c58:	ret    
   140002c59:	int3   
   140002c5a:	int3   
   140002c5b:	int3   
   140002c5c:	int3   
   140002c5d:	int3   
   140002c5e:	int3   
   140002c5f:	int3   
   140002c60:	sub    rsp,0x28
   140002c64:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x140002c20
   140002c6b:	call   QWORD PTR [rip+0x15ef]        # 0x140004260
   140002c71:	xor    eax,eax
   140002c73:	add    rsp,0x28
   140002c77:	ret    
   140002c78:	int3   
   140002c79:	int3   
   140002c7a:	int3   
   140002c7b:	int3   
   140002c7c:	int3   
   140002c7d:	int3   
   140002c7e:	jmp    QWORD PTR [rip+0x16a4]        # 0x140004328
   140002c84:	int3   
   140002c85:	int3   
   140002c86:	int3   
   140002c87:	int3   
   140002c88:	int3   
   140002c89:	int3   
   140002c8a:	int3   
   140002c8b:	int3   
   140002c8c:	sub    rsp,0x18
   140002c90:	xor    edx,edx
   140002c92:	lea    rax,[rcx-0x1]
   140002c96:	cmp    rax,0xfffffffffffffffd
   140002c9a:	ja     0x140002cd8
   140002c9c:	mov    eax,0x5a4d
   140002ca1:	cmp    WORD PTR [rcx],ax
   140002ca4:	jne    0x140002cd0
   140002ca6:	cmp    DWORD PTR [rcx+0x3c],edx
   140002ca9:	jl     0x140002cd0
   140002cab:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   140002cb2:	jae    0x140002cd0
   140002cb4:	movsxd rax,DWORD PTR [rcx+0x3c]
   140002cb8:	add    rax,rcx
   140002cbb:	mov    QWORD PTR [rsp],rax
   140002cbf:	cmp    DWORD PTR [rax],0x4550
   140002cc5:	cmovne rax,rdx
   140002cc9:	mov    rdx,rax
   140002ccc:	mov    QWORD PTR [rsp],rax
   140002cd0:	jmp    0x140002cd8
   140002cd2:	xor    edx,edx
   140002cd4:	mov    QWORD PTR [rsp],rdx
   140002cd8:	mov    rax,rdx
   140002cdb:	add    rsp,0x18
   140002cdf:	ret    
   140002ce0:	int3   
   140002ce1:	int3   
   140002ce2:	int3   
   140002ce3:	int3   
   140002ce4:	int3   
   140002ce5:	int3   
   140002ce6:	int3   
   140002ce7:	int3   
   140002ce8:	rex push rbx
   140002cea:	sub    rsp,0x20
   140002cee:	mov    ebx,ecx
   140002cf0:	xor    ecx,ecx
   140002cf2:	call   QWORD PTR [rip+0x1580]        # 0x140004278
   140002cf8:	test   rax,rax
   140002cfb:	je     0x140002d25
   140002cfd:	mov    rcx,rax
   140002d00:	call   0x140002c8c
   140002d05:	test   rax,rax
   140002d08:	je     0x140002d25
   140002d0a:	mov    ecx,0x2
   140002d0f:	cmp    WORD PTR [rax+0x5c],cx
   140002d13:	jne    0x140002d19
   140002d15:	mov    eax,ecx
   140002d17:	jmp    0x140002d27
   140002d19:	cmp    WORD PTR [rax+0x5c],0x3
   140002d1e:	mov    eax,0x1
   140002d23:	je     0x140002d27
   140002d25:	mov    eax,ebx
   140002d27:	add    rsp,0x20
   140002d2b:	pop    rbx
   140002d2c:	ret    
   140002d2d:	int3   
   140002d2e:	int3   
   140002d2f:	int3   
   140002d30:	int3   
   140002d31:	int3   
   140002d32:	int3   
   140002d33:	int3   
   140002d34:	jmp    QWORD PTR [rip+0x1666]        # 0x1400043a0
   140002d3a:	int3   
   140002d3b:	int3   
   140002d3c:	int3   
   140002d3d:	int3   
   140002d3e:	int3   
   140002d3f:	int3   
   140002d40:	movsxd r8,DWORD PTR [rcx+0x3c]
   140002d44:	xor    r9d,r9d
   140002d47:	add    r8,rcx
   140002d4a:	mov    r10,rdx
   140002d4d:	movzx  eax,WORD PTR [r8+0x14]
   140002d52:	movzx  r11d,WORD PTR [r8+0x6]
   140002d57:	add    rax,0x18
   140002d5b:	add    rax,r8
   140002d5e:	test   r11d,r11d
   140002d61:	je     0x140002d81
   140002d63:	mov    edx,DWORD PTR [rax+0xc]
   140002d66:	cmp    r10,rdx
   140002d69:	jb     0x140002d75
   140002d6b:	mov    ecx,DWORD PTR [rax+0x8]
   140002d6e:	add    ecx,edx
   140002d70:	cmp    r10,rcx
   140002d73:	jb     0x140002d83
   140002d75:	inc    r9d
   140002d78:	add    rax,0x28
   140002d7c:	cmp    r9d,r11d
   140002d7f:	jb     0x140002d63
   140002d81:	xor    eax,eax
   140002d83:	ret    
   140002d84:	int3   
   140002d85:	int3   
   140002d86:	int3   
   140002d87:	int3   
   140002d88:	int3   
   140002d89:	int3   
   140002d8a:	int3   
   140002d8b:	int3   
   140002d8c:	int3   
   140002d8d:	int3   
   140002d8e:	int3   
   140002d8f:	int3   
   140002d90:	mov    QWORD PTR [rsp+0x8],rbx
   140002d95:	push   rdi
   140002d96:	sub    rsp,0x20
   140002d9a:	mov    rbx,rcx
   140002d9d:	lea    rdi,[rip+0xffffffffffffd25c]        # 0x140000000
   140002da4:	mov    rcx,rdi
   140002da7:	call   0x140002df0
   140002dac:	test   eax,eax
   140002dae:	je     0x140002dd2
   140002db0:	sub    rbx,rdi
   140002db3:	mov    rdx,rbx
   140002db6:	mov    rcx,rdi
   140002db9:	call   0x140002d40
   140002dbe:	test   rax,rax
   140002dc1:	je     0x140002dd2
   140002dc3:	mov    eax,DWORD PTR [rax+0x24]
   140002dc6:	shr    eax,0x1f
   140002dc9:	not    eax
   140002dcb:	and    eax,0x1
   140002dce:	jmp    0x140002dd2
   140002dd0:	xor    eax,eax
   140002dd2:	mov    rbx,QWORD PTR [rsp+0x30]
   140002dd7:	add    rsp,0x20
   140002ddb:	pop    rdi
   140002ddc:	ret    
   140002ddd:	int3   
   140002dde:	int3   
   140002ddf:	int3   
   140002de0:	int3   
   140002de1:	int3   
   140002de2:	int3   
   140002de3:	int3   
   140002de4:	int3   
   140002de5:	int3   
   140002de6:	int3   
   140002de7:	int3   
   140002de8:	int3   
   140002de9:	int3   
   140002dea:	int3   
   140002deb:	int3   
   140002dec:	int3   
   140002ded:	int3   
   140002dee:	int3   
   140002def:	int3   
   140002df0:	mov    rax,rcx
   140002df3:	mov    ecx,0x5a4d
   140002df8:	cmp    WORD PTR [rax],cx
   140002dfb:	je     0x140002e00
   140002dfd:	xor    eax,eax
   140002dff:	ret    
   140002e00:	movsxd rcx,DWORD PTR [rax+0x3c]
   140002e04:	add    rcx,rax
   140002e07:	xor    eax,eax
   140002e09:	cmp    DWORD PTR [rcx],0x4550
   140002e0f:	jne    0x140002e1d
   140002e11:	mov    edx,0x20b
   140002e16:	cmp    WORD PTR [rcx+0x18],dx
   140002e1a:	sete   al
   140002e1d:	ret    
   140002e1e:	int3   
   140002e1f:	int3   
   140002e20:	int3   
   140002e21:	int3   
   140002e22:	int3   
   140002e23:	int3   
   140002e24:	mov    QWORD PTR [rsp+0x20],rbx
   140002e29:	push   rbp
   140002e2a:	mov    rbp,rsp
   140002e2d:	sub    rsp,0x20
   140002e31:	and    QWORD PTR [rbp+0x18],0x0
   140002e36:	movabs rbx,0x2b992ddfa232
   140002e40:	mov    rax,QWORD PTR [rip+0x31c1]        # 0x140006008
   140002e47:	cmp    rax,rbx
   140002e4a:	jne    0x140002edf
   140002e50:	lea    rcx,[rbp+0x18]
   140002e54:	call   QWORD PTR [rip+0x1496]        # 0x1400042f0
   140002e5a:	mov    rax,QWORD PTR [rbp+0x18]
   140002e5e:	mov    QWORD PTR [rbp+0x10],rax
   140002e62:	call   QWORD PTR [rip+0x1420]        # 0x140004288
   140002e68:	mov    eax,eax
   140002e6a:	xor    QWORD PTR [rbp+0x10],rax
   140002e6e:	call   QWORD PTR [rip+0x141c]        # 0x140004290
   140002e74:	mov    eax,eax
   140002e76:	xor    QWORD PTR [rbp+0x10],rax
   140002e7a:	call   QWORD PTR [rip+0x1478]        # 0x1400042f8
   140002e80:	mov    eax,eax
   140002e82:	shl    rax,0x18
   140002e86:	xor    QWORD PTR [rbp+0x10],rax
   140002e8a:	call   QWORD PTR [rip+0x1468]        # 0x1400042f8
   140002e90:	mov    eax,eax
   140002e92:	lea    rcx,[rbp+0x10]
   140002e96:	xor    rax,QWORD PTR [rbp+0x10]
   140002e9a:	xor    rax,rcx
   140002e9d:	lea    rcx,[rbp+0x20]
   140002ea1:	mov    QWORD PTR [rbp+0x10],rax
   140002ea5:	call   QWORD PTR [rip+0x1405]        # 0x1400042b0
   140002eab:	mov    eax,DWORD PTR [rbp+0x20]
   140002eae:	movabs rcx,0xffffffffffff
   140002eb8:	shl    rax,0x20
   140002ebc:	xor    rax,QWORD PTR [rbp+0x20]
   140002ec0:	xor    rax,QWORD PTR [rbp+0x10]
   140002ec4:	and    rax,rcx
   140002ec7:	movabs rcx,0x2b992ddfa233
   140002ed1:	cmp    rax,rbx
   140002ed4:	cmove  rax,rcx
   140002ed8:	mov    QWORD PTR [rip+0x3129],rax        # 0x140006008
   140002edf:	mov    rbx,QWORD PTR [rsp+0x48]
   140002ee4:	not    rax
   140002ee7:	mov    QWORD PTR [rip+0x3122],rax        # 0x140006010
   140002eee:	add    rsp,0x20
   140002ef2:	pop    rbp
   140002ef3:	ret    
   140002ef4:	int3   
   140002ef5:	int3   
   140002ef6:	int3   
   140002ef7:	int3   
   140002ef8:	int3   
   140002ef9:	int3   
   140002efa:	jmp    QWORD PTR [rip+0x1460]        # 0x140004360
   140002f00:	int3   
   140002f01:	int3   
   140002f02:	int3   
   140002f03:	int3   
   140002f04:	int3   
   140002f05:	int3   
   140002f06:	jmp    QWORD PTR [rip+0x144c]        # 0x140004358
   140002f0c:	int3   
   140002f0d:	int3   
   140002f0e:	int3   
   140002f0f:	int3   
   140002f10:	int3   
   140002f11:	int3   
   140002f12:	int3   
   140002f13:	int3   
   140002f14:	int3   
   140002f15:	int3   
   140002f16:	int3   
   140002f17:	int3   
   140002f18:	int3   
   140002f19:	int3   
   140002f1a:	int3   
   140002f1b:	int3   
   140002f1c:	int3   
   140002f1d:	int3   
   140002f1e:	int3   
   140002f1f:	int3   
   140002f20:	ret    0x0
   140002f23:	int3   
   140002f24:	int3   
   140002f25:	int3   
   140002f26:	int3   
   140002f27:	int3   
   140002f28:	int3   
   140002f29:	int3   
   140002f2a:	int3   
   140002f2b:	int3   
   140002f2c:	int3   
   140002f2d:	int3   
   140002f2e:	int3   
   140002f2f:	int3   
   140002f30:	int3   
   140002f31:	int3   
   140002f32:	int3   
   140002f33:	int3   
   140002f34:	int3   
   140002f35:	int3   
   140002f36:	int3   
   140002f37:	int3   
   140002f38:	int3   
   140002f39:	int3   
   140002f3a:	int3   
   140002f3b:	int3   
   140002f3c:	int3   
   140002f3d:	int3   
   140002f3e:	int3   
   140002f3f:	int3   
   140002f40:	jmp    QWORD PTR [rip+0x1182]        # 0x1400040c8
   140002f46:	int3   
   140002f47:	int3   
   140002f48:	int3   
   140002f49:	int3   
   140002f4a:	int3   
   140002f4b:	int3   
   140002f4c:	int3   
   140002f4d:	int3   
   140002f4e:	int3   
   140002f4f:	int3   
   140002f50:	jmp    QWORD PTR [rip+0x115a]        # 0x1400040b0
   140002f56:	int3   
   140002f57:	int3   
   140002f58:	int3   
   140002f59:	int3   
   140002f5a:	int3   
   140002f5b:	int3   
   140002f5c:	int3   
   140002f5d:	int3   
   140002f5e:	int3   
   140002f5f:	int3   
   140002f60:	jmp    QWORD PTR [rip+0x1152]        # 0x1400040b8
   140002f66:	int3   
   140002f67:	int3   
   140002f68:	int3   
   140002f69:	int3   
   140002f6a:	int3   
   140002f6b:	int3   
   140002f6c:	int3   
   140002f6d:	int3   
   140002f6e:	int3   
   140002f6f:	int3   
   140002f70:	jmp    QWORD PTR [rip+0x114a]        # 0x1400040c0
   140002f76:	int3   
   140002f77:	int3   
   140002f78:	int3   
   140002f79:	int3   
   140002f7a:	int3   
   140002f7b:	int3   
   140002f7c:	int3   
   140002f7d:	int3   
   140002f7e:	int3   
   140002f7f:	int3   
   140002f80:	jmp    QWORD PTR [rip+0x1202]        # 0x140004188
   140002f86:	int3   
   140002f87:	int3   
   140002f88:	int3   
   140002f89:	int3   
   140002f8a:	int3   
   140002f8b:	int3   
   140002f8c:	int3   
   140002f8d:	int3   
   140002f8e:	int3   
   140002f8f:	int3   
   140002f90:	jmp    QWORD PTR [rip+0x11ea]        # 0x140004180
   140002f96:	int3   
   140002f97:	int3   
   140002f98:	int3   
   140002f99:	int3   
   140002f9a:	int3   
   140002f9b:	int3   
   140002f9c:	int3   
   140002f9d:	int3   
   140002f9e:	int3   
   140002f9f:	int3   
   140002fa0:	jmp    QWORD PTR [rip+0x11d2]        # 0x140004178
   140002fa6:	int3   
   140002fa7:	int3   
   140002fa8:	int3   
   140002fa9:	int3   
   140002faa:	int3   
   140002fab:	int3   
   140002fac:	int3   
   140002fad:	int3   
   140002fae:	int3   
   140002faf:	int3   
   140002fb0:	jmp    QWORD PTR [rip+0x11ba]        # 0x140004170
   140002fb6:	int3   
   140002fb7:	int3   
   140002fb8:	int3   
   140002fb9:	int3   
   140002fba:	int3   
   140002fbb:	int3   
   140002fbc:	int3   
   140002fbd:	int3   
   140002fbe:	int3   
   140002fbf:	int3   
   140002fc0:	jmp    QWORD PTR [rip+0x11a2]        # 0x140004168
   140002fc6:	int3   
   140002fc7:	int3   
   140002fc8:	int3   
   140002fc9:	int3   
   140002fca:	int3   
   140002fcb:	int3   
   140002fcc:	int3   
   140002fcd:	int3   
   140002fce:	int3   
   140002fcf:	int3   
   140002fd0:	jmp    QWORD PTR [rip+0x118a]        # 0x140004160
   140002fd6:	int3   
   140002fd7:	int3   
   140002fd8:	int3   
   140002fd9:	int3   
   140002fda:	int3   
   140002fdb:	int3   
   140002fdc:	int3   
   140002fdd:	int3   
   140002fde:	int3   
   140002fdf:	int3   
   140002fe0:	jmp    QWORD PTR [rip+0x1172]        # 0x140004158
   140002fe6:	int3   
   140002fe7:	int3   
   140002fe8:	int3   
   140002fe9:	int3   
   140002fea:	int3   
   140002feb:	int3   
   140002fec:	int3   
   140002fed:	int3   
   140002fee:	int3   
   140002fef:	int3   
   140002ff0:	jmp    QWORD PTR [rip+0x115a]        # 0x140004150
   140002ff6:	int3   
   140002ff7:	int3   
   140002ff8:	int3   
   140002ff9:	int3   
   140002ffa:	int3   
   140002ffb:	int3   
   140002ffc:	int3   
   140002ffd:	int3   
   140002ffe:	int3   
   140002fff:	int3   
   140003000:	jmp    QWORD PTR [rip+0x1142]        # 0x140004148
   140003006:	int3   
   140003007:	int3   
   140003008:	int3   
   140003009:	int3   
   14000300a:	int3   
   14000300b:	int3   
   14000300c:	int3   
   14000300d:	int3   
   14000300e:	int3   
   14000300f:	int3   
   140003010:	jmp    QWORD PTR [rip+0x112a]        # 0x140004140
   140003016:	int3   
   140003017:	int3   
   140003018:	int3   
   140003019:	int3   
   14000301a:	int3   
   14000301b:	int3   
   14000301c:	int3   
   14000301d:	int3   
   14000301e:	int3   
   14000301f:	int3   
   140003020:	jmp    QWORD PTR [rip+0x1112]        # 0x140004138
   140003026:	int3   
   140003027:	int3   
   140003028:	int3   
   140003029:	int3   
   14000302a:	int3   
   14000302b:	int3   
   14000302c:	int3   
   14000302d:	int3   
   14000302e:	int3   
   14000302f:	int3   
   140003030:	jmp    QWORD PTR [rip+0x10fa]        # 0x140004130
   140003036:	int3   
   140003037:	int3   
   140003038:	int3   
   140003039:	int3   
   14000303a:	int3   
   14000303b:	int3   
   14000303c:	int3   
   14000303d:	int3   
   14000303e:	int3   
   14000303f:	int3   
   140003040:	jmp    QWORD PTR [rip+0x10e2]        # 0x140004128
   140003046:	int3   
   140003047:	int3   
   140003048:	int3   
   140003049:	int3   
   14000304a:	int3   
   14000304b:	int3   
   14000304c:	int3   
   14000304d:	int3   
   14000304e:	int3   
   14000304f:	int3   
   140003050:	jmp    QWORD PTR [rip+0x10ca]        # 0x140004120
   140003056:	int3   
   140003057:	int3   
   140003058:	int3   
   140003059:	int3   
   14000305a:	int3   
   14000305b:	int3   
   14000305c:	sub    rsp,0x28
   140003060:	mov    r8,QWORD PTR [r9+0x38]
   140003064:	mov    rcx,rdx
   140003067:	mov    rdx,r9
   14000306a:	call   0x140003080
   14000306f:	mov    eax,0x1
   140003074:	add    rsp,0x28
   140003078:	ret    
   140003079:	int3   
   14000307a:	int3   
   14000307b:	int3   
   14000307c:	int3   
   14000307d:	int3   
   14000307e:	int3   
   14000307f:	int3   
   140003080:	rex push rbx
   140003082:	sub    rsp,0x20
   140003086:	mov    r11d,DWORD PTR [r8]
   140003089:	mov    rbx,rdx
   14000308c:	and    r11d,0xfffffff8
   140003090:	mov    r9,rcx
   140003093:	test   BYTE PTR [r8],0x4
   140003097:	mov    r10,rcx
   14000309a:	je     0x1400030af
   14000309c:	mov    eax,DWORD PTR [r8+0x8]
   1400030a0:	movsxd r10,DWORD PTR [r8+0x4]
   1400030a4:	neg    eax
   1400030a6:	add    r10,rcx
   1400030a9:	movsxd rcx,eax
   1400030ac:	and    r10,rcx
   1400030af:	movsxd rax,r11d
   1400030b2:	mov    rdx,QWORD PTR [rax+r10*1]
   1400030b6:	mov    rax,QWORD PTR [rbx+0x10]
   1400030ba:	mov    ecx,DWORD PTR [rax+0x8]
   1400030bd:	add    rcx,QWORD PTR [rbx+0x8]
   1400030c1:	test   BYTE PTR [rcx+0x3],0xf
   1400030c5:	je     0x1400030d3
   1400030c7:	movzx  eax,BYTE PTR [rcx+0x3]
   1400030cb:	and    eax,0xfffffff0
   1400030ce:	cdqe   
   1400030d0:	add    r9,rax
   1400030d3:	xor    r9,rdx
   1400030d6:	mov    rcx,r9
   1400030d9:	add    rsp,0x20
   1400030dd:	pop    rbx
   1400030de:	jmp    0x140002a20
   1400030e3:	int3   
   1400030e4:	int3   
   1400030e5:	int3   
   1400030e6:	int3   
   1400030e7:	int3   
   1400030e8:	int3   
   1400030e9:	int3   
   1400030ea:	jmp    QWORD PTR [rip+0x1240]        # 0x140004330
   1400030f0:	int3   
   1400030f1:	int3   
   1400030f2:	int3   
   1400030f3:	int3   
   1400030f4:	int3   
   1400030f5:	int3   
   1400030f6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140003100:	jmp    rax
   140003102:	int3   
   140003103:	int3   
   140003104:	int3   
   140003105:	int3   
   140003106:	int3   
   140003107:	int3   
   140003108:	int3   
   140003109:	int3   
   14000310a:	int3   
   14000310b:	int3   
   14000310c:	int3   
   14000310d:	int3   
   14000310e:	int3   
   14000310f:	int3   
   140003110:	int3   
   140003111:	int3   
   140003112:	int3   
   140003113:	int3   
   140003114:	int3   
   140003115:	int3   
   140003116:	rex push rbp
   140003118:	sub    rsp,0x20
   14000311c:	mov    rbp,rdx
   14000311f:	mov    rcx,QWORD PTR [rbp+0x28]
   140003123:	call   0x140002624
   140003128:	nop
   140003129:	add    rsp,0x20
   14000312d:	pop    rbp
   14000312e:	ret    
   14000312f:	int3   
   140003130:	int3   
   140003131:	int3   
   140003132:	int3   
   140003133:	int3   
   140003134:	int3   
   140003135:	int3   
   140003136:	rex push rbp
   140003138:	sub    rsp,0x20
   14000313c:	mov    rbp,rdx
   14000313f:	mov    rax,QWORD PTR [rcx]
   140003142:	mov    rdx,rcx
   140003145:	mov    ecx,DWORD PTR [rax]
   140003147:	call   0x140002c7e
   14000314c:	nop
   14000314d:	add    rsp,0x20
   140003151:	pop    rbp
   140003152:	ret    
   140003153:	int3   
   140003154:	int3   
   140003155:	int3   
   140003156:	int3   
   140003157:	int3   
   140003158:	int3   
   140003159:	int3   
   14000315a:	int3   
   14000315b:	int3   
   14000315c:	int3   
   14000315d:	int3   
   14000315e:	int3   
   14000315f:	int3   
   140003160:	rex push rbp
   140003162:	sub    rsp,0x20
   140003166:	mov    rbp,rdx
   140003169:	mov    rax,QWORD PTR [rcx]
   14000316c:	xor    ecx,ecx
   14000316e:	cmp    DWORD PTR [rax],0xc0000005
   140003174:	sete   cl
   140003177:	mov    eax,ecx
   140003179:	add    rsp,0x20
   14000317d:	pop    rbp
   14000317e:	ret    
   14000317f:	int3   

Disassembly of section .rdata:

0000000140004000 <.rdata>:
   140004000:	and    BYTE PTR [rdx+0x0],dl
   140004003:	add    BYTE PTR [rax],al
   140004005:	add    BYTE PTR [rax],al
   140004007:	add    BYTE PTR [rdx+rdx*2],bh
   14000400a:	add    BYTE PTR [rax],al
   14000400c:	add    BYTE PTR [rax],al
   14000400e:	add    BYTE PTR [rax],al
   140004010:	push   rax
   140004011:	push   rdx
   140004012:	add    BYTE PTR [rax],al
   140004014:	add    BYTE PTR [rax],al
   140004016:	add    BYTE PTR [rax],al
   140004018:	push   dx
   14000401a:	add    BYTE PTR [rax],al
   14000401c:	add    BYTE PTR [rax],al
   14000401e:	add    BYTE PTR [rax],al
   140004020:	js     0x140004074
   140004022:	add    BYTE PTR [rax],al
   140004024:	add    BYTE PTR [rax],al
   140004026:	add    BYTE PTR [rax],al
   140004028:	xchg   edx,eax
   140004029:	push   rdx
   14000402a:	add    BYTE PTR [rax],al
   14000402c:	add    BYTE PTR [rax],al
   14000402e:	add    BYTE PTR [rax],al
   140004030:	test   al,0x52
   140004032:	add    BYTE PTR [rax],al
   140004034:	add    BYTE PTR [rax],al
   140004036:	add    BYTE PTR [rax],al
   140004038:	mov    dl,0x52
   14000403a:	add    BYTE PTR [rax],al
   14000403c:	add    BYTE PTR [rax],al
   14000403e:	add    BYTE PTR [rax],al
   140004040:	int3   
   140004041:	push   rdx
   140004042:	add    BYTE PTR [rax],al
   140004044:	add    BYTE PTR [rax],al
   140004046:	add    BYTE PTR [rax],al
   140004048:	ficom  WORD PTR [rdx+0x0]
   14000404b:	add    BYTE PTR [rax],al
   14000404d:	add    BYTE PTR [rax],al
   14000404f:	add    dh,ch
   140004051:	push   rdx
   140004052:	add    BYTE PTR [rax],al
   140004054:	add    BYTE PTR [rax],al
   140004056:	add    BYTE PTR [rax],al
   140004058:	cld    
   140004059:	push   rdx
   14000405a:	add    BYTE PTR [rax],al
   14000405c:	add    BYTE PTR [rax],al
   14000405e:	add    BYTE PTR [rax],al
   140004060:	or     al,0x53
   140004062:	add    BYTE PTR [rax],al
   140004064:	add    BYTE PTR [rax],al
   140004066:	add    BYTE PTR [rax],al
   140004068:	sbb    al,0x53
   14000406a:	add    BYTE PTR [rax],al
   14000406c:	add    BYTE PTR [rax],al
   14000406e:	add    BYTE PTR [rax],al
   140004070:	sub    al,0x53
   140004072:	add    BYTE PTR [rax],al
   140004074:	add    BYTE PTR [rax],al
   140004076:	add    BYTE PTR [rax],al
   140004078:	rex.RX push rbx
	...
   140004086:	add    BYTE PTR [rax],al
   140004088:	pop    rcx
   140004089:	add    DWORD PTR [rax],eax
   14000408b:	add    BYTE PTR [rax],al
   14000408d:	add    BYTE PTR [rax],al
   14000408f:	sbb    BYTE PTR [rax+rbx*2],0x0
	...
   14000409f:	add    BYTE PTR [rsi+0x55],bh
	...
   1400040ae:	add    BYTE PTR [rax],al
   1400040b0:	scas   al,BYTE PTR es:[rdi]
   1400040b1:	pop    rax
   1400040b2:	add    BYTE PTR [rax],al
   1400040b4:	add    BYTE PTR [rax],al
   1400040b6:	add    BYTE PTR [rax],al
   1400040b8:	repnz pop rax
   1400040ba:	add    BYTE PTR [rax],al
   1400040bc:	add    BYTE PTR [rax],al
   1400040be:	add    BYTE PTR [rax],al
   1400040c0:	(bad)  
   1400040c1:	pop    rcx
   1400040c2:	add    BYTE PTR [rax],al
   1400040c4:	add    BYTE PTR [rax],al
   1400040c6:	add    BYTE PTR [rax],al
   1400040c8:	xchg   BYTE PTR [rax+0x0],bl
   1400040cb:	add    BYTE PTR [rax],al
   1400040cd:	add    BYTE PTR [rax],al
   1400040cf:	add    BYTE PTR [rdx+0x59],ah
   1400040d5:	add    BYTE PTR [rax],al
   1400040d7:	add    ah,bl
   1400040d9:	pop    rcx
   1400040da:	add    BYTE PTR [rax],al
   1400040dc:	add    BYTE PTR [rax],al
   1400040de:	add    BYTE PTR [rax],al
   1400040e0:	es pop rdx
   1400040e2:	add    BYTE PTR [rax],al
   1400040e4:	add    BYTE PTR [rax],al
   1400040e6:	add    BYTE PTR [rax],al
   1400040e8:	js     0x140004142
   1400040ea:	add    BYTE PTR [rax],al
   1400040ec:	add    BYTE PTR [rax],al
   1400040ee:	add    BYTE PTR [rax],al
   1400040f0:	pop    dx
   1400040f2:	add    BYTE PTR [rax],al
   1400040f4:	add    BYTE PTR [rax],al
   1400040f6:	add    BYTE PTR [rax],al
   1400040f8:	mov    WORD PTR [rdi+0x0],ds
   1400040fb:	add    BYTE PTR [rax],al
   1400040fd:	add    BYTE PTR [rax],al
   1400040ff:	add    BYTE PTR [rax+0x5f],ah
   140004102:	add    BYTE PTR [rax],al
   140004104:	add    BYTE PTR [rax],al
   140004106:	add    BYTE PTR [rax],al
   140004108:	cs pop rdi
   14000410a:	add    BYTE PTR [rax],al
   14000410c:	add    BYTE PTR [rax],al
   14000410e:	add    BYTE PTR [rax],al
   140004110:	add    al,0x5f
   140004112:	add    BYTE PTR [rax],al
   140004114:	add    BYTE PTR [rax],al
   140004116:	add    BYTE PTR [rax],al
   140004118:	fcomp  QWORD PTR [rsi+0x0]
   14000411b:	add    BYTE PTR [rax],al
   14000411d:	add    BYTE PTR [rax],al
   14000411f:	add    BYTE PTR [rdx+0x5e],ch
   140004122:	add    BYTE PTR [rax],al
   140004124:	add    BYTE PTR [rax],al
   140004126:	add    BYTE PTR [rax],al
   140004128:	and    al,0x5e
   14000412a:	add    BYTE PTR [rax],al
   14000412c:	add    BYTE PTR [rax],al
   14000412e:	add    BYTE PTR [rax],al
   140004130:	neg    BYTE PTR [rbp+0x0]
   140004133:	add    BYTE PTR [rax],al
   140004135:	add    BYTE PTR [rax],al
   140004137:	add    dh,cl
   140004139:	pop    rbp
   14000413a:	add    BYTE PTR [rax],al
   14000413c:	add    BYTE PTR [rax],al
   14000413e:	add    BYTE PTR [rax],al
   140004140:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140004141:	pop    rbp
   140004142:	add    BYTE PTR [rax],al
   140004144:	add    BYTE PTR [rax],al
   140004146:	add    BYTE PTR [rax],al
   140004148:	js     0x1400041a7
   14000414a:	add    BYTE PTR [rax],al
   14000414c:	add    BYTE PTR [rax],al
   14000414e:	add    BYTE PTR [rax],al
   140004150:	rex.WRX pop rbp
   140004152:	add    BYTE PTR [rax],al
   140004154:	add    BYTE PTR [rax],al
   140004156:	add    BYTE PTR [rax],al
   140004158:	(bad)  
   140004159:	pop    rbp
   14000415a:	add    BYTE PTR [rax],al
   14000415c:	add    BYTE PTR [rax],al
   14000415e:	add    BYTE PTR [rax],al
   140004160:	ficomp DWORD PTR [rax+rax*1+0x0]
   140004164:	add    BYTE PTR [rax],al
   140004166:	add    BYTE PTR [rax],al
   140004168:	pushf  
   140004169:	pop    rsp
   14000416a:	add    BYTE PTR [rax],al
   14000416c:	add    BYTE PTR [rax],al
   14000416e:	add    BYTE PTR [rax],al
   140004170:	pop    rsi
   140004171:	pop    rsp
   140004172:	add    BYTE PTR [rax],al
   140004174:	add    BYTE PTR [rax],al
   140004176:	add    BYTE PTR [rax],al
   140004178:	hlt    
   140004179:	pop    rbx
   14000417a:	add    BYTE PTR [rax],al
   14000417c:	add    BYTE PTR [rax],al
   14000417e:	add    BYTE PTR [rax],al
   140004180:	mov    WORD PTR [rbx+0x0],ds
   140004183:	add    BYTE PTR [rax],al
   140004185:	add    BYTE PTR [rax],al
   140004187:	add    BYTE PTR [rsi],bh
   140004189:	pop    rbx
   14000418a:	add    BYTE PTR [rax],al
   14000418c:	add    BYTE PTR [rax],al
   14000418e:	add    BYTE PTR [rax],al
   140004190:	jbe    0x1400041ec
   140004192:	add    BYTE PTR [rax],al
   140004194:	add    BYTE PTR [rax],al
   140004196:	add    BYTE PTR [rax],al
   140004198:	xor    al,0x5b
   14000419a:	add    BYTE PTR [rax],al
   14000419c:	add    BYTE PTR [rax],al
   14000419e:	add    BYTE PTR [rax],al
   1400041a0:	or     al,0x5b
   1400041a2:	add    BYTE PTR [rax],al
   1400041a4:	add    BYTE PTR [rax],al
   1400041a6:	add    BYTE PTR [rax],al
   1400041a8:	rex.RX pop rdx
   1400041aa:	add    BYTE PTR [rax],al
   1400041ac:	add    BYTE PTR [rax],al
   1400041ae:	add    BYTE PTR [rax],al
   1400041b0:	cli    
   1400041b1:	pop    rdx
   1400041b2:	add    BYTE PTR [rax],al
   1400041b4:	add    BYTE PTR [rax],al
   1400041b6:	add    BYTE PTR [rax],al
   1400041b8:	mov    dl,0x5a
   1400041ba:	add    BYTE PTR [rax],al
   1400041bc:	add    BYTE PTR [rax],al
   1400041be:	add    BYTE PTR [rax],al
   1400041c0:	out    0x5a,al
	...
   1400041ce:	add    BYTE PTR [rax],al
   1400041d0:	rcl    BYTE PTR [rbx+0x0],cl
   1400041d3:	add    BYTE PTR [rax],al
   1400041d5:	add    BYTE PTR [rax],al
   1400041d7:	add    BYTE PTR [rdx+0x53],ah
   1400041da:	add    BYTE PTR [rax],al
   1400041dc:	add    BYTE PTR [rax],al
   1400041de:	add    BYTE PTR [rax],al
   1400041e0:	je     0x140004235
   1400041e2:	add    BYTE PTR [rax],al
   1400041e4:	add    BYTE PTR [rax],al
   1400041e6:	add    BYTE PTR [rax],al
   1400041e8:	mov    BYTE PTR [rbx+0x0],dl
   1400041eb:	add    BYTE PTR [rax],al
   1400041ed:	add    BYTE PTR [rax],al
   1400041ef:	add    BYTE PTR [rbx+rdx*2+0x0],bl
   1400041f6:	add    BYTE PTR [rax],al
   1400041f8:	mov    ah,0x53
   1400041fa:	add    BYTE PTR [rax],al
   1400041fc:	add    BYTE PTR [rax],al
   1400041fe:	add    BYTE PTR [rax],al
   140004200:	(bad)  
   140004201:	push   rbx
   140004202:	add    BYTE PTR [rax],al
   140004204:	add    BYTE PTR [rax],al
   140004206:	add    BYTE PTR [rax],al
   140004208:	loopne 0x14000425d
	...
   140004216:	add    BYTE PTR [rax],al
   140004218:	push   rsi
   140004219:	pop    rax
	...
   140004226:	add    BYTE PTR [rax],al
   140004228:	or     BYTE PTR [rax+rax*1+0x0],dl
   14000422c:	add    BYTE PTR [rax],al
   14000422e:	add    BYTE PTR [rax],al
   140004230:	cli    
   140004231:	push   rbx
   140004232:	add    BYTE PTR [rax],al
   140004234:	add    BYTE PTR [rax],al
   140004236:	add    BYTE PTR [rax],al
   140004238:	(bad)  
   140004239:	push   rsp
   14000423a:	add    BYTE PTR [rax],al
   14000423c:	add    BYTE PTR [rax],al
   14000423e:	add    BYTE PTR [rax],al
   140004240:	and    dl,BYTE PTR [rax+rax*1+0x0]
	...
   140004250:	rex.R push rbp
	...
   14000425e:	add    BYTE PTR [rax],al
   140004260:	adc    dl,BYTE PTR [rsi+0x0]
   140004263:	add    BYTE PTR [rax],al
   140004265:	add    BYTE PTR [rax],al
   140004267:	add    dh,dh
   140004269:	push   rbp
	...
   140004276:	add    BYTE PTR [rax],al
   140004278:	rex.R push rsi
	...
   140004286:	add    BYTE PTR [rax],al
   140004288:	jb     0x1400042e0
   14000428a:	add    BYTE PTR [rax],al
   14000428c:	add    BYTE PTR [rax],al
   14000428e:	add    BYTE PTR [rax],al
   140004290:	mov    BYTE PTR [rsi+0x0],dl
   140004293:	add    BYTE PTR [rax],al
   140004295:	add    BYTE PTR [rax],al
   140004297:	add    BYTE PTR [rdx+0x55],ah
   14000429d:	add    BYTE PTR [rax],al
   14000429f:	add    BYTE PTR [rax],dh
   1400042a1:	push   rsi
	...
   1400042ae:	add    BYTE PTR [rax],al
   1400042b0:	pop    rax
   1400042b1:	push   rsi
	...
   1400042be:	add    BYTE PTR [rax],al
   1400042c0:	loop   0x140004317
   1400042c2:	add    BYTE PTR [rax],al
   1400042c4:	add    BYTE PTR [rax],al
   1400042c6:	add    BYTE PTR [rax],al
   1400042c8:	enter  0x55,0x0
   1400042cc:	add    BYTE PTR [rax],al
   1400042ce:	add    BYTE PTR [rax],al
   1400042d0:	mov    ah,0x55
	...
   1400042de:	add    BYTE PTR [rax],al
   1400042e0:	(bad)  
   1400042e1:	push   rbp
	...
   1400042ee:	add    BYTE PTR [rax],al
   1400042f0:	sahf   
   1400042f1:	push   rsi
   1400042f2:	add    BYTE PTR [rax],al
   1400042f4:	add    BYTE PTR [rax],al
   1400042f6:	add    BYTE PTR [rax],al
   1400042f8:	mov    eax,0x56
	...
   140004305:	add    BYTE PTR [rax],al
   140004307:	add    BYTE PTR [rsi],bh
   140004309:	push   rsp
   14000430a:	add    BYTE PTR [rax],al
   14000430c:	add    BYTE PTR [rax],al
   14000430e:	add    BYTE PTR [rax],al
   140004310:	push   rax
   140004311:	push   rsp
   140004312:	add    BYTE PTR [rax],al
   140004314:	add    BYTE PTR [rax],al
   140004316:	add    BYTE PTR [rax],al
   140004318:	rex.W push rsp
   14000431a:	add    BYTE PTR [rax],al
   14000431c:	add    BYTE PTR [rax],al
   14000431e:	add    BYTE PTR [rax],al
   140004320:	pop    rdx
   140004321:	push   rsp
   140004322:	add    BYTE PTR [rax],al
   140004324:	add    BYTE PTR [rax],al
   140004326:	add    BYTE PTR [rax],al
   140004328:	push   sp
   14000432a:	add    BYTE PTR [rax],al
   14000432c:	add    BYTE PTR [rax],al
   14000432e:	add    BYTE PTR [rax],al
   140004330:	rcr    BYTE PTR [rdi+0x0],0x0
   140004334:	add    BYTE PTR [rax],al
   140004336:	add    BYTE PTR [rax],al
   140004338:	xor    BYTE PTR [rbp+0x0],dl
   14000433b:	add    BYTE PTR [rax],al
   14000433d:	add    BYTE PTR [rax],al
   14000433f:	add    BYTE PTR [rax],bl
   140004341:	push   rbp
   140004342:	add    BYTE PTR [rax],al
   140004344:	add    BYTE PTR [rax],al
   140004346:	add    BYTE PTR [rax],al
   140004348:	(bad)  
   140004349:	push   rbp
   14000434a:	add    BYTE PTR [rax],al
   14000434c:	add    BYTE PTR [rax],al
   14000434e:	add    BYTE PTR [rax],al
   140004350:	add    al,0x55
   140004352:	add    BYTE PTR [rax],al
   140004354:	add    BYTE PTR [rax],al
   140004356:	add    BYTE PTR [rax],al
   140004358:	in     al,dx
   140004359:	push   rsp
   14000435a:	add    BYTE PTR [rax],al
   14000435c:	add    BYTE PTR [rax],al
   14000435e:	add    BYTE PTR [rax],al
   140004360:	loopne 0x1400043b6
   140004362:	add    BYTE PTR [rax],al
   140004364:	add    BYTE PTR [rax],al
   140004366:	add    BYTE PTR [rax],al
   140004368:	int3   
   140004369:	push   rsp
   14000436a:	add    BYTE PTR [rax],al
   14000436c:	add    BYTE PTR [rax],al
   14000436e:	add    BYTE PTR [rax],al
   140004370:	mov    esi,0x54
   140004375:	add    BYTE PTR [rax],al
   140004377:	add    BYTE PTR [rsp+rdx*2+0x0],dh
   14000437e:	add    BYTE PTR [rax],al
   140004380:	lods   al,BYTE PTR ds:[rsi]
   140004381:	push   rsp
   140004382:	add    BYTE PTR [rax],al
   140004384:	add    BYTE PTR [rax],al
   140004386:	add    BYTE PTR [rax],al
   140004388:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140004389:	push   rsp
   14000438a:	add    BYTE PTR [rax],al
   14000438c:	add    BYTE PTR [rax],al
   14000438e:	add    BYTE PTR [rax],al
   140004390:	xchg   edx,eax
   140004391:	push   rsp
   140004392:	add    BYTE PTR [rax],al
   140004394:	add    BYTE PTR [rax],al
   140004396:	add    BYTE PTR [rax],al
   140004398:	(bad)  
   140004399:	push   rsp
   14000439a:	add    BYTE PTR [rax],al
   14000439c:	add    BYTE PTR [rax],al
   14000439e:	add    BYTE PTR [rax],al
   1400043a0:	je     0x1400043f6
	...
   1400043ae:	add    BYTE PTR [rax],al
   1400043b0:	push   0x55
	...
   1400043be:	add    BYTE PTR [rax],al
   1400043c0:	cmp    al,0x58
	...
   1400043ce:	add    BYTE PTR [rax],al
   1400043d0:	push   rsi
   1400043d1:	push   rbp
	...
   1400043de:	add    BYTE PTR [rax],al
   1400043e0:	and    BYTE PTR [rdi],ch
   1400043e2:	add    BYTE PTR [rax+0x1],al
   1400043e5:	add    BYTE PTR [rax],al
   1400043e7:	add    BYTE PTR [rax],al
   1400043e9:	xor    DWORD PTR [rax],eax
   1400043eb:	rex add DWORD PTR [rax],eax
	...
   1400043f6:	add    BYTE PTR [rax],al
   1400043f8:	push   rax
   1400043f9:	(bad)  
   1400043fa:	add    BYTE PTR [rax+0x1],al
	...
   14000440d:	add    BYTE PTR [rax],al
   14000440f:	add    BYTE PTR [rax+0x26],dh
   140004412:	add    BYTE PTR [rax+0x1],al
   140004415:	add    BYTE PTR [rax],al
   140004417:	add    BYTE PTR [rax+0x2c],ah
   14000441a:	add    BYTE PTR [rax+0x1],al
	...
   140004425:	add    BYTE PTR [rax],al
   140004427:	add    al,ah
   140004429:	adc    al,BYTE PTR [rax]
   14000442b:	add    al,dh
   14000442d:	adc    al,BYTE PTR [rax]
   14000442f:	add    BYTE PTR [rax],al
   140004431:	adc    eax,DWORD PTR [rax]
   140004433:	add    al,dh
   140004435:	adc    eax,DWORD PTR [rax]
   140004437:	add    BYTE PTR [rax],al
   140004439:	adc    al,0x0
   14000443b:	add    BYTE PTR [rax+0x70000018],al
   140004441:	add    BYTE PTR es:[rax],al
   140004444:	push   rax
   140004445:	(bad)  
   140004446:	add    BYTE PTR [rax],al
   140004448:	movabs al,ds:0x2000002a80000027
   140004451:	sub    al,0x0
   140004453:	add    BYTE PTR [rax+0x2c],ah
   140004456:	add    BYTE PTR [rax],al
   140004458:	and    BYTE PTR [rdi],ch
   14000445a:	add    BYTE PTR [rax],al
   14000445c:	rex (bad) 
   14000445e:	add    BYTE PTR [rax],al
   140004460:	push   rax
   140004461:	(bad)  
   140004462:	add    BYTE PTR [rax],al
   140004464:	(bad)  
   140004465:	(bad)  
   140004466:	add    BYTE PTR [rax],al
   140004468:	jo     0x140004499
   14000446a:	add    BYTE PTR [rax],al
   14000446c:	sub    BYTE PTR [rdi],0x0
   14000446f:	add    BYTE PTR [rax-0x5fffffd1],dl
   140004475:	(bad)  
   140004476:	add    BYTE PTR [rax],al
   140004478:	mov    al,0x2f
   14000447a:	add    BYTE PTR [rax],al
   14000447c:	shr    BYTE PTR [rdi],0x0
   14000447f:	add    al,dl
   140004481:	(bad)  
   140004482:	add    BYTE PTR [rax],al
   140004484:	loopne 0x1400044b5
   140004486:	add    BYTE PTR [rax],al
   140004488:	lock (bad) 
   14000448a:	add    BYTE PTR [rax],al
   14000448c:	add    BYTE PTR [rax],dh
   14000448e:	add    BYTE PTR [rax],al
   140004490:	adc    BYTE PTR [rax],dh
   140004492:	add    BYTE PTR [rax],al
   140004494:	and    BYTE PTR [rax],dh
   140004496:	add    BYTE PTR [rax],al
   140004498:	xor    BYTE PTR [rax],dh
   14000449a:	add    BYTE PTR [rax],al
   14000449c:	xor    BYTE PTR [rax],al
   14000449f:	add    BYTE PTR [rax+0x30],dl
	...
   1400044ae:	add    BYTE PTR [rax],al
   1400044b0:	push   rax
   1400044b1:	(bad)  
   1400044b2:	add    BYTE PTR [rax+0x1],al
   1400044b5:	add    BYTE PTR [rax],al
   1400044b7:	add    al,dh
   1400044b9:	(bad)  
   1400044ba:	add    BYTE PTR [rax+0x1],al
	...
   1400044c5:	add    BYTE PTR [rax],al
   1400044c7:	add    BYTE PTR [rdi+0x0],dh
   1400044ca:	(bad)  
   1400044cb:	add    BYTE PTR [rdx+0x0],dh
   1400044ce:	outs   dx,BYTE PTR ds:[rsi]
   1400044cf:	add    BYTE PTR [rbx+0x0],dh
   1400044d2:	je     0x1400044d4
   1400044d4:	(bad)  
   1400044d5:	add    BYTE PTR [rax+rax*1+0x75],dh
   1400044d9:	add    BYTE PTR [rbx+0x0],dh
   1400044dc:	imul   eax,DWORD PTR [rax],0x6f0063
   1400044e2:	outs   dx,BYTE PTR ds:[rsi]
   1400044e3:	add    BYTE PTR [rax],al
   1400044e5:	add    BYTE PTR [rax],al
   1400044e7:	add    BYTE PTR [rcx+0x0],ch
   1400044ea:	outs   dx,BYTE PTR ds:[rsi]
   1400044eb:	add    BYTE PTR [rsi+0x0],ah
   1400044ee:	outs   dx,DWORD PTR ds:[rsi]
   1400044ef:	add    BYTE PTR [rbx+0x0],dh
   1400044f2:	je     0x1400044f4
   1400044f4:	(bad)  
   1400044f5:	add    BYTE PTR [rax+rax*1+0x75],dh
   1400044f9:	add    BYTE PTR [rbx+0x0],dh
   1400044fc:	imul   eax,DWORD PTR [rax],0x6f0063
   140004502:	outs   dx,BYTE PTR ds:[rsi]
   140004503:	add    BYTE PTR [rax],al
   140004505:	add    BYTE PTR [rax],al
   140004507:	add    BYTE PTR [rbp+0x0],ah
   14000450a:	jb     0x14000450c
   14000450c:	jb     0x14000450e
   14000450e:	outs   dx,DWORD PTR ds:[rsi]
   14000450f:	add    BYTE PTR [rdx+0x0],dh
   140004512:	jae    0x140004514
   140004514:	je     0x140004516
   140004516:	(bad)  
   140004517:	add    BYTE PTR [rax+rax*1+0x75],dh
   14000451b:	add    BYTE PTR [rbx+0x0],dh
   14000451e:	imul   eax,DWORD PTR [rax],0x6f0063
   140004524:	outs   dx,BYTE PTR ds:[rsi]
   140004525:	add    BYTE PTR [rax],al
   140004527:	add    BYTE PTR [rax+0x0],dh
   14000452a:	(bad)  
   14000452b:	add    BYTE PTR [rdi+0x0],ah
   14000452e:	add    BYTE PTR gs:[rcx],dh
   140004531:	add    BYTE PTR [rax],al
   140004533:	add    BYTE PTR [rax],al
   140004535:	add    BYTE PTR [rax],al
   140004537:	add    BYTE PTR [rbp+0x0],ch
   14000453a:	(bad)  
   14000453b:	add    BYTE PTR [rbx+0x0],ah
   14000453e:	push   0x6e006900
   140004543:	add    BYTE PTR [rbp+0x0],ah
   140004546:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000454a:	ins    DWORD PTR es:[rdi],dx
   14000454b:	add    BYTE PTR [rbp+0x0],ah
   14000454e:	add    BYTE PTR [rax],al
   140004550:	jne    0x140004552
   140004552:	jae    0x140004554
   140004554:	add    BYTE PTR gs:[rdx+0x0],dh
   140004558:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000455c:	ins    DWORD PTR es:[rdi],dx
   14000455d:	add    BYTE PTR [rbp+0x0],ah
	...
   140004568:	jo     0x14000456a
   14000456a:	(bad)  
   14000456b:	add    BYTE PTR [rbx+0x0],dh
   14000456e:	jae    0x140004570
   140004570:	ja     0x140004572
   140004572:	outs   dx,DWORD PTR ds:[rsi]
   140004573:	add    BYTE PTR [rdx+0x0],dh
   140004576:	add    BYTE PTR fs:[rax],al
   140004579:	add    BYTE PTR [rax],al
   14000457b:	add    BYTE PTR [rax],al
   14000457d:	add    BYTE PTR [rax],al
   14000457f:	add    BYTE PTR [rdx+0x0],dh
   140004582:	add    BYTE PTR gs:[rbx+0x0],ah
   140004586:	outs   dx,DWORD PTR ds:[rsi]
   140004587:	add    BYTE PTR [rsi+0x0],dh
   14000458a:	add    BYTE PTR gs:[rdx+0x0],dh
   14000458e:	add    BYTE PTR [rax],al
   140004590:	jae    0x140004592
   140004592:	je     0x140004594
   140004594:	(bad)  
   140004595:	add    BYTE PTR [rax+rax*1+0x75],dh
   140004599:	add    BYTE PTR [rbx+0x0],dh
   14000459c:	je     0x14000459e
   14000459e:	add    BYTE PTR gs:[rax+0x0],bh
   1400045a2:	je     0x1400045a4
   1400045a4:	add    BYTE PTR [rax],al
   1400045a6:	add    BYTE PTR [rax],al
   1400045a8:	movsxd eax,DWORD PTR [rax]
   1400045aa:	outs   dx,DWORD PTR ds:[rsi]
   1400045ab:	add    BYTE PTR [rbp+0x0],ch
   1400045ae:	jo     0x1400045b0
   1400045b0:	jne    0x1400045b2
   1400045b2:	je     0x1400045b4
   1400045b4:	add    BYTE PTR gs:[rdx+0x0],dh
   1400045b8:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   1400045bc:	ins    DWORD PTR es:[rdi],dx
   1400045bd:	add    BYTE PTR [rbp+0x0],ah
   1400045c0:	push   rsp
   1400045c1:	add    BYTE PTR [rbp+0x0],ah
   1400045c4:	js     0x1400045c6
   1400045c6:	je     0x1400045c8
	...
   1400045d0:	jne    0x1400045d2
   1400045d2:	jae    0x1400045d4
   1400045d4:	add    BYTE PTR gs:[rdx+0x0],dh
   1400045d8:	outs   dx,BYTE PTR ds:[rsi]
   1400045d9:	add    BYTE PTR [rcx+0x0],ah
   1400045dc:	ins    DWORD PTR es:[rdi],dx
   1400045dd:	add    BYTE PTR [rbp+0x0],ah
   1400045e0:	push   rsp
   1400045e1:	add    BYTE PTR [rbp+0x0],ah
   1400045e4:	js     0x1400045e6
   1400045e6:	je     0x1400045e8
	...
   1400045f0:	jo     0x1400045f2
   1400045f2:	(bad)  
   1400045f3:	add    BYTE PTR [rbx+0x0],dh
   1400045f6:	jae    0x1400045f8
   1400045f8:	ja     0x1400045fa
   1400045fa:	outs   dx,DWORD PTR ds:[rsi]
   1400045fb:	add    BYTE PTR [rdx+0x0],dh
   1400045fe:	add    BYTE PTR fs:[rax+rax*1+0x65],dl
   140004603:	add    BYTE PTR [rax+0x0],bh
   140004606:	je     0x140004608
	...
   140004610:	push   rbp
   140004611:	add    BYTE PTR [rbx+0x0],dh
   140004614:	add    BYTE PTR gs:[rdx+0x0],dh
   140004618:	add    BYTE PTR [rdi+0x0],r13b
   14000461c:	ins    DWORD PTR es:[rdi],dx
   14000461d:	add    BYTE PTR [rcx+0x0],ah
   140004620:	imul   eax,DWORD PTR [rax],0x6e
   140004626:	add    BYTE PTR [rax],al
   140004628:	push   rbp
   140004629:	add    BYTE PTR [rbx+0x0],dh
   14000462c:	add    BYTE PTR gs:[rdx+0x0],dh
   140004630:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140004634:	ins    DWORD PTR es:[rdi],dx
   140004635:	add    BYTE PTR [rbp+0x0],ah
	...
   140004640:	push   rbx
   140004641:	add    BYTE PTR [rdi+0x0],ch
   140004644:	data16 add BYTE PTR [rax+rax*1+0x77],dh
   140004649:	add    BYTE PTR [rcx+0x0],ah
   14000464c:	jb     0x14000464e
   14000464e:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
   140004653:	add    BYTE PTR [rcx+0x0],ch
   140004656:	movsxd eax,DWORD PTR [rax]
   140004658:	jb     0x14000465a
   14000465a:	outs   dx,DWORD PTR ds:[rsi]
   14000465b:	add    BYTE PTR [rbx+0x0],dh
   14000465e:	outs   dx,DWORD PTR ds:[rsi]
   14000465f:	add    BYTE PTR [rsi+0x0],ah
   140004662:	je     0x140004664
   140004664:	pop    rsp
   140004665:	add    BYTE PTR [rdi+0x0],dl
   140004668:	imul   eax,DWORD PTR [rax],0x64006e
   14000466e:	outs   dx,DWORD PTR ds:[rsi]
   14000466f:	add    BYTE PTR [rdi+0x0],dh
   140004672:	jae    0x140004674
   140004674:	and    BYTE PTR [rax],al
   140004676:	rex.WRX add BYTE PTR [rax+r8*1+0x5c],r10b
   14000467b:	add    BYTE PTR [rbx+0x0],al
   14000467e:	jne    0x140004680
   140004680:	jb     0x140004682
   140004682:	jb     0x140004684
   140004684:	add    BYTE PTR gs:[rsi+0x0],ch
   140004688:	je     0x14000468a
   14000468a:	push   rsi
   14000468b:	add    BYTE PTR [rbp+0x0],ah
   14000468e:	jb     0x140004690
   140004690:	jae    0x140004692
   140004692:	imul   eax,DWORD PTR [rax],0x6e006f
   140004698:	pop    rsp
   140004699:	add    BYTE PTR [rax+rax*1+0x50],al
   14000469d:	add    BYTE PTR [rcx+0x0],al
   1400046a0:	push   rax
   1400046a1:	add    BYTE PTR [rcx+0x0],cl
   1400046a4:	pop    rsp
   1400046a5:	add    BYTE PTR [rbp+0x0],cl
   1400046a8:	imul   eax,DWORD PTR [rax],0x720067
   1400046ae:	(bad)  
   1400046af:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400046b3:	add    BYTE PTR [rax+rax*1+0x55],ah
   1400046b7:	add    BYTE PTR [rbx+0x0],dh
   1400046ba:	add    BYTE PTR gs:[rdx+0x0],dh
   1400046be:	jae    0x1400046c0
	...
   1400046c8:	sub    eax,0x75007100
   1400046cd:	add    BYTE PTR [rcx+0x0],ch
   1400046d0:	add    BYTE PTR gs:[rax+rax*1+0x0],dh
   1400046d5:	add    BYTE PTR [rax],al
   1400046d7:	add    BYTE PTR [rip+0x6f006400],ch        # 0x1af00aadd
   1400046dd:	add    BYTE PTR [rbp+0x0],ch
   1400046e0:	(bad)  
   1400046e1:	add    BYTE PTR [rcx+0x0],ch
   1400046e4:	outs   dx,BYTE PTR ds:[rsi]
   1400046e5:	add    BYTE PTR [rax],al
   1400046e7:	add    al,al
   1400046e9:	(bad)  
   1400046ea:	add    BYTE PTR [rax+0x1],al
   1400046ed:	add    BYTE PTR [rax],al
   1400046ef:	add    BYTE PTR [rax+0x140002f],dh
   1400046f5:	add    BYTE PTR [rax],al
   1400046f7:	add    BYTE PTR [rax+0x140002f],ah
   1400046fd:	add    BYTE PTR [rax],al
   1400046ff:	add    BYTE PTR [rax+0x140002f],dl
   140004705:	add    BYTE PTR [rax],al
   140004707:	add    BYTE PTR [rax+0x140002f],al
   14000470d:	add    BYTE PTR [rax],al
   14000470f:	add    BYTE PTR [rax],al
   140004711:	adc    al,0x0
   140004713:	rex add DWORD PTR [rax],eax
   140004716:	add    BYTE PTR [rax],al
   140004718:	sbb    BYTE PTR [rax],0x0
   14000471b:	rex add DWORD PTR [rax],eax
   14000471e:	add    BYTE PTR [rax],al
   140004720:	jo     0x140004751
   140004722:	add    BYTE PTR [rax+0x1],al
   140004725:	add    BYTE PTR [rax],al
   140004727:	add    BYTE PTR [rax+0x30],dl
   14000472a:	add    BYTE PTR [rax+0x1],al
   14000472d:	add    BYTE PTR [rax],al
   14000472f:	add    al,ah
   140004731:	adc    al,BYTE PTR [rax]
   140004733:	rex add DWORD PTR [rax],eax
   140004736:	add    BYTE PTR [rax],al
   140004738:	lock adc al,BYTE PTR [rax]
   14000473b:	rex add DWORD PTR [rax],eax
   14000473e:	add    BYTE PTR [rax],al
   140004740:	xor    BYTE PTR [rax],al
   140004743:	rex add DWORD PTR [rax],eax
   140004746:	add    BYTE PTR [rax],al
   140004748:	lock adc eax,DWORD PTR [rax]
   14000474b:	rex add DWORD PTR [rax],eax
   14000474e:	add    BYTE PTR [rax],al
   140004750:	xor    BYTE PTR [rax],dh
   140004752:	add    BYTE PTR [rax+0x1],al
   140004755:	add    BYTE PTR [rax],al
   140004757:	add    BYTE PTR [rax],ah
   140004759:	xor    BYTE PTR [rax],al
   14000475b:	rex add DWORD PTR [rax],eax
   14000475e:	add    BYTE PTR [rax],al
   140004760:	add    BYTE PTR [rbx],dl
   140004762:	add    BYTE PTR [rax+0x1],al
   140004765:	add    BYTE PTR [rax],al
   140004767:	add    BYTE PTR [rax],dl
   140004769:	xor    BYTE PTR [rax],al
   14000476b:	rex add DWORD PTR [rax],eax
   14000476e:	add    BYTE PTR [rax],al
   140004770:	add    BYTE PTR [rax],dh
   140004772:	add    BYTE PTR [rax+0x1],al
   140004775:	add    BYTE PTR [rax],al
   140004777:	add    al,dh
   140004779:	(bad)  
   14000477a:	add    BYTE PTR [rax+0x1],al
   14000477d:	add    BYTE PTR [rax],al
   14000477f:	add    al,ah
   140004781:	(bad)  
   140004782:	add    BYTE PTR [rax+0x1],al
   140004785:	add    BYTE PTR [rax],al
   140004787:	add    al,dl
   140004789:	(bad)  
   14000478a:	add    BYTE PTR [rax+0x1],al
   14000478d:	add    BYTE PTR [rax],al
   14000478f:	add    BYTE PTR [rax+0x2f],ah
   140004792:	add    BYTE PTR [rax+0x1],al
   140004795:	add    BYTE PTR [rax],al
   140004797:	add    BYTE PTR [rax+0x2f],dl
   14000479a:	add    BYTE PTR [rax+0x1],al
   14000479d:	add    BYTE PTR [rax],al
   14000479f:	add    BYTE PTR [rax+0x2f],al
   1400047a2:	add    BYTE PTR [rax+0x1],al
	...
   1400047b1:	add    BYTE PTR [rax],al
   1400047b3:	add    BYTE PTR [rcx+0x559f39],dl
   1400047b9:	add    BYTE PTR [rax],al
   1400047bb:	add    BYTE PTR [rdx],al
   1400047bd:	add    BYTE PTR [rax],al
   1400047bf:	add    BYTE PTR [rip+0xffffffffb0000000],ah        # 0xf00047c5
   1400047c5:	rex.W add BYTE PTR [rax],al
   1400047c8:	mov    al,0x2e
   1400047ca:	add    BYTE PTR [rax],al
   1400047cc:	add    BYTE PTR [rax],al
   1400047ce:	add    BYTE PTR [rax],al
   1400047d0:	xchg   ecx,eax
   1400047d1:	cmp    DWORD PTR [rdi+0x55],ebx
   1400047d7:	add    BYTE PTR [rip+0xffffffffe0000000],cl        # 0x1200047dd
   1400047dd:	add    DWORD PTR [rax],eax
   1400047df:	add    ah,ch
   1400047e1:	rex.W add BYTE PTR [rax],al
   1400047e4:	in     al,dx
   1400047e5:	add    BYTE PTR cs:[rax],al
	...
   140004810:	movabs al,ds:0x0
	...
   140004865:	add    BYTE PTR [rax],al
   140004867:	add    BYTE PTR [rax],cl
   140004869:	(bad)  
   14000486a:	add    BYTE PTR [rax+0x1],al
	...
   14000487d:	add    BYTE PTR [rax],al
   14000487f:	add    al,ah
   140004881:	rex.XB add BYTE PTR [r8+0x1],al
   140004885:	add    BYTE PTR [rax],al
   140004887:	add    al,ch
   140004889:	rex.XB add BYTE PTR [r8+0x1],al
   14000488d:	add    BYTE PTR [rax],al
   14000488f:	add    BYTE PTR [rax],ch
   140004891:	add    BYTE PTR [rax+0x1],r8b
   140004895:	add    BYTE PTR [rax],al
   140004897:	add    BYTE PTR [rdi],bl
	...
   1400048a1:	xor    eax,0x0
	...
   1400048ae:	add    BYTE PTR [rax],al
   1400048b0:	push   rdx
   1400048b1:	push   rbx
   1400048b2:	rex.R push rbx
   1400048b4:	scas   eax,DWORD PTR es:[rdi]
   1400048b5:	sub    al,0x95
   1400048b7:	mov    ecx,0x4f3c2a5c
   1400048bc:	xchg   ecx,eax
   1400048bd:	rex sahf 
   1400048bf:	xchg   ebx,eax
   1400048c0:	movabs ds:0x64000000015397bb,al
   1400048c9:	jo     0x14000492c
   1400048cb:	jo     0x140004936
   1400048cd:	ins    DWORD PTR es:[rdi],dx
   1400048ce:	imul   esp,DWORD PTR [rdi+0x2e],0x626470
	...
   1400048e9:	add    BYTE PTR [rax],al
   1400048eb:	add    BYTE PTR [rdi+0x43],al
   1400048ee:	push   rsp
   1400048ef:	rex.WR add BYTE PTR [rax],r10b
   1400048f2:	add    BYTE PTR [rax],al
   1400048f4:	lock and BYTE PTR [rax],al
   1400048f7:	add    BYTE PTR [rsi],ch
   1400048f9:	je     0x140004960
   1400048fb:	js     0x140004971
   1400048fd:	and    al,0x6d
   1400048ff:	outs   dx,BYTE PTR ds:[rsi]
   140004900:	add    BYTE PTR [rax],al
   140004902:	add    BYTE PTR [rax],al
   140004904:	lock xor BYTE PTR [rax],al
   140004907:	add    BYTE PTR [rdx],dl
   140004909:	add    BYTE PTR [rax],al
   14000490b:	add    BYTE PTR [rsi],ch
   14000490d:	je     0x140004974
   14000490f:	js     0x140004985
   140004911:	and    al,0x6d
   140004913:	outs   dx,BYTE PTR ds:[rsi]
   140004914:	and    al,0x30
   140004916:	xor    BYTE PTR [rax],al
   140004918:	adc    BYTE PTR [rcx],dh
   14000491a:	add    BYTE PTR [rax],al
   14000491c:	jo     0x14000491e
   14000491e:	add    BYTE PTR [rax],al
   140004920:	cs je  0x140004988
   140004923:	js     0x140004999
   140004925:	and    al,0x78
   140004927:	add    BYTE PTR [rax],al
   140004929:	add    BYTE PTR [rax],al
   14000492c:	loopne 0x140004931
   14000492e:	add    BYTE PTR [rax],al
   140004930:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x352461
   140004939:	add    BYTE PTR [rax],al
   14000493b:	add    al,ah
   14000493d:	rex.XB add BYTE PTR [r8],al
   140004940:	adc    BYTE PTR [rax],al
   140004942:	add    BYTE PTR [rax],al
   140004944:	xor    BYTE PTR cs:[rax],dh
   140004947:	movsxd esp,DWORD PTR [rsi+0x67]
   14000494a:	add    BYTE PTR [rax],al
   14000494c:	lock rex.XB add BYTE PTR [r8],al
   140004950:	or     BYTE PTR [rax],al
   140004952:	add    BYTE PTR [rax],al
   140004954:	cs rex.XB push r10
   140004957:	push   rsp
   140004958:	and    al,0x58
   14000495a:	rex.XB
   14000495b:	add    BYTE PTR [r8],al
   14000495e:	add    BYTE PTR [rax],al
   140004960:	clc    
   140004961:	rex.XB add BYTE PTR [r8],al
   140004964:	or     BYTE PTR [rax],al
   140004966:	add    BYTE PTR [rax],al
   140004968:	cs rex.XB push r10
   14000496b:	push   rsp
   14000496c:	and    al,0x58
   14000496e:	rex.XB
   14000496f:	rex.B
   140004970:	add    BYTE PTR [r8],al
   140004973:	add    BYTE PTR [rax],al
   140004975:	add    BYTE PTR [rax],r8b
   140004978:	or     BYTE PTR [rax],al
   14000497a:	add    BYTE PTR [rax],al
   14000497c:	cs rex.XB push r10
   14000497f:	push   rsp
   140004980:	and    al,0x58
   140004982:	rex.XB pop r10
   140004984:	add    BYTE PTR [rax],al
   140004986:	add    BYTE PTR [rax],al
   140004988:	or     BYTE PTR [rax+rax*1+0x0],al
   14000498c:	or     BYTE PTR [rax],al
   14000498e:	add    BYTE PTR [rax],al
   140004990:	cs rex.XB push r10
   140004993:	push   rsp
   140004994:	and    al,0x58
   140004996:	rex.WB
   140004997:	add    BYTE PTR [r8],al
   14000499a:	add    BYTE PTR [rax],al
   14000499c:	adc    BYTE PTR [rax+rax*1+0x0],al
   1400049a0:	or     BYTE PTR [rax],al
   1400049a2:	add    BYTE PTR [rax],al
   1400049a4:	cs rex.XB push r10
   1400049a7:	push   rsp
   1400049a8:	and    al,0x58
   1400049aa:	rex.WB
   1400049ab:	rex.B
   1400049ac:	add    BYTE PTR [r8],al
   1400049af:	add    BYTE PTR [rax],bl
   1400049b1:	add    BYTE PTR [rax],r8b
   1400049b4:	or     BYTE PTR [rax],al
   1400049b6:	add    BYTE PTR [rax],al
   1400049b8:	cs rex.XB push r10
   1400049bb:	push   rsp
   1400049bc:	and    al,0x58
   1400049be:	rex.WB pop r9
   1400049c0:	add    BYTE PTR [rax],al
   1400049c2:	add    BYTE PTR [rax],al
   1400049c4:	and    BYTE PTR [rax+rax*1+0x0],al
   1400049c8:	or     BYTE PTR [rax],al
   1400049ca:	add    BYTE PTR [rax],al
   1400049cc:	cs rex.XB push r10
   1400049cf:	push   rsp
   1400049d0:	and    al,0x58
   1400049d2:	rex.WB pop r10
   1400049d4:	add    BYTE PTR [rax],al
   1400049d6:	add    BYTE PTR [rax],al
   1400049d8:	sub    BYTE PTR [rax+rax*1+0x0],al
   1400049dc:	jl     0x1400049de
   1400049de:	add    BYTE PTR [rax],al
   1400049e0:	imul   sp,WORD PTR cs:[ebx+esi*2+0x24],0x78
   1400049e9:	add    BYTE PTR [rax],al
   1400049eb:	add    BYTE PTR [rax+0x44],dh
   1400049f1:	add    al,0x0
   1400049f3:	add    BYTE PTR [rsi],ch
   1400049f5:	jb     0x140004a5b
   1400049f7:	(bad)  
   1400049f8:	je     0x140004a5b
   1400049fa:	add    BYTE PTR [rax],al
   1400049fc:	mov    al,0x48
   1400049fe:	add    BYTE PTR [rax],al
   140004a00:	sbb    al,0x2
   140004a02:	add    BYTE PTR [rax],al
   140004a04:	cs jb  0x140004a6b
   140004a07:	(bad)  
   140004a08:	je     0x140004a6b
   140004a0a:	and    al,0x7a
   140004a0c:	jp     0x140004a88
   140004a0e:	fs (bad) 
   140004a10:	add    BYTE PTR [eax],al
   140004a13:	add    al,dl
   140004a15:	rex.WX add BYTE PTR [rax],al
   140004a18:	fadd   QWORD PTR [rcx]
   140004a1a:	add    BYTE PTR [rax],al
   140004a1c:	cs js  0x140004a83
   140004a1f:	(bad)  
   140004a20:	je     0x140004a83
   140004a22:	add    BYTE PTR [rax],al
   140004a24:	lods   al,BYTE PTR ds:[rsi]
   140004a25:	rex.WR add BYTE PTR [rax],r8b
   140004a28:	jl     0x140004a2b
   140004a2a:	add    BYTE PTR [rax],al
   140004a2c:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x322461
   140004a35:	add    BYTE PTR [rax],al
   140004a37:	add    BYTE PTR [rax],ch
   140004a39:	rex.WRX add BYTE PTR [rax],r8b
   140004a3c:	adc    al,0x0
   140004a3e:	add    BYTE PTR [rax],al
   140004a40:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   140004a49:	add    BYTE PTR [rax],al
   140004a4b:	add    BYTE PTR [rax+0x4e],al
   140004a4e:	add    BYTE PTR [rax],al
   140004a50:	loopne 0x140004a55
   140004a52:	add    BYTE PTR [rax],al
   140004a54:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x342461
   140004a5d:	add    BYTE PTR [rax],al
   140004a5f:	add    BYTE PTR [rax],ah
   140004a61:	push   rdx
   140004a62:	add    BYTE PTR [rax],al
   140004a64:	stos   BYTE PTR es:[rdi],al
   140004a65:	or     eax,0x692e0000
   140004a6a:	fs (bad) 
   140004a6c:	je     0x140004acf
   140004a6e:	and    al,0x36
   140004a70:	add    BYTE PTR [rax],al
   140004a72:	add    BYTE PTR [rax],al
   140004a74:	add    BYTE PTR [rax+0x0],ah
   140004a77:	add    BYTE PTR [rax],ah
   140004a79:	add    BYTE PTR [rax],al
   140004a7b:	add    BYTE PTR [rsi],ch
   140004a7d:	fs (bad) 
   140004a7f:	je     0x140004ae2
   140004a81:	add    BYTE PTR [rax],al
   140004a83:	add    BYTE PTR [rax],ah
   140004a85:	(bad)  
   140004a86:	add    BYTE PTR [rax],al
   140004a88:	call   0x16e004a92
   140004a8d:	(bad)  
   140004a8f:	jae    0x140004a91
   140004a91:	add    BYTE PTR [rax],al
   140004a93:	add    BYTE PTR [rax],al
   140004a95:	jo     0x140004a97
   140004a97:	add    BYTE PTR [rcx+rax*1+0x702e0000],ah
   140004a9e:	fs (bad) 
   140004aa0:	je     0x140004b03
   140004aa2:	add    BYTE PTR [rax],al
   140004aa4:	add    BYTE PTR [rax+0x3880000],al
   140004aaa:	add    BYTE PTR [rax],al
   140004aac:	cs jb  0x140004b22
   140004aaf:	jb     0x140004b14
   140004ab1:	and    al,0x30
   140004ab3:	xor    DWORD PTR [rax],eax
   140004ab5:	add    BYTE PTR [rax],al
   140004ab7:	add    BYTE PTR [rax-0x57ffff7d],dl
   140004abd:	fadd   DWORD PTR [rax]
   140004abf:	add    BYTE PTR [rsi],ch
   140004ac1:	jb     0x140004b36
   140004ac3:	jb     0x140004b28
   140004ac5:	and    al,0x30
   140004ac7:	xor    al,BYTE PTR [rax]
   140004ac9:	add    BYTE PTR [rax],al
   140004acb:	add    BYTE PTR [rax],al
   140004acd:	add    BYTE PTR [rax],al
   140004acf:	add    BYTE PTR [rcx],dl
   140004ad1:	sbb    BYTE PTR [rdx],cl
   140004ad3:	add    BYTE PTR [rax],bl
   140004ad5:	fs adc al,0x0
   140004ad8:	sbb    BYTE PTR [rdx+rdx*1],dh
   140004adb:	add    BYTE PTR [rax],bl
   140004add:	mov    dl,0x14
   140004adf:	lock adc ah,al
   140004ae2:	adc    al,dl
   140004ae4:	(bad)  
   140004ae5:	ror    BYTE PTR [rax+rsi*2],0x6
   140004ae9:	(bad)  
   140004aea:	add    BYTE PTR [rax],al
   140004aec:	add    DWORD PTR [rax],eax
   140004aee:	add    BYTE PTR [rax],al
   140004af0:	rex.XB adc BYTE PTR [r8],al
   140004af3:	add    BYTE PTR [rdx+0x16000011],bl
   140004af9:	xor    DWORD PTR [rax],eax
   140004afb:	add    BYTE PTR [rax],al
   140004afd:	add    BYTE PTR [rax],al
   140004aff:	add    BYTE PTR [rcx],al
   140004b01:	(bad)  
   140004b02:	add    al,BYTE PTR [rax]
   140004b04:	(bad)  
   140004b05:	xor    al,BYTE PTR [rdx]
   140004b07:	push   rax
   140004b08:	add    DWORD PTR [rbx],edx
   140004b0a:	add    al,0x0
   140004b0c:	adc    esi,DWORD PTR [rsi+rax*1]
   140004b0f:	add    BYTE PTR [rbx],dl
   140004b11:	xor    cl,BYTE PTR [rdi]
   140004b13:	jo     0x140004b16
   140004b15:	or     al,BYTE PTR [rax+rax*1]
   140004b18:	or     dh,BYTE PTR [rsi+rax*1]
   140004b1b:	add    BYTE PTR [rdx],cl
   140004b1d:	xor    al,BYTE PTR [rsi]
   140004b1f:	jo     0x140004b3a
   140004b21:	xor    cl,BYTE PTR [rbx]
   140004b23:	add    BYTE PTR [rcx],ah
   140004b25:	fs push rbp
   140004b27:	add    BYTE PTR [rcx],ah
   140004b29:	xor    al,0x53
   140004b2b:	add    BYTE PTR [rcx],ah
   140004b2d:	add    DWORD PTR [rax+rax*1+0x12],ecx
   140004b31:	lock adc al,ah
   140004b34:	(bad)  
   140004b35:	ror    BYTE PTR [rax+rsi*2],0xb
   140004b39:	push   rax
   140004b3a:	add    BYTE PTR [rax],al
   140004b3c:	pop    rsp
   140004b3d:	xor    BYTE PTR [rax],al
   140004b3f:	add    BYTE PTR [rax+0x2],dl
   140004b42:	add    BYTE PTR [rax],al
   140004b44:	add    DWORD PTR [rdi],ecx
   140004b46:	(bad)  
   140004b47:	add    BYTE PTR [rdi],cl
   140004b49:	fs (bad) 
   140004b4b:	add    BYTE PTR [rdi],cl
   140004b4d:	xor    al,0x6
   140004b4f:	add    BYTE PTR [rdi],cl
   140004b51:	xor    cl,BYTE PTR [rbx]
   140004b53:	jo     0x140004b56
   140004b55:	sbb    cl,BYTE PTR [rcx]
   140004b57:	add    BYTE PTR [rdx],bl
   140004b59:	fs (bad) 
   140004b5b:	add    BYTE PTR [rdx],bl
   140004b5d:	xor    al,0x24
   140004b5f:	add    BYTE PTR [rdx],bl
   140004b61:	add    DWORD PTR [rax],esp
   140004b63:	add    BYTE PTR [rsi],cl
   140004b65:	loopne 0x140004b73
   140004b67:	jo     0x140004b74
   140004b69:	push   rax
   140004b6a:	add    BYTE PTR [rax],al
   140004b6c:	add    DWORD PTR [rbx],ebx
   140004b6e:	add    eax,0x1d341b00
   140004b73:	add    BYTE PTR [rbx],bl
   140004b75:	add    DWORD PTR [rdx],ebx
   140004b77:	add    BYTE PTR [rax],dl
   140004b79:	push   rax
   140004b7a:	add    BYTE PTR [rax],al
   140004b7c:	sbb    DWORD PTR [rcx+rcx*1],ebp
   140004b7f:	add    BYTE PTR [rbx],bl
   140004b81:	xor    al,0x56
   140004b83:	add    BYTE PTR [rbx],bl
   140004b85:	add    DWORD PTR [rsi+0x0],ecx
   140004b88:	or     al,0xf0
   140004b8a:	or     ah,al
   140004b8c:	or     BYTE PTR [rax+0x7],dh
   140004b8f:	(bad)  
   140004b90:	(bad)  
   140004b91:	push   rax
   140004b92:	add    BYTE PTR [rax],al
   140004b94:	pop    rsp
   140004b95:	xor    BYTE PTR [rax],al
   140004b97:	add    BYTE PTR [rax+0x2],ah
   140004b9a:	add    BYTE PTR [rax],al
   140004b9c:	add    DWORD PTR [rsi],eax
   140004b9e:	add    al,BYTE PTR [rax]
   140004ba0:	(bad)  
   140004ba1:	push   rdx
   140004ba2:	add    dh,BYTE PTR [rax]
   140004ba4:	add    DWORD PTR [rsi],eax
   140004ba6:	add    al,BYTE PTR [rax]
   140004ba8:	(bad)  
   140004ba9:	xor    al,BYTE PTR [rdx]
   140004bab:	xor    BYTE PTR [rcx],al
   140004bad:	or     eax,0x340d0006
   140004bb2:	or     al,0x0
   140004bb4:	or     eax,0x7e00952
   140004bb9:	jo     0x140004bc1
   140004bbb:	(bad)  
   140004bbc:	sbb    DWORD PTR [rbx],esi
   140004bbe:	or     eax,DWORD PTR [rax]
   140004bc0:	and    dh,BYTE PTR [rdx+rbx*2+0x0]
   140004bc4:	and    dh,BYTE PTR [rcx+rbx*2]
   140004bc7:	add    BYTE PTR [rdx],ah
   140004bc9:	add    DWORD PTR [rdx+0x0],edx
   140004bcc:	adc    esi,eax
   140004bce:	adc    eax,esp
   140004bd0:	(bad)  
   140004bd2:	or     eax,0x500bc0
   140004bd7:	add    BYTE PTR [rax+rsi*1+0x0],bl
   140004bdb:	add    BYTE PTR [rax+0x1000002],al
   140004be1:	adc    al,0x8
   140004be3:	add    BYTE PTR [rsp+rdx*2],dl
   140004be6:	or     eax,DWORD PTR [rax]
   140004be8:	adc    al,0x34
   140004bea:	or     al,BYTE PTR [rax]
   140004bec:	adc    al,0x32
   140004bee:	adc    al,dh
   140004bf0:	(bad)  
   140004bf1:	loopne 0x140004bff
   140004bf3:	(bad)  
   140004bf4:	add    DWORD PTR [rdi],ecx
   140004bf6:	(bad)  
   140004bf7:	add    BYTE PTR [rdi],cl
   140004bf9:	fs or  al,0x0
   140004bfc:	sysenter 
   140004bfe:	or     eax,DWORD PTR [rax]
   140004c00:	(bad)  
   140004c02:	or     esi,DWORD PTR [rax+0x1]
   140004c05:	add    al,0x1
   140004c07:	add    BYTE PTR [rdx+riz*2],al
   140004c0a:	add    BYTE PTR [rax],al
   140004c0c:	or     DWORD PTR [rax],ebx
   140004c0e:	or     DWORD PTR [rax],eax
   140004c10:	sbb    BYTE PTR [rdx+rbx*1+0x0],dh
   140004c14:	sbb    BYTE PTR [rcx+rbx*1+0x0],ah
   140004c18:	sbb    BYTE PTR [rax+rbx*1],dh
   140004c1b:	add    BYTE PTR [rax],bl
   140004c1d:	add    DWORD PTR [rsi],edx
   140004c1f:	add    BYTE PTR [rcx],dl
   140004c21:	lock add BYTE PTR [rax],al
   140004c24:	(bad)  
   140004c25:	(bad)  
   140004c26:	add    BYTE PTR [rax],al
   140004c28:	add    DWORD PTR [rax],eax
   140004c2a:	add    BYTE PTR [rax],al
   140004c2c:	loopne 0x140004c55
   140004c2e:	add    BYTE PTR [rax],al
   140004c30:	(bad)  
   140004c31:	sub    DWORD PTR [rax],eax
   140004c33:	add    BYTE PTR [rsi],dh
   140004c35:	xor    DWORD PTR [rax],eax
   140004c37:	add    bh,al
   140004c39:	sub    DWORD PTR [rax],eax
   140004c3b:	add    BYTE PTR [rax],al
   140004c3d:	add    BYTE PTR [rax],al
   140004c3f:	add    BYTE PTR [rcx],al
   140004c41:	add    BYTE PTR [rax],al
   140004c43:	add    BYTE PTR [rcx],al
   140004c45:	or     al,0x2
   140004c47:	add    BYTE PTR [rcx+rax*1],cl
   140004c4a:	adc    DWORD PTR [rax],eax
   140004c4c:	add    DWORD PTR [rcx+rax*1],eax
   140004c4f:	add    BYTE PTR [rdx+rax*2],al
   140004c52:	add    BYTE PTR [rax],al
   140004c54:	or     DWORD PTR [rcx+rax*1],eax
   140004c57:	add    BYTE PTR [rdx+riz*1],al
   140004c5a:	add    BYTE PTR [rax],al
   140004c5c:	(bad)  
   140004c5d:	(bad)  
   140004c5e:	add    BYTE PTR [rax],al
   140004c60:	add    DWORD PTR [rax],eax
   140004c62:	add    BYTE PTR [rax],al
   140004c64:	pushf  
   140004c65:	sub    al,0x0
   140004c67:	add    dl,dl
   140004c69:	sub    al,0x0
   140004c6b:	add    BYTE PTR [rcx],al
   140004c6d:	add    BYTE PTR [rax],al
   140004c6f:	add    dl,dl
   140004c71:	sub    al,0x0
   140004c73:	add    BYTE PTR [rcx],cl
   140004c75:	or     al,BYTE PTR [rax+rax*1]
   140004c78:	or     dh,BYTE PTR [rsi+rax*1]
   140004c7b:	add    BYTE PTR [rdx],cl
   140004c7d:	xor    al,BYTE PTR [rsi]
   140004c7f:	jo     0x140004c87
   140004c81:	(bad)  
   140004c82:	add    BYTE PTR [rax],al
   140004c84:	add    DWORD PTR [rax],eax
   140004c86:	add    BYTE PTR [rax],al
   140004c88:	popf   
   140004c89:	sub    eax,0x2dd00000
   140004c8e:	add    BYTE PTR [rax],al
   140004c90:	(bad)  
   140004c91:	xor    DWORD PTR [rax],eax
   140004c93:	add    al,dl
   140004c95:	sub    eax,0xd010000
   140004c9a:	add    al,0x0
   140004c9c:	or     eax,0xd000934
   140004ca1:	xor    al,BYTE PTR [rsi]
   140004ca3:	push   rax
   140004ca4:	add    BYTE PTR [rax],al
   140004ca6:	add    BYTE PTR [rax],al
   140004ca8:	add    DWORD PTR [rax],eax
   140004caa:	add    BYTE PTR [rax],al
   140004cac:	rex
   140004cad:	rex.WRX add BYTE PTR [rax],r8b
	...
   140004cb8:	push   rsp
   140004cb9:	push   rbx
   140004cba:	add    BYTE PTR [rax],al
   140004cbc:	add    BYTE PTR [rax+0x0],al
   140004cbf:	add    BYTE PTR [rax],dl
   140004cc1:	push   rax
	...
   140004cca:	add    BYTE PTR [rax],al
   140004ccc:	in     al,dx
   140004ccd:	push   rbx
   140004cce:	add    BYTE PTR [rax],al
   140004cd0:	rol    BYTE PTR [rcx+0x0],1
   140004cd3:	add    BYTE PTR [rax+0x50],ch
	...
   140004cde:	add    BYTE PTR [rax],al
   140004ce0:	xor    dl,BYTE PTR [rax+rax*1+0x0]
   140004ce4:	sub    BYTE PTR [rdx+0x0],al
   140004ce7:	add    BYTE PTR [rax+0x51],cl
	...
   140004cf2:	add    BYTE PTR [rax],al
   140004cf4:	and    al,0x55
   140004cf6:	add    BYTE PTR [rax],al
   140004cf8:	or     BYTE PTR [rbx+0x0],al
   140004cfb:	add    BYTE PTR [rax+0x50],dl
   140004d01:	add    BYTE PTR [rax],al
   140004d03:	add    BYTE PTR [rax],al
   140004d05:	add    BYTE PTR [rax],al
   140004d07:	add    al,cl
   140004d09:	push   rsi
   140004d0a:	add    BYTE PTR [rax],al
   140004d0c:	push   rax
   140004d0d:	rex.X add BYTE PTR [rax],al
   140004d10:	adc    BYTE PTR [rdx+0x0],dl
	...
   140004d1b:	add    al,ch
   140004d1d:	push   rsi
   140004d1e:	add    BYTE PTR [rax],al
   140004d20:	rol    BYTE PTR [rbx+0x0],1
   140004d23:	add    al,dh
   140004d25:	push   rcx
	...
   140004d2e:	add    BYTE PTR [rax],al
   140004d30:	hlt    
   140004d31:	push   rsi
   140004d32:	add    BYTE PTR [rax],al
   140004d34:	mov    al,0x43
   140004d36:	add    BYTE PTR [rax],al
   140004d38:	loopne 0x140004d88
	...
   140004d42:	add    BYTE PTR [rax],al
   140004d44:	add    dl,BYTE PTR [rdi+0x0]
   140004d47:	add    BYTE PTR [rax+0x20000040],ah
   140004d4d:	push   rcx
	...
   140004d56:	add    BYTE PTR [rax],al
   140004d58:	(bad)  
   140004d59:	push   rdi
   140004d5a:	add    BYTE PTR [rax],al
   140004d5c:	loopne 0x140004da0
   140004d5e:	add    BYTE PTR [rax],al
   140004d60:	enter  0x50,0x0
	...
   140004d6c:	xor    BYTE PTR [rdi+0x0],dl
   140004d6f:	add    BYTE PTR [rax+0x42],cl
   140004d75:	push   rcx
	...
   140004d7e:	add    BYTE PTR [rax],al
   140004d80:	pop    rdx
   140004d81:	push   rdi
   140004d82:	add    BYTE PTR [rax],al
   140004d84:	rol    BYTE PTR [rdx+0x0],0x0
   140004d88:	movabs al,ds:0x50
   140004d91:	add    BYTE PTR [rax],al
   140004d93:	add    BYTE PTR [rax+0x60000057],al
   140004d99:	rex.X add BYTE PTR [rax],al
   140004d9c:	mov    eax,0x50
   140004da1:	add    BYTE PTR [rax],al
   140004da3:	add    BYTE PTR [rax],al
   140004da5:	add    BYTE PTR [rax],al
   140004da7:	add    BYTE PTR [rdx+0x78000057],ch
   140004dad:	rex.X add BYTE PTR [rax],al
   140004db0:	lock push rax
	...
   140004dba:	add    BYTE PTR [rax],al
   140004dbc:	(bad)  
   140004dbd:	push   rdi
   140004dbe:	add    BYTE PTR [rax],al
   140004dc0:	mov    al,0x42
   140004dc2:	add    BYTE PTR [rax],al
   140004dc4:	xor    BYTE PTR [rcx+0x0],dl
	...
   140004dcf:	add    al,bh
   140004dd1:	push   rdi
   140004dd2:	add    BYTE PTR [rax],al
   140004dd4:	lock rex.X add BYTE PTR [rax],al
   140004dd8:	enter  0x4e,0x0
	...
   140004de4:	cs pop rax
   140004de6:	add    BYTE PTR [rax],al
   140004de8:	mov    BYTE PTR [rax+0x0],al
   140004deb:	add    BYTE PTR [rax],al
   140004ded:	push   rdx
	...
   140004df6:	add    BYTE PTR [rax],al
   140004df8:	rex.WR pop rax
   140004dfa:	add    BYTE PTR [rax],al
   140004dfc:	rol    BYTE PTR [rbx+0x0],0x0
   140004e00:	pop    rax
   140004e01:	push   rax
	...
   140004e0a:	add    BYTE PTR [rax],al
   140004e0c:	ins    BYTE PTR es:[rdi],dx
   140004e0d:	pop    rax
   140004e0e:	add    BYTE PTR [rax],al
   140004e10:	sbb    BYTE PTR [rdx+0x0],al
   140004e13:	add    al,dh
   140004e15:	rex.WRX add BYTE PTR [rax],r8b
	...
   140004e20:	mov    dh,0x5f
   140004e22:	add    BYTE PTR [rax],al
   140004e24:	mov    al,0x40
	...
   140004e3e:	add    BYTE PTR [rax],al
   140004e40:	and    BYTE PTR [rdx+0x0],dl
   140004e43:	add    BYTE PTR [rax],al
   140004e45:	add    BYTE PTR [rax],al
   140004e47:	add    BYTE PTR [rdx+rdx*2],bh
   140004e4a:	add    BYTE PTR [rax],al
   140004e4c:	add    BYTE PTR [rax],al
   140004e4e:	add    BYTE PTR [rax],al
   140004e50:	push   rax
   140004e51:	push   rdx
   140004e52:	add    BYTE PTR [rax],al
   140004e54:	add    BYTE PTR [rax],al
   140004e56:	add    BYTE PTR [rax],al
   140004e58:	push   dx
   140004e5a:	add    BYTE PTR [rax],al
   140004e5c:	add    BYTE PTR [rax],al
   140004e5e:	add    BYTE PTR [rax],al
   140004e60:	js     0x140004eb4
   140004e62:	add    BYTE PTR [rax],al
   140004e64:	add    BYTE PTR [rax],al
   140004e66:	add    BYTE PTR [rax],al
   140004e68:	xchg   edx,eax
   140004e69:	push   rdx
   140004e6a:	add    BYTE PTR [rax],al
   140004e6c:	add    BYTE PTR [rax],al
   140004e6e:	add    BYTE PTR [rax],al
   140004e70:	test   al,0x52
   140004e72:	add    BYTE PTR [rax],al
   140004e74:	add    BYTE PTR [rax],al
   140004e76:	add    BYTE PTR [rax],al
   140004e78:	mov    dl,0x52
   140004e7a:	add    BYTE PTR [rax],al
   140004e7c:	add    BYTE PTR [rax],al
   140004e7e:	add    BYTE PTR [rax],al
   140004e80:	int3   
   140004e81:	push   rdx
   140004e82:	add    BYTE PTR [rax],al
   140004e84:	add    BYTE PTR [rax],al
   140004e86:	add    BYTE PTR [rax],al
   140004e88:	ficom  WORD PTR [rdx+0x0]
   140004e8b:	add    BYTE PTR [rax],al
   140004e8d:	add    BYTE PTR [rax],al
   140004e8f:	add    dh,ch
   140004e91:	push   rdx
   140004e92:	add    BYTE PTR [rax],al
   140004e94:	add    BYTE PTR [rax],al
   140004e96:	add    BYTE PTR [rax],al
   140004e98:	cld    
   140004e99:	push   rdx
   140004e9a:	add    BYTE PTR [rax],al
   140004e9c:	add    BYTE PTR [rax],al
   140004e9e:	add    BYTE PTR [rax],al
   140004ea0:	or     al,0x53
   140004ea2:	add    BYTE PTR [rax],al
   140004ea4:	add    BYTE PTR [rax],al
   140004ea6:	add    BYTE PTR [rax],al
   140004ea8:	sbb    al,0x53
   140004eaa:	add    BYTE PTR [rax],al
   140004eac:	add    BYTE PTR [rax],al
   140004eae:	add    BYTE PTR [rax],al
   140004eb0:	sub    al,0x53
   140004eb2:	add    BYTE PTR [rax],al
   140004eb4:	add    BYTE PTR [rax],al
   140004eb6:	add    BYTE PTR [rax],al
   140004eb8:	rex.RX push rbx
	...
   140004ec6:	add    BYTE PTR [rax],al
   140004ec8:	pop    rcx
   140004ec9:	add    DWORD PTR [rax],eax
   140004ecb:	add    BYTE PTR [rax],al
   140004ecd:	add    BYTE PTR [rax],al
   140004ecf:	sbb    BYTE PTR [rax+rbx*2],0x0
	...
   140004edf:	add    BYTE PTR [rsi+0x55],bh
	...
   140004eee:	add    BYTE PTR [rax],al
   140004ef0:	scas   al,BYTE PTR es:[rdi]
   140004ef1:	pop    rax
   140004ef2:	add    BYTE PTR [rax],al
   140004ef4:	add    BYTE PTR [rax],al
   140004ef6:	add    BYTE PTR [rax],al
   140004ef8:	repnz pop rax
   140004efa:	add    BYTE PTR [rax],al
   140004efc:	add    BYTE PTR [rax],al
   140004efe:	add    BYTE PTR [rax],al
   140004f00:	(bad)  
   140004f01:	pop    rcx
   140004f02:	add    BYTE PTR [rax],al
   140004f04:	add    BYTE PTR [rax],al
   140004f06:	add    BYTE PTR [rax],al
   140004f08:	xchg   BYTE PTR [rax+0x0],bl
   140004f0b:	add    BYTE PTR [rax],al
   140004f0d:	add    BYTE PTR [rax],al
   140004f0f:	add    BYTE PTR [rdx+0x59],ah
   140004f15:	add    BYTE PTR [rax],al
   140004f17:	add    ah,bl
   140004f19:	pop    rcx
   140004f1a:	add    BYTE PTR [rax],al
   140004f1c:	add    BYTE PTR [rax],al
   140004f1e:	add    BYTE PTR [rax],al
   140004f20:	es pop rdx
   140004f22:	add    BYTE PTR [rax],al
   140004f24:	add    BYTE PTR [rax],al
   140004f26:	add    BYTE PTR [rax],al
   140004f28:	js     0x140004f82
   140004f2a:	add    BYTE PTR [rax],al
   140004f2c:	add    BYTE PTR [rax],al
   140004f2e:	add    BYTE PTR [rax],al
   140004f30:	pop    dx
   140004f32:	add    BYTE PTR [rax],al
   140004f34:	add    BYTE PTR [rax],al
   140004f36:	add    BYTE PTR [rax],al
   140004f38:	mov    WORD PTR [rdi+0x0],ds
   140004f3b:	add    BYTE PTR [rax],al
   140004f3d:	add    BYTE PTR [rax],al
   140004f3f:	add    BYTE PTR [rax+0x5f],ah
   140004f42:	add    BYTE PTR [rax],al
   140004f44:	add    BYTE PTR [rax],al
   140004f46:	add    BYTE PTR [rax],al
   140004f48:	cs pop rdi
   140004f4a:	add    BYTE PTR [rax],al
   140004f4c:	add    BYTE PTR [rax],al
   140004f4e:	add    BYTE PTR [rax],al
   140004f50:	add    al,0x5f
   140004f52:	add    BYTE PTR [rax],al
   140004f54:	add    BYTE PTR [rax],al
   140004f56:	add    BYTE PTR [rax],al
   140004f58:	fcomp  QWORD PTR [rsi+0x0]
   140004f5b:	add    BYTE PTR [rax],al
   140004f5d:	add    BYTE PTR [rax],al
   140004f5f:	add    BYTE PTR [rdx+0x5e],ch
   140004f62:	add    BYTE PTR [rax],al
   140004f64:	add    BYTE PTR [rax],al
   140004f66:	add    BYTE PTR [rax],al
   140004f68:	and    al,0x5e
   140004f6a:	add    BYTE PTR [rax],al
   140004f6c:	add    BYTE PTR [rax],al
   140004f6e:	add    BYTE PTR [rax],al
   140004f70:	neg    BYTE PTR [rbp+0x0]
   140004f73:	add    BYTE PTR [rax],al
   140004f75:	add    BYTE PTR [rax],al
   140004f77:	add    dh,cl
   140004f79:	pop    rbp
   140004f7a:	add    BYTE PTR [rax],al
   140004f7c:	add    BYTE PTR [rax],al
   140004f7e:	add    BYTE PTR [rax],al
   140004f80:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140004f81:	pop    rbp
   140004f82:	add    BYTE PTR [rax],al
   140004f84:	add    BYTE PTR [rax],al
   140004f86:	add    BYTE PTR [rax],al
   140004f88:	js     0x140004fe7
   140004f8a:	add    BYTE PTR [rax],al
   140004f8c:	add    BYTE PTR [rax],al
   140004f8e:	add    BYTE PTR [rax],al
   140004f90:	rex.WRX pop rbp
   140004f92:	add    BYTE PTR [rax],al
   140004f94:	add    BYTE PTR [rax],al
   140004f96:	add    BYTE PTR [rax],al
   140004f98:	(bad)  
   140004f99:	pop    rbp
   140004f9a:	add    BYTE PTR [rax],al
   140004f9c:	add    BYTE PTR [rax],al
   140004f9e:	add    BYTE PTR [rax],al
   140004fa0:	ficomp DWORD PTR [rax+rax*1+0x0]
   140004fa4:	add    BYTE PTR [rax],al
   140004fa6:	add    BYTE PTR [rax],al
   140004fa8:	pushf  
   140004fa9:	pop    rsp
   140004faa:	add    BYTE PTR [rax],al
   140004fac:	add    BYTE PTR [rax],al
   140004fae:	add    BYTE PTR [rax],al
   140004fb0:	pop    rsi
   140004fb1:	pop    rsp
   140004fb2:	add    BYTE PTR [rax],al
   140004fb4:	add    BYTE PTR [rax],al
   140004fb6:	add    BYTE PTR [rax],al
   140004fb8:	hlt    
   140004fb9:	pop    rbx
   140004fba:	add    BYTE PTR [rax],al
   140004fbc:	add    BYTE PTR [rax],al
   140004fbe:	add    BYTE PTR [rax],al
   140004fc0:	mov    WORD PTR [rbx+0x0],ds
   140004fc3:	add    BYTE PTR [rax],al
   140004fc5:	add    BYTE PTR [rax],al
   140004fc7:	add    BYTE PTR [rsi],bh
   140004fc9:	pop    rbx
   140004fca:	add    BYTE PTR [rax],al
   140004fcc:	add    BYTE PTR [rax],al
   140004fce:	add    BYTE PTR [rax],al
   140004fd0:	jbe    0x14000502c
   140004fd2:	add    BYTE PTR [rax],al
   140004fd4:	add    BYTE PTR [rax],al
   140004fd6:	add    BYTE PTR [rax],al
   140004fd8:	xor    al,0x5b
   140004fda:	add    BYTE PTR [rax],al
   140004fdc:	add    BYTE PTR [rax],al
   140004fde:	add    BYTE PTR [rax],al
   140004fe0:	or     al,0x5b
   140004fe2:	add    BYTE PTR [rax],al
   140004fe4:	add    BYTE PTR [rax],al
   140004fe6:	add    BYTE PTR [rax],al
   140004fe8:	rex.RX pop rdx
   140004fea:	add    BYTE PTR [rax],al
   140004fec:	add    BYTE PTR [rax],al
   140004fee:	add    BYTE PTR [rax],al
   140004ff0:	cli    
   140004ff1:	pop    rdx
   140004ff2:	add    BYTE PTR [rax],al
   140004ff4:	add    BYTE PTR [rax],al
   140004ff6:	add    BYTE PTR [rax],al
   140004ff8:	mov    dl,0x5a
   140004ffa:	add    BYTE PTR [rax],al
   140004ffc:	add    BYTE PTR [rax],al
   140004ffe:	add    BYTE PTR [rax],al
   140005000:	out    0x5a,al
	...
   14000500e:	add    BYTE PTR [rax],al
   140005010:	rcl    BYTE PTR [rbx+0x0],cl
   140005013:	add    BYTE PTR [rax],al
   140005015:	add    BYTE PTR [rax],al
   140005017:	add    BYTE PTR [rdx+0x53],ah
   14000501a:	add    BYTE PTR [rax],al
   14000501c:	add    BYTE PTR [rax],al
   14000501e:	add    BYTE PTR [rax],al
   140005020:	je     0x140005075
   140005022:	add    BYTE PTR [rax],al
   140005024:	add    BYTE PTR [rax],al
   140005026:	add    BYTE PTR [rax],al
   140005028:	mov    BYTE PTR [rbx+0x0],dl
   14000502b:	add    BYTE PTR [rax],al
   14000502d:	add    BYTE PTR [rax],al
   14000502f:	add    BYTE PTR [rbx+rdx*2+0x0],bl
   140005036:	add    BYTE PTR [rax],al
   140005038:	mov    ah,0x53
   14000503a:	add    BYTE PTR [rax],al
   14000503c:	add    BYTE PTR [rax],al
   14000503e:	add    BYTE PTR [rax],al
   140005040:	(bad)  
   140005041:	push   rbx
   140005042:	add    BYTE PTR [rax],al
   140005044:	add    BYTE PTR [rax],al
   140005046:	add    BYTE PTR [rax],al
   140005048:	loopne 0x14000509d
	...
   140005056:	add    BYTE PTR [rax],al
   140005058:	push   rsi
   140005059:	pop    rax
	...
   140005066:	add    BYTE PTR [rax],al
   140005068:	or     BYTE PTR [rax+rax*1+0x0],dl
   14000506c:	add    BYTE PTR [rax],al
   14000506e:	add    BYTE PTR [rax],al
   140005070:	cli    
   140005071:	push   rbx
   140005072:	add    BYTE PTR [rax],al
   140005074:	add    BYTE PTR [rax],al
   140005076:	add    BYTE PTR [rax],al
   140005078:	(bad)  
   140005079:	push   rsp
   14000507a:	add    BYTE PTR [rax],al
   14000507c:	add    BYTE PTR [rax],al
   14000507e:	add    BYTE PTR [rax],al
   140005080:	and    dl,BYTE PTR [rax+rax*1+0x0]
	...
   140005090:	rex.R push rbp
	...
   14000509e:	add    BYTE PTR [rax],al
   1400050a0:	adc    dl,BYTE PTR [rsi+0x0]
   1400050a3:	add    BYTE PTR [rax],al
   1400050a5:	add    BYTE PTR [rax],al
   1400050a7:	add    dh,dh
   1400050a9:	push   rbp
	...
   1400050b6:	add    BYTE PTR [rax],al
   1400050b8:	rex.R push rsi
	...
   1400050c6:	add    BYTE PTR [rax],al
   1400050c8:	jb     0x140005120
   1400050ca:	add    BYTE PTR [rax],al
   1400050cc:	add    BYTE PTR [rax],al
   1400050ce:	add    BYTE PTR [rax],al
   1400050d0:	mov    BYTE PTR [rsi+0x0],dl
   1400050d3:	add    BYTE PTR [rax],al
   1400050d5:	add    BYTE PTR [rax],al
   1400050d7:	add    BYTE PTR [rdx+0x55],ah
   1400050dd:	add    BYTE PTR [rax],al
   1400050df:	add    BYTE PTR [rax],dh
   1400050e1:	push   rsi
	...
   1400050ee:	add    BYTE PTR [rax],al
   1400050f0:	pop    rax
   1400050f1:	push   rsi
	...
   1400050fe:	add    BYTE PTR [rax],al
   140005100:	loop   0x140005157
   140005102:	add    BYTE PTR [rax],al
   140005104:	add    BYTE PTR [rax],al
   140005106:	add    BYTE PTR [rax],al
   140005108:	enter  0x55,0x0
   14000510c:	add    BYTE PTR [rax],al
   14000510e:	add    BYTE PTR [rax],al
   140005110:	mov    ah,0x55
	...
   14000511e:	add    BYTE PTR [rax],al
   140005120:	(bad)  
   140005121:	push   rbp
	...
   14000512e:	add    BYTE PTR [rax],al
   140005130:	sahf   
   140005131:	push   rsi
   140005132:	add    BYTE PTR [rax],al
   140005134:	add    BYTE PTR [rax],al
   140005136:	add    BYTE PTR [rax],al
   140005138:	mov    eax,0x56
	...
   140005145:	add    BYTE PTR [rax],al
   140005147:	add    BYTE PTR [rsi],bh
   140005149:	push   rsp
   14000514a:	add    BYTE PTR [rax],al
   14000514c:	add    BYTE PTR [rax],al
   14000514e:	add    BYTE PTR [rax],al
   140005150:	push   rax
   140005151:	push   rsp
   140005152:	add    BYTE PTR [rax],al
   140005154:	add    BYTE PTR [rax],al
   140005156:	add    BYTE PTR [rax],al
   140005158:	rex.W push rsp
   14000515a:	add    BYTE PTR [rax],al
   14000515c:	add    BYTE PTR [rax],al
   14000515e:	add    BYTE PTR [rax],al
   140005160:	pop    rdx
   140005161:	push   rsp
   140005162:	add    BYTE PTR [rax],al
   140005164:	add    BYTE PTR [rax],al
   140005166:	add    BYTE PTR [rax],al
   140005168:	push   sp
   14000516a:	add    BYTE PTR [rax],al
   14000516c:	add    BYTE PTR [rax],al
   14000516e:	add    BYTE PTR [rax],al
   140005170:	rcr    BYTE PTR [rdi+0x0],0x0
   140005174:	add    BYTE PTR [rax],al
   140005176:	add    BYTE PTR [rax],al
   140005178:	xor    BYTE PTR [rbp+0x0],dl
   14000517b:	add    BYTE PTR [rax],al
   14000517d:	add    BYTE PTR [rax],al
   14000517f:	add    BYTE PTR [rax],bl
   140005181:	push   rbp
   140005182:	add    BYTE PTR [rax],al
   140005184:	add    BYTE PTR [rax],al
   140005186:	add    BYTE PTR [rax],al
   140005188:	(bad)  
   140005189:	push   rbp
   14000518a:	add    BYTE PTR [rax],al
   14000518c:	add    BYTE PTR [rax],al
   14000518e:	add    BYTE PTR [rax],al
   140005190:	add    al,0x55
   140005192:	add    BYTE PTR [rax],al
   140005194:	add    BYTE PTR [rax],al
   140005196:	add    BYTE PTR [rax],al
   140005198:	in     al,dx
   140005199:	push   rsp
   14000519a:	add    BYTE PTR [rax],al
   14000519c:	add    BYTE PTR [rax],al
   14000519e:	add    BYTE PTR [rax],al
   1400051a0:	loopne 0x1400051f6
   1400051a2:	add    BYTE PTR [rax],al
   1400051a4:	add    BYTE PTR [rax],al
   1400051a6:	add    BYTE PTR [rax],al
   1400051a8:	int3   
   1400051a9:	push   rsp
   1400051aa:	add    BYTE PTR [rax],al
   1400051ac:	add    BYTE PTR [rax],al
   1400051ae:	add    BYTE PTR [rax],al
   1400051b0:	mov    esi,0x54
   1400051b5:	add    BYTE PTR [rax],al
   1400051b7:	add    BYTE PTR [rsp+rdx*2+0x0],dh
   1400051be:	add    BYTE PTR [rax],al
   1400051c0:	lods   al,BYTE PTR ds:[rsi]
   1400051c1:	push   rsp
   1400051c2:	add    BYTE PTR [rax],al
   1400051c4:	add    BYTE PTR [rax],al
   1400051c6:	add    BYTE PTR [rax],al
   1400051c8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400051c9:	push   rsp
   1400051ca:	add    BYTE PTR [rax],al
   1400051cc:	add    BYTE PTR [rax],al
   1400051ce:	add    BYTE PTR [rax],al
   1400051d0:	xchg   edx,eax
   1400051d1:	push   rsp
   1400051d2:	add    BYTE PTR [rax],al
   1400051d4:	add    BYTE PTR [rax],al
   1400051d6:	add    BYTE PTR [rax],al
   1400051d8:	(bad)  
   1400051d9:	push   rsp
   1400051da:	add    BYTE PTR [rax],al
   1400051dc:	add    BYTE PTR [rax],al
   1400051de:	add    BYTE PTR [rax],al
   1400051e0:	je     0x140005236
	...
   1400051ee:	add    BYTE PTR [rax],al
   1400051f0:	push   0x55
	...
   1400051fe:	add    BYTE PTR [rax],al
   140005200:	cmp    al,0x58
	...
   14000520e:	add    BYTE PTR [rax],al
   140005210:	push   rsi
   140005211:	push   rbp
	...
   14000521e:	add    BYTE PTR [rax],al
   140005220:	imul   eax,DWORD PTR [rcx],0x53746547
   140005226:	imul   esp,DWORD PTR [rcx+rcx*2+0x64],0x69746e65
   14000522e:	imul   sp,WORD PTR [rbp+0x72],0x7541
   140005234:	je     0x14000529e
   140005236:	outs   dx,DWORD PTR ds:[rsi]
   140005237:	jb     0x1400052a2
   140005239:	je     0x1400052b4
   14000523b:	add    BYTE PTR [rbx],dl
   14000523d:	add    cl,BYTE PTR [rdi+0x70]
   140005240:	outs   dx,BYTE PTR gs:[rsi]
   140005242:	push   rax
   140005243:	jb     0x1400052b4
   140005245:	movsxd esp,DWORD PTR [rbp+0x73]
   140005248:	jae    0x14000529e
   14000524a:	outs   dx,DWORD PTR ds:[rsi]
   14000524b:	imul   esp,DWORD PTR [rbp+0x6e],0x0
   14000524f:	add    BYTE PTR [rbx+0x1],ch
   140005252:	rex.RXB
   140005253:	gs je  0x1400052a9
   140005256:	imul   esp,DWORD PTR [rbx+rdx*2+0x75],0x74754162
   14000525e:	push   0x7469726f
   140005263:	jns    0x140005265
   140005265:	add    BYTE PTR [rax],bl
   140005267:	add    cl,BYTE PTR [rdi+0x70]
   14000526a:	outs   dx,BYTE PTR gs:[rsi]
   14000526c:	push   rsp
   14000526d:	push   0x64616572
   140005272:	push   rsp
   140005273:	outs   dx,DWORD PTR ds:[rsi]
   140005274:	imul   esp,DWORD PTR [rbp+0x6e],0x0
   140005278:	ins    BYTE PTR es:[rdi],dx
   140005279:	add    DWORD PTR [rdi+0x65],eax
   14000527c:	je     0x1400052d1
   14000527e:	imul   esp,DWORD PTR [rbx+rdx*2+0x75],0x74754162
   140005286:	push   0x7469726f
   14000528b:	jns    0x1400052d0
   14000528d:	outs   dx,DWORD PTR ds:[rsi]
   14000528e:	jne    0x1400052fe
   140005290:	je     0x140005292
   140005292:	outs   dx,DWORD PTR ds:[rsi]
   140005293:	add    DWORD PTR [rdi+0x65],eax
   140005296:	je     0x1400052ec
   140005298:	outs   dx,DWORD PTR ds:[rsi]
   140005299:	imul   esp,DWORD PTR [rbp+0x6e],0x49
   14000529d:	outs   dx,BYTE PTR ds:[rsi]
   14000529e:	outs   dx,WORD PTR ds:[rsi]
   1400052a0:	jb     0x14000530f
   1400052a2:	(bad)  
   1400052a3:	je     0x14000530e
   1400052a5:	outs   dx,DWORD PTR ds:[rsi]
   1400052a6:	outs   dx,BYTE PTR ds:[rsi]
   1400052a7:	add    BYTE PTR [rbp+0x706f4300],al
   1400052ad:	jns    0x140005302
   1400052af:	imul   esp,DWORD PTR [rax+rax*1-0x7d],0x6e6f4300
   1400052b7:	jbe    0x14000531e
   1400052b9:	jb     0x14000532f
   1400052bb:	push   rbx
   1400052bc:	je     0x140005330
   1400052be:	imul   ebp,DWORD PTR [rsi+0x67],0x54646953
   1400052c5:	outs   dx,DWORD PTR ds:[rsi]
   1400052c6:	push   rbx
   1400052c7:	imul   esp,DWORD PTR [rdi+rdx*2+0x0],0x52026b00
   1400052cf:	gs addr32 rex.R
   1400052d2:	gs ins BYTE PTR es:[rdi],dx
   1400052d4:	gs je  0x14000533c
   1400052d7:	push   rsp
   1400052d8:	jb     0x14000533f
   1400052da:	gs push rdi
   1400052dc:	add    BYTE PTR [rax],al
   1400052de:	ja     0x1400052e2
   1400052e0:	push   rdx
   1400052e1:	rex.RB outs dx,BYTE PTR gs:[esi]
   1400052e5:	jne    0x140005354
   1400052e7:	push   rsi
   1400052e8:	(bad)  
   1400052e9:	ins    BYTE PTR es:[rdi],dx
   1400052ea:	jne    0x140005351
   1400052ec:	push   rdi
   1400052ed:	add    BYTE PTR [rcx+rax*1+0x61567349],bl
   1400052f4:	ins    BYTE PTR es:[rdi],dx
   1400052f5:	imul   esp,DWORD PTR [rbx+rdx*2+0x69],0x86000064
   1400052fd:	add    dl,BYTE PTR [rdx+0x65]
   140005300:	addr32 rex.WRXB jo 0x140005369
   140005304:	outs   dx,BYTE PTR ds:[rsi]
   140005305:	rex.WXB
   140005306:	gs jns 0x14000534e
   140005309:	js     0x140005362
   14000530b:	add    BYTE PTR [rdx+0x1],cl
   14000530e:	rex.RXB
   14000530f:	gs je  0x14000535e
   140005312:	outs   dx,BYTE PTR gs:[rsi]
   140005314:	addr32 je 0x14000537f
   140005317:	push   rbx
   140005318:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x65520274
   140005320:	rex.RB outs dx,BYTE PTR ds:[esi]
   140005323:	jne    0x140005392
   140005325:	rex.WXB
   140005326:	gs jns 0x14000536e
   140005329:	js     0x140005382
   14000532b:	add    BYTE PTR [rbx+0x0],bh
   14000532e:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140005330:	outs   dx,BYTE PTR ds:[rsi]
   140005331:	jbe    0x140005398
   140005333:	jb     0x1400053a9
   140005335:	push   rbx
   140005336:	imul   esp,DWORD PTR [rsp+rdx*2+0x6f],0x69727453
   14000533e:	outs   dx,BYTE PTR ds:[rsi]
   14000533f:	addr32 push rbx
   140005341:	imul   esp,DWORD PTR [rdi+rdx*2+0x0],0x52025500
   140005349:	gs rex.XB ins BYTE PTR es:[edi],dx
   14000534d:	outs   dx,DWORD PTR ds:[rsi]
   14000534e:	jae    0x1400053b5
   140005350:	rex.WXB
   140005351:	gs jns 0x140005354
   140005354:	rex.B
   140005355:	rex.R push rsi
   140005357:	push   r8
   140005359:	xor    rsi,QWORD PTR [r10]
   14000535c:	cs fs ins BYTE PTR es:[rdi],dx
   14000535f:	ins    BYTE PTR es:[rdi],dx
   140005360:	add    BYTE PTR [rax],al
   140005362:	rol    BYTE PTR [rcx],1
   140005364:	rex.RXB
   140005365:	gs je  0x1400053ab
   140005368:	outs   dx,DWORD PTR ds:[rsi]
   140005369:	ins    DWORD PTR es:[rdi],dx
   14000536a:	ins    DWORD PTR es:[rdi],dx
   14000536b:	(bad)  
   14000536c:	outs   dx,BYTE PTR ds:[rsi]
   14000536d:	imul   r13,QWORD PTR fs:[rsi+0x65],0x2100057
   140005376:	rex.RXB
   140005377:	gs je  0x1400053bd
   14000537a:	jne    0x1400053ee
   14000537c:	jb     0x1400053e3
   14000537e:	outs   dx,BYTE PTR ds:[rsi]
   14000537f:	je     0x1400053d1
   140005381:	jb     0x1400053f2
   140005383:	movsxd esp,DWORD PTR [rbp+0x73]
   140005386:	jae    0x140005388
   140005388:	adc    al,0x2
   14000538a:	rex.RXB
   14000538b:	gs je  0x1400053d1
   14000538e:	jne    0x140005402
   140005390:	jb     0x1400053f7
   140005392:	outs   dx,BYTE PTR ds:[rsi]
   140005393:	je     0x1400053e9
   140005395:	push   0x64616572
   14000539a:	add    BYTE PTR [rax],al
   14000539c:	nop
   14000539d:	add    BYTE PTR [rbx+0x6f],al
   1400053a0:	ins    DWORD PTR es:[rdi],dx
   1400053a1:	jo     0x140005404
   1400053a3:	jb     0x14000540a
   1400053a5:	push   rbx
   1400053a6:	je     0x14000541a
   1400053a8:	imul   ebp,DWORD PTR [rsi+0x67],0x6964724f
   1400053af:	outs   dx,BYTE PTR ds:[rsi]
   1400053b0:	(bad)  
   1400053b1:	ins    BYTE PTR es:[rdi],dx
   1400053b2:	add    BYTE PTR [rax],al
   1400053b4:	push   rdi
   1400053b5:	add    al,BYTE PTR [rdi+0x65]
   1400053b8:	je     0x140005406
   1400053ba:	(bad)  
   1400053bb:	jae    0x140005431
   1400053bd:	rex.RB jb 0x140005432
   1400053c0:	outs   dx,DWORD PTR ds:[rsi]
   1400053c1:	jb     0x1400053c3
   1400053c3:	add    BYTE PTR [rbp+0x636f4c03],dh
   1400053c9:	(bad)  
   1400053ca:	ins    BYTE PTR es:[rdi],dx
   1400053cb:	rex.B ins BYTE PTR es:[rdi],dx
   1400053cd:	ins    BYTE PTR es:[rdi],dx
   1400053ce:	outs   dx,DWORD PTR ds:[rsi]
   1400053cf:	movsxd eax,DWORD PTR [rax]
   1400053d1:	add    BYTE PTR [rbp+0x0],bh
   1400053d4:	rex.XB ins BYTE PTR es:[rdi],dx
   1400053d6:	outs   dx,DWORD PTR ds:[rsi]
   1400053d7:	jae    0x14000543e
   1400053d9:	rex.W (bad) 
   1400053db:	outs   dx,BYTE PTR ds:[rsi]
   1400053dc:	fs ins BYTE PTR es:[rdi],dx
   1400053de:	add    BYTE PTR gs:[rcx+0x636f4c03],bh
   1400053e5:	(bad)  
   1400053e6:	ins    BYTE PTR es:[rdi],dx
   1400053e7:	rex.RX jb 0x14000544f
   1400053ea:	add    BYTE PTR gs:[rbx+0x45],cl
   1400053ee:	push   rdx
   1400053ef:	rex.WRX
   1400053f0:	rex.RB
   1400053f1:	xor    r14,QWORD PTR [rdx]
   1400053f4:	cs fs ins BYTE PTR es:[rdi],dx
   1400053f7:	ins    BYTE PTR es:[rdi],dx
   1400053f8:	add    BYTE PTR [rax],al
   1400053fa:	(bad)  
   1400053fb:	add    cl,BYTE PTR [rbp+0x65]
   1400053fe:	jae    0x140005473
   140005400:	(bad)  
   140005401:	rex.X outs dx,DWORD PTR gs:[esi]
   140005405:	js     0x14000545e
   140005407:	add    BYTE PTR [rbx+0x2],al
   14000540a:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000540c:	(bad)  
   14000540d:	fs push rbx
   14000540f:	je     0x140005483
   140005411:	imul   ebp,DWORD PTR [rsi+0x67],0x2360057
   140005418:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000541a:	(bad)  
   14000541b:	movsxd rbp,DWORD PTR fs:[r15+0x6e]
   140005420:	push   rdi
   140005421:	add    BYTE PTR [rbx+0x736f5002],al
   140005427:	je     0x140005476
   140005429:	gs jae 0x14000549f
   14000542c:	(bad)  
   14000542d:	addr32 gs push rdi
   140005430:	add    BYTE PTR [rax],al
   140005432:	push   rbp
   140005433:	push   rbx
   140005434:	rex.RB push r10
   140005436:	xor    esi,DWORD PTR [rdx]
   140005438:	cs fs ins BYTE PTR es:[rdi],dx
   14000543b:	ins    BYTE PTR es:[rdi],dx
   14000543c:	add    BYTE PTR [rax],al
   14000543e:	or     eax,DWORD PTR [rip+0x6e736377]        # 0x1ae73b7bb
   140005444:	movsxd ebp,DWORD PTR [rbp+0x70]
   140005447:	add    BYTE PTR [rsp+rax*1+0x66],cl
   14000544b:	jb     0x1400054b2
   14000544d:	add    BYTE PTR gs:[rax],al
   140005450:	xchg   BYTE PTR [rbp*2+0x6f6c6c61],al
   140005457:	movsxd eax,DWORD PTR [rax]
   140005459:	add    BYTE PTR [rdi+0x61635f00],bh
   14000545f:	ins    BYTE PTR es:[rdi],dx
   140005460:	ins    BYTE PTR es:[rdi],dx
   140005461:	outs   dx,BYTE PTR ds:[rsi]
   140005462:	gs ja  0x1400054cd
   140005465:	add    BYTE PTR [rbp+0x0],dl
   140005468:	pop    rdi
   140005469:	pop    rax
   14000546a:	movsxd esi,DWORD PTR [rax+0x74]
   14000546d:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   140005476:	pop    rdi
   140005477:	(bad)  
   140005478:	ins    DWORD PTR es:[rdi],dx
   140005479:	jae    0x1400054e2
   14000547b:	pop    rdi
   14000547c:	gs js  0x1400054e8
   14000547f:	je     0x140005481
   140005481:	add    BYTE PTR [rdi+0x0],bh
   140005484:	pop    rdi
   140005485:	pop    rdi
   140005486:	addr32 gs je 0x1400054f7
   14000548a:	(bad)  
   14000548b:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   140005492:	mov    es,WORD PTR [rax]
   140005494:	pop    rdi
   140005495:	pop    rdi
   140005496:	jae    0x1400054fd
   140005498:	je     0x1400054f9
   14000549a:	(bad)  
   14000549b:	jo     0x14000550d
   14000549d:	pop    rdi
   14000549e:	je     0x140005519
   1400054a0:	jo     0x140005507
   1400054a2:	add    BYTE PTR [rax],al
   1400054a4:	xor    al,BYTE PTR [riz*2+0x746978]
   1400054ab:	add    BYTE PTR [rsi],cl
   1400054ad:	add    DWORD PTR [rdi+0x65],ebx
   1400054b0:	js     0x14000551b
   1400054b2:	je     0x1400054b4
   1400054b4:	rol    DWORD PTR [rax],0x5f
   1400054b7:	movsxd esp,DWORD PTR [rbp+0x78]
   1400054ba:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x695f0199
   1400054c2:	jae    0x140005531
   1400054c4:	(bad)
   1400054c9:	add    BYTE PTR fs:[rax],al
   1400054cc:	nop
   1400054cd:	add    BYTE PTR [rdi+0x5f],bl
   1400054d0:	jae    0x140005537
   1400054d2:	je     0x140005549
   1400054d4:	jae    0x14000553b
   1400054d6:	jb     0x140005545
   1400054d8:	(bad)  
   1400054d9:	je     0x140005543
   1400054db:	gs jb  0x140005550
   1400054de:	add    BYTE PTR [rax],al
   1400054e0:	jge    0x1400054e3
   1400054e2:	pop    rdi
   1400054e3:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   1400054ea:	ins    DWORD PTR es:[rdi],dx
   1400054eb:	add    BYTE PTR [rdi+0x0],dl
   1400054ee:	pop    rdi
   1400054ef:	pop    rdi
   1400054f0:	rex.XB pop r15
   1400054f2:	jae    0x140005564
   1400054f4:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   1400054f8:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   1400054ff:	ins    BYTE PTR es:[rdi],dx
   140005500:	gs jb  0x140005503
   140005503:	add    BYTE PTR [rdx+0x63615f00],ah
   140005509:	ins    DWORD PTR es:[rdi],dx
   14000550a:	fs ins BYTE PTR es:[rdi],dx
   14000550c:	outs   dx,BYTE PTR ds:[rsi]
   14000550d:	add    BYTE PTR [rdi],ah
   14000550f:	add    DWORD PTR [rdi+0x66],ebx
   140005512:	ins    DWORD PTR es:[rdi],dx
   140005513:	outs   dx,DWORD PTR ds:[rsi]
   140005514:	fs add BYTE PTR gs:[rax],al
   140005518:	rol    BYTE PTR [rax],cl
   14000551a:	pop    rdi
   14000551b:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000551e:	ins    DWORD PTR es:[rdi],dx
   14000551f:	outs   dx,DWORD PTR ds:[rsi]
   140005520:	fs add BYTE PTR gs:[rax],al
   140005524:	ins    DWORD PTR es:[rdi],dx
   140005525:	jae    0x14000559d
   140005527:	movsxd esi,DWORD PTR [rdx+0x74]
   14000552a:	cs fs ins BYTE PTR es:[rdi],dx
   14000552d:	ins    BYTE PTR es:[rdi],dx
   14000552e:	add    BYTE PTR [rax],al
   140005530:	(bad)  
   140005531:	add    BYTE PTR [rdi],bh
   140005533:	je     0x14000559a
   140005535:	jb     0x1400055a4
   140005537:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   14000553e:	pop    rcx
   14000553f:	pop    r8
   140005541:	pop    rax
   140005542:	pop    rdx
   140005543:	add    BYTE PTR [rdx+0x0],al
   140005546:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140005548:	push   rbp
   140005549:	outs   dx,BYTE PTR ds:[rsi]
   14000554a:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   140005551:	imul   edi,DWORD PTR [rdx+0x65],0x1e0000
   140005558:	rex.WRX
   140005559:	gs je  0x1400055b1
   14000555c:	jae    0x1400055c3
   14000555e:	jb     0x1400055ad
   140005560:	outs   dx,DWORD PTR ds:[rsi]
   140005561:	fs (bad) 
   140005563:	ins    BYTE PTR es:[rdi],dx
   140005564:	jae    0x1400055ad
   140005566:	gs je  0x140005569
   140005569:	add    BYTE PTR [rcx],al
   14000556b:	add    BYTE PTR [rsi+0x65],cl
   14000556e:	je     0x1400055b1
   140005570:	jo     0x1400055db
   140005572:	rex.X jne 0x1400055db
   140005575:	data16 gs jb 0x1400055bf
   140005579:	jb     0x1400055e0
   14000557b:	add    BYTE PTR gs:[rax],al
   14000557e:	out    0x0,al
   140005580:	rex.XB jb 0x1400055fc
   140005583:	jo     0x1400055f9
   140005585:	push   rbp
   140005586:	jo     0x1400055ec
   140005588:	(bad)  
   140005589:	je     0x1400055f0
   14000558b:	push   rax
   14000558c:	jb     0x1400055fd
   14000558e:	je     0x1400055f5
   140005590:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
   140005594:	push   rbx
   140005595:	je     0x1400055f8
   140005597:	je     0x1400055fe
   140005599:	add    BYTE PTR [rip+0x656c5300],ch        # 0x1a56ca89f
   14000559f:	gs jo  0x1400055a2
   1400055a2:	and    BYTE PTR [rax],al
   1400055a4:	rex.RXB
   1400055a5:	gs je  0x1400055fb
   1400055a8:	je     0x14000560b
   1400055aa:	jb     0x140005620
   1400055ac:	jne    0x14000561e
   1400055ae:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400055b0:	outs   dx,WORD PTR ds:[rsi]
   1400055b2:	push   rdi
   1400055b3:	add    BYTE PTR [rdx],al
   1400055b5:	add    BYTE PTR [rdx+0x74],dl
   1400055b8:	ins    BYTE PTR es:[rdi],dx
   1400055b9:	rex.XB (bad) 
   1400055bb:	jo     0x140005631
   1400055bd:	jne    0x140005631
   1400055bf:	rex.XB outs dx,DWORD PTR gs:[rsi]
   1400055c2:	outs   dx,BYTE PTR ds:[rsi]
   1400055c3:	je     0x14000562a
   1400055c5:	js     0x14000563b
   1400055c7:	add    BYTE PTR [rcx],cl
   1400055c9:	add    BYTE PTR [rdx+0x74],dl
   1400055cc:	ins    BYTE PTR es:[rdi],dx
   1400055cd:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400055cf:	outs   dx,DWORD PTR ds:[rsi]
   1400055d0:	imul   esi,DWORD PTR [rbp+0x70],0x46
   1400055d4:	jne    0x140005644
   1400055d6:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   1400055da:	outs   dx,BYTE PTR ds:[rsi]
   1400055db:	rex.RB outs dx,BYTE PTR ds:[rsi]
   1400055dd:	je     0x140005651
   1400055df:	jns    0x1400055e1
   1400055e1:	add    BYTE PTR [rdi],cl
   1400055e3:	add    BYTE PTR [rdx+0x74],dl
   1400055e6:	ins    BYTE PTR es:[rdi],dx
   1400055e7:	push   rsi
   1400055e8:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   1400055ef:	outs   dx,BYTE PTR ds:[rsi]
   1400055f0:	ja     0x14000565b
   1400055f2:	outs   dx,BYTE PTR ds:[rsi]
   1400055f3:	add    BYTE PTR fs:[rax],al
   1400055f6:	adc    DWORD PTR [rax],eax
   1400055f8:	push   rbp
   1400055f9:	outs   dx,BYTE PTR ds:[rsi]
   1400055fa:	push   0x6c646e61
   1400055ff:	gs fs rex.RB js 0x140005667
   140005604:	gs jo  0x14000567b
   140005607:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000560e:	gs jb  0x140005611
   140005611:	add    BYTE PTR [rdi],cl
   140005613:	add    BYTE PTR [rbx+0x65],dl
   140005616:	je     0x14000566d
   140005618:	outs   dx,BYTE PTR ds:[rsi]
   140005619:	push   0x6c646e61
   14000561e:	gs fs rex.RB js 0x140005686
   140005623:	gs jo  0x14000569a
   140005626:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000562d:	gs jb  0x140005630
   140005630:	rex.WXB add BYTE PTR [r13+r12*2+0x72],dl
   140005635:	ins    DWORD PTR es:[rdi],dx
   140005636:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   14000563d:	outs   dx,DWORD PTR ds:[rsi]
   14000563e:	movsxd esp,DWORD PTR [rbp+0x73]
   140005641:	jae    0x140005643
   140005643:	add    BYTE PTR [rbx],dl
   140005645:	add    BYTE PTR [rdi+0x65],al
   140005648:	je     0x140005697
   14000564a:	outs   dx,DWORD PTR ds:[rsi]
   14000564b:	fs jne 0x1400056ba
   14000564e:	gs rex.W (bad) 
   140005651:	outs   dx,BYTE PTR ds:[rsi]
   140005652:	fs ins BYTE PTR es:[rdi],dx
   140005654:	gs push rdi
   140005656:	add    BYTE PTR [rax],al
   140005658:	add    BYTE PTR [rax],al
   14000565a:	push   rcx
   14000565b:	jne    0x1400056c2
   14000565d:	jb     0x1400056d8
   14000565f:	push   rax
   140005660:	gs jb  0x1400056c9
   140005663:	outs   dx,DWORD PTR ds:[rsi]
   140005664:	jb     0x1400056d3
   140005666:	(bad)  
   140005667:	outs   dx,BYTE PTR ds:[rsi]
   140005668:	movsxd esp,DWORD PTR [rbp+0x43]
   14000566b:	outs   dx,DWORD PTR ds:[rsi]
   14000566c:	jne    0x1400056dc
   14000566e:	je     0x1400056d5
   140005670:	jb     0x140005672
   140005672:	or     eax,0x74654700
   140005677:	rex.XB jne 0x1400056ec
   14000567a:	jb     0x1400056e1
   14000567c:	outs   dx,BYTE PTR ds:[rsi]
   14000567d:	je     0x1400056cf
   14000567f:	jb     0x1400056f0
   140005681:	movsxd esp,DWORD PTR [rbp+0x73]
   140005684:	jae    0x1400056cf
   140005686:	add    BYTE PTR fs:[rcx],dl
   140005689:	add    BYTE PTR [rdi+0x65],al
   14000568c:	je     0x1400056d1
   14000568e:	jne    0x140005702
   140005690:	jb     0x1400056f7
   140005692:	outs   dx,BYTE PTR ds:[rsi]
   140005693:	je     0x1400056e9
   140005695:	push   0x64616572
   14000569a:	rex.WB
   14000569b:	add    BYTE PTR fs:[rax],al
   14000569e:	adc    al,0x0
   1400056a0:	rex.RXB
   1400056a1:	gs je  0x1400056f7
   1400056a4:	jns    0x140005719
   1400056a6:	je     0x14000570d
   1400056a8:	ins    DWORD PTR es:[rdi],dx
   1400056a9:	push   rsp
   1400056aa:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   1400056b1:	ins    BYTE PTR es:[rdi],dx
   1400056b2:	gs push rsp
   1400056b4:	imul   ebp,DWORD PTR [rbp+0x65],0x47001800
   1400056bb:	gs je  0x140005712
   1400056be:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   1400056c5:	je     0x1400056c7
   1400056c7:	add    BYTE PTR [rcx+0x70],ah
   1400056ca:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72dca41
   1400056d4:	outs   dx,DWORD PTR ds:[rsi]
   1400056d5:	jb     0x14000573c
   1400056d7:	sub    eax,0x2d6d6f63
   1400056dc:	ins    BYTE PTR es:[rdi],dx
   1400056dd:	xor    DWORD PTR [rip+0x2e312d31],ebp        # 0x16e318414
   1400056e3:	fs ins BYTE PTR es:[rdi],dx
   1400056e5:	ins    BYTE PTR es:[rdi],dx
   1400056e6:	add    BYTE PTR [rax],al
   1400056e8:	jae    0x14000574b
   1400056ea:	ins    DWORD PTR es:[rdi],dx
   1400056eb:	movsxd ebp,DWORD PTR [rcx+rbp*2+0x2e]
   1400056ef:	fs ins BYTE PTR es:[rdi],dx
   1400056f1:	ins    BYTE PTR es:[rdi],dx
   1400056f2:	add    BYTE PTR [rax],al
   1400056f4:	outs   dx,BYTE PTR ds:[rsi]
   1400056f5:	gs je  0x14000576d
   1400056f8:	je     0x140005763
   1400056fa:	ins    BYTE PTR es:[rdi],dx
   1400056fb:	jae    0x14000572b
   1400056fd:	fs ins BYTE PTR es:[rdi],dx
   1400056ff:	ins    BYTE PTR es:[rdi],dx
   140005700:	add    BYTE PTR [rax],al
   140005702:	rex.XB push r10
   140005704:	pop    rcx
   140005705:	push   rax
   140005706:	push   rsp
   140005707:	xor    esi,DWORD PTR [rdx]
   140005709:	cs fs ins BYTE PTR es:[rdi],dx
   14000570c:	ins    BYTE PTR es:[rdi],dx
   14000570d:	add    BYTE PTR [rcx+0x70],ah
   140005710:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72dca87
   14000571a:	outs   dx,DWORD PTR ds:[rsi]
   14000571b:	jb     0x140005782
   14000571d:	sub    eax,0x636e7973
   140005722:	push   0x2d316c2d
   140005727:	xor    ch,BYTE PTR [rip+0x6c642e30]        # 0x1ac64855d
   14000572d:	ins    BYTE PTR es:[rdi],dx
   14000572e:	add    BYTE PTR [rax],al
   140005730:	(bad)  
   140005731:	jo     0x14000579c
   140005733:	sub    eax,0x772d736d
   140005738:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000573f:	sub    eax,0x636f7270
   140005744:	gs jae 0x1400057ba
   140005747:	je     0x1400057b1
   140005749:	jb     0x1400057b0
   14000574b:	(bad)  
   14000574c:	fs jae 0x14000577c
   14000574f:	ins    BYTE PTR es:[rdi],dx
   140005750:	xor    DWORD PTR [rip+0x2e322d31],ebp        # 0x16e328487
   140005756:	fs ins BYTE PTR es:[rdi],dx
   140005758:	ins    BYTE PTR es:[rdi],dx
   140005759:	add    BYTE PTR [rcx+0x70],ah
   14000575c:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72dcad3
   140005766:	outs   dx,DWORD PTR ds:[rsi]
   140005767:	jb     0x1400057ce
   140005769:	sub    eax,0x736c7472
   14000576e:	jne    0x1400057e0
   140005770:	jo     0x1400057e1
   140005772:	jb     0x1400057e8
   140005774:	sub    eax,0x322d316c
   140005779:	sub    eax,0x6c642e30
   14000577e:	ins    BYTE PTR es:[rdi],dx
   14000577f:	add    BYTE PTR [rcx+0x70],ah
   140005782:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72dcaf9
   14000578c:	outs   dx,DWORD PTR ds:[rsi]
   14000578d:	jb     0x1400057f4
   14000578f:	sub    eax,0x6f727265
   140005794:	jb     0x1400057fe
   140005796:	(bad)  
   140005797:	outs   dx,BYTE PTR ds:[rsi]
   140005798:	fs ins BYTE PTR es:[rdi],dx
   14000579a:	imul   ebp,DWORD PTR [rsi+0x67],0x2d316c2d
   1400057a1:	xor    DWORD PTR [rip+0x6c642e31],ebp        # 0x1ac6485d8
   1400057a7:	ins    BYTE PTR es:[rdi],dx
   1400057a8:	add    BYTE PTR [rax],al
   1400057aa:	(bad)  
   1400057ab:	jo     0x140005816
   1400057ad:	sub    eax,0x772d736d
   1400057b2:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   1400057b9:	sub    eax,0x7262696c
   1400057be:	(bad)  
   1400057bf:	jb     0x14000583a
   1400057c1:	ins    BYTE PTR es:[rdi],dx
   1400057c2:	outs   dx,DWORD PTR ds:[rsi]
   1400057c3:	(bad)  
   1400057c4:	fs gs jb 0x1400057f5
   1400057c8:	ins    BYTE PTR es:[rdi],dx
   1400057c9:	xor    DWORD PTR [rip+0x2e302d32],ebp        # 0x16e308501
   1400057cf:	fs ins BYTE PTR es:[rdi],dx
   1400057d1:	ins    BYTE PTR es:[rdi],dx
   1400057d2:	add    BYTE PTR [rax],al
   1400057d4:	(bad)  
   1400057d5:	jo     0x140005840
   1400057d7:	sub    eax,0x772d736d
   1400057dc:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   1400057e3:	sub    eax,0x666f7270
   1400057e8:	imul   ebp,DWORD PTR [rbp+riz*2+0x2d],0x312d316c
   1400057f0:	sub    eax,0x6c642e30
   1400057f5:	ins    BYTE PTR es:[rdi],dx
   1400057f6:	add    BYTE PTR [rax],al
   1400057f8:	(bad)  
   1400057f9:	jo     0x140005864
   1400057fb:	sub    eax,0x772d736d
   140005800:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140005807:	sub    eax,0x69737973
   14000580c:	outs   dx,BYTE PTR ds:[rsi]
   14000580d:	outs   dx,WORD PTR ds:[rsi]
   14000580f:	sub    eax,0x322d316c
   140005814:	sub    eax,0x6c642e31
   140005819:	ins    BYTE PTR es:[rdi],dx
   14000581a:	add    BYTE PTR [rax],al
   14000581c:	xchg   BYTE PTR [rax],al
   14000581e:	push   rax
   14000581f:	jb     0x140005890
   140005821:	jo     0x140005888
   140005823:	jb     0x140005899
   140005825:	jns    0x14000587a
   140005827:	push   0x57746565
   14000582c:	add    BYTE PTR [rax],al
   14000582e:	rex.XB
   14000582f:	rex.WRXB
   140005830:	rex.WRB
   140005831:	rex.XB push r12
   140005833:	xor    r14,QWORD PTR [rdx]
   140005836:	cs fs ins BYTE PTR es:[rdi],dx
   140005839:	ins    BYTE PTR es:[rdi],dx
   14000583a:	add    BYTE PTR [rax],al
   14000583c:	(bad)  
   14000583d:	add    BYTE PTR [rbx+0x6f],al
   140005840:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140005842:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000584a:	add    BYTE PTR [rax],al
   14000584c:	outs   dx,DWORD PTR ds:[rsi]
   14000584d:	ins    BYTE PTR es:[rdi],dx
   14000584e:	xor    esi,DWORD PTR gs:[rdx]
   140005851:	cs fs ins BYTE PTR es:[rdi],dx
   140005854:	ins    BYTE PTR es:[rdi],dx
   140005855:	add    BYTE PTR [rdi],al
   140005857:	add    BYTE PTR [rbx+0x6f],al
   14000585a:	ins    DWORD PTR es:[rdi],dx
   14000585b:	ins    DWORD PTR es:[rdi],dx
   14000585c:	(bad)  
   14000585d:	outs   dx,BYTE PTR ds:[rsi]
   14000585e:	imul   r13,QWORD PTR fs:[rsi+0x65],0x72416f54
   140005867:	addr32 jbe 0x1400058c1
   14000586a:	add    BYTE PTR [rax],al
   14000586c:	push   rbx
   14000586d:	rex.W
   14000586e:	rex.RB
   14000586f:	rex.WR
   140005870:	xor    r14,QWORD PTR [rdx]
   140005873:	cs fs ins BYTE PTR es:[rdi],dx
   140005876:	ins    BYTE PTR es:[rdi],dx
   140005877:	add    BYTE PTR [rsi],cl
   140005879:	adc    BYTE PTR [rcx+0x6e],cl
   14000587c:	imul   esi,DWORD PTR [rsp+rdx*2+0x68],0x64616572
   140005884:	add    BYTE PTR [rax],al
   140005886:	mov    esi,0x65443f04
   14000588b:	jae    0x140005901
   14000588d:	jb     0x1400058fe
   14000588f:	jns    0x1400058d4
   140005891:	push   rax
   140005892:	rex push rsp
   140005894:	(bad)  
   140005895:	jae    0x140005902
   140005897:	push   rax
   140005898:	(bad)  
   140005899:	addr32 gs rex
   14000589c:	imul   r14d,DWORD PTR [rdx+0x65],0x49557463
   1400058a4:	rex
   1400058a5:	rex
   1400058a6:	rex.RB
   1400058a7:	rex.RB
   1400058a8:	rex.B
   1400058a9:	pop    r8
   1400058ab:	pop    rax
   1400058ac:	pop    rdx
   1400058ad:	add    BYTE PTR [rax+0x72433f04],cl
   1400058b3:	gs (bad) 
   1400058b5:	je     0x14000591c
   1400058b7:	push   rax
   1400058b8:	(bad)  
   1400058b9:	jb     0x14000592e
   1400058bb:	gs jb  0x140005901
   1400058be:	push   rax
   1400058bf:	rex push rsp
   1400058c1:	(bad)  
   1400058c2:	jae    0x14000592f
   1400058c4:	push   rax
   1400058c5:	(bad)  
   1400058c6:	addr32 gs rex
   1400058c9:	imul   r14d,DWORD PTR [rdx+0x65],0x49557463
   1400058d1:	rex
   1400058d2:	rex
   1400058d3:	rex.RB
   1400058d4:	rex.RB
   1400058d5:	rex.B
   1400058d6:	rex.B
   1400058d7:	rex.WX push rax
   1400058d9:	rex.RB
   1400058da:	push   r8
   1400058dc:	rex.RB
   1400058dd:	push   r14
   1400058df:	rex.R push rbp
   1400058e1:	rex.WB pop r8
   1400058e3:	ins    DWORD PTR es:[rdi],dx
   1400058e4:	ins    BYTE PTR es:[rdi],dx
   1400058e5:	push   rax
   1400058e6:	(bad)  
   1400058e7:	jb     0x14000595c
   1400058e9:	gs jb  0x14000592c
   1400058ec:	xor    al,BYTE PTR [rax+0x40]
   1400058ef:	pop    rdx
   1400058f0:	add    BYTE PTR [rax],al
   1400058f2:	data16 add al,0x3f
   1400058f5:	rex.XB jb 0x14000595d
   1400058f8:	(bad)  
   1400058f9:	je     0x140005960
   1400058fb:	rex.R push rbp
   1400058fd:	rex.WB
   1400058fe:	rex.XB push r8
   140005900:	rex push rsp
   140005902:	(bad)  
   140005903:	jae    0x140005970
   140005905:	push   rax
   140005906:	(bad)  
   140005907:	addr32 gs rex
   14000590a:	imul   r14d,DWORD PTR [rdx+0x65],0x49557463
   140005912:	rex
   140005913:	rex
   140005914:	rex.RB
   140005915:	rex.RB
   140005916:	rex.B
   140005917:	rex.B
   140005918:	rex.WX push rax
   14000591a:	rex.RB
   14000591b:	push   r14
   14000591d:	rex.W push rdi
   14000591f:	rex.WRX
   140005920:	rex.R
   140005921:	rex.RB ins BYTE PTR es:[rdi],dx
   140005923:	gs ins DWORD PTR es:[rdi],dx
   140005925:	outs   dx,BYTE PTR gs:[rsi]
   140005927:	je     0x140005969
   140005929:	xor    al,BYTE PTR [rax+0x50]
   14000592c:	rex.RB
   14000592d:	push   r13
   14000592f:	rex.W push rdi
   140005931:	rex.WRX
   140005932:	rex.R pop rdi
   140005934:	pop    rdi
   140005935:	rex
   140005936:	rex xor DWORD PTR [rax+0x45],edx
   14000593a:	push   r8
   14000593c:	rex.RB
   14000593d:	push   r14
   14000593f:	rex.RB ins BYTE PTR es:[rdi],dx
   140005941:	gs ins DWORD PTR es:[rdi],dx
   140005943:	outs   dx,BYTE PTR gs:[rsi]
   140005945:	je     0x140005987
   140005947:	xor    al,BYTE PTR [rax+0x50]
   14000594a:	rex.RB
   14000594b:	push   r8
   14000594d:	rex.RB
   14000594e:	push   r14
   140005950:	rex.R push rbp
   140005952:	rex.WB pop r8
   140005954:	ins    DWORD PTR es:[rdi],dx
   140005955:	ins    BYTE PTR es:[rdi],dx
   140005956:	push   rax
   140005957:	(bad)  
   140005958:	jb     0x1400059cd
   14000595a:	gs jb  0x14000599d
   14000595d:	xor    al,BYTE PTR [rax+0x40]
   140005960:	pop    rdx
   140005961:	add    BYTE PTR [rbp+0x6f4c3f09],cl
   140005967:	(bad)  
   140005968:	fs push rax
   14000596a:	(bad)  
   14000596b:	jb     0x1400059e0
   14000596d:	gs jb  0x1400059b0
   140005970:	push   rsp
   140005971:	(bad)  
   140005972:	jae    0x1400059df
   140005974:	push   rax
   140005975:	(bad)  
   140005976:	addr32 gs rex
   140005979:	imul   r14d,DWORD PTR [rdx+0x65],0x49557463
   140005981:	rex
   140005982:	rex
   140005983:	rex.WRB
   140005984:	rex.RB
   140005985:	rex.B
   140005986:	rex.B
   140005987:	rex.WX push rax
   140005989:	rex.RB
   14000598a:	push   r8
   14000598c:	rex.RB
   14000598d:	push   r14
   14000598f:	rex.R push rbp
   140005991:	rex.WB pop r8
   140005993:	ins    DWORD PTR es:[rdi],dx
   140005994:	ins    BYTE PTR es:[rdi],dx
   140005995:	push   rax
   140005996:	(bad)  
   140005997:	jb     0x140005a0c
   140005999:	gs jb  0x1400059dc
   14000599c:	xor    al,BYTE PTR [rax+0x40]
   14000599f:	pop    rdx
   1400059a0:	add    BYTE PTR [rax],al
   1400059a2:	push   rsp
   1400059a3:	or     edi,DWORD PTR [rdi]
   1400059a5:	push   rax
   1400059a6:	jb     0x140005a17
   1400059a8:	jo     0x1400059fd
   1400059aa:	push   0x5f746565
   1400059af:	push   rbx
   1400059b0:	outs   dx,BYTE PTR gs:[rsi]
   1400059b2:	fs rex.WRB
   1400059b4:	gs jae 0x140005a2a
   1400059b7:	(bad)  
   1400059b8:	addr32 gs rex push rsp
   1400059bc:	(bad)  
   1400059bd:	jae    0x140005a2a
   1400059bf:	push   rax
   1400059c0:	(bad)  
   1400059c1:	addr32 gs rex
   1400059c4:	imul   r14d,DWORD PTR [rdx+0x65],0x49557463
   1400059cc:	rex
   1400059cd:	rex
   1400059ce:	rex.WB
   1400059cf:	rex.RB
   1400059d0:	rex.B
   1400059d1:	pop    r15
   1400059d3:	rex.WX
   1400059d4:	rex.WB pop r15
   1400059d6:	rex.WXB pop r15
   1400059d8:	rex.WX
   1400059d9:	rex pop rdx
   1400059db:	add    BYTE PTR [rax+0x55443f04],ch
   1400059e1:	rex.WB
   1400059e2:	rex.XB jb 0x140005a4a
   1400059e5:	(bad)  
   1400059e6:	je     0x140005a4d
   1400059e8:	push   rax
   1400059e9:	jb     0x140005a5a
   1400059eb:	jo     0x140005a52
   1400059ed:	jb     0x140005a63
   1400059ef:	jns    0x140005a44
   1400059f1:	push   0x50746565
   1400059f6:	(bad)  
   1400059f7:	addr32 gs rex push rsp
   1400059fb:	(bad)  
   1400059fc:	jae    0x140005a69
   1400059fe:	push   rax
   1400059ff:	(bad)  
   140005a00:	addr32 gs rex
   140005a03:	imul   r14d,DWORD PTR [rdx+0x65],0x49557463
   140005a0b:	rex
   140005a0c:	rex push rcx
   140005a0e:	rex.RB
   140005a0f:	rex.B
   140005a10:	rex.B
   140005a11:	rex.WX push rax
   140005a13:	rex.RB
   140005a14:	push   r13
   140005a16:	rex.W
   140005a17:	rex.WB
   140005a18:	rex.WRX push rbx
   140005a1a:	push   rsp
   140005a1b:	rex.B
   140005a1c:	rex.WRX
   140005a1d:	rex.XB
   140005a1e:	rex.RB pop r15
   140005a20:	pop    rdi
   140005a21:	rex
   140005a22:	rex
   140005a23:	rex pop rdx
   140005a25:	add    BYTE PTR [rcx+0x313f3f01],cl
   140005a2b:	push   rsp
   140005a2c:	(bad)  
   140005a2d:	jae    0x140005a9a
   140005a2f:	push   rax
   140005a30:	(bad)  
   140005a31:	addr32 gs rex
   140005a34:	imul   r14d,DWORD PTR [rdx+0x65],0x49557463
   140005a3c:	rex
   140005a3d:	rex push rbp
   140005a3f:	rex.RB
   140005a40:	rex.B
   140005a41:	rex.B
   140005a42:	rex pop rax
   140005a44:	pop    rdx
   140005a45:	add    cl,dh
   140005a47:	add    BYTE PTR [rdi],bh
   140005a49:	(bad)  
   140005a4a:	xor    BYTE PTR [rcx+riz*2+0x73],dl
   140005a4e:	imul   edx,DWORD PTR [rax+0x61],0x67
   140005a52:	gs rex
   140005a54:	imul   r14d,DWORD PTR [rdx+0x65],0x49557463
   140005a5c:	rex
   140005a5d:	rex push rcx
   140005a5f:	rex.RB
   140005a60:	rex.B
   140005a61:	rex.B
   140005a62:	rex pop rax
   140005a64:	pop    rdx
   140005a65:	add    BYTE PTR [rax+rdx*1],ch
   140005a68:	push   rbp
   140005a69:	outs   dx,BYTE PTR ds:[rsi]
   140005a6a:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140005a6c:	imul   esi,DWORD PTR [rsp+rdx*2+0x68],0x64616572
   140005a74:	add    BYTE PTR [rax],al
   140005a76:	test   eax,0x65473f06
   140005a7b:	je     0x140005ac2
   140005a7d:	outs   dx,BYTE PTR ds:[rsi]
   140005a7e:	movsxd ebp,DWORD PTR [rdi+0x64]
   140005a81:	gs rex.XB outs dx,DWORD PTR fs:[rsi]
   140005a85:	outs   dx,BYTE PTR ds:[rsi]
   140005a86:	je     0x140005aed
   140005a88:	outs   dx,BYTE PTR ds:[rsi]
   140005a89:	je     0x140005ade
   140005a8b:	je     0x140005aff
   140005a8d:	imul   ebp,DWORD PTR [rsi+0x67],0x656c4540
   140005a94:	ins    DWORD PTR es:[rdi],dx
   140005a95:	outs   dx,BYTE PTR gs:[rsi]
   140005a97:	je     0x140005ad9
   140005a99:	imul   r14d,DWORD PTR [rdx+0x65],0x49557463
   140005aa1:	rex
   140005aa2:	rex push rcx
   140005aa4:	rex.RB
   140005aa5:	rex.B
   140005aa6:	rex.B
   140005aa7:	rex.WX push rax
   140005aa9:	rex.RB
   140005aaa:	rex.B
   140005aab:	rex.RXB pop r15
   140005aad:	rex.WXB
   140005aae:	rex pop rdx
   140005ab0:	add    BYTE PTR [rax],al
   140005ab2:	cmp    eax,DWORD PTR [rip+0x6e69463f]        # 0x1ae69a0f7
   140005ab8:	fs rex.R
   140005aba:	gs jae 0x140005b20
   140005abd:	outs   dx,BYTE PTR gs:[rsi]
   140005abf:	fs outs dx,BYTE PTR gs:[rsi]
   140005ac2:	je     0x140005b04
   140005ac4:	rex.RB ins BYTE PTR es:[rdi],dx
   140005ac6:	gs ins DWORD PTR es:[rdi],dx
   140005ac8:	outs   dx,BYTE PTR gs:[rsi]
   140005aca:	je     0x140005b0c
   140005acc:	imul   r14d,DWORD PTR [rdx+0x65],0x49557463
   140005ad4:	rex
   140005ad5:	rex push rcx
   140005ad7:	rex.RB
   140005ad8:	rex.B
   140005ad9:	push   r8
   140005adb:	rex.RB
   140005adc:	push   r14
   140005ade:	xor    DWORD PTR [rdx],esi
   140005ae0:	rex
   140005ae1:	rex.RXB
   140005ae2:	rex pop rdx
   140005ae4:	add    BYTE PTR [rax],al
   140005ae6:	sub    edx,DWORD PTR [rax]
   140005ae8:	push   rbp
   140005ae9:	outs   dx,BYTE PTR ds:[rsi]
   140005aea:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140005aec:	imul   esi,DWORD PTR [rax+rdx*2+0x72],0x7365636f
   140005af4:	jae    0x140005b46
   140005af6:	jb     0x140005b61
   140005af8:	jbe    0x140005afa
   140005afa:	or     eax,0x696e4910
   140005aff:	je     0x140005b51
   140005b01:	jb     0x140005b72
   140005b03:	movsxd esp,DWORD PTR [rbp+0x73]
   140005b06:	jae    0x140005b58
   140005b08:	jb     0x140005b73
   140005b0a:	jbe    0x140005b0c
   140005b0c:	mov    BYTE PTR [rbx],al
   140005b0e:	(bad)  
   140005b0f:	rex.XB ins BYTE PTR es:[rdi],dx
   140005b11:	imul   esp,DWORD PTR [rbx+0x6b],0x74754240
   140005b18:	je     0x140005b89
   140005b1a:	outs   dx,BYTE PTR ds:[rsi]
   140005b1b:	rex
   140005b1c:	imul   r14d,DWORD PTR [rdx+0x65],0x49557463
   140005b24:	rex
   140005b25:	rex push rbx
   140005b27:	rex.B (bad) 
   140005b29:	push   r14
   140005b2b:	push   rbp
   140005b2c:	rex.WB
   140005b2d:	rex.R
   140005b2e:	rex
   140005b2f:	rex pop rax
   140005b31:	pop    rdx
   140005b32:	add    BYTE PTR [rax],al
   140005b34:	adc    BYTE PTR es:[rbx+0x74],dl
   140005b38:	jb     0x140005b8e
   140005b3a:	outs   dx,DWORD PTR ds:[rsi]
   140005b3b:	rex.WB
   140005b3c:	add    BYTE PTR [rsi+0xa],r8b
   140005b40:	(bad)  
   140005b41:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
   140005b43:	imul   r14,QWORD PTR [rbx+0x74],0x64656e65
   140005b4b:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140005b4d:	jo     0x140005bc4
   140005b4f:	je     0x140005b91
   140005b51:	push   rsp
   140005b52:	(bad)  
   140005b53:	jae    0x140005bc0
   140005b55:	push   rax
   140005b56:	(bad)  
   140005b57:	addr32 gs rex
   140005b5a:	imul   r14d,DWORD PTR [rdx+0x65],0x49557463
   140005b62:	rex
   140005b63:	rex
   140005b64:	rex.WRB
   140005b65:	rex.RB
   140005b66:	rex.B
   140005b67:	pop    r8
   140005b69:	push   rax
   140005b6a:	rex.RB
   140005b6b:	push   r14
   140005b6d:	rex.RB ins BYTE PTR es:[rdi],dx
   140005b6f:	gs ins DWORD PTR es:[rdi],dx
   140005b71:	outs   dx,BYTE PTR gs:[rsi]
   140005b73:	je     0x140005bb5
   140005b75:	xor    al,BYTE PTR [rax+0x50]
   140005b78:	rex.RB
   140005b79:	push   r13
   140005b7b:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140005b7d:	jo     0x140005bf4
   140005b7f:	je     0x140005bc6
   140005b81:	jbe    0x140005be8
   140005b83:	outs   dx,BYTE PTR ds:[rsi]
   140005b84:	je     0x140005bc6
   140005b86:	xor    al,BYTE PTR [rax+0x40]
   140005b89:	pop    rdx
   140005b8a:	add    BYTE PTR [rax],al
   140005b8c:	rex.WXB or dil,BYTE PTR [r15]
   140005b8f:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
   140005b91:	imul   r14,QWORD PTR [rbx+0x74],0x64656e65
   140005b99:	push   rax
   140005b9a:	jb     0x140005c0b
   140005b9c:	jo     0x140005c03
   140005b9e:	jb     0x140005c14
   140005ba0:	jns    0x140005be5
   140005ba2:	push   0x65676e61
   140005ba7:	fs rex push rsp
   140005baa:	(bad)  
   140005bab:	jae    0x140005c18
   140005bad:	push   rax
   140005bae:	(bad)  
   140005baf:	addr32 gs rex
   140005bb2:	imul   r14d,DWORD PTR [rdx+0x65],0x49557463
   140005bba:	rex
   140005bbb:	rex
   140005bbc:	rex.WRB
   140005bbd:	rex.RB
   140005bbe:	rex.B
   140005bbf:	pop    r8
   140005bc1:	push   rax
   140005bc2:	rex.RB
   140005bc3:	push   r14
   140005bc5:	rex.RB ins BYTE PTR es:[rdi],dx
   140005bc7:	gs ins DWORD PTR es:[rdi],dx
   140005bc9:	outs   dx,BYTE PTR gs:[rsi]
   140005bcb:	je     0x140005c0d
   140005bcd:	xor    al,BYTE PTR [rax+0x50]
   140005bd0:	rex.RB
   140005bd1:	rex.X push rbp
   140005bd3:	push   rax
   140005bd4:	jb     0x140005c45
   140005bd6:	jo     0x140005c3d
   140005bd8:	jb     0x140005c4e
   140005bda:	jns    0x140005c25
   140005bdc:	outs   dx,BYTE PTR ds:[rsi]
   140005bdd:	outs   dx,WORD PTR ds:[rsi]
   140005bdf:	xor    al,BYTE PTR [rax+0x48]
   140005be3:	push   rax
   140005be4:	rex.RB
   140005be5:	push   r14
   140005be7:	push   rsi
   140005be8:	(bad)  
   140005be9:	ins    BYTE PTR es:[rdi],dx
   140005bea:	jne    0x140005c51
   140005bec:	xor    al,BYTE PTR [rax+0x32]
   140005bf0:	rex pop rdx
   140005bf2:	add    BYTE PTR [rax],al
   140005bf4:	rex.WRXB or r15b,BYTE PTR [r15]
   140005bf7:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
   140005bf9:	imul   r14,QWORD PTR [rbx+0x74],0x64656e65
   140005c01:	push   rax
   140005c02:	jb     0x140005c73
   140005c04:	jo     0x140005c6b
   140005c06:	jb     0x140005c7c
   140005c08:	jns    0x140005c4d
   140005c0a:	push   0x69676e61
   140005c0f:	outs   dx,BYTE PTR ds:[rsi]
   140005c10:	addr32 rex push rsp
   140005c13:	(bad)  
   140005c14:	jae    0x140005c81
   140005c16:	push   rax
   140005c17:	(bad)  
   140005c18:	addr32 gs rex
   140005c1b:	imul   r14d,DWORD PTR [rdx+0x65],0x49557463
   140005c23:	rex
   140005c24:	rex
   140005c25:	rex.WRB
   140005c26:	rex.RB
   140005c27:	rex.B
   140005c28:	pop    r15
   140005c2a:	rex.WRX push rax
   140005c2c:	rex.RB
   140005c2d:	push   r14
   140005c2f:	rex.RB ins BYTE PTR es:[rdi],dx
   140005c31:	gs ins DWORD PTR es:[rdi],dx
   140005c33:	outs   dx,BYTE PTR gs:[rsi]
   140005c35:	je     0x140005c77
   140005c37:	xor    al,BYTE PTR [rax+0x50]
   140005c3a:	rex.RB
   140005c3b:	rex.X push rbp
   140005c3d:	push   rax
   140005c3e:	jb     0x140005caf
   140005c40:	jo     0x140005ca7
   140005c42:	jb     0x140005cb8
   140005c44:	jns    0x140005c8f
   140005c46:	outs   dx,BYTE PTR ds:[rsi]
   140005c47:	outs   dx,WORD PTR ds:[rsi]
   140005c49:	xor    al,BYTE PTR [rax+0x48]
   140005c4d:	push   rax
   140005c4e:	rex.RB
   140005c4f:	push   r14
   140005c51:	push   rsi
   140005c52:	(bad)  
   140005c53:	ins    BYTE PTR es:[rdi],dx
   140005c54:	jne    0x140005cbb
   140005c56:	xor    al,BYTE PTR [rax+0x32]
   140005c5a:	rex pop rdx
   140005c5c:	add    BYTE PTR [rax],al
   140005c5e:	push   rsi
   140005c5f:	or     bh,BYTE PTR [rdi]
   140005c61:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
   140005c63:	imul   r14,QWORD PTR [rbx+0x74],0x72656e65
   140005c6b:	rex.R
   140005c6c:	gs je  0x140005cd0
   140005c6f:	movsxd ebp,DWORD PTR [rax+0x40]
   140005c72:	push   rsp
   140005c73:	(bad)  
   140005c74:	jae    0x140005ce1
   140005c76:	push   rax
   140005c77:	(bad)  
   140005c78:	addr32 gs rex
   140005c7b:	imul   r14d,DWORD PTR [rdx+0x65],0x49557463
   140005c83:	rex
   140005c84:	rex
   140005c85:	rex.WRB
   140005c86:	rex.RB
   140005c87:	rex.B
   140005c88:	pop    r8
   140005c8a:	push   rax
   140005c8b:	rex.RB
   140005c8c:	push   r14
   140005c8e:	rex.RB ins BYTE PTR es:[rdi],dx
   140005c90:	gs ins DWORD PTR es:[rdi],dx
   140005c92:	outs   dx,BYTE PTR gs:[rsi]
   140005c94:	je     0x140005cd6
   140005c96:	xor    al,BYTE PTR [rax+0x40]
   140005c99:	pop    rdx
   140005c9a:	add    BYTE PTR [rax],al
   140005c9c:	push   rdx
   140005c9d:	or     bh,BYTE PTR [rdi]
   140005c9f:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
   140005ca1:	imul   r14,QWORD PTR [rbx+0x74],0x72656e65
   140005ca9:	rex.B je 0x140005d20
   140005cac:	(bad)  
   140005cad:	movsxd ebp,DWORD PTR [rax+0x40]
   140005cb0:	push   rsp
   140005cb1:	(bad)  
   140005cb2:	jae    0x140005d1f
   140005cb4:	push   rax
   140005cb5:	(bad)  
   140005cb6:	addr32 gs rex
   140005cb9:	imul   r14d,DWORD PTR [rdx+0x65],0x49557463
   140005cc1:	rex
   140005cc2:	rex
   140005cc3:	rex.WRB
   140005cc4:	rex.RB
   140005cc5:	rex.B
   140005cc6:	pop    r8
   140005cc8:	push   rax
   140005cc9:	rex.RB
   140005cca:	push   r14
   140005ccc:	rex.RB ins BYTE PTR es:[rdi],dx
   140005cce:	gs ins DWORD PTR es:[rdi],dx
   140005cd0:	outs   dx,BYTE PTR gs:[rsi]
   140005cd2:	je     0x140005d14
   140005cd4:	xor    al,BYTE PTR [rax+0x40]
   140005cd7:	pop    rdx
   140005cd8:	add    BYTE PTR [rax],al
   140005cda:	data16 or bh,BYTE PTR [rdi]
   140005cdd:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
   140005cdf:	rex.WRB
   140005ce0:	gs jae 0x140005d56
   140005ce3:	(bad)  
   140005ce4:	addr32 gs rex push rsp
   140005ce8:	(bad)  
   140005ce9:	jae    0x140005d56
   140005ceb:	push   rax
   140005cec:	(bad)  
   140005ced:	addr32 gs rex
   140005cf0:	imul   r14d,DWORD PTR [rdx+0x65],0x49557463
   140005cf8:	rex
   140005cf9:	rex
   140005cfa:	rex.WRB
   140005cfb:	rex.RB
   140005cfc:	rex.B
   140005cfd:	pop    r15
   140005cff:	rex.WRX
   140005d00:	rex.WB pop r15
   140005d02:	rex.WXB pop r15
   140005d04:	rex.WX push rax
   140005d06:	rex.RB
   140005d07:	pop    r15
   140005d09:	rex.WX
   140005d0a:	rex pop rdx
   140005d0c:	add    BYTE PTR [rax],al
   140005d0e:	mov    al,0xa
   140005d10:	(bad)  
   140005d11:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
   140005d13:	push   rcx
   140005d14:	jne    0x140005d7b
   140005d16:	jb     0x140005d91
   140005d18:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140005d1a:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x636f466c
   140005d22:	jne    0x140005d97
   140005d24:	rex push rsp
   140005d26:	(bad)  
   140005d27:	jae    0x140005d94
   140005d29:	push   rax
   140005d2a:	(bad)  
   140005d2b:	addr32 gs rex
   140005d2e:	imul   r14d,DWORD PTR [rdx+0x65],0x49557463
   140005d36:	rex
   140005d37:	rex
   140005d38:	rex.WRB
   140005d39:	rex.RB
   140005d3a:	rex.B
   140005d3b:	push   r8
   140005d3d:	rex.RB
   140005d3e:	push   r14
   140005d40:	rex.RB ins BYTE PTR es:[rdi],dx
   140005d42:	gs ins DWORD PTR es:[rdi],dx
   140005d44:	outs   dx,BYTE PTR gs:[rsi]
   140005d46:	je     0x140005d88
   140005d48:	xor    al,BYTE PTR [rax+0x58]
   140005d4b:	pop    rdx
   140005d4c:	add    BYTE PTR [rax],al
   140005d4e:	(bad)  
   140005d4f:	or     bh,BYTE PTR [rdi]
   140005d51:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
   140005d53:	push   rdi
   140005d54:	imul   edi,DWORD PTR [rdx+0x4e],0x40747865
   140005d5b:	push   rsp
   140005d5c:	(bad)  
   140005d5d:	jae    0x140005dca
   140005d5f:	push   rax
   140005d60:	(bad)  
   140005d61:	addr32 gs rex
   140005d64:	imul   r14d,DWORD PTR [rdx+0x65],0x49557463
   140005d6c:	rex
   140005d6d:	rex
   140005d6e:	rex.WRB
   140005d6f:	rex.RB
   140005d70:	rex.B
   140005d71:	pop    r15
   140005d73:	rex.WX pop rax
   140005d75:	pop    rdx
   140005d76:	add    BYTE PTR [rax],al
   140005d78:	ror    DWORD PTR [rdx],cl
   140005d7a:	(bad)  
   140005d7b:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
   140005d7d:	push   rdi
   140005d7e:	imul   edi,DWORD PTR [rdx+0x46],0x73696e69
   140005d85:	push   0x73615440
   140005d8a:	imul   edx,DWORD PTR [rax+0x61],0x67
   140005d8e:	gs rex
   140005d90:	imul   r14d,DWORD PTR [rdx+0x65],0x49557463
   140005d98:	rex
   140005d99:	rex
   140005d9a:	rex.WRB
   140005d9b:	rex.RB
   140005d9c:	rex.B
   140005d9d:	pop    r15
   140005d9f:	rex.WX pop rax
   140005da1:	pop    rdx
   140005da2:	add    BYTE PTR [rax],al
   140005da4:	ror    BYTE PTR [rdx],cl
   140005da6:	(bad)  
   140005da7:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
   140005da9:	push   rdi
   140005daa:	imul   edi,DWORD PTR [rdx+0x42],0x406b6361
   140005db1:	push   rsp
   140005db2:	(bad)  
   140005db3:	jae    0x140005e20
   140005db5:	push   rax
   140005db6:	(bad)  
   140005db7:	addr32 gs rex
   140005dba:	imul   r14d,DWORD PTR [rdx+0x65],0x49557463
   140005dc2:	rex
   140005dc3:	rex
   140005dc4:	rex.WRB
   140005dc5:	rex.RB
   140005dc6:	rex.B
   140005dc7:	pop    r15
   140005dc9:	rex.WX pop rax
   140005dcb:	pop    rdx
   140005dcc:	add    BYTE PTR [rax],al
   140005dce:	mov    esi,0x6e4f3f0a
   140005dd3:	push   rdx
   140005dd4:	gs jae 0x140005e3c
   140005dd7:	je     0x140005e19
   140005dd9:	push   rsp
   140005dda:	(bad)  
   140005ddb:	jae    0x140005e48
   140005ddd:	push   rax
   140005dde:	(bad)  
   140005ddf:	addr32 gs rex
   140005de2:	imul   r14d,DWORD PTR [rdx+0x65],0x49557463
   140005dea:	rex
   140005deb:	rex
   140005dec:	rex.WRB
   140005ded:	rex.RB
   140005dee:	rex.B
   140005def:	pop    r15
   140005df1:	rex.WX pop rax
   140005df3:	pop    rdx
   140005df4:	add    BYTE PTR [rax],al
   140005df6:	scas   eax,DWORD PTR es:[rdi]
   140005df7:	or     bh,BYTE PTR [rdi]
   140005df9:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
   140005dfb:	push   rcx
   140005dfc:	jne    0x140005e63
   140005dfe:	jb     0x140005e79
   140005e00:	rex.XB (bad) 
   140005e02:	outs   dx,BYTE PTR ds:[rsi]
   140005e03:	movsxd esp,DWORD PTR [rbp+0x6c]
   140005e06:	rex push rsp
   140005e08:	(bad)  
   140005e09:	jae    0x140005e76
   140005e0b:	push   rax
   140005e0c:	(bad)  
   140005e0d:	addr32 gs rex
   140005e10:	imul   r14d,DWORD PTR [rdx+0x65],0x49557463
   140005e18:	rex
   140005e19:	rex
   140005e1a:	rex.WRB
   140005e1b:	rex.RB
   140005e1c:	rex.B
   140005e1d:	pop    r15
   140005e1f:	rex.WX pop rax
   140005e21:	pop    rdx
   140005e22:	add    BYTE PTR [rax],al
   140005e24:	mov    ecx,0x6e493f08
   140005e29:	imul   esi,DWORD PTR [rax+rdx*2+0x72],0x6853706f
   140005e31:	gs gs je 0x140005e85
   140005e35:	(bad)  
   140005e36:	addr32 gs rex push rsp
   140005e3a:	(bad)  
   140005e3b:	jae    0x140005ea8
   140005e3d:	push   rax
   140005e3e:	(bad)  
   140005e3f:	addr32 gs rex
   140005e42:	imul   r14d,DWORD PTR [rdx+0x65],0x49557463
   140005e4a:	rex
   140005e4b:	rex
   140005e4c:	rex.WRB
   140005e4d:	rex.RB
   140005e4e:	rex.B
   140005e4f:	pop    r8
   140005e51:	push   rax
   140005e52:	rex.RB
   140005e53:	push   r13
   140005e55:	pop    rdi
   140005e56:	push   rax
   140005e57:	push   rdx
   140005e58:	rex.WRXB push r8
   140005e5a:	push   rbx
   140005e5b:	rex.W
   140005e5c:	rex.RB
   140005e5d:	rex.RB push r12
   140005e5f:	push   rax
   140005e60:	rex.B
   140005e61:	rex.RXB
   140005e62:	rex.RB push r15
   140005e64:	rex
   140005e65:	rex
   140005e66:	rex pop rdx
   140005e68:	add    BYTE PTR [rax],al
   140005e6a:	mov    WORD PTR [rcx],cs
   140005e6c:	(bad)  
   140005e6d:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140005e6f:	(bad)  
   140005e70:	fs push rax
   140005e72:	(bad)  
   140005e73:	addr32 gs rex push rsp
   140005e77:	(bad)  
   140005e78:	jae    0x140005ee5
   140005e7a:	push   rax
   140005e7b:	(bad)  
   140005e7c:	addr32 gs rex
   140005e7f:	imul   r14d,DWORD PTR [rdx+0x65],0x49557463
   140005e87:	rex
   140005e88:	rex
   140005e89:	rex.WRB
   140005e8a:	rex.RB
   140005e8b:	rex.B
   140005e8c:	rex.B
   140005e8d:	rex.WX push rax
   140005e8f:	rex.RB
   140005e90:	push   r14
   140005e92:	rex.W push rdi
   140005e94:	rex.WRX
   140005e95:	rex.R
   140005e96:	rex.RB ins BYTE PTR es:[rdi],dx
   140005e98:	gs ins DWORD PTR es:[rdi],dx
   140005e9a:	outs   dx,BYTE PTR gs:[rsi]
   140005e9c:	je     0x140005ede
   140005e9e:	xor    al,BYTE PTR [rax+0x50]
   140005ea1:	rex.RB
   140005ea2:	push   r13
   140005ea4:	rex.W
   140005ea5:	rex.WB
   140005ea6:	rex.WRX push rbx
   140005ea8:	push   rsp
   140005ea9:	rex.B
   140005eaa:	rex.WRX
   140005eab:	rex.XB
   140005eac:	rex.RB pop r15
   140005eae:	pop    rdi
   140005eaf:	rex
   140005eb0:	rex push rax
   140005eb2:	rex.RB
   140005eb3:	push   r8
   140005eb5:	rex.RB
   140005eb6:	push   r14
   140005eb8:	rex.RB ins BYTE PTR es:[rdi],dx
   140005eba:	gs ins DWORD PTR es:[rdi],dx
   140005ebc:	outs   dx,BYTE PTR gs:[rsi]
   140005ebe:	je     0x140005f00
   140005ec0:	xor    al,BYTE PTR [rax+0x50]
   140005ec3:	rex.RB
   140005ec4:	push   r8
   140005ec6:	rex.RB
   140005ec7:	push   r14
   140005ec9:	rex.R push rbp
   140005ecb:	rex.WB pop r8
   140005ecd:	ins    DWORD PTR es:[rdi],dx
   140005ece:	ins    BYTE PTR es:[rdi],dx
   140005ecf:	push   rax
   140005ed0:	(bad)  
   140005ed1:	jb     0x140005f46
   140005ed3:	gs jb  0x140005f16
   140005ed6:	xor    al,BYTE PTR [rax+0x40]
   140005ed9:	pop    rdx
   140005eda:	add    BYTE PTR [rax],al
   140005edc:	and    eax,0x65533f0d
   140005ee1:	je     0x140005f30
   140005ee3:	(bad)  
   140005ee4:	js     0x140005f32
   140005ee6:	outs   dx,BYTE PTR gs:[rsi]
   140005ee8:	addr32 je 0x140005f53
   140005eeb:	rex
   140005eec:	rex.RB
   140005eed:	imul   esi,DWORD PTR fs:[rax+rax*2+0x44],0x63657269
   140005ef6:	je     0x140005f4d
   140005ef8:	rex.WB
   140005ef9:	rex
   140005efa:	rex push rcx
   140005efc:	rex.RB
   140005efd:	rex.B
   140005efe:	rex.B
   140005eff:	rex.WX
   140005f00:	rex.W
   140005f01:	rex pop rdx
   140005f03:	add    dl,bl
   140005f05:	or     al,0x3f
   140005f07:	push   rbx
   140005f08:	gs je  0x140005f50
   140005f0b:	outs   dx,BYTE PTR ds:[rsi]
   140005f0c:	(bad)  
   140005f0d:	(bad)  
   140005f0e:	ins    BYTE PTR es:[rdi],dx
   140005f0f:	gs fs rex
   140005f12:	rex.RB ins BYTE PTR es:[rdi],dx
   140005f14:	gs ins DWORD PTR es:[rdi],dx
   140005f16:	outs   dx,BYTE PTR gs:[rsi]
   140005f18:	je     0x140005f5a
   140005f1a:	imul   r14d,DWORD PTR [rdx+0x65],0x49557463
   140005f22:	rex
   140005f23:	rex push rcx
   140005f25:	rex.RB
   140005f26:	rex.B
   140005f27:	rex.B
   140005f28:	rex.WX pop rdi
   140005f2a:	rex.WRX
   140005f2b:	rex pop rdx
   140005f2d:	add    BYTE PTR [rdi+0x65533f0c],bh
   140005f33:	je     0x140005f78
   140005f35:	outs   dx,DWORD PTR ds:[rsi]
   140005f36:	outs   dx,BYTE PTR ds:[rsi]
   140005f37:	je     0x140005f9e
   140005f39:	outs   dx,BYTE PTR ds:[rsi]
   140005f3a:	je     0x140005f8f
   140005f3c:	je     0x140005fb0
   140005f3e:	imul   ebp,DWORD PTR [rsi+0x67],0x656c4540
   140005f45:	ins    DWORD PTR es:[rdi],dx
   140005f46:	outs   dx,BYTE PTR gs:[rsi]
   140005f48:	je     0x140005f8a
   140005f4a:	imul   r14d,DWORD PTR [rdx+0x65],0x49557463
   140005f52:	rex
   140005f53:	rex push rcx
   140005f55:	rex.RB
   140005f56:	rex.B
   140005f57:	rex.B
   140005f58:	rex.WX push rax
   140005f5a:	rex.RB
   140005f5b:	rex.X
   140005f5c:	rex.RXB
   140005f5d:	rex pop rdx
   140005f5f:	add    BYTE PTR [rcx],bl
   140005f61:	or     eax,0x7465533f
   140005f66:	rex.WR (bad) 
   140005f68:	jns    0x140005fd9
   140005f6a:	jne    0x140005fe0
   140005f6c:	push   rax
   140005f6d:	outs   dx,DWORD PTR ds:[rsi]
   140005f6e:	jae    0x140005fb0
   140005f70:	rex.RB ins BYTE PTR es:[rdi],dx
   140005f72:	gs ins DWORD PTR es:[rdi],dx
   140005f74:	outs   dx,BYTE PTR gs:[rsi]
   140005f76:	je     0x140005fb8
   140005f78:	imul   r14d,DWORD PTR [rdx+0x65],0x49557463
   140005f80:	rex
   140005f81:	rex push rcx
   140005f83:	rex.RB
   140005f84:	rex.B
   140005f85:	rex.B
   140005f86:	rex.WX
   140005f87:	rex.W
   140005f88:	rex pop rdx
   140005f8a:	add    BYTE PTR [rax],al
   140005f8c:	ret    
   140005f8d:	or     eax,0x7465533f
   140005f92:	push   rsi
   140005f93:	imul   esi,DWORD PTR [rbx+0x69],0x40656c62
   140005f9a:	rex.RB ins BYTE PTR es:[rdi],dx
   140005f9c:	gs ins DWORD PTR es:[rdi],dx
   140005f9e:	outs   dx,BYTE PTR gs:[rsi]
   140005fa0:	je     0x140005fe2
   140005fa2:	imul   r14d,DWORD PTR [rdx+0x65],0x49557463
   140005faa:	rex
   140005fab:	rex push rcx
   140005fad:	rex.RB
   140005fae:	rex.B
   140005faf:	rex.B
   140005fb0:	rex.WX pop rdi
   140005fb2:	rex.WRX
   140005fb3:	rex pop rdx
   140005fb5:	add    BYTE PTR [rbp+rdx*2+0x49],al
   140005fb9:	(bad)  
   140005fba:	xor    BYTE PTR [rsi],ch
   140005fbc:	fs ins BYTE PTR es:[rdi],dx
   140005fbe:	ins    BYTE PTR es:[rdi],dx
   140005fbf:	add    BYTE PTR [rsi+0x6d656d04],dl
   140005fc5:	jae    0x14000602c
   140005fc7:	je     0x140005fc9
	...

Disassembly of section .data:

0000000140006000 <.data>:
   140006000:	add    DWORD PTR [rax],eax
   140006002:	add    BYTE PTR [rax],al
   140006004:	add    BYTE PTR [rax],al
   140006006:	add    BYTE PTR [rax],al
   140006008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000600e:	add    BYTE PTR [rax],al
   140006010:	int    0x5d
   140006012:	and    dl,dl
   140006014:	data16 (bad) 
   140006016:	(bad)  
   140006017:	inc    DWORD PTR [rax]
	...

Disassembly of section .pdata:

0000000140007000 <.pdata>:
   140007000:	or     BYTE PTR [rax],dl
   140007002:	add    BYTE PTR [rax],al
   140007004:	mov    esi,0xd0000011
   140007009:	rex.WX add BYTE PTR [rax],al
   14000700c:	(bad)  
   14000700d:	adc    DWORD PTR [rax],eax
   14000700f:	add    ch,cl
   140007011:	adc    al,BYTE PTR [rax]
   140007013:	add    BYTE PTR [rax],cl
   140007015:	rex.WXB add BYTE PTR [r8],al
   140007018:	add    BYTE PTR [rbx],dl
   14000701a:	add    BYTE PTR [rax],al
   14000701c:	loope  0x140007031
   14000701e:	add    BYTE PTR [rax],al
   140007020:	adc    al,0x4b
   140007022:	add    BYTE PTR [rax],al
   140007024:	add    BYTE PTR [rax+rax*1],dl
   140007027:	add    BYTE PTR [rsi+rdx*1+0x0],ch
   14000702b:	add    BYTE PTR [rax],ah
   14000702d:	rex.WXB add BYTE PTR [r8],al
   140007030:	je     0x140007048
   140007032:	add    BYTE PTR [rax],al
   140007034:	jne    0x14000704e
   140007036:	add    BYTE PTR [rax],al
   140007038:	rex.R
   140007039:	rex.WXB add BYTE PTR [r8],al
   14000703c:	sbb    BYTE PTR [rax],0x0
   14000703f:	add    BYTE PTR [rax+0x14000018],dh
   140007045:	rex.WXB add BYTE PTR [r8],al
   140007048:	mov    eax,0x3000018
   14000704d:	sbb    al,BYTE PTR [rax]
   14000704f:	add    BYTE PTR [rbx+rcx*2+0x0],dl
   140007053:	add    BYTE PTR [rdx+rbx*1],cl
   140007056:	add    BYTE PTR [rax],al
   140007058:	repz sbb al,BYTE PTR [rax]
   14000705b:	add    BYTE PTR [rbx+rcx*2+0x0],ch
   14000705f:	add    ah,bh
   140007061:	sbb    al,BYTE PTR [rax]
   140007063:	add    BYTE PTR [rbx],cl
   140007065:	sbb    eax,0x4b7c0000
   14000706a:	add    BYTE PTR [rax],al
   14000706c:	adc    al,0x1d
   14000706e:	add    BYTE PTR [rax],al
   140007070:	jno    0x14000708f
   140007072:	add    BYTE PTR [rax],al
   140007074:	pushf  
   140007075:	rex.WXB add BYTE PTR [r8],al
   140007078:	js     0x140007097
   14000707a:	add    BYTE PTR [rax],al
   14000707c:	(bad)  
   14000707d:	sbb    eax,0x4ba40000
   140007082:	add    BYTE PTR [rax],al
   140007084:	fcomp  QWORD PTR [rip+0x1f690000]        # 0x15f69708a
   14000708a:	add    BYTE PTR [rax],al
   14000708c:	lods   al,BYTE PTR ds:[rsi]
   14000708d:	rex.WXB add BYTE PTR [r8],al
   140007090:	jo     0x1400070b1
   140007092:	add    BYTE PTR [rax],al
   140007094:	(bad)  
   140007095:	and    eax,DWORD PTR [rax]
   140007097:	add    BYTE PTR [rbx+rcx*2+0x23200000],bh
   14000709e:	add    BYTE PTR [rax],al
   1400070a0:	imul   esp,DWORD PTR [rax+rax*1],0x4be000
   1400070a7:	add    BYTE PTR [rax+0x24],dh
   1400070aa:	add    BYTE PTR [rax],al
   1400070ac:	sbb    esp,DWORD PTR [rsi]
   1400070ae:	add    BYTE PTR [rax],al
   1400070b0:	hlt    
   1400070b1:	rex.WXB add BYTE PTR [r8],al
   1400070b4:	xor    BYTE PTR [rsi],ah
   1400070b6:	add    BYTE PTR [rax],al
   1400070b8:	imul   esp,DWORD PTR [rsi],0x4b140000
   1400070be:	add    BYTE PTR [rax],al
   1400070c0:	jo     0x1400070e8
   1400070c2:	add    BYTE PTR [rax],al
   1400070c4:	(bad)  
   1400070c5:	(bad)  
   1400070c6:	add    BYTE PTR [rax],al
   1400070c8:	rex.WR
   1400070c9:	rex.WR add BYTE PTR [rax],r8b
   1400070cc:	push   rax
   1400070cd:	(bad)  
   1400070ce:	add    BYTE PTR [rax],al
   1400070d0:	cdq    
   1400070d1:	(bad)  
   1400070d2:	add    BYTE PTR [rax],al
   1400070d4:	add    al,0x4c
   1400070d6:	add    BYTE PTR [rax],al
   1400070d8:	movabs al,ds:0x4c000027b2000027
   1400070e1:	rex.WR add BYTE PTR [rax],r8b
   1400070e4:	mov    eax,0xe000027
   1400070e9:	sub    al,BYTE PTR [rax]
   1400070eb:	add    BYTE PTR [rsp+rcx*2],cl
   1400070ee:	add    BYTE PTR [rax],al
   1400070f0:	and    BYTE PTR [rdx],ch
   1400070f2:	add    BYTE PTR [rax],al
   1400070f4:	sub    al,BYTE PTR ds:[rax]
   1400070f7:	add    BYTE PTR [rax+0x4c],al
   1400070fa:	add    BYTE PTR [rax],al
   1400070fc:	sub    r8b,BYTE PTR [rax]
   1400070ff:	add    BYTE PTR [rax+0x2a],bh
   140007102:	add    BYTE PTR [rax],al
   140007104:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140007105:	rex.WXB add BYTE PTR [r8],al
   140007108:	sub    BYTE PTR [rdx],0x0
   14000710b:	add    cl,dh
   14000710d:	sub    eax,DWORD PTR [rax]
   14000710f:	add    BYTE PTR [rsp+rcx*2+0x0],al
   140007113:	add    BYTE PTR [rax],ah
   140007115:	sub    al,0x0
   140007117:	add    BYTE PTR [rcx+0x2c],bl
   14000711a:	add    BYTE PTR [rax],al
   14000711c:	rex.WR
   14000711d:	rex.WR add BYTE PTR [rax],r8b
   140007120:	(bad)  
   140007121:	sub    al,0x0
   140007123:	add    BYTE PTR [rax+0x2c],bh
   140007126:	add    BYTE PTR [rax],al
   140007128:	rex.WR
   140007129:	rex.WR add BYTE PTR [rax],r8b
   14000712c:	mov    WORD PTR [rax+rax*1],gs
   14000712f:	add    al,ah
   140007131:	sub    al,0x0
   140007133:	add    BYTE PTR [rsp+rcx*2+0x0],dl
   140007137:	add    al,ch
   140007139:	sub    al,0x0
   14000713b:	add    BYTE PTR [rip+0xffffffffa400002d],ch        # 0xe400716e
   140007141:	rex.WXB add BYTE PTR [r8],al
   140007144:	nop
   140007145:	sub    eax,0x2ddd0000
   14000714a:	add    BYTE PTR [rax],al
   14000714c:	je     0x14000719a
   14000714e:	add    BYTE PTR [rax],al
   140007150:	and    al,0x2e
   140007152:	add    BYTE PTR [rax],al
   140007154:	hlt    
   140007155:	add    BYTE PTR cs:[rax],al
   140007158:	cwde   
   140007159:	rex.WR add BYTE PTR [rax],r8b
   14000715c:	pop    rsp
   14000715d:	xor    BYTE PTR [rax],al
   14000715f:	add    BYTE PTR [rcx+0x30],bh
   140007162:	add    BYTE PTR [rax],al
   140007164:	rex.WR
   140007165:	rex.WR add BYTE PTR [rax],r8b
   140007168:	xor    BYTE PTR [rax],0x0
   14000716b:	add    bl,ah
   14000716d:	xor    BYTE PTR [rax],al
   14000716f:	add    BYTE PTR [rbx+rcx*2+0x31000000],ah
   140007176:	add    BYTE PTR [rax],al
   140007178:	add    dh,BYTE PTR [rcx]
   14000717a:	add    BYTE PTR [rax],al
   14000717c:	test   al,0x4c
   14000717e:	add    BYTE PTR [rax],al
   140007180:	(bad)  
   140007181:	xor    DWORD PTR [rax],eax
   140007183:	add    BYTE PTR [rax],dh
   140007185:	xor    DWORD PTR [rax],eax
   140007187:	add    BYTE PTR [rax],al
   140007189:	rex.WXB add BYTE PTR [r8],al
   14000718c:	xor    DWORD PTR ss:[rax],eax
   14000718f:	add    BYTE PTR [rcx+rsi*1+0x0],dl
   140007193:	add    BYTE PTR [rax],al
   140007195:	rex.WXB add BYTE PTR [r8],al
   140007198:	(bad)  
   140007199:	xor    DWORD PTR [rax],eax
   14000719b:	add    BYTE PTR [rax+0x31],al
   1400071a1:	rex.WXB add BYTE PTR [r8],al

Disassembly of section .rsrc:

0000000140008000 <.rsrc>:
	...
   14000800c:	add    al,BYTE PTR [rax]
   14000800e:	add    al,0x0
   140008010:	jle    0x140008015
   140008012:	add    BYTE PTR [rax-0x7fffffc0],al
   140008018:	jo     0x14000801d
   14000801a:	add    BYTE PTR [rax-0x7fffffa8],al
   140008020:	add    eax,DWORD PTR [rax]
   140008022:	add    BYTE PTR [rax],al
   140008024:	jo     0x140008026
   140008026:	add    BYTE PTR [rax+0xe],al
   14000802c:	rol    BYTE PTR [rax],1
   14000802e:	add    BYTE PTR [rax+0x10],al
   140008034:	call   0x158808039
   140008039:	add    BYTE PTR [rax],al
   14000803b:	add    BYTE PTR [rax],al
   14000803d:	add    DWORD PTR [rax],eax
   14000803f:	add    BYTE PTR [rax],0x0
	...
   14000804e:	add    DWORD PTR [rax],eax
   140008050:	add    DWORD PTR [rax],eax
   140008052:	add    BYTE PTR [rax],al
   140008054:	sbb    BYTE PTR [rcx],al
   140008056:	add    BYTE PTR [rax+0x0],al
	...
   140008064:	add    BYTE PTR [rax],al
   140008066:	add    DWORD PTR [rax],eax
   140008068:	adc    al,0x0
   14000806a:	add    BYTE PTR [rax],al
   14000806c:	xor    BYTE PTR [rcx],al
   14000806e:	add    BYTE PTR [rax+0x0],al
	...
   14000807c:	add    BYTE PTR [rax],al
   14000807e:	or     al,BYTE PTR [rax]
   140008080:	add    DWORD PTR [rax],eax
   140008082:	add    BYTE PTR [rax],al
   140008084:	add    QWORD PTR [rax],rax
   140008087:	add    BYTE PTR [rdx],0x0
   14000808a:	add    BYTE PTR [rax],al
   14000808c:	(bad)  
   14000808d:	add    DWORD PTR [rax],eax
   14000808f:	add    BYTE PTR [rbx],0x0
   140008092:	add    BYTE PTR [rax],al
   140008094:	js     0x140008097
   140008096:	add    BYTE PTR [rax+0x4],al
   14000809c:	nop
   14000809d:	add    DWORD PTR [rax],eax
   14000809f:	add    BYTE PTR [rip+0xffffffffa8000000],0x1        # 0xe80080a6
   1400080a6:	add    BYTE PTR [rax+0x6],al
   1400080ac:	rol    BYTE PTR [rcx],0x0
   1400080af:	add    BYTE PTR [rdi],0x0
   1400080b2:	add    BYTE PTR [rax],al
   1400080b4:	fadd   DWORD PTR [rcx]
   1400080b6:	add    BYTE PTR [rax+0x8],al
   1400080bc:	lock add DWORD PTR [rax],eax
   1400080bf:	or     BYTE PTR [rcx],0x0
   1400080c2:	add    BYTE PTR [rax],al
   1400080c4:	or     BYTE PTR [rdx],al
   1400080c6:	add    BYTE PTR [rax+0xa],al
   1400080cc:	and    BYTE PTR [rdx],al
   1400080ce:	add    BYTE PTR [rax+0x0],al
	...
   1400080dc:	add    BYTE PTR [rax],al
   1400080de:	add    DWORD PTR [rax],eax
   1400080e0:	add    BYTE PTR [rax],al
   1400080e3:	add    BYTE PTR [rax],bh
   1400080e5:	add    al,BYTE PTR [rax]
   1400080e7:	add    BYTE PTR [rax],0x0
	...
   1400080f6:	add    DWORD PTR [rax],eax
   1400080f8:	add    DWORD PTR [rax],eax
   1400080fa:	add    BYTE PTR [rax],al
   1400080fc:	push   rax
   1400080fd:	add    al,BYTE PTR [rax]
   1400080ff:	add    BYTE PTR [rax],0x0
	...
   14000810e:	add    DWORD PTR [rax],eax
   140008110:	add    DWORD PTR [rax],eax
   140008112:	add    BYTE PTR [rax],al
   140008114:	push   0x800002
	...
   140008125:	add    BYTE PTR [rcx],al
   140008127:	add    BYTE PTR [rcx],cl
   140008129:	add    al,0x0
   14000812b:	add    BYTE PTR [rax+0x2],al
	...
   14000813d:	add    BYTE PTR [rcx],al
   14000813f:	add    BYTE PTR [rcx],cl
   140008141:	add    al,0x0
   140008143:	add    BYTE PTR [rax+0x2],dl
	...
   140008155:	add    BYTE PTR [rcx],al
   140008157:	add    BYTE PTR [rcx],cl
   140008159:	add    al,0x0
   14000815b:	add    BYTE PTR [rax+0x2],ah
	...
   14000816d:	add    BYTE PTR [rcx],al
   14000816f:	add    BYTE PTR [rcx],cl
   140008171:	add    al,0x0
   140008173:	add    BYTE PTR [rax+0x2],dh
	...
   140008185:	add    BYTE PTR [rcx],al
   140008187:	add    BYTE PTR [rcx],cl
   140008189:	add    al,0x0
   14000818b:	add    al,al
   14000818d:	add    al,BYTE PTR [rax]
	...
   14000819b:	add    BYTE PTR [rax],al
   14000819d:	add    BYTE PTR [rcx],al
   14000819f:	add    BYTE PTR [rcx],cl
   1400081a1:	add    al,0x0
   1400081a3:	add    al,dl
   1400081a5:	add    al,BYTE PTR [rax]
	...
   1400081b3:	add    BYTE PTR [rax],al
   1400081b5:	add    BYTE PTR [rcx],al
   1400081b7:	add    BYTE PTR [rcx],cl
   1400081b9:	add    al,0x0
   1400081bb:	add    al,ah
   1400081bd:	add    al,BYTE PTR [rax]
	...
   1400081cb:	add    BYTE PTR [rax],al
   1400081cd:	add    BYTE PTR [rcx],al
   1400081cf:	add    BYTE PTR [rcx],cl
   1400081d1:	add    al,0x0
   1400081d3:	add    al,dh
   1400081d5:	add    al,BYTE PTR [rax]
	...
   1400081e3:	add    BYTE PTR [rax],al
   1400081e5:	add    BYTE PTR [rcx],al
   1400081e7:	add    BYTE PTR [rcx],cl
   1400081e9:	add    al,0x0
   1400081eb:	add    BYTE PTR [rax],al
   1400081ed:	add    eax,DWORD PTR [rax]
	...
   1400081fb:	add    BYTE PTR [rax],al
   1400081fd:	add    BYTE PTR [rcx],al
   1400081ff:	add    BYTE PTR [rcx],cl
   140008201:	add    al,0x0
   140008203:	add    BYTE PTR [rax],dl
   140008205:	add    eax,DWORD PTR [rax]
	...
   140008213:	add    BYTE PTR [rax],al
   140008215:	add    BYTE PTR [rcx],al
   140008217:	add    BYTE PTR [rcx],cl
   140008219:	add    al,0x0
   14000821b:	add    BYTE PTR [rax],ah
   14000821d:	add    eax,DWORD PTR [rax]
	...
   14000822b:	add    BYTE PTR [rax],al
   14000822d:	add    BYTE PTR [rcx],al
   14000822f:	add    BYTE PTR [rcx],cl
   140008231:	add    al,0x0
   140008233:	add    BYTE PTR [rax],dh
   140008235:	add    eax,DWORD PTR [rax]
	...
   140008243:	add    BYTE PTR [rax],al
   140008245:	add    BYTE PTR [rcx],al
   140008247:	add    BYTE PTR [rcx],cl
   140008249:	add    al,0x0
   14000824b:	add    BYTE PTR [rax+0x3],al
	...
   14000825e:	add    DWORD PTR [rax],eax
   140008260:	or     DWORD PTR [rax+rax*1],eax
   140008263:	add    BYTE PTR [rax+0x3],dl
	...
   140008276:	add    DWORD PTR [rax],eax
   140008278:	or     DWORD PTR [rax+rax*1],eax
   14000827b:	add    BYTE PTR [rax+0x3],ah
   14000827e:	add    BYTE PTR [rax],al
   140008280:	pop    rax
   140008281:	pop    rbx
   140008282:	add    DWORD PTR [rax],eax
   140008284:	loopne 0x140008286
	...
   14000828e:	add    BYTE PTR [rax],al
   140008290:	ror    BYTE PTR [rbx+0xf6f0000],0x0
	...
   14000829f:	add    BYTE PTR [rax],dh
   1400082a1:	fwait
   1400082a2:	add    BYTE PTR [rax],al
   1400082a4:	push   0x6
   1400082a9:	add    BYTE PTR [rax],al
   1400082ab:	add    BYTE PTR [rax],al
   1400082ad:	add    BYTE PTR [rax],al
   1400082af:	add    BYTE PTR [rax-0x17ffff5f],bl
   1400082b5:	add    al,BYTE PTR [rax]
	...
   1400082bf:	add    BYTE PTR [rax+0x280000a4],al
   1400082c5:	add    DWORD PTR [rax],eax
	...
   1400082cf:	add    BYTE PTR [rax-0x57ffff5b],ch
   1400082d5:	(bad)  
	...
   1400082de:	add    BYTE PTR [rax],al
   1400082e0:	push   rax
   1400082e1:	mov    ah,0x0
   1400082e3:	add    BYTE PTR [rax+0x8],ch
   1400082e9:	add    BYTE PTR [rax],al
   1400082eb:	add    BYTE PTR [rax],al
   1400082ed:	add    BYTE PTR [rax],al
   1400082ef:	add    al,bh
   1400082f1:	mov    esp,0x5680000
	...
   1400082fe:	add    BYTE PTR [rax],al
   140008300:	(bad)  
   140008301:	ret    0x0
   140008304:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140008305:	pop    rbp
	...
   14000830e:	add    BYTE PTR [rax],al
   140008310:	or     BYTE PTR [rax],ah
   140008312:	add    DWORD PTR [rax],eax
   140008314:	test   al,0x25
	...
   14000831e:	add    BYTE PTR [rax],al
   140008320:	mov    al,0x45
   140008322:	add    DWORD PTR [rax],eax
   140008324:	test   al,0x10
	...
   14000832e:	add    BYTE PTR [rax],al
   140008330:	pop    rax
   140008331:	push   rsi
   140008332:	add    DWORD PTR [rax],eax
   140008334:	push   0x4
   140008339:	add    BYTE PTR [rax],al
   14000833b:	add    BYTE PTR [rax],al
   14000833d:	add    BYTE PTR [rax],al
   14000833f:	add    al,al
   140008341:	pop    rdx
   140008342:	add    DWORD PTR [rax],eax
   140008344:	xchg   edx,eax
	...
   14000834d:	add    BYTE PTR [rax],al
   14000834f:	add    BYTE PTR [rax],ah
   140008351:	mov    BYTE PTR [rax],al
   140008353:	add    BYTE PTR [rbx+rax*1+0x0],bl
   14000835a:	add    BYTE PTR [rax],al
   14000835c:	add    BYTE PTR [rax],al
   14000835e:	add    BYTE PTR [rax],al
   140008360:	nop
   140008361:	add    DWORD PTR [rax],0x0
   140008364:	mov    eax,DWORD PTR [rax+rax*1]
	...
   14000836f:	add    BYTE PTR [rsi],al
   140008371:	add    BYTE PTR [rbp+0x0],dl
   140008374:	rex.WB add BYTE PTR [r14+0x0],al
   140008378:	rex.WB add BYTE PTR [r8+rax*1+0x45],cl
   14000837d:	add    BYTE PTR [rbx],al
   14000837f:	add    BYTE PTR [rbp+0x0],cl
   140008382:	push   rbp
   140008383:	add    BYTE PTR [rcx+0x0],cl
	...
   14000838e:	add    BYTE PTR [rax],al
   140008390:	cmp    al,0x3f
   140008392:	js     0x140008401
   140008394:	ins    BYTE PTR es:[rdi],dx
   140008395:	and    BYTE PTR [rsi+0x65],dh
   140008398:	jb     0x14000840d
   14000839a:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   1400083a1:	xor    BYTE PTR [rdx],ah
   1400083a3:	and    BYTE PTR [rbp+0x6e],ah
   1400083a6:	movsxd ebp,DWORD PTR [rdi+0x64]
   1400083a9:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   1400083b0:	rex.RX sub eax,0x73202238
   1400083b6:	je     0x140008419
   1400083b8:	outs   dx,BYTE PTR ds:[rsi]
   1400083b9:	fs (bad) 
   1400083bb:	ins    BYTE PTR es:[rdi],dx
   1400083bc:	outs   dx,DWORD PTR ds:[rsi]
   1400083bd:	outs   dx,BYTE PTR ds:[rsi]
   1400083be:	gs cmp eax,0x73657922
   1400083c4:	and    bh,BYTE PTR [rdi]
   1400083c6:	ds or  eax,0x2d213c0a
   1400083cc:	sub    eax,0x706f4320
   1400083d1:	jns    0x140008445
   1400083d3:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   1400083da:	sub    DWORD PTR [rax],esp
   1400083dc:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   1400083e4:	je     0x140008406
   1400083e6:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400083e8:	jb     0x14000845a
   1400083ea:	outs   dx,DWORD PTR ds:[rsi]
   1400083eb:	jb     0x14000844e
   1400083ed:	je     0x140008458
   1400083ef:	outs   dx,DWORD PTR ds:[rsi]
   1400083f0:	outs   dx,BYTE PTR ds:[rsi]
   1400083f1:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0dc224
   1400083f7:	and    BYTE PTR [rax],ah
   1400083f9:	and    BYTE PTR [rax],ah
   1400083fb:	cmp    al,0x61
   1400083fd:	jae    0x140008472
   1400083ff:	gs ins DWORD PTR es:[rdi],dx
   140008401:	(bad)  
   140008402:	ins    BYTE PTR es:[rdi],dx
   140008403:	jns    0x140008425
   140008405:	js     0x140008474
   140008407:	ins    BYTE PTR es:[rdi],dx
   140008408:	outs   dx,BYTE PTR ds:[rsi]
   140008409:	jae    0x140008448
   14000840b:	and    dh,BYTE PTR [rbp+0x72]
   14000840e:	outs   dx,BYTE PTR ds:[rsi]
   14000840f:	cmp    dh,BYTE PTR [rbx+0x63]
   140008412:	push   0x73616d65
   140008417:	sub    eax,0x7263696d
   14000841c:	outs   dx,DWORD PTR ds:[rsi]
   14000841d:	jae    0x14000848e
   14000841f:	data16 je 0x14000844f
   140008422:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140008425:	cmp    ah,BYTE PTR [rcx+0x73]
   140008428:	ins    DWORD PTR es:[rdi],dx
   140008429:	cs jbe 0x14000845d
   14000842c:	and    ah,BYTE PTR [rax]
   14000842e:	ins    DWORD PTR es:[rdi],dx
   14000842f:	(bad)  
   140008430:	outs   dx,BYTE PTR ds:[rsi]
   140008431:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   140008438:	jb     0x1400084ad
   14000843a:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   140008441:	xor    BYTE PTR [rdx],ah
   140008443:	ds or  eax,0x2020200a
   140008449:	and    BYTE PTR [rax],ah
   14000844b:	and    BYTE PTR [rax],ah
   14000844d:	and    BYTE PTR [rcx+riz*2],bh
   140008450:	jae    0x1400084c5
   140008452:	gs ins DWORD PTR es:[rdi],dx
   140008454:	(bad)  
   140008455:	ins    BYTE PTR es:[rdi],dx
   140008456:	jns    0x1400084a1
   140008458:	fs outs dx,BYTE PTR gs:[rsi]
   14000845b:	je     0x1400084c6
   14000845d:	je     0x1400084d8
   14000845f:	and    BYTE PTR [rsi+0x61],ch
   140008462:	ins    DWORD PTR es:[rdi],dx
   140008463:	gs cmp eax,0x63694d22
   140008469:	jb     0x1400084da
   14000846b:	jae    0x1400084dc
   14000846d:	data16 je 0x14000849e
   140008470:	push   rdi
   140008471:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   140008478:	rex.R push rbx
   14000847a:	cs fs jo 0x1400084df
   14000847e:	jo     0x1400084e9
   140008480:	ins    DWORD PTR es:[rdi],dx
   140008481:	imul   esp,DWORD PTR [rdi+0x22],0x20200a0d
   140008488:	and    BYTE PTR [rax],ah
   14000848a:	and    BYTE PTR [rax],ah
   14000848c:	and    BYTE PTR [rax],ah
   14000848e:	and    BYTE PTR [rax],ah
   140008490:	and    BYTE PTR [rax],ah
   140008492:	jo     0x140008506
   140008494:	outs   dx,DWORD PTR ds:[rsi]
   140008495:	movsxd esp,DWORD PTR [rbp+0x73]
   140008498:	jae    0x140008509
   14000849a:	jb     0x1400084dd
   14000849c:	jb     0x140008501
   14000849e:	push   0x63657469
   1400084a3:	je     0x14000851a
   1400084a5:	jb     0x14000850c
   1400084a7:	cmp    eax,0x646d6122
   1400084ac:	ss xor al,0x22
   1400084af:	or     eax,0x2020200a
   1400084b4:	and    BYTE PTR [rax],ah
   1400084b6:	and    BYTE PTR [rax],ah
   1400084b8:	and    BYTE PTR [rax],ah
   1400084ba:	and    BYTE PTR [rax],ah
   1400084bc:	and    BYTE PTR [rsi+0x65],dh
   1400084bf:	jb     0x140008534
   1400084c1:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e35223d
   1400084c8:	xor    DWORD PTR [rsi],ebp
   1400084ca:	xor    BYTE PTR [rsi],ch
   1400084cc:	xor    BYTE PTR [rdx],ah
   1400084ce:	or     eax,0x2020200a
   1400084d3:	and    BYTE PTR [rax],ah
   1400084d5:	and    BYTE PTR [rax],ah
   1400084d7:	and    BYTE PTR [rax],ah
   1400084d9:	and    BYTE PTR [rax],ah
   1400084db:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   1400084df:	gs cmp eax,0x6e697722
   1400084e5:	xor    esi,DWORD PTR [rdx]
   1400084e7:	and    ch,BYTE PTR [rdi]
   1400084e9:	ds or  eax,0x2020200a
   1400084ef:	and    BYTE PTR [rax],ah
   1400084f1:	and    BYTE PTR [rax],ah
   1400084f3:	and    BYTE PTR [rsp+riz*2],bh
   1400084f6:	gs jae 0x14000855c
   1400084f9:	jb     0x140008564
   1400084fb:	jo     0x140008571
   1400084fd:	imul   ebp,DWORD PTR [rdi+0x6e],0x6170643e
   140008504:	jo     0x14000856f
   140008506:	ins    DWORD PTR es:[rdi],dx
   140008507:	imul   esp,DWORD PTR [rdi+0x2e],0x3c657865
   14000850e:	(bad)  
   14000850f:	fs gs jae 0x140008576
   140008513:	jb     0x14000857e
   140008515:	jo     0x14000858b
   140008517:	imul   ebp,DWORD PTR [rdi+0x6e],0x200a0d3e
   14000851e:	and    BYTE PTR [rax],ah
   140008520:	and    BYTE PTR [rax],ah
   140008522:	and    BYTE PTR [rax],ah
   140008524:	and    BYTE PTR [rsp+riz*2],bh
   140008527:	gs jo  0x14000858f
   14000852a:	outs   dx,BYTE PTR ds:[rsi]
   14000852b:	fs outs dx,BYTE PTR gs:[rsi]
   14000852e:	movsxd edi,DWORD PTR [rcx+0x3e]
   140008531:	or     eax,0x2020200a
   140008536:	and    BYTE PTR [rax],ah
   140008538:	and    BYTE PTR [rax],ah
   14000853a:	and    BYTE PTR [rax],ah
   14000853c:	and    BYTE PTR [rax],ah
   14000853e:	and    BYTE PTR [rsp+riz*2],bh
   140008541:	gs jo  0x1400085a9
   140008544:	outs   dx,BYTE PTR ds:[rsi]
   140008545:	fs outs dx,BYTE PTR gs:[rsi]
   140008548:	je     0x14000858b
   14000854a:	jae    0x1400085bf
   14000854c:	gs ins DWORD PTR es:[rdi],dx
   14000854e:	(bad)  
   14000854f:	ins    BYTE PTR es:[rdi],dx
   140008550:	jns    0x140008590
   140008552:	or     eax,0x2020200a
   140008557:	and    BYTE PTR [rax],ah
   140008559:	and    BYTE PTR [rax],ah
   14000855b:	and    BYTE PTR [rax],ah
   14000855d:	and    BYTE PTR [rax],ah
   14000855f:	and    BYTE PTR [rcx+riz*2],bh
   140008562:	jae    0x1400085d7
   140008564:	gs ins DWORD PTR es:[rdi],dx
   140008566:	(bad)  
   140008567:	ins    BYTE PTR es:[rdi],dx
   140008568:	jns    0x1400085b3
   14000856a:	fs outs dx,BYTE PTR gs:[rsi]
   14000856d:	je     0x1400085d8
   14000856f:	je     0x1400085ea
   140008571:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   140008575:	gs cmp eax,0x6e697722
   14000857b:	xor    esi,DWORD PTR [rdx]
   14000857d:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16020a58d
   140008583:	and    BYTE PTR [rax],ah
   140008585:	and    BYTE PTR [rax],ah
   140008587:	and    BYTE PTR [rax],ah
   140008589:	and    BYTE PTR [rax],ah
   14000858b:	and    BYTE PTR [rax],ah
   14000858d:	and    BYTE PTR [rax],ah
   14000858f:	and    BYTE PTR [rsi+0x61],ch
   140008592:	ins    DWORD PTR es:[rdi],dx
   140008593:	gs cmp eax,0x63694d22
   140008599:	jb     0x14000860a
   14000859b:	jae    0x14000860c
   14000859d:	data16 je 0x1400085ce
   1400085a0:	push   rdi
   1400085a1:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   1400085a8:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400085aa:	ins    DWORD PTR es:[rdi],dx
   1400085ab:	ins    DWORD PTR es:[rdi],dx
   1400085ac:	outs   dx,DWORD PTR ds:[rsi]
   1400085ad:	outs   dx,BYTE PTR ds:[rsi]
   1400085ae:	sub    eax,0x746e6f43
   1400085b3:	jb     0x140008624
   1400085b5:	ins    BYTE PTR es:[rdi],dx
   1400085b6:	jae    0x1400085da
   1400085b8:	or     eax,0x2020200a
   1400085bd:	and    BYTE PTR [rax],ah
   1400085bf:	and    BYTE PTR [rax],ah
   1400085c1:	and    BYTE PTR [rax],ah
   1400085c3:	and    BYTE PTR [rax],ah
   1400085c5:	and    BYTE PTR [rax],ah
   1400085c7:	and    BYTE PTR [rax],ah
   1400085c9:	and    BYTE PTR [rsi+0x65],dh
   1400085cc:	jb     0x140008641
   1400085ce:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e36223d
   1400085d5:	xor    BYTE PTR [rsi],ch
   1400085d7:	xor    BYTE PTR [rsi],ch
   1400085d9:	xor    BYTE PTR [rdx],ah
   1400085db:	or     eax,0x2020200a
   1400085e0:	and    BYTE PTR [rax],ah
   1400085e2:	and    BYTE PTR [rax],ah
   1400085e4:	and    BYTE PTR [rax],ah
   1400085e6:	and    BYTE PTR [rax],ah
   1400085e8:	and    BYTE PTR [rax],ah
   1400085ea:	and    BYTE PTR [rax],ah
   1400085ec:	and    BYTE PTR [rax+0x72],dh
   1400085ef:	outs   dx,DWORD PTR ds:[rsi]
   1400085f0:	movsxd esp,DWORD PTR [rbp+0x73]
   1400085f3:	jae    0x140008664
   1400085f5:	jb     0x140008638
   1400085f7:	jb     0x14000865c
   1400085f9:	push   0x63657469
   1400085fe:	je     0x140008675
   140008600:	jb     0x140008667
   140008602:	cmp    eax,0xd222a22
   140008607:	or     ah,BYTE PTR [rax]
   140008609:	and    BYTE PTR [rax],ah
   14000860b:	and    BYTE PTR [rax],ah
   14000860d:	and    BYTE PTR [rax],ah
   14000860f:	and    BYTE PTR [rax],ah
   140008611:	and    BYTE PTR [rax],ah
   140008613:	and    BYTE PTR [rax],ah
   140008615:	and    BYTE PTR [rax],ah
   140008617:	and    BYTE PTR [rax+0x75],dh
   14000861a:	(bad)  
   14000861b:	ins    BYTE PTR es:[rdi],dx
   14000861c:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
   140008623:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
   140008627:	and    dh,BYTE PTR [rsi]
   140008629:	xor    eax,0x36623539
   14000862e:	xor    al,0x31
   140008630:	xor    al,0x34
   140008632:	movsxd esp,DWORD PTR [rbx+0x66]
   140008635:	xor    DWORD PTR [rsi+riz*2+0x22],esp
   140008639:	or     eax,0x2020200a
   14000863e:	and    BYTE PTR [rax],ah
   140008640:	and    BYTE PTR [rax],ah
   140008642:	and    BYTE PTR [rax],ah
   140008644:	and    BYTE PTR [rax],ah
   140008646:	and    BYTE PTR [rax],ah
   140008648:	and    BYTE PTR [rax],ah
   14000864a:	and    BYTE PTR [rcx+riz*2+0x6e],ch
   14000864e:	addr32 jne 0x1400086b2
   140008651:	addr32 gs cmp eax,0x20222a22
   140008658:	(bad)  
   140008659:	ds or  eax,0x2020200a
   14000865f:	and    BYTE PTR [rax],ah
   140008661:	and    BYTE PTR [rax],ah
   140008663:	and    BYTE PTR [rax],ah
   140008665:	and    BYTE PTR [rax],ah
   140008667:	and    BYTE PTR [rdi+rbp*1],bh
   14000866a:	fs gs jo 0x1400086d3
   14000866e:	outs   dx,BYTE PTR ds:[rsi]
   14000866f:	fs outs dx,BYTE PTR gs:[rsi]
   140008672:	je     0x1400086b5
   140008674:	jae    0x1400086e9
   140008676:	gs ins DWORD PTR es:[rdi],dx
   140008678:	(bad)  
   140008679:	ins    BYTE PTR es:[rdi],dx
   14000867a:	jns    0x1400086ba
   14000867c:	or     eax,0x2020200a
   140008681:	and    BYTE PTR [rax],ah
   140008683:	and    BYTE PTR [rax],ah
   140008685:	and    BYTE PTR [rdi+rbp*1],bh
   140008688:	fs gs jo 0x1400086f1
   14000868c:	outs   dx,BYTE PTR ds:[rsi]
   14000868d:	fs outs dx,BYTE PTR gs:[rsi]
   140008690:	movsxd edi,DWORD PTR [rcx+0x3e]
   140008693:	or     eax,0x200a0d0a
   140008698:	and    BYTE PTR [rax],ah
   14000869a:	and    BYTE PTR [rax],ah
   14000869c:	and    BYTE PTR [rax],ah
   14000869e:	and    BYTE PTR [rsp+rsi*2],bh
   1400086a1:	jb     0x140008718
   1400086a3:	jae    0x140008719
   1400086a5:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400086a7:	outs   dx,WORD PTR ds:[rsi]
   1400086a9:	and    BYTE PTR [rax+0x6d],bh
   1400086ac:	ins    BYTE PTR es:[rdi],dx
   1400086ad:	outs   dx,BYTE PTR ds:[rsi]
   1400086ae:	jae    0x1400086ed
   1400086b0:	and    dh,BYTE PTR [rbp+0x72]
   1400086b3:	outs   dx,BYTE PTR ds:[rsi]
   1400086b4:	cmp    dh,BYTE PTR [rbx+0x63]
   1400086b7:	push   0x73616d65
   1400086bc:	sub    eax,0x7263696d
   1400086c1:	outs   dx,DWORD PTR ds:[rsi]
   1400086c2:	jae    0x140008733
   1400086c4:	data16 je 0x1400086f4
   1400086c7:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400086ca:	cmp    ah,BYTE PTR [rcx+0x73]
   1400086cd:	ins    DWORD PTR es:[rdi],dx
   1400086ce:	cs jbe 0x140008704
   1400086d1:	and    bh,BYTE PTR [rsi]
   1400086d3:	or     eax,0x2020200a
   1400086d8:	and    BYTE PTR [rax],ah
   1400086da:	and    BYTE PTR [rax],ah
   1400086dc:	and    BYTE PTR [rax],ah
   1400086de:	and    BYTE PTR [rax],ah
   1400086e0:	and    BYTE PTR [rbx+rsi*2],bh
   1400086e3:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   1400086e7:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   1400086ef:	and    BYTE PTR [rax],ah
   1400086f1:	and    BYTE PTR [rax],ah
   1400086f3:	and    BYTE PTR [rax],ah
   1400086f5:	and    BYTE PTR [rax],ah
   1400086f7:	and    BYTE PTR [rax],ah
   1400086f9:	and    BYTE PTR [rax],ah
   1400086fb:	and    BYTE PTR [rax],ah
   1400086fd:	cmp    al,0x72
   1400086ff:	gs jno 0x140008777
   140008702:	gs jae 0x140008779
   140008705:	gs fs push rax
   140008708:	jb     0x140008773
   14000870a:	jbe    0x140008775
   14000870c:	ins    BYTE PTR es:[rdi],dx
   14000870d:	gs addr32 gs jae 0x140008750
   140008712:	or     eax,0x2020200a
   140008717:	and    BYTE PTR [rax],ah
   140008719:	and    BYTE PTR [rax],ah
   14000871b:	and    BYTE PTR [rax],ah
   14000871d:	and    BYTE PTR [rax],ah
   14000871f:	and    BYTE PTR [rax],ah
   140008721:	and    BYTE PTR [rax],ah
   140008723:	and    BYTE PTR [rax],ah
   140008725:	and    BYTE PTR [rax],ah
   140008727:	and    BYTE PTR [rdx+rsi*2],bh
   14000872a:	gs jno 0x1400087a2
   14000872d:	gs jae 0x1400087a4
   140008730:	gs fs rex.RB js 0x14000879a
   140008735:	movsxd esi,DWORD PTR [rbp+0x74]
   140008738:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14000873f:	ins    BYTE PTR es:[rdi],dx
   140008740:	or     eax,0x2020200a
   140008745:	and    BYTE PTR [rax],ah
   140008747:	and    BYTE PTR [rax],ah
   140008749:	and    BYTE PTR [rax],ah
   14000874b:	and    BYTE PTR [rax],ah
   14000874d:	and    BYTE PTR [rax],ah
   14000874f:	and    BYTE PTR [rax],ah
   140008751:	and    BYTE PTR [rax],ah
   140008753:	and    BYTE PTR [rax],ah
   140008755:	and    BYTE PTR [rax],ah
   140008757:	and    BYTE PTR [rax],ah
   140008759:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14000875d:	gs ins BYTE PTR es:[rdi],dx
   14000875f:	cmp    eax,0x49736122
   140008764:	outs   dx,BYTE PTR ds:[rsi]
   140008765:	jbe    0x1400087d6
   140008767:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14000876b:	or     eax,0x2020200a
   140008770:	and    BYTE PTR [rax],ah
   140008772:	and    BYTE PTR [rax],ah
   140008774:	and    BYTE PTR [rax],ah
   140008776:	and    BYTE PTR [rax],ah
   140008778:	and    BYTE PTR [rax],ah
   14000877a:	and    BYTE PTR [rax],ah
   14000877c:	and    BYTE PTR [rax],ah
   14000877e:	and    BYTE PTR [rax],ah
   140008780:	and    BYTE PTR [rax],ah
   140008782:	and    BYTE PTR [rax],ah
   140008784:	and    BYTE PTR [rbp+0x69],dh
   140008787:	movsxd esp,DWORD PTR [r11+0x65]
   14000878b:	jae    0x140008800
   14000878d:	cmp    eax,0x6c616622
   140008792:	jae    0x1400087f9
   140008794:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16020a7a4
   14000879a:	and    BYTE PTR [rax],ah
   14000879c:	and    BYTE PTR [rax],ah
   14000879e:	and    BYTE PTR [rax],ah
   1400087a0:	and    BYTE PTR [rax],ah
   1400087a2:	and    BYTE PTR [rax],ah
   1400087a4:	and    BYTE PTR [rax],ah
   1400087a6:	and    BYTE PTR [rax],ah
   1400087a8:	and    BYTE PTR [rax],ah
   1400087aa:	and    BYTE PTR [rdi],ch
   1400087ac:	ds or  eax,0x2020200a
   1400087b2:	and    BYTE PTR [rax],ah
   1400087b4:	and    BYTE PTR [rax],ah
   1400087b6:	and    BYTE PTR [rax],ah
   1400087b8:	and    BYTE PTR [rax],ah
   1400087ba:	and    BYTE PTR [rax],ah
   1400087bc:	and    BYTE PTR [rax],ah
   1400087be:	and    BYTE PTR [rdi+rbp*1],bh
   1400087c1:	jb     0x140008828
   1400087c3:	jno    0x14000883a
   1400087c5:	gs jae 0x14000883c
   1400087c8:	gs fs push rax
   1400087cb:	jb     0x140008836
   1400087cd:	jbe    0x140008838
   1400087cf:	ins    BYTE PTR es:[rdi],dx
   1400087d0:	gs addr32 gs jae 0x140008813
   1400087d5:	or     eax,0x2020200a
   1400087da:	and    BYTE PTR [rax],ah
   1400087dc:	and    BYTE PTR [rax],ah
   1400087de:	and    BYTE PTR [rax],ah
   1400087e0:	and    BYTE PTR [rax],ah
   1400087e2:	and    BYTE PTR [rdi+rbp*1],bh
   1400087e5:	jae    0x14000884c
   1400087e7:	movsxd esi,DWORD PTR [rbp+0x72]
   1400087ea:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   1400087f2:	and    BYTE PTR [rax],ah
   1400087f4:	and    BYTE PTR [rax],ah
   1400087f6:	and    BYTE PTR [rax],ah
   1400087f8:	cmp    al,0x2f
   1400087fa:	je     0x14000886e
   1400087fc:	jne    0x140008871
   1400087fe:	je     0x140008849
   140008800:	outs   dx,BYTE PTR ds:[rsi]
   140008801:	outs   dx,WORD PTR ds:[rsi]
   140008803:	ds or  eax,0x200a0d0a
   140008809:	and    BYTE PTR [rax],ah
   14000880b:	and    BYTE PTR [rdi+rbp*1],bh
   14000880e:	(bad)  
   14000880f:	jae    0x140008884
   140008811:	gs ins DWORD PTR es:[rdi],dx
   140008813:	(bad)  
   140008814:	ins    BYTE PTR es:[rdi],dx
   140008815:	jns    0x140008855
   140008817:	or     eax,0xa0d0a
   14000881c:	add    BYTE PTR [rax],al
   14000881e:	add    BYTE PTR [rax],al
   140008820:	pushf  
   140008821:	add    esi,DWORD PTR [rax+rax*1]
   140008824:	add    BYTE PTR [rax],al
   140008826:	push   rsi
   140008827:	add    BYTE PTR [rbx+0x0],dl
   14000882a:	pop    rdi
   14000882b:	add    BYTE PTR [rsi+0x0],dl
   14000882e:	add    BYTE PTR [r10+0x0],r10b
   140008832:	push   rbx
   140008833:	add    BYTE PTR [rcx+0x0],cl
   140008836:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14000883a:	pop    rdi
   14000883b:	add    BYTE PTR [rcx+0x0],cl
   14000883e:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   140008842:	rex.WRXB add BYTE PTR [r8],r8b
   140008845:	add    BYTE PTR [rax],al
   140008847:	add    BYTE PTR [rbp+0xfeef04],bh
   14000884d:	add    BYTE PTR [rcx],al
   14000884f:	add    BYTE PTR [rax],al
   140008851:	add    BYTE PTR [rdx],cl
   140008853:	add    BYTE PTR [rax],al
   140008855:	add    BYTE PTR [rax],bpl
   140008858:	add    BYTE PTR [rax],al
   14000885a:	or     al,BYTE PTR [rax]
   14000885c:	add    BYTE PTR [rax+0x0],al
   14000885f:	sub    BYTE PTR [rdi],bh
   140008861:	add    BYTE PTR [rax],al
   140008863:	add    BYTE PTR [rax],al
   140008865:	add    BYTE PTR [rax],al
   140008867:	add    BYTE PTR [rax+rax*1],al
   14000886a:	add    al,0x0
   14000886c:	add    al,BYTE PTR [rax]
	...
   14000887a:	add    BYTE PTR [rax],al
   14000887c:	cli    
   14000887d:	add    al,BYTE PTR [rax]
   14000887f:	add    BYTE PTR [rcx],al
   140008881:	add    BYTE PTR [rbx+0x0],dl
   140008884:	je     0x140008886
   140008886:	jb     0x140008888
   140008888:	imul   eax,DWORD PTR [rax],0x67006e
   14000888e:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140008892:	ins    BYTE PTR es:[rdi],dx
   140008893:	add    BYTE PTR [rbp+0x0],ah
   140008896:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000889a:	data16 add BYTE PTR [rdi+0x0],ch
   14000889e:	add    BYTE PTR [rax],al
   1400088a0:	(bad)  
   1400088a1:	add    al,BYTE PTR [rax]
   1400088a3:	add    BYTE PTR [rcx],al
   1400088a5:	add    BYTE PTR [rax],dh
   1400088a7:	add    BYTE PTR [rax+rax*1],dh
   1400088aa:	xor    BYTE PTR [rax],al
   1400088ac:	cmp    DWORD PTR [rax],eax
   1400088ae:	xor    BYTE PTR [rax],al
   1400088b0:	xor    al,0x0
   1400088b2:	rex.X add BYTE PTR [rax],sil
   1400088b5:	add    BYTE PTR [rax],al
   1400088b7:	add    BYTE PTR [rax+rax*1+0x16],cl
   1400088bb:	add    BYTE PTR [rcx],al
   1400088bd:	add    BYTE PTR [rbx+0x0],al
   1400088c0:	outs   dx,DWORD PTR ds:[rsi]
   1400088c1:	add    BYTE PTR [rbp+0x0],ch
   1400088c4:	jo     0x1400088c6
   1400088c6:	(bad)  
   1400088c7:	add    BYTE PTR [rsi+0x0],ch
   1400088ca:	jns    0x1400088cc
   1400088cc:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   1400088d0:	ins    DWORD PTR es:[rdi],dx
   1400088d1:	add    BYTE PTR [rbp+0x0],ah
   1400088d4:	add    BYTE PTR [rax],al
   1400088d6:	add    BYTE PTR [rax],al
   1400088d8:	rex.WRB add BYTE PTR [r9+0x0],r13b
   1400088dc:	movsxd eax,DWORD PTR [rax]
   1400088de:	jb     0x1400088e0
   1400088e0:	outs   dx,DWORD PTR ds:[rsi]
   1400088e1:	add    BYTE PTR [rbx+0x0],dh
   1400088e4:	outs   dx,DWORD PTR ds:[rsi]
   1400088e5:	add    BYTE PTR [rsi+0x0],ah
   1400088e8:	je     0x1400088ea
   1400088ea:	and    BYTE PTR [rax],al
   1400088ec:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400088f0:	jb     0x1400088f2
   1400088f2:	jo     0x1400088f4
   1400088f4:	outs   dx,DWORD PTR ds:[rsi]
   1400088f5:	add    BYTE PTR [rdx+0x0],dh
   1400088f8:	(bad)  
   1400088f9:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400088fd:	add    BYTE PTR [rdi+0x0],ch
   140008900:	outs   dx,BYTE PTR ds:[rsi]
   140008901:	add    BYTE PTR [rax],al
   140008903:	add    BYTE PTR [rsi+0x0],bl
   140008906:	sbb    eax,DWORD PTR [rax]
   140008908:	add    DWORD PTR [rax],eax
   14000890a:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000890e:	ins    BYTE PTR es:[rdi],dx
   14000890f:	add    BYTE PTR [rbp+0x0],ah
   140008912:	add    BYTE PTR [rbp+0x0],r12b
   140008916:	jae    0x140008918
   140008918:	movsxd eax,DWORD PTR [rax]
   14000891a:	jb     0x14000891c
   14000891c:	imul   eax,DWORD PTR [rax],0x740070
   140008922:	imul   eax,DWORD PTR [rax],0x6e006f
   140008928:	add    BYTE PTR [rax],al
   14000892a:	add    BYTE PTR [rax],al
   14000892c:	add    BYTE PTR [rax+0x0],r10b
   140008930:	add    BYTE PTR [r8+0x0],dl
   140008934:	rex.WB add BYTE PTR [r8],spl
   140008937:	add    BYTE PTR [rbx+0x0],cl
   14000893a:	add    BYTE PTR gs:[rcx+0x0],bh
   14000893e:	and    BYTE PTR [rax],al
   140008940:	rex.WRB add BYTE PTR [r9+0x0],r13b
   140008944:	add    BYTE PTR [edx+0x0],dh
   140008948:	(bad)  
   140008949:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000894d:	add    BYTE PTR [rdi+0x0],ch
   140008950:	outs   dx,BYTE PTR ds:[rsi]
   140008951:	add    BYTE PTR [rax],ah
   140008953:	add    BYTE PTR [rdi+0x0],dl
   140008956:	imul   eax,DWORD PTR [rax],0x61007a
   14000895c:	jb     0x14000895e
   14000895e:	add    BYTE PTR fs:[rax],al
   140008961:	add    BYTE PTR [rax],al
   140008963:	add    BYTE PTR [rsi+0x0],ah
   140008966:	and    eax,DWORD PTR [rax]
   140008968:	add    DWORD PTR [rax],eax
   14000896a:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000896e:	ins    BYTE PTR es:[rdi],dx
   14000896f:	add    BYTE PTR [rbp+0x0],ah
   140008972:	push   rsi
   140008973:	add    BYTE PTR [rbp+0x0],ah
   140008976:	jb     0x140008978
   140008978:	jae    0x14000897a
   14000897a:	imul   eax,DWORD PTR [rax],0x6e006f
   140008980:	add    BYTE PTR [rax],al
   140008982:	add    BYTE PTR [rax],al
   140008984:	xor    DWORD PTR [rax],eax
   140008986:	xor    BYTE PTR [rax],al
   140008988:	add    BYTE PTR cs:[rax],dh
   14000898b:	add    BYTE PTR [rsi],ch
   14000898d:	add    BYTE PTR [rcx],dh
   14000898f:	add    BYTE PTR [rax],dh
   140008991:	add    BYTE PTR [rdx],dh
   140008993:	add    BYTE PTR [rax+rax*1],dh
   140008996:	xor    BYTE PTR [rax],al
   140008998:	add    BYTE PTR cs:[rcx],dh
   14000899b:	add    BYTE PTR [rsi],dh
   14000899d:	add    BYTE PTR [rbx],dh
   14000899f:	add    BYTE PTR [rax],bh
   1400089a1:	add    BYTE PTR [rax+rax*1],dh
   1400089a4:	and    BYTE PTR [rax],al
   1400089a6:	sub    BYTE PTR [rax],al
   1400089a8:	je     0x1400089aa
   1400089aa:	push   0x2e003100
   1400089af:	add    BYTE PTR [rcx],dh
   1400089b1:	add    BYTE PTR [rip+0x37003000],dh        # 0x17700b9b7
   1400089b7:	add    BYTE PTR [rax],dh
   1400089b9:	add    BYTE PTR [rcx],bh
   1400089bb:	add    BYTE PTR [rip+0x37003100],ch        # 0x17700bac1
   1400089c1:	add    BYTE PTR [rax],dh
   1400089c3:	add    BYTE PTR [rax],dh
   1400089c5:	add    BYTE PTR [rcx],ch
   1400089c7:	add    BYTE PTR [rax],al
   1400089c9:	add    BYTE PTR [rax],al
   1400089cb:	add    BYTE PTR [rdx],dh
   1400089cd:	add    BYTE PTR [rcx],cl
   1400089cf:	add    BYTE PTR [rcx],al
   1400089d1:	add    BYTE PTR [rcx+0x0],cl
   1400089d4:	outs   dx,BYTE PTR ds:[rsi]
   1400089d5:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400089d9:	add    BYTE PTR [rdx+0x0],dh
   1400089dc:	outs   dx,BYTE PTR ds:[rsi]
   1400089dd:	add    BYTE PTR [rcx+0x0],ah
   1400089e0:	ins    BYTE PTR es:[rdi],dx
   1400089e1:	add    BYTE PTR [rsi+0x0],cl
   1400089e4:	(bad)  
   1400089e5:	add    BYTE PTR [rbp+0x0],ch
   1400089e8:	add    BYTE PTR gs:[rax],al
   1400089eb:	add    BYTE PTR [rax+rax*1+0x70],ah
   1400089ef:	add    BYTE PTR [rcx+0x0],ah
   1400089f2:	jo     0x1400089f4
   1400089f4:	imul   eax,DWORD PTR [rax],0x69006d
   1400089fa:	add    BYTE PTR [eax],al
   1400089fd:	add    BYTE PTR [rax],al
   1400089ff:	add    BYTE PTR [rax+0x1002e00],al
   140008a05:	add    BYTE PTR [rax+rax*1+0x65],cl
   140008a09:	add    BYTE PTR [rdi+0x0],ah
   140008a0c:	(bad)  
   140008a0d:	add    BYTE PTR [rax+rax*1+0x43],ch
   140008a11:	add    BYTE PTR [rdi+0x0],ch
   140008a14:	jo     0x140008a16
   140008a16:	jns    0x140008a18
   140008a18:	jb     0x140008a1a
   140008a1a:	imul   eax,DWORD PTR [rax],0x680067
   140008a20:	je     0x140008a22
   140008a22:	add    BYTE PTR [rax],al
   140008a24:	test   eax,0x4d002000
   140008a29:	add    BYTE PTR [rcx+0x0],ch
   140008a2c:	movsxd eax,DWORD PTR [rax]
   140008a2e:	jb     0x140008a30
   140008a30:	outs   dx,DWORD PTR ds:[rsi]
   140008a31:	add    BYTE PTR [rbx+0x0],dh
   140008a34:	outs   dx,DWORD PTR ds:[rsi]
   140008a35:	add    BYTE PTR [rsi+0x0],ah
   140008a38:	je     0x140008a3a
   140008a3a:	and    BYTE PTR [rax],al
   140008a3c:	rex.XB add BYTE PTR [r15+0x0],bpl
   140008a40:	jb     0x140008a42
   140008a42:	jo     0x140008a44
   140008a44:	outs   dx,DWORD PTR ds:[rsi]
   140008a45:	add    BYTE PTR [rdx+0x0],dh
   140008a48:	(bad)  
   140008a49:	add    BYTE PTR [rax+rax*1+0x69],dh
   140008a4d:	add    BYTE PTR [rdi+0x0],ch
   140008a50:	outs   dx,BYTE PTR ds:[rsi]
   140008a51:	add    BYTE PTR [rsi],ch
   140008a53:	add    BYTE PTR [rax],ah
   140008a55:	add    BYTE PTR [rcx+0x0],al
   140008a58:	ins    BYTE PTR es:[rdi],dx
   140008a59:	add    BYTE PTR [rax+rax*1+0x20],ch
   140008a5d:	add    BYTE PTR [rdx+0x0],dh
   140008a60:	imul   eax,DWORD PTR [rax],0x680067
   140008a66:	je     0x140008a68
   140008a68:	jae    0x140008a6a
   140008a6a:	and    BYTE PTR [rax],al
   140008a6c:	jb     0x140008a6e
   140008a6e:	add    BYTE PTR gs:[rbx+0x0],dh
   140008a72:	add    BYTE PTR gs:[rdx+0x0],dh
   140008a76:	jbe    0x140008a78
   140008a78:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   140008a7d:	add    BYTE PTR [rax],al
   140008a7f:	add    BYTE PTR [rdx+0x0],al
   140008a82:	or     eax,0x4f000100
   140008a87:	add    BYTE PTR [rdx+0x0],dh
   140008a8a:	imul   eax,DWORD PTR [rax],0x690067
   140008a90:	outs   dx,BYTE PTR ds:[rsi]
   140008a91:	add    BYTE PTR [rcx+0x0],ah
   140008a94:	ins    BYTE PTR es:[rdi],dx
   140008a95:	add    BYTE PTR [rsi+0x0],al
   140008a98:	imul   eax,DWORD PTR [rax],0x65006c
   140008a9e:	outs   dx,BYTE PTR ds:[rsi]
   140008a9f:	add    BYTE PTR [rcx+0x0],ah
   140008aa2:	ins    DWORD PTR es:[rdi],dx
   140008aa3:	add    BYTE PTR [rbp+0x0],ah
   140008aa6:	add    BYTE PTR [rax],al
   140008aa8:	add    BYTE PTR fs:[rax+0x0],dh
   140008aac:	(bad)  
   140008aad:	add    BYTE PTR [rax+0x0],dh
   140008ab0:	imul   eax,DWORD PTR [rax],0x69006d
   140008ab6:	add    BYTE PTR [esi],ch
   140008ab9:	add    BYTE PTR [rbp+0x0],ah
   140008abc:	js     0x140008abe
   140008abe:	add    BYTE PTR gs:[rax],al
   140008ac1:	add    BYTE PTR [rax],al
   140008ac3:	add    BYTE PTR [rdx+0x0],ch
   140008ac6:	and    eax,0x50000100
   140008acb:	add    BYTE PTR [rdx+0x0],dh
   140008ace:	outs   dx,DWORD PTR ds:[rsi]
   140008acf:	add    BYTE PTR [rax+rax*1+0x75],ah
   140008ad3:	add    BYTE PTR [rbx+0x0],ah
   140008ad6:	je     0x140008ad8
   140008ad8:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140008adc:	ins    DWORD PTR es:[rdi],dx
   140008add:	add    BYTE PTR [rbp+0x0],ah
   140008ae0:	add    BYTE PTR [rax],al
   140008ae2:	add    BYTE PTR [rax],al
   140008ae4:	rex.WRB add BYTE PTR [r9+0x0],r13b
   140008ae8:	movsxd eax,DWORD PTR [rax]
   140008aea:	jb     0x140008aec
   140008aec:	outs   dx,DWORD PTR ds:[rsi]
   140008aed:	add    BYTE PTR [rbx+0x0],dh
   140008af0:	outs   dx,DWORD PTR ds:[rsi]
   140008af1:	add    BYTE PTR [rsi+0x0],ah
   140008af4:	je     0x140008af6
   140008af6:	scas   al,BYTE PTR es:[rdi]
   140008af7:	add    BYTE PTR [rax],ah
   140008af9:	add    BYTE PTR [rdi+0x0],dl
   140008afc:	imul   eax,DWORD PTR [rax],0x64006e
   140008b02:	outs   dx,DWORD PTR ds:[rsi]
   140008b03:	add    BYTE PTR [rdi+0x0],dh
   140008b06:	jae    0x140008b08
   140008b08:	scas   al,BYTE PTR es:[rdi]
   140008b09:	add    BYTE PTR [rax],ah
   140008b0b:	add    BYTE PTR [rdi+0x0],cl
   140008b0e:	jo     0x140008b10
   140008b10:	add    BYTE PTR gs:[rdx+0x0],dh
   140008b14:	(bad)  
   140008b15:	add    BYTE PTR [rax+rax*1+0x69],dh
   140008b19:	add    BYTE PTR [rsi+0x0],ch
   140008b1c:	add    BYTE PTR [eax],ah
   140008b1f:	add    BYTE PTR [rbx+0x0],dl
   140008b22:	jns    0x140008b24
   140008b24:	jae    0x140008b26
   140008b26:	je     0x140008b28
   140008b28:	add    BYTE PTR gs:[rbp+0x0],ch
   140008b2c:	add    BYTE PTR [rax],al
   140008b2e:	add    BYTE PTR [rax],al
   140008b30:	rex.RX add BYTE PTR [rcx],r10b
   140008b33:	add    BYTE PTR [rcx],al
   140008b35:	add    BYTE PTR [rax+0x0],dl
   140008b38:	jb     0x140008b3a
   140008b3a:	outs   dx,DWORD PTR ds:[rsi]
   140008b3b:	add    BYTE PTR [rax+rax*1+0x75],ah
   140008b3f:	add    BYTE PTR [rbx+0x0],ah
   140008b42:	je     0x140008b44
   140008b44:	push   rsi
   140008b45:	add    BYTE PTR [rbp+0x0],ah
   140008b48:	jb     0x140008b4a
   140008b4a:	jae    0x140008b4c
   140008b4c:	imul   eax,DWORD PTR [rax],0x6e006f
   140008b52:	add    BYTE PTR [rax],al
   140008b54:	xor    DWORD PTR [rax],eax
   140008b56:	xor    BYTE PTR [rax],al
   140008b58:	add    BYTE PTR cs:[rax],dh
   140008b5b:	add    BYTE PTR [rsi],ch
   140008b5d:	add    BYTE PTR [rcx],dh
   140008b5f:	add    BYTE PTR [rax],dh
   140008b61:	add    BYTE PTR [rdx],dh
   140008b63:	add    BYTE PTR [rax+rax*1],dh
   140008b66:	xor    BYTE PTR [rax],al
   140008b68:	add    BYTE PTR cs:[rcx],dh
   140008b6b:	add    BYTE PTR [rsi],dh
   140008b6d:	add    BYTE PTR [rbx],dh
   140008b6f:	add    BYTE PTR [rax],bh
   140008b71:	add    BYTE PTR [rax+rax*1],dh
   140008b74:	add    BYTE PTR [rax],al
   140008b76:	add    BYTE PTR [rax],al
   140008b78:	add    BYTE PTR [rax],r8b
   140008b7b:	add    BYTE PTR [rcx],al
   140008b7d:	add    BYTE PTR [rsi+0x0],dl
   140008b80:	(bad)  
   140008b81:	add    BYTE PTR [rdx+0x0],dh
   140008b84:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140008b88:	ins    BYTE PTR es:[rdi],dx
   140008b89:	add    BYTE PTR [rbp+0x0],ah
   140008b8c:	rex.WB add BYTE PTR [r14+0x0],bpl
   140008b90:	data16 add BYTE PTR [rdi+0x0],ch
   140008b94:	add    BYTE PTR [rax],al
   140008b96:	add    BYTE PTR [rax],al
   140008b98:	and    al,0x0
   140008b9a:	add    al,0x0
   140008b9c:	add    BYTE PTR [rax],al
   140008b9e:	push   rsp
   140008b9f:	add    BYTE PTR [rdx+0x0],dh
   140008ba2:	(bad)  
   140008ba3:	add    BYTE PTR [rsi+0x0],ch
   140008ba6:	jae    0x140008ba8
   140008ba8:	ins    BYTE PTR es:[rdi],dx
   140008ba9:	add    BYTE PTR [rcx+0x0],ah
   140008bac:	je     0x140008bae
   140008bae:	imul   eax,DWORD PTR [rax],0x6e006f
   140008bb4:	add    BYTE PTR [rax],al
   140008bb6:	add    BYTE PTR [rax],al
   140008bb8:	or     DWORD PTR [rax+rsi*4],eax
   140008bbb:	add    al,0x0
   140008bbd:	add    BYTE PTR [rax],al
   140008bbf:	add    BYTE PTR [rsp+riz*2],bh
   140008bc2:	jne    0x140008c2d
   140008bc4:	js     0x140008c33
   140008bc6:	ins    BYTE PTR es:[rdi],dx
   140008bc7:	ds or  eax,0x74733c0a
   140008bcd:	jns    0x140008c3b
   140008bcf:	gs jae 0x140008c3a
   140008bd2:	gs gs je 0x140008c49
   140008bd6:	ds or  eax,0x74733c0a
   140008bdc:	jns    0x140008c4a
   140008bde:	and    BYTE PTR gs:[rdx+0x65],dh
   140008be2:	jae    0x140008c4d
   140008be4:	fs cmp eax,0x636f6c22
   140008bea:	(bad)  
   140008beb:	ins    BYTE PTR es:[rdi],dx
   140008bec:	and    bh,BYTE PTR [rsi]
   140008bee:	or     eax,0x66693c0a
   140008bf3:	and    BYTE PTR [rbx+0x6c],ah
   140008bf6:	(bad)  
   140008bf7:	jae    0x140008c6c
   140008bf9:	cmp    eax,0x72617022
   140008bfe:	(bad)  
   140008bff:	and    bh,BYTE PTR [rsi]
   140008c01:	or     eax,0x6c653c0a
   140008c06:	gs ins DWORD PTR es:[rdi],dx
   140008c08:	outs   dx,BYTE PTR gs:[rsi]
   140008c0a:	je     0x140008c2c
   140008c0c:	outs   dx,WORD PTR ds:[rsi]
   140008c0e:	jb     0x140008c75
   140008c10:	addr32 jb 0x140008c82
   140008c13:	jne    0x140008c83
   140008c15:	fs cmp eax,0x65687422
   140008c1b:	ins    DWORD PTR es:[rdi],dx
   140008c1c:	gs (bad) 
   140008c1e:	(bad)  
   140008c1f:	ins    BYTE PTR es:[rdi],dx
   140008c20:	sub    BYTE PTR gs:[rdi+0x74],ah
   140008c24:	movsxd ebp,DWORD PTR [rax]
   140008c26:	rex.B
   140008c27:	gs jb  0x140008c99
   140008c2a:	push   rdi
   140008c2b:	imul   edi,DWORD PTR [rdx+0x61],0x202c6472
   140008c32:	xor    ebp,DWORD PTR [rax+riz*1]
   140008c35:	xor    BYTE PTR [rax+riz*1],ch
   140008c38:	xor    edi,DWORD PTR [rax]
   140008c3a:	xor    BYTE PTR [rbx],dh
   140008c3c:	sub    DWORD PTR [rax+riz*1],ebp
   140008c3f:	ja     0x140008caa
   140008c41:	outs   dx,BYTE PTR ds:[rsi]
   140008c42:	outs   dx,DWORD PTR fs:[rsi]
   140008c44:	ja     0x140008cba
   140008c46:	gs js  0x140008cbd
   140008c49:	sub    DWORD PTR [rdx],esp
   140008c4b:	and    BYTE PTR [rbx+0x6f],ah
   140008c4e:	outs   dx,BYTE PTR ds:[rsi]
   140008c4f:	je     0x140008cb6
   140008c51:	outs   dx,BYTE PTR ds:[rsi]
   140008c52:	je     0x140008cb5
   140008c54:	ins    BYTE PTR es:[rdi],dx
   140008c55:	imul   esp,DWORD PTR [rdi+0x6e],0x7277223d
   140008c5c:	(bad)  
   140008c5d:	jo     0x140008ccb
   140008c5f:	gs data16 je 0x140008c85
   140008c63:	and    BYTE PTR [rbp+0x61],ch
   140008c66:	jb     0x140008ccf
   140008c68:	imul   ebp,DWORD PTR [rsi+0x3d],0x63657222
   140008c6f:	je     0x140008c99
   140008c71:	xor    BYTE PTR [rcx+rsi*1],ch
   140008c74:	xor    BYTE PTR [rdx+0x70],dh
   140008c77:	sub    al,0x30
   140008c79:	sub    al,0x31
   140008c7b:	xor    BYTE PTR [rdx+0x70],dh
   140008c7e:	sub    DWORD PTR [rdx],esp
   140008c80:	(bad)  
   140008c81:	ds or  eax,0x692f3c0a
   140008c87:	ds or  ax,0x3c0a
   140008c8c:	movsxd esp,DWORD PTR [rbx+0x73]
   140008c8f:	jns    0x140008d04
   140008c91:	ins    BYTE PTR es:[rdi],dx
   140008c92:	imul   ebp,DWORD PTR [rsi+0x6b],0x63636120
   140008c99:	gs jae 0x140008d0f
   140008c9c:	imul   esp,DWORD PTR [rdx+0x6c],0x74223d65
   140008ca3:	jb     0x140008d1a
   140008ca5:	and    ah,BYTE PTR gs:[rax]
   140008ca8:	(bad)  
   140008ca9:	movsxd esp,DWORD PTR [rbx+0x72]
   140008cac:	outs   dx,DWORD PTR ds:[rsi]
   140008cad:	ins    BYTE PTR es:[rdi],dx
   140008cae:	gs cmp eax,0x6e696c22
   140008cb4:	imul   esp,DWORD PTR [rdx],0x20
   140008cb7:	jae    0x140008d21
   140008cb9:	outs   dx,DWORD PTR ds:[rsi]
   140008cba:	jb     0x140008d30
   140008cbc:	movsxd esi,DWORD PTR [rbp+0x74]
   140008cbf:	cmp    eax,0x74756122
   140008cc4:	outs   dx,DWORD PTR ds:[rsi]
   140008cc5:	and    ah,BYTE PTR [rax]
   140008cc7:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
   140008ccb:	jae    0x140008d0a
   140008ccd:	and    dh,BYTE PTR [rdi+0x69]
   140008cd0:	jp     0x140008d34
   140008cd2:	je     0x140008d42
   140008cd4:	and    ah,BYTE PTR [rax]
   140008cd6:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140008cd9:	je     0x140008d40
   140008cdb:	outs   dx,BYTE PTR ds:[rsi]
   140008cdc:	je     0x140008d3f
   140008cde:	ins    BYTE PTR es:[rdi],dx
   140008cdf:	imul   esp,DWORD PTR [rdi+0x6e],0x7277223d
   140008ce6:	(bad)  
   140008ce7:	jo     0x140008d55
   140008ce9:	gs data16 je 0x140008d0f
   140008ced:	and    BYTE PTR [rdi+0x76],ch
   140008cf0:	gs jb  0x140008d5b
   140008cf3:	(bad)  
   140008cf4:	outs   dx,BYTE PTR ds:[rsi]
   140008cf5:	addr32 cmp eax,0x6c616622
   140008cfb:	jae    0x140008d62
   140008cfd:	and    ah,BYTE PTR [rax]
   140008cff:	outs   dx,WORD PTR ds:[rsi]
   140008d01:	jb     0x140008d68
   140008d03:	addr32 jb 0x140008d75
   140008d06:	jne    0x140008d76
   140008d08:	fs cmp eax,0x65687422
   140008d0e:	ins    DWORD PTR es:[rdi],dx
   140008d0f:	gs (bad) 
   140008d11:	(bad)  
   140008d12:	ins    BYTE PTR es:[rdi],dx
   140008d13:	sub    BYTE PTR gs:[rdi+0x74],ah
   140008d17:	movsxd ebp,DWORD PTR [rax]
   140008d19:	rex.B
   140008d1a:	gs jb  0x140008d8c
   140008d1d:	push   rdi
   140008d1e:	imul   edi,DWORD PTR [rdx+0x61],0x202c6472
   140008d25:	xor    ebp,DWORD PTR [rax+riz*1]
   140008d28:	xor    BYTE PTR [rax+riz*1],ch
   140008d2b:	xor    edi,DWORD PTR [rax]
   140008d2d:	xor    BYTE PTR [rbx],dh
   140008d2f:	sub    DWORD PTR [rax+riz*1],ebp
   140008d32:	ja     0x140008d9d
   140008d34:	outs   dx,BYTE PTR ds:[rsi]
   140008d35:	outs   dx,DWORD PTR fs:[rsi]
   140008d37:	ja     0x140008dad
   140008d39:	gs js  0x140008db0
   140008d3c:	sub    DWORD PTR [rdx],esp
   140008d3e:	(bad)  
   140008d3f:	ds or  eax,0x64653c0a
   140008d45:	imul   esi,DWORD PTR [rax+riz*1+0x66],0x6765726f
   140008d4d:	jb     0x140008dbe
   140008d4f:	jne    0x140008dbf
   140008d51:	fs cmp eax,0x65687422
   140008d57:	ins    DWORD PTR es:[rdi],dx
   140008d58:	gs (bad) 
   140008d5a:	(bad)  
   140008d5b:	ins    BYTE PTR es:[rdi],dx
   140008d5c:	sub    BYTE PTR gs:[rdi+0x74],ah
   140008d60:	movsxd ebp,DWORD PTR [rax]
   140008d62:	rex.B
   140008d63:	gs jb  0x140008dd5
   140008d66:	push   rdi
   140008d67:	imul   edi,DWORD PTR [rdx+0x61],0x202c6472
   140008d6e:	xor    ebp,DWORD PTR [rax+riz*1]
   140008d71:	xor    BYTE PTR [rax+riz*1],ch
   140008d74:	xor    edi,DWORD PTR [rax]
   140008d76:	xor    BYTE PTR [rbx],dh
   140008d78:	sub    DWORD PTR [rax+riz*1],ebp
   140008d7b:	ja     0x140008de6
   140008d7d:	outs   dx,BYTE PTR ds:[rsi]
   140008d7e:	outs   dx,DWORD PTR fs:[rsi]
   140008d80:	ja     0x140008df6
   140008d82:	gs js  0x140008df9
   140008d85:	sub    DWORD PTR [rdx],esp
   140008d87:	(bad)  
   140008d88:	ds or  eax,0x63633c0a
   140008d8e:	ins    BYTE PTR es:[rdi],dx
   140008d8f:	imul   esi,DWORD PTR [rbx+0x74],0x77656976
   140008d96:	and    BYTE PTR [rsi+0x6f],ah
   140008d99:	jb     0x140008e00
   140008d9b:	addr32 jb 0x140008e0d
   140008d9e:	jne    0x140008e0e
   140008da0:	fs cmp eax,0x65687422
   140008da6:	ins    DWORD PTR es:[rdi],dx
   140008da7:	gs (bad) 
   140008da9:	(bad)  
   140008daa:	ins    BYTE PTR es:[rdi],dx
   140008dab:	sub    BYTE PTR gs:[rdi+0x74],ah
   140008daf:	movsxd ebp,DWORD PTR [rax]
   140008db1:	rex.B
   140008db2:	gs jb  0x140008e24
   140008db5:	push   rdi
   140008db6:	imul   edi,DWORD PTR [rdx+0x61],0x202c6472
   140008dbd:	xor    ebp,DWORD PTR [rax+riz*1]
   140008dc0:	xor    BYTE PTR [rax+riz*1],ch
   140008dc3:	xor    edi,DWORD PTR [rax]
   140008dc5:	xor    BYTE PTR [rbx],dh
   140008dc7:	sub    DWORD PTR [rax+riz*1],ebp
   140008dca:	ja     0x140008e35
   140008dcc:	outs   dx,BYTE PTR ds:[rsi]
   140008dcd:	outs   dx,DWORD PTR fs:[rsi]
   140008dcf:	ja     0x140008e45
   140008dd1:	gs js  0x140008e48
   140008dd4:	sub    DWORD PTR [rdx],esp
   140008dd6:	(bad)  
   140008dd7:	ds or  eax,0x66693c0a
   140008ddd:	and    BYTE PTR [rbp+0x6e],ah
   140008de0:	(bad)  
   140008de1:	(bad)  
   140008de2:	ins    BYTE PTR es:[rdi],dx
   140008de3:	gs fs cmp eax,0x6c616622
   140008dea:	jae    0x140008e51
   140008dec:	and    bh,BYTE PTR [rsi]
   140008dee:	or     eax,0x64653c0a
   140008df3:	imul   esi,DWORD PTR [rax+riz*1+0x62],0x676b6361
   140008dfb:	jb     0x140008e6c
   140008dfd:	jne    0x140008e6d
   140008dff:	fs cmp eax,0x74756222
   140008e05:	je     0x140008e76
   140008e07:	outs   dx,BYTE PTR ds:[rsi]
   140008e08:	data16 (bad) 
   140008e0a:	movsxd esp,DWORD PTR [rbp+0x22]
   140008e0d:	(bad)  
   140008e0e:	ds or  eax,0x692f3c0a
   140008e14:	ds or  ax,0x3c0a
   140008e19:	(bad)  
   140008e1a:	jae    0x140008e90
   140008e1c:	jns    0x140008e8a
   140008e1e:	gs ds or eax,0x732f3c0a
   140008e25:	je     0x140008ea0
   140008e27:	ins    BYTE PTR es:[rdi],dx
   140008e28:	gs jae 0x140008e93
   140008e2b:	gs gs je 0x140008ea2
   140008e2f:	ds or  eax,0x6c653c0a
   140008e35:	gs ins DWORD PTR es:[rdi],dx
   140008e37:	outs   dx,BYTE PTR gs:[rsi]
   140008e39:	je     0x140008e5b
   140008e3b:	jb     0x140008ea2
   140008e3d:	jae    0x140008ea8
   140008e3f:	fs cmp eax,0x72726522
   140008e45:	outs   dx,DWORD PTR ds:[rsi]
   140008e46:	jb     0x140008e8a
   140008e48:	outs   dx,DWORD PTR ds:[rsi]
   140008e49:	js     0x140008e98
   140008e4b:	(bad)  
   140008e4c:	movsxd esi,DWORD PTR [rdx+0x6f]
   140008e4f:	and    ah,BYTE PTR [rax]
   140008e51:	ins    BYTE PTR es:[rdi],dx
   140008e52:	(bad)  
   140008e53:	jns    0x140008ec4
   140008e55:	jne    0x140008ecb
   140008e57:	cmp    eax,0x726f6222
   140008e5c:	fs gs jb 0x140008ecc
   140008e60:	(bad)  
   140008e61:	jns    0x140008ed2
   140008e63:	jne    0x140008ed9
   140008e65:	sub    BYTE PTR [rcx],ch
   140008e67:	and    bh,BYTE PTR [rsi]
   140008e69:	or     eax,0x6c653c0a
   140008e6e:	gs ins DWORD PTR es:[rdi],dx
   140008e70:	outs   dx,BYTE PTR gs:[rsi]
   140008e72:	je     0x140008e94
   140008e74:	ins    BYTE PTR es:[rdi],dx
   140008e75:	(bad)  
   140008e76:	jns    0x140008ee7
   140008e78:	jne    0x140008eee
   140008e7a:	jo     0x140008eeb
   140008e7c:	jae    0x140008ebb
   140008e7e:	and    ch,BYTE PTR [rbp+riz*2+0x66]
   140008e82:	je     0x140008ea6
   140008e84:	and    BYTE PTR [rdi+0x69],dh
   140008e87:	fs je  0x140008ef2
   140008e8a:	cmp    eax,0x30323122
   140008e8f:	jb     0x140008f01
   140008e91:	and    ch,BYTE PTR [rdi]
   140008e93:	ds or  eax,0x6c653c0a
   140008e99:	gs ins DWORD PTR es:[rdi],dx
   140008e9b:	outs   dx,BYTE PTR gs:[rsi]
   140008e9d:	je     0x140008ebf
   140008e9f:	ins    BYTE PTR es:[rdi],dx
   140008ea0:	(bad)  
   140008ea1:	jns    0x140008f12
   140008ea3:	jne    0x140008f19
   140008ea5:	cmp    eax,0x726f6222
   140008eaa:	fs gs jb 0x140008f1a
   140008eae:	(bad)  
   140008eaf:	jns    0x140008f20
   140008eb1:	jne    0x140008f27
   140008eb3:	sub    BYTE PTR [rcx],ch
   140008eb5:	and    ah,BYTE PTR [rax]
   140008eb7:	ins    BYTE PTR es:[rdi],dx
   140008eb8:	(bad)  
   140008eb9:	jns    0x140008f2a
   140008ebb:	jne    0x140008f31
   140008ebd:	jo     0x140008f2e
   140008ebf:	jae    0x140008efe
   140008ec1:	and    ah,BYTE PTR [rbx+0x6c]
   140008ec4:	imul   esp,DWORD PTR [rbp+0x6e],0x70202274
   140008ecb:	(bad)  
   140008ecc:	fs imul ebp,DWORD PTR fs:[rsi+0x67],0x6572223d
   140008ed5:	movsxd esi,DWORD PTR [rax+rbp*1+0x30]
   140008ed9:	jb     0x140008f4b
   140008edb:	sub    al,0x35
   140008edd:	jb     0x140008f4f
   140008edf:	sub    al,0x35
   140008ee1:	jb     0x140008f53
   140008ee3:	sub    al,0x35
   140008ee5:	jb     0x140008f57
   140008ee7:	sub    DWORD PTR [rdx],esp
   140008ee9:	ds or  eax,0x6c653c0a
   140008eef:	gs ins DWORD PTR es:[rdi],dx
   140008ef1:	outs   dx,BYTE PTR gs:[rsi]
   140008ef3:	je     0x140008f15
   140008ef5:	ins    BYTE PTR es:[rdi],dx
   140008ef6:	(bad)  
   140008ef7:	jns    0x140008f68
   140008ef9:	jne    0x140008f6f
   140008efb:	jo     0x140008f6c
   140008efd:	jae    0x140008f3c
   140008eff:	and    ch,BYTE PTR [rbp+riz*2+0x66]
   140008f03:	je     0x140008f27
   140008f05:	and    BYTE PTR [rcx+riz*2+0x79],ch
   140008f09:	outs   dx,DWORD PTR ds:[rsi]
   140008f0a:	jne    0x140008f80
   140008f0c:	cmp    eax,0x726f6222
   140008f11:	fs gs jb 0x140008f81
   140008f15:	(bad)  
   140008f16:	jns    0x140008f87
   140008f18:	jne    0x140008f8e
   140008f1a:	sub    BYTE PTR [rcx],ch
   140008f1c:	and    ah,BYTE PTR [rax]
   140008f1e:	jo     0x140008f81
   140008f20:	fs imul ebp,DWORD PTR fs:[rsi+0x67],0x6572223d
   140008f29:	movsxd esi,DWORD PTR [rax+rbp*1+0x30]
   140008f2d:	jb     0x140008f9f
   140008f2f:	sub    al,0x30
   140008f31:	jb     0x140008fa3
   140008f33:	sub    al,0x35
   140008f35:	jb     0x140008fa7
   140008f37:	sub    al,0x30
   140008f39:	jb     0x140008fab
   140008f3b:	sub    DWORD PTR [rdx],esp
   140008f3d:	ds or  eax,0x6c653c0a
   140008f43:	gs ins DWORD PTR es:[rdi],dx
   140008f45:	outs   dx,BYTE PTR gs:[rsi]
   140008f47:	je     0x140008f69
   140008f49:	imul   esp,DWORD PTR [rbp+rdi*1+0x22],0x6d6f7461
   140008f51:	sub    BYTE PTR [rdi+0x61],dh
   140008f54:	jb     0x140008fc4
   140008f56:	jae    0x140008fcc
   140008f58:	(bad)  
   140008f59:	je     0x140008fd0
   140008f5b:	jae    0x140008fc6
   140008f5d:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140008f60:	sub    DWORD PTR [rdx],esp
   140008f62:	and    BYTE PTR [rcx+0x63],ah
   140008f65:	movsxd esp,DWORD PTR [rbp+0x73]
   140008f68:	jae    0x140008fd3
   140008f6a:	(bad)  
   140008f6b:	ins    BYTE PTR es:[rdi],dx
   140008f6c:	gs cmp eax,0x75727422
   140008f72:	and    ah,BYTE PTR gs:[rax]
   140008f75:	(bad)  
   140008f76:	movsxd esp,DWORD PTR [rbx+0x72]
   140008f79:	outs   dx,DWORD PTR ds:[rsi]
   140008f7a:	ins    BYTE PTR es:[rdi],dx
   140008f7b:	gs cmp eax,0x61726722
   140008f81:	jo     0x140008feb
   140008f83:	imul   esp,DWORD PTR [rbx+0x22],0x63636120
   140008f8a:	outs   dx,BYTE PTR ds:[rsi]
   140008f8b:	(bad)  
   140008f8c:	ins    DWORD PTR es:[rdi],dx
   140008f8d:	gs cmp eax,0x73657222
   140008f93:	jae    0x140009009
   140008f95:	jb     0x140008fbf
   140008f97:	xor    DWORD PTR [rsi],esi
   140008f99:	xor    BYTE PTR [rcx],dh
   140008f9b:	sub    DWORD PTR [rdx],esp
   140008f9d:	and    BYTE PTR [rcx+0x63],ah
   140008fa0:	movsxd eax,DWORD PTR [rbp+riz*2+0x73]
   140008fa4:	movsxd edi,DWORD PTR [rip+0x73657222]        # 0x1b36601cc
   140008faa:	jae    0x140009020
   140008fac:	jb     0x140008fd6
   140008fae:	xor    DWORD PTR [rsi],esi
   140008fb0:	xor    DWORD PTR [rcx+rbp*1],esi
   140008fb3:	and    ah,BYTE PTR [rax]
   140008fb5:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140008fb8:	je     0x14000901f
   140008fba:	outs   dx,BYTE PTR ds:[rsi]
   140008fbb:	je     0x140008ffa
   140008fbd:	and    ch,BYTE PTR [rcx+0x63]
   140008fc0:	outs   dx,DWORD PTR ds:[rsi]
   140008fc1:	outs   dx,BYTE PTR ds:[rsi]
   140008fc2:	sub    BYTE PTR [rcx],dh
   140008fc4:	xor    BYTE PTR [rcx],dh
   140008fc6:	sub    al,0x73
   140008fc8:	jns    0x14000903d
   140008fca:	ins    DWORD PTR es:[rdi],dx
   140008fcb:	gs je  0x140009040
   140008fce:	imul   esp,DWORD PTR [rbx+0x28],0x2c293934
   140008fd5:	jae    0x140009050
   140008fd7:	jae    0x140009046
   140008fd9:	gs je  0x14000904e
   140008fdc:	imul   esp,DWORD PTR [rbx+0x28],0x2c293035
   140008fe3:	ins    BYTE PTR es:[rdi],dx
   140008fe4:	imul   esp,DWORD PTR [rdx+0x72],0x28797261
   140008feb:	jne    0x140009060
   140008fed:	gs jb  0x140009023
   140008ff0:	xor    ch,BYTE PTR [rsi]
   140008ff2:	fs ins BYTE PTR es:[rdi],dx
   140008ff4:	ins    BYTE PTR es:[rdi],dx
   140008ff5:	sub    DWORD PTR [rcx],ebp
   140008ff7:	and    ah,BYTE PTR [rax]
   140008ff9:	ins    BYTE PTR es:[rdi],dx
   140008ffa:	(bad)  
   140008ffb:	jns    0x14000906c
   140008ffd:	jne    0x140009073
   140008fff:	jo     0x140009070
   140009001:	jae    0x140009040
   140009003:	and    ah,BYTE PTR [rbx+0x6c]
   140009006:	imul   esp,DWORD PTR [rbp+0x6e],0x76202274
   14000900d:	imul   esi,DWORD PTR [rbx+0x69],0x3d656c62
   140009014:	and    ah,BYTE PTR [rsi+0x61]
   140009017:	ins    BYTE PTR es:[rdi],dx
   140009018:	jae    0x14000907f
   14000901a:	and    ch,BYTE PTR [rdi]
   14000901c:	ds or  eax,0x6c653c0a
   140009022:	gs ins DWORD PTR es:[rdi],dx
   140009024:	outs   dx,BYTE PTR gs:[rsi]
   140009026:	je     0x140009048
   140009028:	imul   esp,DWORD PTR [rbp+rdi*1+0x22],0x6d6f7461
   140009030:	sub    BYTE PTR [rcx+0x6e],ch
   140009033:	outs   dx,WORD PTR ds:[rsi]
   140009035:	jae    0x1400090ab
   140009037:	(bad)  
   140009038:	je     0x1400090af
   14000903a:	jae    0x1400090a5
   14000903c:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000903f:	sub    DWORD PTR [rdx],esp
   140009041:	and    BYTE PTR [rcx+0x63],ah
   140009044:	movsxd esp,DWORD PTR [rbp+0x73]
   140009047:	jae    0x1400090b2
   140009049:	(bad)  
   14000904a:	ins    BYTE PTR es:[rdi],dx
   14000904b:	gs cmp eax,0x75727422
   140009051:	and    ah,BYTE PTR gs:[rax]
   140009054:	(bad)  
   140009055:	movsxd esp,DWORD PTR [rbx+0x72]
   140009058:	outs   dx,DWORD PTR ds:[rsi]
   140009059:	ins    BYTE PTR es:[rdi],dx
   14000905a:	gs cmp eax,0x61726722
   140009060:	jo     0x1400090ca
   140009062:	imul   esp,DWORD PTR [rbx+0x22],0x63636120
   140009069:	outs   dx,BYTE PTR ds:[rsi]
   14000906a:	(bad)  
   14000906b:	ins    DWORD PTR es:[rdi],dx
   14000906c:	gs cmp eax,0x73657222
   140009072:	jae    0x1400090e8
   140009074:	jb     0x14000909e
   140009076:	xor    DWORD PTR [rsi],esi
   140009078:	xor    BYTE PTR [rax],dh
   14000907a:	sub    DWORD PTR [rdx],esp
   14000907c:	and    BYTE PTR [rcx+0x63],ah
   14000907f:	movsxd eax,DWORD PTR [rbp+riz*2+0x73]
   140009083:	movsxd edi,DWORD PTR [rip+0x73657222]        # 0x1b36602ab
   140009089:	jae    0x1400090ff
   14000908b:	jb     0x1400090b5
   14000908d:	xor    DWORD PTR [rsi],esi
   14000908f:	xor    DWORD PTR [rip+0x63202229],esi        # 0x1a320b2be
   140009095:	outs   dx,DWORD PTR ds:[rsi]
   140009096:	outs   dx,BYTE PTR ds:[rsi]
   140009097:	je     0x1400090fe
   140009099:	outs   dx,BYTE PTR ds:[rsi]
   14000909a:	je     0x1400090d9
   14000909c:	and    ch,BYTE PTR [rcx+0x63]
   14000909f:	outs   dx,DWORD PTR ds:[rsi]
   1400090a0:	outs   dx,BYTE PTR ds:[rsi]
   1400090a1:	sub    BYTE PTR [rcx],dh
   1400090a3:	xor    BYTE PTR [rdx],dh
   1400090a5:	sub    al,0x73
   1400090a7:	jns    0x14000911c
   1400090a9:	ins    DWORD PTR es:[rdi],dx
   1400090aa:	gs je  0x14000911f
   1400090ad:	imul   esp,DWORD PTR [rbx+0x28],0x2c293934
   1400090b4:	jae    0x14000912f
   1400090b6:	jae    0x140009125
   1400090b8:	gs je  0x14000912d
   1400090bb:	imul   esp,DWORD PTR [rbx+0x28],0x2c293035
   1400090c2:	ins    BYTE PTR es:[rdi],dx
   1400090c3:	imul   esp,DWORD PTR [rdx+0x72],0x28797261
   1400090ca:	jne    0x14000913f
   1400090cc:	gs jb  0x140009102
   1400090cf:	xor    ch,BYTE PTR [rsi]
   1400090d1:	fs ins BYTE PTR es:[rdi],dx
   1400090d3:	ins    BYTE PTR es:[rdi],dx
   1400090d4:	sub    DWORD PTR [rcx],ebp
   1400090d6:	and    ah,BYTE PTR [rax]
   1400090d8:	ins    BYTE PTR es:[rdi],dx
   1400090d9:	(bad)  
   1400090da:	jns    0x14000914b
   1400090dc:	jne    0x140009152
   1400090de:	jo     0x14000914f
   1400090e0:	jae    0x14000911f
   1400090e2:	and    ch,BYTE PTR [rsi+0x6f]
   1400090e5:	outs   dx,BYTE PTR ds:[rsi]
   1400090e6:	and    ch,BYTE PTR gs:[rdi]
   1400090e9:	ds or  eax,0x6c653c0a
   1400090ef:	gs ins DWORD PTR es:[rdi],dx
   1400090f1:	outs   dx,BYTE PTR gs:[rsi]
   1400090f3:	je     0x140009115
   1400090f5:	imul   esp,DWORD PTR [rbp+rdi*1+0x22],0x6d6f7461
   1400090fd:	sub    BYTE PTR [rbp+0x72],ah
   140009100:	jb     0x140009171
   140009102:	jb     0x140009177
   140009104:	je     0x140009167
   140009106:	je     0x14000917d
   140009108:	jae    0x140009173
   14000910a:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000910d:	sub    DWORD PTR [rdx],esp
   14000910f:	and    BYTE PTR [rcx+0x63],ah
   140009112:	movsxd esp,DWORD PTR [rbp+0x73]
   140009115:	jae    0x140009180
   140009117:	(bad)  
   140009118:	ins    BYTE PTR es:[rdi],dx
   140009119:	gs cmp eax,0x75727422
   14000911f:	and    ah,BYTE PTR gs:[rax]
   140009122:	(bad)  
   140009123:	movsxd esp,DWORD PTR [rbx+0x72]
   140009126:	outs   dx,DWORD PTR ds:[rsi]
   140009127:	ins    BYTE PTR es:[rdi],dx
   140009128:	gs cmp eax,0x61726722
   14000912e:	jo     0x140009198
   140009130:	imul   esp,DWORD PTR [rbx+0x22],0x63636120
   140009137:	outs   dx,BYTE PTR ds:[rsi]
   140009138:	(bad)  
   140009139:	ins    DWORD PTR es:[rdi],dx
   14000913a:	gs cmp eax,0x73657222
   140009140:	jae    0x1400091b6
   140009142:	jb     0x14000916c
   140009144:	xor    DWORD PTR [rsi],esi
   140009146:	xor    BYTE PTR [rdx],dh
   140009148:	sub    DWORD PTR [rdx],esp
   14000914a:	and    BYTE PTR [rcx+0x63],ah
   14000914d:	movsxd eax,DWORD PTR [rbp+riz*2+0x73]
   140009151:	movsxd edi,DWORD PTR [rip+0x73657222]        # 0x1b3660379
   140009157:	jae    0x1400091cd
   140009159:	jb     0x140009183
   14000915b:	xor    DWORD PTR [rsi],esi
   14000915d:	xor    DWORD PTR [rsi],esi
   14000915f:	sub    DWORD PTR [rdx],esp
   140009161:	and    BYTE PTR [rbx+0x6f],ah
   140009164:	outs   dx,BYTE PTR ds:[rsi]
   140009165:	je     0x1400091cc
   140009167:	outs   dx,BYTE PTR ds:[rsi]
   140009168:	je     0x1400091a7
   14000916a:	and    ch,BYTE PTR [rcx+0x63]
   14000916d:	outs   dx,DWORD PTR ds:[rsi]
   14000916e:	outs   dx,BYTE PTR ds:[rsi]
   14000916f:	sub    BYTE PTR [rcx],dh
   140009171:	xor    BYTE PTR [rbx],dh
   140009173:	sub    al,0x73
   140009175:	jns    0x1400091ea
   140009177:	ins    DWORD PTR es:[rdi],dx
   140009178:	gs je  0x1400091ed
   14000917b:	imul   esp,DWORD PTR [rbx+0x28],0x2c293934
   140009182:	jae    0x1400091fd
   140009184:	jae    0x1400091f3
   140009186:	gs je  0x1400091fb
   140009189:	imul   esp,DWORD PTR [rbx+0x28],0x2c293035
   140009190:	ins    BYTE PTR es:[rdi],dx
   140009191:	imul   esp,DWORD PTR [rdx+0x72],0x28797261
   140009198:	jne    0x14000920d
   14000919a:	gs jb  0x1400091d0
   14000919d:	xor    ch,BYTE PTR [rsi]
   14000919f:	fs ins BYTE PTR es:[rdi],dx
   1400091a1:	ins    BYTE PTR es:[rdi],dx
   1400091a2:	sub    DWORD PTR [rcx],ebp
   1400091a4:	and    ah,BYTE PTR [rax]
   1400091a6:	ins    BYTE PTR es:[rdi],dx
   1400091a7:	(bad)  
   1400091a8:	jns    0x140009219
   1400091aa:	jne    0x140009220
   1400091ac:	jo     0x14000921d
   1400091ae:	jae    0x1400091ed
   1400091b0:	and    ch,BYTE PTR [rsi+0x6f]
   1400091b3:	outs   dx,BYTE PTR ds:[rsi]
   1400091b4:	and    ch,BYTE PTR gs:[rdi]
   1400091b7:	ds or  eax,0x652f3c0a
   1400091bd:	ins    BYTE PTR es:[rdi],dx
   1400091be:	gs ins DWORD PTR es:[rdi],dx
   1400091c0:	outs   dx,BYTE PTR gs:[rsi]
   1400091c2:	je     0x140009202
   1400091c4:	or     eax,0x6c653c0a
   1400091c9:	gs ins DWORD PTR es:[rdi],dx
   1400091cb:	outs   dx,BYTE PTR gs:[rsi]
   1400091cd:	je     0x1400091ef
   1400091cf:	imul   esp,DWORD PTR [rbp+rdi*1+0x22],0x6d6f7461
   1400091d7:	sub    BYTE PTR [rbx+0x74],dh
   1400091da:	(bad)  
   1400091db:	je     0x140009252
   1400091dd:	jae    0x140009253
   1400091df:	gs js  0x140009256
   1400091e2:	sub    DWORD PTR [rdx],esp
   1400091e4:	and    BYTE PTR [rcx+0x63],ah
   1400091e7:	movsxd esp,DWORD PTR [rbp+0x73]
   1400091ea:	jae    0x140009255
   1400091ec:	(bad)  
   1400091ed:	ins    BYTE PTR es:[rdi],dx
   1400091ee:	gs cmp eax,0x75727422
   1400091f4:	and    ah,BYTE PTR gs:[rax]
   1400091f7:	(bad)  
   1400091f8:	movsxd esp,DWORD PTR [rbx+0x72]
   1400091fb:	outs   dx,DWORD PTR ds:[rsi]
   1400091fc:	ins    BYTE PTR es:[rdi],dx
   1400091fd:	gs cmp eax,0x61747322
   140009203:	je     0x14000926e
   140009205:	movsxd esi,DWORD PTR [rbp+riz*2+0x78]
   140009209:	je     0x14000922d
   14000920b:	and    BYTE PTR [rbx+0x6c],ah
   14000920e:	(bad)  
   14000920f:	jae    0x140009284
   140009211:	cmp    eax,0x72617022
   140009216:	(bad)  
   140009217:	and    ah,BYTE PTR [rax]
   140009219:	jae    0x140009283
   14000921b:	gs gs je 0x14000925c
   14000921f:	and    ch,BYTE PTR [rdi+rbp*2+0x63]
   140009223:	(bad)  
   140009224:	ins    BYTE PTR es:[rdi],dx
   140009225:	and    ah,BYTE PTR [rax]
   140009227:	ins    BYTE PTR es:[rdi],dx
   140009228:	(bad)  
   140009229:	jns    0x14000929a
   14000922b:	jne    0x1400092a1
   14000922d:	jo     0x14000929e
   14000922f:	jae    0x14000926e
   140009231:	and    ah,BYTE PTR [rbx+0x6c]
   140009234:	imul   esp,DWORD PTR [rbp+0x6e],0x76202274
   14000923b:	imul   esi,DWORD PTR [rbx+0x69],0x3d656c62
   140009242:	and    ah,BYTE PTR [rsi+0x61]
   140009245:	ins    BYTE PTR es:[rdi],dx
   140009246:	jae    0x1400092ad
   140009248:	and    ah,BYTE PTR [rax]
   14000924a:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000924d:	je     0x1400092b4
   14000924f:	outs   dx,BYTE PTR ds:[rsi]
   140009250:	je     0x14000928f
   140009252:	and    dh,BYTE PTR [rdx+0x65]
   140009255:	jae    0x1400092ca
   140009257:	je     0x1400092cb
   140009259:	sub    BYTE PTR [rcx],dh
   14000925b:	xor    BYTE PTR ss:[rbx],dh
   14000925e:	sub    DWORD PTR [rdx],esp
   140009260:	(bad)  
   140009261:	ds or  eax,0x652f3c0a
   140009267:	ins    BYTE PTR es:[rdi],dx
   140009268:	gs ins DWORD PTR es:[rdi],dx
   14000926a:	outs   dx,BYTE PTR gs:[rsi]
   14000926c:	je     0x1400092ac
   14000926e:	or     eax,0x652f3c0a
   140009273:	ins    BYTE PTR es:[rdi],dx
   140009274:	gs ins DWORD PTR es:[rdi],dx
   140009276:	outs   dx,BYTE PTR gs:[rsi]
   140009278:	je     0x1400092b8
   14000927a:	or     eax,0x6c653c0a
   14000927f:	gs ins DWORD PTR es:[rdi],dx
   140009281:	outs   dx,BYTE PTR gs:[rsi]
   140009283:	je     0x1400092a5
   140009285:	jb     0x1400092ec
   140009287:	jae    0x1400092f2
   140009289:	fs cmp eax,0x67617022
   14000928f:	xor    DWORD PTR gs:[rdx],esp
   140009292:	and    BYTE PTR [rcx+0x64],ch
   140009295:	cmp    eax,0x6f746122
   14000929a:	ins    DWORD PTR es:[rdi],dx
   14000929b:	sub    BYTE PTR [rdi+0x69],dh
   14000929e:	jp     0x140009301
   1400092a0:	jb     0x140009306
   1400092a2:	jb     0x140009313
   1400092a4:	outs   dx,DWORD PTR ds:[rsi]
   1400092a5:	je     0x1400092d0
   1400092a7:	and    ah,BYTE PTR [rax]
   1400092a9:	jae    0x140009313
   1400092ab:	gs gs je 0x1400092ec
   1400092af:	and    ah,BYTE PTR [rbx+0x6f]
   1400092b2:	ins    DWORD PTR es:[rdi],dx
   1400092b3:	ins    DWORD PTR es:[rdi],dx
   1400092b4:	outs   dx,DWORD PTR ds:[rsi]
   1400092b5:	outs   dx,BYTE PTR ds:[rsi]
   1400092b6:	and    ah,BYTE PTR [rax]
   1400092b8:	ins    BYTE PTR es:[rdi],dx
   1400092b9:	(bad)  
   1400092ba:	jns    0x14000932b
   1400092bc:	jne    0x140009332
   1400092be:	cmp    eax,0x726f6222
   1400092c3:	fs gs jb 0x140009333
   1400092c7:	(bad)  
   1400092c8:	jns    0x140009339
   1400092ca:	jne    0x140009340
   1400092cc:	sub    BYTE PTR [rcx],ch
   1400092ce:	and    ah,BYTE PTR [rax]
   1400092d0:	ja     0x14000933b
   1400092d2:	fs je  0x14000933d
   1400092d5:	cmp    eax,0x33363522
   1400092da:	jb     0x14000934c
   1400092dc:	and    ah,BYTE PTR [rax]
   1400092de:	push   0x68676965
   1400092e3:	je     0x140009322
   1400092e5:	and    dh,BYTE PTR [rbx]
   1400092e7:	xor    BYTE PTR [rax],dh
   1400092e9:	jb     0x14000935b
   1400092eb:	and    bh,BYTE PTR [rsi]
   1400092ed:	or     eax,0x6c653c0a
   1400092f2:	gs ins DWORD PTR es:[rdi],dx
   1400092f4:	outs   dx,BYTE PTR gs:[rsi]
   1400092f6:	je     0x140009318
   1400092f8:	imul   esp,DWORD PTR [rbp+rdi*1+0x22],0x6d6f7461
   140009300:	sub    BYTE PTR [rdi+0x69],dh
   140009303:	jp     0x140009379
   140009305:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x63202229
   14000930d:	outs   dx,DWORD PTR ds:[rsi]
   14000930e:	outs   dx,BYTE PTR ds:[rsi]
   14000930f:	je     0x140009376
   140009311:	outs   dx,BYTE PTR ds:[rsi]
   140009312:	je     0x140009351
   140009314:	and    dh,BYTE PTR [rdx+0x65]
   140009317:	jae    0x14000938c
   140009319:	je     0x14000938d
   14000931b:	sub    BYTE PTR [rcx],dh
   14000931d:	xor    BYTE PTR ss:[rcx+rbp*1],dh
   140009321:	and    ah,BYTE PTR [rax]
   140009323:	(bad)  
   140009324:	movsxd esp,DWORD PTR [rbx+0x72]
   140009327:	outs   dx,DWORD PTR ds:[rsi]
   140009328:	ins    BYTE PTR es:[rdi],dx
   140009329:	gs cmp eax,0x61747322
   14000932f:	je     0x14000939a
   140009331:	movsxd esi,DWORD PTR [rbp+riz*2+0x78]
   140009335:	je     0x140009359
   140009337:	and    BYTE PTR [rcx+0x63],ah
   14000933a:	movsxd esp,DWORD PTR [rbp+0x73]
   14000933d:	jae    0x1400093a8
   14000933f:	(bad)  
   140009340:	ins    BYTE PTR es:[rdi],dx
   140009341:	gs cmp eax,0x75727422
   140009347:	and    ch,BYTE PTR gs:[rdi]
   14000934a:	ds or  eax,0x6c653c0a
   140009350:	gs ins DWORD PTR es:[rdi],dx
   140009352:	outs   dx,BYTE PTR gs:[rsi]
   140009354:	je     0x140009376
   140009356:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
   14000935a:	jae    0x140009399
   14000935c:	and    dh,BYTE PTR [rax+0x61]
   14000935f:	jb     0x1400093c2
   140009361:	and    ah,BYTE PTR [rax]
   140009363:	ins    BYTE PTR es:[rdi],dx
   140009364:	(bad)  
   140009365:	jns    0x1400093d6
   140009367:	jne    0x1400093dd
   140009369:	jo     0x1400093da
   14000936b:	jae    0x1400093aa
   14000936d:	and    dh,BYTE PTR [rdi+rbp*2+0x70]
   140009371:	and    ah,BYTE PTR [rax]
   140009373:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140009376:	je     0x1400093dd
   140009378:	outs   dx,BYTE PTR ds:[rsi]
   140009379:	je     0x1400093b8
   14000937b:	and    dh,BYTE PTR [rdx+0x65]
   14000937e:	jae    0x1400093f3
   140009380:	je     0x1400093f4
   140009382:	sub    BYTE PTR [rcx],dh
   140009384:	xor    BYTE PTR ss:[rip+0x61202229],dh        # 0x1a120b5b4
   14000938b:	movsxd esp,DWORD PTR [rbx+0x72]
   14000938e:	outs   dx,DWORD PTR ds:[rsi]
   14000938f:	ins    BYTE PTR es:[rdi],dx
   140009390:	gs cmp eax,0x61747322
   140009396:	je     0x140009401
   140009398:	movsxd esi,DWORD PTR [rbp+riz*2+0x78]
   14000939c:	je     0x1400093c0
   14000939e:	and    BYTE PTR [rcx+0x63],ah
   1400093a1:	movsxd esp,DWORD PTR [rbp+0x73]
   1400093a4:	jae    0x14000940f
   1400093a6:	(bad)  
   1400093a7:	ins    BYTE PTR es:[rdi],dx
   1400093a8:	gs cmp eax,0x75727422
   1400093ae:	and    ch,BYTE PTR gs:[rdi]
   1400093b1:	ds or  eax,0x6c653c0a
   1400093b7:	gs ins DWORD PTR es:[rdi],dx
   1400093b9:	outs   dx,BYTE PTR gs:[rsi]
   1400093bb:	je     0x1400093dd
   1400093bd:	ins    BYTE PTR es:[rdi],dx
   1400093be:	(bad)  
   1400093bf:	jns    0x140009430
   1400093c1:	jne    0x140009437
   1400093c3:	jo     0x140009434
   1400093c5:	jae    0x140009404
   1400093c7:	and    dh,BYTE PTR [rdi+rbp*2+0x70]
   1400093cb:	and    ah,BYTE PTR [rax]
   1400093cd:	ins    BYTE PTR es:[rdi],dx
   1400093ce:	(bad)  
   1400093cf:	jns    0x140009440
   1400093d1:	jne    0x140009447
   1400093d3:	cmp    eax,0x726f6222
   1400093d8:	fs gs jb 0x140009448
   1400093dc:	(bad)  
   1400093dd:	jns    0x14000944e
   1400093df:	jne    0x140009455
   1400093e1:	sub    BYTE PTR [rcx],ch
   1400093e3:	and    ah,BYTE PTR [rax]
   1400093e5:	jo     0x140009448
   1400093e7:	fs imul ebp,DWORD PTR fs:[rsi+0x67],0x6572223d
   1400093f0:	movsxd esi,DWORD PTR [rax+rbp*1+0x30]
   1400093f4:	jb     0x140009466
   1400093f6:	sub    al,0x33
   1400093f8:	xor    eax,0x302c7072
   1400093fd:	jb     0x14000946f
   1400093ff:	sub    al,0x30
   140009401:	jb     0x140009473
   140009403:	sub    DWORD PTR [rdx],esp
   140009405:	ds or  eax,0x6c653c0a
   14000940b:	gs ins DWORD PTR es:[rdi],dx
   14000940d:	outs   dx,BYTE PTR gs:[rsi]
   14000940f:	je     0x140009431
   140009411:	imul   esp,DWORD PTR [rbp+rdi*1+0x22],0x6d6f7461
   140009419:	sub    BYTE PTR [rbx+0x6f],ah
   14000941c:	ins    DWORD PTR es:[rdi],dx
   14000941d:	jo     0x140009494
   14000941f:	je     0x140009486
   140009421:	jb     0x140009471
   140009423:	(bad)  
   140009424:	ins    DWORD PTR es:[rdi],dx
   140009425:	gs push rsp
   140009427:	gs js  0x14000949e
   14000942a:	sub    DWORD PTR [rdx],esp
   14000942c:	and    BYTE PTR [rbx+0x6f],ah
   14000942f:	outs   dx,BYTE PTR ds:[rsi]
   140009430:	je     0x140009497
   140009432:	outs   dx,BYTE PTR ds:[rsi]
   140009433:	je     0x140009472
   140009435:	and    dh,BYTE PTR [rdx+0x65]
   140009438:	jae    0x1400094ad
   14000943a:	je     0x1400094ae
   14000943c:	sub    BYTE PTR [rcx],dh
   14000943e:	xor    BYTE PTR ss:[rsi],dh
   140009441:	sub    DWORD PTR [rdx],esp
   140009443:	and    BYTE PTR [rbx+0x6f],ah
   140009446:	outs   dx,BYTE PTR ds:[rsi]
   140009447:	je     0x1400094ae
   140009449:	outs   dx,BYTE PTR ds:[rsi]
   14000944a:	je     0x1400094ad
   14000944c:	ins    BYTE PTR es:[rdi],dx
   14000944d:	imul   esp,DWORD PTR [rdi+0x6e],0x7277223d
   140009454:	(bad)  
   140009455:	jo     0x1400094c3
   140009457:	gs data16 je 0x14000947d
   14000945b:	and    BYTE PTR [rcx+0x63],ah
   14000945e:	movsxd esi,DWORD PTR [rdx+0x6f]
   140009461:	ins    BYTE PTR es:[rdi],dx
   140009462:	gs cmp eax,0x61747322
   140009468:	je     0x1400094d3
   14000946a:	movsxd esi,DWORD PTR [rbp+riz*2+0x78]
   14000946e:	je     0x140009492
   140009470:	and    BYTE PTR [rcx+0x63],ah
   140009473:	movsxd esp,DWORD PTR [rbp+0x73]
   140009476:	jae    0x1400094e1
   140009478:	(bad)  
   140009479:	ins    BYTE PTR es:[rdi],dx
   14000947a:	gs cmp eax,0x75727422
   140009480:	and    ah,BYTE PTR gs:[rax]
   140009483:	jo     0x1400094e6
   140009485:	fs imul ebp,DWORD PTR fs:[rsi+0x67],0x6572223d
   14000948e:	movsxd esi,DWORD PTR [rax+rbp*1+0x30]
   140009492:	jb     0x140009504
   140009494:	sub    al,0x30
   140009496:	jb     0x140009508
   140009498:	sub    al,0x31
   14000949a:	xor    BYTE PTR [rdx+0x70],dh
   14000949d:	sub    al,0x30
   14000949f:	jb     0x140009511
   1400094a1:	sub    DWORD PTR [rdx],esp
   1400094a3:	and    BYTE PTR [rdi+0x69],dh
   1400094a6:	fs je  0x140009511
   1400094a9:	cmp    eax,0x30323122
   1400094ae:	jb     0x140009520
   1400094b0:	and    ah,BYTE PTR [rax]
   1400094b2:	ins    BYTE PTR es:[rdi],dx
   1400094b3:	(bad)  
   1400094b4:	jns    0x140009525
   1400094b6:	jne    0x14000952c
   1400094b8:	jo     0x140009529
   1400094ba:	jae    0x1400094f9
   1400094bc:	and    ch,BYTE PTR [rbp+riz*2+0x66]
   1400094c0:	je     0x1400094e4
   1400094c2:	(bad)  
   1400094c3:	ds or  eax,0x6c653c0a
   1400094c9:	gs ins DWORD PTR es:[rdi],dx
   1400094cb:	outs   dx,BYTE PTR gs:[rsi]
   1400094cd:	je     0x1400094ef
   1400094cf:	imul   esp,DWORD PTR [rbp+rdi*1+0x22],0x6d6f7461
   1400094d7:	sub    BYTE PTR [rbp+0x61],ch
   1400094da:	movsxd ebp,DWORD PTR [rax+0x69]
   1400094dd:	outs   dx,BYTE PTR ds:[rsi]
   1400094de:	gs rex.WRX (bad) 
   1400094e1:	ins    DWORD PTR es:[rdi],dx
   1400094e2:	sub    DWORD PTR gs:[rdx],esp
   1400094e5:	and    BYTE PTR [rax+0x61],dh
   1400094e8:	fs imul ebp,DWORD PTR fs:[rsi+0x67],0x6572223d
   1400094f1:	movsxd esi,DWORD PTR [rax+rbp*1+0x30]
   1400094f5:	jb     0x140009567
   1400094f7:	sub    al,0x30
   1400094f9:	jb     0x14000956b
   1400094fb:	sub    al,0x31
   1400094fd:	xor    BYTE PTR [rdx+0x70],dh
   140009500:	sub    al,0x30
   140009502:	jb     0x140009574
   140009504:	sub    DWORD PTR [rdx],esp
   140009506:	and    BYTE PTR [rbx+0x6f],ah
   140009509:	outs   dx,BYTE PTR ds:[rsi]
   14000950a:	je     0x140009571
   14000950c:	outs   dx,BYTE PTR ds:[rsi]
   14000950d:	je     0x14000954c
   14000950f:	and    dh,BYTE PTR [rdx+0x65]
   140009512:	jae    0x140009587
   140009514:	je     0x140009588
   140009516:	sub    BYTE PTR [rcx],dh
   140009518:	xor    BYTE PTR ss:[rdi],dh
   14000951b:	sub    DWORD PTR [rdx],esp
   14000951d:	and    BYTE PTR [rbx+0x6f],ah
   140009520:	outs   dx,BYTE PTR ds:[rsi]
   140009521:	je     0x140009588
   140009523:	outs   dx,BYTE PTR ds:[rsi]
   140009524:	je     0x140009587
   140009526:	ins    BYTE PTR es:[rdi],dx
   140009527:	imul   esp,DWORD PTR [rdi+0x6e],0x7277223d
   14000952e:	(bad)  
   14000952f:	jo     0x14000959d
   140009531:	gs data16 je 0x140009557
   140009535:	and    BYTE PTR [rcx+0x63],ah
   140009538:	movsxd esi,DWORD PTR [rdx+0x6f]
   14000953b:	ins    BYTE PTR es:[rdi],dx
   14000953c:	gs cmp eax,0x61747322
   140009542:	je     0x1400095ad
   140009544:	movsxd esi,DWORD PTR [rbp+riz*2+0x78]
   140009548:	je     0x14000956c
   14000954a:	and    BYTE PTR [rcx+0x63],ah
   14000954d:	movsxd esp,DWORD PTR [rbp+0x73]
   140009550:	jae    0x1400095bb
   140009552:	(bad)  
   140009553:	ins    BYTE PTR es:[rdi],dx
   140009554:	gs cmp eax,0x75727422
   14000955a:	and    ah,BYTE PTR gs:[rax]
   14000955d:	ins    BYTE PTR es:[rdi],dx
   14000955e:	(bad)  
   14000955f:	jns    0x1400095d0
   140009561:	jne    0x1400095d7
   140009563:	jo     0x1400095d4
   140009565:	jae    0x1400095a4
   140009567:	and    ah,BYTE PTR [rbx+0x6c]
   14000956a:	imul   esp,DWORD PTR [rbp+0x6e],0x3e2f2274
   140009571:	or     eax,0x652f3c0a
   140009576:	ins    BYTE PTR es:[rdi],dx
   140009577:	gs ins DWORD PTR es:[rdi],dx
   140009579:	outs   dx,BYTE PTR gs:[rsi]
   14000957b:	je     0x1400095bb
   14000957d:	or     eax,0x6c653c0a
   140009582:	gs ins DWORD PTR es:[rdi],dx
   140009584:	outs   dx,BYTE PTR gs:[rsi]
   140009586:	je     0x1400095a8
   140009588:	ins    BYTE PTR es:[rdi],dx
   140009589:	(bad)  
   14000958a:	jns    0x1400095fb
   14000958c:	jne    0x140009602
   14000958e:	jo     0x1400095ff
   140009590:	jae    0x1400095cf
   140009592:	and    dh,BYTE PTR [rdi+rbp*2+0x70]
   140009596:	and    ah,BYTE PTR [rax]
   140009598:	ins    BYTE PTR es:[rdi],dx
   140009599:	(bad)  
   14000959a:	jns    0x14000960b
   14000959c:	jne    0x140009612
   14000959e:	cmp    eax,0x726f6222
   1400095a3:	fs gs jb 0x140009613
   1400095a7:	(bad)  
   1400095a8:	jns    0x140009619
   1400095aa:	jne    0x140009620
   1400095ac:	sub    BYTE PTR [rcx],ch
   1400095ae:	and    ah,BYTE PTR [rax]
   1400095b0:	jo     0x140009613
   1400095b2:	fs imul ebp,DWORD PTR fs:[rsi+0x67],0x6572223d
   1400095bb:	movsxd esi,DWORD PTR [rax+rbp*1+0x30]
   1400095bf:	jb     0x140009631
   1400095c1:	sub    al,0x31
   1400095c3:	xor    eax,0x302c7072
   1400095c8:	jb     0x14000963a
   1400095ca:	sub    al,0x30
   1400095cc:	jb     0x14000963e
   1400095ce:	sub    DWORD PTR [rdx],esp
   1400095d0:	ds or  eax,0x6c653c0a
   1400095d6:	gs ins DWORD PTR es:[rdi],dx
   1400095d8:	outs   dx,BYTE PTR gs:[rsi]
   1400095da:	je     0x1400095fc
   1400095dc:	imul   esp,DWORD PTR [rbp+rdi*1+0x22],0x6d6f7461
   1400095e4:	sub    BYTE PTR [rbp+0x73],dh
   1400095e7:	gs jb  0x140009658
   1400095ea:	(bad)  
   1400095eb:	ins    DWORD PTR es:[rdi],dx
   1400095ec:	gs push rsp
   1400095ee:	gs js  0x140009665
   1400095f1:	sub    DWORD PTR [rdx],esp
   1400095f3:	and    BYTE PTR [rbx+0x6f],ah
   1400095f6:	outs   dx,BYTE PTR ds:[rsi]
   1400095f7:	je     0x14000965e
   1400095f9:	outs   dx,BYTE PTR ds:[rsi]
   1400095fa:	je     0x140009639
   1400095fc:	and    dh,BYTE PTR [rdx+0x65]
   1400095ff:	jae    0x140009674
   140009601:	je     0x140009675
   140009603:	sub    BYTE PTR [rcx],dh
   140009605:	xor    BYTE PTR ss:[rax],bh
   140009608:	sub    DWORD PTR [rdx],esp
   14000960a:	and    BYTE PTR [rbx+0x6f],ah
   14000960d:	outs   dx,BYTE PTR ds:[rsi]
   14000960e:	je     0x140009675
   140009610:	outs   dx,BYTE PTR ds:[rsi]
   140009611:	je     0x140009674
   140009613:	ins    BYTE PTR es:[rdi],dx
   140009614:	imul   esp,DWORD PTR [rdi+0x6e],0x7277223d
   14000961b:	(bad)  
   14000961c:	jo     0x14000968a
   14000961e:	gs data16 je 0x140009644
   140009622:	and    BYTE PTR [rcx+0x63],ah
   140009625:	movsxd esi,DWORD PTR [rdx+0x6f]
   140009628:	ins    BYTE PTR es:[rdi],dx
   140009629:	gs cmp eax,0x61747322
   14000962f:	je     0x14000969a
   140009631:	movsxd esi,DWORD PTR [rbp+riz*2+0x78]
   140009635:	je     0x140009659
   140009637:	and    BYTE PTR [rcx+0x63],ah
   14000963a:	movsxd esp,DWORD PTR [rbp+0x73]
   14000963d:	jae    0x1400096a8
   14000963f:	(bad)  
   140009640:	ins    BYTE PTR es:[rdi],dx
   140009641:	gs cmp eax,0x75727422
   140009647:	and    ah,BYTE PTR gs:[rax]
   14000964a:	jo     0x1400096ad
   14000964c:	fs imul ebp,DWORD PTR fs:[rsi+0x67],0x6572223d
   140009655:	movsxd esi,DWORD PTR [rax+rbp*1+0x30]
   140009659:	jb     0x1400096cb
   14000965b:	sub    al,0x30
   14000965d:	jb     0x1400096cf
   14000965f:	sub    al,0x31
   140009661:	xor    BYTE PTR [rdx+0x70],dh
   140009664:	sub    al,0x30
   140009666:	jb     0x1400096d8
   140009668:	sub    DWORD PTR [rdx],esp
   14000966a:	and    BYTE PTR [rdi+0x69],dh
   14000966d:	fs je  0x1400096d8
   140009670:	cmp    eax,0x30323122
   140009675:	jb     0x1400096e7
   140009677:	and    ah,BYTE PTR [rax]
   140009679:	ins    BYTE PTR es:[rdi],dx
   14000967a:	(bad)  
   14000967b:	jns    0x1400096ec
   14000967d:	jne    0x1400096f3
   14000967f:	jo     0x1400096f0
   140009681:	jae    0x1400096c0
   140009683:	and    ch,BYTE PTR [rbp+riz*2+0x66]
   140009687:	je     0x1400096ab
   140009689:	(bad)  
   14000968a:	ds or  eax,0x6c653c0a
   140009690:	gs ins DWORD PTR es:[rdi],dx
   140009692:	outs   dx,BYTE PTR gs:[rsi]
   140009694:	je     0x1400096b6
   140009696:	imul   esp,DWORD PTR [rbp+rdi*1+0x22],0x6d6f7461
   14000969e:	sub    BYTE PTR [rbp+0x73],dh
   1400096a1:	gs jb  0x1400096f2
   1400096a4:	(bad)  
   1400096a5:	ins    DWORD PTR es:[rdi],dx
   1400096a6:	sub    DWORD PTR gs:[rdx],esp
   1400096a9:	and    BYTE PTR [rax+0x61],dh
   1400096ac:	fs imul ebp,DWORD PTR fs:[rsi+0x67],0x6572223d
   1400096b5:	movsxd esi,DWORD PTR [rax+rbp*1+0x30]
   1400096b9:	jb     0x14000972b
   1400096bb:	sub    al,0x30
   1400096bd:	jb     0x14000972f
   1400096bf:	sub    al,0x31
   1400096c1:	xor    BYTE PTR [rdx+0x70],dh
   1400096c4:	sub    al,0x30
   1400096c6:	jb     0x140009738
   1400096c8:	sub    DWORD PTR [rdx],esp
   1400096ca:	and    BYTE PTR [rbx+0x6f],ah
   1400096cd:	outs   dx,BYTE PTR ds:[rsi]
   1400096ce:	je     0x140009735
   1400096d0:	outs   dx,BYTE PTR ds:[rsi]
   1400096d1:	je     0x140009710
   1400096d3:	and    dh,BYTE PTR [rdx+0x65]
   1400096d6:	jae    0x14000974b
   1400096d8:	je     0x14000974c
   1400096da:	sub    BYTE PTR [rcx],dh
   1400096dc:	xor    BYTE PTR ss:[rcx],bh
   1400096df:	sub    DWORD PTR [rdx],esp
   1400096e1:	and    BYTE PTR [rbx+0x6f],ah
   1400096e4:	outs   dx,BYTE PTR ds:[rsi]
   1400096e5:	je     0x14000974c
   1400096e7:	outs   dx,BYTE PTR ds:[rsi]
   1400096e8:	je     0x14000974b
   1400096ea:	ins    BYTE PTR es:[rdi],dx
   1400096eb:	imul   esp,DWORD PTR [rdi+0x6e],0x7277223d
   1400096f2:	(bad)  
   1400096f3:	jo     0x140009761
   1400096f5:	gs data16 je 0x14000971b
   1400096f9:	and    BYTE PTR [rcx+0x63],ah
   1400096fc:	movsxd esi,DWORD PTR [rdx+0x6f]
   1400096ff:	ins    BYTE PTR es:[rdi],dx
   140009700:	gs cmp eax,0x61747322
   140009706:	je     0x140009771
   140009708:	movsxd esi,DWORD PTR [rbp+riz*2+0x78]
   14000970c:	je     0x140009730
   14000970e:	and    BYTE PTR [rcx+0x63],ah
   140009711:	movsxd esp,DWORD PTR [rbp+0x73]
   140009714:	jae    0x14000977f
   140009716:	(bad)  
   140009717:	ins    BYTE PTR es:[rdi],dx
   140009718:	gs cmp eax,0x75727422
   14000971e:	and    ah,BYTE PTR gs:[rax]
   140009721:	ins    BYTE PTR es:[rdi],dx
   140009722:	(bad)  
   140009723:	jns    0x140009794
   140009725:	jne    0x14000979b
   140009727:	jo     0x140009798
   140009729:	jae    0x140009768
   14000972b:	and    ah,BYTE PTR [rbx+0x6c]
   14000972e:	imul   esp,DWORD PTR [rbp+0x6e],0x3e2f2274
   140009735:	or     eax,0x652f3c0a
   14000973a:	ins    BYTE PTR es:[rdi],dx
   14000973b:	gs ins DWORD PTR es:[rdi],dx
   14000973d:	outs   dx,BYTE PTR gs:[rsi]
   14000973f:	je     0x14000977f
   140009741:	or     eax,0x6c653c0a
   140009746:	gs ins DWORD PTR es:[rdi],dx
   140009748:	outs   dx,BYTE PTR gs:[rsi]
   14000974a:	je     0x14000976c
   14000974c:	ins    BYTE PTR es:[rdi],dx
   14000974d:	(bad)  
   14000974e:	jns    0x1400097bf
   140009750:	jne    0x1400097c6
   140009752:	jo     0x1400097c3
   140009754:	jae    0x140009793
   140009756:	and    dh,BYTE PTR [rdi+rbp*2+0x70]
   14000975a:	and    ah,BYTE PTR [rax]
   14000975c:	ins    BYTE PTR es:[rdi],dx
   14000975d:	(bad)  
   14000975e:	jns    0x1400097cf
   140009760:	jne    0x1400097d6
   140009762:	cmp    eax,0x726f6222
   140009767:	fs gs jb 0x1400097d7
   14000976b:	(bad)  
   14000976c:	jns    0x1400097dd
   14000976e:	jne    0x1400097e4
   140009770:	sub    BYTE PTR [rcx],ch
   140009772:	and    ah,BYTE PTR [rax]
   140009774:	jo     0x1400097d7
   140009776:	fs imul ebp,DWORD PTR fs:[rsi+0x67],0x6572223d
   14000977f:	movsxd esi,DWORD PTR [rax+rbp*1+0x30]
   140009783:	jb     0x1400097f5
   140009785:	sub    al,0x31
   140009787:	xor    eax,0x302c7072
   14000978c:	jb     0x1400097fe
   14000978e:	sub    al,0x30
   140009790:	jb     0x140009802
   140009792:	sub    DWORD PTR [rdx],esp
   140009794:	ds or  eax,0x6c653c0a
   14000979a:	gs ins DWORD PTR es:[rdi],dx
   14000979c:	outs   dx,BYTE PTR gs:[rsi]
   14000979e:	je     0x1400097c0
   1400097a0:	imul   esp,DWORD PTR [rbp+rdi*1+0x22],0x6d6f7461
   1400097a8:	sub    BYTE PTR [rax+0x61],dh
   1400097ab:	jae    0x140009820
   1400097ad:	ja     0x14000981e
   1400097af:	jb     0x140009815
   1400097b1:	push   rsp
   1400097b2:	gs js  0x140009829
   1400097b5:	sub    DWORD PTR [rdx],esp
   1400097b7:	and    BYTE PTR [rbx+0x6f],ah
   1400097ba:	outs   dx,BYTE PTR ds:[rsi]
   1400097bb:	je     0x140009822
   1400097bd:	outs   dx,BYTE PTR ds:[rsi]
   1400097be:	je     0x1400097fd
   1400097c0:	and    dh,BYTE PTR [rdx+0x65]
   1400097c3:	jae    0x140009838
   1400097c5:	je     0x140009839
   1400097c7:	sub    BYTE PTR [rcx],dh
   1400097c9:	xor    DWORD PTR ss:[rax],esi
   1400097cc:	sub    DWORD PTR [rdx],esp
   1400097ce:	and    BYTE PTR [rbx+0x6f],ah
   1400097d1:	outs   dx,BYTE PTR ds:[rsi]
   1400097d2:	je     0x140009839
   1400097d4:	outs   dx,BYTE PTR ds:[rsi]
   1400097d5:	je     0x140009838
   1400097d7:	ins    BYTE PTR es:[rdi],dx
   1400097d8:	imul   esp,DWORD PTR [rdi+0x6e],0x7277223d
   1400097df:	(bad)  
   1400097e0:	jo     0x14000984e
   1400097e2:	gs data16 je 0x140009808
   1400097e6:	and    BYTE PTR [rcx+0x63],ah
   1400097e9:	movsxd esi,DWORD PTR [rdx+0x6f]
   1400097ec:	ins    BYTE PTR es:[rdi],dx
   1400097ed:	gs cmp eax,0x61747322
   1400097f3:	je     0x14000985e
   1400097f5:	movsxd esi,DWORD PTR [rbp+riz*2+0x78]
   1400097f9:	je     0x14000981d
   1400097fb:	and    BYTE PTR [rcx+0x63],ah
   1400097fe:	movsxd esp,DWORD PTR [rbp+0x73]
   140009801:	jae    0x14000986c
   140009803:	(bad)  
   140009804:	ins    BYTE PTR es:[rdi],dx
   140009805:	gs cmp eax,0x75727422
   14000980b:	and    ah,BYTE PTR gs:[rax]
   14000980e:	jo     0x140009871
   140009810:	fs imul ebp,DWORD PTR fs:[rsi+0x67],0x6572223d
   140009819:	movsxd esi,DWORD PTR [rax+rbp*1+0x30]
   14000981d:	jb     0x14000988f
   14000981f:	sub    al,0x30
   140009821:	jb     0x140009893
   140009823:	sub    al,0x31
   140009825:	xor    BYTE PTR [rdx+0x70],dh
   140009828:	sub    al,0x30
   14000982a:	jb     0x14000989c
   14000982c:	sub    DWORD PTR [rdx],esp
   14000982e:	and    BYTE PTR [rdi+0x69],dh
   140009831:	fs je  0x14000989c
   140009834:	cmp    eax,0x30323122
   140009839:	jb     0x1400098ab
   14000983b:	and    ah,BYTE PTR [rax]
   14000983d:	ins    BYTE PTR es:[rdi],dx
   14000983e:	(bad)  
   14000983f:	jns    0x1400098b0
   140009841:	jne    0x1400098b7
   140009843:	jo     0x1400098b4
   140009845:	jae    0x140009884
   140009847:	and    ch,BYTE PTR [rbp+riz*2+0x66]
   14000984b:	je     0x14000986f
   14000984d:	(bad)  
   14000984e:	ds or  eax,0x6c653c0a
   140009854:	gs ins DWORD PTR es:[rdi],dx
   140009856:	outs   dx,BYTE PTR gs:[rsi]
   140009858:	je     0x14000987a
   14000985a:	ins    BYTE PTR es:[rdi],dx
   14000985b:	(bad)  
   14000985c:	jns    0x1400098cd
   14000985e:	jne    0x1400098d4
   140009860:	cmp    eax,0x726f6222
   140009865:	fs gs jb 0x1400098d5
   140009869:	(bad)  
   14000986a:	jns    0x1400098db
   14000986c:	jne    0x1400098e2
   14000986e:	sub    BYTE PTR [rcx],ch
   140009870:	and    ah,BYTE PTR [rax]
   140009872:	jo     0x1400098d5
   140009874:	fs imul ebp,DWORD PTR fs:[rsi+0x67],0x6572223d
   14000987d:	movsxd esi,DWORD PTR [rax+rbp*1+0x30]
   140009881:	jb     0x1400098f3
   140009883:	sub    al,0x30
   140009885:	jb     0x1400098f7
   140009887:	sub    al,0x31
   140009889:	xor    BYTE PTR [rdx+0x70],dh
   14000988c:	sub    al,0x30
   14000988e:	jb     0x140009900
   140009890:	sub    DWORD PTR [rdx],esp
   140009892:	and    BYTE PTR [rcx+riz*2+0x79],ch
   140009896:	outs   dx,DWORD PTR ds:[rsi]
   140009897:	jne    0x14000990d
   140009899:	jo     0x14000990a
   14000989b:	jae    0x1400098da
   14000989d:	and    ah,BYTE PTR [rbx+0x6c]
   1400098a0:	imul   esp,DWORD PTR [rbp+0x6e],0xd3e2274
   1400098a7:	or     bh,BYTE PTR [riz*2+0x20746964]
   1400098ae:	imul   esp,DWORD PTR [rbp+rdi*1+0x22],0x6d6f7461
   1400098b6:	sub    BYTE PTR [rax+0x61],dh
   1400098b9:	jae    0x14000992e
   1400098bb:	ja     0x14000992c
   1400098bd:	jb     0x140009923
   1400098bf:	sub    DWORD PTR [rdx],esp
   1400098c1:	and    BYTE PTR [rax+rbp*2+0x65],dh
   1400098c5:	ins    DWORD PTR es:[rdi],dx
   1400098c6:	gs fs (bad) 
   1400098c9:	outs   dx,DWORD PTR ds:[rsi]
   1400098ca:	jb     0x140009930
   1400098cc:	gs jb  0x14000990c
   1400098cf:	and    dh,BYTE PTR [rdx+rsi*2+0x75]
   1400098d3:	and    ah,BYTE PTR gs:[rax]
   1400098d6:	(bad)  
   1400098d7:	movsxd esp,DWORD PTR [rbx+0x65]
   1400098da:	jae    0x14000994f
   1400098dc:	imul   esp,DWORD PTR [rdx+0x6c],0x74223d65
   1400098e3:	jb     0x14000995a
   1400098e5:	and    ah,BYTE PTR gs:[rax]
   1400098e8:	(bad)  
   1400098e9:	movsxd esp,DWORD PTR [rbx+0x6e]
   1400098ec:	(bad)  
   1400098ed:	ins    DWORD PTR es:[rdi],dx
   1400098ee:	gs cmp eax,0x73615022
   1400098f4:	jae    0x14000996d
   1400098f6:	outs   dx,DWORD PTR ds:[rsi]
   1400098f7:	jb     0x14000995d
   1400098f9:	and    ah,BYTE PTR [rax]
   1400098fb:	(bad)  
   1400098fc:	movsxd esp,DWORD PTR [rbx+0x44]
   1400098ff:	gs jae 0x140009965
   140009902:	cmp    eax,0x73615022
   140009907:	jae    0x140009980
   140009909:	outs   dx,DWORD PTR ds:[rsi]
   14000990a:	jb     0x140009970
   14000990c:	and    BYTE PTR [rbp+0x64],ah
   14000990f:	imul   esi,DWORD PTR [rax+riz*1+0x66],0x646c6569
   140009917:	and    ah,BYTE PTR [rax]
   140009919:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
   14000991d:	jae    0x14000995c
   14000991f:	and    dh,BYTE PTR [rdi+0x69]
   140009922:	jp     0x140009989
   140009924:	imul   esi,DWORD PTR fs:[rdx+riz*1+0x20],0x65656873
   14000992d:	je     0x14000996c
   14000992f:	and    ch,BYTE PTR [rdi+rbp*2+0x63]
   140009933:	(bad)  
   140009934:	ins    BYTE PTR es:[rdi],dx
   140009935:	and    ah,BYTE PTR [rax]
   140009937:	ins    BYTE PTR es:[rdi],dx
   140009938:	(bad)  
   140009939:	jns    0x1400099aa
   14000993b:	jne    0x1400099b1
   14000993d:	jo     0x1400099ae
   14000993f:	jae    0x14000997e
   140009941:	and    ch,BYTE PTR [rbp+riz*2+0x66]
   140009945:	je     0x140009969
   140009947:	and    BYTE PTR [rbx+0x68],dh
   14000994a:	outs   dx,DWORD PTR ds:[rsi]
   14000994b:	jb     0x1400099c1
   14000994d:	movsxd esi,DWORD PTR [rbp+0x74]
   140009950:	cmp    eax,0x74756122
   140009955:	outs   dx,DWORD PTR ds:[rsi]
   140009956:	and    ah,BYTE PTR [rax]
   140009958:	(bad)  
   140009959:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   14000995d:	gs cmp eax,0x756f6d22
   140009963:	jae    0x1400099ca
   140009965:	jl     0x1400099d2
   140009967:	gs jns 0x1400099cc
   14000996a:	outs   dx,DWORD PTR ds:[rsi]
   14000996b:	(bad)  
   14000996c:	jb     0x1400099d2
   14000996e:	and    ah,BYTE PTR [rax]
   140009970:	jo     0x1400099d3
   140009972:	jae    0x1400099e7
   140009974:	ja     0x1400099e5
   140009976:	jb     0x1400099dc
   140009978:	movsxd ebp,DWORD PTR [rax+0x61]
   14000997b:	jb     0x1400099de
   14000997d:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
   140009981:	cmp    eax,0x37363922
   140009986:	cmp    DWORD PTR [rdx],esp
   140009988:	and    BYTE PTR [rdi+0x69],dh
   14000998b:	fs je  0x1400099f6
   14000998e:	cmp    eax,0x30303222
   140009993:	jb     0x140009a05
   140009995:	and    ch,BYTE PTR [rdi]
   140009997:	ds or  eax,0x652f3c0a
   14000999d:	ins    BYTE PTR es:[rdi],dx
   14000999e:	gs ins DWORD PTR es:[rdi],dx
   1400099a0:	outs   dx,BYTE PTR gs:[rsi]
   1400099a2:	je     0x1400099e2
   1400099a4:	or     eax,0x652f3c0a
   1400099a9:	ins    BYTE PTR es:[rdi],dx
   1400099aa:	gs ins DWORD PTR es:[rdi],dx
   1400099ac:	outs   dx,BYTE PTR gs:[rsi]
   1400099ae:	je     0x1400099ee
   1400099b0:	or     eax,0x616d3c0a
   1400099b5:	movsxd esi,DWORD PTR [rdx+0x6f]
   1400099b8:	and    BYTE PTR [rcx+0x64],ch
   1400099bb:	cmp    eax,0x6f746122
   1400099c0:	ins    DWORD PTR es:[rdi],dx
   1400099c1:	sub    BYTE PTR [rax+0x61],dl
   1400099c4:	addr32 gs rex.RB jb 0x140009a3b
   1400099c9:	outs   dx,DWORD PTR ds:[rsi]
   1400099ca:	jb     0x1400099f5
   1400099cc:	and    ah,BYTE PTR [rax]
   1400099ce:	gs js  0x140009a41
   1400099d1:	(bad)  
   1400099d2:	outs   dx,BYTE PTR ds:[rsi]
   1400099d3:	fs cmp eax,0x72726522
   1400099d9:	outs   dx,DWORD PTR ds:[rsi]
   1400099da:	jb     0x140009a1e
   1400099dc:	outs   dx,DWORD PTR ds:[rsi]
   1400099dd:	js     0x140009a2c
   1400099df:	(bad)  
   1400099e0:	movsxd esi,DWORD PTR [rdx+0x6f]
   1400099e3:	and    ah,BYTE PTR [rax]
   1400099e5:	ins    BYTE PTR es:[rdi],dx
   1400099e6:	(bad)  
   1400099e7:	jns    0x140009a58
   1400099e9:	jne    0x140009a5f
   1400099eb:	jo     0x140009a5c
   1400099ed:	jae    0x140009a2c
   1400099ef:	and    dh,BYTE PTR [rdi+rbp*2+0x70]
   1400099f3:	and    ah,BYTE PTR [rax]
   1400099f5:	ins    BYTE PTR es:[rdi],dx
   1400099f6:	(bad)  
   1400099f7:	jns    0x140009a68
   1400099f9:	jne    0x140009a6f
   1400099fb:	cmp    eax,0x726f6222
   140009a00:	fs gs jb 0x140009a70
   140009a04:	(bad)  
   140009a05:	jns    0x140009a76
   140009a07:	jne    0x140009a7d
   140009a09:	sub    BYTE PTR [rcx],ch
   140009a0b:	and    ch,BYTE PTR [rdi]
   140009a0d:	ds or  eax,0x6c653c0a
   140009a13:	gs ins DWORD PTR es:[rdi],dx
   140009a15:	outs   dx,BYTE PTR gs:[rsi]
   140009a17:	je     0x140009a39
   140009a19:	ins    BYTE PTR es:[rdi],dx
   140009a1a:	(bad)  
   140009a1b:	jns    0x140009a8c
   140009a1d:	jne    0x140009a93
   140009a1f:	jo     0x140009a90
   140009a21:	jae    0x140009a60
   140009a23:	and    dh,BYTE PTR [rdi+rbp*2+0x70]
   140009a27:	and    ah,BYTE PTR [rax]
   140009a29:	ins    BYTE PTR es:[rdi],dx
   140009a2a:	(bad)  
   140009a2b:	jns    0x140009a9c
   140009a2d:	jne    0x140009aa3
   140009a2f:	cmp    eax,0x726f6222
   140009a34:	fs gs jb 0x140009aa4
   140009a38:	(bad)  
   140009a39:	jns    0x140009aaa
   140009a3b:	jne    0x140009ab1
   140009a3d:	sub    BYTE PTR [rcx],ch
   140009a3f:	and    ah,BYTE PTR [rax]
   140009a41:	jo     0x140009aa4
   140009a43:	fs imul ebp,DWORD PTR fs:[rsi+0x67],0x6572223d
   140009a4c:	movsxd esi,DWORD PTR [rax+rbp*1+0x30]
   140009a50:	jb     0x140009ac2
   140009a52:	sub    al,0x31
   140009a54:	xor    eax,0x302c7072
   140009a59:	jb     0x140009acb
   140009a5b:	sub    al,0x30
   140009a5d:	jb     0x140009acf
   140009a5f:	sub    DWORD PTR [rdx],esp
   140009a61:	ds or  eax,0x43433c0a
   140009a67:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140009a69:	ins    DWORD PTR es:[rdi],dx
   140009a6a:	ins    DWORD PTR es:[rdi],dx
   140009a6b:	(bad)  
   140009a6c:	outs   dx,BYTE PTR ds:[rsi]
   140009a6d:	imul   r13,QWORD PTR fs:[rsi+0x6b],0x3d646920
   140009a76:	and    ah,BYTE PTR [rcx+0x74]
   140009a79:	outs   dx,DWORD PTR ds:[rsi]
   140009a7a:	ins    DWORD PTR es:[rdi],dx
   140009a7b:	sub    BYTE PTR [rdx+0x65],dh
   140009a7e:	movsxd ebp,DWORD PTR [rdi+0x76]
   140009a81:	gs jb  0x140009aad
   140009a84:	and    ah,BYTE PTR [rax]
   140009a86:	(bad)  
   140009a87:	movsxd esp,DWORD PTR [rbx+0x65]
   140009a8a:	jae    0x140009aff
   140009a8c:	imul   esp,DWORD PTR [rdx+0x6c],0x74223d65
   140009a93:	jb     0x140009b0a
   140009a95:	and    ah,BYTE PTR gs:[rax]
   140009a98:	(bad)  
   140009a99:	movsxd esp,DWORD PTR [rbx+0x72]
   140009a9c:	outs   dx,DWORD PTR ds:[rsi]
   140009a9d:	ins    BYTE PTR es:[rdi],dx
   140009a9e:	gs cmp eax,0x73757022
   140009aa4:	push   0x74747562
   140009aa9:	outs   dx,DWORD PTR ds:[rsi]
   140009aaa:	outs   dx,BYTE PTR ds:[rsi]
   140009aab:	and    ah,BYTE PTR [rax]
   140009aad:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
   140009ab1:	jae    0x140009af0
   140009ab3:	and    ah,BYTE PTR [rbx+0x6f]
   140009ab6:	ins    DWORD PTR es:[rdi],dx
   140009ab7:	ins    DWORD PTR es:[rdi],dx
   140009ab8:	(bad)  
   140009ab9:	outs   dx,BYTE PTR ds:[rsi]
   140009aba:	imul   r13,QWORD PTR fs:[rsi+0x6b],0x68732022
   140009ac3:	gs gs je 0x140009b04
   140009ac7:	and    ch,BYTE PTR [rdi+rbp*2+0x63]
   140009acb:	(bad)  
   140009acc:	ins    BYTE PTR es:[rdi],dx
   140009acd:	and    ah,BYTE PTR [rax]
   140009acf:	ins    BYTE PTR es:[rdi],dx
   140009ad0:	(bad)  
   140009ad1:	jns    0x140009b42
   140009ad3:	jne    0x140009b49
   140009ad5:	jo     0x140009b46
   140009ad7:	jae    0x140009b16
   140009ad9:	and    dh,BYTE PTR [rdi+rbp*2+0x70]
   140009add:	and    ah,BYTE PTR [rax]
   140009adf:	je     0x140009b53
   140009ae1:	(bad)  
   140009ae2:	outs   dx,BYTE PTR ds:[rsi]
   140009ae3:	jae    0x140009b55
   140009ae5:	(bad)  
   140009ae6:	jb     0x140009b4d
   140009ae8:	outs   dx,BYTE PTR ds:[rsi]
   140009ae9:	je     0x140009b28
   140009aeb:	and    dh,BYTE PTR [rdx+rsi*2+0x75]
   140009aef:	and    ah,BYTE PTR gs:[rax]
   140009af2:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140009af5:	je     0x140009b5c
   140009af7:	outs   dx,BYTE PTR ds:[rsi]
   140009af8:	je     0x140009b37
   140009afa:	and    dh,BYTE PTR [rdx+0x65]
   140009afd:	jae    0x140009b72
   140009aff:	je     0x140009b73
   140009b01:	sub    BYTE PTR [rcx],dh
   140009b03:	xor    DWORD PTR ss:[rcx],esi
   140009b06:	sub    DWORD PTR [rdx],esp
   140009b08:	(bad)  
   140009b09:	ds or  eax,0x652f3c0a
   140009b0f:	ins    BYTE PTR es:[rdi],dx
   140009b10:	gs ins DWORD PTR es:[rdi],dx
   140009b12:	outs   dx,BYTE PTR gs:[rsi]
   140009b14:	je     0x140009b54
   140009b16:	or     eax,0x652f3c0a
   140009b1b:	ins    BYTE PTR es:[rdi],dx
   140009b1c:	gs ins DWORD PTR es:[rdi],dx
   140009b1e:	outs   dx,BYTE PTR gs:[rsi]
   140009b20:	je     0x140009b60
   140009b22:	or     eax,0x642f3c0a
   140009b27:	jne    0x140009b92
   140009b29:	js     0x140009b98
   140009b2b:	ins    BYTE PTR es:[rdi],dx
   140009b2c:	ds or  eax,0x28000a
   140009b32:	add    BYTE PTR [rax],al
   140009b34:	xor    BYTE PTR [rax],al
   140009b36:	add    BYTE PTR [rax],al
   140009b38:	(bad)  
   140009b39:	add    BYTE PTR [rax],al
   140009b3b:	add    BYTE PTR [rcx],al
   140009b3d:	add    BYTE PTR [rax+rax*1],al
   140009b40:	add    BYTE PTR [rax],al
   140009b42:	add    BYTE PTR [rax],al
   140009b44:	add    BYTE PTR [rax+rax*1],0x0
	...
   140009b5c:	add    BYTE PTR [rax],al
   140009b5e:	add    BYTE PTR [rax],0x0
   140009b61:	add    BYTE PTR [rax],0x0
   140009b64:	add    BYTE PTR [rax+0x800080],al
   140009b6a:	add    BYTE PTR [rax],al
   140009b6c:	add    BYTE PTR [rax],0x80
   140009b6f:	add    BYTE PTR [rax-0x7fffff80],al
   140009b75:	add    BYTE PTR [rax-0x3f3f4000],0x0
   140009b7c:	add    BYTE PTR [rax],al
   140009b7e:	inc    DWORD PTR [rax]
   140009b80:	add    bh,bh
   140009b82:	add    BYTE PTR [rax],al
   140009b84:	add    bh,bh
   140009b86:	inc    DWORD PTR [rax]
   140009b88:	inc    DWORD PTR [rax]
   140009b8a:	add    BYTE PTR [rax],al
   140009b8c:	inc    DWORD PTR [rax]
   140009b8e:	inc    DWORD PTR [rax]
   140009b90:	(bad)  
   140009b91:	inc    DWORD PTR [rax]
   140009b93:	add    bh,bh
   140009b95:	(bad)  
   140009b96:	inc    DWORD PTR [rax]
	...
   140009bd0:	add    BYTE PTR [rax],al
   140009bd2:	add    BYTE PTR [rbx+0x0],dh
	...
   140009be9:	add    BYTE PTR [rdi],al
   140009beb:	mov    eax,0x70
	...
   140009c00:	add    BYTE PTR [rax],al
   140009c02:	(bad)  
   140009c03:	mov    ecx,0x30
	...
   140009c18:	add    BYTE PTR [rbx],al
   140009c1a:	mov    ch,0xb7
   140009c1c:	xchg   edi,eax
	...
   140009c31:	(bad)  
   140009c32:	mov    ch,0xb9
   140009c34:	(bad)  
	...
   140009c49:	or     DWORD PTR [rbp+0x80b8],esi
	...
   140009c5f:	add    BYTE PTR [rax],al
   140009c61:	add    edi,DWORD PTR [rcx-0x75]
   140009c64:	push   rax
	...
   140009c79:	or     DWORD PTR [rdi+0x70b7],esi
	...
   140009c8f:	add    BYTE PTR [rax],al
   140009c91:	(bad)  
   140009c92:	mov    bh,0xb9
   140009c94:	ja     0x140009c96
	...
   140009ca6:	add    BYTE PTR [rax],al
   140009ca8:	add    BYTE PTR [rbx],al
   140009caa:	mov    DWORD PTR [rbx+0xb7],ecx
	...
   140009cc0:	add    BYTE PTR [rcx],cl
   140009cc2:	mov    bh,0xb7
   140009cc4:	add    BYTE PTR [rax],0x0
	...
   140009cd7:	add    BYTE PTR [rax],al
   140009cd9:	add    eax,DWORD PTR [rbx+0x7089]
	...
   140009cef:	add    BYTE PTR [rax],al
   140009cf1:	add    esi,DWORD PTR [rdi+0x37b7]
	...
   140009d07:	add    BYTE PTR [rax],al
   140009d09:	(bad)  
   140009d0a:	mov    ch,0xb9
   140009d0c:	xchg   DWORD PTR [rax],eax
	...
   140009d1e:	add    BYTE PTR [rax],al
   140009d20:	add    BYTE PTR [rcx],cl
   140009d22:	mov    bh,0xb7
   140009d24:	mov    bh,0x0
	...
   140009d36:	add    BYTE PTR [rax],al
   140009d38:	add    BYTE PTR [rbx],al
   140009d3a:	mov    DWORD PTR [rcx+0xb5],ecx
	...
   140009d50:	add    BYTE PTR [rbx],al
   140009d52:	mov    bh,0xb7
   140009d54:	xchg   DWORD PTR [rax],eax
	...
   140009d66:	add    BYTE PTR [rax],al
   140009d68:	add    BYTE PTR [rcx],cl
   140009d6a:	or     DWORD PTR [rcx+0xb7],0x0
	...
   140009d81:	add    eax,DWORD PTR [rbx+0xb5b7]
	...
   140009d97:	add    BYTE PTR [rax],al
   140009d99:	add    esi,DWORD PTR [rdi+0x8783]
	...
   140009daf:	add    BYTE PTR [rax],al
   140009db1:	(bad)  
   140009db2:	mov    DWORD PTR [rdi+0xb5],esi
	...
   140009dc8:	add    BYTE PTR [rcx],cl
   140009dca:	mov    bl,0x89
   140009dcc:	add    DWORD PTR [rax],0x0
	...
   140009ddf:	add    BYTE PTR [rax],al
   140009de1:	add    eax,DWORD PTR [rbx+0x3783]
	...
   140009df7:	add    BYTE PTR [rax],al
   140009df9:	add    ecx,DWORD PTR [rbx+0x17888b]
	...
   140009e0f:	add    BYTE PTR [rdi],al
   140009e11:	js     0x140009dcb
   140009e13:	mov    eax,0x7033b8
	...
   140009e28:	jnp    0x140009db9
   140009e2a:	mov    eax,0x3398bfb8
   140009e2f:	jo     0x140009e31
	...
   140009e3d:	add    BYTE PTR [rax],al
   140009e3f:	(bad)  
   140009e40:	mov    eax,0x8f8b8b8b
   140009e45:	mov    bh,0x97
   140009e47:	(bad)  
	...
   140009e54:	add    BYTE PTR [rax],al
   140009e56:	add    BYTE PTR [rbx+0x79],bh
   140009e59:	mov    eax,0x8bbbb8b8
   140009e5e:	mov    edi,DWORD PTR [rcx+0x0]
	...
   140009e6d:	add    BYTE PTR [rax],al
   140009e6f:	mov    eax,0x8b7b8b9b
   140009e74:	mov    edi,DWORD PTR [rbx-0x77]
   140009e77:	mov    esi,DWORD PTR [rax+0x0]
	...
   140009e86:	(bad)  
   140009e87:	mov    ecx,DWORD PTR [rbx+0x777b8b7b]
   140009e8d:	mov    eax,0x17b8b8
	...
   140009e9e:	or     BYTE PTR [rcx-0x67846449],cl
   140009ea4:	mov    eax,0x779bb8b8
	...
   140009eb5:	add    BYTE PTR [rax-0x48],bh
   140009eb8:	mov    ecx,0x9b8b7b8b
   140009ebd:	mov    ecx,DWORD PTR [rbx+0xb789]
	...
   140009ecb:	add    BYTE PTR [rax],al
   140009ecd:	add    BYTE PTR [rdi-0x8785],bh
   140009ed3:	(bad)  
   140009ed4:	dec    DWORD PTR [rax+0x97b7b8]
	...
   140009ee6:	jg     0x140009e7f
   140009ee8:	mov    bh,0x77
   140009eea:	xchg   DWORD PTR [rax+0x78],edi
   140009eed:	js     0x140009f68
   140009eef:	mov    bh,0xb9
	...
   140009efd:	add    BYTE PTR [rdi+0xb5],bh
   140009f03:	add    BYTE PTR [rax],al
   140009f05:	add    BYTE PTR [rax],cl
   140009f07:	mov    ecx,0x83
	...
   140009f14:	add    BYTE PTR [rax],al
   140009f16:	jg     0x140009f8b
   140009f18:	add    BYTE PTR [rax],al
   140009f1a:	add    BYTE PTR [rax],al
   140009f1c:	add    BYTE PTR [rax],al
   140009f1e:	(bad)  
   140009f1f:	jnp    0x140009eb8
	...
   140009f2d:	add    BYTE PTR [rax+0x7089],cl
   140009f33:	add    BYTE PTR [rax],al
   140009f35:	add    BYTE PTR [rdi],al
   140009f37:	cwde   
   140009f38:	mov    bh,0x0
	...
   140009f46:	or     bl,dh
   140009f48:	jo     0x140009f4a
   140009f4a:	add    BYTE PTR [rax],al
   140009f4c:	add    BYTE PTR [rax],al
   140009f4e:	(bad)  
   140009f4f:	mov    bh,0x77
	...
   140009f5d:	add    BYTE PTR [rbx],cl
   140009f5f:	clc    
   140009f60:	(bad)  
   140009f61:	add    BYTE PTR [rax],al
   140009f63:	add    BYTE PTR [rax],al
   140009f65:	add    BYTE PTR [rcx-0x75],bh
   140009f68:	nop
	...
   140009f75:	add    BYTE PTR [rax],cl
   140009f77:	mov    BYTE PTR [rdi+0x70],dl
   140009f7d:	(bad)  
   140009f7e:	jnp    0x140009ff8
   140009f80:	jo     0x140009f82
	...
   140009f8e:	add    BYTE PTR [rdi-0xd],bh
   140009f91:	(bad)  
   140009f92:	jo     0x140009f94
   140009f94:	(bad)  
   140009f95:	jae    0x14000a00f
   140009f97:	mov    bh,0x0
	...
   140009fa5:	add    BYTE PTR [rax],al
   140009fa7:	or     BYTE PTR [rdi+0x73737183],cl
   140009fad:	cwde   
   140009fae:	mov    eax,0x90
	...
   140009fbf:	add    BYTE PTR [rbx-0x8],bh
   140009fc2:	mov    BYTE PTR [rcx],bh
   140009fc4:	mov    BYTE PTR [rbx+0x77],cl
	...
   140009fd6:	add    BYTE PTR [rax],al
   140009fd8:	add    BYTE PTR [rax-0x71],bh
   140009fdb:	(bad)  
   140009fdc:	sti    
   140009fdd:	xchg   DWORD PTR [rax],eax
	...
   140009fef:	add    BYTE PTR [rax],al
   140009ff1:	add    BYTE PTR [rdi+0x7077],al
	...
   14000a017:	add    bh,bh
   14000a019:	(bad)  
   14000a01a:	(bad)  
   14000a01b:	(bad)  
   14000a01c:	(bad)  
   14000a01d:	inc    DWORD PTR [rax]
   14000a01f:	add    bh,bh
   14000a021:	(bad)  
   14000a022:	(bad)  
   14000a023:	(bad)  
   14000a024:	(bad)  
   14000a025:	inc    DWORD PTR [rax]
   14000a027:	add    bh,bh
   14000a029:	(bad)  
   14000a02a:	cld    
   14000a02b:	(bad)  
   14000a02c:	(bad)  
   14000a02d:	inc    DWORD PTR [rax]
   14000a02f:	add    bh,bh
   14000a031:	(bad)  
   14000a032:	clc    
   14000a033:	jg     0x14000a034
   14000a035:	inc    DWORD PTR [rax]
   14000a037:	add    bh,bh
   14000a039:	push   rax
   14000a03b:	jg     0x14000a03c
   14000a03d:	inc    DWORD PTR [rax]
   14000a03f:	add    bh,bh
   14000a041:	jmp    rax
   14000a043:	(bad)  
   14000a044:	(bad)  
   14000a045:	inc    DWORD PTR [rax]
   14000a047:	add    bh,bh
   14000a049:	jmp    rax
   14000a04b:	(bad)  
   14000a04c:	(bad)  
   14000a04d:	inc    DWORD PTR [rax]
   14000a04f:	add    bh,bh
   14000a051:	jmp    rax
   14000a053:	jg     0x14000a054
   14000a055:	inc    DWORD PTR [rax]
   14000a057:	add    bh,bh
   14000a059:	jmp    rax
   14000a05b:	jg     0x14000a05c
   14000a05d:	inc    DWORD PTR [rax]
   14000a05f:	add    bh,bh
   14000a061:	jmp    rax
   14000a063:	jg     0x14000a064
   14000a065:	inc    DWORD PTR [rax]
   14000a067:	add    bh,bh
   14000a069:	jmp    rax
   14000a06b:	(bad)  
   14000a06c:	(bad)  
   14000a06d:	inc    DWORD PTR [rax]
   14000a06f:	add    bh,bh
   14000a071:	jmp    rax
   14000a073:	(bad)  
   14000a074:	(bad)  
   14000a075:	inc    DWORD PTR [rax]
   14000a077:	add    bh,bh
   14000a079:	jmp    rax
   14000a07b:	jg     0x14000a07c
   14000a07d:	inc    DWORD PTR [rax]
   14000a07f:	add    bh,bh
   14000a081:	jmp    rax
   14000a083:	jg     0x14000a084
   14000a085:	inc    DWORD PTR [rax]
   14000a087:	add    bh,bh
   14000a089:	jmp    rax
   14000a08b:	(bad)  
   14000a08c:	(bad)  
   14000a08d:	inc    DWORD PTR [rax]
   14000a08f:	add    bh,bh
   14000a091:	jmp    rax
   14000a093:	(bad)  
   14000a094:	(bad)  
   14000a095:	inc    DWORD PTR [rax]
   14000a097:	add    bh,bh
   14000a099:	jmp    rax
   14000a09b:	(bad)  
   14000a09c:	(bad)  
   14000a09d:	inc    DWORD PTR [rax]
   14000a09f:	add    bh,bh
   14000a0a1:	jmp    rax
   14000a0a3:	(bad)  
   14000a0a4:	(bad)  
   14000a0a5:	inc    DWORD PTR [rax]
   14000a0a7:	add    bh,bh
   14000a0a9:	jmp    rax
   14000a0ab:	(bad)  
   14000a0ac:	(bad)  
   14000a0ad:	inc    DWORD PTR [rax]
   14000a0af:	add    bh,bh
   14000a0b1:	jmp    rax
   14000a0b3:	(bad)  
   14000a0b4:	(bad)  
   14000a0b5:	inc    DWORD PTR [rax]
   14000a0b7:	add    bh,bh
   14000a0b9:	jmp    rax
   14000a0bb:	(bad)  
   14000a0bc:	(bad)  
   14000a0bd:	inc    DWORD PTR [rax]
   14000a0bf:	add    bh,bh
   14000a0c1:	jmp    rax
   14000a0c3:	(bad)  
   14000a0c4:	(bad)  
   14000a0c5:	inc    DWORD PTR [rax]
   14000a0c7:	add    bh,bh
   14000a0c9:	jmp    rax
   14000a0cb:	(bad)  
   14000a0cc:	(bad)  
   14000a0cd:	inc    DWORD PTR [rax]
   14000a0cf:	add    bh,bh
   14000a0d1:	jmp    rax
   14000a0d3:	(bad)  
   14000a0d4:	(bad)  
   14000a0d5:	inc    DWORD PTR [rax]
   14000a0d7:	add    bh,bh
   14000a0d9:	jmp    rax
   14000a0db:	(bad)  
   14000a0dc:	(bad)  
   14000a0dd:	inc    DWORD PTR [rax]
   14000a0df:	add    bh,bh
   14000a0e1:	jmp    rax
   14000a0e3:	ud0    edi,edi
   14000a0e6:	add    BYTE PTR [rax],al
   14000a0e8:	(bad)  
   14000a0e9:	inc    DWORD PTR [rax+0xffff07]
   14000a0ef:	add    bh,bh
   14000a0f1:	inc    DWORD PTR [rax]
   14000a0f3:	add    edi,edi
   14000a0f5:	inc    DWORD PTR [rax]
   14000a0f7:	add    bh,bh
   14000a0f9:	inc    BYTE PTR [rax]
   14000a0fb:	add    bh,bh
   14000a0fd:	inc    DWORD PTR [rax]
   14000a0ff:	add    bh,bh
   14000a101:	cld    
   14000a102:	add    BYTE PTR [rax],al
   14000a104:	(bad)  
   14000a105:	inc    DWORD PTR [rax]
   14000a107:	add    bh,bh
   14000a109:	cld    
   14000a10a:	add    BYTE PTR [rax],al
   14000a10c:	jg     0x14000a10d
   14000a10e:	add    BYTE PTR [rax],al
   14000a110:	(bad)  
   14000a111:	clc    
   14000a112:	add    BYTE PTR [rax],al
   14000a114:	(bad)  
   14000a115:	inc    DWORD PTR [rax]
   14000a117:	add    bh,bh
   14000a119:	clc    
   14000a11a:	add    BYTE PTR [rax],al
   14000a11c:	(bad)  
   14000a11d:	inc    DWORD PTR [rax]
   14000a11f:	add    bh,bh
   14000a121:	lock add BYTE PTR [rax],al
   14000a124:	(bad)  
   14000a125:	inc    DWORD PTR [rax]
   14000a127:	add    bh,bh
   14000a129:	lock add BYTE PTR [rax],al
   14000a12c:	(bad)  
   14000a12d:	inc    DWORD PTR [rax]
   14000a12f:	add    bh,bh
   14000a131:	lock add BYTE PTR [rax],al
   14000a134:	(bad)  
   14000a135:	inc    DWORD PTR [rax]
   14000a137:	add    bh,bh
   14000a139:	lock (bad) 
   14000a13b:	clc    
   14000a13c:	(bad)  
   14000a13d:	inc    DWORD PTR [rax]
   14000a13f:	add    bh,bh
   14000a141:	lock (bad) 
   14000a143:	clc    
   14000a144:	(bad)  
   14000a145:	inc    DWORD PTR [rax]
   14000a147:	add    bh,bh
   14000a149:	lock jg 0x14000a144
   14000a14c:	(bad)  
   14000a14d:	inc    DWORD PTR [rax]
   14000a14f:	add    bh,bh
   14000a151:	clc    
   14000a152:	jg     0x14000a14c
   14000a154:	(bad)  
   14000a155:	inc    DWORD PTR [rax]
   14000a157:	add    bh,bh
   14000a159:	clc    
   14000a15a:	(bad)  
   14000a15b:	lock jg 0x14000a15d
   14000a15e:	add    BYTE PTR [rax],al
   14000a160:	(bad)  
   14000a161:	clc    
   14000a162:	(bad)  
   14000a163:	loopne 0x14000a1e4
   14000a165:	inc    DWORD PTR [rax]
   14000a167:	add    bh,bh
   14000a169:	cld    
   14000a16a:	(bad)  
   14000a16b:	cmp    bh,0xff
   14000a16e:	add    BYTE PTR [rax],al
   14000a170:	(bad)  
   14000a171:	inc    BYTE PTR [rax]
   14000a173:	add    edi,edi
   14000a175:	inc    DWORD PTR [rax]
   14000a177:	add    bh,bh
   14000a179:	inc    DWORD PTR [rax]
   14000a17b:	add    edi,edi
   14000a17d:	inc    DWORD PTR [rax]
   14000a17f:	add    bh,bh
   14000a181:	inc    eax
   14000a183:	ud0    edi,edi
   14000a186:	add    BYTE PTR [rax],al
   14000a188:	(bad)  
   14000a189:	push   rax
   14000a18b:	jg     0x14000a18c
   14000a18d:	inc    DWORD PTR [rax]
   14000a18f:	add    bh,bh
   14000a191:	(bad)  
   14000a192:	(bad)  
   14000a193:	(bad)  
   14000a194:	(bad)  
   14000a195:	inc    DWORD PTR [rax]
   14000a197:	add    BYTE PTR [rax],ch
   14000a199:	add    BYTE PTR [rax],al
   14000a19b:	add    BYTE PTR [rax],ah
   14000a19d:	add    BYTE PTR [rax],al
   14000a19f:	add    BYTE PTR [rax+0x0],al
   14000a1a2:	add    BYTE PTR [rax],al
   14000a1a4:	add    DWORD PTR [rax],eax
   14000a1a6:	add    al,0x0
   14000a1a8:	add    BYTE PTR [rax],al
   14000a1aa:	add    BYTE PTR [rax],al
   14000a1ac:	add    BYTE PTR [rdx],al
	...
   14000a1c6:	add    BYTE PTR [rax],0x0
   14000a1c9:	add    BYTE PTR [rax],0x0
   14000a1cc:	add    BYTE PTR [rax+0x800080],al
   14000a1d2:	add    BYTE PTR [rax],al
   14000a1d4:	add    BYTE PTR [rax],0x80
   14000a1d7:	add    BYTE PTR [rax-0x7fffff80],al
   14000a1dd:	add    BYTE PTR [rax-0x3f3f4000],0x0
   14000a1e4:	add    BYTE PTR [rax],al
   14000a1e6:	inc    DWORD PTR [rax]
   14000a1e8:	add    bh,bh
   14000a1ea:	add    BYTE PTR [rax],al
   14000a1ec:	add    bh,bh
   14000a1ee:	inc    DWORD PTR [rax]
   14000a1f0:	inc    DWORD PTR [rax]
   14000a1f2:	add    BYTE PTR [rax],al
   14000a1f4:	inc    DWORD PTR [rax]
   14000a1f6:	inc    DWORD PTR [rax]
   14000a1f8:	(bad)  
   14000a1f9:	inc    DWORD PTR [rax]
   14000a1fb:	add    bh,bh
   14000a1fd:	(bad)  
   14000a1fe:	inc    DWORD PTR [rax]
	...
   14000a218:	(bad)  
	...
   14000a225:	add    BYTE PTR [rax],al
   14000a227:	add    edi,DWORD PTR [rcx+0x70]
	...
   14000a236:	add    BYTE PTR [rax],bh
   14000a238:	mov    bl,0x70
	...
   14000a246:	add    BYTE PTR [rbx+0x3078],bl
	...
   14000a254:	add    BYTE PTR [rax],al
   14000a256:	add    BYTE PTR [rbx-0x69],bh
   14000a259:	jo     0x14000a25b
	...
   14000a267:	cmp    BYTE PTR [rbx],bh
   14000a269:	push   rax
	...
   14000a276:	add    BYTE PTR [rbx+0x3078],bl
	...
   14000a284:	add    BYTE PTR [rax],al
   14000a286:	add    BYTE PTR [rax-0x65],bh
	...
   14000a295:	add    BYTE PTR [rax],al
   14000a297:	cmp    esi,DWORD PTR [rdi+0x70]
	...
   14000a2a6:	add    BYTE PTR [rax+0x503b],bl
	...
   14000a2b4:	add    BYTE PTR [rax],al
   14000a2b6:	add    BYTE PTR [rbx],bh
   14000a2b8:	jnp    0x14000a32a
	...
   14000a2c6:	add    BYTE PTR [rax-0x68],bh
   14000a2c9:	xor    BYTE PTR [rax],al
	...
   14000a2d7:	fwait
   14000a2d8:	jnp    0x14000a32a
	...
   14000a2e6:	add    BYTE PTR [rax],bh
   14000a2e8:	cmp    BYTE PTR [rax],dh
	...
   14000a2f6:	add    BYTE PTR [rax],bh
   14000a2f8:	cmp    DWORD PTR [rax+0x0],esi
	...
   14000a307:	fwait
   14000a308:	mov    esi,DWORD PTR [rdi+0x0]
	...
   14000a313:	add    BYTE PTR [rax],al
   14000a315:	add    BYTE PTR [rdi],al
   14000a317:	mov    ecx,DWORD PTR [rbx+0x7083]
	...
   14000a325:	add    BYTE PTR [rbx-0x75],bh
   14000a328:	mov    ecx,DWORD PTR [rcx+0x37]
   14000a32e:	add    BYTE PTR [rax],al
   14000a330:	add    BYTE PTR [rax],al
   14000a332:	add    BYTE PTR [rax],al
   14000a334:	add    BYTE PTR [rdi],al
   14000a336:	mov    eax,0x73bbb8b8
   14000a33b:	jo     0x14000a33d
	...
   14000a345:	jnp    0x14000a2d0
   14000a347:	mov    eax,0x70b998b8
	...
   14000a354:	add    BYTE PTR [rcx-0x74644748],cl
   14000a35a:	mov    esi,DWORD PTR [rdi]
	...
   14000a364:	(bad)  
   14000a365:	mov    eax,0x88ff8fbf
   14000a36a:	mov    eax,0x97
   14000a36f:	add    BYTE PTR [rax],al
   14000a371:	add    BYTE PTR [rax],al
   14000a373:	add    BYTE PTR [rax],cl
   14000a375:	xor    DWORD PTR [rdi+0x73],0x73
   14000a379:	or     DWORD PTR [rcx+0xb7],0x0
   14000a380:	add    BYTE PTR [rax],al
   14000a382:	add    BYTE PTR [rax],al
   14000a384:	(bad)  
   14000a385:	mov    ch,0x0
   14000a387:	add    BYTE PTR [rax],al
   14000a389:	add    BYTE PTR [rdi],al
   14000a38b:	mov    ch,0x0
	...
   14000a395:	xor    DWORD PTR [rax+0x0],0x0
   14000a399:	add    BYTE PTR [rbx+0x77],bh
	...
   14000a3a4:	add    BYTE PTR [rax+0x10],cl
   14000a3aa:	js     0x14000a3bc
	...
   14000a3b4:	add    BYTE PTR [rax+0x31],bh
   14000a3b7:	jo     0x14000a3b9
   14000a3b9:	add    ecx,DWORD PTR [rbx+0x70]
   14000a3bf:	add    BYTE PTR [rax],al
   14000a3c1:	add    BYTE PTR [rax],al
   14000a3c3:	add    BYTE PTR [rax],al
   14000a3c5:	or     al,bh
   14000a3c7:	jae    0x14000a3cc
   14000a3c9:	pop    rax
   14000a3ca:	mov    ch,0x0
	...
   14000a3d4:	add    BYTE PTR [rax],al
   14000a3d6:	js     0x14000a360
   14000a3d8:	clc    
   14000a3d9:	mov    bh,0x70
	...
   14000a3e7:	mov    esi,DWORD PTR [rdi-0x80]
	...
   14000a3fe:	add    BYTE PTR [rax],al
   14000a400:	(bad)  
   14000a401:	(bad)  
   14000a402:	(bad)  
   14000a403:	(bad)  
   14000a404:	(bad)  
   14000a405:	(bad)  
   14000a406:	(bad)  
   14000a407:	(bad)  
   14000a408:	(bad)  
   14000a409:	(bad)  
   14000a40a:	(bad)  
   14000a40b:	(bad)  
   14000a40c:	(bad)  
   14000a40d:	cld    
   14000a40e:	(bad)  
   14000a40f:	(bad)  
   14000a410:	(bad)  
   14000a411:	cld    
   14000a412:	(bad)  
   14000a413:	(bad)  
   14000a414:	(bad)  
   14000a415:	cld    
   14000a416:	(bad)  
   14000a417:	(bad)  
   14000a418:	(bad)  
   14000a419:	cld    
   14000a41a:	(bad)  
   14000a41b:	(bad)  
   14000a41c:	(bad)  
   14000a41d:	cld    
   14000a41e:	(bad)  
   14000a41f:	(bad)  
   14000a420:	(bad)  
   14000a421:	cld    
   14000a422:	(bad)  
   14000a423:	(bad)  
   14000a424:	(bad)  
   14000a425:	cld    
   14000a426:	(bad)  
   14000a427:	(bad)  
   14000a428:	(bad)  
   14000a429:	cld    
   14000a42a:	(bad)  
   14000a42b:	(bad)  
   14000a42c:	(bad)  
   14000a42d:	cld    
   14000a42e:	(bad)  
   14000a42f:	(bad)  
   14000a430:	(bad)  
   14000a431:	cld    
   14000a432:	(bad)  
   14000a433:	(bad)  
   14000a434:	(bad)  
   14000a435:	cld    
   14000a436:	(bad)  
   14000a437:	(bad)  
   14000a438:	(bad)  
   14000a439:	cld    
   14000a43a:	(bad)  
   14000a43b:	(bad)  
   14000a43c:	(bad)  
   14000a43d:	cld    
   14000a43e:	(bad)  
   14000a43f:	(bad)  
   14000a440:	(bad)  
   14000a441:	cld    
   14000a442:	ud0    edi,edi
   14000a445:	clc    
   14000a446:	(bad)  
   14000a447:	(bad)  
   14000a448:	push   rax
   14000a44a:	add    edi,edi
   14000a44c:	jmp    rax
   14000a44e:	add    edi,edi
   14000a450:	inc    eax
   14000a452:	add    edi,edi
   14000a454:	inc    eax
   14000a456:	add    bh,bh
   14000a458:	inc    DWORD PTR [rax-0x7f000100]
   14000a45e:	add    bh,bh
   14000a460:	dec    DWORD PTR [rdi-0x38000008]
   14000a466:	lock (bad) 
   14000a468:	inc    edi
   14000a46a:	icebp  
   14000a46b:	(bad)  
   14000a46c:	inc    ecx
   14000a46e:	loope  0x14000a46f
   14000a470:	jmp    rax
   14000a472:	add    edi,edi
   14000a474:	push   rax
   14000a476:	(bad)  
   14000a477:	(bad)  
   14000a478:	(bad)  
   14000a479:	cld    
   14000a47a:	(bad)  
   14000a47b:	(bad)  
   14000a47c:	(bad)  
   14000a47d:	(bad)  
   14000a47e:	(bad)  
   14000a47f:	jmp    FWORD PTR [rax]
   14000a481:	add    BYTE PTR [rax],al
   14000a483:	add    BYTE PTR [rax],dl
   14000a485:	add    BYTE PTR [rax],al
   14000a487:	add    BYTE PTR [rax],ah
   14000a489:	add    BYTE PTR [rax],al
   14000a48b:	add    BYTE PTR [rcx],al
   14000a48d:	add    BYTE PTR [rax+rax*1],al
   14000a490:	add    BYTE PTR [rax],al
   14000a492:	add    BYTE PTR [rax],al
   14000a494:	add    BYTE PTR [rax],0x0
	...
   14000a4ab:	add    BYTE PTR [rax],al
   14000a4ad:	add    BYTE PTR [rax+0x800000],al
   14000a4b3:	add    BYTE PTR [rax],al
   14000a4b5:	add    BYTE PTR [rax+0x8000],0x0
   14000a4bc:	add    BYTE PTR [rax],0x80
   14000a4bf:	add    BYTE PTR [rax-0x7fffff80],al
   14000a4c5:	add    BYTE PTR [rax-0x3f3f4000],0x0
   14000a4cc:	add    BYTE PTR [rax],al
   14000a4ce:	inc    DWORD PTR [rax]
   14000a4d0:	add    bh,bh
   14000a4d2:	add    BYTE PTR [rax],al
   14000a4d4:	add    bh,bh
   14000a4d6:	inc    DWORD PTR [rax]
   14000a4d8:	inc    DWORD PTR [rax]
   14000a4da:	add    BYTE PTR [rax],al
   14000a4dc:	inc    DWORD PTR [rax]
   14000a4de:	inc    DWORD PTR [rax]
   14000a4e0:	(bad)  
   14000a4e1:	inc    DWORD PTR [rax]
   14000a4e3:	add    bh,bh
   14000a4e5:	(bad)  
   14000a4e6:	inc    DWORD PTR [rax]
   14000a4e8:	add    BYTE PTR [rax],al
   14000a4ea:	add    BYTE PTR [rax],al
   14000a4ec:	xor    BYTE PTR [rax],al
   14000a4ee:	add    BYTE PTR [rax],al
   14000a4f0:	add    BYTE PTR [rax],al
   14000a4f2:	add    BYTE PTR [rbx],al
   14000a4f4:	add    DWORD PTR [rax],0x0
   14000a4f7:	add    BYTE PTR [rax],al
   14000a4f9:	add    BYTE PTR [rax],al
   14000a4fb:	add    esi,DWORD PTR [rax+0x0]
   14000a501:	add    BYTE PTR [rax],al
   14000a503:	or     DWORD PTR [rbx+0x0],eax
   14000a509:	add    BYTE PTR [rax],al
   14000a50b:	or     esi,DWORD PTR [rax+0x0]
   14000a50e:	add    BYTE PTR [rax],al
   14000a510:	add    BYTE PTR [rax],al
   14000a512:	add    BYTE PTR [rbx],al
   14000a514:	add    DWORD PTR [rax],0x0
   14000a517:	add    BYTE PTR [rax],al
   14000a519:	add    BYTE PTR [rax],al
   14000a51b:	add    esi,DWORD PTR [rdi+0x0]
   14000a521:	add    BYTE PTR [rax],al
   14000a523:	(bad)  
   14000a524:	add    DWORD PTR [rax],0x0
   14000a527:	add    BYTE PTR [rax],al
   14000a529:	add    BYTE PTR [rax],al
   14000a52b:	cmp    ecx,DWORD PTR [rbx+0x50]
   14000a531:	add    BYTE PTR [rdi],al
   14000a533:	mov    eax,0xb598
   14000a538:	add    BYTE PTR [rax],al
   14000a53a:	jnp    0x14000a4c4
   14000a53c:	mov    eax,0x708b
   14000a541:	add    BYTE PTR [rax],bh
   14000a543:	cwde   
   14000a544:	jae    0x14000a4d1
   14000a546:	push   rax
   14000a547:	add    BYTE PTR [rax],al
   14000a549:	add    BYTE PTR [rbx+0x70],bh
   14000a54c:	add    BYTE PTR [rbx+0x70],bh
   14000a54f:	add    BYTE PTR [rax],al
   14000a551:	add    BYTE PTR [rbx-0x7f4a887d],cl
   14000a557:	add    BYTE PTR [rax],al
   14000a559:	add    BYTE PTR [rax],cl
   14000a55b:	cwde   
   14000a55c:	mov    eax,0x78
   14000a561:	add    BYTE PTR [rax],al
   14000a563:	mov    edi,DWORD PTR [rbx-0x80]
   14000a566:	add    BYTE PTR [rax],al
   14000a568:	(bad)  
   14000a569:	jg     0x14000a56b
   14000a56b:	add    dh,bh
   14000a56d:	(bad)  
   14000a56e:	add    BYTE PTR [rax],al
   14000a570:	(bad)  
   14000a571:	jg     0x14000a573
   14000a573:	add    dh,bh
   14000a575:	(bad)  
   14000a576:	add    BYTE PTR [rax],al
   14000a578:	(bad)  
   14000a579:	jg     0x14000a57b
   14000a57b:	add    dh,bh
   14000a57d:	(bad)  
   14000a57e:	add    BYTE PTR [rax],al
   14000a580:	(bad)  
   14000a581:	(bad)  
   14000a582:	add    BYTE PTR [rax],al
   14000a584:	(bad)  
   14000a585:	(bad)  
   14000a586:	add    BYTE PTR [rax],al
   14000a588:	cld    
   14000a589:	(bad)  
   14000a58a:	add    BYTE PTR [rax],al
   14000a58c:	clc    
   14000a58d:	sldt   WORD PTR [rax]
   14000a590:	lock (bad) 
   14000a592:	add    BYTE PTR [rax],al
   14000a594:	lock (bad) 
   14000a596:	add    BYTE PTR [rax],al
   14000a598:	icebp  
   14000a599:	mov    DWORD PTR [rax],0x7f000
   14000a59f:	add    al,bh
   14000a5a1:	sldt   WORD PTR [rax]
   14000a5a4:	cld    
   14000a5a5:	(bad)  
   14000a5a6:	add    BYTE PTR [rax],al
   14000a5a8:	sub    BYTE PTR [rax],al
   14000a5aa:	add    BYTE PTR [rax],al
   14000a5ac:	xor    BYTE PTR [rax],al
   14000a5ae:	add    BYTE PTR [rax],al
   14000a5b0:	(bad)  
   14000a5b1:	add    BYTE PTR [rax],al
   14000a5b3:	add    BYTE PTR [rcx],al
   14000a5b5:	add    BYTE PTR [rax],cl
   14000a5b7:	add    BYTE PTR [rax],al
   14000a5b9:	add    BYTE PTR [rax],al
   14000a5bb:	add    BYTE PTR [rax],al
   14000a5bd:	or     DWORD PTR [rax],eax
	...
   14000a5c7:	add    BYTE PTR [rax],al
   14000a5c9:	add    DWORD PTR [rax],eax
   14000a5cb:	add    BYTE PTR [rax],al
   14000a5cd:	add    DWORD PTR [rax],eax
   14000a5cf:	add    BYTE PTR [rax],al
   14000a5d1:	add    BYTE PTR [rax],al
   14000a5d3:	add    BYTE PTR [rbx],ah
   14000a5d5:	rex.X
   14000a5d6:	add    BYTE PTR [edi],bh
   14000a5d9:	rex.WRXB push 0x0
   14000a5dc:	(bad)  
   14000a5dd:	push   rbx
   14000a5de:	jno    0x14000a5e0
   14000a5e0:	ss push rdx
   14000a5e2:	js     0x14000a5e4
   14000a5e4:	cmp    eax,0x4e007956
   14000a5e9:	push   rcx
   14000a5ea:	push   rbp
   14000a5eb:	add    BYTE PTR [rax+0x53],dl
   14000a5ee:	pop    rax
   14000a5ef:	add    BYTE PTR [rdx+0x59],dl
   14000a5f2:	pop    rbp
   14000a5f3:	add    BYTE PTR [rbp+0x5c],bl
   14000a5f6:	pop    rsp
   14000a5f7:	add    BYTE PTR [rax+0x5e],ah
   14000a5fa:	pop    rsp
   14000a5fb:	add    BYTE PTR [rdi+rdx*2+0x68],cl
   14000a5ff:	add    BYTE PTR [rsi+0x59],cl
   14000a602:	push   0x0
   14000a604:	rex.W pop rdx
   14000a606:	jne    0x14000a608
   14000a608:	push   rbx
   14000a609:	movsxd edi,DWORD PTR [rbx+0x0]
   14000a60c:	pop    rsp
   14000a60d:	ins    BYTE PTR es:[rdi],dx
   14000a60e:	jge    0x14000a610
   14000a610:	movsxd esp,DWORD PTR [rbx+0x63]
   14000a613:	add    BYTE PTR [rcx+0x69],ch
   14000a616:	imul   eax,DWORD PTR [rax],0x6c6b6b
   14000a61c:	ins    DWORD PTR es:[rdi],dx
   14000a61d:	ins    DWORD PTR es:[rdi],dx
   14000a61e:	ins    DWORD PTR es:[rdi],dx
   14000a61f:	add    BYTE PTR [rdi+rbp*2+0x75],ch
   14000a623:	add    BYTE PTR [rdx+0x6d],ah
   14000a626:	jle    0x14000a628
   14000a628:	outs   dx,DWORD PTR ds:[rsi]
   14000a629:	jno    0x14000a6a0
   14000a62b:	add    BYTE PTR [rbx+0x73],dh
   14000a62e:	jae    0x14000a630
   14000a630:	ja     0x14000a6a9
   14000a632:	js     0x14000a634
   14000a634:	jb     0x14000a6ac
   14000a636:	jg     0x14000a638
   14000a638:	adc    DWORD PTR [rdi-0x6c],ecx
   14000a63b:	add    BYTE PTR [rcx+rdx*2],ah
   14000a63e:	(bad)  
   14000a63f:	add    BYTE PTR [rip+0x3a00845b],dh        # 0x17a012aa0
   14000a645:	pop    rsp
   14000a646:	add    DWORD PTR [rax],0x3e
   14000a649:	pop    rsi
   14000a64a:	pop    QWORD PTR [rax]
   14000a64c:	and    bl,BYTE PTR [rcx-0x66]
   14000a64f:	add    BYTE PTR [rdi+rbx*2],bh
   14000a652:	xchg   ebx,eax
   14000a653:	add    BYTE PTR [rdi],bh
   14000a655:	jae    0x14000a5ef
   14000a657:	add    BYTE PTR [rcx],ah
   14000a659:	pop    rsi
   14000a65a:	mov    ah,0x0
   14000a65c:	sub    al,0x63
   14000a65e:	movabs al,ds:0xa76b2d00a26d2700
   14000a667:	add    BYTE PTR [rsi],ch
   14000a669:	scas   ax,WORD PTR es:[rdi]
   14000a66b:	add    BYTE PTR [rbx],ch
   14000a66d:	ins    BYTE PTR es:[rdi],dx
   14000a66e:	test   eax,0xa5693300
   14000a673:	add    BYTE PTR [rax],bh
   14000a675:	outs   dx,DWORD PTR ds:[rsi]
   14000a676:	movabs ds:0xac6d3e00ad6b3100,al
   14000a67f:	add    BYTE PTR [rsi],dh
   14000a681:	jb     0x14000a631
   14000a683:	add    BYTE PTR [rdx],ah
   14000a685:	(bad)  
   14000a686:	mov    bl,0x0
   14000a688:	sub    BYTE PTR [rdi-0x4b],ah
   14000a68b:	add    BYTE PTR [rax],ch
   14000a68d:	ins    DWORD PTR es:[rdi],dx
   14000a68e:	mov    dh,0x0
   14000a690:	and    al,0x66
   14000a692:	mov    ebx,0xb8632a00
   14000a697:	add    BYTE PTR [rax],dh
   14000a699:	addr32 mov ch,0x0
   14000a69c:	xor    DWORD PTR [rbp-0x4b],ebp
   14000a69f:	add    BYTE PTR [rdi+rbp*2],bh
   14000a6a2:	mov    cl,0x0
   14000a6a4:	cmp    DWORD PTR [rbp-0x4a],ebp
   14000a6a7:	add    BYTE PTR [rbx],ch
   14000a6a9:	jo     0x14000a663
   14000a6ab:	add    BYTE PTR [rip+0x3900b273],dh        # 0x179015924
   14000a6b1:	jb     0x14000a666
   14000a6b3:	add    BYTE PTR [rbx],bh
   14000a6b5:	je     0x14000a672
   14000a6b7:	add    BYTE PTR [rbx+0x5e],al
   14000a6ba:	fwait
   14000a6bb:	add    BYTE PTR [rdx+0x6a],cl
   14000a6be:	mov    al,BYTE PTR [rax]
   14000a6c0:	pop    rbx
   14000a6c1:	ins    BYTE PTR es:[rdi],dx
   14000a6c2:	test   DWORD PTR [rax],eax
   14000a6c4:	push   rdx
   14000a6c5:	jbe    0x14000a654
   14000a6c7:	add    BYTE PTR [rdx+0x67],al
   14000a6ca:	xchg   ebx,eax
   14000a6cb:	add    BYTE PTR [rsi+0x6e],al
   14000a6ce:	xchg   ebp,eax
   14000a6cf:	add    BYTE PTR [rdx+0x6b],cl
   14000a6d2:	xchg   esi,eax
   14000a6d3:	add    BYTE PTR [rbx+0x63],al
   14000a6d6:	sahf   
   14000a6d7:	add    BYTE PTR [rdx+0x75],cl
   14000a6da:	xchg   esi,eax
   14000a6db:	add    BYTE PTR [rax+0x6f],ah
   14000a6de:	mov    DWORD PTR [rax],eax
   14000a6e0:	imul   esi,DWORD PTR [rdi-0x7e],0x89796900
   14000a6e7:	add    BYTE PTR [rbx+0x65],al
   14000a6ea:	movabs ds:0xa96a4000a6684000,al
   14000a6f3:	add    BYTE PTR [rdi+0x71],al
   14000a6f6:	lods   eax,DWORD PTR ds:[rsi]
   14000a6f7:	add    BYTE PTR [rsi],dl
   14000a6f9:	fs retf 
   14000a6fb:	add    BYTE PTR [rip+0x3300cd68],dl        # 0x173017469
   14000a701:	jp     0x14000a6c5
   14000a703:	add    BYTE PTR [rsi],dh
   14000a705:	nop
   14000a706:	mov    edi,0x83817f00
   14000a70b:	add    BYTE PTR [rbp+rax*4-0x69],ch
   14000a70f:	add    BYTE PTR [rax-0x79],dh
   14000a712:	cdq    
   14000a713:	add    BYTE PTR [rsi+rax*4-0x66],bh
   14000a717:	add    BYTE PTR [rbx-0x7e],cl
   14000a71a:	mov    dl,0x0
   14000a71c:	mov    r14b,BYTE PTR [rsi-0x4c77b400]
   14000a723:	add    BYTE PTR [rdx-0x7f],cl
   14000a726:	mov    ebp,0xbf894600
   14000a72b:	add    BYTE PTR [rdi+rcx*4-0x48],cl
   14000a72f:	add    BYTE PTR [rbx-0x72],bl
   14000a732:	mov    bl,0x0
   14000a734:	pop    rsp
   14000a735:	(bad)  
   14000a736:	mov    edx,0xb4915f00
   14000a73b:	add    BYTE PTR [rcx-0x77],ah
   14000a73e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a73f:	add    BYTE PTR [rdx+rcx*4-0x54],ch
   14000a743:	add    BYTE PTR [rbp-0x70],ch
   14000a746:	lods   al,BYTE PTR ds:[rsi]
   14000a747:	add    BYTE PTR [rcx-0x6d],dh
   14000a74a:	lods   al,BYTE PTR ds:[rsi]
   14000a74b:	add    BYTE PTR [rcx-0x6d],bh
   14000a74e:	lods   al,BYTE PTR ds:[rsi]
   14000a74f:	add    BYTE PTR [rsp+rdx*4-0x49],ch
   14000a753:	add    BYTE PTR [rcx-0x66],ah
   14000a756:	mov    ebx,0xbe9d6c00
   14000a75b:	add    BYTE PTR [rdx-0x66],bh
   14000a75e:	mov    ch,0x0
   14000a760:	jb     0x14000a6fd
   14000a762:	mov    edx,0xce872f00
   14000a767:	add    BYTE PTR [rax+rax*4],dh
   14000a76a:	leave  
   14000a76b:	add    BYTE PTR [rdi],ah
   14000a76d:	xchg   ebp,edx
   14000a76f:	add    BYTE PTR [rdi],ch
   14000a771:	sbb    ah,0x0
   14000a774:	xor    al,0x86
   14000a776:	rol    DWORD PTR [rax],cl
   14000a778:	cmp    BYTE PTR [rsi-0x7dccff2b],al
   14000a77e:	fld    DWORD PTR [rax]
   14000a780:	cmp    al,0x85
   14000a782:	fadd   DWORD PTR [rax]
   14000a784:	xor    eax,0x3b00dc89
   14000a789:	mov    edx,ebx
   14000a78b:	add    BYTE PTR [rax],bh
   14000a78d:	fiadd  WORD PTR [rax]
   14000a790:	xor    al,0x8a
   14000a792:	out    0x0,al
   14000a794:	cmp    al,0x89
   14000a796:	loope  0x14000a798
   14000a798:	xor    al,0x8c
   14000a79a:	in     eax,dx
   14000a79b:	add    BYTE PTR [rbx],dh
   14000a79d:	xchg   esi,eax
   14000a79e:	loop   0x14000a7a0
   14000a7a0:	cmp    edx,DWORD PTR [rdx-0x64c8ff1c]
   14000a7a6:	out    0x0,eax
   14000a7a8:	xor    edx,DWORD PTR [rdx+rbp*8-0x1363c400]
   14000a7af:	add    BYTE PTR [rip+0x3a00f492],dh        # 0x17a019c47
   14000a7b5:	xchg   esi,eax
   14000a7b6:	repnz add BYTE PTR [rbx],dh
   14000a7b9:	popf   
   14000a7ba:	test   DWORD PTR [rax],0xf79a3a
   14000a7c0:	xor    BYTE PTR [rdi-0x5ec2ff08],dl
   14000a7c6:	test   DWORD PTR [rax],0xf8a63a
   14000a7cc:	(bad)  
   14000a7cd:	lods   al,BYTE PTR ds:[rsi]
   14000a7ce:	inc    DWORD PTR [rax]
   14000a7d0:	cmp    al,0xab
   14000a7d2:	clc    
   14000a7d3:	add    BYTE PTR [rsi+rsi*4],bh
   14000a7d6:	cli    
   14000a7d7:	add    BYTE PTR [rdi],bh
   14000a7d9:	mov    ecx,0x845700f9
   14000a7de:	rol    DWORD PTR [rax],0x55
   14000a7e1:	xchg   esi,ecx
   14000a7e3:	add    BYTE PTR [rsi-0x78],bl
   14000a7e6:	int3   
   14000a7e7:	add    BYTE PTR [rbx-0x69],dl
   14000a7ea:	enter  0x5600,0x9a
   14000a7ee:	int3   
   14000a7ef:	add    BYTE PTR [rdi+rax*4-0x2a],cl
   14000a7f3:	add    BYTE PTR [rsi-0x71],cl
   14000a7f6:	rol    DWORD PTR [rax],cl
   14000a7f8:	mov    r11b,bl
   14000a7fb:	add    BYTE PTR [rcx-0x74],cl
   14000a7fe:	fiadd  DWORD PTR [rax]
   14000a800:	push   rax
   14000a801:	mov    edx,ss
   14000a803:	add    BYTE PTR [rdi-0x70],cl
   14000a806:	fiadd  DWORD PTR [rax]
   14000a808:	rex.R (bad) 
   14000a80a:	fadd   DWORD PTR [rax]
   14000a80c:	rex.W sahf 
   14000a80e:	fadd   QWORD PTR [rax]
   14000a810:	pop    rbx
   14000a811:	sahf   
   14000a812:	rol    DWORD PTR [rax],cl
   14000a814:	push   rcx
   14000a815:	sahf   
   14000a816:	fild   WORD PTR [rax]
   14000a818:	pop    rdx
   14000a819:	fild   WORD PTR [rax]
   14000a81c:	outs   dx,BYTE PTR ds:[rsi]
   14000a81d:	pushf  
   14000a81e:	ret    0x5f00
   14000a821:	movabs ds:0xa85b00dba75d00d4,eax
   14000a82a:	fiadd  WORD PTR [rax]
   14000a82c:	jp     0x14000a7d5
   14000a82e:	enter  0x6c00,0xa6
   14000a832:	rol    DWORD PTR [rax],1
   14000a834:	jae    0x14000a7e6
   14000a836:	fiadd  DWORD PTR [rax]
   14000a838:	rex.XB xchg r12d,eax
   14000a83a:	in     al,0x0
   14000a83c:	rex.XB cdq 
   14000a83e:	in     al,0x0
   14000a840:	rex.WRB sahf 
   14000a842:	in     al,0x0
   14000a844:	rex.WB pushf 
   14000a846:	jmp    0x12497fd4b
   14000a84b:	add    BYTE PTR [rcx-0x62],bl
   14000a84e:	loope  0x14000a850
   14000a850:	rex.X movabs ds:0xa25900e1a45400ed,al
   14000a85a:	jrcxz  0x14000a85c
   14000a85c:	pop    rdx
   14000a85d:	test   al,0xe7
   14000a85f:	add    BYTE PTR [rdi-0x56],dl
   14000a862:	out    dx,eax
   14000a863:	add    BYTE PTR [rsi-0x54],bl
   14000a866:	jmp    0x134a5ec6b
   14000a86b:	add    BYTE PTR [rax-0x5e],cl
   14000a86e:	hlt    
   14000a86f:	add    BYTE PTR [rcx-0x5b],al
   14000a872:	clc    
   14000a873:	add    BYTE PTR [rsi-0x54],al
   14000a876:	cli    
   14000a877:	add    BYTE PTR [rdx-0x53],dl
   14000a87a:	test   BYTE PTR [rax],0x45
   14000a87d:	mov    cl,0xf1
   14000a87f:	add    BYTE PTR [rbp-0x4b],cl
   14000a882:	test   DWORD PTR [rax],0xfab342
   14000a888:	rex.WXB mov r10b,0xfa
   14000a88b:	add    BYTE PTR [rdx-0x46],al
   14000a88e:	sti    
   14000a88f:	add    BYTE PTR [rbx-0x47],cl
   14000a892:	inc    BYTE PTR [rax]
   14000a894:	push   rcx
   14000a895:	mov    bl,0xf6
   14000a897:	add    BYTE PTR [rdx-0x44],bl
   14000a89a:	icebp  
   14000a89b:	add    BYTE PTR [rbx+rsi*4-0x4],dl
   14000a89f:	add    BYTE PTR [rcx-0x42],dl
   14000a8a2:	sti    
   14000a8a3:	add    BYTE PTR [rdx-0x5b],ch
   14000a8a6:	out    0x0,al
   14000a8a8:	(bad)  
   14000a8a9:	lods   eax,DWORD PTR ds:[rsi]
   14000a8aa:	loope  0x14000a8ac
   14000a8ac:	(bad)  
   14000a8ad:	scas   eax,DWORD PTR es:[rdi]
   14000a8ae:	in     al,dx
   14000a8af:	add    BYTE PTR [rsi-0x52],dh
   14000a8b2:	call   0x12bae26b7
   14000a8b7:	add    BYTE PTR [rbp-0x45],dh
   14000a8ba:	jmp    0x14000a8bc
   14000a8bc:	(bad)  
   14000a8bd:	mov    bh,0xf4
   14000a8bf:	add    BYTE PTR [rbp-0x4b],ch
   14000a8c2:	test   DWORD PTR [rax],0xfebc63
   14000a8c8:	rex.R ret 
   14000a8ca:	inc    DWORD PTR [rax]
   14000a8cc:	rex.WR (bad) 
   14000a8ce:	cld    
   14000a8cf:	add    BYTE PTR [rsi-0x35],al
   14000a8d2:	inc    DWORD PTR [rax]
   14000a8d4:	rex.WXB leave 
   14000a8d6:	std    
   14000a8d7:	add    BYTE PTR [rcx-0x3b],dl
   14000a8da:	sti    
   14000a8db:	add    BYTE PTR [rax-0x3a],bl
   14000a8de:	std    
   14000a8df:	add    BYTE PTR [rbx-0x34],dl
   14000a8e2:	std    
   14000a8e3:	add    BYTE PTR [rax-0x36],bl
   14000a8e6:	cld    
   14000a8e7:	add    BYTE PTR [rdx-0x2b],al
   14000a8ea:	inc    DWORD PTR [rax]
   14000a8ec:	push   rsp
   14000a8ed:	sar    edi,cl
   14000a8ef:	add    BYTE PTR [rdx-0x2d],bl
   14000a8f2:	cld    
   14000a8f3:	add    BYTE PTR [rdx-0x27],dl
   14000a8f6:	inc    DWORD PTR [rax]
   14000a8f8:	pop    rbp
   14000a8f9:	(bad)  
   14000a8fb:	add    BYTE PTR [rsp+rcx*8-0x7],ch
   14000a8ff:	add    BYTE PTR [rdx-0x3e],bh
   14000a902:	repz add BYTE PTR [rax+rax*8-0x6],dh
   14000a907:	add    BYTE PTR [rbp-0x39],bh
   14000a90a:	inc    DWORD PTR [rax]
   14000a90c:	data16 (bad) 
   14000a90e:	cld    
   14000a90f:	add    BYTE PTR [rbx-0x23],ah
   14000a912:	inc    BYTE PTR [rax]
   14000a914:	push   0xffffffffffffffdd
   14000a916:	inc    BYTE PTR [rax]
   14000a918:	fs loopne 0x14000a91a
   14000a91b:	add    BYTE PTR [rdx-0x1c],ch
   14000a91e:	inc    DWORD PTR [rax]
   14000a920:	or     BYTE PTR [rcx-0x687bff63],0xb3
   14000a927:	add    BYTE PTR [rdx-0x75ff4962],al
   14000a92d:	lahf   
   14000a92e:	mov    ebx,0xbba28a00
   14000a933:	add    BYTE PTR [rsi-0x68ff3f59],cl
   14000a939:	scas   eax,DWORD PTR es:[rdi]
   14000a93a:	ret    
   14000a93b:	add    BYTE PTR [rcx-0x79ff2f52],al
   14000a941:	mov    dh,0xe6
   14000a943:	add    BYTE PTR [rbx-0x54ff0d43],cl
   14000a949:	(bad)  
   14000a94a:	fld    DWORD PTR [rax]
   14000a94c:	(bad)  
   14000a94d:	int    0xe4
   14000a94f:	add    BYTE PTR [rsi-0x6aff153b],cl
   14000a955:	leave  
   14000a956:	(bad)  
   14000a957:	add    BYTE PTR [rcx-0x76ff1638],bl
   14000a95d:	shr    ah,1
   14000a95f:	add    BYTE PTR [rbp-0x73ff1224],bl
   14000a965:	ret    
   14000a966:	hlt    
   14000a967:	add    BYTE PTR [rbx-0x65ff0036],al
   14000a96d:	(bad)  
   14000a96e:	repnz add BYTE PTR [rax-0x60ff012f],dl
   14000a975:	fdiv   st(6),st
   14000a977:	add    BYTE PTR [rdi-0x4bff0a2d],ch
   14000a97d:	fcomip st,st(7)
   14000a97f:	add    BYTE PTR [rax-0x75ff0225],dh
   14000a985:	loop   0x14000a986
   14000a987:	add    BYTE PTR [rbx-0x43ff001d],ch
   14000a98d:	jrcxz  0x14000a98e
   14000a98f:	add    BYTE PTR [rcx-0x56ff0612],dh
   14000a995:	lock inc DWORD PTR [rax]
   14000a998:	retf   
   14000a999:	out    0xfd,eax
   14000a99b:	add    ah,al
   14000a99d:	(bad)  
   14000a99e:	inc    DWORD PTR [rax]
   14000a9a0:	(bad)  
   14000a9a1:	in     eax,dx
   14000a9a2:	inc    DWORD PTR [rax]
   14000a9a4:	(bad)  
   14000a9a6:	inc    DWORD PTR [rax]
   14000a9a8:	ret    0xfffa
   14000a9ab:	add    ah,bl
   14000a9ad:	icebp  
   14000a9ae:	inc    DWORD PTR [rax]
   14000a9b0:	(bad)  
   14000a9b1:	sti    
   14000a9b2:	inc    DWORD PTR [rax]
   14000a9b4:	(bad)  
   14000a9b6:	inc    DWORD PTR [rax]
   14000a9b8:	out    0xf4,eax
   14000a9ba:	inc    DWORD PTR [rax]
   14000a9bc:	in     eax,0xf9
   14000a9be:	inc    DWORD PTR [rax]
   14000a9c0:	jmp    0x13501a9be
   14000a9c5:	(bad)  
   14000a9c6:	inc    DWORD PTR [rax]
   14000a9c8:	sti    
   14000a9c9:	(bad)  
   14000a9ca:	inc    DWORD PTR [rax]
   14000a9cc:	(bad)  
   14000a9cd:	(bad)  
   14000a9ce:	inc    DWORD PTR [rax]
	...
   14000aa44:	add    BYTE PTR [rax],al
   14000aa46:	cmp    eax,0x67
	...
   14000aa73:	add    BYTE PTR [rax],al
   14000aa75:	sbb    eax,eax
   14000aa77:	jg     0x14000aa8c
	...
   14000aaa1:	add    BYTE PTR [rax],al
   14000aaa3:	add    BYTE PTR [rbp+0x35],cl
   14000aaa6:	scas   eax,DWORD PTR es:[rdi]
   14000aaa7:	jbe    0x14000aab5
	...
   14000aad1:	add    BYTE PTR [rax],al
   14000aad3:	es (bad) 
   14000aad5:	sub    dh,BYTE PTR [rbp+0x68]
   14000aad8:	rex.WX adc rax,QWORD PTR [rax]
	...
   14000ab03:	sub    eax,0x6f733281
   14000ab08:	rex.WX (bad) 
	...
   14000ab32:	add    BYTE PTR [rip+0x65d3327a],ch        # 0x1a5d3ddb2
   14000ab38:	in     eax,0x0
	...
   14000ab62:	add    BYTE PTR [rip+0x69d3227c],ch        # 0x1a9d3cde4
   14000ab68:	or     DWORD PTR [rax],eax
	...
   14000ab92:	add    BYTE PTR [rip+0x69d32dbe],ch        # 0x1a9d3d956
   14000ab98:	adc    eax,DWORD PTR [rax]
	...
   14000abc2:	add    BYTE PTR [rip+0x66d32ec9],ch        # 0x1a6d3da91
   14000abc8:	and    DWORD PTR [rbx],edx
	...
   14000abf2:	add    BYTE PTR [rip+0x4cd32ac7],ch        # 0x18cd3d6bf
   14000abf8:	mov    bl,0x17
	...
   14000ac22:	add    BYTE PTR [rip+0x4cd237c4],ch        # 0x18cd2e3ec
   14000ac28:	out    dx,al
	...
   14000ac51:	add    BYTE PTR [rax],al
   14000ac53:	sub    eax,0x4cc437c4
   14000ac58:	or     al,BYTE PTR [rax]
	...
   14000ac82:	add    BYTE PTR [rip+0x39bf37c4],ch        # 0x179bfe44c
   14000ac88:	push   rbx
   14000ac89:	(bad)  
	...
   14000acb2:	add    BYTE PTR [rip+0x35c42aaf],ch        # 0x175c4d767
   14000acb8:	mov    edi,0x11
	...
   14000ace1:	add    BYTE PTR [rax],al
   14000ace3:	sub    eax,0x38be27be
   14000ace8:	mov    al,0x13
	...
   14000ad12:	add    BYTE PTR [rip+0x34bf25be],ch        # 0x174bfd2d6
   14000ad18:	mov    al,0x11
	...
   14000ad42:	add    BYTE PTR [rip+0x34c428c7],ch        # 0x174c4d60f
   14000ad48:	mov    al,0x11
	...
   14000ad72:	add    BYTE PTR [rip+0x47ca28ca],ch        # 0x187cad642
   14000ad78:	mov    al,0x13
	...
   14000ada2:	add    BYTE PTR [rip+0x47d328ca],ch        # 0x187d3d672
   14000ada8:	mov    al,0x13
	...
   14000add2:	add    BYTE PTR [rip+0x47d323ca],ch        # 0x187d3d1a2
   14000add8:	mov    al,0x13
	...
   14000ae02:	add    BYTE PTR [rax],dh
   14000ae04:	(bad)  
   14000ae05:	(bad)  
   14000ae06:	rol    DWORD PTR [rdi-0x50],cl
   14000ae09:	adc    eax,DWORD PTR [rax]
	...
   14000ae33:	xor    bh,al
   14000ae35:	sbb    dl,bl
   14000ae37:	cmp    ch,BYTE PTR [rbp+0x10]
	...
   14000ae61:	add    BYTE PTR [rax],al
   14000ae63:	xor    al,dl
   14000ae65:	and    al,0xd3
   14000ae67:	cmp    al,BYTE PTR [rdi+0x8]
	...
   14000ae92:	add    BYTE PTR [rdi],ah
   14000ae94:	rcl    al,cl
   14000ae96:	rcl    cl,1
   14000ae98:	rcr    edi,1
   14000ae9a:	add    DWORD PTR [rdi],edx
	...
   14000aec0:	add    BYTE PTR [rdi+rax*4-0x1d],al
   14000aec4:	rcl    dl,cl
   14000aec6:	rcl    dl,1
   14000aec8:	shl    esp,cl
   14000aeca:	sbb    ecx,DWORD PTR cs:[rax+rax*1]
	...
   14000aeee:	add    BYTE PTR [rax],al
   14000aef0:	rex.X mov ebx,0xd2d0f3ef
   14000aef6:	rcl    al,cl
   14000aef8:	shl    eax,1
   14000aefa:	jno    0x14000af6c
   14000aefc:	ss sbb al,0x16
	...
   14000af1f:	push   rsp
   14000af20:	mov    al,0xe6
   14000af22:	int3   
   14000af23:	(bad)  
   14000af24:	enter  0xd0ca,0xca
   14000af28:	shl    al,1
   14000af2a:	nop
   14000af2b:	mov    DWORD PTR [rdx+rbp*2+0x1c],esi
   14000af2f:	(bad)  
	...
   14000af4c:	add    BYTE PTR [rax],al
   14000af4e:	pop    rax
   14000af4f:	test   eax,0xc2aca0a4
   14000af54:	enter  0xc8c8,0xc8
   14000af58:	enter  0xc4c4,0xb2
   14000af5c:	xchg   ebp,eax
   14000af5d:	pushf  
   14000af5e:	movabs ds:0x1d,al
	...
   14000af7b:	add    BYTE PTR [rax],al
   14000af7d:	add    BYTE PTR [rcx-0x4f596443],dh
   14000af83:	mov    ah,0xc4
   14000af85:	enter  0xc8c8,0xc4
   14000af89:	ret    0xd0c2
   14000af8c:	iret   
   14000af8d:	xchg   esi,eax
   14000af8e:	mov    esp,0xe9c
	...
   14000afab:	add    BYTE PTR [rax],al
   14000afad:	xchg   eax,ebp
   14000afaf:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000afb0:	movabs al,ds:0xbfc2c2c2bfb4ada9
   14000afb9:	mov    ah,0xd0
   14000afbb:	rcl    eax,cl
   14000afbd:	retf   
   14000afbe:	movabs ds:0x4e2ca7,eax
	...
   14000afdb:	add    BYTE PTR [rax],al
   14000afdd:	int3   
   14000afde:	in     al,dx
   14000afdf:	jae    0x14000af8a
   14000afe1:	test   al,0x7e
   14000afe3:	sub    DWORD PTR [rdi-0x7e7d7d7e],0xc8c8d0cf
   14000afed:	(bad)  
   14000afee:	movabs eax,ds:0xf6d79
	...
   14000b00b:	add    BYTE PTR [rdx-0x15],ah
   14000b00e:	fnsave [rdi-0x58]
   14000b011:	js     0x14000afc0
   14000b013:	scas   eax,DWORD PTR es:[rdi]
   14000b014:	(bad)  
   14000b015:	(bad)  
   14000b016:	scas   eax,DWORD PTR es:[rdi]
   14000b017:	scas   eax,DWORD PTR es:[rdi]
   14000b018:	mov    ah,0xc3
   14000b01a:	ret    
   14000b01b:	enter  0xc4b4,0xa3
   14000b01f:	jo     0x14000b091
   14000b021:	(bad)  
	...
   14000b03a:	add    BYTE PTR [rax],al
   14000b03c:	xchg   dl,bh
   14000b03e:	lahf   
   14000b03f:	movabs al,ds:0xfffdfffffff8ed7f
   14000b048:	std    
   14000b049:	stc    
   14000b04a:	div    cl
   14000b04c:	sar    DWORD PTR [rsi+0x38706dab],1
	...
   14000b06a:	add    BYTE PTR [rax],al
   14000b06c:	mov    ?,edi
   14000b06e:	ins    DWORD PTR es:[rdi],dx
   14000b06f:	push   rsi
   14000b070:	pop    rcx
   14000b071:	pop    rsp
   14000b072:	pop    rdi
   14000b073:	(bad)  
   14000b074:	xlat   BYTE PTR ds:[rbx]
   14000b075:	(bad)  
   14000b077:	fcom   st(6)
   14000b079:	movsxd esp,DWORD PTR [rdx+riz*2+0x61]
   14000b07d:	push   rdi
   14000b07e:	jg     0x14000b0ee
   14000b080:	js     0x14000b0ce
	...
   14000b09a:	add    BYTE PTR [rax],al
   14000b09c:	(bad)  
   14000b09d:	jmp    FWORD PTR [rbp+0x1d]
	...
   14000b0ac:	add    ah,dl
   14000b0ae:	movabs al,ds:0x4c7b69
	...
   14000b0cb:	add    BYTE PTR [rsp+rdi*8+0x49e],dl
	...
   14000b0da:	add    BYTE PTR [rax],al
   14000b0dc:	add    BYTE PTR [rcx-0x63],dl
   14000b0df:	imul   ebp,DWORD PTR [rax+0x29],0x0
	...
   14000b0f9:	add    BYTE PTR [rax],al
   14000b0fb:	add    bl,bl
   14000b0fd:	repz frstor [rax]
   14000b100:	sbb    DWORD PTR [rax],eax
	...
   14000b10a:	add    BYTE PTR [rax],al
   14000b10c:	add    BYTE PTR [rsp+rbp*2],bh
   14000b10f:	popf   
   14000b110:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000b111:	cmp    eax,DWORD PTR [rax]
	...
   14000b12b:	add    BYTE PTR [rax],al
   14000b12d:	jmp    0x14006eb26
	...
   14000b13a:	add    BYTE PTR [rax],al
   14000b13c:	add    BYTE PTR [rax+0x71],al
   14000b13f:	mov    bl,0x91
   14000b141:	add    BYTE PTR [r8],r8b
	...
   14000b15c:	add    BYTE PTR [rax+0x131db9fc],bl
	...
   14000b16a:	add    BYTE PTR [rax],al
   14000b16c:	rex.XB mov WORD PTR [r10+0x52b3],ds
	...
   14000b18b:	add    BYTE PTR [rax],al
   14000b18d:	fsubrp st(1),st
   14000b18f:	cmc    
   14000b190:	mov    BYTE PTR [rbx],al
   14000b192:	adc    eax,DWORD PTR [rax]
   14000b194:	add    BYTE PTR [rax],al
   14000b196:	add    BYTE PTR [rax],al
   14000b198:	add    BYTE PTR [rax],al
   14000b19a:	add    BYTE PTR [rip+0xffffffffb7bd8b83],dl        # 0xf7be3d23
   14000b1a0:	push   rax
	...
   14000b1bd:	add    BYTE PTR [rbx+rsi*8-0xe],ah
   14000b1c1:	mov    ebx,DWORD PTR [rip+0x1708]        # 0x14000c8cf
   14000b1c7:	add    BYTE PTR [rax],al
   14000b1c9:	adc    al,0xe
   14000b1cb:	test   DWORD PTR [rax+0x5bcccd],ecx
	...
   14000b1ed:	add    BYTE PTR [rax],al
   14000b1ef:	xchg   edi,eax
   14000b1f0:	repz neg esp
   14000b1f3:	push   rbp
   14000b1f4:	ds add eax,0x491e0d02
   14000b1fa:	test   BYTE PTR [rdx+0x5bbabd],dl
	...
   14000b220:	(bad)  
   14000b221:	loopne 0x14000b21e
   14000b223:	cmc    
   14000b224:	(bad)  
   14000b225:	mov    eax,0xe5b56e8a
   14000b22a:	(bad)  
   14000b22b:	mov    ebp,0x4fb6
	...
   14000b250:	add    BYTE PTR [rax],al
   14000b252:	xchg   ebx,eax
   14000b253:	loop   0x14000b244
   14000b255:	cld    
   14000b256:	(bad)  
   14000b257:	push   rsp
   14000b259:	out    0x99,eax
   14000b25b:	pop    rdx
	...
   14000b284:	fcmovbe st,st(6)
   14000b286:	pop    rbp
   14000b287:	pop    rsi
   14000b288:	pop    rdi
	...
   14000b2cd:	add    BYTE PTR [rax],al
   14000b2cf:	add    bh,bh
   14000b2d1:	(bad)  
   14000b2d2:	(bad)  
   14000b2d3:	(bad)  
   14000b2d4:	(bad)  
   14000b2d5:	inc    DWORD PTR [rax]
   14000b2d7:	add    bh,bh
   14000b2d9:	(bad)  
   14000b2da:	(bad)  
   14000b2db:	(bad)  
   14000b2dc:	(bad)  
   14000b2dd:	inc    DWORD PTR [rax]
   14000b2df:	add    bh,bh
   14000b2e1:	(bad)  
   14000b2e2:	cld    
   14000b2e3:	(bad)  
   14000b2e4:	(bad)  
   14000b2e5:	inc    DWORD PTR [rax]
   14000b2e7:	add    bh,bh
   14000b2e9:	(bad)  
   14000b2ea:	clc    
   14000b2eb:	jg     0x14000b2ec
   14000b2ed:	inc    DWORD PTR [rax]
   14000b2ef:	add    bh,bh
   14000b2f1:	push   rax
   14000b2f3:	jg     0x14000b2f4
   14000b2f5:	inc    DWORD PTR [rax]
   14000b2f7:	add    bh,bh
   14000b2f9:	jmp    rax
   14000b2fb:	(bad)  
   14000b2fc:	(bad)  
   14000b2fd:	inc    DWORD PTR [rax]
   14000b2ff:	add    bh,bh
   14000b301:	jmp    rax
   14000b303:	(bad)  
   14000b304:	(bad)  
   14000b305:	inc    DWORD PTR [rax]
   14000b307:	add    bh,bh
   14000b309:	jmp    rax
   14000b30b:	jg     0x14000b30c
   14000b30d:	inc    DWORD PTR [rax]
   14000b30f:	add    bh,bh
   14000b311:	jmp    rax
   14000b313:	jg     0x14000b314
   14000b315:	inc    DWORD PTR [rax]
   14000b317:	add    bh,bh
   14000b319:	jmp    rax
   14000b31b:	jg     0x14000b31c
   14000b31d:	inc    DWORD PTR [rax]
   14000b31f:	add    bh,bh
   14000b321:	jmp    rax
   14000b323:	(bad)  
   14000b324:	(bad)  
   14000b325:	inc    DWORD PTR [rax]
   14000b327:	add    bh,bh
   14000b329:	jmp    rax
   14000b32b:	(bad)  
   14000b32c:	(bad)  
   14000b32d:	inc    DWORD PTR [rax]
   14000b32f:	add    bh,bh
   14000b331:	jmp    rax
   14000b333:	jg     0x14000b334
   14000b335:	inc    DWORD PTR [rax]
   14000b337:	add    bh,bh
   14000b339:	jmp    rax
   14000b33b:	jg     0x14000b33c
   14000b33d:	inc    DWORD PTR [rax]
   14000b33f:	add    bh,bh
   14000b341:	jmp    rax
   14000b343:	(bad)  
   14000b344:	(bad)  
   14000b345:	inc    DWORD PTR [rax]
   14000b347:	add    bh,bh
   14000b349:	jmp    rax
   14000b34b:	(bad)  
   14000b34c:	(bad)  
   14000b34d:	inc    DWORD PTR [rax]
   14000b34f:	add    bh,bh
   14000b351:	jmp    rax
   14000b353:	(bad)  
   14000b354:	(bad)  
   14000b355:	inc    DWORD PTR [rax]
   14000b357:	add    bh,bh
   14000b359:	jmp    rax
   14000b35b:	(bad)  
   14000b35c:	(bad)  
   14000b35d:	inc    DWORD PTR [rax]
   14000b35f:	add    bh,bh
   14000b361:	jmp    rax
   14000b363:	(bad)  
   14000b364:	(bad)  
   14000b365:	inc    DWORD PTR [rax]
   14000b367:	add    bh,bh
   14000b369:	jmp    rax
   14000b36b:	(bad)  
   14000b36c:	(bad)  
   14000b36d:	inc    DWORD PTR [rax]
   14000b36f:	add    bh,bh
   14000b371:	jmp    rax
   14000b373:	(bad)  
   14000b374:	(bad)  
   14000b375:	inc    DWORD PTR [rax]
   14000b377:	add    bh,bh
   14000b379:	jmp    rax
   14000b37b:	(bad)  
   14000b37c:	(bad)  
   14000b37d:	inc    DWORD PTR [rax]
   14000b37f:	add    bh,bh
   14000b381:	jmp    rax
   14000b383:	(bad)  
   14000b384:	(bad)  
   14000b385:	inc    DWORD PTR [rax]
   14000b387:	add    bh,bh
   14000b389:	jmp    rax
   14000b38b:	(bad)  
   14000b38c:	(bad)  
   14000b38d:	inc    DWORD PTR [rax]
   14000b38f:	add    bh,bh
   14000b391:	jmp    rax
   14000b393:	(bad)  
   14000b394:	(bad)  
   14000b395:	inc    DWORD PTR [rax]
   14000b397:	add    bh,bh
   14000b399:	jmp    rax
   14000b39b:	ud0    edi,edi
   14000b39e:	add    BYTE PTR [rax],al
   14000b3a0:	(bad)  
   14000b3a1:	inc    DWORD PTR [rax+0xffff07]
   14000b3a7:	add    bh,bh
   14000b3a9:	inc    DWORD PTR [rax]
   14000b3ab:	add    edi,edi
   14000b3ad:	inc    DWORD PTR [rax]
   14000b3af:	add    bh,bh
   14000b3b1:	inc    BYTE PTR [rax]
   14000b3b3:	add    bh,bh
   14000b3b5:	inc    DWORD PTR [rax]
   14000b3b7:	add    bh,bh
   14000b3b9:	cld    
   14000b3ba:	add    BYTE PTR [rax],al
   14000b3bc:	(bad)  
   14000b3bd:	inc    DWORD PTR [rax]
   14000b3bf:	add    bh,bh
   14000b3c1:	cld    
   14000b3c2:	add    BYTE PTR [rax],al
   14000b3c4:	jg     0x14000b3c5
   14000b3c6:	add    BYTE PTR [rax],al
   14000b3c8:	(bad)  
   14000b3c9:	clc    
   14000b3ca:	add    BYTE PTR [rax],al
   14000b3cc:	(bad)  
   14000b3cd:	inc    DWORD PTR [rax]
   14000b3cf:	add    bh,bh
   14000b3d1:	clc    
   14000b3d2:	add    BYTE PTR [rax],al
   14000b3d4:	(bad)  
   14000b3d5:	inc    DWORD PTR [rax]
   14000b3d7:	add    bh,bh
   14000b3d9:	lock add BYTE PTR [rax],al
   14000b3dc:	(bad)  
   14000b3dd:	inc    DWORD PTR [rax]
   14000b3df:	add    bh,bh
   14000b3e1:	lock add BYTE PTR [rax],al
   14000b3e4:	(bad)  
   14000b3e5:	inc    DWORD PTR [rax]
   14000b3e7:	add    bh,bh
   14000b3e9:	lock add BYTE PTR [rax],al
   14000b3ec:	(bad)  
   14000b3ed:	inc    DWORD PTR [rax]
   14000b3ef:	add    bh,bh
   14000b3f1:	lock (bad) 
   14000b3f3:	clc    
   14000b3f4:	(bad)  
   14000b3f5:	inc    DWORD PTR [rax]
   14000b3f7:	add    bh,bh
   14000b3f9:	lock (bad) 
   14000b3fb:	clc    
   14000b3fc:	(bad)  
   14000b3fd:	inc    DWORD PTR [rax]
   14000b3ff:	add    bh,bh
   14000b401:	lock jg 0x14000b3fc
   14000b404:	(bad)  
   14000b405:	inc    DWORD PTR [rax]
   14000b407:	add    bh,bh
   14000b409:	clc    
   14000b40a:	jg     0x14000b404
   14000b40c:	(bad)  
   14000b40d:	inc    DWORD PTR [rax]
   14000b40f:	add    bh,bh
   14000b411:	clc    
   14000b412:	(bad)  
   14000b413:	lock jg 0x14000b415
   14000b416:	add    BYTE PTR [rax],al
   14000b418:	(bad)  
   14000b419:	clc    
   14000b41a:	(bad)  
   14000b41b:	loopne 0x14000b49c
   14000b41d:	inc    DWORD PTR [rax]
   14000b41f:	add    bh,bh
   14000b421:	cld    
   14000b422:	(bad)  
   14000b423:	cmp    bh,0xff
   14000b426:	add    BYTE PTR [rax],al
   14000b428:	(bad)  
   14000b429:	inc    BYTE PTR [rax]
   14000b42b:	add    edi,edi
   14000b42d:	inc    DWORD PTR [rax]
   14000b42f:	add    bh,bh
   14000b431:	inc    DWORD PTR [rax]
   14000b433:	add    edi,edi
   14000b435:	inc    DWORD PTR [rax]
   14000b437:	add    bh,bh
   14000b439:	inc    eax
   14000b43b:	ud0    edi,edi
   14000b43e:	add    BYTE PTR [rax],al
   14000b440:	(bad)  
   14000b441:	push   rax
   14000b443:	jg     0x14000b444
   14000b445:	inc    DWORD PTR [rax]
   14000b447:	add    bh,bh
   14000b449:	(bad)  
   14000b44a:	(bad)  
   14000b44b:	(bad)  
   14000b44c:	(bad)  
   14000b44d:	inc    DWORD PTR [rax]
   14000b44f:	add    BYTE PTR [rax],ch
   14000b451:	add    BYTE PTR [rax],al
   14000b453:	add    BYTE PTR [rax],ah
   14000b455:	add    BYTE PTR [rax],al
   14000b457:	add    BYTE PTR [rax+0x0],al
   14000b45a:	add    BYTE PTR [rax],al
   14000b45c:	add    DWORD PTR [rax],eax
   14000b45e:	or     BYTE PTR [rax],al
   14000b460:	add    BYTE PTR [rax],al
   14000b462:	add    BYTE PTR [rax],al
   14000b464:	add    BYTE PTR [rax+rax*1],al
	...
   14000b46f:	add    BYTE PTR [rax],al
   14000b471:	add    DWORD PTR [rax],eax
   14000b473:	add    BYTE PTR [rax],al
   14000b475:	add    DWORD PTR [rax],eax
   14000b477:	add    BYTE PTR [rax],al
   14000b479:	add    BYTE PTR [rax],al
   14000b47b:	add    BYTE PTR [rbx],ah
   14000b47d:	sub    eax,DWORD PTR [rax+0x0]
   14000b480:	sub    al,0x34
   14000b482:	rex.RX add BYTE PTR [rbx],r13b
   14000b485:	xor    eax,0x3729004c
   14000b48a:	push   rsp
   14000b48b:	add    BYTE PTR [rax],ch
   14000b48d:	cmp    BYTE PTR [rax+0x0],dl
   14000b490:	and    BYTE PTR [rcx],bh
   14000b492:	pop    rbp
   14000b493:	add    BYTE PTR [rdi],bl
   14000b495:	rex.B je 0x14000b498
   14000b498:	cmp    BYTE PTR [rsi+0x62],cl
   14000b49b:	add    BYTE PTR [rax+rdx*2],bh
   14000b49e:	jno    0x14000b4a0
   14000b4a0:	push   rbx
   14000b4a1:	push   rdi
   14000b4a2:	pop    rsp
   14000b4a3:	add    BYTE PTR [rdx+0x5d],bl
   14000b4a6:	(bad)  
   14000b4a7:	add    BYTE PTR [rax+0x59],bl
   14000b4aa:	add    BYTE PTR fs:[rbp+0x5f],cl
   14000b4ae:	jbe    0x14000b4b0
   14000b4b0:	push   rbp
   14000b4b1:	(bad)  
   14000b4b2:	outs   dx,DWORD PTR ds:[rsi]
   14000b4b3:	add    BYTE PTR [rcx+rbp*2+0x7c],dl
   14000b4b7:	add    BYTE PTR [rdx+rbp*2+0x7b],bl
   14000b4bb:	add    BYTE PTR [rsi+0x6d],bl
   14000b4be:	jnp    0x14000b4c0
   14000b4c0:	pop    rdi
   14000b4c1:	jbe    0x14000b542
   14000b4c3:	add    BYTE PTR [rcx+0x69],ch
   14000b4c6:	imul   eax,DWORD PTR [rax],0x757575
   14000b4cc:	jo     0x14000b545
   14000b4ce:	jnp    0x14000b4d0
   14000b4d0:	jbe    0x14000b54a
   14000b4d2:	jp     0x14000b4d4
   14000b4d4:	jns    0x14000b54f
   14000b4d6:	jns    0x14000b4d8
   14000b4d8:	(bad)  
   14000b4d9:	pop    rbx
   14000b4da:	xchg   DWORD PTR [rax],eax
   14000b4dc:	sub    al,0x5d
   14000b4de:	mov    al,BYTE PTR [rax]
   14000b4e0:	xor    al,0x5c
   14000b4e2:	(bad)  
   14000b4e3:	add    BYTE PTR [rbx*2+0x5d38008f],dh
   14000b4ea:	mov    DWORD PTR [rax],eax
   14000b4ec:	cmp    DWORD PTR [rdx-0x6d],ebx
   14000b4ef:	add    BYTE PTR [rip+0x39008465],bh        # 0x17901395a
   14000b4f5:	movsxd edx,DWORD PTR [rax+rax*1+0x95653a]
   14000b4fc:	(bad)  
   14000b4fd:	gs xchg esp,eax
   14000b4ff:	add    BYTE PTR [rdi],dh
   14000b501:	push   0xffffffffffffff9c
   14000b503:	add    BYTE PTR [riz*2+0x692800a4],ch
   14000b50a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b50b:	add    BYTE PTR [rbx],dh
   14000b50d:	ins    BYTE PTR es:[rdi],dx
   14000b50e:	movabs ds:0xa36c3900a06d3600,eax
   14000b517:	add    BYTE PTR [rbp*2+0x793800a0],bh
   14000b51e:	scas   eax,DWORD PTR es:[rdi]
   14000b51f:	add    BYTE PTR [rip+0x3e00b965],ah        # 0x17e016e8a
   14000b525:	jnp    0x14000b4d9
   14000b527:	add    BYTE PTR [rsi],bh
   14000b529:	js     0x14000b4e0
   14000b52b:	add    BYTE PTR [rip+0x3a00b87b],dh        # 0x17a016dac
   14000b531:	jl     0x14000b4ec
   14000b533:	add    BYTE PTR [rbx+0x69],al
   14000b536:	mov    eax,DWORD PTR [rax]
   14000b538:	rex.R push 0xffffffffffffff8a
   14000b53b:	add    BYTE PTR [rax+0x69],cl
   14000b53e:	mov    WORD PTR [rax],es
   14000b540:	rex.WB outs dx,DWORD PTR ds:[rsi]
   14000b542:	xchg   edx,eax
   14000b543:	add    BYTE PTR [rbp+0x79],ch
   14000b546:	xchg   BYTE PTR [rax],al
   14000b548:	jle    0x14000b5c9
   14000b54a:	add    BYTE PTR [rax],0x2a
   14000b54d:	jp     0x14000b51c
   14000b54f:	add    BYTE PTR [rsi],dh
   14000b551:	jl     0x14000b517
   14000b553:	add    BYTE PTR [rax],dh
   14000b555:	jge    0x14000b525
   14000b557:	add    BYTE PTR [rdi],bh
   14000b559:	xchg   DWORD PTR [rbx-0x417bc100],edi
   14000b55f:	add    BYTE PTR [rsi],bh
   14000b561:	mov    WORD PTR [rbx-0x627da600],?
   14000b567:	add    BYTE PTR [rsi-0x7b],ah
   14000b56a:	lahf   
   14000b56b:	add    BYTE PTR [rax+rcx*4-0x54],al
   14000b56f:	add    BYTE PTR [rax-0x71],cl
   14000b572:	mov    esi,0xac8a6c00
   14000b577:	add    BYTE PTR [rax-0x6c],ah
   14000b57a:	scas   eax,DWORD PTR es:[rdi]
   14000b57b:	add    BYTE PTR [rsi-0x70],ah
   14000b57e:	mov    edx,0xb0937500
   14000b583:	add    BYTE PTR [rbp-0x66],bh
   14000b586:	mov    bl,0x0
   14000b588:	jb     0x14000b521
   14000b58a:	mov    edi,0xbca17e00
   14000b58f:	add    BYTE PTR [rdi],bh
   14000b591:	xchg   ecx,eax
   14000b592:	xlat   BYTE PTR ds:[rbx]
   14000b593:	add    BYTE PTR [rdi],dh
   14000b595:	mov    edx,esp
   14000b597:	add    BYTE PTR [rax+rdx*4],ch
   14000b59a:	loopne 0x14000b59c
   14000b59c:	cmp    DWORD PTR [rsi-0x6eceff1b],ebx
   14000b5a2:	in     eax,dx
   14000b5a3:	add    BYTE PTR [rbx],bh
   14000b5a5:	xchg   esi,eax
   14000b5a6:	in     al,dx
   14000b5a7:	add    BYTE PTR [rcx],bh
   14000b5a9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000b5aa:	out    dx,al
   14000b5ab:	add    BYTE PTR [rip+0x3b00f3a7],bh        # 0x17b01a958
   14000b5b1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000b5b2:	clc    
   14000b5b3:	add    BYTE PTR [rbx],bh
   14000b5b5:	stos   DWORD PTR es:[rdi],eax
   14000b5b6:	cli    
   14000b5b7:	add    BYTE PTR [rax],bh
   14000b5b9:	scas   eax,DWORD PTR es:[rdi]
   14000b5ba:	inc    DWORD PTR [rax]
   14000b5bc:	mov    cl,bpl
   14000b5bf:	add    BYTE PTR [rdi-0x69],dl
   14000b5c2:	mov    BYTE PTR [rax],0x5b
   14000b5c5:	fwait
   14000b5c6:	rol    BYTE PTR [rax],0x5f
   14000b5c9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000b5ca:	fiadd  DWORD PTR [rax]
   14000b5cc:	rex xchg esp,eax
   14000b5ce:	call   0x1309effd3
   14000b5d3:	add    BYTE PTR [rdi-0x5c],cl
   14000b5d6:	jrcxz  0x14000b5d8
   14000b5d8:	push   rdi
   14000b5d9:	mov    ebp,0xa84200e9
   14000b5de:	lock add BYTE PTR [rsi-0x53],al
   14000b5e2:	repnz add BYTE PTR [rcx-0x52],cl
   14000b5e6:	test   DWORD PTR [rax],0xf9ae43
   14000b5ec:	rex.WR movabs rcx,0xba4c00f8b64800f7
   14000b5f6:	clc    
   14000b5f7:	add    BYTE PTR [rbp-0x42],cl
   14000b5fa:	clc    
   14000b5fb:	add    BYTE PTR [rax-0x49],dl
   14000b5fe:	repz add BYTE PTR [rcx+rsi*4-0x9],dl
   14000b603:	add    BYTE PTR [rcx-0x47],dl
   14000b606:	cmc    
   14000b607:	add    BYTE PTR [rcx-0x42],dl
   14000b60a:	clc    
   14000b60b:	add    BYTE PTR [rbx+rdi*4-0x4],dl
   14000b60f:	add    BYTE PTR [rdi-0x5c],ah
   14000b612:	out    0x0,al
   14000b614:	imul   ebp,DWORD PTR [rbx-0x439bff0d],0xb67c00ff
   14000b61e:	stc    
   14000b61f:	add    BYTE PTR [rbp-0x3f],cl
   14000b622:	inc    DWORD PTR [rax]
   14000b624:	push   rsi
   14000b625:	shl    esi,0x0
   14000b628:	pop    rdi
   14000b629:	shl    edi,0x0
   14000b62c:	pop    rax
   14000b62d:	(bad)
   14000b630:	push   rcx
   14000b631:	ret    0xf9
   14000b634:	push   rsi
   14000b635:	sar    al,0x0
   14000b638:	push   rsi
   14000b639:	ret    0xff
   14000b63c:	push   rax
   14000b63d:	(bad)  
   14000b63e:	cld    
   14000b63f:	add    BYTE PTR [rsi-0x34],dl
   14000b642:	cli    
   14000b643:	add    BYTE PTR [rsi-0x38],dl
   14000b646:	inc    DWORD PTR [rax]
   14000b648:	push   rdi
   14000b649:	(bad)  
   14000b64a:	cld    
   14000b64b:	add    BYTE PTR [rbp-0x33],bl
   14000b64e:	cli    
   14000b64f:	add    BYTE PTR [rax-0x36],bl
   14000b652:	inc    DWORD PTR [rax]
   14000b654:	pop    rax
   14000b655:	iret   
   14000b656:	inc    DWORD PTR [rax]
   14000b658:	pop    rbx
   14000b659:	sar    esp,cl
   14000b65b:	add    BYTE PTR [rdi-0x2f],bl
   14000b65e:	inc    DWORD PTR [rax]
   14000b660:	pop    rsi
   14000b661:	(bad)  
   14000b662:	inc    BYTE PTR [rax]
   14000b664:	pop    rbp
   14000b665:	fcos   
   14000b667:	add    BYTE PTR [rsi-0x22],bl
   14000b66a:	inc    DWORD PTR [rax]
   14000b66c:	gs sar cl,0x0
   14000b670:	imul   eax,esi,0xffffffff
   14000b673:	add    BYTE PTR [rsp+rax*8-0x1],ch
   14000b677:	add    BYTE PTR [rax-0x37],ch
   14000b67a:	cli    
   14000b67b:	add    BYTE PTR [rdx-0x2a],ah
   14000b67e:	std    
   14000b67f:	add    BYTE PTR [rbp-0x2b],ah
   14000b682:	std    
   14000b683:	add    BYTE PTR [rdx-0x28],ah
   14000b686:	inc    DWORD PTR [rax]
   14000b688:	gs (bad) 
   14000b68b:	add    BYTE PTR [rdx-0x22],ah
   14000b68e:	inc    DWORD PTR [rax]
   14000b690:	imul   ebx,ebp,0xdd6c00ff
   14000b696:	inc    DWORD PTR [rax]
   14000b698:	jbe    0x14000b66b
   14000b69a:	inc    DWORD PTR [rax]
   14000b69c:	jl     0x14000b671
   14000b69e:	inc    DWORD PTR [rax]
   14000b6a0:	imul   esp,edx,0x918300ff
   14000b6a6:	movabs eax,ds:0xa59c8f00a79d8900
   14000b6af:	add    BYTE PTR [rax-0x72ff5b64],dl
   14000b6b5:	movabs al,ds:0xb39400bfa59100a9
   14000b6be:	rol    DWORD PTR [rax],1
   14000b6c0:	xchg   ebx,eax
   14000b6c1:	(bad)  
   14000b6c2:	(bad)  
   14000b6c3:	add    BYTE PTR [rdi-0x6fff0122],al
   14000b6c9:	fdivr  st,st(7)
   14000b6cb:	add    BYTE PTR [rax-0x4cff1027],ch
   14000b6d1:	(bad)  
   14000b6d3:	add    BYTE PTR [rcx-0x79ff0024],ch
   14000b6d9:	loope  0x14000b6da
   14000b6db:	add    BYTE PTR [rbx-0x56ff001b],bl
   14000b6e1:	out    dx,al
   14000b6e2:	inc    DWORD PTR [rax]
   14000b6e4:	mov    ah,0xe3
   14000b6e6:	sti    
   14000b6e7:	add    BYTE PTR [rdi-0x4dff0019],dh
   14000b6ed:	icebp  
   14000b6ee:	inc    DWORD PTR [rax]
   14000b6f0:	mov    ebx,0xbe00fff2
   14000b6f5:	idiv   edi
   14000b6f7:	add    cl,al
   14000b6f9:	clc    
   14000b6fa:	inc    DWORD PTR [rax]
   14000b6fc:	fdivr  st,st(6)
   14000b6fe:	inc    DWORD PTR [rax]
	...
   14000b874:	(bad)  
   14000b875:	(bad)  
   14000b876:	inc    DWORD PTR [rax]
	...
   14000b8a8:	(bad)  
   14000b8a9:	sbb    eax,DWORD PTR [rax]
	...
   14000b8c7:	sub    cl,BYTE PTR [rbx+riz*1+0xd]
	...
   14000b8e3:	add    BYTE PTR [rax],al
   14000b8e5:	add    BYTE PTR [rdx],ch
   14000b8e7:	jp     0x14000b91f
   14000b8e9:	rex.WXB sbb al,0x0
	...
   14000b904:	add    BYTE PTR [rax],al
   14000b906:	sub    bh,BYTE PTR [rdx+0x36]
   14000b909:	ins    BYTE PTR es:[rdi],dx
   14000b90a:	xor    DWORD PTR [rax],eax
	...
   14000b924:	add    BYTE PTR [rax],al
   14000b926:	sub    ch,BYTE PTR [rdi+0x2e]
   14000b929:	cmp    dh,BYTE PTR [rax+rax*1]
	...
   14000b944:	add    BYTE PTR [rax],al
   14000b946:	sub    ah,BYTE PTR [rbx+0x2e]
   14000b949:	cmp    BYTE PTR [rsi],cl
	...
   14000b963:	add    BYTE PTR [rax],al
   14000b965:	add    BYTE PTR [rdx],ch
   14000b967:	jbe    0x14000b994
   14000b969:	outs   dx,DWORD PTR ds:[rsi]
   14000b96a:	xor    al,BYTE PTR [rax]
	...
   14000b984:	add    BYTE PTR [rax],al
   14000b986:	sub    dh,BYTE PTR [rbx+0x2b]
   14000b989:	outs   dx,DWORD PTR ds:[rsi]
	...
   14000b9a6:	sub    ch,BYTE PTR [rsi+0x25]
   14000b9a9:	sldt   WORD PTR ds:[rax]
	...
   14000b9c5:	add    BYTE PTR [rdx],ch
   14000b9c7:	outs   dx,DWORD PTR ds:[rsi]
   14000b9c8:	and    eax,0x316e
	...
   14000b9e5:	add    BYTE PTR [rdx],ch
   14000b9e7:	jne    0x14000ba10
   14000b9e9:	jo     0x14000ba1c
	...
   14000ba03:	add    BYTE PTR [rax],al
   14000ba05:	add    BYTE PTR [rdx],ch
   14000ba07:	mov    ah,BYTE PTR [rcx]
   14000ba09:	outs   dx,BYTE PTR ds:[rsi]
   14000ba0a:	xor    DWORD PTR [rax],eax
	...
   14000ba24:	add    BYTE PTR [rax],al
   14000ba26:	sub    al,BYTE PTR [rsi+0x316e21]
	...
   14000ba44:	add    BYTE PTR [rax],al
   14000ba46:	sub    al,BYTE PTR [rbx+0x317022]
	...
   14000ba64:	add    BYTE PTR [rax],al
   14000ba66:	sub    bh,BYTE PTR [rdx+0x25]
   14000ba69:	sub    eax,0x1e
	...
   14000ba86:	sub    al,BYTE PTR [rsi+0x103d6c76]
	...
   14000baa4:	add    BYTE PTR [rdx],dl
   14000baa6:	xchg   BYTE PTR [rsi+0x1a587c86],al
   14000baac:	(bad)  
	...
   14000bac1:	add    BYTE PTR [rax],al
   14000bac3:	add    BYTE PTR [rax-0x6d],al
   14000bac6:	(bad)  
   14000bac7:	mov    al,BYTE PTR [rbx+0x18376f7c]
   14000bacd:	adc    eax,DWORD PTR [rax]
	...
   14000bae3:	push   rdx
   14000bae4:	and    BYTE PTR [rcx+0x6f],0x7a
   14000bae8:	jp     0x14000bb5c
   14000baea:	outs   dx,BYTE PTR ds:[rsi]
   14000baeb:	pop    rsp
   14000baec:	sbb    QWORD PTR [rax+r8*1],rdx
	...
   14000bb00:	add    BYTE PTR [rax],al
   14000bb02:	cmp    al,0x61
   14000bb04:	pop    rdx
   14000bb05:	pop    rcx
   14000bb06:	(bad)  
   14000bb07:	outs   dx,DWORD PTR ds:[rsi]
   14000bb08:	outs   dx,BYTE PTR ds:[rsi]
   14000bb09:	outs   dx,BYTE PTR ds:[rsi]
   14000bb0a:	pop    rdi
   14000bb0b:	xchg   BYTE PTR [rdx+0x48],ch
   14000bb0e:	or     BYTE PTR [rax],al
	...
   14000bb20:	add    BYTE PTR [rax],al
   14000bb22:	push   rsp
   14000bb23:	pop    rbx
   14000bb24:	rex.WRB pop r14
   14000bb26:	(bad)  
   14000bb27:	pop    rdi
   14000bb28:	push   0x5f
   14000bb2a:	(bad)  
   14000bb2b:	(bad)  
   14000bb2c:	jae    0x14000bb7e
   14000bb2e:	and    al,0x14
	...
   14000bb40:	add    BYTE PTR [rsi-0x6277b181],cl
   14000bb46:	lahf   
   14000bb47:	lahf   
   14000bb48:	sahf   
   14000bb49:	sahf   
   14000bb4a:	(bad)  
   14000bb4b:	cwde   
   14000bb4c:	jb     0x14000bb9d
   14000bb4e:	xor    eax,0xb
	...
   14000bb5f:	add    BYTE PTR [rax],al
   14000bb61:	mov    WORD PTR [rdi+0x38],?
   14000bb64:	(bad)  
   14000bb65:	(bad)  
   14000bb66:	(bad)  
   14000bb67:	(bad)  
   14000bb68:	(bad)  
   14000bb69:	(bad)  
   14000bb6a:	(bad)  
   14000bb6b:	(bad)  
   14000bb6c:	(bad)  
   14000bb6d:	rex.WB
   14000bb6e:	rex.RXB or r8b,BYTE PTR [r8]
	...
   14000bb81:	(bad)
	...
   14000bb8d:	rex.RX push rbp
   14000bb8f:	or     eax,DWORD PTR [rax]
	...
   14000bba1:	add    BYTE PTR [rcx+0x1307],bl
   14000bba7:	add    BYTE PTR [rax],al
   14000bba9:	add    BYTE PTR [rax],al
   14000bbab:	add    BYTE PTR [rbx+0x165156],cl
	...
   14000bbc1:	add    BYTE PTR [rdx+0x266],dl
   14000bbc7:	add    BYTE PTR [rax],al
   14000bbc9:	add    BYTE PTR [rax],al
   14000bbcb:	add    BYTE PTR [rcx],ah
   14000bbcd:	push   0x1e
	...
   14000bbe2:	rex.X movabs al,ds:0x9000000000b012b
   14000bbec:	addr32 push rdi
   14000bbee:	(bad)  
	...
   14000bc03:	rex.RB movabs eax,ds:0x7d691d0403053b95
   14000bc0d:	adc    BYTE PTR [rax],al
	...
   14000bc23:	add    BYTE PTR [rbx-0x6f],al
   14000bc26:	xchg   esi,eax
   14000bc27:	pushf  
   14000bc28:	pushf  
   14000bc29:	xchg   edi,eax
   14000bc2a:	xchg   esp,eax
   14000bc2b:	push   rbx
   14000bc2c:	xor    eax,DWORD PTR [rax]
	...
   14000bc46:	nop
   14000bc47:	rex.R
   14000bc48:	rex.B
   14000bc49:	rex.X mov WORD PTR [rax],es
	...
   14000bc78:	(bad)  
   14000bc79:	(bad)  
   14000bc7a:	(bad)  
   14000bc7b:	(bad)  
   14000bc7c:	(bad)  
   14000bc7d:	(bad)  
   14000bc7e:	(bad)  
   14000bc7f:	(bad)  
   14000bc80:	(bad)  
   14000bc81:	(bad)  
   14000bc82:	(bad)  
   14000bc83:	(bad)  
   14000bc84:	(bad)  
   14000bc85:	cld    
   14000bc86:	(bad)  
   14000bc87:	(bad)  
   14000bc88:	(bad)  
   14000bc89:	cld    
   14000bc8a:	(bad)  
   14000bc8b:	(bad)  
   14000bc8c:	(bad)  
   14000bc8d:	cld    
   14000bc8e:	(bad)  
   14000bc8f:	(bad)  
   14000bc90:	(bad)  
   14000bc91:	cld    
   14000bc92:	(bad)  
   14000bc93:	(bad)  
   14000bc94:	(bad)  
   14000bc95:	cld    
   14000bc96:	(bad)  
   14000bc97:	(bad)  
   14000bc98:	(bad)  
   14000bc99:	cld    
   14000bc9a:	(bad)  
   14000bc9b:	(bad)  
   14000bc9c:	(bad)  
   14000bc9d:	cld    
   14000bc9e:	(bad)  
   14000bc9f:	(bad)  
   14000bca0:	(bad)  
   14000bca1:	cld    
   14000bca2:	(bad)  
   14000bca3:	(bad)  
   14000bca4:	(bad)  
   14000bca5:	cld    
   14000bca6:	(bad)  
   14000bca7:	(bad)  
   14000bca8:	(bad)  
   14000bca9:	cld    
   14000bcaa:	(bad)  
   14000bcab:	(bad)  
   14000bcac:	(bad)  
   14000bcad:	cld    
   14000bcae:	(bad)  
   14000bcaf:	(bad)  
   14000bcb0:	(bad)  
   14000bcb1:	cld    
   14000bcb2:	(bad)  
   14000bcb3:	(bad)  
   14000bcb4:	(bad)  
   14000bcb5:	cld    
   14000bcb6:	(bad)  
   14000bcb7:	(bad)  
   14000bcb8:	(bad)  
   14000bcb9:	cld    
   14000bcba:	ud0    edi,edi
   14000bcbd:	clc    
   14000bcbe:	(bad)  
   14000bcbf:	(bad)  
   14000bcc0:	push   rax
   14000bcc2:	add    edi,edi
   14000bcc4:	jmp    rax
   14000bcc6:	add    edi,edi
   14000bcc8:	inc    eax
   14000bcca:	add    edi,edi
   14000bccc:	inc    eax
   14000bcce:	add    bh,bh
   14000bcd0:	inc    DWORD PTR [rax-0x7f000100]
   14000bcd6:	add    bh,bh
   14000bcd8:	dec    DWORD PTR [rdi-0x38000008]
   14000bcde:	lock (bad) 
   14000bce0:	inc    edi
   14000bce2:	icebp  
   14000bce3:	(bad)  
   14000bce4:	inc    ecx
   14000bce6:	loope  0x14000bce7
   14000bce8:	jmp    rax
   14000bcea:	add    edi,edi
   14000bcec:	push   rax
   14000bcee:	(bad)  
   14000bcef:	(bad)  
   14000bcf0:	(bad)  
   14000bcf1:	cld    
   14000bcf2:	(bad)  
   14000bcf3:	(bad)  
   14000bcf4:	(bad)  
   14000bcf5:	(bad)  
   14000bcf6:	(bad)  
   14000bcf7:	jmp    FWORD PTR [rax]
   14000bcf9:	add    BYTE PTR [rax],al
   14000bcfb:	add    BYTE PTR [rax],dl
   14000bcfd:	add    BYTE PTR [rax],al
   14000bcff:	add    BYTE PTR [rax],ah
   14000bd01:	add    BYTE PTR [rax],al
   14000bd03:	add    BYTE PTR [rcx],al
   14000bd05:	add    BYTE PTR [rax],cl
   14000bd07:	add    BYTE PTR [rax],al
   14000bd09:	add    BYTE PTR [rax],al
   14000bd0b:	add    BYTE PTR [rax],al
   14000bd0d:	add    DWORD PTR [rax],eax
	...
   14000bd17:	add    BYTE PTR [rax],al
   14000bd19:	add    DWORD PTR [rax],eax
   14000bd1b:	add    BYTE PTR [rax],al
   14000bd1d:	add    DWORD PTR [rax],eax
   14000bd1f:	add    BYTE PTR [rax],al
   14000bd21:	add    BYTE PTR [rax],al
   14000bd23:	add    BYTE PTR [rdi],bh
   14000bd25:	rex.WRXB
   14000bd26:	add    BYTE PTR [edi],bh
   14000bd29:	push   rax
   14000bd2a:	imul   eax,DWORD PTR [rax],0x6c523c
   14000bd30:	xor    cl,BYTE PTR [rdi+0x7e]
   14000bd33:	add    BYTE PTR [rsp+riz*2+0x7a],dl
   14000bd37:	add    BYTE PTR [rbx],bh
   14000bd39:	pop    rbx
   14000bd3a:	add    BYTE PTR [rax],0x3a
   14000bd3d:	pop    rdi
   14000bd3e:	xchg   DWORD PTR [rax],eax
   14000bd40:	rex.WRB
   14000bd41:	test   BYTE PTR [eax],al
   14000bd44:	push   rsp
   14000bd45:	xchg   DWORD PTR [eax],eax
   14000bd48:	push   rsp
   14000bd49:	push   0xffffffffffffff83
   14000bd4b:	add    BYTE PTR [rcx+rdi*2-0x64],dl
   14000bd4f:	add    BYTE PTR [rdi],ah
   14000bd51:	jle    0x14000bd1a
   14000bd53:	add    BYTE PTR [rsi],bh
   14000bd55:	test   BYTE PTR [rbx-0x617ab300],bh
   14000bd5b:	add    BYTE PTR [rbx-0x74],cl
   14000bd5e:	stos   BYTE PTR es:[rdi],al
   14000bd5f:	add    BYTE PTR [rbp-0x74],al
   14000bd62:	mov    ebx,0xb2924d00
   14000bd67:	add    BYTE PTR [rdx+rcx*4-0x54],ch
   14000bd6b:	add    BYTE PTR [rdi+rax*4],dh
   14000bd6e:	mov    DWORD PTR [rax],0xc88734
   14000bd74:	rex.WRX (bad) 
   14000bd76:	rol    DWORD PTR [rax],0x49
   14000bd79:	(bad)  
   14000bd7a:	int    0x0
   14000bd7c:	push   rax
   14000bd7d:	nop
   14000bd7e:	rol    DWORD PTR [rax],0x5a
   14000bd81:	cwde   
   14000bd82:	rol    DWORD PTR [rax],0x49
   14000bd85:	popf   
   14000bd86:	rol    BYTE PTR [rax],1
   14000bd88:	rex.X movabs al,ds:0xa46c00ddb35400d1
   14000bd92:	leave  
   14000bd93:	add    BYTE PTR [rax-0x5a],cl
   14000bd96:	call   0x122bb0f9b
   14000bd9b:	add    BYTE PTR [rsi-0x45],dl
   14000bd9e:	loope  0x14000bda0
   14000bda0:	rex.WRB mov r15b,0xf9
   14000bda3:	add    BYTE PTR [rbp-0x4c],dl
   14000bda6:	repz add BYTE PTR [rbp-0x46],dl
   14000bdaa:	test   DWORD PTR [rax],0xf9b753
   14000bdb0:	rex.W int 0xfc
   14000bdb3:	add    BYTE PTR [rsi-0x40],bl
   14000bdb6:	lock add BYTE PTR [rdi-0x3f],dl
   14000bdba:	stc    
   14000bdbb:	add    BYTE PTR [rsi+rax*8-0x7],bl
   14000bdbf:	add    BYTE PTR [rbx-0x35],dl
   14000bdc2:	inc    BYTE PTR [rax]
   14000bdc4:	rex.WX sar rsp,1
   14000bdc7:	add    BYTE PTR [rdi-0x2e],bl
   14000bdca:	cli    
   14000bdcb:	add    BYTE PTR [rbx-0x29],bl
   14000bdce:	cld    
   14000bdcf:	add    BYTE PTR [rcx-0x3a],ch
   14000bdd2:	cmc    
   14000bdd3:	add    BYTE PTR [rbp-0x2b],ah
   14000bdd6:	cli    
   14000bdd7:	add    BYTE PTR [rbx-0x2a],ch
   14000bdda:	sti    
   14000bddb:	add    BYTE PTR [rax-0x2c],dh
   14000bdde:	repz add BYTE PTR [rcx-0x2b],dh
   14000bde2:	cmc    
   14000bde3:	add    BYTE PTR [rcx-0x22],dh
   14000bde6:	cld    
   14000bde7:	add    BYTE PTR [rdx+riz*8-0x3],dl
   14000bdeb:	add    BYTE PTR [rbp-0x1d],bh
   14000bdee:	cli    
   14000bdef:	add    BYTE PTR [rcx+rbp*8-0x2],dh
   14000bdf3:	add    BYTE PTR [rsi-0x6aff475e],al
   14000bdf9:	test   eax,0xb99e00bb
   14000bdfe:	(bad)  
   14000bdff:	add    BYTE PTR [rdx-0x6bff2a50],al
   14000be05:	mov    edx,0xc4a100db
   14000be0a:	loopne 0x14000be0c
   14000be0c:	(bad)  
   14000be0d:	jrcxz  0x14000be0d
   14000be0f:	add    BYTE PTR [rdi-0x6cff0114],cl
   14000be15:	out    dx,al
   14000be16:	inc    BYTE PTR [rax]
	...
   14000c11c:	(bad)  
   14000c11d:	(bad)  
   14000c11e:	inc    DWORD PTR [rax]
	...
   14000c128:	add    al,0x0
	...
   14000c136:	add    BYTE PTR [rsp],cl
   14000c139:	(bad)  
	...
   14000c146:	add    BYTE PTR [rdx+rbx*1],cl
	...
   14000c155:	add    BYTE PTR [rax],al
   14000c157:	or     al,0x29
   14000c159:	(bad)  
	...
   14000c166:	add    BYTE PTR [rdx+rbx*1],cl
	...
   14000c175:	add    BYTE PTR [rax],al
   14000c177:	or     al,0x32
   14000c179:	(bad)  
	...
   14000c186:	add    BYTE PTR [rbx+rbp*1],cl
   14000c189:	(bad)  
	...
   14000c196:	add    BYTE PTR [rcx+rsi*1],cl
   14000c199:	(bad)  
	...
   14000c1a6:	adc    esp,DWORD PTR [rip+0x21b28]        # 0x14002dcd4
	...
   14000c1b4:	add    BYTE PTR [rdx+riz*1],dl
   14000c1b7:	and    BYTE PTR es:[rsi],ch
   14000c1ba:	sbb    eax,0x1
   14000c1bf:	add    BYTE PTR [rax],al
   14000c1c1:	add    BYTE PTR [rax],al
   14000c1c3:	add    BYTE PTR [rip+0x3c3d2326],dl        # 0x17c3de4ef
   14000c1c9:	and    DWORD PTR [rbx],edi
   14000c1cb:	(bad)  
   14000c1cc:	or     al,BYTE PTR [rax]
   14000c1ce:	add    BYTE PTR [rax],al
   14000c1d0:	add    BYTE PTR [rax],al
   14000c1d2:	add    BYTE PTR [rax],al
   14000c1d4:	or     eax,0x12121227
   14000c1d9:	adc    dl,BYTE PTR [rdx]
   14000c1db:	sub    eax,0x2
   14000c1e0:	add    BYTE PTR [rax],al
   14000c1e2:	add    BYTE PTR [rax],al
   14000c1e4:	adc    eax,0x82b
   14000c1e9:	add    BYTE PTR [rdi],dl
   14000c1eb:	(bad)  
   14000c1ec:	add    eax,0x0
   14000c1f1:	add    BYTE PTR [rax],al
   14000c1f3:	add    BYTE PTR [rcx],bh
   14000c1f5:	sbb    DWORD PTR [rbx],esi
   14000c1f7:	(bad)  
   14000c1f8:	or     DWORD PTR [rbx],ecx
   14000c1fa:	sub    al,0xf
   14000c1fc:	add    BYTE PTR ss:[rax],al
   14000c1ff:	add    BYTE PTR [rax],al
   14000c201:	add    BYTE PTR [rax],al
   14000c203:	add    BYTE PTR [rax],al
   14000c205:	cmp    BYTE PTR [rcx],bl
   14000c207:	(bad)  
   14000c208:	xor    al,0x2f
   14000c20a:	adc    DWORD PTR [rip+0x0],esi        # 0x14000c210
   14000c210:	add    BYTE PTR [rax],al
   14000c212:	add    BYTE PTR [rax],al
   14000c214:	add    BYTE PTR [rax],al
   14000c216:	cmp    bl,BYTE PTR [rax+rdx*1]
   14000c219:	sbb    BYTE PTR [rdi],dh
   14000c21b:	add    BYTE PTR [rax],al
   14000c21d:	add    BYTE PTR [rax],al
   14000c21f:	add    bh,bh
   14000c221:	jg     0x14000c223
   14000c223:	add    dh,bh
   14000c225:	(bad)  
   14000c226:	add    BYTE PTR [rax],al
   14000c228:	(bad)  
   14000c229:	jg     0x14000c22b
   14000c22b:	add    dh,bh
   14000c22d:	(bad)  
   14000c22e:	add    BYTE PTR [rax],al
   14000c230:	(bad)  
   14000c231:	jg     0x14000c233
   14000c233:	add    dh,bh
   14000c235:	(bad)  
   14000c236:	add    BYTE PTR [rax],al
   14000c238:	(bad)  
   14000c239:	(bad)  
   14000c23a:	add    BYTE PTR [rax],al
   14000c23c:	(bad)  
   14000c23d:	(bad)  
   14000c23e:	add    BYTE PTR [rax],al
   14000c240:	cld    
   14000c241:	(bad)  
   14000c242:	add    BYTE PTR [rax],al
   14000c244:	clc    
   14000c245:	sldt   WORD PTR [rax]
   14000c248:	lock (bad) 
   14000c24a:	add    BYTE PTR [rax],al
   14000c24c:	lock (bad) 
   14000c24e:	add    BYTE PTR [rax],al
   14000c250:	icebp  
   14000c251:	mov    DWORD PTR [rax],0x7f000
   14000c257:	add    al,bh
   14000c259:	sldt   WORD PTR [rax]
   14000c25c:	cld    
   14000c25d:	(bad)  
   14000c25e:	add    BYTE PTR [rax],al
   14000c260:	mov    DWORD PTR [rax+0x4e],edx
   14000c263:	rex.RXB or eax,0xa1a0a
   14000c269:	add    BYTE PTR [rax],al
   14000c26b:	or     eax,0x52444849
   14000c270:	add    BYTE PTR [rax],al
   14000c272:	add    DWORD PTR [rax],eax
   14000c274:	add    BYTE PTR [rax],al
   14000c276:	add    DWORD PTR [rax],eax
   14000c278:	or     BYTE PTR [rsi],al
   14000c27a:	add    BYTE PTR [rax],al
   14000c27c:	add    BYTE PTR [rdx+rsi*2-0x58],bl
   14000c280:	data16 add BYTE PTR [rax],al
   14000c283:	and    BYTE PTR [rax],al
   14000c285:	rex.WB
   14000c286:	rex.R
   14000c287:	push   r12
   14000c289:	js     0x14000c227
   14000c28b:	in     al,dx
   14000c28c:	mov    ebp,0xc91c9477
   14000c291:	jge    0x14000c27a
   14000c293:	stc    
   14000c294:	mov    eax,ecx
   14000c296:	lods   al,BYTE PTR ds:[rsi]
   14000c297:	push   0xffffffffffffffdf
   14000c299:	lea    eax,[rsi+0x30660607]
   14000c29f:	xor    ecx,0xffffffde
   14000c2a2:	rcr    bl,1
   14000c2a4:	(bad)  
   14000c2a5:	nop
   14000c2a6:	rex.RXB sahf 
   14000c2a8:	rex.WRX fiadd DWORD PTR [rdi+0x51]
   14000c2ac:	xchg   esi,eax
   14000c2ad:	sti    
   14000c2ae:	mov    ah,0x77
   14000c2b0:	xchg   edx,eax
   14000c2b1:	outs   dx,BYTE PTR ds:[rsi]
   14000c2b2:	rex.WRXB shr r9b,cl
   14000c2b5:	je     0x14000c26e
   14000c2b7:	stos   DWORD PTR es:[rdi],eax
   14000c2b8:	(bad)  
   14000c2b9:	jae    0x14000c335
   14000c2bb:	shl    bl,cl
   14000c2bd:	(bad)  
   14000c2be:	mov    ss,WORD PTR [rdx-0x52c25a8a]
   14000c2c4:	mov    eax,0x44ad4f2b
   14000c2c9:	sub    eax,0x894f448d
   14000c2ce:	pop    rsi
   14000c2cf:	hlt    
   14000c2d0:	in     al,0x60
   14000c2d2:	mov    esp,0xde066607
   14000c2d7:	xor    al,0x5c
   14000c2d9:	add    ebp,DWORD PTR [rax-0x21]
   14000c2dc:	(bad)  
   14000c2dd:	in     eax,0x2b
   14000c2df:	xor    esp,edx
   14000c2e1:	dec    BYTE PTR [rax-0x13373378]
   14000c2e7:	(bad)  
   14000c2e8:	(bad)  
   14000c2e9:	(bad)  
   14000c2ea:	movabs ds:0x74accca890fbf27b,eax
   14000c2f3:	push   rbp
   14000c2f4:	pop    rbp
   14000c2f5:	mov    edi,0x2fc6cfef
   14000c2fa:	movabs al,ds:0x5028140a05028140
   14000c303:	movabs al,ds:0x5028140a05028140
   14000c30c:	movabs al,ds:0x5028140a05028140
   14000c315:	movabs al,ds:0x7e95e20cab028140
   14000c31e:	add    BYTE PTR [rdx],0x2f
   14000c321:	cmp    bl,BYTE PTR [rsi-0x56]
   14000c324:	mov    edi,0xae897ea9
   14000c329:	pop    rbx
   14000c32a:	loopne 0x14000c341
   14000c32c:	rex.R
   14000c32d:	add    BYTE PTR [r11],bpl
   14000c330:	(bad)  
   14000c331:	scas   eax,DWORD PTR es:[rdi]
   14000c332:	in     al,0xdf
   14000c334:	mov    al,0x20
   14000c336:	test   DWORD PTR [rip+0x5600828e],edx        # 0x1960145ca
   14000c33c:	(bad)  
   14000c33d:	div    BYTE PTR cs:[rdi]
   14000c340:	mov    ebx,0xb769bf94
   14000c345:	movsxd ebp,DWORD PTR [rsi]
   14000c347:	es int3 
   14000c349:	(bad)  
   14000c34a:	hlt    
   14000c34b:	std    
   14000c34c:	add    dl,BYTE PTR [rdi+0x58020a21]
   14000c352:	sbb    DWORD PTR [rax-0x12],ebx
   14000c355:	out    dx,eax
   14000c356:	xchg   esp,eax
   14000c357:	jg     0x14000c3a8
   14000c359:	sub    al,0xf3
   14000c35b:	faddp  st(5),st
   14000c35d:	scas   al,BYTE PTR es:[rdi]
   14000c35e:	(bad)  
   14000c35f:	rex.WRB mov r13b,r14b
   14000c362:	xor    ch,bh
   14000c364:	(bad)  
   14000c365:	and    eax,0xac1905f4
   14000c36a:	adc    BYTE PTR [rsp+rax*1],dl
   14000c36d:	jo     0x14000c3e8
   14000c36f:	jrcxz  0x14000c3d3
   14000c371:	add    bl,ah
   14000c373:	ins    DWORD PTR es:[rdi],dx
   14000c374:	pop    rbp
   14000c375:	js     0x14000c362
   14000c377:	repnz and dl,bh
   14000c37a:	pop    rdx
   14000c37b:	or     cl,BYTE PTR [rsi-0x80]
   14000c37e:	push   rbp
   14000c37f:	outs   dx,BYTE PTR ds:[rsi]
   14000c380:	lahf   
   14000c381:	(bad)  
   14000c382:	mov    ebp,0x5c391cbf
   14000c387:	ins    BYTE PTR es:[rdi],dx
   14000c388:	jg     0x14000c30b
   14000c38a:	retf   
   14000c38b:	add    BYTE PTR [rip+0xffffffffb87e5c01],al        # 0xf87f1f92
   14000c391:	push   rsp
   14000c392:	movabs eax,ds:0xd76ebeccb975b917
   14000c39b:	cmc    
   14000c39c:	mov    bh,0xbb
   14000c39e:	imul   esi,esi,0x4f7b8b6e
   14000c3a4:	jne    0x14000c37f
   14000c3a6:	xlat   BYTE PTR ds:[rbx]
   14000c3a7:	in     eax,dx
   14000c3a8:	xor    eax,0x9702cd7f
   14000c3ad:	sbb    DWORD PTR [rdx],ecx
   14000c3af:	add    bh,BYTE PTR [rax-0x1f634f84]
   14000c3b5:	out    0x85,eax
   14000c3b7:	ds (bad) 
   14000c3b9:	lock outs dx,BYTE PTR ds:[rsi]
   14000c3bb:	pop    rbx
   14000c3bc:	jp     0x14000c3b9
   14000c3be:	mov    ebx,0x1f752ebd
   14000c3c3:	(bad)  
   14000c3c4:	pop    rdi
   14000c3c5:	repz jmp 0x14000c3f6
   14000c3c8:	scas   eax,DWORD PTR es:[rdi]
   14000c3c9:	xor    DWORD PTR [rbx-0x9245ff7],ecx
   14000c3cf:	repz jno 0x14000c3ed
   14000c3d2:	or     bh,BYTE PTR [rdx+rax*1-0xd1ff7d8]
   14000c3d9:	rcl    BYTE PTR [rdx-0x26],0x59
   14000c3dd:	rcr    BYTE PTR [rbp-0x18],1
   14000c3e0:	outs   dx,BYTE PTR gs:[rsi]
   14000c3e2:	or     DWORD PTR [rax-0x181c820],eax
   14000c3e8:	or     eax,0x36daaebb
   14000c3ed:	jp     0x14000c3c4
   14000c3ef:	lock (bad) 
   14000c3f1:	jns    0x14000c44a
   14000c3f3:	sub    DWORD PTR [rsi+rsi*4],ecx
   14000c3f6:	add    eax,0xa52ad881
   14000c3fb:	fsubr  DWORD PTR [rax]
   14000c3fd:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000c3fe:	pop    rax
   14000c3ff:	sub    eax,DWORD PTR [rip+0x310823]        # 0x14031cc28
   14000c405:	mov    edx,0xad422d17
   14000c40a:	jne    0x14000c3b0
   14000c40c:	mov    ch,0x6a
   14000c40e:	sub    al,BYTE PTR [rbp+0x3d]
   14000c411:	push   rsi
   14000c412:	push   0x3e
   14000c414:	push   rsi
   14000c415:	push   0xffffffffffffffa6
   14000c417:	rcl    DWORD PTR [rcx-0x6d],cl
   14000c41a:	in     eax,dx
   14000c41b:	rex.WRX jl 0x14000c3dc
   14000c41e:	fsubp  st(4),st
   14000c420:	mov    edi,cs
   14000c422:	(bad)  
   14000c423:	(bad)  
   14000c424:	rex.WRXB (bad) 
   14000c426:	cmp    eax,0xbfec7b39
   14000c42b:	jg     0x14000c42b
   14000c42d:	jmp    0xcf01dcc5
   14000c432:	in     eax,dx
   14000c433:	movabs ds:0xba0248e004fabcba,al
   14000c43c:	pop    rbx
   14000c43d:	or     DWORD PTR [rcx+rsi*4],ebp
   14000c440:	pop    rbp
   14000c441:	loopne 0x14000c458
   14000c443:	rex
   14000c444:	add    BYTE PTR [r15-0xfbad1d4],bpl
   14000c44b:	jge    0x14000c3fa
   14000c44d:	(bad)  
   14000c44e:	loopne 0x14000c459
   14000c450:	cld    
   14000c451:	(bad)  
   14000c452:	jg     0x14000c43f
   14000c454:	jg     0x14000c4ce
   14000c456:	int    0x15
   14000c458:	fwait
   14000c459:	xchg   BYTE PTR [rsi-0x11],ch
   14000c45c:	in     eax,dx
   14000c45d:	or     eax,0x79020d6f
   14000c462:	shl    DWORD PTR [rsi+0xdd7a30d],cl
   14000c468:	cmc    
   14000c469:	not    DWORD PTR [rdi+0x5d192902]
   14000c46f:	xor    ecx,DWORD PTR [rsi+rcx*4+0xc8dd663]
   14000c476:	or     BYTE PTR [rsi+0x3ba0c541],0xe6
   14000c47d:	(bad)  
   14000c47e:	sub    eax,0x8115063a
   14000c483:	mov    ch,BYTE PTR [rax+0x77]
   14000c486:	cmp    cl,ah
   14000c488:	push   rsi
   14000c489:	fwait
   14000c48a:	je     0x14000c4c6
   14000c48c:	xor    ebx,esi
   14000c48e:	cmc    
   14000c48f:	(bad)  
   14000c490:	mov    ch,0x66
   14000c492:	int3   
   14000c493:	pop    rsp
   14000c494:	and    ebp,edx
   14000c496:	rex.WR push rsp
   14000c498:	cmp    al,BYTE PTR [rdi-0x65]
   14000c49b:	in     eax,dx
   14000c49c:	call   0x1b9d779f1
   14000c4a1:	test   ah,0xf9
   14000c4a4:	retf   0xffbe
   14000c4a7:	cld    
   14000c4a8:	loope  0x14000c4f1
   14000c4aa:	lahf   
   14000c4ab:	add    BYTE PTR [rdx],ah
   14000c4ad:	movabs al,ds:0xa4c58a2fe0a4a43
   14000c4b6:	add    eax,0x28a65c11
   14000c4bb:	or     al,ah
   14000c4bd:	xchg   ebp,eax
   14000c4be:	ret    
   14000c4bf:	jb     0x14000c53f
   14000c4c1:	mov    ebp,0x477613
   14000c4c6:	add    DWORD PTR [rax],edx
   14000c4c8:	mov    esi,0xf572deb
   14000c4cd:	std    
   14000c4ce:	(bad)  
   14000c4cf:	paddusw mm7,mm4
   14000c4d2:	(bad)  
   14000c4d3:	shl    ecx,1
   14000c4d5:	fidiv  WORD PTR [rdi]
   14000c4d7:	(bad)  
   14000c4d8:	(bad)  
   14000c4d9:	idiv   BYTE PTR [rdi-0xa392c8f]
   14000c4df:	mov    bh,0x8e
   14000c4e1:	scas   al,BYTE PTR es:[rdi]
   14000c4e2:	pop    rcx
   14000c4e3:	iret   
   14000c4e4:	enter  0x3ac8,0x6
   14000c4e8:	(bad)  
   14000c4e9:	cli    
   14000c4ea:	lea    eax,[rax+0x6b]
   14000c4ed:	ins    DWORD PTR es:[rdi],dx
   14000c4ee:	test   dl,bl
   14000c4f0:	or     DWORD PTR [rdi+0x75f04656],esi
   14000c4f6:	or     al,0x3a
   14000c4f8:	add    ah,ch
   14000c4fa:	rex.W and BYTE PTR [rdx+0x24251024],sil
   14000c501:	nop
   14000c502:	out    dx,al
   14000c503:	push   rbx
   14000c504:	cmp    ax,0x2436
   14000c508:	jno    0x14000c578
   14000c50a:	mov    esi,0xc3a544cd
   14000c50f:	rex.R push rbp
   14000c511:	jno    0x14000c58d
   14000c513:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000c514:	repz je 0x14000c4ba
   14000c517:	(bad)  
   14000c518:	jns    0x14000c57c
   14000c51a:	(bad)  
   14000c51b:	mov    edx,0xbfa7c8fe
   14000c520:	jbe    0x14000c50a
   14000c522:	add    DWORD PTR [rbx+0x402ba7c7],0xb10a431b
   14000c52c:	idiv   DWORD PTR [rdx-0x34ffe6e4]
   14000c532:	mov    edx,0x265e0509
   14000c537:	adc    al,0x4
   14000c539:	lock repnz movabs ds:0x87da6fbe0bcfd69b,eax
   14000c544:	(bad)  
   14000c545:	cli    
   14000c546:	mov    ebp,0xe6e37a1f
   14000c54b:	or     eax,0xd0cf783
   14000c550:	or     eax,0xadd6c0fe
   14000c555:	fld    TBYTE PTR [rdi+0x59]
   14000c558:	mov    edi,0xadd60af1
   14000c55d:	fld    TBYTE PTR [rsi+rcx*8-0x2a]
   14000c561:	retf   0xe25b
   14000c564:	je     0x14000c543
   14000c566:	or     DWORD PTR [rbx+0x763a0323],esi
   14000c56c:	cmp    eax,0x7b108432
   14000c571:	rex.X scas eax,DWORD PTR es:[rdi]
   14000c573:	in     eax,dx
   14000c574:	mov    cl,0x71
   14000c576:	(bad)  
   14000c577:	pop    rbp
   14000c578:	ja     0x14000c561
   14000c57a:	pop    rdx
   14000c57b:	adc    al,BYTE PTR [rax+0x47]
   14000c57e:	adc    BYTE PTR [rbx],ch
   14000c580:	pop    rdx
   14000c581:	popf   
   14000c582:	cwde   
   14000c583:	mov    cl,0x99
   14000c585:	mov    BYTE PTR [rbx-0x564e3aeb],dh
   14000c58b:	(bad)  
   14000c58c:	mov    bl,0xd5
   14000c58e:	jp     0x14000c577
   14000c590:	rcl    DWORD PTR [rbx],0x67
   14000c593:	out    0xf6,al
   14000c595:	cld    
   14000c596:	jmp    0x158796462
   14000c59b:	push   0x2c651b99
   14000c5a0:	test   BYTE PTR [rax+0xe055b8b],cl
   14000c5a6:	add    eax,0x28ccbc11
   14000c5ab:	or     al,ah
   14000c5ad:	in     eax,0x45
   14000c5af:	pop    rsi
   14000c5b0:	jmp    0x14000c629
   14000c5b2:	sar    eax,cl
   14000c5b4:	add    DWORD PTR [rax],edx
   14000c5b6:	fdiv   QWORD PTR [rbp-0xd]
   14000c5b9:	(bad)  
   14000c5ba:	sbb    DWORD PTR [rdi-0x3],0xc3f8df5f
   14000c5c1:	movabs ds:0xbbf76bb1deef3d23,eax
   14000c5ca:	(bad)  
   14000c5cb:	outs   dx,DWORD PTR ds:[rsi]
   14000c5cc:	mov    ebp,0xfaed77ba
   14000c5d1:	sub    eax,DWORD PTR [rax+0x8]
   14000c5d4:	movabs ds:0xacced7e6a902dde5,eax
   14000c5dd:	div    DWORD PTR [rax+rdi*4-0x28297272]
   14000c5e4:	(bad)  
   14000c5e5:	add    eax,0xda088ed0
   14000c5ea:	pop    rcx
   14000c5eb:	adc    dl,BYTE PTR [rax-0x63]
   14000c5ee:	fsub   st(3),st
   14000c5f0:	shl    BYTE PTR [rax+rax*4],cl
   14000c5f3:	ss mov dl,0xdc
   14000c5f6:	push   0x47
   14000c5f8:	pushf  
   14000c5f9:	cwde   
   14000c5fa:	mov    ds,eax
   14000c5fc:	(bad)  
   14000c5fd:	movabs eax,ds:0xf5b3533da367a71a
   14000c606:	out    dx,eax
   14000c607:	jl     0x14000c601
   14000c609:	mov    bl,0x4f
   14000c60b:	jg     0x14000c670
   14000c60d:	jl     0x14000c5b1
   14000c60f:	mov    edx,0x8e064a40
   14000c614:	adc    BYTE PTR [rcx+rdx*1],bl
   14000c617:	in     al,0x3
   14000c619:	mov    DWORD PTR [rax+0x61],eax
   14000c61c:	or     eax,0x82852bc
   14000c621:	loopne 0x14000c608
   14000c623:	shl    DWORD PTR [rdx-0x1a],0xbe
   14000c627:	shl    esp,cl
   14000c629:	adc    cl,BYTE PTR [rax]
   14000c62b:	jg     0x14000c61d
   14000c62d:	in     eax,dx
   14000c62e:	xlat   BYTE PTR ds:[rbx]
   14000c62f:	mov    ?,esp
   14000c631:	in     al,dx
   14000c632:	(bad)  
   14000c633:	fdivp  st(6),st
   14000c635:	fdivrp st(5),st
   14000c637:	jmp    0x14000c610
   14000c639:	mov    esp,0xabf6eb77
   14000c63e:	fidiv  WORD PTR [rdx-0x16a4650d]
   14000c644:	jmp    0x117101262
   14000c649:	ret    0x66ac
   14000c64c:	rex.W
   14000c64d:	rex
   14000c64e:	addr32 sub eax,0xc9f82700
   14000c654:	mov    edx,0x63af8d5
   14000c659:	(bad)  
   14000c65b:	pop    rsp
   14000c65c:	xor    DWORD PTR [rsi+0x278ef015],0x7fba51f8
   14000c666:	adc    DWORD PTR [rcx],ecx
   14000c668:	fsubr  DWORD PTR [rbx-0x3c]
   14000c66b:	xchg   esi,eax
   14000c66c:	jo     0x14000c6be
   14000c66e:	xchg   esi,eax
   14000c66f:	rex.R adc al,0x67
   14000c672:	out    0x63,al
   14000c674:	mov    cs,WORD PTR [rbx+rbp*1-0x62]
   14000c678:	ds (bad) 
   14000c67a:	(bad)  
   14000c67b:	xor    al,0x31
   14000c67d:	push   rbx
   14000c67e:	jmp    rsi
   14000c680:	(bad)  
   14000c681:	mov    edi,0xc7cbe072
   14000c686:	rex.WRX int 0xcd
   14000c689:	add    DWORD PTR [rbp-0x74],ecx
   14000c68c:	mov    esp,eax
   14000c68e:	mov    ebx,0x8782dd09
   14000c693:	add    eax,0x2802bc09
   14000c698:	or     al,ah
   14000c69a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000c69b:	mov    ebp,0x4204beb4
   14000c6a1:	and    ah,bh
   14000c6a3:	hlt    
   14000c6a4:	lahf   
   14000c6a5:	(bad)  
   14000c6a6:	in     al,0x4f
   14000c6a8:	ins    BYTE PTR es:[rdi],dx
   14000c6a9:	fidiv  DWORD PTR [rax+0x5d7727e6]
   14000c6af:	ja     0x14000c67c
   14000c6b1:	(bad)  [rdi-0x5f6e4712]
   14000c6b7:	fadd   QWORD PTR [rbx]
   14000c6b9:	cmp    bl,BYTE PTR [rdi+0x3c4613cd]
   14000c6bf:	xor    ah,BYTE PTR [rax+riz*4]
   14000c6c2:	jb     0x14000c64f
   14000c6c4:	push   rbp
   14000c6c5:	mov    dh,0x5a
   14000c6c7:	jns    0x14000c747
   14000c6c9:	jle    0x14000c6a6
   14000c6cb:	or     BYTE PTR [rcx-0x24],bh
   14000c6ce:	xor    edx,ebx
   14000c6d0:	pop    rdi
   14000c6d1:	cmp    DWORD PTR [rbx-0x60],ebp
   14000c6d4:	or     DWORD PTR gs:[rax],esp
   14000c6d7:	rex.WX fisttp WORD PTR [rdi+0x5e]
   14000c6db:	popf   
   14000c6dc:	mov    esp,DWORD PTR [rax-0x35374134]
   14000c6e2:	outs   dx,BYTE PTR ds:[rsi]
   14000c6e3:	adc    al,BYTE PTR [rsp+rdx*8-0x57]
   14000c6e7:	(bad)
   14000c6ea:	cmp    al,0x57
   14000c6ec:	sbb    cl,BYTE PTR [rdx-0x61d530b9]
   14000c6f2:	sbb    cl,BYTE PTR [rdi+0x593f381e]
   14000c6f8:	sti    
   14000c6f9:	out    0x3f,eax
   14000c6fb:	cli    
   14000c6fc:	fild   DWORD PTR [rdi-0x42]
   14000c6ff:	or     ah,dl
   14000c701:	mov    r8,rax
   14000c704:	pop    rcx
   14000c705:	add    eax,0x61424cf9
   14000c70a:	or     eax,0x82802bc
   14000c70f:	loopne 0x14000c6b6
   14000c711:	vcmpss xmm11,xmm5,DWORD PTR [rdi-0x2d7e0dbc],0x87
   14000c71a:	jmp    rax
   14000c71c:	cmp    eax,0x69badd6f
   14000c721:	clc    
   14000c722:	jge    0x14000c6df
   14000c724:	scas   al,BYTE PTR es:[rdi]
   14000c725:	mov    ebx,0xbeae27e9
   14000c72a:	icebp  
   14000c72b:	jne    0x14000c74f
   14000c72d:	sub    ch,dh
   14000c72f:	adc    BYTE PTR [rdx],0x20
   14000c732:	fsub   QWORD PTR [rcx-0x22]
   14000c735:	imul   ebx,edx,0x59c9f5af
   14000c73b:	add    DWORD PTR [rdx+0x43],ecx
   14000c73e:	rol    BYTE PTR [rdi],1
   14000c740:	bswap  r8d
   14000c743:	adc    cl,al
   14000c745:	mov    dl,0x39
   14000c747:	pop    rdi
   14000c748:	(bad)  
   14000c749:	or     BYTE PTR [rax+rax*2],0xd8
   14000c74d:	imul   ecx,DWORD PTR [rcx+0x4ef67f2e],0x5
   14000c754:	cmp    dh,bl
   14000c756:	sar    BYTE PTR [rax-0x57965300],1
   14000c75c:	popf   
   14000c75d:	cmp    ecx,0xe0559e7d
   14000c763:	add    al,BYTE PTR [rbx+0x4a324a51]
   14000c769:	jne    0x14000c790
   14000c76b:	add    DWORD PTR [rdx+riz*8-0x119dabe],esi
   14000c772:	shr    DWORD PTR [rax-0x20c5e83d],cl
   14000c778:	cmp    BYTE PTR [rsi+0x6a],dh
   14000c77b:	out    dx,al
   14000c77c:	or     edi,DWORD PTR [rdi-0xd]
   14000c77f:	cdq    
   14000c780:	mov    ebp,0x22593f7
   14000c785:	adc    DWORD PTR [eax],ebp
   14000c788:	sti    
   14000c789:	jp     0x14000c734
   14000c78b:	jne    0x14000c791
   14000c78d:	add    eax,0x414445e
   14000c792:	lock shl BYTE PTR [rcx-0x33980f65],cl
   14000c799:	std    
   14000c79a:	jg     0x14000c797
   14000c79c:	xor    ebp,DWORD PTR [rdi-0x28]
   14000c79f:	cld    
   14000c7a0:	mov    ?,WORD PTR [rdi]
   14000c7a2:	pop    rbp
   14000c7a3:	cmc    
   14000c7a4:	mov    bl,0x3b
   14000c7a6:	scas   al,BYTE PTR es:[rdi]
   14000c7a7:	(bad)  
   14000c7a9:	jae    0x14000c766
   14000c7ab:	outs   dx,DWORD PTR ds:[rsi]
   14000c7ac:	jns    0x14000c78b
   14000c7ae:	(bad)  
   14000c7af:	(bad)  
   14000c7b0:	movabs eax,ds:0x70f6eb99c06318ad
   14000c7b9:	and    ebp,ecx
   14000c7bb:	mov    edx,0xac0a9770
   14000c7c0:	sub    esp,DWORD PTR [rax-0x7f726bbf]
   14000c7c6:	(bad)  
   14000c7c7:	rol    BYTE PTR gs:[rcx+0x1011f72d],1
   14000c7ce:	sbb    eax,DWORD PTR [rdx]
   14000c7d0:	rol    DWORD PTR [rdx+0x20],1
   14000c7d3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c7d4:	test   rdi,r15
   14000c7d7:	mov    ecx,0xe60e7ea2
   14000c7dc:	sahf   
   14000c7dd:	xchg   cl,ch
   14000c7df:	(bad)  
   14000c7e0:	(bad)  
   14000c7e1:	loope  0x14000c85b
   14000c7e3:	cs es (bad) 
   14000c7e6:	test   esi,ebx
   14000c7e8:	or     DWORD PTR [rsi-0x72],edi
   14000c7eb:	add    al,0x50
   14000c7ed:	mov    ah,BYTE PTR [rbx]
   14000c7ef:	push   rbx
   14000c7f0:	xor    edi,esi
   14000c7f2:	mov    gs,ecx
   14000c7f4:	leave  
   14000c7f5:	adc    edx,DWORD PTR [rbx]
   14000c7f7:	int    0x2f
   14000c7f9:	jl     0x14000c7f8
   14000c7fb:	mov    esi,0xec7e9f13
   14000c800:	jmp    0x146812ff8
   14000c805:	pop    rcx
   14000c806:	mov    eax,eax
   14000c808:	movhps xmm2,QWORD PTR [rsi]
   14000c80b:	and    al,0xf0
   14000c80d:	xor    ah,BYTE PTR [rdx+0x6978020]
   14000c813:	stc    
   14000c814:	or     bh,BYTE PTR [rsi]
   14000c816:	(bad)  
   14000c817:	(bad)  
   14000c818:	(bad)  
   14000c819:	add    BYTE PTR [rbp-0x702e0171],ah
   14000c81f:	mov    ebp,0xf5f6e773
   14000c824:	mov    edi,0xafadf570
   14000c829:	mov    ebp,0x6eab8ae7
   14000c82e:	add    edx,ecx
   14000c830:	imul   esi,DWORD PTR [rip+0xffffffffd43bc76a],0x9        # 0x1143c8fa1
   14000c837:	mov    esi,0x44240a4d
   14000c83c:	rol    BYTE PTR [rbx],1
   14000c83e:	mov    r15d,0x1a5af4d1
   14000c844:	rex.XB
   14000c845:	rex (bad) 
   14000c847:	rex.WR je 0x14000c85b
   14000c84a:	movabs ds:0x2047a96d0161b295,eax
   14000c853:	(bad)  
   14000c854:	adc    BYTE PTR [rcx],ah
   14000c856:	retf   
   14000c857:	and    BYTE PTR [rbx],al
   14000c859:	test   al,dh
   14000c85b:	lods   eax,DWORD PTR ds:[rsi]
   14000c85c:	mov    bh,ah
   14000c85e:	cmp    BYTE PTR [rax-0x7fe1e8ff],0xf3
   14000c865:	jnp    0x14000c807
   14000c867:	jb     0x14000c875
   14000c869:	mov    BYTE PTR [rdi],dl
   14000c86b:	mov    DWORD PTR [rdx+rdi*4],0x15b34090
   14000c872:	repz rcr BYTE PTR [rcx],0xcd
   14000c876:	add    esp,DWORD PTR [rbx-0x2f]
   14000c879:	add    eax,edi
   14000c87b:	rex.WRXB iretq 
   14000c87d:	jge    0x14000c875
   14000c87f:	out    dx,eax
   14000c880:	ds div esp
   14000c883:	test   DWORD PTR [rax+0x7022c62a],0xc58740d6
   14000c88d:	cs rex.B
   14000c88f:	add    bpl,BYTE PTR [r15]
   14000c892:	xor    DWORD PTR [rdx],ecx
   14000c894:	add    bh,BYTE PTR [rax-0xf]
   14000c897:	mov    cl,0x54
   14000c899:	xor    DWORD PTR [rdi+0x17f2fe13],ecx
   14000c89f:	ds hlt 
   14000c8a1:	sar    edi,cl
   14000c8a3:	sti    
   14000c8a4:	adc    eax,0xd2ffb73b
   14000c8a9:	rex.WRB scas rax,QWORD PTR es:[rdi]
   14000c8ab:	jg     0x14000c874
   14000c8ad:	(bad)  
   14000c8ae:	fdivp  st(6),st
   14000c8b0:	rex.WRB
   14000c8b1:	rex.RX mov al,0x55
   14000c8b4:	rcr    DWORD PTR [rbp+riz*4-0x58bfa60d],cl
   14000c8bb:	mov    ebp,0x1021c825
   14000c8c0:	add    esp,esi
   14000c8c2:	xchg   edx,eax
   14000c8c3:	rex.X add bl,BYTE PTR [rdx]
   14000c8c6:	lods   eax,DWORD PTR ds:[rsi]
   14000c8c7:	and    dh,BYTE PTR [rsp+rbx*1+0x25]
   14000c8cb:	sub    DWORD PTR [rbx*1+0x5ad51b7],edi
   14000c8d2:	je     0x14000c887
   14000c8d4:	mov    ch,BYTE PTR [rdx+0x56]
   14000c8d7:	mov    DWORD PTR [rbx+0xb],ebx
   14000c8da:	(bad)  
   14000c8db:	int    0x69
   14000c8dd:	loop   0x14000c8ad
   14000c8df:	sbb    al,0xb4
   14000c8e1:	jmp    0x14000c957
   14000c8e3:	cmp    ch,BYTE PTR [rip+0x2b41d474]        # 0x16b429d5d
   14000c8e9:	(bad)  
   14000c8ea:	out    dx,al
   14000c8eb:	(bad)  
   14000c8ec:	test   al,0x38
   14000c8ee:	rex.RX
   14000c8ef:	rex.RXB mov r11b,BYTE PTR [r14+0x4a237775]
   14000c8f6:	mov    ebp,0x91b8eff4
   14000c8fb:	jo     0x14000c8ca
   14000c8fd:	(bad)  
   14000c8fe:	retf   0x366b
   14000c901:	jmp    FWORD PTR cs:[rcx]
   14000c904:	stos   DWORD PTR es:[rdi],eax
   14000c905:	addr32 loopne 0x14000c8d4
   14000c908:	xlat   BYTE PTR ds:[rbx]
   14000c909:	loopne 0x14000c907
   14000c90b:	ja     0x14000c960
   14000c90d:	(bad)  
   14000c90e:	(bad)  
   14000c90f:	sbb    DWORD PTR [rdx],edx
   14000c911:	rex sub esi,eax
   14000c914:	movsxd di,DWORD PTR [rsi+0x1c4f547e]
   14000c91b:	ds pop rbx
   14000c91d:	(bad)  
   14000c91e:	in     al,dx
   14000c91f:	(bad)  
   14000c920:	(bad)  
   14000c921:	frstor [rbx+0x182a051f]
   14000c927:	imul   esp,DWORD PTR [rax+0x2e044a41],0x48
   14000c92e:	call   0x17dd0ce65
   14000c933:	ds push rax
   14000c935:	loopne 0x14000c97c
   14000c937:	rex
   14000c938:	add    BYTE PTR [r15],bpl
   14000c93b:	cs xchg esi,eax
   14000c93d:	sub    ch,al
   14000c93f:	or     DWORD PTR [rax-0xa800810],eax
   14000c945:	popf   
   14000c946:	mov    ebx,0xeb65beee
   14000c94b:	(bad)  
   14000c94c:	pop    rdi
   14000c94d:	jge    0x14000c93a
   14000c94f:	(bad)  
   14000c951:	out    0xea,al
   14000c953:	fcmovnu st,st(6)
   14000c955:	or     al,0xf4
   14000c957:	fwait
   14000c958:	loopne 0x14000c8f6
   14000c95a:	out    dx,al
   14000c95b:	nop
   14000c95c:	test   eax,0xbe19d5ec
   14000c961:	and    BYTE PTR [rax+0x10],0x44
   14000c965:	mov    edi,0x3a1400b5
   14000c96a:	ss ds mov bh,0x56
   14000c96e:	sub    eax,0xfaa8db88
   14000c973:	adc    al,0xaa
   14000c975:	jbe    0x14000c8f8
   14000c977:	mov    eax,0xfa688a72
   14000c97c:	or     BYTE PTR [rdx+0x61],ch
   14000c97f:	or     dl,ch
   14000c981:	lods   al,BYTE PTR ds:[rsi]
   14000c982:	movabs eax,ds:0x51556a8ebb546dda
   14000c98b:	int    0x5
   14000c98d:	push   rsp
   14000c98e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000c98f:	lea    ebp,[rsi+0x47]
   14000c992:	sub    BYTE PTR [rbp+0x2b46b1d0],ah
   14000c998:	lea    ecx,[rdx-0x4bf5d24b]
   14000c99e:	jmp    0x14000c931
   14000c9a0:	rex.X sub DWORD PTR [rbp+0x794b5fec],ecx
   14000c9a7:	xlat   BYTE PTR ds:[rbx]
   14000c9a8:	popf   
   14000c9a9:	or     al,0x5c
   14000c9ab:	cmc    
   14000c9ac:	es (bad) 
   14000c9ae:	fdivr  st(2),st
   14000c9b0:	ss jp  0x14000c96a
   14000c9b3:	pop    rbp
   14000c9b4:	(bad)  
   14000c9b6:	adc    esi,DWORD PTR [rdi+0x1a]
   14000c9b9:	jo     0x14000c9b1
   14000c9bb:	imul   esi,DWORD PTR [rax-0x16],0xffffffcb
   14000c9bf:	shr    BYTE PTR [rsi-0x65fb6ba4],1
   14000c9c5:	sbb    eax,0x2b0f57c5
   14000c9ca:	(bad)  
   14000c9cb:	cmp    ebx,ecx
   14000c9cd:	cli    
   14000c9ce:	ret    0x8fbd
   14000c9d1:	sahf   
   14000c9d2:	stc    
   14000c9d3:	fdivr  st,st(5)
   14000c9d5:	rex.WRXB pushf 
   14000c9d7:	cmp    DWORD PTR [rdx],ecx
   14000c9d9:	sub    al,0x60
   14000c9db:	pop    rsp
   14000c9dc:	(bad)  
   14000c9dd:	es imul ebx,edx,0x14096f30
   14000c9e4:	and    al,0xf0
   14000c9e6:	adc    ah,BYTE PTR [rax+0xf178020]
   14000c9ec:	retf   
   14000c9ed:	or     DWORD PTR [rdi-0x17],edi
   14000c9f0:	outs   dx,DWORD PTR ds:[rsi]
   14000c9f1:	jmp    rax
   14000c9f3:	mov    ebp,0xeae6bfaf
   14000c9f8:	sub    eax,0xebfd72bf
   14000c9fd:	inc    ebp
   14000c9ff:	mov    ebx,0x9bb6c36
   14000ca04:	push   rsp
   14000ca05:	adc    BYTE PTR [rcx+0x7c],0xda
   14000ca09:	add    al,0xfc
   14000ca0b:	mov    ah,0x67
   14000ca0d:	loop   0x14000ca32
   14000ca0f:	adc    DWORD PTR [rdx],0x6041c8
   14000ca15:	adc    edx,DWORD PTR [rdi]
   14000ca17:	push   rax
   14000ca18:	rex.RX shr DWORD PTR [rbx-0x5e91c5ca],cl
   14000ca1f:	push   0x17
   14000ca21:	push   rax
   14000ca22:	xchg   ebp,eax
   14000ca23:	push   rbx
   14000ca24:	rex.R ror edi,cl
   14000ca27:	movabs ds:0xacd5067d7124f67,al
   14000ca30:	mov    edx,0xeab5415d
   14000ca35:	call   0x14a461062
   14000ca3a:	lods   eax,DWORD PTR ds:[rsi]
   14000ca3b:	adc    al,0x3a
   14000ca3d:	push   rsi
   14000ca3e:	ss rex.B (bad) 
   14000ca41:	test   bl,bl
   14000ca43:	or     BYTE PTR [rdi],bh
   14000ca45:	test   al,0x84
   14000ca47:	add    al,0x3c
   14000ca49:	add    dh,BYTE PTR [rax+0x4694a084]
   14000ca4f:	ja     0x14000ca3d
   14000ca51:	jno    0x14000ca9d
   14000ca53:	push   rbx
   14000ca54:	pop    rdx
   14000ca55:	mov    edi,0xde1ba18b
   14000ca5a:	int3   
   14000ca5b:	xchg   BYTE PTR [rbx+0x7e],bh
   14000ca5e:	xchg   BYTE PTR [rsi-0x1d028e3],bh
   14000ca64:	hlt    
   14000ca65:	int    0x49
   14000ca67:	cmp    cl,dh
   14000ca69:	cmp    DWORD PTR [rax],edi
   14000ca6b:	sti    
   14000ca6c:	lods   eax,DWORD PTR ds:[rsi]
   14000ca6d:	mov    edx,DWORD PTR [rdx+0x7bdcc400]
   14000ca73:	pop    rsp
   14000ca74:	icebp  
   14000ca75:	lea    esp,[rbx]
   14000ca77:	rol    DWORD PTR [rbx],1
   14000ca79:	iret   
   14000ca7a:	(bad)  
   14000ca7b:	cdq    
   14000ca7c:	cli    
   14000ca7d:	clc    
   14000ca7e:	(bad)  
   14000ca7f:	jge    0x14000ca74
   14000ca81:	lock ret 
   14000ca83:	sbb    BYTE PTR [rdi+0x24a46a0],dl
   14000ca89:	jle    0x14000ca31
   14000ca8b:	movabs al,ds:0xfd2bc108978120
   14000ca94:	stos   DWORD PTR es:[rdi],eax
   14000ca95:	add    al,0xdd
   14000ca97:	test   BYTE PTR [rdi],bh
   14000ca99:	(bad)  
   14000ca9a:	or     bh,bh
   14000ca9c:	(bad)  
   14000ca9d:	(bad)  
   14000ca9e:	jmp    0x14000caef
   14000caa0:	mov    esi,0x8dced77b
   14000caa5:	mov    edi,0xfc0fe77d
   14000caaa:	lock pop rbx
   14000caac:	xlat   BYTE PTR ds:[rbx]
   14000caad:	ins    BYTE PTR es:[rdi],dx
   14000caae:	mov    esp,0x68ba08d6
   14000cab3:	fnstenv [rsi+rbx*4+0x67]
   14000cab7:	loop   0x14000caf4
   14000cab9:	jae    0x14000cb1a
   14000cabb:	(bad)  
   14000cabc:	(bad)  
   14000cabd:	sbb    BYTE PTR [rcx],al
   14000cabf:	retf   0x5846
   14000cac2:	jrcxz  0x14000cad2
   14000cac4:	cmp    ch,BYTE PTR [rdx-0x3bcc645f]
   14000caca:	rol    DWORD PTR [rdi-0x6880b178],cl
   14000cad0:	(bad)  
   14000cad1:	icebp  
   14000cad2:	jg     0x14000cafa
   14000cad4:	sbb    bh,BYTE PTR [rdi+0x10]
   14000cad7:	xor    eax,0x3aba2cf5
   14000cadc:	xchg   BYTE PTR [rdx-0xc645fb1],ch
   14000cae2:	call   0x138a78e35
   14000cae7:	lods   al,BYTE PTR ds:[rsi]
   14000cae8:	fdiv   st(0),st
   14000caea:	rex.WRXB in al,0x56
   14000caed:	ins    DWORD PTR es:[rdi],dx
   14000caee:	(bad)  
   14000caef:	or     BYTE PTR [rax],dl
   14000caf2:	test   BYTE PTR [rbp-0x3a4ff834],0x46
   14000caf9:	cs out 0x28,al
   14000cafc:	add    al,0xc4
   14000cafe:	cmc    
   14000caff:	cmp    DWORD PTR [rdx],ebx
   14000cb01:	(bad)  
   14000cb02:	div    DWORD PTR [rdx]
   14000cb04:	cmc    
   14000cb05:	in     eax,dx
   14000cb06:	(bad)  
   14000cb07:	xor    BYTE PTR [rbp-0x21],dh
   14000cb0a:	out    0x10,eax
   14000cb0c:	and    ah,BYTE PTR [rax-0x37aa1489]
   14000cb12:	push   rdx
   14000cb13:	(bad)  
   14000cb14:	cmp    DWORD PTR [rcx],esi
   14000cb16:	sbb    al,0x80
   14000cb18:	or     eax,0xd7c6c377
   14000cb1d:	rex.B in eax,0x28
   14000cb20:	mov    ah,0xe6
   14000cb22:	shr    BYTE PTR [rbx+rax*4-0x32],cl
   14000cb26:	add    ebx,DWORD PTR ds:[rdx-0x50]
   14000cb2a:	jae    0x14000cb40
   14000cb2c:	rex.RX jnp 0x14000cb08
   14000cb2f:	fimul  WORD PTR [rax]
   14000cb31:	cli    
   14000cb32:	ja     0x14000cba3
   14000cb34:	fidiv  DWORD PTR [rax]
   14000cb36:	push   rsp
   14000cb37:	jnp    0x14000cb33
   14000cb39:	lock in al,0x59
   14000cb3c:	shl    BYTE PTR [rbx-0x7dad1423],cl
   14000cb42:	pop    rsi
   14000cb43:	sub    BYTE PTR [rsi+0x1050917],ch
   14000cb49:	mov    esp,0xfc252c70
   14000cb4e:	adc    ch,BYTE PTR [rax]
   14000cb50:	jge    0x14000cb38
   14000cb52:	iret   
   14000cb53:	fdivrp st(7),st
   14000cb55:	fisubr WORD PTR [rbx+0x77f2bdaf]
   14000cb5b:	out    dx,al
   14000cb5c:	jle    0x14000cb45
   14000cb5e:	jnp    0x14000cbce
   14000cb60:	jmp    0xdac38582
   14000cb65:	sti    
   14000cb66:	lods   eax,DWORD PTR ds:[rsi]
   14000cb67:	lods   al,BYTE PTR ds:[rsi]
   14000cb68:	loopne 0x14000cb25
   14000cb6a:	jne    0x14000cbc9
   14000cb6c:	add    dh,BYTE PTR [rcx-0x2e40bbfa]
   14000cb72:	fcomp  QWORD PTR [rbp-0x57658bca]
   14000cb78:	(bad)  
   14000cb79:	and    al,0xd1
   14000cb7b:	(bad)  
   14000cb7c:	push   rbx
   14000cb7d:	mov    ah,0x8f
   14000cb7f:	jge    0x14000cb16
   14000cb81:	call   0x16789c352
   14000cb86:	mul    DWORD PTR [rdx+0x6b424e16]
   14000cb8c:	add    bl,dl
   14000cb8e:	push   rbp
   14000cb8f:	push   rsp
   14000cb90:	(bad)  
   14000cb91:	mov    dh,0x81
   14000cb93:	(bad)  
   14000cb94:	in     eax,dx
   14000cb95:	jmp    0x14000cbe1
   14000cb97:	or     eax,0x5a16b5a0
   14000cb9c:	movabs eax,ds:0xf68c651b4685ac54
   14000cba5:	xor    cl,BYTE PTR [rax-0x67aba4c6]
   14000cbab:	stos   DWORD PTR es:[rdi],eax
   14000cbac:	rcl    DWORD PTR [rbx],1
   14000cbae:	xchg   esi,eax
   14000cbaf:	and    bl,ah
   14000cbb1:	stos   DWORD PTR es:[rdi],eax
   14000cbb2:	rex.R movabs al,ds:0xdfd316fbefccf31b
   14000cbbc:	(bad)  
   14000cbbd:	cmp    BYTE PTR [rbp-0x2417d80d],cl
   14000cbc3:	jno    0x14000cbf8
   14000cbc5:	(bad)  
   14000cbc6:	push   QWORD PTR [rax+0x6bca139]
   14000cbcc:	mov    dh,0xbd
   14000cbce:	shl    DWORD PTR [rbp+rbx*1-0x69a26199],cl
   14000cbd5:	add    al,0xb6
   14000cbd7:	or     al,0xc3
   14000cbd9:	out    dx,al
   14000cbda:	push   rcx
   14000cbdb:	(bad)  
   14000cbdc:	(bad)  
   14000cbdd:	(bad)  
   14000cbde:	jnp    0x14000cc56
   14000cbe0:	pop    rdi
   14000cbe1:	mov    cl,0x65
   14000cbe3:	mov    eax,0xe4e0f7b5
   14000cbe8:	sbb    DWORD PTR [rdx+0x3eb97eda],esi
   14000cbee:	add    eax,DWORD PTR [rip+0x2808bc09]        # 0x1680987fd
   14000cbf4:	mov    esi,0xa58617c4
   14000cbf9:	add    bh,BYTE PTR [rsi+0x21]
   14000cbfc:	rex.RX clc 
   14000cbfe:	jg     0x14000cbec
   14000cc00:	retf   0x77ab
   14000cc03:	mov    esp,0xfdb7f6ff
   14000cc08:	loopne 0x14000cbd8
   14000cc0a:	mov    al,0xb4
   14000cc0c:	(bad)  
   14000cc0d:	sbb    r8d,DWORD PTR [rsp+rcx*4+0x49]
   14000cc12:	in     eax,dx
   14000cc13:	add    eax,0x684f2c20
   14000cc18:	add    esp,esi
   14000cc1a:	add    ebp,ebx
   14000cc1c:	lea    eax,[rdi-0x30]
   14000cc1f:	outs   dx,BYTE PTR ds:[rsi]
   14000cc20:	movabs ds:0x9875344abb7435db,al
   14000cc29:	call   0x10aa949fa
   14000cc2e:	or     DWORD PTR [rbx+rbp*2+0xa],esi
   14000cc32:	cmp    cl,BYTE PTR [rbx]
   14000cc34:	and    BYTE PTR [rdx+rbx*4+0x50],bl
   14000cc38:	sbb    eax,DWORD PTR [rcx]
   14000cc3a:	mov    ?,WORD PTR [rbp-0x4259caa7]
   14000cc40:	push   rax
   14000cc41:	pop    rdx
   14000cc42:	xor    edi,DWORD PTR [rsi+0x2c]
   14000cc45:	pop    rsi
   14000cc46:	cwde   
   14000cc47:	(bad)  
   14000cc48:	(bad)  
   14000cc49:	cmc    
   14000cc4a:	or     edx,DWORD PTR [rbp+0x78f0feb8]
   14000cc50:	imul   ebp,DWORD PTR [rdx-0x4e],0x1a
   14000cc54:	(bad)  
   14000cc55:	test   DWORD PTR [rax-0x3b],eax
   14000cc58:	rex.WX imul rbp,QWORD PTR [rcx],0xffffffff95880284
   14000cc5f:	rol    BYTE PTR [rax],cl
   14000cc61:	jmp    0x14000cc5d
   14000cc63:	(bad)  
   14000cc64:	sahf   
   14000cc65:	fwait
   14000cc66:	(bad)  
   14000cc67:	test   bl,ch
   14000cc69:	xlat   BYTE PTR ds:[rbx]
   14000cc6a:	test   ebx,0x317ed1fe
   14000cc70:	mov    eax,0x6f58ad63
   14000cc75:	pop    rsp
   14000cc76:	xchg   ah,dl
   14000cc78:	pop    rbp
   14000cc79:	shr    BYTE PTR [rsi],1
   14000cc7b:	stos   DWORD PTR es:[rdi],eax
   14000cc7c:	nop
   14000cc7d:	xchg   esp,eax
   14000cc7e:	sbb    eax,0xc6313238
   14000cc83:	(bad)  
   14000cc84:	out    0x1f,al
   14000cc86:	std    
   14000cc87:	mov    edi,0x9faef8d9
   14000cc8c:	and    ebp,eax
   14000cc8e:	sbb    ecx,DWORD PTR [rdx-0x41]
   14000cc91:	popf   
   14000cc92:	(bad)  
   14000cc93:	rex.WB js 0x14000cc7c
   14000cc96:	rex.WRXB ins BYTE PTR es:[rdi],dx
   14000cc98:	cli    
   14000cc99:	jo     0x14000cd04
   14000cc9b:	ja     0x14000cc7d
   14000cc9d:	fcomp  QWORD PTR [rsp+rax*8-0x79]
   14000cca1:	(bad)  
   14000cca2:	pop    rdi
   14000cca4:	jle    0x131fb0aff
   14000ccaa:	(bad)  
   14000ccab:	ds sti 
   14000ccad:	and    eax,0x12e30e60
   14000ccb2:	xor    al,0x30
   14000ccb4:	and    eax,0xb1297ec5
   14000ccb9:	pop    rdi
   14000ccba:	xor    al,0x44
   14000ccbc:	outs   dx,BYTE PTR ds:[rsi]
   14000ccbd:	mov    ebp,0x414473c0
   14000ccc2:	add    bh,cl
   14000ccc4:	(bad)  
   14000ccc5:	(bad)  
   14000ccc6:	adc    esi,edi
   14000ccc8:	lahf   
   14000ccc9:	jp     0x14000ccba
   14000cccb:	xchg   ebp,eax
   14000cccc:	push   rdi
   14000cccd:	in     eax,dx
   14000ccce:	clc    
   14000cccf:	popf   
   14000ccd0:	fcmovnu st,st(7)
   14000ccd2:	idiv   BYTE PTR [rdi]
   14000ccd4:	out    dx,al
   14000ccd5:	or     al,0xcb
   14000ccd7:	sbb    esi,DWORD PTR [rax]
   14000ccd9:	out    dx,al
   14000ccda:	lods   eax,DWORD PTR ds:[rsi]
   14000ccdb:	xor    al,BYTE PTR [rdx+0x2f]
   14000ccde:	ins    BYTE PTR es:[rdi],dx
   14000ccdf:	push   0x61812120
   14000cce4:	(bad)  
   14000cce5:	cmp    eax,0x69d5120
   14000ccea:	mov    edx,0x72674f31
   14000ccef:	(bad)  
   14000ccf0:	popf   
   14000ccf1:	push   rbx
   14000ccf2:	not    DWORD PTR [rcx]
   14000ccf4:	int    0x1c
   14000ccf6:	test   dl,bh
   14000ccf8:	cmp    BYTE PTR [rdx],bh
   14000ccfa:	stos   BYTE PTR es:[rdi],al
   14000ccfb:	and    al,BYTE PTR [rcx+rbp*1-0x7effea11]
   14000cd02:	imul   r8d,DWORD PTR [rbp+0x2108508a],0xffffffce
   14000cd0a:	(bad)  
   14000cd0b:	push   0x57
   14000cd0d:	out    dx,eax
   14000cd0e:	(bad)  
   14000cd0f:	fdivr  DWORD PTR [rsi+0x17078ff0]
   14000cd15:	rex.WRX jle 0x14000cd0b
   14000cd18:	lock hlt 
   14000cd1a:	imul   esi,DWORD PTR [rdx-0x152207cb],0xcc8f3f0
   14000cd24:	cmp    DWORD PTR [rsi-0x15],edi
   14000cd27:	(bad)  
   14000cd28:	(bad)  
   14000cd29:	sub    ebp,esi
   14000cd2b:	fnstcw WORD PTR [rcx]
   14000cd2d:	mov    al,0xf3
   14000cd2f:	(bad)  
   14000cd30:	int    0xe1
   14000cd32:	xchg   ebp,eax
   14000cd33:	push   rdi
   14000cd34:	scas   al,BYTE PTR es:[rdi]
   14000cd35:	or     eax,0x4b52a137
   14000cd3a:	rex.B (bad) 
   14000cd3c:	test   eax,0xccd60c9
   14000cd41:	shl    BYTE PTR [rax],1
   14000cd43:	sti    
   14000cd44:	(bad)  
   14000cd45:	mov    al,0xf9
   14000cd47:	rex.RXB jg 0x14000cce7
   14000cd4a:	(bad)  
   14000cd4b:	out    dx,eax
   14000cd4c:	cld    
   14000cd4d:	fxtract 
   14000cd4f:	stos   BYTE PTR es:[rdi],al
   14000cd50:	popf   
   14000cd51:	(bad)  
   14000cd52:	in     al,dx
   14000cd53:	call   QWORD PTR [rbx-0x68]
   14000cd56:	js     0x14000cd28
   14000cd58:	nop
   14000cd59:	rex ins BYTE PTR es:[rdi],dx
   14000cd5b:	fnstsw WORD PTR [rdx-0x53]
   14000cd5e:	xor    esp,DWORD PTR [rax+rsi*1]
   14000cd61:	ds (bad) 
   14000cd63:	icebp  
   14000cd64:	mov    bh,0x8f
   14000cd66:	rex.RX jrcxz 0x14000cd70
   14000cd69:	(bad)  
   14000cd6a:	sub    bl,BYTE PTR [rdi]
   14000cd6c:	stc    
   14000cd6d:	(bad)  
   14000cd6e:	xchg   edi,eax
   14000cd6f:	idiv   DWORD PTR [rdi+0x19]
   14000cd72:	cwde   
   14000cd73:	mov    DWORD PTR [rdi+rax*1],0xc3f8091d
   14000cd7a:	(bad)  
   14000cd7b:	mov    edx,DWORD PTR [rcx+riz*8]
   14000cd7e:	mov    eax,DWORD PTR [rdx+rax*4-0xde06200]
   14000cd85:	rex.RB
   14000cd86:	ds cs jb 0x14000cda1
   14000cd8a:	add    ah,BYTE PTR [rbp-0x602801b1]
   14000cd90:	js     0x14000cd89
   14000cd92:	out    dx,al
   14000cd93:	imul   ebp,DWORD PTR [rsi-0x21244204],0xfffffffa
   14000cd9a:	out    dx,al
   14000cd9b:	frstor [rcx+0x79]
   14000cd9e:	cmp    eax,0x114b05e8
   14000cda3:	div    BYTE PTR [rax]
   14000cda5:	pop    rcx
   14000cda6:	and    ch,BYTE PTR [rcx]
   14000cda8:	lock adc DWORD PTR [rbx-0x80],ebx
   14000cdac:	push   rcx
   14000cdad:	movabs al,ds:0xbec71a7185e26d3b
   14000cdb7:	rex.WRX sti 
   14000cdb9:	hlt    
   14000cdba:	std    
   14000cdbb:	mov    al,0x70
   14000cdbd:	(bad)  
   14000cdbe:	sbb    eax,0x40b41055
   14000cdc3:	call   0x19008458c
   14000cdc8:	add    dh,BYTE PTR [rip+0x3eb74a7d]        # 0x17eb8184b
   14000cdce:	jae    0x14000ce4f
   14000cdd0:	gs in  al,dx
   14000cdd2:	(bad)  
   14000cdd3:	(bad)  
   14000cdd4:	pushf  
   14000cdd5:	fdivr  DWORD PTR [rdi+0x6e]
   14000cdd8:	movabs eax,ds:0x89f17f34a9a4f35
   14000cde1:	jl     0x14000cde4
   14000cde3:	(bad)  
   14000cde4:	(bad)  
   14000cde5:	xor    BYTE PTR [rdi-0x61],dh
   14000cde8:	and    ecx,ecx
   14000cdea:	pop    rax
   14000cdeb:	mov    eax,0x379402cf
   14000cdf0:	cmc    
   14000cdf1:	(bad)  
   14000cdf2:	rex.XB out dx,eax
   14000cdf4:	mov    ebx,0xffc6f079
   14000cdf9:	jmp    0x177dc4f98
   14000cdfe:	or     eax,0x58975c8
   14000ce03:	movabs al,ds:0xbfe862598bd8011d
   14000ce0c:	loope  0x14000cddb
   14000ce0e:	in     al,dx
   14000ce0f:	cld    
   14000ce10:	(bad)  
   14000ce11:	(bad)  
   14000ce12:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ce13:	fst    QWORD PTR [esi+0x12]
   14000ce17:	xchg   ebx,eax
   14000ce18:	loope  0x14000cdde
   14000ce1a:	addr32 loopne 0x14000cdf5
   14000ce1d:	(bad)  
   14000ce1e:	ins    DWORD PTR es:[rdi],dx
   14000ce1f:	(bad)  
   14000ce20:	movsxd ecx,DWORD PTR [rcx]
   14000ce22:	rex.WXB (bad) 
   14000ce24:	ds loop 0x14000ce96
   14000ce27:	(bad)  
   14000ce28:	lea    ecx,[rdi-0x13]
   14000ce2b:	cmp    eax,0xcfe1f33a
   14000ce30:	jg     0x14000ce2f
   14000ce32:	lock (bad) 
   14000ce34:	pop    rcx
   14000ce35:	ins    BYTE PTR es:[rdi],dx
   14000ce36:	or     DWORD PTR [rax+0x9d452cf],edi
   14000ce3c:	mov    esp,0xe0082848
   14000ce41:	mov    ecx,0xbf0aa963
   14000ce46:	adc    BYTE PTR [rax],ch
   14000ce48:	jge    0x14000ce42
   14000ce4a:	movd   esp,mm4
   14000ce4d:	or     eax,0xe3bf5c37
   14000ce52:	(bad)  
   14000ce53:	fdivp  st(5),st
   14000ce55:	add    edi,DWORD PTR [rdi]
   14000ce57:	js     0x14000cea0
   14000ce59:	fdiv   DWORD PTR [rbx-0x19cfa7e7]
   14000ce5f:	mov    edx,0x97f69e90
   14000ce64:	and    BYTE PTR [rbx+0x10],al
   14000ce67:	cmp    ecx,DWORD PTR [rbp-0x2cbf5031]
   14000ce6d:	movabs eax,ds:0x55107d8faa69f271
   14000ce76:	cmp    DWORD PTR [rbx+0x44101688],eax
   14000ce7c:	or     cl,dl
   14000ce7e:	jno    0x14000cef7
   14000ce80:	rol    BYTE PTR [rdx+0x20],1
   14000ce83:	rol    ah,1
   14000ce85:	rex.WRXB (bad) 
   14000ce87:	sbb    cl,ch
   14000ce89:	(bad)  
   14000ce8a:	loope  0x14000ce83
   14000ce8c:	data16 sahf 
   14000ce8e:	std    
   14000ce8f:	cli    
   14000ce90:	movabs eax,ds:0x45a5bd34608c31a9
   14000ce99:	sub    dh,BYTE PTR [rax]
   14000ce9b:	mov    es,WORD PTR [rax]
   14000ce9d:	cld    
   14000ce9e:	cmp    DWORD PTR [rax],0xadf002ce
   14000cea4:	cmp    BYTE PTR [rbx+rdx*8-0x6f],0x10
   14000cea9:	sub    BYTE PTR [rbx+0x9],ah
   14000ceac:	add    al,ch
   14000ceae:	add    edx,edi
   14000ceb0:	sbb    BYTE PTR [rsi+0x7fb3b17f],0xe7
   14000ceb7:	rex.WRXB (bad) 
   14000ceba:	(bad)  
   14000cebb:	mov    edx,0xb9ed6cd7
   14000cec0:	ds adc esi,edi
   14000cec3:	pushf  
   14000cec4:	sbb    BYTE PTR [rdx+0xd],ch
   14000cec7:	movabs ds:0xbc3675f9ef2d986f,al
   14000ced0:	jrcxz  0x14000cf39
   14000ced2:	sar    BYTE PTR [rdx],1
   14000ced4:	ss (bad) 
   14000ced6:	mov    WORD PTR [rdi-0x31],?
   14000ced9:	pop    rax
   14000ceda:	add    edi,DWORD PTR [rsi+0x2472a03b]
   14000cee0:	push   rax
   14000cee1:	mov    ecx,edi
   14000cee3:	rol    bl,1
   14000cee5:	popf   
   14000cee6:	and    ecx,DWORD PTR [rdi]
   14000cee8:	out    dx,al
   14000cee9:	fwait
   14000ceea:	clc    
   14000ceeb:	shl    BYTE PTR [rdi],1
   14000ceed:	out    dx,eax
   14000ceee:	(bad)  
   14000ceef:	jnp    0x14000cf01
   14000cef1:	cwde   
   14000cef2:	and    eax,0x96fa134d
   14000cef7:	rex sahf 
   14000cef9:	add    al,0xa
   14000cefb:	add    bh,BYTE PTR [rax+0x1e]
   14000cefe:	sub    BYTE PTR [rdx-0x22e23080],al
   14000cf04:	rex.RX
   14000cf05:	repz test DWORD PTR [rax-0x8],eax
   14000cf09:	mov    ebx,0xd5cf72bf
   14000cf0e:	ja     0x14000ceec
   14000cf10:	mov    esp,0xfadfdffd
   14000cf15:	(bad)  
   14000cf16:	mov    bh,0xbe
   14000cf18:	mov    ecx,0xd1bb686f
   14000cf1d:	cld    
   14000cf1e:	mov    eax,0x29e7bf1c
   14000cf23:	or     BYTE PTR [rcx],cl
   14000cf25:	jb     0x14000cf2e
   14000cf27:	mov    BYTE PTR [rbp+0x5a754680],dh
   14000cf2d:	sub    al,0xec
   14000cf2f:	std    
   14000cf30:	sub    dl,ch
   14000cf32:	cmp    eax,0x7eb46bbf
   14000cf37:	jnp    0x14000cefa
   14000cf39:	adc    al,0xd7
   14000cf3b:	adc    BYTE PTR [rbx+0x347063b1],ah
   14000cf41:	(bad)  
   14000cf42:	out    dx,eax
   14000cf43:	adc    ebx,DWORD PTR [rbp-0x68028057]
   14000cf49:	addr32 idiv esp
   14000cf4c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000cf4d:	out    dx,eax
   14000cf4e:	popf   
   14000cf4f:	jnp    0x14000cf43
   14000cf51:	fdiv   DWORD PTR [rbp+rdi*8+0x3c]
   14000cf55:	rex.RX xor sil,r12b
   14000cf58:	in     al,dx
   14000cf59:	xor    ch,BYTE PTR [rbx-0x69]
   14000cf5c:	imul   edi,ebx,0x9bede33a
   14000cf62:	mov    bh,0x4b
   14000cf64:	(bad)
   14000cf67:	fidiv  WORD PTR [rdx+0x79aedb90]
   14000cf6d:	scas   eax,DWORD PTR es:[rdi]
   14000cf6e:	xor    eax,0x80d4a10c
   14000cf73:	out    0xd8,al
   14000cf75:	jl     0x14000cfde
   14000cf77:	cli    
   14000cf78:	mov    eax,DWORD PTR [rdi-0x16]
   14000cf7b:	(bad)  
   14000cf7c:	out    dx,al
   14000cf7d:	(bad)  
   14000cf7e:	sar    DWORD PTR [rdx],cl
   14000cf80:	jo     0x14000cf67
   14000cf82:	imul   rsi,rax,0xffffffff8370a18a
   14000cf89:	adc    BYTE PTR [rdx],ah
   14000cf8b:	fwait
   14000cf8c:	pop    rcx
   14000cf8d:	nop
   14000cf8e:	rex (bad) 
   14000cf90:	(bad)  
   14000cf92:	cdq    
   14000cf93:	out    dx,eax
   14000cf94:	rcr    BYTE PTR [rcx+0xde0cf3a],1
   14000cf9a:	outs   dx,DWORD PTR ds:[rsi]
   14000cf9b:	rex.R xchg esp,eax
   14000cf9d:	rex.WX xor BYTE PTR [rax-0x3dc985e3],dil
   14000cfa4:	(bad)  
   14000cfa5:	movsxd ebp,DWORD PTR [rcx-0x7cfd1918]
   14000cfab:	rex.XB cmp eax,0xdd625030
   14000cfb1:	mov    ecx,0xdeb47966
   14000cfb6:	mov    cl,BYTE PTR [rsi+0x4c]
   14000cfb9:	rex.WR xlat BYTE PTR ds:[rbx]
   14000cfbb:	stos   DWORD PTR es:[rdi],eax
   14000cfbc:	sub    eax,DWORD PTR fs:[rbx+rsi*8]
   14000cfc0:	vpsubw xmm15,xmm7,XMMWORD PTR [rdi-0x7f187eb5]
   14000cfc8:	(bad)  
   14000cfc9:	add    BYTE PTR [rsi-0x8b469e5],bl
   14000cfcf:	xchg   ebp,eax
   14000cfd0:	jg     0x14000cfc5
   14000cfd2:	(bad)  
   14000cfd3:	(bad)  
   14000cfd5:	pop    rbx
   14000cfd6:	ja     0x14000cf94
   14000cfd8:	jmp    0xf23f0faa
   14000cfdd:	loope  0x14000d059
   14000cfdf:	push   rax
   14000cfe0:	movs   DWORD PTR es:[rdi],DWORD PTR cs:[rsi]
   14000cfe2:	rex.WRB push 0xfffffffffffffffa
   14000cfe5:	mov    ebx,0x205d8253
   14000cfea:	xlat   BYTE PTR ds:[rbx]
   14000cfeb:	add    esp,DWORD PTR [rax-0x4159aae6]
   14000cff1:	test   DWORD PTR [rcx],0x3dfc4f5a
   14000cff7:	cmp    bl,BYTE PTR [rsi+0x40]
   14000cffa:	stos   DWORD PTR es:[rdi],eax
   14000cffb:	movabs al,es:0xa456ab474eeb42d0
   14000d005:	cmc    
   14000d006:	clc    
   14000d007:	leave  
   14000d008:	mov    eax,0x767cfffa
   14000d00d:	cli    
   14000d00e:	leave  
   14000d00f:	(bad)  
   14000d011:	bnd jmp 0x11b54ff1e
   14000d017:	push   rbx
   14000d018:	sbb    BYTE PTR [rcx],al
   14000d01a:	sahf   
   14000d01b:	and    edx,DWORD PTR [rip+0xffffffffeebb69f2]        # 0x12ebc3a13
   14000d021:	mov    dh,0x1d
   14000d023:	sub    DWORD PTR [rax+rcx*2-0x7b],edx
   14000d027:	mov    ebx,0xeba05646
   14000d02c:	jbe    0x14000d09f
   14000d02e:	jne    0x14000d029
   14000d030:	outs   dx,BYTE PTR ds:[rsi]
   14000d031:	fstp   QWORD PTR [rdi-0x16]
   14000d034:	rex.WXB in al,dx
   14000d036:	outs   dx,DWORD PTR ds:[rsi]
   14000d037:	pop    rsi
   14000d038:	test   al,0xc5
   14000d03a:	xchg   ebp,eax
   14000d03b:	(bad)  
   14000d03c:	sbb    al,0xae
   14000d03e:	out    dx,eax
   14000d03f:	lahf   
   14000d040:	push   0xffffffffffffffe8
   14000d042:	repz cmp eax,DWORD PTR [rdi+0x4b]
   14000d046:	jmp    0x14000d01e
   14000d048:	hlt    
   14000d049:	leave  
   14000d04a:	(bad)  
   14000d04b:	rex.RXB add al,0x42
   14000d04e:	or     BYTE PTR [rsp+rdx*1-0x2c72fef8],al
   14000d055:	iret   
   14000d056:	push   rax
   14000d057:	jns    0x14000d053
   14000d059:	sti    
   14000d05a:	or     al,0xdf
   14000d05c:	repnz add esp,DWORD PTR [rsi]
   14000d05f:	cmp    BYTE PTR [rax-0xb3f6f33],sil
   14000d066:	movsxd ebx,DWORD PTR [rax-0x2410b9b6]
   14000d06c:	mov    ch,0xb6
   14000d06e:	leave  
   14000d06f:	(bad)  
   14000d070:	(bad)  
   14000d071:	or     BYTE PTR [rdx],al
   14000d073:	jno    0x14000d0ba
   14000d075:	xchg   ebp,eax
   14000d076:	mov    esi,0x3d9fc7be
   14000d07b:	call   QWORD PTR [rbx*8+0x62c30f87]
   14000d082:	sti    
   14000d083:	movabs ds:0x1d2e008288e78120,eax
   14000d08c:	(bad)  
   14000d08e:	inc    ah
   14000d090:	pop    rsp
   14000d091:	inc    dl
   14000d093:	pop    rdi
   14000d094:	(bad)  
   14000d095:	jmp    0x14000d096
   14000d097:	jrcxz  0x14000d01f
   14000d099:	pop    rbx
   14000d09a:	outs   dx,DWORD PTR ds:[rsi]
   14000d09b:	cli    
   14000d09c:	mov    ch,0x2d
   14000d09e:	push   rdi
   14000d09f:	fisub  WORD PTR [rcx+0x52]
   14000d0a2:	jge    0x14000d05e
   14000d0a4:	rex.RX xchg edx,eax
   14000d0a6:	rex.R
   14000d0a7:	rex.WRXB pop r14
   14000d0a9:	and    eax,0xdc837694
   14000d0ae:	add    BYTE PTR [rax-0x4c],al
   14000d0b1:	xor    ch,al
   14000d0b3:	mov    ecx,0xce8fbc8f
   14000d0b8:	leave  
   14000d0b9:	rex.RXB shl BYTE PTR [r10+0x69423a0d],1
   14000d0c0:	push   rsp
   14000d0c1:	rex.WXB movabs ds:0xb7faa2a7e75a0d2a,rax
   14000d0cb:	(bad)  
   14000d0cc:	scas   al,BYTE PTR es:[rdi]
   14000d0cd:	lahf   
   14000d0ce:	cld    
   14000d0cf:	stc    
   14000d0d0:	rex.WRXB lahf 
   14000d0d2:	mov    esi,0xd5b3f1ff
   14000d0d7:	shr    eax,cl
   14000d0d9:	mov    eax,fs
   14000d0db:	rex.WRXB out 0x5e,eax
   14000d0de:	jge    0x14000d14d
   14000d0e0:	out    dx,eax
   14000d0e1:	or     edi,DWORD PTR [rbp+0x6f2de42f]
   14000d0e7:	icebp  
   14000d0e8:	jrcxz  0x14000d0ee
   14000d0ea:	lods   eax,DWORD PTR ds:[rsi]
   14000d0eb:	fdivr  QWORD PTR [rdx+0x7e]
   14000d0ee:	imul   esp,edx,0x8d7fbf09
   14000d0f4:	std    
   14000d0f5:	push   rbx
   14000d0f6:	in     eax,dx
   14000d0f7:	mov    DWORD PTR [rdi+0x3c],ecx
   14000d0fa:	push   rbx
   14000d0fb:	jge    0x14000d167
   14000d0fd:	rol    DWORD PTR [rax-0x40],cl
   14000d100:	(bad)  
   14000d101:	imul   ecx,DWORD PTR [rbx-0x25],0xffffffc2
   14000d105:	test   BYTE PTR [rcx+0x208963a1],cl
   14000d10c:	scas   al,BYTE PTR es:[rdi]
   14000d10d:	rex.WR xor r14b,BYTE PTR [rbx-0x21]
   14000d111:	sbb    BYTE PTR [ecx-0x5e3de113],bh
   14000d118:	cmc    
   14000d119:	call   0x1a7a0fd1c
   14000d11e:	add    ecx,DWORD PTR [rbp+rdi*1+0xe]
   14000d122:	rex.X (bad) 
   14000d124:	(bad)  
   14000d125:	in     eax,0x5a
   14000d127:	jo     0x14000d11e
   14000d129:	cmp    al,cl
   14000d12b:	ins    BYTE PTR es:[rdi],dx
   14000d12c:	rex.WXB pop r14
   14000d12e:	cmp    eax,0x3d5866b0
   14000d133:	jge    0x14000d1ad
   14000d135:	repnz or ch,bl
   14000d138:	xor    eax,DWORD PTR [rcx]
   14000d13a:	retf   
   14000d13b:	(bad)  
   14000d13c:	or     dl,BYTE PTR [rax+rdi*4]
   14000d13f:	add    al,0x14
   14000d141:	add    al,0x70
   14000d143:	jmp    0x147fb3830
   14000d148:	rex jmp 0x123fd50b1
   14000d14e:	out    dx,eax
   14000d14f:	mov    esp,0xff1d9af6
   14000d154:	(bad)  
   14000d155:	cli    
   14000d156:	cmp    ebx,esi
   14000d158:	xor    al,BYTE PTR [rax+rbp*8+0x3a4b3501]
   14000d15f:	jb     0x14000d130
   14000d161:	or     DWORD PTR [rdi],edi
   14000d163:	adc    dh,ch
   14000d165:	test   BYTE PTR [rax+0x2b],ah
   14000d168:	add    BYTE PTR [rcx+0x65],dl
   14000d16b:	xchg   edx,eax
   14000d16c:	icebp  
   14000d16d:	ud0    ecx,DWORD PTR [rax]
   14000d170:	push   0xffffffffffffffe1
   14000d172:	sub    al,0x48
   14000d174:	movabs ds:0xa35f3507769a3506,eax
   14000d17d:	jno    0x14000d163
   14000d17f:	ins    BYTE PTR es:[rdi],dx
   14000d180:	imul   esi,esi,0xffffffb3
   14000d183:	comiss xmm3,DWORD PTR [rsi+rdi*8]
   14000d187:	clc    
   14000d188:	jrcxz  0x14000d1bd
   14000d18a:	(bad)  
   14000d18b:	addr32 push 0xffffffffffffffd1
   14000d18e:	mov    esi,ss
   14000d190:	int3   
   14000d191:	xchg   ebx,eax
   14000d192:	push   0x7b
   14000d194:	jg     0x14000d12f
   14000d196:	rcl    DWORD PTR [rax-0x7956fd3e],0xcf
   14000d19d:	or     edi,DWORD PTR [rbx+0x27]
   14000d1a0:	mov    bh,0x44
   14000d1a2:	sub    al,0xe
   14000d1a4:	(bad)  
   14000d1a5:	rex.RX mov ecx,0x775b93a5
   14000d1ab:	icebp  
   14000d1ac:	add    al,0x3f
   14000d1ae:	out    0x90,al
   14000d1b0:	adc    bh,al
   14000d1b2:	test   DWORD PTR [rsi+0x36],0xf5e6c6c7
   14000d1b9:	jmp    0x12df587f9
   14000d1be:	sbb    ch,BYTE PTR [rax]
   14000d1c0:	xchg   DWORD PTR [rbx],eax
   14000d1c2:	es jrcxz 0x14000d206
   14000d1c5:	loop   0x14000d1b8
   14000d1c7:	adc    BYTE PTR [rdi-0x74078468],dh
   14000d1cd:	or     al,0xdf
   14000d1cf:	test   BYTE PTR [rsi],0xc2
   14000d1d2:	movabs eax,ds:0x207b39bcd5b03075
   14000d1db:	lods   eax,DWORD PTR ds:[rsi]
   14000d1dc:	pop    rdi
   14000d1dd:	lock mov edi,0x6ed70566
   14000d1e3:	or     BYTE PTR [rax],bh
   14000d1e5:	cmp    ah,BYTE PTR [rdi]
   14000d1e7:	mov    bh,0x95
   14000d1e9:	jnp    0x14000d1b5
   14000d1eb:	push   rbx
   14000d1ec:	(bad)  
   14000d1ed:	rex.WRX int 0x8d
   14000d1f0:	sar    DWORD PTR [rbp-0x50],cl
   14000d1f3:	push   rax
   14000d1f4:	loope  0x14000d200
   14000d1f6:	mov    esp,0x70041400
   14000d1fb:	imul   ebx,DWORD PTR [rax+0x52],0xa7e97ff8
   14000d202:	pop    rdi
   14000d203:	mov    edi,0x5f774df5
   14000d208:	cmc    
   14000d209:	(bad)  
   14000d20a:	mov    ebx,0xdbb6f4de
   14000d20f:	fs iret 
   14000d211:	data16 mov BYTE PTR [rsi],ch
   14000d214:	cwde   
   14000d215:	call   0x18bb3fbd0
   14000d21a:	rex.WRXB or QWORD PTR [r14],r14
   14000d21d:	rex leave 
   14000d21f:	(bad)  
   14000d220:	rol    DWORD PTR [rdi-0xd],cl
   14000d223:	adc    ebx,DWORD PTR [rbp+rdi*8+0x2d41ef6f]
   14000d22a:	rex.WR adc BYTE PTR [rax+rcx*1+0x51],0x42
   14000d230:	or     BYTE PTR [rcx+0x1c],cl
   14000d233:	movabs ds:0x7fce358ef7d46a66,eax
   14000d23c:	loop   0x14000d1cf
   14000d23e:	retf   0xfbe1
   14000d241:	mov    ss,WORD PTR [rsi+0x4e]
   14000d244:	rex.WRXB push r14
   14000d246:	jrcxz  0x14000d231
   14000d248:	pop    rax
   14000d249:	(bad)  
   14000d24a:	(bad)  
   14000d24b:	(bad)  
   14000d24c:	gs (bad) 
   14000d24e:	addr32 out dx,al
   14000d250:	sti    
   14000d251:	fidivr DWORD PTR [rsi-0x2263d5b2]
   14000d257:	cmp    dh,al
   14000d259:	je     0x14000d2c6
   14000d25b:	jmp    0x14000d20a
   14000d25d:	jb     0x14000d23a
   14000d25f:	(bad)  
   14000d261:	out    0x9b,eax
   14000d263:	jge    0x14000d25f
   14000d265:	fld    DWORD PTR [rip+0xffffffff80743167]        # 0xc07503d2
   14000d26b:	div    BYTE PTR [rcx+0x77ccf6d9]
   14000d271:	(bad)  
   14000d272:	(bad)  
   14000d273:	sti    
   14000d274:	outs   dx,DWORD PTR ds:[rsi]
   14000d275:	(bad)  
   14000d277:	mov    bl,0x7e
   14000d279:	repz imul rdx,QWORD PTR [rbx-0x13deed30],0x2d474282
   14000d285:	out    0x1f,al
   14000d287:	std    
   14000d288:	adc    al,BYTE PTR [rbx-0x49]
   14000d28b:	sbb    dl,BYTE PTR [rdx]
   14000d28d:	rol    BYTE PTR [rbx+0x57],1
   14000d290:	rex.B
   14000d291:	rex.B
   14000d292:	rex.RB cmc 
   14000d294:	jae    0x14000d27c
   14000d296:	fcmovne st,st(5)
   14000d298:	mov    DWORD PTR [rdx-0x78],esi
   14000d29b:	retfw  
   14000d29d:	mov    al,0xe8
   14000d29f:	(bad)  
   14000d2a0:	xor    al,0x2b
   14000d2a2:	xchg   DWORD PTR [rsi],esp
   14000d2a4:	data16 (bad) 
   14000d2a6:	(bad)  
   14000d2a7:	out    0x17,eax
   14000d2a9:	pop    rdx
   14000d2aa:	xor    eax,0x3f40e9b2
   14000d2af:	(bad)  
   14000d2b0:	loopne 0x14000d319
   14000d2b2:	xor    al,0xa
   14000d2b4:	pop    rsp
   14000d2b5:	and    cl,BYTE PTR [rdx]
   14000d2b7:	add    bh,BYTE PTR [rax-0x6ffb07cc]
   14000d2bd:	xor    ebp,edi
   14000d2bf:	(bad)  
   14000d2c0:	std    
   14000d2c1:	(bad)  
   14000d2c2:	stc    
   14000d2c3:	add    edi,DWORD PTR [rdi-0x48a2048c]
   14000d2c9:	std    
   14000d2ca:	iret   
   14000d2cb:	rex.XB jmp 0x14000d27c
   14000d2ce:	cmp    DWORD PTR [rax+0x16],0x19fbdb74
   14000d2d5:	pop    rdx
   14000d2d6:	adc    cl,BYTE PTR [rax]
   14000d2d8:	xchg   BYTE PTR [rcx+0x49081b7c],ah
   14000d2de:	addr32 jle 0x14000d263
   14000d2e1:	mov    bl,0x7f
   14000d2e3:	cmc    
   14000d2e4:	pop    rsi
   14000d2e5:	loop   0x14000d2e1
   14000d2e7:	and    al,0x22
   14000d2e9:	or     al,0xcc
   14000d2eb:	and    al,BYTE PTR [rax+0xb]
   14000d2ee:	lods   eax,DWORD PTR ds:[rsi]
   14000d2ef:	imul   ebp,DWORD PTR [rbp-0x23],0xfffffffe
   14000d2f3:	(bad)  
   14000d2f4:	adc    edx,DWORD PTR [rbp+0x33dabfb1]
   14000d2fa:	jnp    0x14000d35c
   14000d2fc:	(bad)  
   14000d2fd:	js     0x14000d362
   14000d2ff:	jl     0x14000d2b7
   14000d301:	adc    edi,ecx
   14000d303:	(bad)  
   14000d304:	pop    rdx
   14000d305:	cmp    esi,DWORD PTR [rbx]
   14000d307:	jg     0x14000d293
   14000d309:	push   rsp
   14000d30a:	jmp    0x14000d347
   14000d30c:	(bad)  
   14000d30d:	fisub  WORD PTR [rbp-0x482f6338]
   14000d313:	pop    rax
   14000d314:	fcomp  QWORD PTR [rcx-0x63006449]
   14000d31a:	xlat   BYTE PTR ds:[rbx]
   14000d31b:	movabs al,ds:0xf037e2cbaa7bcbba
   14000d324:	mov    al,0x9d
   14000d326:	rex.RX xchg ebx,eax
   14000d328:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d329:	or     eax,0xdc569544
   14000d32e:	clc    
   14000d32f:	cld    
   14000d330:	add    DWORD PTR [rbp-0x8f04899],0x9537ebc8
   14000d33a:	scas   al,BYTE PTR es:[rdi]
   14000d33b:	adc    edx,edx
   14000d33d:	sbb    DWORD PTR [rax+0x12],eax
   14000d340:	and    DWORD PTR [rip+0xffffffffff336a2a],esp        # 0x13f343d70
   14000d346:	mov    BYTE PTR [rip+0x1851c181],ah        # 0x1585294cd
   14000d34c:	mov    ecx,0x41f7a611
   14000d351:	jnp    0x14000d331
   14000d353:	jl     0x14000d3ba
   14000d355:	cmp    DWORD PTR [rdx],edx
   14000d357:	pop    rax
   14000d358:	(bad)  [rdi]
   14000d35a:	call   0x168d8097f
   14000d35f:	stos   DWORD PTR es:[rdi],eax
   14000d360:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d361:	cmovg  ebx,DWORD PTR [rip+0xffffffffa5be7dcc]        # 0xe5bf5134
   14000d368:	sub    al,0x81
   14000d36a:	(bad)  
   14000d36b:	or     BYTE PTR [rsi],ch
   14000d36d:	adc    DWORD PTR [rip+0x4b1c5c01],eax        # 0x18b1d2f74
   14000d373:	push   0xffffffffffffffff
   14000d375:	ud0    esp,DWORD PTR [rdi+0x4ddb7b1f]
   14000d37c:	(bad)  
   14000d37d:	in     al,dx
   14000d37e:	cli    
   14000d37f:	popf   
   14000d380:	pop    rbp
   14000d381:	xlat   BYTE PTR ds:[rbx]
   14000d382:	mov    edi,0x44010066
   14000d387:	shr    DWORD PTR [rcx-0x21601051],cl
   14000d38d:	jnp    0x14000d3c6
   14000d38f:	enter  0xe23e,0xda
   14000d393:	cmp    al,0xa7
   14000d395:	(bad)  
   14000d396:	loop   0x14000d3df
   14000d398:	mov    DWORD PTR [rbx+0x17],ebp
   14000d39b:	nop
   14000d39c:	movabs eax,ds:0x6b1d12c89ac20440
   14000d3a5:	cmc    
   14000d3a6:	xchg   ecx,eax
   14000d3a7:	outs   dx,DWORD PTR ds:[rsi]
   14000d3a8:	int    0x1f
   14000d3aa:	clc    
   14000d3ab:	xchg   ebx,eax
   14000d3ac:	cmp    eax,0x9b9ccf53
   14000d3b1:	out    dx,eax
   14000d3b2:	rex.WR (bad) 
   14000d3b4:	movabs ds:0x33beb548666b4e78,eax
   14000d3bd:	neg    DWORD PTR [rbp+0x3aeebbe0]
   14000d3c3:	jle    0x14000d443
   14000d3c5:	fcom   QWORD PTR [rdi]
   14000d3c7:	or     al,0x5f
   14000d3c9:	call   0x19e6898fd
   14000d3ce:	stos   BYTE PTR es:[rdi],al
   14000d3cf:	add    al,0xd7
   14000d3d1:	(bad)  
   14000d3d2:	(bad)  
   14000d3d3:	(bad)  
   14000d3d4:	jp     0x14000d414
   14000d3d6:	shl    esp,0xdd
   14000d3d9:	xchg   al,bh
   14000d3db:	fcmovnb st,st(7)
   14000d3dd:	imul   esp,DWORD PTR [rbx-0x15],0xfffffffa
   14000d3e1:	rex.WX popf 
   14000d3e3:	pop    rbx
   14000d3e4:	mov    bh,0xf4
   14000d3e6:	fsubr  QWORD PTR [rax]
   14000d3e8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d3e9:	sub    rbx,QWORD PTR [rsi+0x6dc540a5]
   14000d3f0:	out    0x1f,al
   14000d3f2:	std    
   14000d3f3:	adc    ah,BYTE PTR [rbx]
   14000d3f5:	scas   eax,DWORD PTR es:[rdi]
   14000d3f6:	stc    
   14000d3f7:	adc    DWORD PTR [rdi+rdi*8+0x10],esp
   14000d3fb:	jp     0x14000d3ed
   14000d3fd:	rex.WX cmp bl,dil
   14000d400:	cmp    eax,0xdc655df3
   14000d405:	add    DWORD PTR [rbx],edx
   14000d407:	and    bl,al
   14000d409:	mov    cl,0x46
   14000d40b:	jb     0x14000d47d
   14000d40d:	(bad)  
   14000d40e:	int    0x2a
   14000d410:	or     bh,cl
   14000d412:	popf   
   14000d413:	sbb    ch,BYTE PTR [rdi+0x3c7ba79c]
   14000d419:	(bad)  
   14000d41a:	test   eax,0x65815bbf
   14000d41f:	push   rax
   14000d420:	adc    al,al
   14000d422:	(bad)
   14000d425:	(bad)  
   14000d426:	scas   al,BYTE PTR es:[rdi]
   14000d427:	rex.W cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d429:	cld    
   14000d42a:	out    dx,eax
   14000d42b:	jle    0x14000d41b
   14000d42d:	sub    eax,0xcef5bfef
   14000d432:	mov    ebx,0xb6070aee
   14000d437:	rex.XB jnp 0x14000d3d6
   14000d43a:	xor    al,0x9
   14000d43c:	rex.WRX (bad) 
   14000d43e:	not    DWORD PTR [rdi+0x16d283af]
   14000d444:	je     0x14000d41a
   14000d446:	loop   0x14000d434
   14000d448:	(bad)  
   14000d449:	jle    0x14000d3d0
   14000d44b:	(bad)  
   14000d44c:	test   eax,0xc80190a7
   14000d451:	push   rax
   14000d452:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d453:	xor    DWORD PTR [rcx+0x24],0xfffffffa
   14000d457:	scas   eax,DWORD PTR es:[rdi]
   14000d458:	mov    esi,0x7f4fb3a
   14000d45d:	out    dx,eax
   14000d45e:	mov    edi,0x56deafb0
   14000d463:	repz xor edx,ebx
   14000d466:	(bad)  
   14000d467:	stc    
   14000d468:	(bad)  
   14000d469:	leave  
   14000d46a:	push   0x7d
   14000d46c:	(bad)  
   14000d46d:	(bad)
   14000d470:	rcr    DWORD PTR [rcx+0x2a],cl
   14000d473:	push   rdx
   14000d474:	(bad)  
   14000d475:	rex.WXB or rdi,r13
   14000d478:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d479:	and    BYTE PTR [rdi+0x6],cl
   14000d47c:	jns    0x14000d4c9
   14000d47e:	ret    0x8b7
   14000d481:	jl     0x14000d4c5
   14000d483:	mov    bh,ch
   14000d485:	cmp    eax,0xa1b33f59
   14000d48a:	mov    edi,0x4b65bed4
   14000d48f:	stc    
   14000d490:	es (bad) 
   14000d492:	cmp    eax,DWORD PTR [rax-0x574ae2fc]
   14000d498:	sbb    eax,0xd7d18c79
   14000d49d:	cld    
   14000d49e:	rex.WXB
   14000d49f:	rex.R (bad) [rsi+0x643d9823]
   14000d4a6:	mov    esi,0xec665b3b
   14000d4ab:	push   rax
   14000d4ac:	adc    dh,BYTE PTR [rax]
   14000d4ae:	cmp    ah,BYTE PTR [rax]
   14000d4b0:	sti    
   14000d4b1:	mov    cs,esp
   14000d4b3:	retf   0x53f2
   14000d4b6:	(bad)  
   14000d4b7:	es sahf 
   14000d4b9:	and    BYTE PTR [rbx],bl
   14000d4bb:	retf   
   14000d4bc:	lock leave 
   14000d4be:	out    dx,al
   14000d4bf:	test   DWORD PTR [rsi-0x2a],edi
   14000d4c2:	push   rdi
   14000d4c3:	sbb    eax,0x1e58020a
   14000d4c8:	rex.WXB out 0xfc,al
   14000d4cb:	(bad)  
   14000d4cc:	stc    
   14000d4cd:	(bad)  
   14000d4ce:	out    dx,eax
   14000d4cf:	sti    
   14000d4d0:	test   eax,0xeaba6e9b
   14000d4d5:	push   rdi
   14000d4d6:	(bad)  
   14000d4d7:	ins    BYTE PTR es:[rdi],dx
   14000d4d8:	mov    ebx,0x80cd1045
   14000d4dd:	push   0xffffffffffffff90
   14000d4df:	add    al,0xfc
   14000d4e1:	mov    ah,0x36
   14000d4e3:	scas   eax,DWORD PTR es:[rdi]
   14000d4e4:	rcr    DWORD PTR [rdx],0xe8
   14000d4e7:	mov    edi,0x6fe9800b
   14000d4ec:	dec    BYTE PTR [rip+0xffffffffdc7d0f0b]        # 0x11c7de3fd
   14000d4f2:	in     al,0xcb
   14000d4f4:	adc    eax,0xe03fbb69
   14000d4f9:	iret   
   14000d4fa:	mov    edi,0x1ff4f736
   14000d4ff:	fnsave [rdi]
   14000d501:	mov    cl,0x37
   14000d503:	push   rsi
   14000d504:	sub    al,0x68
   14000d506:	(bad)  
   14000d507:	stc    
   14000d508:	sti    
   14000d509:	lods   eax,DWORD PTR cs:[rsi]
   14000d50b:	out    0xca,eax
   14000d50d:	(bad)  
   14000d50e:	popf   
   14000d50f:	mov    ecx,0x2ff8d79f
   14000d514:	rex.RXB
   14000d515:	gs pushf 
   14000d517:	rex.WRXB (bad) 
   14000d519:	fisttp QWORD PTR [rax+0x50327c0]
   14000d51f:	(bad)  
   14000d520:	fistp  WORD PTR [rbx]
   14000d522:	stos   DWORD PTR es:[rdi],eax
   14000d523:	lahf   
   14000d524:	fnstcw WORD PTR [rax]
   14000d526:	rcr    bl,1
   14000d528:	mov    ecx,0x26e97379
   14000d52d:	and    DWORD PTR [rax+0x48],ecx
   14000d530:	rex.WRXB
   14000d531:	rex.WX
   14000d532:	pop    r12
   14000d534:	cdq    
   14000d535:	movabs al,ds:0xfaa277d6e8639953
   14000d53e:	scas   al,BYTE PTR es:[rdi]
   14000d53f:	sub    BYTE PTR [rcx],0xeb
   14000d542:	or     cl,BYTE PTR [rax]
   14000d544:	add    DWORD PTR [rax-0x7c],ebp
   14000d547:	test   DWORD PTR [rcx],0x4e4a0d36
   14000d54d:	push   rbp
   14000d54e:	mov    eax,0x9bede822
   14000d553:	cmp    esi,DWORD PTR [rdx+0x72]
   14000d556:	jbe    0x14000d4e4
   14000d558:	in     al,dx
   14000d559:	nop
   14000d55a:	loope  0x14000d5ca
   14000d55c:	in     eax,0xc1
   14000d55e:	push   rax
   14000d55f:	pop    rax
   14000d560:	add    DWORD PTR [rdi],edx
   14000d562:	rex.RB
   14000d563:	add    r11b,cl
   14000d566:	ret    
   14000d567:	std    
   14000d568:	sbb    BYTE PTR [rdx+rdx*1+0x3f],0x4
   14000d56d:	(bad)  
   14000d56e:	ja     0x14000d52f
   14000d570:	cmc    
   14000d571:	fidiv  DWORD PTR [rbp-0xa248511]
   14000d577:	mov    edi,0xafedeb7d
   14000d57c:	frstor [rip+0x3ed0a3cb]        # 0x17ed1794d
   14000d582:	rex.RXB out 0xb7,al
   14000d585:	data16 jg 0x14000d548
   14000d588:	or     al,0xbe
   14000d58a:	sbb    DWORD PTR [rcx+rbx*4-0x7b],esp
   14000d58e:	jge    0x14000d56f
   14000d590:	gs loop 0x14000d606
   14000d593:	mov    edi,0x45af0e99
   14000d598:	movabs al,ds:0xb0bbdfdfc94a46b5
   14000d5a1:	push   rdi
   14000d5a3:	mov    edi,0x8c09fe7b
   14000d5a8:	cmp    BYTE PTR [rbx],0xe1
   14000d5ab:	lahf   
   14000d5ac:	and    al,0x35
   14000d5ae:	sti    
   14000d5af:	pop    rbp
   14000d5b0:	movabs al,ds:0xaac5fdbefbba8fcf
   14000d5b9:	loope  0x14000d619
   14000d5bb:	or     BYTE PTR [rcx],dl
   14000d5bd:	sub    al,0x25
   14000d5bf:	rex (bad) 
   14000d5c2:	lock rex.WXB add rax,0x4f77f515
   14000d5c9:	push   rsp
   14000d5ca:	rex.WRXB out dx,eax
   14000d5cc:	pop    rsi
   14000d5cd:	fist   DWORD PTR [rdi-0x46]
   14000d5d0:	jbe    0x14000d635
   14000d5d2:	stc    
   14000d5d3:	mov    edx,0x4283d24
   14000d5d8:	xor    dl,BYTE PTR [rax]
   14000d5da:	xor    al,0x4f
   14000d5dc:	(bad)  
   14000d5dd:	rex.WXB xor BYTE PTR [r8+0x371dbe81],dil
   14000d5e4:	movabs ds:0x28e0cc1ef8c2b607,eax
   14000d5ed:	enter  0x530f,0xdc
   14000d5f1:	cmp    ch,BYTE PTR [rax*8+0x77aae363]
   14000d5f8:	in     al,dx
   14000d5f9:	int3   
   14000d5fa:	cld    
   14000d5fb:	fisub  WORD PTR [rsi+0x3b]
   14000d5fe:	outs   dx,BYTE PTR ds:[rsi]
   14000d5ff:	nop
   14000d600:	(bad)  
   14000d601:	(bad)  
   14000d602:	cs xchg esi,eax
   14000d604:	sbb    DWORD PTR [rax],ebp
   14000d606:	mov    al,0x4
   14000d608:	or     al,BYTE PTR [rdx]
   14000d60a:	pop    rax
   14000d60b:	sbb    cl,BYTE PTR [rbx+0x69]
   14000d60e:	call   rdx
   14000d610:	jg     0x14000d60a
   14000d612:	cmc    
   14000d613:	ja     0x14000d614
   14000d615:	stos   DWORD PTR es:[rdi],eax
   14000d616:	cmp    ebp,DWORD PTR [rdi-0x41]
   14000d619:	not    BYTE PTR [rdi]
   14000d61b:	xchg   BYTE PTR [rdi],dh
   14000d61d:	fiadd  WORD PTR [rax]
   14000d61f:	in     eax,dx
   14000d620:	repz movabs al,ds:0x13b3d29ddfbe695b
   14000d62a:	jp     0x14000d6a2
   14000d62c:	adc    DWORD PTR [rip+0x23f6734c],ebp        # 0x163f7497e
   14000d632:	mov    edi,0x83ce6e8c
   14000d637:	xor    BYTE PTR [rdx-0x11],al
   14000d63a:	rex.W loopne 0x14000d63b
   14000d63d:	rex.XB cmc 
   14000d63f:	sar    edi,cl
   14000d641:	xlat   BYTE PTR ds:[rbx]
   14000d642:	xchg   edi,eax
   14000d643:	(bad)  
   14000d644:	(bad)  
   14000d645:	and    ch,BYTE PTR [rbp+0x7f85f3e8]
   14000d64b:	xchg   esi,eax
   14000d64c:	mov    ah,0x90
   14000d64e:	(bad)  
   14000d64f:	fild   WORD PTR [rax-0x4d]
   14000d652:	pop    rbx
   14000d653:	add    al,0x3c
   14000d655:	(bad)  
   14000d656:	(bad)  
   14000d657:	push   rbx
   14000d658:	or     BYTE PTR [rsi+0x54ba4d3],dl
   14000d65e:	adc    ah,BYTE PTR [rbx-0x5]
   14000d661:	mov    esi,0x1f3ff402
   14000d666:	test   eax,0xf767b89e
   14000d66b:	ror    dh,1
   14000d66d:	lea    eax,[rbx-0x3f]
   14000d670:	push   rsi
   14000d671:	push   rbx
   14000d672:	and    al,0x24
   14000d674:	adc    al,BYTE PTR [rbx+0x49fc7ea9]
   14000d67a:	xchg   bh,ch
   14000d67c:	(bad)  
   14000d67d:	adc    DWORD PTR [rdi+rbx*8+0x28],eax
   14000d681:	xor    al,0x66
   14000d683:	movabs al,ds:0x181dc645f4c6ca7a
   14000d68c:	out    dx,al
   14000d68d:	adc    eax,0x6372442c
   14000d692:	and    eax,0x4e472b0e
   14000d697:	(bad)  
   14000d698:	(bad)  
   14000d699:	(bad)  
   14000d69a:	sti    
   14000d69b:	popf   
   14000d69c:	sub    al,0x15
   14000d69e:	movaps xmm5,XMMWORD PTR [rax+rax*4+0x7e2f2065]
   14000d6a6:	add    QWORD PTR [rcx+rax*4+0x7cde7732],rdi
   14000d6ae:	(bad)
   14000d6b1:	lea    ebp,[rbx+0x7e]
   14000d6b4:	jl     0x14000d681
   14000d6b6:	imul   BYTE PTR [rbx-0x33]
   14000d6b9:	rex.WRXB sub rax,0xffffffff8d69205e
   14000d6bf:	in     eax,dx
   14000d6c0:	rex.RX mov ecx,0xcddf4211
   14000d6c6:	adc    bh,al
   14000d6c8:	rex.WR jg 0x14000d6c6
   14000d6cb:	scas   eax,DWORD PTR es:[rdi]
   14000d6cc:	push   rax
   14000d6cd:	mov    ch,0x69
   14000d6cf:	sti    
   14000d6d0:	mov    bl,0x14
   14000d6d2:	push   0x4e08d021
   14000d6d7:	iret   
   14000d6d8:	jbe    0x14000d704
   14000d6da:	mov    edi,0x8f0bb5f6
   14000d6df:	(bad)  
   14000d6e0:	jl     0x14000d6dc
   14000d6e2:	or     ch,BYTE PTR [rcx+0x51]
   14000d6e5:	(bad)  
   14000d6e6:	sub    esp,ebp
   14000d6e8:	int    0x6b
   14000d6ea:	(bad)  
   14000d6eb:	outs   dx,BYTE PTR ds:[rsi]
   14000d6ec:	lods   eax,DWORD PTR ds:[rsi]
   14000d6ed:	mov    dl,0xba
   14000d6ef:	std    
   14000d6f0:	loopne 0x14000d751
   14000d6f2:	or     cl,BYTE PTR [rip+0xfffffffff99aedd8]        # 0x1399bc4d0
   14000d6f8:	mov    WORD PTR [rcx+0x5afdfdf3],es
   14000d6fe:	add    DWORD PTR [rip+0xffffffff816639fb],0xeafb5fe9        # 0xc1671103
   14000d708:	test   DWORD PTR [rdi+0x73e86999],edi
   14000d70e:	add    al,0x2
   14000d710:	rex.X imul eax,DWORD PTR [rip+0x55111284],0x39        # 0x19511e99c
   14000d718:	call   FWORD PTR [rcx+0x77b23f7]
   14000d71e:	rcr    ebx,1
   14000d720:	fiadd  WORD PTR [rcx-0xd53f9f2]
   14000d726:	(bad)  
   14000d727:	push   0xffffffffaec2d121
   14000d72c:	sub    edi,DWORD PTR [rax-0x9]
   14000d72f:	jne    0x14000d76e
   14000d731:	lods   al,BYTE PTR ds:[rsi]
   14000d732:	(bad)  
   14000d733:	in     eax,dx
   14000d734:	jnp    0x14000d7a3
   14000d736:	pop    rdi
   14000d737:	outs   dx,DWORD PTR ds:[rsi]
   14000d738:	mov    eax,0x8cc41816
   14000d73d:	movabs ds:0xc0b899f060f6932e,eax
   14000d746:	rex.RB push r8
   14000d748:	pop    rax
   14000d749:	add    ch,bl
   14000d74b:	mov    cl,0x94
   14000d74d:	imul   BYTE PTR [rdi]
   14000d74f:	jmp    rdi
   14000d751:	(bad)  
   14000d753:	movabs eax,ds:0xd91c5fcee372def7
   14000d75c:	je     0x14000d781
   14000d75e:	mov    ah,0xce
   14000d760:	sub    DWORD PTR [rdx+0x67],0x18026e7f
   14000d767:	mov    eax,0x4ade5d01
   14000d76c:	cmc    
   14000d76d:	fldcw  WORD PTR [rdi+0x33]
   14000d770:	ja     0x14000d761
   14000d772:	rex.RXB mov BYTE PTR [r11-0x59d5092d],r13b
   14000d779:	test   eax,0x3ba3b346
   14000d77e:	mov    edi,0xfb89a5fa
   14000d783:	(bad)  
   14000d784:	rex.WRB mov r13b,0x2e
   14000d787:	(bad)  
   14000d788:	add    al,0x24
   14000d78a:	(bad)  
   14000d78b:	in     eax,dx
   14000d78c:	lahf   
   14000d78d:	mov    DWORD PTR [rdx+rdi*8+0x7d],0x6662ff7f
   14000d795:	out    dx,al
   14000d796:	retf   
   14000d797:	imul   esi,esi,0x7022cc5e
   14000d79d:	scas   eax,DWORD PTR es:[rdi]
   14000d79e:	cdq    
   14000d79f:	pop    rax
   14000d7a0:	ror    DWORD PTR [rbx+riz*1-0x12],0x54
   14000d7a5:	fcomi  st,st(2)
   14000d7a7:	ret    0xae5b
   14000d7aa:	(bad)  
   14000d7ab:	jnp    0x14000d80a
   14000d7ad:	adc    BYTE PTR [rax],dl
   14000d7af:	and    al,BYTE PTR [rbp+0x41424ef9]
   14000d7b5:	addr32 repnz xor al,0xc1
   14000d7b9:	shl    BYTE PTR [rsi],1
   14000d7bb:	jp     0x14000d773
   14000d7bd:	fisttp WORD PTR [rdx-0x6aefcb12]
   14000d7c3:	movabs ds:0x42fa1a54bac0465e,eax
   14000d7cc:	pop    rax
   14000d7cd:	mov    ch,al
   14000d7cf:	cli    
   14000d7d0:	mov    ecx,0xe2753076
   14000d7d5:	int3   
   14000d7d6:	fcomp  QWORD PTR [rax]
   14000d7d8:	fst    DWORD PTR [rcx]
   14000d7da:	(bad)  
   14000d7db:	frstor [rdx+0x21]
   14000d7de:	add    eax,0x1614196
   14000d7e3:	pop    rsp
   14000d7e4:	sbb    al,0x4e
   14000d7e6:	sti    
   14000d7e7:	rex.WXB and r12b,bl
   14000d7ea:	mov    esp,0xae87e87e
   14000d7ef:	fdivr  DWORD PTR [rsi-0x54751325]
   14000d7f5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d7f6:	call   0xdce0b142
   14000d7fb:	fwait
   14000d7fc:	cdq    
   14000d7fd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d7fe:	idiv   DWORD PTR [rdx]
   14000d800:	je     0x14000d865
   14000d802:	sbb    DWORD PTR [rcx-0x2efa0191],0x308479fc
   14000d80c:	rex.B
   14000d80d:	rex.B movabs eax,ds:0x81fcc4f93e0b4235
   14000d817:	(bad)  
   14000d818:	rex.WRX (bad) 
   14000d81a:	(bad)  
   14000d81b:	rex.WB
   14000d81c:	rex.WRB jg 0x14000d7c6
   14000d81f:	std    
   14000d820:	pop    rbp
   14000d821:	mov    al,0x2f
   14000d823:	(bad)  
   14000d824:	cld    
   14000d825:	fisttp QWORD PTR [rdx+0x60]
   14000d828:	sbb    eax,0xfc1f895e
   14000d82d:	push   rdx
   14000d82e:	iret   
   14000d82f:	loopne 0x14000d838
   14000d831:	add    ah,BYTE PTR [rbx]
   14000d833:	int3   
   14000d834:	repz (bad) 
   14000d836:	rex.WB (bad) 
   14000d838:	sbb    al,0xcd
   14000d83a:	jge    0x14000d82e
   14000d83c:	test   eax,0x3deec7e9
   14000d841:	(bad)  
   14000d843:	mov    ch,BYTE PTR [rcx]
   14000d845:	adc    BYTE PTR [rdx-0x39],cl
   14000d848:	(bad)  
   14000d849:	enter  0xc91e,0xd4
   14000d84d:	(bad)  
   14000d84e:	(bad)  
   14000d84f:	adc    al,0x21
   14000d851:	add    bl,al
   14000d853:	clc    
   14000d854:	(bad)  
   14000d855:	movabs ds:0x13734847c4e911f1,eax
   14000d85e:	add    eax,0x6656d9af
   14000d863:	jrcxz  0x14000d83f
   14000d865:	(bad)  
   14000d866:	cmp    eax,DWORD PTR [rcx-0x2ffa73df]
   14000d86c:	sbb    DWORD PTR [rcx],0xffffffb9
   14000d86f:	call   0xc27a2772
   14000d874:	sub    ch,BYTE PTR [rdx+rax*4]
   14000d877:	and    eax,0xd2c01050
   14000d87c:	adc    BYTE PTR [rcx+0xff3f825],bh
   14000d882:	mov    esp,0x369b0de7
   14000d887:	mov    ds,esi
   14000d889:	adc    esi,esp
   14000d88b:	ins    DWORD PTR es:[rdi],dx
   14000d88c:	test   dh,dl
   14000d88e:	pop    rcx
   14000d88f:	xchg   edx,eax
   14000d890:	xchg   ecx,eax
   14000d891:	sub    al,0x3e
   14000d893:	or     esp,esi
   14000d895:	pop    rsi
   14000d896:	test   DWORD PTR [rsi+0x5f23dcc4],esp
   14000d89c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d89d:	jne    0x14000d88d
   14000d89f:	mov    al,0x19
   14000d8a1:	or     ch,BYTE PTR [rbx]
   14000d8a3:	test   BYTE PTR [rip+0x270704b5],dh        # 0x16707dd5e
   14000d8a9:	fist   DWORD PTR [rbx-0x1]
   14000d8ac:	icebp  
   14000d8ad:	fsubp  st(1),st
   14000d8af:	jge    0x14000d855
   14000d8b1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d8b2:	mov    edi,0x62370023
   14000d8b7:	scas   eax,DWORD PTR es:[rdi]
   14000d8b8:	rex.WX sbb bpl,spl
   14000d8bb:	jae    0x14000d83f
   14000d8bd:	xchg   esp,eax
   14000d8be:	(bad)  
   14000d8bf:	mov    edx,0xe9a1e5c3
   14000d8c4:	mov    edx,0x4e7b8f3d
   14000d8c9:	lahf   
   14000d8ca:	add    al,0x5a
   14000d8cc:	cwde   
   14000d8cd:	iret   
   14000d8ce:	xor    eax,0xe2ffcc0f
   14000d8d3:	out    0x4f,eax
   14000d8d5:	inc    ebx
   14000d8d7:	stc    
   14000d8d8:	jns    0x14000d94f
   14000d8da:	pop    rsp
   14000d8db:	rex.WX xchg rbx,rax
   14000d8dd:	or     eax,0x17530210
   14000d8e2:	adc    DWORD PTR [rbp-0x68],edx
   14000d8e5:	jnp    0x14000d8cb
   14000d8e7:	lahf   
   14000d8e8:	nop
   14000d8e9:	sbb    DWORD PTR [rbx],0x60
   14000d8ec:	std    
   14000d8ed:	frstor [rsi+riz*2+0x41]
   14000d8f1:	push   rdx
   14000d8f2:	loopne 0x14000d958
   14000d8f4:	sti    
   14000d8f5:	fcmovbe st,st(1)
   14000d8f7:	sub    BYTE PTR [rbx-0x49],0xf4
   14000d8fb:	fidiv  WORD PTR [rdi+rdx*8+0x4d]
   14000d8ff:	fwait
   14000d900:	outs   dx,DWORD PTR ds:[rsi]
   14000d901:	in     eax,0xd2
   14000d903:	rex.WB movabs al,ds:0x837918b004141740
   14000d90d:	ds jno 0x14000d911
   14000d910:	mov    dh,0x6d
   14000d912:	(bad)  
   14000d913:	mov    ecx,0x9d8efb67
   14000d918:	mov    ebp,0xcd10c384
   14000d91d:	xchg   ebx,eax
   14000d91e:	cli    
   14000d91f:	cld    
   14000d920:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d921:	and    al,0xd0
   14000d923:	jg     0x14000d930
   14000d925:	push   rcx
   14000d926:	gs (bad) 
   14000d928:	stc    
   14000d929:	out    dx,eax
   14000d92a:	inc    BYTE PTR [rip+0xffffffffa2994752]        # 0xe29a2082
   14000d930:	rex sub eax,0xc8fd7f51
   14000d936:	int3   
   14000d937:	xor    ebx,DWORD PTR [rax+0x10271e22]
   14000d93d:	cs int 0x37
   14000d940:	(bad)  
   14000d941:	and    DWORD PTR [rbp+0x2e6fdd6e],eax
   14000d947:	div    DWORD PTR [rsi]
   14000d949:	pop    rax
   14000d94a:	stc    
   14000d94b:	addr32 jae 0x14000d91d
   14000d94e:	jmp    0x14000d98e
   14000d950:	or     DWORD PTR [rbx-0x60cf2bf5],0x73
   14000d957:	out    dx,al
   14000d958:	repz rex.WRXB xlat BYTE PTR ds:[rbx]
   14000d95b:	ds sub eax,0x69144f5c
   14000d961:	(bad)  
   14000d962:	add    esp,DWORD PTR [rdi+rcx*2-0x40]
   14000d966:	hlt    
   14000d967:	(bad)  
   14000d968:	rex.W fsubr QWORD PTR ds:[rbx+riz*4+0x7ad6be37]
   14000d971:	add    dl,al
   14000d973:	xor    BYTE PTR [rbx+0x4a56d926],cl
   14000d979:	repz neg ch
   14000d97c:	cmp    eax,0x69bade5
   14000d981:	outs   dx,DWORD PTR ds:[rsi]
   14000d982:	(bad)  
   14000d983:	or     BYTE PTR [rdi+0x1f],bh
   14000d986:	xchg   BYTE PTR [rax],al
   14000d988:	fmul   st(0),st
   14000d98a:	int3   
   14000d98b:	fdiv   st(0),st
   14000d98d:	imul   esp,DWORD PTR [rax+0x28ae8420],0x8
   14000d994:	loopne 0x14000d978
   14000d996:	nop
   14000d997:	rex
   14000d998:	lock mov ?,WORD PTR [rdi]
   14000d99b:	in     eax,dx
   14000d99c:	(bad)  
   14000d99d:	fidivr WORD PTR [rax+0x435df87e]
   14000d9a3:	imul   esi,DWORD PTR [rsi+0x663ceb42],0xffffffc4
   14000d9aa:	lahf   
   14000d9ab:	std    
   14000d9ac:	lods   eax,DWORD PTR ds:[rsi]
   14000d9ad:	cmp    edx,DWORD PTR [rdx]
   14000d9af:	or     bh,dl
   14000d9b1:	movabs al,ds:0x55aa13fe8f2a4183
   14000d9ba:	add    eax,0x7fd0cda1
   14000d9bf:	fwait
   14000d9c0:	cli    
   14000d9c1:	fidiv  DWORD PTR [rbx-0x54]
   14000d9c4:	jle    0x14000d9c0
   14000d9c6:	retf   
   14000d9c7:	(bad)  
   14000d9c8:	stos   DWORD PTR es:[rdi],eax
   14000d9c9:	(bad)  
   14000d9ca:	xor    ecx,edi
   14000d9cc:	jl     0x14000d975
   14000d9ce:	std    
   14000d9cf:	fnstsw WORD PTR [rax]
   14000d9d1:	jge    0x14000d9fa
   14000d9d3:	cld    
   14000d9d4:	jns    0x14000d975
   14000d9d6:	div    BYTE PTR [rdx+0x17]
   14000d9d9:	jle    0x14000d962
   14000d9db:	outs   dx,BYTE PTR ds:[rsi]
   14000d9dc:	and    al,0xe0
   14000d9de:	fadd   QWORD PTR [rcx]
   14000d9e0:	jg     0x14000d9be
   14000d9e2:	rex or eax,0xf7f1fca8
   14000d9e8:	iret   
   14000d9e9:	in     eax,dx
   14000d9ea:	cmp    DWORD PTR [rdx],edi
   14000d9ec:	adc    DWORD PTR [rdi],edi
   14000d9ee:	and    al,BYTE PTR [rbx]
   14000d9f0:	imul   edi,DWORD PTR [rdx],0x83259a3
   14000d9f6:	jp     0x14000d9fa
   14000d9f8:	out    dx,ax
   14000d9fa:	sti    
   14000d9fb:	sbb    BYTE PTR [rdx-0x23],dh
   14000d9fe:	xor    eax,0xb6adfee8
   14000da03:	(bad)  
   14000da04:	movabs eax,ds:0xbedc1012c600c24c
   14000da0d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000da0e:	int3   
   14000da0f:	lock (bad) 
   14000da11:	iret   
   14000da12:	cmc    
   14000da13:	ret    
   14000da14:	and    DWORD PTR [rbp+0x17],0xc
   14000da18:	in     al,dx
   14000da19:	and    eax,0x9e7c0c1b
   14000da1e:	jae    0x14000d9c1
   14000da20:	mov    ebp,0x401050ba
   14000da25:	ja     0x14000da1f
   14000da27:	fiadd  DWORD PTR [rbx+0x2]
   14000da2a:	repnz cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000da2c:	fbstp  TBYTE PTR [rbx-0x19]
   14000da2f:	pop    rbx
   14000da30:	mov    dh,0x6c
   14000da32:	sbb    al,0xb9
   14000da34:	mov    ss,edx
   14000da36:	sub    BYTE PTR [rsi+riz*1+0x5f6fc273],dh
   14000da3d:	(bad)  
   14000da3e:	outs   dx,DWORD PTR ds:[rsi]
   14000da3f:	rex.B (bad) 
   14000da41:	imul   edx,DWORD PTR [rdi+rsi*8+0x7e],0x5
   14000da46:	lods   eax,DWORD PTR ds:[rsi]
   14000da47:	and    dl,BYTE PTR [rbx-0x2]
   14000da4a:	push   0x6b
   14000da4c:	(bad)  
   14000da4d:	xor    al,0x4a
   14000da4f:	push   rcx
   14000da51:	jge    0x14000da26
   14000da53:	jnp    0x14000da86
   14000da55:	ret    0xa2ef
   14000da58:	jrcxz  0x14000da08
   14000da5a:	cmp    DWORD PTR [rdi-0x29141155],eax
   14000da60:	icebp  
   14000da61:	mov    bh,0xe5
   14000da64:	sub    bh,ah
   14000da66:	(bad)  
   14000da67:	rex.WXB
   14000da68:	or     bh,BYTE PTR gs:[rbx+rbp*1-0x40]
   14000da6d:	xor    eax,0xf07ca917
   14000da72:	sti    
   14000da73:	mov    bl,0x1f
   14000da75:	and    eax,DWORD PTR [rax]
   14000da77:	sub    DWORD PTR [rip+0x20444a52],esp        # 0x1604524cf
   14000da7d:	or     BYTE PTR [rdx+0x4],bh
   14000da80:	lea    eax,[rbx]
   14000da82:	fbstp  TBYTE PTR [rdx]
   14000da84:	sbb    eax,0x62ded693
   14000da89:	inc    BYTE PTR [rdx]
   14000da8b:	xchg   esi,eax
   14000da8c:	add    al,0x92
   14000da8e:	call   0xed1f5d3a
   14000da93:	jns    0x14000da82
   14000da95:	xchg   ebp,eax
   14000da96:	jge    0x14000da73
   14000da98:	outs   dx,BYTE PTR ds:[rsi]
   14000da99:	fdivr  QWORD PTR [rbp+0x58c36fe]
   14000da9f:	rol    BYTE PTR [rdi-0x2928ffdf],1
   14000daa5:	sub    al,0x6f
   14000daa7:	add    DWORD PTR [rax+rbp*8],edx
   14000daaa:	(bad)  
   14000daab:	(bad)  
   14000daac:	add    BYTE PTR [rdx+0x49ff9bc8],dh
   14000dab2:	fwait
   14000dab3:	lods   al,BYTE PTR ds:[rsi]
   14000dab4:	rcl    DWORD PTR [rcx-0x2591c842],1
   14000daba:	mov    esp,0x71a5f8c3
   14000dabf:	(bad)  
   14000dac0:	int3   
   14000dac1:	push   rsp
   14000dac2:	pop    rax
   14000dac3:	out    dx,al
   14000dac4:	mov    ch,0x77
   14000dac6:	cmp    esi,DWORD PTR [rbp+0x6aa1f7c3]
   14000dacc:	push   rbx
   14000dacd:	or     BYTE PTR [rip+0x1364a9b],bl        # 0x14137256e
   14000dad3:	pop    rdx
   14000dad4:	or     dh,dh
   14000dad6:	pushf  
   14000dad7:	ins    BYTE PTR es:[rdi],dx
   14000dad8:	pushf  
   14000dad9:	cmp    al,0x30
   14000dadb:	fstp   DWORD PTR [rsi+0xbff98c1]
   14000dae1:	fs cmp esi,ebx
   14000dae4:	clc    
   14000dae5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000dae6:	mov    ebp,0xbf778d4b
   14000daeb:	fadd   QWORD PTR [rbp+0x131f21df]
   14000daf1:	lock lods eax,DWORD PTR ds:[rsi]
   14000daf3:	add    DWORD PTR [rdi+0x9],esp
   14000daf6:	xor    al,0x80
   14000daf8:	(bad)  
   14000daf9:	xlat   BYTE PTR ds:[rbx]
   14000dafa:	test   bh,0x1c
   14000dafd:	cmp    bh,BYTE PTR [rdx+0x41]
   14000db00:	(bad)  
   14000db01:	in     al,dx
   14000db02:	rex.R push rsi
   14000db04:	rex.WX xchg rbx,rax
   14000db06:	(bad)  
   14000db07:	(bad)  
   14000db08:	push   rcx
   14000db09:	test   edx,ebx
   14000db0b:	(bad)  
   14000db0c:	out    dx,eax
   14000db0d:	and    esi,DWORD PTR [rsi-0x7eac9a24]
   14000db13:	fsub   QWORD PTR ss:[rdx-0x3e9a885b]
   14000db1a:	int    0x9b
   14000db1c:	retf   
   14000db1d:	ins    BYTE PTR es:[rdi],dx
   14000db1e:	sbb    ch,ch
   14000db20:	mov    edi,0x406eee96
   14000db25:	(bad)  
   14000db26:	outs   dx,DWORD PTR ds:[rsi]
   14000db27:	or     DWORD PTR [rip+0x41422c19],eax        # 0x181430746
   14000db2d:	add    bl,cl
   14000db2f:	ret    
   14000db30:	gs add dl,al
   14000db33:	or     eax,0xd6df06eb
   14000db38:	cmp    esi,DWORD PTR [rax-0x5bec25ff]
   14000db3e:	shl    DWORD PTR [rcx+0x7b],cl
   14000db41:	ret    0xda5f
   14000db44:	add    cl,BYTE PTR [rdx+0x50]
   14000db47:	jg     0x14000db2f
   14000db49:	jmp    0x14000db1b
   14000db4b:	stos   BYTE PTR es:[rdi],al
   14000db4c:	(bad)  
   14000db4d:	xor    al,0xd2
   14000db4f:	(bad)  
   14000db50:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000db51:	sbb    edx,ebp
   14000db53:	div    DWORD PTR [rdi-0x3be03171]
   14000db59:	rex.R (bad) 
   14000db5b:	imul   ebx,DWORD PTR [rax],0x2
   14000db5e:	jo     0x14000daeb
   14000db60:	sbb    eax,esi
   14000db62:	fwait
   14000db63:	(bad)  
   14000db64:	repnz pop rcx
   14000db66:	mov    edx,eax
   14000db68:	out    dx,eax
   14000db69:	shr    BYTE PTR [rip+0x78f9830],1        # 0x14790739f
   14000db6f:	(bad)  
   14000db70:	add    DWORD PTR [rbp-0xc1c331],0x84032159
   14000db7a:	or     al,0x12
   14000db7c:	push   rdi
   14000db7d:	and    ah,ch
   14000db7f:	xchg   ecx,eax
   14000db80:	push   rsp
   14000db81:	(bad)  
   14000db82:	(bad)  
   14000db83:	jnp    0x14000db69
   14000db85:	loopne 0x14000dbad
   14000db87:	call   0x197493c67
   14000db8c:	mov    eax,0x98b8b24
   14000db91:	push   0xffffffffc3d2df6e
   14000db96:	rex jg 0x14000db82
   14000db99:	sub    cl,BYTE PTR [rcx+rax*1]
   14000db9c:	cmp    BYTE PTR [rdi],dl
   14000db9e:	rcr    BYTE PTR [rcx+0x1],0x7e
   14000dba2:	sbb    esp,DWORD PTR [rsi+0x20a04b02]
   14000dba8:	sub    dh,0xc8
   14000dbab:	mov    esp,?
   14000dbad:	sti    
   14000dbae:	loopne 0x14000dbab
   14000dbb0:	jg     0x14000dbaa
   14000dbb2:	out    dx,al
   14000dbb3:	mov    ch,0x23
   14000dbb5:	std    
   14000dbb6:	xlat   BYTE PTR ds:[rbx]
   14000dbb7:	push   rbx
   14000dbb8:	pop    rdx
   14000dbb9:	add    ebp,DWORD PTR [rbp-0x6b96d97]
   14000dbbf:	or     DWORD PTR ds:[rsi+rbx*2],ecx
   14000dbc3:	rex.RXB jnp 0x14000dc28
   14000dbc6:	mov    esi,cs
   14000dbc8:	in     al,0x9
   14000dbca:	je     0x14000dba8
   14000dbcc:	add    DWORD PTR [rip+0xffffffffc05f4ccd],ebp        # 0x10060289f
   14000dbd2:	js     0x14000db89
   14000dbd4:	xor    edi,DWORD PTR [rdi-0x1]
   14000dbd7:	pop    rax
   14000dbd8:	std    
   14000dbd9:	add    dl,BYTE PTR [rsi-0xd]
   14000dbdc:	jns    0x14000db69
   14000dbde:	sbb    edx,ecx
   14000dbe0:	xlat   BYTE PTR ds:[rbx]
   14000dbe1:	sub    eax,0x909abfd7
   14000dbe6:	(bad)  
   14000dbe7:	(bad)  
   14000dbe8:	jb     0x14000dbd3
   14000dbea:	sar    edx,0x87
   14000dbed:	(bad)  
   14000dbee:	cmp    bh,bh
   14000dbf0:	in     al,0x42
   14000dbf2:	pop    rbp
   14000dbf3:	lea    ebx,[rbx]
   14000dbf5:	push   rcx
   14000dbf6:	xor    eax,0x82ca200c
   14000dbfb:	mov    eax,0x7e688676
   14000dc00:	or     bh,BYTE PTR [rbp+0x793b26e6]
   14000dc06:	mov    DWORD PTR [rax+0xa],ecx
   14000dc09:	(bad)  
   14000dc0a:	pop    rsp
   14000dc0b:	test   eax,0xb98aaf70
   14000dc10:	ins    DWORD PTR es:[rdi],dx
   14000dc11:	rex.RXB push QWORD PTR [r14+0x7f59ae9b]
   14000dc18:	sub    eax,0x25e802c6
   14000dc1d:	fwait
   14000dc1e:	or     DWORD PTR [rax],ebp
   14000dc20:	jle    0x14000dc01
   14000dc22:	(bad)  
   14000dc23:	rex.B icebp 
   14000dc25:	add    eax,0x899bc8a5
   14000dc2a:	or     DWORD PTR [rcx],ecx
   14000dc2c:	pop    rsp
   14000dc2d:	mov    cl,0x69
   14000dc2f:	in     al,0x8e
   14000dc31:	sbb    r14,QWORD PTR [r15-0x1192f780]
   14000dc38:	pop    rdi
   14000dc39:	(bad)  
   14000dc3a:	es adc edx,0xbe07aa66
   14000dc41:	rex.WRB pop r12
   14000dc43:	fwait
   14000dc44:	rex.RX (bad) 
   14000dc46:	xor    cl,BYTE PTR [rcx+0x6f]
   14000dc49:	or     DWORD PTR [rcx],eax
   14000dc4b:	(bad)  
   14000dc4c:	jl     0x14000dbf6
   14000dc4e:	jle    0x14000dbd2
   14000dc50:	push   rsp
   14000dc51:	jmp    0x14000dc0c
   14000dc53:	xchg   BYTE PTR [rbx+0x54bfd72e],bl
   14000dc59:	shr    BYTE PTR [rdi-0x5b],0x6a
   14000dc5d:	jg     0x14000dbe6
   14000dc5f:	outs   dx,BYTE PTR ds:[rsi]
   14000dc60:	lahf   
   14000dc61:	and    ebx,DWORD PTR [rdi]
   14000dc63:	sbb    BYTE PTR [rdx+rax*1-0x4b],ch
   14000dc67:	xchg   DWORD PTR [rdi-0x516ea0b9],ecx
   14000dc6d:	push   rcx
   14000dc6e:	mov    dl,0x4
   14000dc70:	and    DWORD PTR [rbx],eax
   14000dc72:	(bad)  
   14000dc73:	push   rdx
   14000dc74:	enter  0x93c2,0x5f
   14000dc78:	rex.R mov esi,gs
   14000dc7b:	add    r11,QWORD PTR es:[r8+0x4b]
   14000dc80:	rex or edi,DWORD PTR [rbx+0x1b5eae68]
   14000dc87:	mov    dl,0x61
   14000dc89:	ins    DWORD PTR es:[rdi],dx
   14000dc8a:	call   QWORD PTR [rbp-0x5c]
   14000dc8d:	and    BYTE PTR cs:[rbx],0x80
   14000dc91:	jl     0x14000dcaf
   14000dc93:	movabs al,ds:0x48ee8020a0ba04b0
   14000dc9c:	(bad)  
   14000dc9d:	jg     0x14000dc1f
   14000dc9f:	in     al,dx
   14000dca0:	sub    DWORD PTR [rdi-0x22e65149],eax
   14000dca6:	add    BYTE PTR [rbp-0x5036b387],bl
   14000dcac:	(bad)  
   14000dcad:	xchg   edx,eax
   14000dcae:	rex rol BYTE PTR [rdi-0x3865fda],1
   14000dcb5:	(bad)  
   14000dcb6:	rex.R cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000dcb8:	mov    es,WORD PTR [rsi-0x5d]
   14000dcbb:	push   rcx
   14000dcbc:	mov    eax,0xf37fde5e
   14000dcc1:	enter  0x11cc,0xb2
   14000dcc5:	add    al,0xe0
   14000dcc7:	fidiv  DWORD PTR [rsi+0x39]
   14000dcca:	add    cl,al
   14000dccc:	(bad)
   14000dcd0:	ret    0xd0ef
   14000dcd3:	sub    eax,0xab3ee01e
   14000dcd8:	mov    bl,0x2
   14000dcda:	sbb    bh,BYTE PTR [rdi+0x7e]
   14000dcdd:	out    dx,eax
   14000dcde:	stc    
   14000dcdf:	outs   dx,DWORD PTR ds:[rsi]
   14000dce0:	or     BYTE PTR [rcx+0x1a],ch
   14000dce3:	xchg   BYTE PTR [rax-0x70bbad47],bh
   14000dce9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000dcea:	jne    0x14000dcd6
   14000dcec:	or     DWORD PTR [rdx+0x29a757b5],eax
   14000dcf2:	rex ins DWORD PTR es:[rdi],dx
   14000dcf4:	sub    DWORD PTR [edx+0x5b],eax
   14000dcf8:	stos   BYTE PTR es:[rdi],al
   14000dcf9:	adc    al,0x5c
   14000dcfb:	mov    bl,0xbe
   14000dcfd:	xchg   DWORD PTR [rcx-0x73890d7f],esp
   14000dd03:	div    BYTE PTR [rdi-0x7f]
   14000dd06:	rcl    BYTE PTR [rdx],0x4b
   14000dd09:	xchg   edi,eax
   14000dd0a:	add    eax,0xa1e04417
   14000dd0f:	and    BYTE PTR [rax+0x1491a5],al
   14000dd15:	lods   eax,DWORD PTR ds:[rsi]
   14000dd16:	(bad)  
   14000dd17:	in     eax,dx
   14000dd18:	mov    ebx,0x3a186083
   14000dd1d:	xor    ebp,DWORD PTR [rcx-0x2fdb0420]
   14000dd23:	jnp    0x14000dd5a
   14000dd25:	shl    esp,1
   14000dd27:	or     DWORD PTR [rbx+rdi*2+0x6],esi
   14000dd2b:	test   BYTE PTR [rdx-0x60],al
   14000dd2e:	xchg   ecx,eax
   14000dd2f:	and    BYTE PTR [rsp+r11*1],spl
   14000dd33:	(bad)  
   14000dd34:	ins    BYTE PTR es:[rdi],dx
   14000dd35:	rex.WRB
   14000dd36:	rex.WR (bad) 
   14000dd38:	and    dl,BYTE PTR [rdi]
   14000dd3a:	call   0x1a770eeb2
   14000dd3f:	cli    
   14000dd40:	pop    rdi
   14000dd41:	rex.WX movsxd rcx,DWORD PTR [rbx+0xadf04d5]
   14000dd48:	rex.W loop 0x14000dd4c
   14000dd4b:	rex.WRXB pushf 
   14000dd4d:	pop    rsi
   14000dd4e:	cmp    BYTE PTR [rdi],bh
   14000dd50:	mov    ebp,0xfda311c0
   14000dd55:	or     eax,0xa050c811
   14000dd5a:	push   0xffffffffffffffa7
   14000dd5c:	jmp    0x143d183b5
   14000dd61:	push   rdi
   14000dd62:	and    al,0xc6
   14000dd64:	xchg   esi,eax
   14000dd65:	mov    ecx,0xe007738a
   14000dd6a:	mov    edx,0x7b7a2575
   14000dd6f:	ret    0x182d
   14000dd72:	in     eax,dx
   14000dd73:	out    dx,eax
   14000dd74:	out    0x30,al
   14000dd76:	lock jmp 0x14000dd7a
   14000dd79:	mov    bh,BYTE PTR [rax]
   14000dd7b:	shl    BYTE PTR [rdx],0x28
   14000dd7e:	or     BYTE PTR [rax+0x31],ah
   14000dd81:	jl     0x14000dd30
   14000dd83:	and    DWORD PTR [rdi-0x1d],edi
   14000dd86:	out    0xdf,eax
   14000dd88:	mov    esi,0xef70ed6b
   14000dd8d:	xchg   ebp,eax
   14000dd8e:	test   BYTE PTR [rbx-0x76dc6130],al
   14000dd94:	cli    
   14000dd95:	jnp    0x14000ddbb
   14000dd97:	movabs al,ds:0x2d44419ee7da51c3
   14000dda0:	(bad)  
   14000dda1:	jb     0x14000de03
   14000dda3:	sbb    bl,BYTE PTR [rdi-0x24]
   14000dda6:	(bad)  
   14000dda7:	push   rsi
   14000dda8:	sbb    esp,DWORD PTR [rdi]
   14000ddaa:	xor    eax,0xbacefd77
   14000ddaf:	stc    
   14000ddb0:	sar    DWORD PTR [rbp-0x55],1
   14000ddb3:	rex.WRB sti 
   14000ddb5:	cmp    ebp,DWORD PTR [riz*2-0x7a359bfb]
   14000ddbc:	(bad)  
   14000ddbd:	sahf   
   14000ddbe:	(bad)  
   14000ddbf:	(bad)  
   14000ddc0:	es adc dh,dl
   14000ddc3:	add    eax,0xc2981100
   14000ddc8:	movabs al,ds:0x5be3d467a0a7a9d6
   14000ddd1:	popf   
   14000ddd2:	(bad)  
   14000ddd3:	add    al,0x10
   14000ddd5:	adc    BYTE PTR [rdi],dh
   14000ddd7:	and    esi,DWORD PTR [rsi+0x6f]
   14000ddda:	out    dx,al
   14000dddb:	(bad)  [rax+0x2390f36d]
   14000dde1:	add    edi,edx
   14000dde3:	mov    al,0xa5
   14000dde5:	sbb    BYTE PTR [rax],bl
   14000dde7:	je     0x14000ddf2
   14000dde9:	sub    BYTE PTR [rax],cl
   14000ddeb:	shl    BYTE PTR [rax+0x49],0xff
   14000ddef:	dec    edx
   14000ddf1:	sbb    eax,0xf5f757a3
   14000ddf6:	or     al,0x86
   14000ddf8:	enter  0x883e,0xaa
   14000ddfc:	mov    dh,0xe4
   14000ddfe:	xlat   BYTE PTR ds:[rbx]
   14000ddff:	(bad)  
   14000de00:	add    DWORD PTR [rax-0x46],edx
   14000de03:	rex.R out 0xfc,eax
   14000de06:	add    DWORD PTR [rbx+rbp*4-0x72],edx
   14000de0a:	adc    al,0x36
   14000de0c:	jmp    FWORD PTR [rdi+0x2f]
   14000de0f:	je     0x14000de00
   14000de11:	mov    edx,edi
   14000de13:	pop    rcx
   14000de14:	shr    dh,cl
   14000de16:	mov    esp,0x172f1b7e
   14000de1b:	clc    
   14000de1c:	jnp    0x14000ddd3
   14000de1e:	or     eax,0x2089f160
   14000de23:	ret    0x1c8e
   14000de26:	jl     0x14000de10
   14000de28:	rex.R jrcxz 0x14000de8c
   14000de2b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000de2c:	add    BYTE PTR [rax+0x42],0x60
   14000de30:	add    ch,BYTE PTR [rax+0x1ed25941]
   14000de36:	jg     0x14000de3e
   14000de38:	xor    DWORD PTR [rax-0x33d624df],edi
   14000de3e:	mov    BYTE PTR [rsp+rsi*4],0x12
   14000de42:	push   0x5a36d8ad
   14000de47:	(bad)  
   14000de48:	(bad)  
   14000de49:	lods   eax,DWORD PTR ds:[rsi]
   14000de4a:	jmp    0x1459b2b2a
   14000de4f:	lock sub eax,0x60882800
   14000de55:	rex.WB adc al,0x4
   14000de58:	mov    al,0x34
   14000de5a:	add    al,0x20
   14000de5c:	xchg   DWORD PTR [rdi],eax
   14000de5e:	jp     0x14000de0e
   14000de60:	sbb    al,0x59
   14000de62:	mov    bl,0xc6
   14000de64:	or     bh,BYTE PTR [rdi+0x48e3ec1d]
   14000de6a:	rex imul esp,DWORD PTR [rax-0x2d9322f9],0x110470b9
   14000de75:	mov    ch,0xd0
   14000de77:	sbb    ah,BYTE PTR [rsi+rdx*1-0x8fda626]
   14000de7e:	sbb    eax,0xfa924faf
   14000de83:	mov    ebx,0x589bf16e
   14000de88:	mov    esp,0x3cff4c1a
   14000de8d:	jl     0x14000dee6
   14000de8f:	rex add DWORD PTR [rbp+0x63ebefff],ebx
   14000de96:	rex.WRXB movabs r9,0xc406f444abcdd259
   14000dea0:	rol    DWORD PTR [rdi],cl
   14000dea2:	xchg   ecx,eax
   14000dea3:	ret    
   14000dea4:	fucomi st,st(5)
   14000dea6:	sbb    DWORD PTR [rsi],esi
   14000dea8:	sbb    edx,DWORD PTR [rax-0x3f64fa6c]
   14000deae:	loopne 0x14000df18
   14000deb0:	scas   eax,DWORD PTR es:[rdi]
   14000deb1:	fs push 0xffffffff9481bca0
   14000deb7:	add    BYTE PTR [rsi-0x2bafece6],dl
   14000debd:	add    esp,esp
   14000debf:	push   rax
   14000dec0:	adc    al,al
   14000dec2:	(bad)  
   14000dec3:	add    eax,DWORD PTR fs:[rax-0x1f049f5b]
   14000deca:	ror    BYTE PTR [rax-0x7958ffdf],0x12
   14000ded1:	adc    cl,BYTE PTR [rax+0x68995589]
   14000ded7:	out    dx,al
   14000ded8:	sub    al,0x71
   14000deda:	jne    0x14000dee2
   14000dedc:	lods   eax,DWORD PTR ds:[rsi]
   14000dedd:	cmp    cl,BYTE PTR [rax+0x14]
   14000dee0:	add    al,0x42
   14000dee2:	enter  0x7240,0xe8
   14000dee6:	rex.X jnp 0x14000de7b
   14000dee9:	in     al,dx
   14000deea:	sbb    BYTE PTR [rax],0x5f
   14000deed:	repz ja 0x14000dedb
   14000def0:	loope  0x14000dea9
   14000def2:	fimul  DWORD PTR [rcx-0x6f8ea460]
   14000def8:	mov    eax,DWORD PTR [rip+0xfffffffff22ae7b4]        # 0x1322bc6b2
   14000defe:	mov    BYTE PTR [rbp+rdi*1+0x28d3b103],dh
   14000df05:	stos   BYTE PTR es:[rdi],al
   14000df06:	push   0x5913b881
   14000df0b:	mov    bl,0xdf
   14000df0d:	(bad)  
   14000df0e:	add    dl,BYTE PTR [rcx]
   14000df10:	leave  
   14000df11:	adc    eax,0x1b6cd6b4
   14000df16:	cs rcr ebx,1
   14000df19:	adc    ebp,DWORD PTR [rsi+0x3e7e08c5]
   14000df1f:	or     eax,0x65ff6858
   14000df24:	adc    BYTE PTR [rsi+0x19700fd2],bh
   14000df2a:	rex.XB add BYTE PTR [r10],sil
   14000df2d:	or     ah,ah
   14000df2f:	xchg   esi,eax
   14000df30:	mov    al,0x3c
   14000df32:	add    BYTE PTR [rcx-0x23],dl
   14000df35:	data16 add BYTE PTR [rsi+rsi*2+0x49],bl
   14000df3a:	movabs eax,ds:0x9d50170bc536c9b5
   14000df43:	(bad)  
   14000df44:	(bad)  
   14000df45:	fmul   st,st(4)
   14000df47:	loopne 0x14000def2
   14000df49:	mov    ch,0x16
   14000df4b:	rex.X mov BYTE PTR [rcx],bpl
   14000df4e:	adc    edi,esp
   14000df50:	jae    0x14000df27
   14000df52:	outs   dx,DWORD PTR ds:[rsi]
   14000df53:	stc    
   14000df54:	fnstcw WORD PTR [rdx+0x2f]
   14000df57:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000df58:	stc    
   14000df59:	pop    rdi
   14000df5a:	or     eax,0x1e3f5a3f
   14000df5f:	shr    BYTE PTR [rsi+0x4eb0b9b7],1
   14000df65:	mov    ch,BYTE PTR [rbx-0x5c]
   14000df68:	int    0xf3
   14000df6a:	imul   ebp,DWORD PTR [rcx-0x6976da70],0xfffffffd
   14000df71:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000df72:	add    BYTE PTR [r11-0x66],sil
   14000df76:	jbe    0x14000dfdb
   14000df78:	add    eax,DWORD PTR [rax+0x2e5040be]
   14000df7e:	(bad)  
   14000df7f:	and    ebx,DWORD PTR [rax]
   14000df81:	loope  0x14000dffa
   14000df83:	out    0x7f,al
   14000df85:	mov    bh,0x34
   14000df87:	loopne 0x14000dff3
   14000df89:	(bad)  
   14000df8a:	fsub   st,st(7)
   14000df8c:	mov    edx,es
   14000df8e:	add    ch,al
   14000df90:	mov    fs,WORD PTR [rsi+rax*1]
   14000df93:	xor    BYTE PTR [rax+rdx*2],bh
   14000df96:	fimul  WORD PTR [rsi+0x61b885ec]
   14000df9c:	jne    0x14000dff5
   14000df9e:	pushf  
   14000df9f:	in     al,0xa4
   14000dfa1:	test   DWORD PTR [rsi+0x68],edx
   14000dfa4:	and    DWORD PTR [rcx-0x6ccf59e9],ecx
   14000dfaa:	jns    0x14000e016
   14000dfac:	add    al,0x2
   14000dfae:	(bad)  
   14000dfaf:	retfw  0xe7d4
   14000dfb3:	stos   BYTE PTR es:[rdi],al
   14000dfb4:	jno    0x14000df43
   14000dfb6:	ins    BYTE PTR es:[rdi],dx
   14000dfb7:	icebp  
   14000dfb8:	retf   
   14000dfb9:	jb     0x14000dfc0
   14000dfbb:	(bad)  
   14000dfbc:	stos   DWORD PTR es:[rdi],eax
   14000dfbd:	cmp    eax,0xf3eddd5f
   14000dfc2:	gs sub al,0x81
   14000dfc5:	pop    rdx
   14000dfc6:	rex.WXB pop r14
   14000dfc8:	or     bpl,BYTE PTR [rdi+0x70]
   14000dfcc:	nop
   14000dfcd:	xor    al,0x71
   14000dfcf:	xor    BYTE PTR [rbx+0x47],0x6c
   14000dfd3:	jg     0x14000dfd5
   14000dfd5:	movsxd esi,esi
   14000dfd7:	jnp    0x14000dfba
   14000dfd9:	(bad)  
   14000dfda:	shl    BYTE PTR [rax+0x18484d63],1
   14000dfe0:	enter  0xd241,0xf9
   14000dfe4:	sbb    bl,BYTE PTR [rcx+rax*1]
   14000dfe7:	adc    al,0x59
   14000dfe9:	or     BYTE PTR [rbx-0x4dff4f60],0xc8
   14000dff0:	inc    DWORD PTR [rax-0x3b]
   14000dff3:	rex outs dx,DWORD PTR ds:[rsi]
   14000dff5:	mov    al,0x1e
   14000dff7:	fldenv [rbx+0x2c]
   14000dffa:	add    BYTE PTR [rbp+rbp*4-0x3c6c74be],dl
   14000e001:	mov    ah,0xe8
   14000e003:	rex.XB push r13
   14000e005:	rex fdiv QWORD PTR cs:[rsi]
   14000e009:	cmp    DWORD PTR [rsi+0x2],0xffffff8d
   14000e00d:	mov    cs,WORD PTR [rbp+0x7cf679b2]
   14000e013:	jae    0x14000dfaf
   14000e015:	in     al,dx
   14000e016:	je     0x14000e073
   14000e018:	cs loop 0x14000e02a
   14000e01b:	mov    eax,DWORD PTR [rbp-0x54e300c1]
   14000e021:	adc    eax,0x34e48dd
   14000e026:	icebp  
   14000e027:	leave  
   14000e028:	leave  
   14000e029:	(bad)  
   14000e02a:	loope  0x14000e017
   14000e02c:	scas   eax,DWORD PTR es:[rdi]
   14000e02d:	or     DWORD PTR [rcx],esp
   14000e02f:	outs   dx,DWORD PTR ss:[rsi]
   14000e031:	or     ebp,DWORD PTR [rcx+0x50416591]
   14000e037:	movabs cs:0xbe4eb05bae2ba693,eax
   14000e041:	sar    BYTE PTR [rsi],0x9
   14000e044:	adc    DWORD PTR [rdi*8-0x2a01e9d4],0x28be3dfc
   14000e04f:	sub    BYTE PTR [rax],cl
   14000e051:	movabs al,ds:0x30424081928607b
   14000e05a:	add    al,0x25
   14000e05c:	mov    BYTE PTR [rbx-0x1a],bl
   14000e05f:	sub    dh,BYTE PTR [esi+eax*4+0x4]
   14000e064:	rol    BYTE PTR fs:[rdi-0x4c],1
   14000e068:	xor    BYTE PTR [rcx+0x16a42d56],al
   14000e06e:	push   0x4a548019
   14000e073:	rex.WXB test rax,0xffffffff8b51ea66
   14000e079:	ins    BYTE PTR es:[rdi],dx
   14000e07a:	sbb    eax,0x53c8dfbc
   14000e07f:	jp     0x14000e00c
   14000e081:	fcomi  st,st(7)
   14000e083:	push   0x30
   14000e085:	push   rcx
   14000e086:	xor    esp,DWORD PTR [rbx-0x8410ed4]
   14000e08c:	push   0x5b
   14000e08e:	push   rdi
   14000e08f:	test   BYTE PTR [rbp-0x66],ch
   14000e092:	mov    dh,BYTE PTR [rdx]
   14000e094:	fbstp  TBYTE PTR [rbx-0x4c52cbf2]
   14000e09a:	jnp    0x14000e085
   14000e09c:	shr    ecx,1
   14000e09e:	push   rdi
   14000e09f:	movsxd eax,DWORD PTR [rdx+0x684d667f]
   14000e0a5:	rcl    BYTE PTR [rcx+0x4bd14a42],1
   14000e0ab:	fidivr DWORD PTR [rdx-0x4e110fd3]
   14000e0b1:	(bad)  
   14000e0b2:	lods   eax,DWORD PTR ds:[rsi]
   14000e0b3:	stos   BYTE PTR es:[rdi],al
   14000e0b4:	(bad)  
   14000e0b5:	mov    WORD PTR [rdx-0x6796a00],es
   14000e0bb:	loope  0x14000e125
   14000e0bd:	fisttp QWORD PTR [rbx-0x65957ed4]
   14000e0c3:	sub    al,0x80
   14000e0c5:	adc    BYTE PTR [rax],dl
   14000e0c7:	push   0xffffffffe8200b12
   14000e0cc:	rex.RB xor eax,0x5561a66a
   14000e0d2:	push   0xffffffff891a5382
   14000e0d7:	mov    ah,BYTE PTR [rdx+0x11]
   14000e0da:	or     ch,cl
   14000e0dc:	(bad)  
   14000e0dd:	mov    ebp,0xf75d77b4
   14000e0e2:	jrcxz  0x14000e15b
   14000e0e4:	cmp    eax,0x95bb19
   14000e0e9:	scas   eax,DWORD PTR es:[rdi]
   14000e0ea:	rex.RX clc 
   14000e0ec:	fs jmp 0x14000e12d
   14000e0ef:	mov    edi,0x3265ada7
   14000e0f4:	lahf   
   14000e0f5:	or     ah,BYTE PTR [rcx-0x7bd80cd0]
   14000e0fb:	adc    dl,BYTE PTR [rcx]
   14000e0fd:	test   BYTE PTR [rax-0x2b],ch
   14000e100:	addr32 rex.RX (bad) 
   14000e103:	fisubr DWORD PTR [rdi+0x47]
   14000e106:	fcom   DWORD PTR [rax+rax*4+0x6]
   14000e10a:	push   rsp
   14000e10b:	adc    al,0x23
   14000e10d:	add    al,0x65
   14000e10f:	mov    dl,0x2
   14000e111:	pop    rdi
   14000e112:	or     ch,bh
   14000e114:	and    eax,0xe58020a0
   14000e119:	and    DWORD PTR [rdx+riz*4-0x4d7ed774],esi
   14000e120:	xor    eax,0xda303a3b
   14000e125:	rex.WB sbb sil,BYTE PTR [r15+0x40]
   14000e129:	div    ah
   14000e12b:	(bad)  
   14000e12d:	(bad)  
   14000e12e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e12f:	lock pop rdi
   14000e131:	push   0x74
   14000e133:	sub    al,0x35
   14000e135:	jno    0x14000e15b
   14000e137:	movsxd edx,DWORD PTR [rdx+0x5ae6f706]
   14000e13d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e13e:	(bad)  
   14000e13f:	clc    
   14000e140:	adc    al,BYTE PTR [rsi-0x18]
   14000e143:	popf   
   14000e144:	sub    ecx,esi
   14000e146:	push   0xffffffffffffff9a
   14000e148:	(bad)  
   14000e149:	sub    DWORD PTR es:[rdx-0x486db44e],esi
   14000e150:	(bad)  
   14000e151:	mov    ch,0xe
   14000e153:	test   BYTE PTR [rax],cl
   14000e155:	or     dl,bl
   14000e158:	rex.WX sub rax,0x32325100
   14000e15e:	lods   eax,DWORD PTR ds:[rsi]
   14000e15f:	cmp    ecx,DWORD PTR [rbp-0x4cfc3ebb]
   14000e165:	movabs ds:0x3f1fe2fc21485621,al
   14000e16e:	(bad)  
   14000e16f:	out    dx,eax
   14000e170:	fbstp  TBYTE PTR [rdi+0x50e60408]
   14000e176:	adc    al,al
   14000e178:	(bad)  
   14000e179:	fs xor al,0x87
   14000e17c:	rex.RX (bad) 
   14000e17e:	pop    ax
   14000e180:	lahf   
   14000e181:	xlat   BYTE PTR ds:[rbx]
   14000e182:	(bad)  
   14000e183:	rex.WRXB sbb r13,r13
   14000e186:	test   BYTE PTR [rcx+rbx*1],al
   14000e189:	hlt    
   14000e18a:	movabs ds:0xb42d402136a4153a,al
   14000e193:	or     BYTE PTR [rsp+riz*4-0x6ed4e3b2],al
   14000e19a:	rex.WR (bad) 
   14000e19c:	adc    BYTE PTR [rdx-0x7c],ah
   14000e19f:	mov    esi,0x6eaf5307
   14000e1a4:	iret   
   14000e1a5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e1a6:	(bad)  
   14000e1a7:	shl    BYTE PTR [rbx-0x7995326],cl
   14000e1ad:	outs   dx,BYTE PTR ds:[rsi]
   14000e1ae:	rex or DWORD PTR [rbx-0x39],ebx
   14000e1b2:	push   rax
   14000e1b4:	icebp  
   14000e1b5:	mov    ecx,0xec2afff3
   14000e1ba:	rex.RXB imul r8d,DWORD PTR [r9-0x38a5fe30],0xffffff88
   14000e1c2:	rex sar BYTE PTR [rsi],1
   14000e1c5:	jg     0x14000e14f
   14000e1c7:	push   rdx
   14000e1c8:	sbb    BYTE PTR [rax],ah
   14000e1ca:	gs (bad) 
   14000e1cc:	pop    rsp
   14000e1cd:	xor    BYTE PTR [rax+rbp*2],dl
   14000e1d0:	adc    dh,dh
   14000e1d2:	sub    edx,ebx
   14000e1d4:	rex.WX or QWORD PTR [rax-0x7c],0x3e
   14000e1d9:	rex.WRXB add r8b,BYTE PTR [rip+0x414196]        # 0x140422376
   14000e1e0:	fucom  st(1)
   14000e1e2:	xchg   ebx,eax
   14000e1e3:	rex ins BYTE PTR es:[rdi],dx
   14000e1e5:	xor    edx,edx
   14000e1e7:	imul   ecx,DWORD PTR [rax+rax*1],0x4c012d65
   14000e1ee:	leave  
   14000e1ef:	outs   dx,DWORD PTR ds:[rsi]
   14000e1f0:	stos   DWORD PTR es:[rdi],eax
   14000e1f1:	mov    cs,WORD PTR [rsi]
   14000e1f3:	and    al,0x48
   14000e1f5:	jrcxz  0x14000e18a
   14000e1f7:	sub    dl,BYTE PTR [rax+0x41]
   14000e1fa:	outs   dx,DWORD PTR ds:[rsi]
   14000e1fb:	push   rax
   14000e1fc:	or     al,BYTE PTR [rdx]
   14000e1fe:	loope  0x14000e27e
   14000e200:	loopne 0x14000e267
   14000e202:	mov    eax,fs
   14000e204:	mul    DWORD PTR [rbx-0x7e]
   14000e207:	add    DWORD PTR [rcx+0x956eedd],0x60899ab8
   14000e211:	push   rcx
   14000e212:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000e213:	and    eax,0xdff63929
   14000e218:	mov    ah,0xb5
   14000e21a:	jmp    FWORD PTR [rdx-0x5c]
   14000e21d:	rex.R (bad) 
   14000e21f:	retf   0x191e
   14000e222:	or     BYTE PTR [rdx-0x29f178cb],dil
   14000e229:	movabs ds:0x4200f5b30ba6f2b5,al
   14000e232:	and    eax,DWORD PTR [rax+rax*2+0x6ee8ad29]
   14000e239:	not    BYTE PTR [rdi]
   14000e23b:	scas   al,BYTE PTR es:[rdi]
   14000e23c:	shl    BYTE PTR [rdx],0x28
   14000e23f:	or     al,ah
   14000e241:	(bad)  
   14000e242:	shl    BYTE PTR [rcx+0x7],1
   14000e245:	sbb    eax,0x9ff72e07
   14000e24a:	data16 scas al,BYTE PTR es:[rdi]
   14000e24c:	xor    al,0xa8
   14000e24e:	add    BYTE PTR [rdi+rax*1+0x51],dh
   14000e252:	sub    ah,BYTE PTR [rcx]
   14000e254:	mov    ah,0xd
   14000e256:	out    dx,al
   14000e257:	rex.WXB adc BYTE PTR [r10+0x48],al
   14000e25b:	(bad)  
   14000e25c:	jno    0x14000e249
   14000e25e:	jg     0x14000e259
   14000e260:	xchg   ecx,eax
   14000e261:	cmp    ebx,esi
   14000e263:	dec    bl
   14000e265:	mov    edi,0xa63de37e
   14000e26a:	stos   BYTE PTR es:[rdi],al
   14000e26b:	(bad)
   14000e26e:	sub    eax,0xd6e017ad
   14000e273:	test   DWORD PTR [rcx+rbp*2],eax
   14000e276:	lods   eax,DWORD PTR ds:[rsi]
   14000e277:	(bad)  
   14000e278:	xlat   BYTE PTR ds:[rbx]
   14000e279:	adc    BYTE PTR [rbx+0x5456844f],dil
   14000e280:	in     al,dx
   14000e281:	icebp  
   14000e282:	cdq    
   14000e283:	movsxd ebx,DWORD PTR [rax+rdi*8-0x40]
   14000e287:	sbb    edx,DWORD PTR [rbp-0x3c170a23]
   14000e28d:	add    BYTE PTR [rax],al
   14000e28f:	and    BYTE PTR [rax],al
   14000e291:	rex.WB
   14000e292:	rex.R
   14000e293:	push   r12
   14000e295:	cwde   
   14000e296:	in     al,0xc7
   14000e298:	mov    esp,0xb457456a
   14000e29d:	and    al,0x5c
   14000e29f:	xchg   ecx,eax
   14000e2a0:	pop    rsp
   14000e2a1:	outs   dx,BYTE PTR ds:[rsi]
   14000e2a2:	sbb    BYTE PTR [rbx],dh
   14000e2a4:	nop
   14000e2a5:	leave  
   14000e2a6:	outs   dx,BYTE PTR ds:[rsi]
   14000e2a7:	in     al,0x3b
   14000e2a9:	sbb    eax,0x9b4f6925
   14000e2ae:	mov    dl,0x57
   14000e2b0:	add    BYTE PTR [rcx-0x51639843],dl
   14000e2b6:	stos   DWORD PTR es:[rdi],eax
   14000e2b7:	fcomp  st(6)
   14000e2b9:	cmp    esi,DWORD PTR [rsi+0x687bdeeb]
   14000e2bf:	mov    bl,0xf
   14000e2c1:	mov    ebx,0xd3de595f
   14000e2c6:	mov    cl,0xb1
   14000e2c8:	lods   al,BYTE PTR ds:[rsi]
   14000e2c9:	in     al,dx
   14000e2ca:	xor    DWORD PTR [rcx-0x45],esi
   14000e2cd:	test   DWORD PTR [rsp],ecx
   14000e2d0:	rex.WX or BYTE PTR [rax+0x31],dl
   14000e2d4:	ret    0xfc15
   14000e2d7:	push   0x56a8a93b
   14000e2dc:	mov    dh,0xfd
   14000e2de:	movabs ds:0x74a51287292cffb0,al
   14000e2e7:	hlt    
   14000e2e8:	xchg   edx,eax
   14000e2e9:	cld    
   14000e2ea:	std    
   14000e2eb:	push   rdi
   14000e2ec:	cmp    DWORD PTR [rdx],ecx
   14000e2ee:	add    bh,BYTE PTR [rax-0x765d6bf8]
   14000e2f4:	mov    bh,BYTE PTR [rbx-0x53]
   14000e2f7:	cli    
   14000e2f8:	(bad)  
   14000e2f9:	imul   eax,DWORD PTR [rax],0x40d6302a
   14000e2ff:	(bad)  
   14000e300:	rex.RX test BYTE PTR [rbp-0x78],r12b
   14000e304:	(bad)  
   14000e305:	sub    cl,0x1
   14000e308:	adc    BYTE PTR [rax+0x2d],cl
   14000e30b:	retf   0xa53d
   14000e30e:	bnd jmp 0x14000e38b
   14000e311:	out    0xc4,al
   14000e313:	shl    BYTE PTR [rsi],1
   14000e315:	call   0x16a6e58f5
   14000e31a:	lock sbb DWORD PTR [rip+0x40422ab],0xdd2de136        # 0x1440505d0
   14000e325:	sbb    BYTE PTR [rax+0x47],bl
   14000e328:	or     al,BYTE PTR [rcx-0x12]
   14000e32b:	adc    eax,0xf6e1a4b2
   14000e330:	or     DWORD PTR [rbx],ebp
   14000e332:	mov    eax,0x466009e
   14000e337:	fldln2 
   14000e339:	mov    bl,0x82
   14000e33b:	rex.WR (bad) 
   14000e33d:	mov    BYTE PTR [rsi-0x45],bl
   14000e340:	sbb    eax,0x77b38c91
   14000e345:	ret    0x62ae
   14000e348:	mov    ebx,0xc3cf63af
   14000e34d:	or     ch,BYTE PTR [rbx+rbx*1-0x2c1112fe]
   14000e354:	mov    cl,0x2e
   14000e356:	xchg   ecx,eax
   14000e357:	adc    eax,0x1ddee4e0
   14000e35c:	jnp    0x14000e3da
   14000e35e:	fstp   TBYTE PTR [rbx]
   14000e360:	scas   eax,DWORD PTR es:[rdi]
   14000e361:	in     eax,dx
   14000e362:	popf   
   14000e363:	(bad)  
   14000e364:	sub    DWORD PTR [rsi-0x65],0xaebb296b
   14000e36b:	rex.WR jae 0x14000e343
   14000e36e:	test   al,0xdd
   14000e370:	movabs al,ds:0x2500a4238e8d3936
   14000e379:	sub    eax,0xdcd64661
   14000e37e:	test   DWORD PTR [rdx-0x79e2a380],0x9480e6b6
   14000e388:	add    DWORD PTR [rcx-0x1868622e],esi
   14000e38e:	(bad)  
   14000e38f:	mov    cl,0xba
   14000e391:	push   rax
   14000e392:	clc    
   14000e393:	rex.WB fucom st(1)
   14000e396:	vandps xmm1,xmm12,xmm5
   14000e39a:	cld    
   14000e39b:	jo     0x14000e3e0
   14000e39d:	sti    
   14000e39e:	add    edx,esi
   14000e3a0:	jmp    0x11c423db6
   14000e3a5:	rex.R xchg esi,eax
   14000e3a7:	cli    
   14000e3a8:	adc    ah,BYTE PTR [rbx+0x74146356]
   14000e3ae:	outs   dx,DWORD PTR ds:[rsi]
   14000e3af:	leave  
   14000e3b0:	call   0x14f34beb1
   14000e3b5:	sar    BYTE PTR [rbx+rdi*2],1
   14000e3b8:	mov    WORD PTR [rax+rbx*4-0x65],fs
   14000e3bc:	outs   dx,DWORD PTR ds:[rsi]
   14000e3bd:	std    
   14000e3be:	sub    cl,bh
   14000e3c0:	and    cl,BYTE PTR [rsi-0x2e]
   14000e3c3:	pop    rsp
   14000e3c4:	xchg   edx,eax
   14000e3c5:	hlt    
   14000e3c6:	rex.RXB scas al,BYTE PTR es:[rdi]
   14000e3c8:	lods   eax,DWORD PTR ds:[rsi]
   14000e3c9:	es test esi,0xb560e373
   14000e3d0:	test   DWORD PTR [rsi+rbp*4],0x3238659
   14000e3d7:	ja     0x14000e3a6
   14000e3d9:	int3   
   14000e3da:	and    ah,BYTE PTR [rcx]
   14000e3dc:	scas   al,BYTE PTR es:[rdi]
   14000e3dd:	sub    DWORD PTR [rdx-0x39baa959],0x5d
   14000e3e4:	div    BYTE PTR [rdx+0x48f43291]
   14000e3ea:	rex.RX pop rdx
   14000e3ec:	shl    cl,cl
   14000e3ee:	scas   al,BYTE PTR es:[rdi]
   14000e3ef:	and    eax,0x7192d483
   14000e3f4:	sar    esp,0xe4
   14000e3f7:	(bad)  
   14000e3f8:	(bad)  
   14000e3f9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e3fa:	xchg   edx,eax
   14000e3fb:	rex.RXB fidiv DWORD PTR [r13+0x29]
   14000e3ff:	rol    DWORD PTR [rdi+0x72],cl
   14000e402:	pop    rdi
   14000e403:	xchg   edx,eax
   14000e404:	shr    DWORD PTR [eax-0x53],1
   14000e408:	test   eax,0x421b4ecf
   14000e40d:	mov    ch,0xd7
   14000e40f:	xchg   esi,eax
   14000e410:	push   rdx
   14000e411:	and    BYTE PTR [rbp+0x71d0aced],al
   14000e417:	(bad)  
   14000e418:	xchg   DWORD PTR [rdx+0x2d],ecx
   14000e41b:	sbb    al,0x6d
   14000e41d:	lods   eax,DWORD PTR ds:[rsi]
   14000e41e:	adc    DWORD PTR [rbp-0x53bf9eef],ebp
   14000e424:	je     0x14000e3f9
   14000e426:	(bad)  
   14000e427:	mov    ebx,0x165bfb75
   14000e42c:	pop    rax
   14000e42d:	mov    WORD PTR [rdx-0xcdcea00],es
   14000e433:	sub    DWORD PTR [rcx-0x4c],0xffffffe3
   14000e437:	cmp    edx,esp
   14000e439:	es enter 0x7672,0x24
   14000e43e:	movabs al,ds:0xcc86fa202ceb4bab
   14000e447:	or     al,0x37
   14000e449:	xor    BYTE PTR [rax+0x18107ce6],0xb
   14000e450:	push   rsi
   14000e451:	or     BYTE PTR [rax+0x3443dbef],ch
   14000e457:	cmp    ebp,ecx
   14000e459:	pop    rbp
   14000e45a:	pop    rbp
   14000e45b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e45c:	add    ah,BYTE PTR [rbp-0x2326587b]
   14000e462:	add    edx,eax
   14000e464:	or     dl,BYTE PTR [rdi+rax*2-0x42f61ffa]
   14000e46b:	and    eax,0xca102706
   14000e470:	sbb    eax,0x36c50963
   14000e475:	retf   
   14000e476:	xor    al,dh
   14000e478:	test   BYTE PTR [rcx],0x1
   14000e47b:	stos   BYTE PTR es:[rdi],al
   14000e47c:	data16 stos BYTE PTR es:[rdi],al
   14000e47e:	sbb    bl,ch
   14000e480:	jle    0x14000e4c9
   14000e482:	rex.WX ret 0x5617
   14000e486:	sti    
   14000e487:	ins    BYTE PTR es:[rdi],dx
   14000e488:	(bad)  
   14000e489:	ins    DWORD PTR es:[rdi],dx
   14000e48a:	jno    0x14000e490
   14000e48c:	and    esp,ebp
   14000e48e:	ds ja  0x14000e46e
   14000e491:	in     al,0x7d
   14000e493:	int3   
   14000e494:	sti    
   14000e495:	pop    rdx
   14000e496:	pop    rcx
   14000e497:	(bad)  
   14000e498:	lock out dx,al
   14000e49a:	stos   DWORD PTR es:[rdi],eax
   14000e49b:	mov    ebp,0xc86bbb7b
   14000e4a0:	xor    al,0x18
   14000e4a2:	scas   eax,DWORD PTR es:[rdi]
   14000e4a3:	ror    DWORD PTR [rax],0xbf
   14000e4a6:	(bad)  
   14000e4a7:	pop    rsi
   14000e4a8:	shl    ah,cl
   14000e4aa:	or     DWORD PTR [rcx+rdx*1],ecx
   14000e4ad:	pop    rdx
   14000e4ae:	movabs al,ds:0xc50c911ad1b5cf62
   14000e4b7:	ss lahf 
   14000e4b9:	pop    rbp
   14000e4ba:	test   BYTE PTR [rcx],ah
   14000e4bc:	push   rcx
   14000e4bd:	rex.RXB xor eax,0xbb9fbfbc
   14000e4c3:	imul   eax,DWORD PTR [rcx-0x7fdf5f75],0xffffffe5
   14000e4ca:	movabs eax,ds:0x20012c89279ae627
   14000e4d3:	cmp    al,0xc1
   14000e4d5:	xor    edx,ecx
   14000e4d7:	fstp   QWORD PTR ds:[rsi+0x351c1c27]
   14000e4de:	rex.RXB mov r11d,0xa0526036
   14000e4e4:	mov    al,0x33
   14000e4e6:	loopne 0x14000e532
   14000e4e8:	and    DWORD PTR [rsi],0x97f0f2a6
   14000e4ee:	mov    edi,esp
   14000e4f0:	data16 rex.W test bpl,cl
   14000e4f4:	xchg   ecx,eax
   14000e4f5:	rex.W adc spl,BYTE PTR [rdx+0x7ce782b2]
   14000e4fc:	pop    rsp
   14000e4fd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e4fe:	jmp    0x12c02edf4
   14000e503:	(bad)  
   14000e504:	sahf   
   14000e505:	in     al,0xfe
   14000e507:	imul   esi,DWORD PTR [rbp-0x7f],0xebd2a100
   14000e50e:	mov    eax,0x43d7a32c
   14000e513:	iret   
   14000e514:	lods   al,BYTE PTR ds:[rsi]
   14000e515:	rex.WXB fcmovnbe st,st(5)
   14000e518:	mov    eax,0x2fb30a9e
   14000e51d:	(bad)  
   14000e51e:	rex.W
   14000e51f:	rex.WRXB
   14000e520:	rex.XB pop r11
   14000e522:	or     eax,0xe865489f
   14000e527:	pop    rcx
   14000e528:	xor    esi,ebx
   14000e52a:	cwde   
   14000e52b:	out    0xc4,eax
   14000e52d:	enter  0xcc08,0x73
   14000e531:	and    eax,0xa11e0096
   14000e536:	mov    eax,0x51d3a57b
   14000e53b:	push   0x1
   14000e53d:	(bad)  
   14000e53e:	fldcw  WORD PTR [rcx]
   14000e540:	loop   0x14000e4ea
   14000e542:	ins    DWORD PTR es:[rdi],dx
   14000e543:	mov    esi,0x8111293b
   14000e548:	int3   
   14000e549:	push   rsp
   14000e54a:	repnz or eax,DWORD PTR [rip+0x42181a5]        # 0x1442266f6
   14000e551:	or     ah,BYTE PTR [rcx-0x3d9afdec]
   14000e557:	jg     0x14000e4ef
   14000e559:	adc    BYTE PTR [rdx+rcx*4],al
   14000e55c:	add    edx,DWORD PTR [rdi]
   14000e55e:	(bad)  
   14000e55f:	mov    ah,0x3a
   14000e561:	jno    0x14000e570
   14000e563:	(bad)  
   14000e564:	and    bl,ch
   14000e566:	sub    eax,0x6e65bffc
   14000e56b:	mov    ebx,0x2c010500
   14000e570:	(bad)  
   14000e571:	or     eax,0x73a37ae8
   14000e576:	and    DWORD PTR [rsi+0x497b209a],ecx
   14000e57c:	or     dl,al
   14000e57e:	sbb    eax,0xae8d0809
   14000e583:	rex.WRXB and r9,r11
   14000e586:	adc    esi,0xffffffdc
   14000e589:	mov    ch,0x73
   14000e58b:	fisttp QWORD PTR [rcx-0x6f]
   14000e58e:	(bad)  
   14000e58f:	jmp    0x1a20906c0
   14000e594:	stos   BYTE PTR es:[rdi],al
   14000e595:	rex.WRXB jle 0x14000e5ad
   14000e598:	sbb    eax,0xfde5ed35
   14000e59d:	loopne 0x14000e553
   14000e59f:	rex.W int 0x63
   14000e5a2:	rex.W
   14000e5a3:	rex.WRB jl 0x14000e59d
   14000e5a6:	sbb    dl,bl
   14000e5a8:	(bad)  
   14000e5aa:	adc    DWORD PTR [rsi-0x6c8c2630],eax
   14000e5b0:	jrcxz  0x14000e5ee
   14000e5b2:	add    al,cl
   14000e5b4:	adc    edi,esp
   14000e5b6:	mov    WORD PTR [rsi-0x5621bd49],ss
   14000e5bc:	sbb    DWORD PTR [rdi-0xbb7d040],edx
   14000e5c2:	rex.WRB inc BYTE PTR [r8+rcx*1+0x425aecbc]
   14000e5ca:	ss mov esi,0x5dce04b
   14000e5d0:	imul   ebp,esi,0xfb724527
   14000e5d6:	or     al,0x79
   14000e5d8:	rex.W (bad) 
   14000e5da:	outs   dx,BYTE PTR ds:[rsi]
   14000e5db:	mov    dl,0xc5
   14000e5dd:	push   rsp
   14000e5de:	rex.X shr BYTE PTR [rdx+0x1363a34c],1
   14000e5e5:	clc    
   14000e5e6:	rex.WXB sub al,BYTE PTR [r8]
   14000e5e9:	add    eax,0xa459a408
   14000e5ee:	sbb    BYTE PTR [rax-0x65],0x38
   14000e5f2:	add    BYTE PTR [rax],bl
   14000e5f4:	ss ror dl,1
   14000e5f7:	adc    edi,DWORD PTR [rsi+0x63]
   14000e5fa:	stc    
   14000e5fb:	enter  0x329e,0xad
   14000e5ff:	jbe    0x14000e655
   14000e601:	and    eax,0xc6affcd5
   14000e606:	and    esi,edx
   14000e608:	iret   
   14000e609:	or     eax,DWORD PTR [rip+0x2daf2c01]        # 0x16db01210
   14000e60f:	je     0x14000e5c4
   14000e611:	(bad)  
   14000e612:	ds mov ebx,0x610b30b0
   14000e618:	pop    rdi
   14000e619:	stos   BYTE PTR es:[rdi],al
   14000e61a:	stc    
   14000e61b:	add    DWORD PTR [rdx],esp
   14000e61d:	test   edx,ebp
   14000e61f:	mov    ah,0x51
   14000e621:	cmc    
   14000e622:	add    eax,0x845ad0e4
   14000e627:	adc    BYTE PTR [rdx+rdx*2],al
   14000e62a:	sbb    bl,cl
   14000e62c:	adc    DWORD PTR [rdx],eax
   14000e62e:	adc    DWORD PTR [rax-0x73],ebx
   14000e631:	out    0x8,al
   14000e633:	and    DWORD PTR [rax],edx
   14000e635:	shr    BYTE PTR [rcx+0x50],1
   14000e638:	jnp    0x14000e61e
   14000e63a:	lahf   
   14000e63b:	shr    BYTE PTR [rbp+0x1b],1
   14000e63e:	or     BYTE PTR [rbx],dl
   14000e640:	or     DWORD PTR [rcx-0x10fd07fd],0x171779fc
   14000e64a:	jo     0x14000e5e2
   14000e64c:	(bad)  
   14000e64d:	sti    
   14000e64e:	imul   eax,edi,0xbc08b3ca
   14000e654:	and    BYTE PTR [rdi+0x66],bl
   14000e657:	push   rax
   14000e658:	mov    cl,0x1f
   14000e65a:	(bad)  
   14000e65b:	nop
   14000e65c:	imul   ebx,DWORD PTR [rcx+rax*8],0x8bdcefbd
   14000e663:	test   al,0x66
   14000e665:	lods   al,BYTE PTR ds:[rsi]
   14000e666:	add    DWORD PTR [rdi-0x55],ebx
   14000e669:	cmp    esp,DWORD PTR [rdx]
   14000e66b:	rex.WB
   14000e66c:	rex.RX in al,0x38
   14000e66f:	ins    DWORD PTR es:[rdi],dx
   14000e670:	(bad)  
   14000e671:	pop    rax
   14000e672:	jrcxz  0x14000e6b6
   14000e674:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e675:	out    0x27,eax
   14000e677:	xchg   esi,eax
   14000e678:	adc    DWORD PTR [rdi],0xa99ed01b
   14000e67e:	out    dx,eax
   14000e67f:	pop    rbx
   14000e680:	cmp    ch,BYTE PTR [rax+0x35a02634]
   14000e686:	in     eax,dx
   14000e687:	test   DWORD PTR [rcx+0x54],ecx
   14000e68a:	mov    ebx,0x9095f096
   14000e68f:	add    dh,BYTE PTR [rbx]
   14000e691:	(bad)  
   14000e692:	test   al,0x34
   14000e694:	push   rbp
   14000e695:	add    BYTE PTR [rdx],0x63
   14000e698:	cmp    eax,0x94309ac5
   14000e69d:	ss retf 
   14000e69f:	movabs ds:0x140023bfe89b4211,al
   14000e6a8:	(bad)  
   14000e6a9:	(bad)  
   14000e6aa:	(bad)  
   14000e6ab:	push   0xffffffffe90ae2b6
   14000e6b0:	js     0x14000e6bd
   14000e6b2:	fisttp WORD PTR [rip+0x32ff3428]        # 0x173001ae0
   14000e6b8:	sub    BYTE PTR [rax],cl
   14000e6ba:	and    BYTE PTR [rbx-0x58570644],cl
   14000e6c0:	out    0x1a,eax
   14000e6c2:	(bad)  
   14000e6c3:	jmp    0x14000e67a
   14000e6c5:	add    eax,0x6b41fa08
   14000e6ca:	mov    ah,0x56
   14000e6cc:	push   0x1a6da115
   14000e6d1:	rex.WRB stos QWORD PTR es:[rdi],rax
   14000e6d3:	(bad)  
   14000e6d4:	loope  0x14000e696
   14000e6d6:	(bad)  
   14000e6d7:	add    ch,BYTE PTR [rcx]
   14000e6d9:	lods   al,BYTE PTR ds:[rsi]
   14000e6da:	adc    dl,BYTE PTR [rsi+rsi*8+0x5cfc6cc7]
   14000e6e1:	(bad)  
   14000e6e2:	rex.XB add al,BYTE PTR [r9-0x4c555f6c]
   14000e6e9:	(bad)  
   14000e6ea:	(bad)  
   14000e6eb:	stc    
   14000e6ec:	xor    al,0x89
   14000e6ee:	cmp    BYTE PTR [rbx+0xa],0x7c
   14000e6f2:	xchg   ecx,eax
   14000e6f3:	jmp    0x1381a1007
   14000e6f8:	scas   al,BYTE PTR es:[rdi]
   14000e6f9:	(bad)  
   14000e6fa:	(bad)  
   14000e6fb:	xchg   BYTE PTR [rax],bh
   14000e6fd:	xchg   esp,eax
   14000e6fe:	enter  0xccfd,0x9d
   14000e702:	scas   eax,DWORD PTR es:[rdi]
   14000e703:	in     al,dx
   14000e704:	pop    rbp
   14000e705:	(bad)  
   14000e706:	movsxd ebp,DWORD PTR [rax+rdi*1]
   14000e709:	adc    ebx,edi
   14000e70b:	mov    ebx,0xbc41aaa6
   14000e710:	stos   BYTE PTR es:[rdi],al
   14000e712:	lods   eax,DWORD PTR ds:[rsi]
   14000e713:	cmp    eax,0x49d777a1
   14000e718:	loop   0x14000e72f
   14000e71a:	out    dx,al
   14000e71b:	cmp    eax,0xb898802f
   14000e720:	pmaxsw mm3,QWORD PTR [rsi]
   14000e723:	movabs eax,ds:0x424d92f4b6972d77
   14000e72c:	shr    BYTE PTR [rcx+0x2b35134f],1
   14000e732:	push   rsi
   14000e733:	lock lods eax,DWORD PTR ds:[rsi]
   14000e735:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e736:	mov    bh,0xd3
   14000e738:	test   BYTE PTR [rbx],dl
   14000e73a:	pop    rax
   14000e73b:	and    cl,BYTE PTR [rax]
   14000e73d:	ins    BYTE PTR es:[rdi],dx
   14000e73e:	(bad)  
   14000e73f:	scas   eax,DWORD PTR es:[rdi]
   14000e740:	ins    DWORD PTR es:[rdi],dx
   14000e741:	push   rbx
   14000e742:	mov    edi,DWORD PTR [rsi+0x633b0be0]
   14000e748:	movabs al,ds:0x5a8592d75342118e
   14000e751:	imul   eax,DWORD PTR [rsi-0x5a3a238c],0xc
   14000e758:	mov    bh,0x2e
   14000e75a:	rex
   14000e75b:	add    BYTE PTR [r11+0x21],cl
   14000e75f:	shl    DWORD PTR [rax],1
   14000e761:	rex.RXB (bad) 
   14000e763:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e764:	(bad)  
   14000e765:	push   0xffffffffffffffd5
   14000e767:	fstp   DWORD PTR [rax+0x14ad1fa0]
   14000e76d:	(bad)  
   14000e76e:	xchg   ecx,eax
   14000e76f:	rex.WB mov r9b,0xc5
   14000e772:	xchg   BYTE PTR [rdx+rax*4],al
   14000e775:	rex adc DWORD PTR [rsi+0x250e8ad9],ebp
   14000e77c:	retf   0x724d
   14000e77f:	sub    DWORD PTR [rcx],esi
   14000e781:	cmp    eax,0x8a40a4ed
   14000e786:	je     0x14000e762
   14000e788:	sub    eax,DWORD PTR [rdx]
   14000e78a:	mov    DWORD PTR [rax],ebp
   14000e78c:	add    eax,0xf502f6e8
   14000e791:	rex.RXB (bad) 
   14000e793:	gs out dx,eax
   14000e795:	in     al,0x4c
   14000e797:	jne    0x14000e800
   14000e799:	loop   0x14000e756
   14000e79b:	movabs al,ds:0xf40bb83461e94b9d
   14000e7a4:	and    eax,0x653e9c4b
   14000e7a9:	push   rsi
   14000e7aa:	mov    ch,0x7b
   14000e7ac:	ds mov edi,0xb6fe38fb
   14000e7b2:	ja     0x14000e750
   14000e7b4:	xor    edi,ebp
   14000e7b6:	movabs ds:0xd8921c8ee7769aa,eax
   14000e7bf:	cmp    BYTE PTR [rdx+0x70],al
   14000e7c2:	push   rcx
   14000e7c3:	jle    0x14000e764
   14000e7c5:	mov    BYTE PTR [rax-0x3],cl
   14000e7c8:	jnp    0x14000e7db
   14000e7ca:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e7cb:	(bad)
   14000e7cf:	sbb    BYTE PTR [rdi],dh
   14000e7d1:	(bad)  
   14000e7d2:	(bad)  
   14000e7d3:	jge    0x14000e762
   14000e7d5:	pop    rdx
   14000e7d6:	repz lea r15d,[rcx]
   14000e7da:	rex.R pop rax
   14000e7dc:	add    bl,BYTE PTR [rcx]
   14000e7de:	fimul  DWORD PTR [rcx-0x1eab22bf]
   14000e7e4:	test   eax,0xaac8e4c5
   14000e7e9:	cmp    eax,0x22082353
   14000e7ee:	test   BYTE PTR [rbx-0x4a],ch
   14000e7f1:	push   0x3f
   14000e7f3:	stos   DWORD PTR es:[rdi],eax
   14000e7f4:	jo     0x14000e781
   14000e7f6:	adc    BYTE PTR [rsi+rbx*4-0x6265693],bl
   14000e7fd:	xchg   esi,eax
   14000e7fe:	(bad)  
   14000e7ff:	repnz push rdx
   14000e801:	in     eax,0x96
   14000e803:	add    cl,BYTE PTR [rbx-0x60]
   14000e806:	test   al,0x3
   14000e808:	pop    rax
   14000e809:	sbb    bl,BYTE PTR [rdx]
   14000e80b:	sar    bh,1
   14000e80d:	(bad)
   14000e811:	inc    dl
   14000e813:	(bad)  
   14000e814:	mov    edi,0x3735dcee
   14000e819:	or     eax,0xb57b336d
   14000e81e:	test   eax,0x57c6d753
   14000e823:	(bad)  
   14000e824:	push   0xe124964
   14000e829:	pop    rdi
   14000e82a:	pop    r12
   14000e82c:	cmp    DWORD PTR [rbx+0x7e],esp
   14000e82f:	call   0x1200cb606
   14000e834:	add    eax,0xd0806cc2
   14000e839:	or     DWORD PTR [rdx+0x7f514eaa],edx
   14000e83f:	clc    
   14000e840:	movabs ds:0x18dcadcd67febff4,eax
   14000e849:	xor    DWORD PTR [rax+0x54c18217],0xb
   14000e850:	xchg   ebx,eax
   14000e852:	push   rsi
   14000e853:	stos   DWORD PTR es:[rdi],eax
   14000e854:	cmp    ch,BYTE PTR [rbp-0x7d0bbfd3]
   14000e85a:	in     al,dx
   14000e85b:	pop    rcx
   14000e85c:	out    0xc9,al
   14000e85e:	jae    0x14000e7ea
   14000e860:	rex.WRXB neg BYTE PTR [r8-0x28e2e98d]
   14000e867:	sub    DWORD PTR [rax+0x21],0xbb09de3d
   14000e86e:	sti    
   14000e86f:	clc    
   14000e870:	stc    
   14000e871:	loopne 0x14000e896
   14000e873:	fidiv  WORD PTR [rsi-0x35]
   14000e876:	rex.RX out dx,al
   14000e878:	std    
   14000e879:	lods   al,BYTE PTR ds:[rsi]
   14000e87a:	mov    BYTE PTR [rbx+0x402f6829],ch
   14000e880:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e881:	loop   0x14000e8c0
   14000e883:	mov    esi,ecx
   14000e885:	fucom  st(3)
   14000e887:	fsincos 
   14000e889:	mov    DWORD PTR [rdx-0x19],ebp
   14000e88c:	adc    eax,DWORD PTR [rdx+0x2b408110]
   14000e892:	cmp    esi,DWORD PTR [rcx-0x46]
   14000e895:	sub    eax,0x94481238
   14000e89a:	push   rdx
   14000e89b:	or     BYTE PTR [rcx],cl
   14000e89d:	stos   BYTE PTR es:[rdi],al
   14000e89e:	sbb    DWORD PTR [rbx],edx
   14000e8a0:	(bad)  
   14000e8a1:	mov    ah,0xe9
   14000e8a3:	fcmovnbe st,st(0)
   14000e8a5:	outs   dx,DWORD PTR ds:[rsi]
   14000e8a6:	mov    ebx,DWORD PTR [rcx+0x44400130]
   14000e8ac:	repnz sub al,BYTE PTR [rsi]
   14000e8af:	cli    
   14000e8b0:	jns    0x14000e8ae
   14000e8b2:	rcr    cl,1
   14000e8b4:	cdq    
   14000e8b5:	test   eax,0xa634fad9
   14000e8ba:	(bad)  [rdx-0x322d4795]
   14000e8c0:	adc    eax,0x41439028
   14000e8c5:	add    BYTE PTR [rbx+0x159247e1],cl
   14000e8cb:	adc    BYTE PTR [rdi],bl
   14000e8cd:	cmp    BYTE PTR [rcx],dh
   14000e8cf:	inc    ah
   14000e8d1:	pop    rbx
   14000e8d2:	ficomp WORD PTR [rdx-0x25]
   14000e8d5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e8d6:	rex.WXB imul rsp,QWORD PTR [r8-0x3fddfecf],0x34
   14000e8de:	std    
   14000e8df:	mov    bl,0x7d
   14000e8e1:	add    DWORD PTR [rdx-0x6d],ebx
   14000e8e4:	test   BYTE PTR [rbx],bl
   14000e8e6:	ja     0x14000e8f9
   14000e8e8:	(bad)  
   14000e8e9:	pushf  
   14000e8ea:	cmp    r12b,BYTE PTR [r9+0x4f]
   14000e8ee:	(bad)  
   14000e8ef:	ficomp WORD PTR [rsi+0x64d4cbf0]
   14000e8f5:	(bad)  
   14000e8f6:	rex.X movabs al,ds:0x6bcf493e8eb40b5b
   14000e900:	jg     0x14000e91f
   14000e902:	ret    0x9791
   14000e905:	call   QWORD PTR [rbx-0x296bed76]
   14000e90b:	ds mov edi,0xf3d9cb73
   14000e911:	hlt    
   14000e912:	ret    0x5bb8
   14000e915:	rex.XB test eax,0xb47ef98e
   14000e91b:	rex.RX push rdi
   14000e91d:	iret   
   14000e91e:	and    dl,ah
   14000e920:	cmp    ebx,esp
   14000e922:	cmp    dl,ch
   14000e924:	(bad)  
   14000e925:	and    BYTE PTR [rcx+rbx*4+0xa0d0c02],al
   14000e92c:	and    ebp,eax
   14000e92e:	xchg   BYTE PTR [rdi+0x2],bh
   14000e931:	rex.WR
   14000e932:	rex.WR
   14000e933:	rex.XB
   14000e934:	fwait
   14000e935:	out    dx,eax
   14000e936:	push   rax
   14000e937:	imul   edx,DWORD PTR [rbx+rdi*4+0x45],0xffffffa9
   14000e93c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e93d:	xlat   BYTE PTR ds:[rbx]
   14000e93e:	xchg   edx,eax
   14000e93f:	stos   BYTE PTR es:[rdi],al
   14000e940:	mov    ecx,0x8daeb0b6
   14000e945:	movabs eax,ds:0x9a337a8946a9cd00
   14000e94e:	and    dl,BYTE PTR [rip+0x42f7bf7c]        # 0x182f8a8d0
   14000e954:	and    eax,edi
   14000e956:	(bad)  
   14000e957:	rex.B
   14000e958:	add    r13b,bl
   14000e95b:	loope  0x14000e965
   14000e95d:	and    BYTE PTR [rsi],al
   14000e95f:	movabs ds:0x2ff93736bfbdad4a,al
   14000e968:	sti    
   14000e969:	rex.WXB ret 
   14000e96b:	call   0xc0e5e34a
   14000e970:	(bad)  
   14000e971:	fsubr  QWORD PTR [rsi+0x7f5e504f]
   14000e977:	or     eax,0x810f939d
   14000e97c:	mov    ss,WORD PTR [rcx-0x2e613ab7]
   14000e982:	jb     0x14000e904
   14000e984:	cmc    
   14000e985:	jae    0x14000e944
   14000e987:	(bad)  
   14000e988:	sbb    DWORD PTR [rsi-0x88c1df5],eax
   14000e98e:	sar    eax,1
   14000e990:	(bad)  
   14000e991:	add    ecx,eax
   14000e993:	repnz sub BYTE PTR [rdx-0xc],ah
   14000e997:	jbe    0x14000e93c
   14000e999:	out    0xd7,eax
   14000e99b:	fisttp WORD PTR [rip+0x116e8cc2]        # 0x1516f7663
   14000e9a1:	movabs ds:0x88233db9ed83d8d7,eax
   14000e9aa:	fsubrp st(7),st
   14000e9ac:	sub    DWORD PTR [rcx+rdi*2-0x28bb2bc],esi
   14000e9b3:	mov    esp,0xacada9f7
   14000e9b8:	enter  0x3412,0x67
   14000e9bc:	xchg   ebx,eax
   14000e9bd:	scas   eax,DWORD PTR es:[rdi]
   14000e9be:	rex.X imul ecx,DWORD PTR [rip+0x4f68059d],0xffffffe2        # 0x18f68ef63
   14000e9c6:	rex.WX xor QWORD PTR [rbp-0x5],0x18
   14000e9cb:	mov    edx,0x478dacfd
   14000e9d0:	test   al,0xf4
   14000e9d2:	jl     0x14000ea0b
   14000e9d4:	rex.WR push rdi
   14000e9d6:	cdq    
   14000e9d7:	jp     0x14000ea57
   14000e9d9:	lods   eax,DWORD PTR ds:[rsi]
   14000e9da:	mov    WORD PTR [rax+0x57bca602],fs
   14000e9e0:	(bad)  
   14000e9e1:	mov    dh,0x93
   14000e9e3:	jl     0x14000ea2f
   14000e9e5:	cmp    edi,DWORD PTR [rbx-0x5e4e36f1]
   14000e9eb:	adc    DWORD PTR [rsi+0x6d],esi
   14000e9ee:	mov    BYTE PTR [rbp+0x55],dl
   14000e9f1:	fcmove st,st(0)
   14000e9f3:	rex pop rcx
   14000e9f5:	xlat   BYTE PTR ds:[rbx]
   14000e9f6:	sar    ch,0x55
   14000e9f9:	xor    al,0x5a
   14000e9fb:	push   0xe08c8eb
   14000ea00:	int3   
   14000ea01:	sub    BYTE PTR [rsi],dl
   14000ea03:	stos   BYTE PTR es:[rdi],al
   14000ea04:	lods   eax,DWORD PTR ds:[rsi]
   14000ea05:	or     esp,DWORD PTR [rbp+rbp*4+0x16f2d7]
   14000ea0c:	retf   
   14000ea0d:	mov    esp,0x1051eabe
   14000ea12:	add    BYTE PTR [rcx-0x2802738d],0xc4
   14000ea19:	or     bh,BYTE PTR [rax]
   14000ea1b:	xor    eax,0x7a6fb73e
   14000ea20:	cli    
   14000ea21:	sbb    al,0xfd
   14000ea23:	pop    rbx
   14000ea24:	mov    dh,0x99
   14000ea26:	rcr    BYTE PTR [rdi+0x6d2ca936],0x9
   14000ea2d:	rex (bad) 
   14000ea2f:	addr32 nop
   14000ea31:	pop    rbx
   14000ea32:	outs   dx,BYTE PTR ds:[rsi]
   14000ea33:	and    ebp,eax
   14000ea35:	sbb    eax,DWORD PTR [rdx-0x4b]
   14000ea38:	out    0x4c,eax
   14000ea3a:	add    BYTE PTR [rbx+0x60],cl
   14000ea3d:	out    0x6,eax
   14000ea3f:	lock std 
   14000ea41:	fisubr DWORD PTR [rax+rax*8+0x4c]
   14000ea45:	cmp    ch,cl
   14000ea47:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000ea48:	rex.B (bad) 
   14000ea4a:	adc    eax,0xe83d998
   14000ea4f:	and    eax,0x903efe7a
   14000ea54:	add    ah,BYTE PTR [rip+0x77a4e204]        # 0x1b7a5cc5e
   14000ea5a:	pop    rsi
   14000ea5b:	loopne 0x14000ea2b
   14000ea5d:	(bad)  
   14000ea5e:	(bad)  
   14000ea5f:	jb     0x14000ea73
   14000ea61:	imul   esi,DWORD PTR [rdi-0x52],0x38c5b4b9
   14000ea68:	out    dx,al
   14000ea69:	js     0x14000ea18
   14000ea6b:	(bad)  
   14000ea6c:	cmc    
   14000ea6d:	movabs eax,ds:0x517b4e9f7b4fc05d
   14000ea76:	jp     0x14000ea44
   14000ea78:	addr32 rex.WX sub al,0x79
   14000ea7c:	test   DWORD PTR [rax],ebx
   14000ea7e:	sbb    BYTE PTR [rcx+0xc],al
   14000ea81:	or     al,0xd9
   14000ea83:	ins    DWORD PTR es:[rdi],dx
   14000ea84:	(bad)  
   14000ea85:	test   BYTE PTR [rax+0xa4455c6],0x57
   14000ea8c:	test   al,0x14
   14000ea8e:	fsub   DWORD PTR [rax-0x5c]
   14000ea91:	mov    dh,0xdf
   14000ea93:	or     eax,0x2b0f7d8
   14000ea98:	ins    DWORD PTR es:[rdi],dx
   14000ea99:	or     DWORD PTR [rcx-0x7a],eax
   14000ea9c:	out    0x78,al
   14000ea9e:	pop    rbx
   14000ea9f:	out    0xaf,eax
   14000eaa1:	mov    ch,0x4e
   14000eaa3:	jrcxz  0x14000ea32
   14000eaa5:	push   0x3fdfb610
   14000eaaa:	and    DWORD PTR [rdx+rbx*2-0x2f31318c],esi
   14000eab1:	cmp    ebx,DWORD PTR [rsi+rsi*4-0x3e]
   14000eab5:	scas   eax,DWORD PTR es:[rdi]
   14000eab6:	ror    esp,cl
   14000eab8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000eab9:	sti    
   14000eaba:	sbb    BYTE PTR [rdx+0x70],dl
   14000eabd:	push   0xffffffffa56cc5b2
   14000eac2:	jns    0x14000ea52
   14000eac4:	je     0x14000ea98
   14000eac6:	push   rcx
   14000eac7:	xlat   BYTE PTR ds:[rbx]
   14000eac8:	jbe    0x14000eaf7
   14000eaca:	lahf   
   14000eacb:	add    eax,0xbbe8428
   14000ead0:	mov    ah,BYTE PTR [rax]
   14000ead2:	loopne 0x14000eb36
   14000ead4:	in     al,0x5d
   14000ead6:	add    ch,dh
   14000ead8:	addr32 (bad) 
   14000eada:	jnp    0x14000eac8
   14000eadc:	test   eax,0x9ecf6793
   14000eae1:	movabs eax,ds:0x38e852b44b5a2d67
   14000eaea:	mov    edx,DWORD PTR ss:[rdx-0x18]
   14000eaee:	push   rsi
   14000eaef:	adc    eax,0x58279add
   14000eaf4:	ja     0x14000eb03
   14000eaf6:	rex.WB int 0xbe
   14000eaf9:	adc    BYTE PTR [rsi+0x85db5b5],ah
   14000eaff:	gs cmps BYTE PTR ss:[rsi],BYTE PTR es:[rdi]
   14000eb02:	(bad)  
   14000eb03:	add    ah,BYTE PTR [rcx+0x149a4084]
   14000eb09:	movabs eax,ds:0x3ce641844bfa4914
   14000eb12:	xlat   BYTE PTR ds:[rbx]
   14000eb13:	(bad)  
   14000eb14:	pop    rdi
   14000eb15:	enter  0x2cd0,0x61
   14000eb19:	push   0x68d30fde
   14000eb1e:	mov    ecx,0x1afb0208
   14000eb23:	sbb    cl,BYTE PTR [rbp-0x78265ad7]
   14000eb29:	imul   r10,QWORD PTR [rdx+rax*2],0xfffffffffffffff7
   14000eb2e:	cmp    al,0x76
   14000eb30:	(bad)  
   14000eb32:	loope  0x14000eb4b
   14000eb34:	ret    0xde54
   14000eb37:	fpatan 
   14000eb39:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000eb3a:	or     al,0x10
   14000eb3c:	cmc    
   14000eb3d:	add    eax,0x2b6abd44
   14000eb42:	repnz sar BYTE PTR [rcx+0xe],cl
   14000eb46:	lea    esp,[rip+0x327e8363]        # 0x1727f6eaf
   14000eb4c:	xor    al,0xd7
   14000eb4e:	xchg   esi,eax
   14000eb4f:	xor    ah,BYTE PTR [rip+0xffffffffae11293b]        # 0xee121490
   14000eb55:	movabs ds:0x228feb8149f00fd0,al
   14000eb5e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000eb5f:	xor    al,0xb1
   14000eb61:	(bad)  
   14000eb62:	push   rax
   14000eb63:	fadd   DWORD PTR [rcx+rax*4-0x30cfdc57]
   14000eb6a:	(bad)  
   14000eb6b:	pushf  
   14000eb6c:	sub    ebx,ebp
   14000eb6e:	(bad)  
   14000eb6f:	rcl    BYTE PTR [rcx],1
   14000eb71:	enter  0x3992,0xcf
   14000eb75:	(bad)
   14000eb78:	xor    al,0xa9
   14000eb7a:	rex ror BYTE PTR [rax+0x3f1e61fe],1
   14000eb81:	cmp    edi,DWORD PTR ds:[rcx+0x6a]
   14000eb85:	mov    esp,0xf8548a72
   14000eb8a:	sbb    eax,0x80991401
   14000eb8f:	rex.WXB
   14000eb90:	rex
   14000eb91:	add    BYTE PTR [r11+0x23],cl
   14000eb95:	mov    DWORD PTR [rcx],eax
   14000eb97:	add    cl,dl
   14000eb99:	jrcxz  0x14000eb96
   14000eb9b:	rex.WRXB jl 0x14000ebed
   14000eb9e:	jne    0x14000eb8a
   14000eba0:	(bad)  
   14000eba1:	not    DWORD PTR [rbp-0x36]
   14000eba4:	push   0x71d0a534
   14000eba9:	test   BYTE PTR [rsi+0x31],dl
   14000ebac:	stos   BYTE PTR es:[rdi],al
   14000ebad:	jb     0x14000eb35
   14000ebaf:	jo     0x14000eb8e
   14000ebb1:	(bad)  
   14000ebb2:	mov    al,al
   14000ebb4:	(bad)  
   14000ebb5:	mov    ch,0x84
   14000ebb7:	leave  
   14000ebb8:	add    BYTE PTR [rax],cl
   14000ebba:	sbb    ecx,DWORD PTR [rdi]
   14000ebbc:	adc    BYTE PTR [rax+0x27],ah
   14000ebbf:	mov    ebp,0x5b808c08
   14000ebc4:	and    DWORD PTR [rdi+0x4a6411a1],edx
   14000ebca:	rex.WRX push 0x29378153
   14000ebd0:	mov    cl,0xc0
   14000ebd2:	or     BYTE PTR [rbp+0x10],dh
   14000ebd5:	fsubr  DWORD PTR [rdx+0x5d]
   14000ebd8:	sub    ecx,DWORD PTR [rcx+riz*2+0x60]
   14000ebdc:	test   ebx,ecx
   14000ebde:	(bad)  
   14000ebdf:	ror    DWORD PTR [rax-0x6f],1
   14000ebe2:	fmulp  st(3),st
   14000ebe4:	adc    DWORD PTR [rbx+0x60],eax
   14000ebe7:	push   rdx
   14000ebe8:	imul   esp,esi,0xffffffd5
   14000ebeb:	or     DWORD PTR [rbp+0x42b43084],esp
   14000ebf1:	imul   ebp,edi,0xffffffe9
   14000ebf4:	enter  0x7429,0xd
   14000ebf8:	cmp    DWORD PTR [rip+0xffffffff805cd041],ecx        # 0xc05dbc3f
   14000ebfe:	rex.RX adc eax,0x50444221
   14000ec04:	rex.RX add al,0x25
   14000ec07:	test   BYTE PTR [rcx+rbx*1],ch
   14000ec0a:	xor    DWORD PTR [rsi-0x3b],0x59b4323b
   14000ec11:	add    BYTE PTR [rdi-0x6bbea3f4],cl
   14000ec17:	mov    bl,0x2
   14000ec19:	xchg   edx,eax
   14000ec1a:	sbb    al,0x7f
   14000ec1c:	(bad)  
   14000ec1d:	or     edi,DWORD PTR [rsi+0xc]
   14000ec20:	xor    DWORD PTR [rax-0x54],ebp
   14000ec23:	gs and al,0xb5
   14000ec26:	cmp    eax,0x1032585e
   14000ec2b:	rex.R push rbx
   14000ec2d:	adc    eax,0x66997ec2
   14000ec32:	adc    dl,cl
   14000ec34:	xchg   BYTE PTR [rax],cl
   14000ec36:	fdiv   QWORD PTR [rsi-0x60]
   14000ec39:	jns    0x14000ecaf
   14000ec3b:	rex.X jo 0x14000ec2c
   14000ec3e:	rex.X
   14000ec3f:	gs pushf 
   14000ec41:	ins    BYTE PTR es:[rdi],dx
   14000ec42:	(bad)  [rbp+0x17]
   14000ec45:	or     ah,dh
   14000ec47:	mov    bl,0x0
   14000ec49:	add    eax,0x82812c09
   14000ec4e:	add    BYTE PTR [rdx-0x27012edd],bh
   14000ec54:	mov    esi,0xaaa7e7f5
   14000ec59:	(bad)  
   14000ec5a:	rex.WRX pop rsp
   14000ec5c:	cmp    BYTE PTR [rbx],al
   14000ec5e:	jge    0x14000ec4b
   14000ec60:	(bad)  
   14000ec61:	rol    BYTE PTR [rdi-0x4f],1
   14000ec64:	jns    0x14000ebf3
   14000ec66:	int    0x68
   14000ec68:	cmp    BYTE PTR [rip+0xffffffffb4310a7f],dh        # 0xf431f6ed
   14000ec6e:	xchg   ebx,eax
   14000ec6f:	shl    al,cl
   14000ec71:	stos   WORD PTR es:[rdi],ax
   14000ec73:	pop    rcx
   14000ec74:	mov    ch,0xcd
   14000ec76:	test   al,0xe9
   14000ec78:	rex.R fsub DWORD PTR [rax+rbp*2-0x4c]
   14000ec7d:	mov    ebp,0x25290294
   14000ec82:	xor    cl,BYTE PTR [rax]
   14000ec84:	mov    WORD PTR [rax+0x5b],fs
   14000ec87:	(bad)  
   14000ec88:	jbe    0x14000eccc
   14000ec8a:	outs   dx,DWORD PTR ds:[rsi]
   14000ec8b:	test   cl,bl
   14000ec8d:	(bad)  
   14000ec8e:	ret    0x8227
   14000ec91:	in     eax,dx
   14000ec92:	test   BYTE PTR [rsi],bh
   14000ec94:	rex.W int3 
   14000ec96:	inc    DWORD PTR [rax+rax*8-0x53]
   14000ec9a:	sar    BYTE PTR [rbx+0x3304e0fb],0x70
   14000eca1:	rex.X out dx,eax
   14000eca3:	(bad)  
   14000eca4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000eca5:	mov    ch,0x34
   14000eca7:	and    BYTE PTR [rip+0xffffffffff57ba48],cl        # 0x13f58a6f5
   14000ecad:	pop    rax
   14000ecae:	imul   edx,edi,0x3cc68485
   14000ecb4:	xor    al,0x16
   14000ecb6:	ins    BYTE PTR es:[rdi],dx
   14000ecb7:	(bad)  
   14000ecb8:	rcr    BYTE PTR [rdx+0x28],1
   14000ecbb:	(bad)  
   14000ecbc:	add    dl,BYTE PTR [rax]
   14000ecbe:	xor    cl,BYTE PTR [rsp+rax*4-0x26]
   14000ecc2:	or     al,0x7c
   14000ecc4:	mov    al,0x5d
   14000ecc6:	mov    ecx,0x8c39f483
   14000eccb:	gs adc bl,al
   14000ecce:	jmp    0x14000ecdb
   14000ecd0:	jae    0x14000ed20
   14000ecd2:	(bad)  
   14000ecd3:	cmp    al,0x4f
   14000ecd5:	loope  0x14000ecb3
   14000ecd7:	sub    BYTE PTR [rcx],dl
   14000ecd9:	cwde   
   14000ecda:	iret   
   14000ecdb:	sub    eax,0x2911e10c
   14000ece0:	cmp    ah,BYTE PTR [rdi+0x7119e9e7]
   14000ece6:	push   rsi
   14000ece7:	lea    esi,[rcx+0x33]
   14000ecea:	pop    rsp
   14000eceb:	test   DWORD PTR [rcx-0x30381b85],esi
   14000ecf1:	(bad)  
   14000ecf2:	int3   
   14000ecf3:	push   rsi
   14000ecf4:	(bad)  
   14000ecf5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000ecf6:	mov    cl,0xb3
   14000ecf8:	or     esi,DWORD PTR [rcx-0x3d7a2188]
   14000ecfe:	hlt    
   14000ecff:	mov    edi,0x48020a08
   14000ed04:	xchg   ecx,eax
   14000ed05:	jmp    QWORD PTR [rcx-0x607efd9c]
   14000ed0b:	(bad)  
   14000ed0c:	cli    
   14000ed0d:	movabs eax,ds:0x6df4417b3b9f4e87
   14000ed16:	xor    DWORD PTR [rsi-0x52],edi
   14000ed19:	jne    0x14000ed1e
   14000ed1b:	mov    BYTE PTR [rbp+0x479ed03b],ch
   14000ed21:	int    0x9f
   14000ed23:	rex.RB lods al,BYTE PTR ds:[rsi]
   14000ed25:	mov    ebp,0x75f0fcce
   14000ed2a:	(bad)  
   14000ed2b:	shl    esp,cl
   14000ed2d:	rex.RX clc 
   14000ed2f:	and    BYTE PTR fs:[rbp-0x66],ch
   14000ed33:	pop    rdi
   14000ed34:	rex.X sbb BYTE PTR [rax+0x29],al
   14000ed38:	rex.R xchg esp,eax
   14000ed3a:	add    eax,DWORD PTR [rcx+rbp*1+0x30]
   14000ed3e:	fisttp DWORD PTR [rcx+0x399e87e0]
   14000ed44:	outs   dx,DWORD PTR ds:[rsi]
   14000ed45:	rex.WRB sti 
   14000ed47:	rex pop rdx
   14000ed49:	retf   
   14000ed4a:	ret    0xe86a
   14000ed4d:	shl    BYTE PTR [rsi+0x19],1
   14000ed50:	test   BYTE PTR [rbp+rax*4+0x35],cl
   14000ed54:	or     BYTE PTR [rcx+riz*8],bh
   14000ed57:	(bad)  
   14000ed58:	pop    rdx
   14000ed59:	xor    eax,0x13ae4f59
   14000ed5e:	and    al,0x56
   14000ed60:	rex.RX (bad) 
   14000ed62:	push   rbp
   14000ed63:	and    al,0xa4
   14000ed65:	and    DWORD PTR [rdx-0x65696c9d],edx
   14000ed6b:	(bad)  
   14000ed6c:	cmp    eax,0x468151a0
   14000ed71:	(bad)  
   14000ed72:	(bad)  
   14000ed73:	cld    
   14000ed74:	push   rsi
   14000ed75:	mov    al,0xdd
   14000ed77:	or     BYTE PTR [rcx-0x67],al
   14000ed7a:	cmp    DWORD PTR ds:[rcx+0x66],0xffffffe7
   14000ed7f:	out    0x94,eax
   14000ed81:	xchg   edx,eax
   14000ed82:	xchg   esp,eax
   14000ed83:	addr32 xchg edx,eax
   14000ed85:	ror    DWORD PTR [rdx+rax*1],0x3b
   14000ed89:	test   BYTE PTR [rdi+0x27],dl
   14000ed8c:	scas   al,BYTE PTR es:[rdi]
   14000ed8d:	test   DWORD PTR [rsp+rbp*2],ecx
   14000ed90:	cmc    
   14000ed91:	lahf   
   14000ed92:	or     BYTE PTR [rdx-0x49514098],dl
   14000ed98:	rex.WRB (bad) 
   14000ed9a:	(bad)  
   14000ed9b:	or     al,0xec
   14000ed9d:	rex.RXB adc r14b,r8b
   14000eda0:	hlt    
   14000eda1:	xchg   edi,eax
   14000eda2:	xchg   BYTE PTR [rcx+rcx*1],bh
   14000eda5:	rex test DWORD PTR [rbp-0x665e0090],0x95e353a9
   14000edb0:	jrcxz  0x14000ee16
   14000edb2:	addr32 pop rbp
   14000edb4:	repnz mov ch,0xbf
   14000edb7:	(bad)  
   14000edb8:	std    
   14000edb9:	sub    eax,0x5f9dfdbb
   14000edbe:	(bad)  
   14000edbf:	sub    BYTE PTR [rax],cl
   14000edc1:	(bad)  
   14000edc2:	xor    DWORD PTR [rsi+rbp*2-0x77],esi
   14000edc6:	sub    eax,0xf9d9a9e8
   14000edcc:	out    dx,eax
   14000edcd:	ds repnz hlt 
   14000edd0:	xlat   BYTE PTR ds:[rbx]
   14000edd1:	fidiv  DWORD PTR [rcx-0x74]
   14000edd4:	call   0x141ab50b8
   14000edd9:	xchg   ebp,eax
   14000edda:	rex.X stos DWORD PTR es:[rdi],eax
   14000eddc:	fsubr  DWORD PTR [rsi]
   14000edde:	mov    bh,BYTE PTR [rax-0x46e379ce]
   14000ede4:	sbb    bl,BYTE PTR [rcx-0x16]
   14000ede7:	mov    ch,0xdf
   14000ede9:	lods   al,BYTE PTR ds:[rsi]
   14000edea:	adc    DWORD PTR [rdx],ebp
   14000edec:	jmp    0xc031ceed
   14000edf1:	mov    dl,0x11
   14000edf3:	push   rsp
   14000edf4:	loope  0x14000ed7a
   14000edf6:	(bad)  
   14000edf7:	or     DWORD PTR [rdi-0x5be5fd4c],eax
   14000edfd:	out    0xb5,al
   14000edff:	nop
   14000ee00:	rex.WRX imul r11,rdx,0xffffffffffffffa5
   14000ee04:	in     al,0x9
   14000ee06:	jl     0x14000ee20
   14000ee08:	add    ax,0x4057
   14000ee0c:	xor    al,ch
   14000ee0e:	mov    dh,0x74
   14000ee10:	(bad)  
   14000ee11:	je     0x14000ee2d
   14000ee13:	adc    ecx,DWORD PTR [rax+0x2]
   14000ee16:	sub    DWORD PTR [rsi-0x64],0xffffffbd
   14000ee1a:	stos   DWORD PTR es:[rdi],eax
   14000ee1b:	xchg   r8,rax
   14000ee1d:	test   eax,0x1c69de9
   14000ee22:	(bad)  
   14000ee23:	test   BYTE PTR [rdx+rdx*1+0x43cfa852],al
   14000ee2a:	ins    DWORD PTR es:[rdi],dx
   14000ee2b:	sahf   
   14000ee2c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ee2d:	out    dx,al
   14000ee2e:	fisttp WORD PTR [rcx]
   14000ee30:	mov    ebp,0x690df570
   14000ee35:	in     eax,0x5f
   14000ee37:	adc    dh,ah
   14000ee39:	xchg   esp,eax
   14000ee3a:	and    eax,0x6b981aeb
   14000ee3f:	push   0x4d
   14000ee41:	and    bh,al
   14000ee43:	rex.WB pop r9
   14000ee45:	xor    edx,eax
   14000ee47:	cli    
   14000ee48:	hlt    
   14000ee49:	sbb    BYTE PTR [rdx-0x7e29652f],al
   14000ee4f:	ror    DWORD PTR [rsp+rbp*2],cl
   14000ee52:	sub    al,0xdb
   14000ee54:	pop    rbx
   14000ee55:	mov    esp,edx
   14000ee57:	xor    eax,0x12a2c691
   14000ee5c:	rex.X
   14000ee5d:	repz call 0x1273487c7
   14000ee63:	out    0x4f,al
   14000ee65:	mov    ch,0xda
   14000ee67:	mov    cl,0x3f
   14000ee69:	repz mov dl,0xb3
   14000ee6c:	add    ah,bl
   14000ee6e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ee6f:	stos   DWORD PTR es:[rdi],eax
   14000ee70:	test   DWORD PTR [rip+0x4141170],eax        # 0x14414ffe6
   14000ee76:	mov    al,0x3c
   14000ee78:	xor    ch,BYTE PTR [rsi-0x40]
   14000ee7b:	mov    DWORD PTR [rbx],esi
   14000ee7d:	mov    bl,0x7b
   14000ee7f:	(bad)  
   14000ee80:	lea    ecx,[rdi+0x6b7fa2c5]
   14000ee86:	push   rdx
   14000ee87:	adc    eax,0xa6818268
   14000ee8c:	rol    BYTE PTR [rbp+0x55],1
   14000ee8f:	rex.WRX adc QWORD PTR [rdi],r14
   14000ee92:	sbb    ecx,DWORD PTR [rax-0x5033142f]
   14000ee98:	xor    eax,0x925ac330
   14000ee9d:	(bad)  
   14000ee9e:	jns    0x14000eec7
   14000eea0:	ins    BYTE PTR es:[rdi],dx
   14000eea1:	(bad)  
   14000eea2:	(bad)  
   14000eea3:	lsl    ebp,bx
   14000eea6:	push   rdi
   14000eea7:	xchg   DWORD PTR [rsi-0x50],ebx
   14000eeaa:	rex.WR
   14000eeab:	es pop rdx
   14000eead:	cmp    DWORD PTR [rcx],ebp
   14000eeaf:	xchg   DWORD PTR [rip+0xfffffffff744cf03],ecx        # 0x13745bdb8
   14000eeb5:	add    al,0xde
   14000eeb7:	sbb    eax,0x4900e2ef
   14000eebc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000eebd:	(bad)  
   14000eebe:	xor    ebp,edi
   14000eec0:	ror    DWORD PTR [rdx],0xab
   14000eec3:	(bad)  
   14000eec4:	(bad)  
   14000eec5:	nop
   14000eec6:	fcmovbe st,st(0)
   14000eec8:	imul   esp,DWORD PTR [rdi+rbp*1+0x25],0xb6144704
   14000eed0:	push   0xffffffffffffffc9
   14000eed2:	mov    edi,0x182d68be
   14000eed7:	xchg   edi,eax
   14000eed8:	shl    BYTE PTR [rbp+0x32],0x4a
   14000eedc:	add    al,BYTE PTR [rcx-0x1116d7ca]
   14000eee2:	loope  0x14000eec0
   14000eee4:	mov    ah,al
   14000eee6:	(bad)
   14000eee9:	xor    DWORD PTR [rcx+rdx*4-0x44],0xffffff84
   14000eeee:	fsubr  QWORD PTR [rcx+rbx*8+0x64]
   14000eef2:	adc    bl,BYTE PTR [rsi-0x55c92a30]
   14000eef8:	fiadd  DWORD PTR [rsi-0xa]
   14000eefb:	add    eax,0x6143e0c9
   14000ef00:	fstp   QWORD PTR [rbp-0x3b4fbf4c]
   14000ef06:	test   edi,0xb67278a2
   14000ef0c:	jle    0x14000ef10
   14000ef0e:	and    edi,eax
   14000ef10:	jne    0x14000eee4
   14000ef12:	pop    rcx
   14000ef13:	xchg   edi,eax
   14000ef14:	popf   
   14000ef15:	lock (bad) 
   14000ef17:	(bad)  
   14000ef18:	jmp    QWORD PTR [rip+0xffffffffa58020a0]        # 0xe5810fbe
   14000ef1e:	loope  0x14000eee7
   14000ef20:	add    DWORD PTR [rdx],esp
   14000ef22:	movabs al,ds:0x87d3e8fbda9fd7fd
   14000ef2b:	mov    gs,esi
   14000ef2d:	adc    eax,DWORD PTR [rbx-0x25]
   14000ef30:	adc    DWORD PTR [rcx-0x61],esp
   14000ef33:	popf   
   14000ef34:	scas   eax,DWORD PTR es:[rdi]
   14000ef35:	cs ss rex.R (bad) 
   14000ef39:	(bad)  
   14000ef3a:	(bad)  
   14000ef3b:	push   rbp
   14000ef3c:	mov    bl,0xc7
   14000ef3e:	xchg   ecx,eax
   14000ef3f:	and    esi,DWORD PTR [rdi]
   14000ef41:	and    BYTE PTR [rbx+0x63],al
   14000ef44:	jbe    0x14000ef59
   14000ef46:	js     0x14000ef7d
   14000ef48:	out    dx,al
   14000ef49:	movabs eax,ds:0xa080b8587f3bd1fd
   14000ef52:	or     eax,0x5d40d9c4
   14000ef57:	push   rsi
   14000ef58:	cwde   
   14000ef59:	ins    BYTE PTR es:[rdi],dx
   14000ef5a:	mov    ecx,0xad91f3ad
   14000ef5f:	rex.WRXB popf 
   14000ef61:	cli    
   14000ef62:	(bad)  
   14000ef63:	xor    dl,BYTE PTR [rip+0xffffffffcfafdf62]        # 0x10fb0cecb
   14000ef69:	clc    
   14000ef6a:	clc    
   14000ef6b:	sbb    bh,ah
   14000ef6d:	mov    cl,0xf8
   14000ef6f:	fisttp QWORD PTR [rax+0x7f86bfc2]
   14000ef75:	rex.WR push rdx
   14000ef77:	mov    dh,0x67
   14000ef79:	pop    rdi
   14000ef7a:	sbb    cl,BYTE PTR [rbx]
   14000ef7c:	mov    BYTE PTR [rdx-0x3b],bh
   14000ef7f:	mov    edx,0x9ac77800
   14000ef84:	(bad)  
   14000ef85:	xchg   BYTE PTR [rbx],ah
   14000ef87:	and    eax,0x267cfdb4
   14000ef8c:	(bad)  
   14000ef8d:	xchg   edi,eax
   14000ef8e:	or     bh,BYTE PTR [rbx-0x229ef9dd]
   14000ef94:	and    DWORD PTR [rcx+0x740206b5],eax
   14000ef9a:	or     al,0xcd
   14000ef9c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000ef9d:	rex.WRX sar BYTE PTR [rdi+0x686487a9],1
   14000efa4:	jne    0x14000efef
   14000efa6:	and    al,0x96
   14000efa8:	or     BYTE PTR [rcx-0x50],0x8
   14000efac:	(bad)  
   14000efad:	ja     0x14000ef35
   14000efaf:	stc    
   14000efb0:	(bad)  
   14000efb1:	movsxd esp,DWORD PTR [rdi]
   14000efb3:	(bad)  
   14000efb4:	rex.WRX lea r10,[rdi+0x1c]
   14000efb8:	add    DWORD PTR [rax-0x4000d69b],edi
   14000efbe:	xor    bh,bh
   14000efc0:	xchg   edi,eax
   14000efc1:	rex
   14000efc2:	add    BYTE PTR [r9+0x74],bl
   14000efc6:	sti    
   14000efc7:	shl    DWORD PTR [rsi+rbp*2],0x0
   14000efcb:	rcr    dl,1
   14000efcd:	repz in al,0xa1
   14000efd0:	iret   
   14000efd1:	rex.WRXB
   14000efd2:	rex.WRB sahf 
   14000efd4:	rex.B or al,0xed
   14000efd7:	mov    ah,0x56
   14000efd9:	xor    BYTE PTR [rdx],0x24
   14000efdc:	(bad)  
   14000efdd:	(bad)  [rdx-0x3b]
   14000efe0:	mov    bl,0x47
   14000efe2:	mov    ebx,ebx
   14000efe4:	xor    DWORD PTR [rbx+rdi*4+0x42b4a4dd],ebp
   14000efeb:	or     DWORD PTR [rcx+0x1a758df3],esp
   14000eff1:	adc    DWORD PTR [rdi],ecx
   14000eff3:	rex.WX sub QWORD PTR [rcx],rsi
   14000eff6:	add    al,0x21
   14000eff8:	enter  0xefd4,0x4f
   14000effc:	jl     0x14000eff8
   14000effe:	rex.WR
   14000efff:	rcl    BYTE PTR ss:[rdx],0x84
   14000f003:	repz mov ebx,0x81d4f785
   14000f009:	mov    bh,0xdd
   14000f00b:	rex.WRB rcr BYTE PTR [r13+0x2d],0xbe
   14000f010:	and    ecx,DWORD PTR [rbx]
   14000f012:	rex.W xor al,0x71
   14000f015:	rex.RX
   14000f016:	repz addr32 sub al,0x0
   14000f01a:	jb     0x14000f01e
   14000f01c:	outs   dx,BYTE PTR ds:[rsi]
   14000f01d:	(bad)  
   14000f01f:	sbb    ch,dl
   14000f021:	jae    0x14000f073
   14000f023:	lahf   
   14000f024:	mov    bh,0x19
   14000f026:	add    edi,edx
   14000f028:	retf   0x91cc
   14000f02b:	mov    DWORD PTR [rbx-0x17],ecx
   14000f02e:	(bad)  [rbx+0x49]
   14000f031:	imul   ecx,DWORD PTR [rdi+0x9076091],0xac4e5909
   14000f03b:	movabs ds:0x2dd1e726a091e2c4,al
   14000f044:	xor    r12b,r11b
   14000f047:	imul   edi,DWORD PTR [rsi-0x2e8fb3f5],0xffffffac
   14000f04e:	sbb    edx,DWORD PTR [rdx]
   14000f050:	rol    BYTE PTR [rdx-0x10],1
   14000f053:	test   eax,0x67a62367
   14000f058:	sbb    eax,edi
   14000f05a:	xor    DWORD PTR [rdx-0x18e89941],ebx
   14000f060:	add    bh,BYTE PTR [rax-0x6ebfe8]
   14000f066:	mov    edi,0xb0041404
   14000f06b:	xor    al,0xdc
   14000f06d:	xrstors [rdi]
   14000f070:	(bad)  
   14000f071:	(bad)  
   14000f072:	(bad)  
   14000f073:	sti    
   14000f074:	(bad)  
   14000f075:	out    dx,al
   14000f076:	jmp    rsi
   14000f078:	mov    bl,0x87
   14000f07a:	setg   BYTE PTR [rax]
   14000f07d:	and    edi,DWORD PTR [rbx+0xe8ec080]
   14000f083:	(bad)  
   14000f084:	rex.WB sbb al,0x0
   14000f087:	adc    al,0xf1
   14000f089:	int3   
   14000f08a:	(bad)  
   14000f08b:	(bad)  
   14000f08c:	lock rex.WRB call 0x108fdb103
   14000f093:	popf   
   14000f094:	(bad)  
   14000f095:	xchg   edi,eax
   14000f096:	ss xchg edi,eax
   14000f098:	(bad)  
   14000f099:	mov    eax,0xb4685980
   14000f09e:	jns    0x14000f0b8
   14000f0a0:	and    BYTE PTR [rdx-0x5f],cl
   14000f0a3:	jmp    0x10e9988bf
   14000f0a8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f0a9:	cmp    esp,DWORD PTR [r15+0x2e]
   14000f0ad:	(bad)  
   14000f0ae:	and    DWORD PTR [rax-0x34],esi
   14000f0b1:	xor    DWORD PTR [rsi],ebp
   14000f0b3:	(bad)  
   14000f0b4:	add    BYTE PTR [rcx+0x6e6890b5],ch
   14000f0ba:	(bad)  
   14000f0bb:	xchg   ebx,eax
   14000f0bc:	add    dl,bl
   14000f0be:	jae    0x14000f107
   14000f0c0:	fs mov edx,0x486d199d
   14000f0c6:	jp     0x14000f065
   14000f0c8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f0c9:	xchg   ebp,eax
   14000f0ca:	xchg   edi,eax
   14000f0cb:	or     edx,DWORD PTR [rax+rdi*2-0x5]
   14000f0cf:	stos   BYTE PTR es:[rdi],al
   14000f0d0:	mov    bl,0x50
   14000f0d2:	fwait
   14000f0d3:	rex.WRB xor al,0x79
   14000f0d6:	xchg   edx,eax
   14000f0d7:	loop   0x14000f0dc
   14000f0d9:	imul   ecx,DWORD PTR [rcx+0x58],0xffffffd7
   14000f0dd:	shl    BYTE PTR [rbp-0x3e93a2da],0x3e
   14000f0e4:	outs   dx,DWORD PTR ds:[rsi]
   14000f0e5:	(bad)  
   14000f0e7:	mov    eax,0x6989d2cf
   14000f0ec:	out    dx,al
   14000f0ed:	cmp    eax,0x32e6ef41
   14000f0f2:	rex.WB movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14000f0f4:	rex.WRXB jb 0x14000f172
   14000f0f7:	xchg   ecx,eax
   14000f0f8:	add    al,0x24
   14000f0fa:	out    0xf5,eax
   14000f0fc:	sbb    ch,dh
   14000f0fe:	cmp    eax,0xec7e3338
   14000f103:	(bad)  
   14000f104:	fadd   QWORD PTR [rcx+0x52]
   14000f107:	add    ch,BYTE PTR [rax-0x4289626d]
   14000f10d:	sub    BYTE PTR [rbx],al
   14000f10f:	mov    esi,0xb0041444
   14000f114:	cmp    al,0xfc
   14000f116:	push   0xffffffffffffffb2
   14000f118:	or     BYTE PTR [rax-0x61],ch
   14000f11b:	lahf   
   14000f11c:	stos   BYTE PTR es:[rdi],al
   14000f11d:	push   rbp
   14000f11e:	mov    esi,0x9f93ff76
   14000f123:	stos   BYTE PTR es:[rdi],al
   14000f124:	(bad)  
   14000f125:	push   0xffffffffffffffc8
   14000f127:	xor    eax,0xb0a52657
   14000f12c:	(bad)  
   14000f12e:	adc    al,0x14
   14000f130:	iret   
   14000f131:	sahf   
   14000f132:	and    BYTE PTR [rdx-0x41e77f45],bl
   14000f138:	ror    eax,cl
   14000f13a:	rex.WRX and BYTE PTR [rbp+0x2e],r13b
   14000f13e:	mov    ebp,0xac02c5e4
   14000f143:	(bad)  
   14000f144:	je     0x14000f13f
   14000f146:	jns    0x14000f0d9
   14000f148:	out    0xe7,al
   14000f14a:	or     eax,0xdedaf841
   14000f14f:	rol    eax,cl
   14000f151:	rex.X sub al,0x16
   14000f154:	(bad)  
   14000f155:	mov    esi,ss
   14000f157:	jbe    0x14000f0dd
   14000f159:	shl    ch,1
   14000f15b:	sbb    al,0xb7
   14000f15d:	in     eax,dx
   14000f15e:	fidiv  DWORD PTR [rsi-0x1b]
   14000f161:	(bad)  
   14000f162:	int    0x58
   14000f164:	or     dh,bl
   14000f166:	stos   DWORD PTR es:[rdi],eax
   14000f167:	and    ebx,DWORD PTR [rip+0x4861ebfc]        # 0x18862dd69
   14000f16d:	movabs al,ds:0xe24111d05fd24b3a
   14000f176:	mov    fs,WORD PTR [rax-0xa]
   14000f179:	adc    ebx,DWORD PTR [rax+0xe]
   14000f17c:	shl    DWORD PTR [rsi],1
   14000f17e:	int    0x67
   14000f180:	cmp    DWORD PTR [rsi-0x1a],0x58
   14000f184:	sar    ecx,cl
   14000f186:	mov    eax,0x322ce875
   14000f18b:	or     al,0x11
   14000f18d:	in     eax,0x30
   14000f18f:	mov    ebp,0xd73c25b7
   14000f194:	or     DWORD PTR [rax+0x6b],ebx
   14000f197:	rcl    DWORD PTR [rdi+0x7138958f],0x6a
   14000f19e:	cli    
   14000f19f:	jo     0x14000f1b5
   14000f1a1:	stos   DWORD PTR es:[rdi],eax
   14000f1a2:	add    eax,0xc75fed52
   14000f1a7:	push   0x5400577f
   14000f1ac:	cwde   
   14000f1ad:	call   QWORD PTR [rdi+0x16008288]
   14000f1b3:	and    ebp,DWORD PTR [rdi-0x2]
   14000f1b6:	sti    
   14000f1b7:	add    eax,0xf5a01d41
   14000f1bc:	mov    ecx,0xeafe1faf
   14000f1c1:	rex.XB jnp 0x14000f1bb
   14000f1c4:	(bad)  
   14000f1c5:	xchg   ebx,eax
   14000f1c6:	movabs ds:0xe24ab400ad6d1bb,eax
   14000f1cf:	and    BYTE PTR [rsp+rax*8],al
   14000f1d2:	xchg   ebx,eax
   14000f1d3:	sti    
   14000f1d4:	rol    DWORD PTR [rbx],1
   14000f1d6:	mov    ebx,0xe0ada551
   14000f1db:	stos   BYTE PTR es:[rdi],al
   14000f1dc:	icebp  
   14000f1dd:	and    al,0xc8
   14000f1df:	rol    BYTE PTR [rsi-0x26],1
   14000f1e2:	pop    rbp
   14000f1e3:	or     bh,0x99
   14000f1e6:	int    0x2e
   14000f1e8:	or     eax,0x1b29618
   14000f1ed:	(bad)  
   14000f1ee:	addr32 xchg bl,bh
   14000f1f1:	pop    rdx
   14000f1f2:	jns    0x14000f185
   14000f1f4:	out    dx,eax
   14000f1f5:	sahf   
   14000f1f6:	push   0x48
   14000f1f8:	(bad)  
   14000f1f9:	mov    cl,0xf0
   14000f1fb:	rex.XB xchg r14d,eax
   14000f1fd:	sub    BYTE PTR [rdx],dh
   14000f1ff:	xchg   esi,eax
   14000f200:	sub    BYTE PTR [rdi-0x221c4206],0xba
   14000f207:	outs   dx,DWORD PTR ds:[rsi]
   14000f208:	(bad)  
   14000f209:	mov    eax,0x9c27c6af
   14000f20e:	cli    
   14000f20f:	cmp    al,0xd4
   14000f211:	out    0x3c,al
   14000f213:	(bad)  
   14000f214:	(bad)  
   14000f215:	adc    bl,BYTE PTR [rbx-0x3b618895]
   14000f21b:	and    al,0x9c
   14000f21d:	xor    eax,0xb0fe35e3
   14000f222:	out    dx,eax
   14000f223:	jmp    0x14000f28f
   14000f225:	mov    esi,esi
   14000f227:	fdiv   DWORD PTR [rcx+riz*8]
   14000f22a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f22b:	pop    rsi
   14000f22c:	(bad)  
   14000f22e:	add    edx,ebx
   14000f230:	retf   0xa740
   14000f233:	int    0x89
   14000f235:	xchg   ebp,eax
   14000f236:	data16 rex.WRX (bad) 
   14000f239:	bnd jmp 0x17d9dc146
   14000f23f:	jle    0x14000f2bb
   14000f241:	outs   dx,BYTE PTR ds:[rsi]
   14000f242:	(bad)  
   14000f243:	test   eax,0xa6c957f0
   14000f248:	add    BYTE PTR [rbp-0x67affb],bl
   14000f24e:	xchg   edi,eax
   14000f24f:	and    al,0xe2
   14000f252:	xchg   DWORD PTR [rdx+rbp*1+0x3abcba21],edi
   14000f259:	movabs ds:0x5a35daf4b42dce54,eax
   14000f262:	mov    edi,0xdeeb96e6
   14000f267:	ficom  DWORD PTR [rdi+0x2e]
   14000f26a:	or     edx,DWORD PTR [rbp-0x45]
   14000f26d:	(bad)  
   14000f26e:	retf   
   14000f26f:	in     al,0xdd
   14000f271:	mov    al,0x17
   14000f273:	lea    ecx,[rsi+0x4c4ea81a]
   14000f279:	mov    al,0xee
   14000f27b:	(bad)  
   14000f27c:	(bad)  
   14000f27d:	not    BYTE PTR [rcx]
   14000f27f:	nop
   14000f280:	adc    ch,cl
   14000f282:	(bad)  
   14000f283:	jl     0x14000f226
   14000f285:	add    rax,0x7956903c
   14000f28b:	xchg   dh,dl
   14000f28d:	(bad)  
   14000f28e:	jbe    0x14000f2e1
   14000f290:	je     0x14000f309
   14000f292:	addr32 pop rdi
   14000f294:	cwde   
   14000f295:	and    eax,0x393a348b
   14000f29a:	(bad)  
   14000f29b:	iret   
   14000f29c:	pop    rbx
   14000f29d:	or     BYTE PTR [rax+0x76dc35ec],cl
   14000f2a3:	(bad)  
   14000f2a4:	(bad)  
   14000f2a5:	jmp    0x14000f2d3
   14000f2a7:	movabs r8,0xe0d7c17cfb7810d1
   14000f2b1:	sbb    eax,0x755b5e64
   14000f2b6:	repz (bad) 
   14000f2b9:	xchg   BYTE PTR [rbx+rbx*8],bl
   14000f2bc:	movabs eax,ds:0xd4881b29778423a
   14000f2c5:	sub    QWORD PTR [r15+0x50e9d010],rbp
   14000f2cc:	sti    
   14000f2cd:	(bad)  
   14000f2ce:	ds ret 0x10a1
   14000f2d2:	push   rcx
   14000f2d3:	jbe    0x14000f2da
   14000f2d5:	and    r15b,BYTE PTR [r11+0xb]
   14000f2d9:	or     eax,0xe87c92b1
   14000f2de:	mov    cl,0x92
   14000f2e0:	dec    dh
   14000f2e2:	and    esp,DWORD PTR [rdi-0x516762e2]
   14000f2e8:	(bad)  
   14000f2e9:	add    esp,DWORD PTR [rsi-0x7f]
   14000f2ec:	imul   esp,DWORD PTR [rax+0x6],0xc690a8
   14000f2f3:	mov    dl,BYTE PTR [rdx]
   14000f2f5:	loopne 0x14000f2de
   14000f2f7:	add    BYTE PTR [rdx-0x17796a00],0xb2
   14000f2fe:	ins    DWORD PTR es:[rdi],dx
   14000f2ff:	and    ebx,DWORD PTR [rcx+0x4]
   14000f302:	(bad)  
   14000f303:	in     al,dx
   14000f304:	cmp    esi,DWORD PTR [rdi-0x6]
   14000f307:	cmc    
   14000f308:	mov    bh,0x6e
   14000f30a:	jns    0x14000f2d9
   14000f30c:	jne    0x14000f345
   14000f30e:	fdiv   QWORD PTR [rcx-0x5f31aabb]
   14000f314:	jrcxz  0x14000f2ac
   14000f316:	cmp    edx,ecx
   14000f318:	sbb    ebp,DWORD PTR [rax-0x5d]
   14000f31b:	jmp    0x14000f370
   14000f31d:	shl    BYTE PTR [rbx-0x664026f7],1
   14000f323:	xor    BYTE PTR [rsi],bh
   14000f325:	(bad)  
   14000f326:	rex.B push 0xffffffffb569fba3
   14000f32c:	popf   
   14000f32d:	mov    eax,DWORD PTR [rbx]
   14000f32f:	sbb    BYTE PTR [rcx+0x75e1530d],ah
   14000f335:	add    esp,DWORD PTR [rdi+0x32]
   14000f338:	add    DWORD PTR [rsi],esi
   14000f33a:	pop    rdi
   14000f33b:	sar    BYTE PTR [rbp-0x3f],0xee
   14000f33f:	mov    dl,0x40
   14000f341:	rex.WRX
   14000f342:	fwait
   14000f343:	mov    ebx,0xd022df6d
   14000f348:	mov    eax,0x63995d16
   14000f34d:	jge    0x14000f307
   14000f34f:	out    dx,al
   14000f350:	rex.R (bad) 
   14000f352:	(bad)  
   14000f354:	lahf   
   14000f355:	adc    ecx,DWORD PTR [rax-0x6]
   14000f358:	add    al,0xb4
   14000f35a:	int    0xbc
   14000f35c:	or     ah,dh
   14000f35e:	hlt    
   14000f35f:	in     eax,0x2c
   14000f361:	or     eax,0x2ad1031b
   14000f366:	std    
   14000f367:	(bad)  
   14000f368:	pop    rbp
   14000f369:	or     DWORD PTR [rax+0x3f1eb416],esi
   14000f36f:	rex.W push rsp
   14000f371:	imul   esp,DWORD PTR [rdx],0xd4b8ca47
   14000f377:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f378:	cmp    DWORD PTR [rbp-0x70],edx
   14000f37b:	xchg   edx,eax
   14000f37c:	xchg   ebx,eax
   14000f37d:	out    0x68,al
   14000f37f:	ins    DWORD PTR es:[rdi],dx
   14000f380:	cmp    eax,0x23f9f87f
   14000f385:	rex.RXB neg DWORD PTR [rip+0xffffffff980fb89a]        # 0xd810ac26
   14000f38c:	ret    
   14000f38d:	or     bh,bh
   14000f38f:	mov    ah,0x5d
   14000f391:	ja     0x14000f348
   14000f393:	add    cl,bh
   14000f395:	and    ah,BYTE PTR [rax+0x8bffcc2]
   14000f39b:	or     al,BYTE PTR [rdx]
   14000f39d:	pop    rax
   14000f39e:	sbb    bl,ch
   14000f3a0:	lods   al,BYTE PTR ds:[rsi]
   14000f3a1:	add    BYTE PTR [rax],ah
   14000f3a3:	imul   edi,DWORD PTR [rbx+0x74f4f41b],0xb75c772a
   14000f3ad:	std    
   14000f3ae:	sahf   
   14000f3af:	xchg   ecx,eax
   14000f3b0:	loope  0x14000f427
   14000f3b2:	sbb    DWORD PTR [rdx+0x38],0x4d661e9b
   14000f3b9:	(bad)  
   14000f3ba:	and    DWORD PTR [rip+0xffffffffae4159ba],esp        # 0xee424d7a
   14000f3c0:	mov    ebp,0x2622115
   14000f3c5:	data16 ins BYTE PTR es:[rdi],dx
   14000f3c7:	movabs al,ds:0xed33989493f646cf
   14000f3d0:	leave  
   14000f3d1:	cli    
   14000f3d2:	test   BYTE PTR [rsi+0x2c209c10],0x12
   14000f3d9:	jo     0x14000f44d
   14000f3db:	(bad)  
   14000f3dc:	rex.X pop rsi
   14000f3de:	(bad)  [rbx-0x32b7e308]
   14000f3e4:	cli    
   14000f3e5:	rex.R mov ebx,0x5e7de67b
   14000f3eb:	fcom   DWORD PTR [rbx]
   14000f3ed:	xor    esp,0xdc2e99bf
   14000f3f3:	test   al,0x35
   14000f3f5:	mov    ah,0x6d
   14000f3f7:	addr32 out dx,al
   14000f3f9:	sahf   
   14000f3fa:	pop    rsi
   14000f3fb:	repnz xor ah,BYTE PTR [rdi]
   14000f3fe:	test   BYTE PTR [rax+riz*4+0x33],al
   14000f402:	(bad)  
   14000f403:	rex.RB je 0x14000f3f2
   14000f406:	adc    al,0x8d
   14000f408:	ret    
   14000f409:	adc    ecx,eax
   14000f40b:	jne    0x14000f3f2
   14000f40d:	(bad)  
   14000f40e:	(bad)  
   14000f40f:	adc    bh,dh
   14000f411:	push   rdi
   14000f412:	ins    DWORD PTR es:[rdi],dx
   14000f413:	(bad)  
   14000f414:	sbb    ecx,DWORD PTR [rcx+0x7f783e01]
   14000f41a:	(bad)  
   14000f41b:	jp     0x14000f485
   14000f41d:	out    dx,eax
   14000f41e:	cdq    
   14000f41f:	(bad)  
   14000f420:	sub    edx,ebp
   14000f422:	(bad)  
   14000f423:	pop    rcx
   14000f424:	(bad)  
   14000f425:	retf   0x332e
   14000f428:	rol    BYTE PTR [rdx],0x69
   14000f42b:	adc    al,dl
   14000f42d:	add    eax,0xbf810b6b
   14000f432:	rex.R adc al,0x4
   14000f435:	mov    al,0x3c
   14000f437:	xchg   esi,eax
   14000f438:	jne    0x14000f43f
   14000f43a:	neg    BYTE PTR [rip+0x72bc9c9a]        # 0x1b2bd90da
   14000f440:	fneni(8087 only) 
   14000f442:	(bad)  
   14000f443:	cmp    ebp,esi
   14000f445:	mov    eax,0xaed946fb
   14000f44a:	movabs al,ds:0x89bafc666b2b55db
   14000f453:	js     0x14000f40c
   14000f455:	push   rcx
   14000f456:	lods   eax,DWORD PTR ds:[rsi]
   14000f457:	(bad)  
   14000f458:	jb     0x14000f457
   14000f45a:	fisttp QWORD PTR [rax+0x6b290e78]
   14000f460:	jbe    0x14000f472
   14000f462:	rex.WRX xchg rdi,rax
   14000f464:	and    BYTE PTR [rdi-0x4cd83e35],bl
   14000f46a:	add    DWORD PTR [rcx+0x784e0aba],edx
   14000f470:	(bad)  
   14000f471:	imul   edi,DWORD PTR [rdi-0x2e],0x527fc2fd
   14000f478:	(bad)  
   14000f479:	(bad)  
   14000f47a:	rex.WRXB movabs r10,0xfe0cb9ed247dba2e
   14000f484:	jnp    0x14000f463
   14000f486:	mov    esi,0x5cf3520a
   14000f48b:	jnp    0x14000f478
   14000f48d:	(bad)  
   14000f48e:	sub    eax,0x2ee5024b
   14000f493:	sbb    eax,0x35439288
   14000f498:	icebp  
   14000f499:	stc    
   14000f49a:	rex.WB stos BYTE PTR es:[rdi],al
   14000f49c:	(bad)  
   14000f49d:	mov    fs,WORD PTR [rcx+0x21373d87]
   14000f4a3:	cdq    
   14000f4a4:	retf   
   14000f4a5:	and    BYTE PTR [rbp+0x5f05ad5f],dl
   14000f4ab:	sbb    bl,BYTE PTR [rbx-0x39]
   14000f4ae:	rex.RXB (bad) 
   14000f4b0:	jns    0x14000f4b1
   14000f4b2:	faddp  st(3),st
   14000f4b4:	movsxd esi,DWORD PTR [rbx]
   14000f4b6:	rex.WRXB (bad) 
   14000f4b8:	test   dh,bl
   14000f4ba:	cdq    
   14000f4bb:	(bad)  
   14000f4bc:	jae    0x14000f4d6
   14000f4be:	add    cl,al
   14000f4c0:	(bad)  
   14000f4c1:	add    BYTE PTR [rip+0x5112ffda],dl        # 0x19113f4a1
   14000f4c7:	adc    al,al
   14000f4c9:	bnd call 0x197b8fbb5
   14000f4cf:	or     eax,ecx
   14000f4d1:	jae    0x14000f526
   14000f4d3:	jae    0x14000f47c
   14000f4d5:	outs   dx,BYTE PTR ds:[rsi]
   14000f4d6:	fidiv  WORD PTR [rip+0x3bede6f2]        # 0x17beedbce
   14000f4dc:	jbe    0x14000f46d
   14000f4de:	call   0x1a6a52868
   14000f4e3:	mov    ebx,0x4018091b
   14000f4e8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f4e9:	mov    ch,dl
   14000f4eb:	(bad)  
   14000f4ec:	mov    BYTE PTR [rip+0x39d52237],dh        # 0x179d61729
   14000f4f2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f4f3:	push   rsp
   14000f4f4:	fld    DWORD PTR [rax]
   14000f4f6:	cdq    
   14000f4f7:	or     ecx,eax
   14000f4f9:	add    eax,0x2bbabd32
   14000f4fe:	movabs al,ds:0xd225c49d0504c211
   14000f507:	loop   0x14000f55d
   14000f509:	data16 (bad) 
   14000f50b:	in     al,0x5f
   14000f50d:	and    DWORD PTR fs:[rax+0x4b79fe9a],edx
   14000f514:	and    BYTE PTR [rcx-0x47],dl
   14000f517:	push   rsi
   14000f518:	(bad)  
   14000f519:	mov    edx,0x39c93cf6
   14000f51e:	(bad)  
   14000f51f:	adc    dh,BYTE PTR [rcx-0x2e]
   14000f522:	fldln2 
   14000f524:	outs   dx,BYTE PTR ds:[rsi]
   14000f525:	jmp    0x14000f4f4
   14000f527:	xchg   BYTE PTR [rcx-0x71a0b0aa],bh
   14000f52d:	rex.X in eax,dx
   14000f52f:	std    
   14000f530:	out    0xe6,eax
   14000f532:	pop    rcx
   14000f533:	mov    eax,0x3a6259ff
   14000f538:	push   rax
   14000f539:	xor    ch,BYTE PTR [rsi+0x2488488e]
   14000f53f:	gs adc al,0xd
   14000f542:	pop    rsp
   14000f543:	adc    BYTE PTR [rbx],bh
   14000f545:	clc    
   14000f546:	std    
   14000f547:	jg     0x14000f585
   14000f549:	jle    0x14000f5b1
   14000f54b:	out    dx,eax
   14000f54c:	xor    ebx,0xf13bb7f7
   14000f552:	and    al,0x46
   14000f554:	clc    
   14000f555:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f556:	xor    BYTE PTR [rcx],dh
   14000f558:	add    BYTE PTR [rdi-0x10106203],ah
   14000f55e:	(bad)  
   14000f55f:	add    DWORD PTR [rcx],ebp
   14000f561:	jo     0x14000f56c
   14000f563:	sub    BYTE PTR [rax],cl
   14000f565:	loopne 0x14000f549
   14000f567:	lock cmc 
   14000f569:	sub    bl,dh
   14000f56b:	mov    edx,0x74c4c404
   14000f570:	mov    ebp,0xcce6eb13
   14000f575:	sbb    eax,0xcb7f6c37
   14000f57a:	(bad)  
   14000f57b:	xchg   ecx,eax
   14000f57c:	rcl    DWORD PTR [rax+0x37],1
   14000f57f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f580:	jno    0x14000f50f
   14000f582:	or     DWORD PTR cs:[rdx+rcx*2+0x2c],ebp
   14000f587:	or     al,0xa0
   14000f589:	xor    eax,0x3117a28b
   14000f58e:	jl     0x14000f5a3
   14000f590:	rex.B jl 0x14000f559
   14000f593:	data16 (bad) 
   14000f595:	pop    rsp
   14000f596:	rex.WB lods rax,QWORD PTR ds:[rsi]
   14000f598:	mov    ch,0x4
   14000f59a:	lock pop rsi
   14000f59c:	xor    ebp,DWORD PTR [rbp-0x49]
   14000f59f:	ins    DWORD PTR es:[rdi],dx
   14000f5a0:	fldcw  WORD PTR [rbp+0x76278fcb]
   14000f5a6:	mov    BYTE PTR [rdi-0x2a],ch
   14000f5a9:	out    0x6b,eax
   14000f5ab:	add    ah,ch
   14000f5ad:	xlat   BYTE PTR ds:[rbx]
   14000f5af:	sbb    DWORD PTR [rax],edi
   14000f5b1:	(bad)  
   14000f5b2:	pop    rsp
   14000f5b3:	out    0x1c,al
   14000f5b5:	xchg   ecx,eax
   14000f5b6:	or     bh,BYTE PTR [rsp+riz*4]
   14000f5b9:	and    al,0x80
   14000f5bb:	es popf 
   14000f5bd:	mov    eax,0x7b1d2444
   14000f5c2:	xchg   edx,eax
   14000f5c3:	clc    
   14000f5c4:	xchg   BYTE PTR [rbx+0x26a23248],dh
   14000f5ca:	sar    BYTE PTR [rax-0x7f],cl
   14000f5cd:	(bad)  
   14000f5ce:	shl    BYTE PTR [rcx+rax*4-0x3f],1
   14000f5d2:	mov    esi,0x5abab1cc
   14000f5d7:	movsxd esp,DWORD PTR [rcx-0x31]
   14000f5da:	shl    DWORD PTR [rdx+rbx*1-0x52f617b3],cl
   14000f5e1:	(bad)  
   14000f5e2:	and    ah,BYTE PTR [rax]
   14000f5e4:	cdq    
   14000f5e5:	movabs al,ds:0x97cefc8dfebe7bd4
   14000f5ee:	sbb    cl,BYTE PTR [edi]
   14000f5f1:	out    dx,eax
   14000f5f2:	cmp    eax,0x4ce4d0f9
   14000f5f7:	std    
   14000f5f8:	cmp    BYTE PTR [rcx+0x7fbe77f6],ch
   14000f5fe:	movabs eax,ds:0xf238b8020a205ffd
   14000f607:	xor    edi,DWORD PTR ss:[rax+0x31]
   14000f60b:	jp     0x14000f64d
   14000f60d:	ds jge 0x14000f688
   14000f610:	bnd ret 0xda6
   14000f614:	mov    ebp,0x78deb743
   14000f619:	in     eax,dx
   14000f61a:	lods   eax,DWORD PTR ds:[rsi]
   14000f61b:	cmp    eax,0x96a74152
   14000f620:	(bad)  
   14000f621:	rcl    BYTE PTR [rbx],1
   14000f623:	add    al,0x66
   14000f625:	and    al,0x60
   14000f627:	adc    BYTE PTR [rax+0x6b],al
   14000f62a:	sbb    ah,BYTE PTR [rip+0x3ae06186]        # 0x17ae157b6
   14000f630:	rex.X (bad) 
   14000f632:	(bad)  
   14000f633:	push   rax
   14000f634:	imul   edi,edx,0x7bca632e
   14000f63a:	mov    esi,esp
   14000f63c:	lods   al,BYTE PTR ds:[rsi]
   14000f63d:	(bad)  
   14000f63e:	and    al,0x30
   14000f640:	rex.W sub bpl,al
   14000f643:	scas   al,BYTE PTR es:[rdi]
   14000f644:	test   al,0x9b
   14000f647:	and    eax,0xfe1c7780
   14000f64c:	ds sti 
   14000f64e:	pop    rdi
   14000f64f:	adc    bh,ah
   14000f651:	adc    ebx,DWORD PTR [rsi+0x21ef7b60]
   14000f657:	shl    BYTE PTR [rsi+0x5f],cl
   14000f65a:	(bad)  
   14000f65b:	push   rdi
   14000f65c:	nop
   14000f65d:	je     0x14000f666
   14000f65f:	ret    0x3113
   14000f662:	popf   
   14000f663:	pop    rbp
   14000f664:	(bad)  
   14000f665:	rex.WXB add al,BYTE PTR [r8-0x51]
   14000f669:	jno    0x14000f672
   14000f66b:	hlt    
   14000f66c:	rex.X xchg ebp,eax
   14000f66e:	retf   0xfbbd
   14000f671:	push   0xe50ea54
   14000f676:	cmp    eax,0x47cf71e2
   14000f67b:	rex.X
   14000f67c:	movabs rdx,0xeff9f10d0fc7c834
   14000f686:	in     al,dx
   14000f687:	jg     0x14000f675
   14000f689:	enter  0xd9c9,0x27
   14000f68d:	xor    edx,eax
   14000f68f:	out    dx,eax
   14000f690:	jl     0x14000f711
   14000f692:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f693:	std    
   14000f694:	pop    rbp
   14000f695:	stc    
   14000f696:	scas   eax,DWORD PTR es:[rdi]
   14000f697:	lahf   
   14000f698:	cli    
   14000f699:	sub    esi,eax
   14000f69b:	sbb    al,0x50
   14000f69d:	adc    al,al
   14000f69f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f6a0:	and    DWORD PTR [rdi+0x1],ebp
   14000f6a3:	in     al,0x49
   14000f6a5:	rex.B jle 0x14000f69f
   14000f6a8:	xchg   ecx,eax
   14000f6a9:	adc    eax,DWORD PTR [rdi]
   14000f6ab:	outs   dx,DWORD PTR ds:[rsi]
   14000f6ac:	mov    esp,0x6bc6f46a
   14000f6b1:	scas   al,BYTE PTR es:[rdi]
   14000f6b2:	fnstcw WORD PTR [rbp+0x45]
   14000f6b5:	test   al,0x6a
   14000f6b7:	movabs al,ds:0x84852019005d4a2
   14000f6c0:	rex.X je 0x14000f726
   14000f6c3:	add    ah,BYTE PTR [rip+0x3aefa047]        # 0x17af09710
   14000f6c9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f6ca:	(bad)  
   14000f6cb:	rex.RXB enter 0x12e,0x3e
   14000f6d0:	jg     0x14000f6a3
   14000f6d2:	cmp    bl,BYTE PTR [rbx-0x48]
   14000f6d5:	and    ebp,DWORD PTR [rbp+0x47]
   14000f6d8:	int    0xa4
   14000f6da:	std    
   14000f6db:	jbe    0x14000f72b
   14000f6dd:	mov    al,0xf3
   14000f6df:	ds jns 0x14000f6c8
   14000f6e2:	adc    ebp,eax
   14000f6e4:	fsub   QWORD PTR [rdi]
   14000f6e6:	jmp    0xc228dd4d
   14000f6eb:	in     eax,dx
   14000f6ec:	mov    ah,0xbc
   14000f6ee:	rex.WRX sub rax,0xc66c809
   14000f6f4:	mov    ah,0xbd
   14000f6f6:	xchg   BYTE PTR [rdi+0x70d7741a],bl
   14000f6fc:	out    dx,eax
   14000f6fd:	xor    eax,0x578d26eb
   14000f702:	lods   eax,DWORD PTR ds:[rsi]
   14000f703:	push   rbx
   14000f704:	fpatan 
   14000f706:	or     al,0xf5
   14000f708:	mov    ecx,0xc254a21a
   14000f70d:	mov    ch,0xa
   14000f70f:	ret    
   14000f710:	out    0x11,eax
   14000f712:	sti    
   14000f713:	jns    0x14000f69a
   14000f715:	or     BYTE PTR [rcx-0x6c4541],bh
   14000f71b:	repnz test eax,0x3deff6c7
   14000f721:	cmp    BYTE PTR [rcx+0x1f],dh
   14000f724:	imul   ecx,edx,0xaefef9cf
   14000f72a:	or     al,cl
   14000f72c:	xchg   ebp,eax
   14000f72d:	(bad)  
   14000f72e:	cli    
   14000f72f:	jns    0x14000f730
   14000f731:	rex.X sti 
   14000f733:	(bad)  
   14000f734:	(bad)  
   14000f735:	adc    al,0x4
   14000f737:	jo     0x14000f7a2
   14000f739:	call   0x19de4fca4
   14000f73e:	add    edi,DWORD PTR [rcx+0x76]
   14000f741:	push   0xffffffffffffffee
   14000f743:	clc    
   14000f744:	push   rbp
   14000f745:	push   rdi
   14000f746:	lods   al,BYTE PTR ds:[rsi]
   14000f747:	mov    ecx,0x5b6dcaeb
   14000f74c:	xlat   BYTE PTR ds:[rbx]
   14000f74d:	mov    BYTE PTR [rax-0x528ff19e],ch
   14000f753:	mov    esp,0xf258c082
   14000f758:	(bad)  
   14000f759:	or     BYTE PTR [rbp+0x461c9409],cl
   14000f75f:	neg    DWORD PTR [rdi+0x4f]
   14000f762:	movabs al,ds:0x76d3fc469c4421ce
   14000f76b:	ret    0x6dd9
   14000f76e:	jg     0x14000f742
   14000f770:	rex.WRB
   14000f771:	or     DWORD PTR [eax+0x4f32fff9],edi
   14000f778:	loop   0x14000f782
   14000f77a:	rex.B js 0x14000f7cc
   14000f77d:	popf   
   14000f77e:	jg     0x14000f77c
   14000f780:	outs   dx,BYTE PTR ds:[rsi]
   14000f781:	or     al,0x41
   14000f783:	mov    ss,WORD PTR [rax]
   14000f785:	mov    esp,0x64f280ec
   14000f78a:	sub    DWORD PTR [rcx+0x823d8b1],ebx
   14000f790:	ja     0x14000f74e
   14000f792:	mov    bl,0xc
   14000f794:	rex.R idiv BYTE PTR [rbp-0x19d6262a]
   14000f79b:	(bad)  
   14000f79c:	cmp    ecx,DWORD PTR [rsi-0x4d]
   14000f79f:	(bad)  
   14000f7a0:	xor    DWORD PTR [rdx-0x80],0xae679cc8
   14000f7a7:	sub    esp,ebx
   14000f7a9:	mov    ch,0x11
   14000f7ab:	pushf  
   14000f7ac:	sbb    edi,DWORD PTR [rdx-0x1583f067]
   14000f7b2:	cdq    
   14000f7b3:	ror    edi,cl
   14000f7b5:	(bad)  
   14000f7b6:	mov    esi,0x15b340f0
   14000f7bb:	rex.WRB (bad) 
   14000f7bd:	add    al,0xdf
   14000f7bf:	stc    
   14000f7c0:	(bad)  
   14000f7c1:	jle    0x14000f79d
   14000f7c3:	scas   eax,DWORD PTR es:[rdi]
   14000f7c4:	sar    dh,1
   14000f7c6:	(bad)  
   14000f7c7:	adc    BYTE PTR [rip+0xffffffffba3a5c01],al        # 0xfa3b53ce
   14000f7cd:	vpaddb xmm13,xmm15,XMMWORD PTR [rbp+0x31]
   14000f7d2:	ds push rcx
   14000f7d4:	lods   eax,DWORD PTR ds:[rsi]
   14000f7d5:	int    0xd5
   14000f7d7:	stos   DWORD PTR es:[rdi],eax
   14000f7d8:	jrcxz  0x14000f7f5
   14000f7da:	xlat   BYTE PTR ds:[rbx]
   14000f7db:	(bad)  
   14000f7dc:	fdivr  QWORD PTR [rcx-0x2b]
   14000f7df:	test   BYTE PTR [rbp+0x3],0x74
   14000f7e3:	ins    BYTE PTR es:[rdi],dx
   14000f7e4:	rex.WRXB movabs r13,0x806117211bc1d5c0
   14000f7ee:	outs   dx,BYTE PTR ds:[rsi]
   14000f7ef:	rex.WRX movabs rax,ds:0x833c4436e07a2f75
   14000f7f9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f7fa:	xchg   BYTE PTR [rdi],bh
   14000f7fc:	push   rdx
   14000f7fd:	(bad)  
   14000f7fe:	pop    rsp
   14000f7ff:	(bad)  
   14000f800:	or     DWORD PTR [rdi-0x2427ea91],esi
   14000f806:	mov    ecx,0xc3ef8098
   14000f80b:	sti    
   14000f80c:	rex.X lahf 
   14000f80e:	ins    BYTE PTR es:[rdi],dx
   14000f80f:	out    0x7c,eax
   14000f811:	(bad)  
   14000f812:	in     al,0x2d
   14000f814:	xchg   ecx,eax
   14000f815:	push   0xffffffffffffffe9
   14000f817:	add    al,0x3a
   14000f819:	mov    ebx,0xce0262ea
   14000f81e:	xor    al,0x5f
   14000f820:	in     al,0xf7
   14000f822:	jnp    0x14000f862
   14000f824:	mov    edi,0x167ba7f
   14000f829:	sub    al,0x9c
   14000f82b:	cwde   
   14000f82c:	fs div al
   14000f82f:	sub    al,0xad
   14000f831:	cdqe   
   14000f833:	inc    BYTE PTR [rsi-0x4d0e1f32]
   14000f839:	mov    ?,WORD PTR [rsi]
   14000f83b:	xor    DWORD PTR [rbp-0x4a],esi
   14000f83e:	ffreep st(1)
   14000f840:	mov    edi,0xa727dbfd
   14000f845:	neg    BYTE PTR [rip+0xffffffffe4d0f738]        # 0x124d1ef83
   14000f84b:	rex.WR std 
   14000f84d:	add    al,0x69
   14000f84f:	shr    BYTE PTR [rdi-0x66],1
   14000f852:	(bad)
   14000f855:	jle    0x14000f83b
   14000f857:	pop    rdi
   14000f858:	movabs eax,ds:0xf874b8020a239ffd
   14000f861:	(bad)  
   14000f862:	xor    edi,edi
   14000f864:	add    ecx,DWORD PTR [rbx-0x22]
   14000f867:	cmp    edi,DWORD PTR [rdx+0x72]
   14000f86a:	outs   dx,BYTE PTR ds:[rsi]
   14000f86b:	xchg   BYTE PTR [rax],ah
   14000f86d:	sahf   
   14000f86e:	fistp  QWORD PTR [rcx+0x5b5dc36d]
   14000f874:	(bad)  
   14000f875:	(bad)  
   14000f876:	xchg   esi,eax
   14000f877:	push   rcx
   14000f878:	or     eax,0xba582c33
   14000f87d:	loope  0x14000f840
   14000f87f:	(bad)  
   14000f880:	sbb    dl,BYTE PTR [rax+0x1cf68481]
   14000f886:	cmp    dl,BYTE PTR [rdx]
   14000f888:	mov    BYTE PTR [rcx-0x6e4abec5],ah
   14000f88e:	jp     0x14000f856
   14000f890:	repz sti 
   14000f892:	jge    0x14000f875
   14000f894:	cmc    
   14000f895:	pushf  
   14000f896:	xlat   BYTE PTR gs:[rbx]
   14000f898:	push   rsp
   14000f899:	pop    rdi
   14000f89a:	js     0x14000f8c0
   14000f89c:	nop
   14000f89d:	leave  
   14000f89e:	retf   
   14000f89f:	mov    ecx,0x58ba53
   14000f8a4:	mov    ecx,0x6399c04e
   14000f8a9:	jmp    0x1a04d922c
   14000f8ae:	iret   
   14000f8af:	cmp    eax,0xbf9dca8b
   14000f8b4:	call   0x1a6b2c8d1
   14000f8b9:	jp     0x14000f8aa
   14000f8bb:	imul   esp,DWORD PTR [rsi-0x39],0x684144ea
   14000f8c2:	fwait
   14000f8c3:	movabs ds:0xf685c6245a9f86d8,al
   14000f8cc:	pop    rsp
   14000f8cd:	mov    ch,BYTE PTR [rax-0x25]
   14000f8d0:	lods   eax,DWORD PTR ds:[rsi]
   14000f8d1:	jl     0x14000f8b3
   14000f8d3:	rex.WXB cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   14000f8d5:	stos   DWORD PTR es:[rdi],eax
   14000f8d6:	(bad)  
   14000f8d8:	cmp    esi,esi
   14000f8da:	loopne 0x14000f875
   14000f8dc:	repz or eax,DWORD PTR [rdi]
   14000f8df:	leave  
   14000f8e0:	cli    
   14000f8e1:	std    
   14000f8e2:	scas   al,BYTE PTR es:[rdi]
   14000f8e3:	loop   0x14000f894
   14000f8e5:	xor    ch,bh
   14000f8e7:	pop    rdi
   14000f8e8:	rex.R adc al,0x4
   14000f8eb:	lock fdiv QWORD PTR [rax+0x7bed0d94]
   14000f8f2:	fdivp  st(2),st
   14000f8f4:	jmp    0xd4e84c1c
   14000f8f9:	push   rsp
   14000f8fa:	lea    ebp,[rip+0x7aded69b]        # 0x1badfcf9b
   14000f900:	(bad)
   14000f903:	adc    ch,BYTE PTR [rdx+0x9f97695]
   14000f909:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f90a:	push   rdi
   14000f90b:	(bad)  
   14000f90c:	(bad)  
   14000f90d:	and    DWORD PTR [rsi+0x40],ebx
   14000f910:	xor    eax,0x137030ab
   14000f915:	enter  0xc8b5,0x78
   14000f919:	sbb    al,0x84
   14000f91b:	add    dh,BYTE PTR [rdi]
   14000f91d:	int3   
   14000f91e:	and    DWORD PTR ss:[rcx],eax
   14000f921:	push   rdi
   14000f922:	test   al,ch
   14000f924:	outs   dx,BYTE PTR ds:[rsi]
   14000f925:	outs   dx,DWORD PTR ds:[rsi]
   14000f926:	fld    QWORD PTR [rbx]
   14000f928:	loope  0x14000f964
   14000f92a:	mov    ebx,0xd69f8bc7
   14000f92f:	jg     0x14000f95b
   14000f931:	pop    rdi
   14000f932:	shr    edx,cl
   14000f934:	mov    edx,?
   14000f936:	rex.WRB (bad) 
   14000f938:	rex.WRB (bad) 
   14000f93a:	icebp  
   14000f93b:	(bad)  
   14000f93c:	adc    esp,DWORD PTR [rbx+rsi*8]
   14000f93f:	or     eax,0xe7ce7dba
   14000f944:	ja     0x14000f934
   14000f946:	mov    dl,0x6d
   14000f949:	scas   al,BYTE PTR es:[rdi]
   14000f94a:	pop    rcx
   14000f94b:	cmp    eax,0x2785c333
   14000f950:	(bad)  
   14000f951:	xor    BYTE PTR [rbx],bh
   14000f953:	adc    eax,0xb6cb7ba1
   14000f958:	sub    DWORD PTR [rdx+0x457b8336],ecx
   14000f95e:	idiv   BYTE PTR [rsi]
   14000f960:	rex.X
   14000f961:	rex.W test BYTE PTR [rdx+0x7cadc778],al
   14000f968:	loopne 0x14000f995
   14000f96a:	addr32 (bad) 
   14000f96c:	fistp  QWORD PTR [rcx-0x20]
   14000f96f:	rol    BYTE PTR [rbx+0x3dccce27],1
   14000f975:	ret    
   14000f976:	(bad)
   14000f97b:	(bad)  
   14000f97c:	ss jmp 0x12043867a
   14000f982:	pop    rdi
   14000f983:	add    BYTE PTR [rdx],cl
   14000f985:	add    bh,BYTE PTR [rax-0x12]
   14000f988:	pop    rax
   14000f989:	xor    al,ah
   14000f98b:	xchg   bh,dh
   14000f98d:	movsxd edi,DWORD PTR [rdx+rbp*8-0x20]
   14000f991:	(bad)  
   14000f992:	sub    DWORD PTR [rdx],eax
   14000f994:	rcr    edx,1
   14000f996:	mov    eax,0x6da6e46e
   14000f99b:	fwait
   14000f99c:	rex.RX retf 0xa510
   14000f9a0:	ins    DWORD PTR es:[rdi],dx
   14000f9a1:	mov    bh,0x82
   14000f9a3:	je     0x14000f92d
   14000f9a5:	scas   eax,DWORD PTR es:[rdi]
   14000f9a6:	nop
   14000f9a7:	add    DWORD PTR [rdx-0x74c645da],eax
   14000f9ad:	xchg   esi,eax
   14000f9ae:	jmp    0x14000f981
   14000f9b0:	mov    ebp,0x37423d7
   14000f9b5:	movabs eax,ds:0x259d7f4cefdfad67
   14000f9be:	add    al,0x21
   14000f9c0:	push   rbx
   14000f9c1:	cmp    ebx,edx
   14000f9c3:	xchg   ecx,eax
   14000f9c4:	sub    BYTE PTR [rbx],0xb7
   14000f9c7:	cmc    
   14000f9c8:	lahf   
   14000f9c9:	retf   0xd00f
   14000f9cc:	in     eax,0x1f
   14000f9ce:	mov    ecx,0xa4f98d2b
   14000f9d3:	nop
   14000f9d4:	xor    edi,ebx
   14000f9d6:	xor    edx,esi
   14000f9d8:	or     eax,0xffffffbe
   14000f9db:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f9dc:	movabs eax,ds:0x1e4c13d1ee70e8d3
   14000f9e5:	pop    rbp
   14000f9e6:	movabs al,ds:0x2d8429109e8242a1
   14000f9ef:	ja     0x14000f9a1
   14000f9f1:	or     eax,0xcad9103e
   14000f9f6:	movsxd eax,DWORD PTR [rcx]
   14000f9f8:	push   0xffffffffffffffd7
   14000f9fa:	popf   
   14000f9fb:	cld    
   14000f9fc:	out    dx,al
   14000f9fd:	push   rdi
   14000f9fe:	rex.WRX (bad) 
   14000fa00:	mov    edi,0x7e1e0fb
   14000fa05:	(bad)  
   14000fa06:	popf   
   14000fa07:	(bad)  
   14000fa08:	(bad)  
   14000fa0a:	(bad)
   14000fa0f:	jns    0x14000f9d0
   14000fa11:	mov    edi,0x2ffed0
   14000fa16:	add    eax,0x74773c01
   14000fa1b:	repz (bad) 
   14000fa1d:	mov    ebx,0x1783c9e2
   14000fa22:	(bad)  
   14000fa23:	(bad)  
   14000fa25:	jmp    0x14000fa12
   14000fa27:	xlat   BYTE PTR ds:[rbx]
   14000fa28:	or     al,0xde
   14000fa2a:	mov    al,0x63
   14000fa2c:	jmp    0x14000fa96
   14000fa2e:	(bad)  
   14000fa31:	ss out 0x14,al
   14000fa34:	(bad)  
   14000fa35:	and    eax,0x11044308
   14000fa3a:	mov    ah,0xa6
   14000fa3c:	rex xchg eax,edx
   14000fa3f:	jg     0x14000fa7e
   14000fa41:	call   0x1859b7e47
   14000fa46:	mov    BYTE PTR [rsi],dh
   14000fa48:	leave  
   14000fa49:	cwde   
   14000fa4a:	std    
   14000fa4b:	in     al,0x8e
   14000fa4d:	push   rsi
   14000fa4e:	clc    
   14000fa4f:	cld    
   14000fa50:	cmp    bh,BYTE PTR [rsi+0x37]
   14000fa53:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000fa54:	lahf   
   14000fa55:	popf   
   14000fa56:	push   rbp
   14000fa57:	(bad)  
   14000fa58:	jns    0x14000fa0c
   14000fa5a:	mov    WORD PTR [rdi-0x6897c9b3],cs
   14000fa60:	jg     0x14000fa5e
   14000fa62:	and    al,0xa2
   14000fa64:	lahf   
   14000fa65:	cmp    eax,esp
   14000fa67:	lods   eax,DWORD PTR ds:[rsi]
   14000fa68:	imul   eax,DWORD PTR [rbp+0x62],0xffffff85
   14000fa6c:	js     0x14000fa87
   14000fa6e:	sub    DWORD PTR [rax-0x18],0x1a
   14000fa72:	(bad)  
   14000fa73:	(bad)  
   14000fa74:	jl     0x14000fa10
   14000fa76:	xchg   ebx,eax
   14000fa77:	jle    0xe0a42dae
   14000fa7d:	mov    bh,0xc7
   14000fa7f:	xor    al,0xfb
   14000fa81:	rex.R and al,0x73
   14000fa84:	and    al,0x9a
   14000fa86:	rcl    DWORD PTR [rax-0x492d8f82],0x2
   14000fa8d:	mov    edi,0xbffc0dee
   14000fa92:	pop    rdi
   14000fa93:	cmp    BYTE PTR [rdx+0xe079df0],dh
   14000fa99:	(bad)  
   14000fa9a:	fs test edi,ebx
   14000fa9d:	rex.RB cld 
   14000fa9f:	std    
   14000faa0:	movabs al,ds:0xe10abf69f9fc2f9f
   14000faa9:	jg     0x14000faac
   14000faab:	sub    BYTE PTR [rax],cl
   14000faad:	loopne 0x14000faa8
   14000faaf:	(bad)  
   14000fab0:	mov    ecx,0x95afa080
   14000fab5:	hlt    
   14000fab6:	fiadd  WORD PTR [rbx+0x13]
   14000fab9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000faba:	(bad)  
   14000fabb:	pop    rdx
   14000fabc:	in     eax,dx
   14000fabd:	fldcw  WORD PTR [rax]
   14000fabf:	xchg   esi,eax
   14000fac0:	push   rdi
   14000fac1:	fbstp  TBYTE PTR [rax+0x2060fd6b]
   14000fac7:	jne    0x14000fa77
   14000fac9:	rex.XB scas eax,DWORD PTR es:[rdi]
   14000facb:	jmp    0x14000fac7
   14000facd:	sbb    esp,DWORD PTR [rdx]
   14000facf:	add    DWORD PTR [rax],0x74
   14000fad2:	sbb    eax,0xc390553a
   14000fad7:	call   0x15569d0ae
   14000fadc:	and    ch,dl
   14000fade:	fs (bad) 
   14000fae0:	(bad)  
   14000fae1:	in     al,0x93
   14000fae3:	cmovns edx,DWORD PTR [rax+0x50]
   14000fae7:	js     0x14000fad7
   14000fae9:	adc    BYTE PTR [rdi-0x48],0x93
   14000faed:	cmp    al,0x55
   14000faef:	(bad)  
   14000faf0:	dec    edi
   14000faf2:	cwde   
   14000faf3:	stc    
   14000faf4:	xlat   BYTE PTR fs:[rbx]
   14000faf6:	std    
   14000faf7:	jae    0x14000fb2c
   14000faf9:	out    dx,eax
   14000fafa:	xchg   ebx,eax
   14000fafb:	mov    edx,0x90106e03
   14000fb00:	(bad)  
   14000fb01:	(bad)  
   14000fb02:	adc    eax,0x4fc9e6ef
   14000fb07:	jl     0x14000fa8c
   14000fb09:	pop    rdx
   14000fb0a:	xor    esp,DWORD PTR [rdx]
   14000fb0c:	in     al,dx
   14000fb0d:	sub    eax,0x41249611
   14000fb12:	and    BYTE PTR [rbp-0x3b],ch
   14000fb15:	mov    dl,0x24
   14000fb17:	nop
   14000fb18:	scas   al,BYTE PTR es:[rdi]
   14000fb19:	(bad)  
   14000fb1a:	(bad)  
   14000fb1b:	(bad)  
   14000fb1c:	add    cl,BYTE PTR [rax-0x244cd0ae]
   14000fb22:	out    dx,eax
   14000fb23:	out    0xfd,al
   14000fb25:	lahf   
   14000fb26:	js     0x14000fb8a
   14000fb28:	cli    
   14000fb29:	sti    
   14000fb2a:	nop    DWORD PTR [rbp+0x66]
   14000fb2e:	jmp    FWORD PTR [rsi+rax*2]
   14000fb31:	jmp    0x14000fb82
   14000fb33:	(bad)  
   14000fb34:	xor    al,0xff
   14000fb36:	sub    al,0xd9
   14000fb38:	mov    bh,bh
   14000fb3a:	push   rdx
   14000fb3b:	jle    0x14000fbbc
   14000fb3d:	and    edi,0x9e008289
   14000fb43:	(bad)  
   14000fb44:	xchg   esi,eax
   14000fb45:	mov    al,BYTE PTR [rbx]
   14000fb47:	clc    
   14000fb48:	sbb    cl,BYTE PTR [rcx+0x3]
   14000fb4b:	cli    
   14000fb4c:	shl    cl,0x99
   14000fb4f:	icebp  
   14000fb50:	test   DWORD PTR [rsi-0x5],esp
   14000fb53:	pushf  
   14000fb54:	shl    BYTE PTR [rdx-0x29],cl
   14000fb57:	(bad)  
   14000fb58:	ins    DWORD PTR es:[rdi],dx
   14000fb59:	imul   eax,DWORD PTR [rsi-0x5],0x7b
   14000fb5d:	fucom  st(4)
   14000fb5f:	sbb    cl,BYTE PTR [rsi+0x4128ec08]
   14000fb65:	(bad)  
   14000fb66:	rex.RXB adc r8b,0x10
   14000fb6a:	push   rdi
   14000fb6b:	adc    DWORD PTR [rdx],edi
   14000fb6d:	xor    ecx,DWORD PTR [rcx+r12*8]
   14000fb71:	rex.WRX movabs al,ds:0xb4367bbbbce7210f
   14000fb7b:	or     ecx,DWORD PTR [rdx+rax*4]
   14000fb7e:	adc    QWORD PTR [r10+0x65],rbp
   14000fb82:	sub    eax,0x4e9c7701
   14000fb87:	lahf   
   14000fb88:	lods   al,BYTE PTR ds:[rsi]
   14000fb89:	pop    rbx
   14000fb8a:	cmp    DWORD PTR [rax-0x2c033281],esi
   14000fb90:	out    0x3f,eax
   14000fb92:	sbb    eax,0xd08ad64
   14000fb97:	rcr    DWORD PTR [rdx-0x620ec765],1
   14000fb9d:	cmp    eax,0x728b4ee8
   14000fba2:	cmp    DWORD PTR [rsp+rax*1],esi
   14000fba5:	and    ch,cl
   14000fba7:	mov    ah,0xe8
   14000fba9:	adc    DWORD PTR [rax],0xdc7fcc6
   14000fbaf:	(bad)  
   14000fbb0:	adc    BYTE PTR [rbx+riz*4+0x743c391b],al
   14000fbb7:	sub    eax,0x7d1f3bf
   14000fbbc:	(bad)  
   14000fbbd:	cmp    al,0xba
   14000fbbf:	not    DWORD PTR [rdi+rbx*1-0x72db6410]
   14000fbc6:	clc    
   14000fbc7:	iret   
   14000fbc8:	xchg   ecx,eax
   14000fbc9:	sbb    eax,0xb35cbbe6
   14000fbce:	iret   
   14000fbcf:	(bad)  
   14000fbd0:	or     BYTE PTR [rsi+0x78020a27],bl
   14000fbd6:	(bad)  
   14000fbd7:	pop    rax
   14000fbd8:	retf   0xf7fc
   14000fbdb:	(bad)
   14000fbde:	cli    
   14000fbdf:	(bad)  
   14000fbe0:	cdq    
   14000fbe1:	stc    
   14000fbe2:	leave  
   14000fbe3:	movabs ds:0xddbaf16ae68773e3,eax
   14000fbec:	cmp    edx,esi
   14000fbee:	outs   dx,BYTE PTR ds:[rsi]
   14000fbef:	pop    rbx
   14000fbf0:	xor    esi,DWORD PTR [rdx]
   14000fbf2:	mov    BYTE PTR [rax-0x27],al
   14000fbf5:	(bad)  
   14000fbf6:	and    BYTE PTR [rsi+0x4f49303b],dh
   14000fbfc:	add    BYTE PTR [rcx],dl
   14000fbfe:	add    al,0x8
   14000fc00:	sbb    eax,0xa5732d01
   14000fc05:	(bad)  
   14000fc06:	or     eax,0x3a1fb072
   14000fc0b:	xor    ebx,esi
   14000fc0d:	fst    QWORD PTR [rbx+0x73]
   14000fc10:	cmp    ch,BYTE PTR [rcx]
   14000fc12:	loope  0x14000fb99
   14000fc14:	xchg   esp,eax
   14000fc15:	add    al,0xf0
   14000fc17:	stos   BYTE PTR es:[rdi],al
   14000fc18:	clc    
   14000fc19:	jl     0x14000fbe8
   14000fc1b:	out    dx,eax
   14000fc1c:	push   rdi
   14000fc1d:	repnz loope 0x14000fc0d
   14000fc20:	iret   
   14000fc21:	(bad)  
   14000fc22:	mov    ecx,0xa67cedb
   14000fc27:	xor    esi,DWORD PTR [rcx+0x5]
   14000fc2a:	rex.WRB movabs r12,0xdb885efb7f8e46e6
   14000fc34:	xchg   esp,eax
   14000fc35:	jnp    0x14000fc39
   14000fc37:	rex.WX in eax,0x10
   14000fc3a:	sub    DWORD PTR [rip+0xffffffffa4d33081],eax        # 0xe4d42cc1
   14000fc40:	sbb    edi,edi
   14000fc42:	fistp  QWORD PTR [rax+0x5e57fd03]
   14000fc48:	(bad)  
   14000fc49:	(bad)  
   14000fc4a:	addr32 cli 
   14000fc4c:	stc    
   14000fc4d:	fnstsw WORD PTR [rdi+0x7dfef6fe]
   14000fc53:	(bad)  
   14000fc54:	iret   
   14000fc55:	(bad)  
   14000fc56:	xor    BYTE PTR [rip+0xffffffffd18138db],dh        # 0x111823537
   14000fc5c:	hlt    
   14000fc5d:	rex.WRX clc 
   14000fc5f:	popf   
   14000fc60:	out    0x77,al
   14000fc62:	jmp    0xfbeb53a5
   14000fc67:	(bad)  
   14000fc68:	cmp    bh,bh
   14000fc6a:	rex.X clc 
   14000fc6c:	pop    rdi
   14000fc6d:	add    BYTE PTR [rdx],cl
   14000fc6f:	add    bh,BYTE PTR [rax-0x1f]
   14000fc72:	mov    eax,0x1a240918
   14000fc77:	imul   ebp,DWORD PTR [rdx-0x4a],0xffffffb1
   14000fc7b:	jo     0x14000fc5c
   14000fc7d:	adc    esp,DWORD PTR [rdi-0x62]
   14000fc80:	pushf  
   14000fc81:	lods   eax,DWORD PTR ds:[rsi]
   14000fc82:	rex.RB jb 0x14000fc72
   14000fc85:	jo     0x14000fc66
   14000fc87:	push   rbp
   14000fc88:	pop    rbx
   14000fc89:	ss scas eax,DWORD PTR es:[rdi]
   14000fc8b:	sub    DWORD PTR [rbp+0x3318da41],eax
   14000fc91:	cdq    
   14000fc92:	xchg   edi,ecx
   14000fc94:	mov    es,WORD PTR [rax]
   14000fc96:	adc    al,0x49
   14000fc98:	mov    dh,0x40
   14000fc9a:	and    ebp,eax
   14000fc9c:	and    dh,dl
   14000fc9e:	ins    BYTE PTR es:[rdi],dx
   14000fc9f:	test   edx,edi
   14000fca1:	sub    edi,ecx
   14000fca3:	pushf  
   14000fca4:	mov    bh,0xb7
   14000fca6:	xlat   BYTE PTR ds:[rbx]
   14000fca7:	mov    DWORD PTR [rdx+0x4f],edi
   14000fcaa:	(bad)  
   14000fcab:	xchg   r12,rax
   14000fcad:	int3   
   14000fcae:	ds popf 
   14000fcb0:	retf   
   14000fcb1:	(bad)  
   14000fcb2:	sub    al,0x32
   14000fcb4:	jmp    0x168bffa76
   14000fcb9:	stc    
   14000fcba:	loope  0x14000fcb6
   14000fcbc:	outs   dx,BYTE PTR ds:[rsi]
   14000fcbd:	pop    rsi
   14000fcbe:	mov    dh,0xb
   14000fcc0:	adc    BYTE PTR [rdx],ah
   14000fcc2:	mov    DWORD PTR [rsi-0x483b1851],eax
   14000fcc8:	mul    BYTE PTR [rax]
   14000fcca:	push   rsp
   14000fccb:	xchg   DWORD PTR [rdx+0x4f],esi
   14000fcce:	test   rax,0x7600bac7
   14000fcd4:	and    cl,BYTE PTR [rdi]
   14000fcd6:	sub    DWORD PTR [rcx+rax*2],eax
   14000fcd9:	pop    rax
   14000fcda:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000fcdb:	mov    bl,0xf3
   14000fcdd:	push   rsi
   14000fcde:	dec    bl
   14000fce0:	test   DWORD PTR [rdi+0x37],0x3e3ffbfe
   14000fce7:	cld    
   14000fce8:	clc    
   14000fce9:	fiadd  WORD PTR [rbx-0x12a584ed]
   14000fcef:	fcomp  DWORD PTR [rcx-0x181fd106]
   14000fcf5:	sti    
   14000fcf6:	cld    
   14000fcf7:	fstp   st(2)
   14000fcf9:	jl     0x14000fd12
   14000fcfb:	mov    r15d,0x1051917
   14000fd01:	mov    esp,0x48e5838
   14000fd06:	and    BYTE PTR [rbx],bh
   14000fd08:	rex.WRXB pop r13
   14000fd0a:	mov    esp,0x2385d0f7
   14000fd0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
   14000fd11:	stos   BYTE PTR es:[rdi],al
   14000fd12:	adc    edx,ebp
   14000fd14:	push   0xffffffffffffffb4
   14000fd16:	jne    0x14000fd0f
   14000fd18:	xchg   ebp,eax
   14000fd19:	jmp    0x14000fcf2
   14000fd1b:	or     al,0xf4
   14000fd1d:	xchg   ebp,eax
   14000fd1e:	adc    edx,eax
   14000fd20:	pop    rdx
   14000fd21:	add    esp,DWORD PTR [rdx]
   14000fd23:	xor    al,0x2e
   14000fd25:	or     BYTE PTR [rax],0xd2
   14000fd28:	sahf   
   14000fd29:	clc    
   14000fd2a:	shl    BYTE PTR [rsi-0x781010f2],cl
   14000fd30:	fimul  DWORD PTR [rcx+0x7b48c92e]
   14000fd36:	fwait
   14000fd37:	jl     0x14000fd9c
   14000fd39:	mulps  xmm1,xmm2
   14000fd3c:	mov    edx,0x22a7f903
   14000fd41:	ja     0x14000fdbf
   14000fd43:	jb     0x14000fd12
   14000fd45:	pushf  
   14000fd46:	xchg   ebp,eax
   14000fd47:	nop
   14000fd48:	fs (bad) 
   14000fd4a:	mov    ah,0x17
   14000fd4c:	cld    
   14000fd4d:	jae    0x14000fd65
   14000fd4f:	and    DWORD PTR [rdx],0x1a
   14000fd52:	mov    ecx,0xdcefb181
   14000fd57:	xchg   eax,edx
   14000fd59:	adc    DWORD PTR [rbp+0x72a5217d],edi
   14000fd5f:	adc    BYTE PTR [rcx+rax*4+0x1027d199],0xf4
   14000fd67:	outs   dx,DWORD PTR ds:[rsi]
   14000fd68:	fmulp  st(6),st
   14000fd6a:	mov    ecx,eax
   14000fd6c:	stos   DWORD PTR es:[rdi],eax
   14000fd6d:	clc    
   14000fd6e:	lods   eax,DWORD PTR ds:[rsi]
   14000fd6f:	mov    edi,0xdef673db
   14000fd74:	xchg   DWORD PTR [rdi-0x1b1b87c2],ecx
   14000fd7a:	in     al,dx
   14000fd7b:	push   rbx
   14000fd7c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000fd7d:	rex.WRB cmp rax,0x634fe09c
   14000fd83:	push   rdx
   14000fd84:	jge    0x14000fdb4
   14000fd86:	loopne 0x14000fd3f
   14000fd88:	push   rsp
   14000fd89:	mov    ebp,DWORD PTR [rdi+0x445ff842]
   14000fd8f:	adc    al,0x4
   14000fd91:	lock loop 0x14000fd75
   14000fd94:	push   rdx
   14000fd95:	sub    al,0x81
   14000fd97:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000fd98:	movsxd ebp,ebp
   14000fd9a:	icebp  
   14000fd9b:	shl    DWORD PTR [rbx-0x19],cl
   14000fd9e:	sahf   
   14000fd9f:	cmp    DWORD PTR [rsi],esi
   14000fda1:	icebp  
   14000fda2:	in     al,dx
   14000fda3:	shl    DWORD PTR [rcx-0x579942c7],0x77
   14000fdaa:	(bad)  
   14000fdab:	(bad)  
   14000fdac:	imul   r8,r10,0x30
   14000fdb0:	adc    dh,ah
   14000fdb2:	mov    al,0xa4
   14000fdb4:	lods   eax,DWORD PTR ds:[rsi]
   14000fdb5:	mov    dh,0xd
   14000fdb7:	adc    BYTE PTR [rdx-0x2a],ah
   14000fdba:	jmp    0x109db81aa
   14000fdbf:	(bad)  
   14000fdc2:	loop   0x14000fdca
   14000fdc4:	nop
   14000fdc5:	pop    rdx
   14000fdc6:	add    eax,0x4b2f4f2e
   14000fdcb:	out    0x55,al
   14000fdcd:	rex.RB jmp 0x199006836
   14000fdd3:	jb     0x14000fe13
   14000fdd5:	mov    ebp,0x78fa15ce
   14000fdda:	xlat   BYTE PTR ds:[rbx]
   14000fddb:	repnz or DWORD PTR [rax+0x7c346bde],0x3d
   14000fde3:	movsxd ebx,edi
   14000fde5:	jge    0x14000fd67
   14000fde7:	or     BYTE PTR [rax-0x4f6f2162],0x14
   14000fdee:	adc    BYTE PTR [rsi],al
   14000fdf0:	xchg   edx,eax
   14000fdf1:	rol    al,cl
   14000fdf3:	and    BYTE PTR [rdx-0x5],ch
   14000fdf6:	(bad)  
   14000fdf7:	cld    
   14000fdf8:	in     eax,0x7d
   14000fdfa:	jrcxz  0x14000fdc9
   14000fdfc:	(bad)  
   14000fdfd:	sti    
   14000fdfe:	in     al,0x7d
   14000fe00:	sti    
   14000fe01:	neg    BYTE PTR [rsi]
   14000fe03:	mov    eax,0xeeadbf70
   14000fe08:	jae    0x14000fdad
   14000fe0a:	cli    
   14000fe0b:	pop    rsp
   14000fe0c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000fe0d:	fist   WORD PTR [rip+0xffffffff9f80b8f9]        # 0xdf81b70c
   14000fe13:	out    dx,eax
   14000fe14:	repz (bad) 
   14000fe16:	ret    0x12ff
   14000fe19:	movabs ds:0x3380914b17178020,al
   14000fe22:	pop    rdi
   14000fe23:	std    
   14000fe24:	cdq    
   14000fe25:	xchg   BYTE PTR [rdx+0x7f5db54a],ah
   14000fe2b:	cli    
   14000fe2c:	rol    BYTE PTR [rbp-0x333038bd],1
   14000fe32:	popf   
   14000fe33:	cmp    eax,0x70766270
   14000fe38:	fist   DWORD PTR [rsi-0x28e4b25f]
   14000fe3e:	mov    es,WORD PTR [rax-0x10b07372]
   14000fe44:	and    ch,dh
   14000fe46:	scas   al,BYTE PTR es:[rdi]
   14000fe47:	test   BYTE PTR [rdi+0x27aa0faf],dh
   14000fe4d:	mov    ebx,0xd4d3de5c
   14000fe52:	push   0xffffffff95d77c3b
   14000fe57:	fisubr DWORD PTR [rcx]
   14000fe59:	rex.XB add cl,r14b
   14000fe5c:	sbb    eax,0x893905f0
   14000fe61:	(bad)  
   14000fe62:	js     0x14000fe3b
   14000fe64:	jo     0x14000fecf
   14000fe66:	mov    edx,0xa241ae6e
   14000fe6b:	std    
   14000fe6c:	std    
   14000fe6d:	pop    rbx
   14000fe6e:	imul   esp,DWORD PTR [rdx-0x6c7141f],0xfffffffd
   14000fe75:	(bad)  
   14000fe76:	nop
   14000fe77:	rex.R hlt 
   14000fe79:	hlt    
   14000fe7a:	xchg   esi,eax
   14000fe7b:	sub    bh,dh
   14000fe7d:	xchg   ebp,eax
   14000fe7e:	call   0x1879cb560
   14000fe83:	sbb    eax,DWORD PTR [rbx-0x4802904]
   14000fe89:	(bad)  
   14000fe8b:	xchg   esi,esi
   14000fe8d:	sahf   
   14000fe8e:	jp     0x14000fe78
   14000fe90:	enter  0xecd8,0x13
   14000fe94:	jbe    0x14000fed2
   14000fe96:	mov    edi,0xbcbf7e13
   14000fe9b:	xlat   BYTE PTR ds:[rbx]
   14000fe9c:	or     DWORD PTR [rdi+0x3e],edi
   14000fe9f:	(bad)  
   14000fea0:	push   rdi
   14000fea1:	or     bh,bh
   14000fea3:	rex.WXB mov WORD PTR [r10+0x747c5e00],es
   14000feaa:	retf   
   14000feab:	(bad)  
   14000feac:	mov    eax,0x1025bcd7
   14000feb1:	add    DWORD PTR [rbp+0x2fe6e753],ebx
   14000feb7:	cmp    al,0xf4
   14000feb9:	(bad)  
   14000feba:	jmp    0x157c7c4e6
   14000febf:	(bad)  
   14000fec0:	mov    ds,WORD PTR [rdx+rbx*4-0x350946e5]
   14000fec7:	jne    0x14000ff34
   14000fec9:	xchg   BYTE PTR [rsi],al
   14000fecb:	cli    
   14000fecc:	pop    rax
   14000fecd:	hlt    
   14000fece:	mov    ebx,0xda821fef
   14000fed3:	imul   edi,DWORD PTR [rbx-0x60261463],0xd4d3b5b9
   14000fedd:	fidivr WORD PTR [rbx-0x3e]
   14000fee0:	mov    edx,0xfc5e2a03
   14000fee5:	push   rsp
   14000fee6:	outs   dx,BYTE PTR ds:[rsi]
   14000fee7:	rex.XB pop r9
   14000fee9:	retf   
   14000feea:	rex in eax,0xcc
   14000feed:	jmp    FWORD PTR [rsi-0x10]
   14000fef0:	fadd   QWORD PTR [rax-0x58c89788]
   14000fef6:	idiv   BYTE PTR [rsp+rcx*2]
   14000fef9:	test   eax,0xdd78d824
   14000fefe:	xor    eax,0xf9eb141c
   14000ff03:	mov    ebp,0xee753ecf
   14000ff08:	or     ebx,edi
   14000ff0a:	fcos   
   14000ff0c:	fdivr  DWORD PTR [rsi-0x2408ecbd]
   14000ff12:	ss pop rsi
   14000ff14:	(bad)  
   14000ff15:	pop    rax
   14000ff16:	(bad)  
   14000ff17:	jl     0x14000fe9a
   14000ff19:	(bad)  
   14000ff1a:	(bad)  
   14000ff1c:	mov    edi,0x10bf9e5b
   14000ff21:	(bad)  
   14000ff22:	xchg   edi,eax
   14000ff23:	or     BYTE PTR [rip+0x5834bc01],al        # 0x19835bb2a
   14000ff29:	mov    dh,0x36
   14000ff2b:	sub    ah,0x64
   14000ff2e:	and    edx,DWORD PTR [rcx]
   14000ff30:	jbe    0x14000ff80
   14000ff32:	sti    
   14000ff33:	and    esp,DWORD PTR [rbx-0x2d]
   14000ff36:	(bad)  
   14000ff37:	lahf   
   14000ff38:	fdivr  QWORD PTR [rdi-0xa]
   14000ff3b:	test   eax,0xaaa7477d
   14000ff40:	addr32 iret 
   14000ff42:	push   rbp
   14000ff43:	rex.RX xlat BYTE PTR ds:[rbx]
   14000ff45:	or     al,0x85
   14000ff47:	ret    
   14000ff48:	sbb    edx,edi
   14000ff4a:	lea    esp,[rsi+rdx*4+0x5410c0c0]
   14000ff51:	(bad)  
   14000ff52:	mov    dl,0x1a
   14000ff54:	fmul   QWORD PTR [rcx]
   14000ff56:	lods   eax,DWORD PTR ds:[rsi]
   14000ff57:	mov    ebx,0x779cde4d
   14000ff5c:	(bad)
   14000ff5f:	sbb    eax,0x6869ccc0
   14000ff64:	(bad)  
   14000ff65:	jmp    0x1acfa568c
   14000ff6a:	sbb    DWORD PTR [rdi+0x1c94843e],0x7881bddc
   14000ff74:	jo     0x14000ffad
   14000ff76:	mov    ch,0xf1
   14000ff78:	or     DWORD PTR [rsi-0x3c06b86a],ecx
   14000ff7e:	(bad)  
   14000ff7f:	out    dx,eax
   14000ff80:	(bad)  
   14000ff81:	(bad)  
   14000ff82:	stc    
   14000ff83:	outs   dx,DWORD PTR ds:[rsi]
   14000ff84:	out    dx,eax
   14000ff85:	jg     0x14000ff71
   14000ff87:	test   eax,0xc81fe783
   14000ff8c:	jne    0x14000ff7d
   14000ff8e:	cmc    
   14000ff8f:	(bad)  
   14000ff90:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000ff91:	cmc    
   14000ff92:	pop    rbp
   14000ff93:	mov    al,0xcf
   14000ff95:	xchg   ebp,eax
   14000ff96:	idiv   edx
   14000ff98:	cmp    eax,0x7fe10afd
   14000ff9d:	sbb    DWORD PTR [rax+0x10],edx
   14000ffa0:	ror    BYTE PTR [rbx-0x79],0x6e
   14000ffa4:	out    dx,al
   14000ffa5:	rex
   14000ffa6:	ds xor esp,eax
   14000ffa9:	out    0x1d,al
   14000ffab:	je     0x140010020
   14000ffad:	(bad)  
   14000ffae:	mov    ah,0x5b
   14000ffb0:	in     eax,dx
   14000ffb1:	mov    eax,0xd4c4e471
   14000ffb6:	fcomp  DWORD PTR [rsi+0x7b1ec7c7]
   14000ffbc:	neg    al
   14000ffbe:	hlt    
   14000ffbf:	cld    
   14000ffc0:	mov    bl,0x87
   14000ffc2:	iret   
   14000ffc3:	div    ebp
   14000ffc5:	xchg   esp,eax
   14000ffc6:	jrcxz  0x14000ff59
   14000ffc8:	xor    eax,0x5dec8183
   14000ffcd:	mov    ebx,0x49a7aa01
   14000ffd2:	or     bh,BYTE PTR [rdi+0x12]
   14000ffd5:	shl    esp,0x32
   14000ffd8:	add    al,dl
   14000ffda:	sar    esi,cl
   14000ffdc:	mov    DWORD PTR [rax+0x2cbd367a],edx
   14000ffe2:	sbb    DWORD PTR [rdi+0x40],edx
   14000ffe5:	rex.RB test eax,0xcdceef49
   14000ffeb:	sti    
   14000ffec:	imul   esi
   14000ffee:	mov    DWORD PTR [rbp-0x6396e381],eax
   14000fff4:	rcr    BYTE PTR [rsi-0x4a],0x5a
   14000fff8:	fmulp  st(1),st
   14000fffa:	scas   eax,DWORD PTR es:[rdi]
   14000fffb:	dec    cl
   14000fffd:	xlat   BYTE PTR ds:[rbx]
   14000fffe:	(bad)  
   14000ffff:	inc    ebx
   140010001:	xlat   BYTE PTR ds:[rbx]
   140010002:	lahf   
   140010003:	fnstenv [rdi+0x4785c0ef]
   140010009:	es addr32 jmp 0x140010034
   14001000d:	loop   0x140010067
   14001000f:	cmp    eax,DWORD PTR [rcx+0x77]
   140010012:	sbb    bl,bh
   140010014:	xor    eax,0x1d2798f2
   140010019:	(bad)  
   14001001a:	jrcxz  0x14000ffd0
   14001001c:	mov    esi,0x9f9fdb5f
   140010021:	(bad)  
   140010022:	fstp   TBYTE PTR [rdi+0x2d]
   140010025:	lock and ah,BYTE PTR [rbx-0x37]
   140010029:	xor    dl,dh
   14001002b:	add    ch,BYTE PTR [rdi]
   14001002d:	or     bh,BYTE PTR [rdx-0x55891928]
   140010033:	sbb    al,0xf3
   140010035:	sbb    bl,dl
   140010037:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010038:	or     al,0xf4
   14001003a:	add    bh,BYTE PTR [rbp-0x40]
   14001003d:	add    BYTE PTR [rax],dh
   14001003f:	or     BYTE PTR [rcx+rax*1],cl
   140010042:	ret    
   140010043:	shl    al,0x5d
   140010046:	(bad)  
   140010047:	ins    DWORD PTR es:[rdi],dx
   140010048:	mov    ecx,0xd1d6f763
   14001004d:	xlat   BYTE PTR ds:[rbx]
   14001004e:	jle    0x140010042
   140010050:	push   rbx
   140010051:	mov    edi,0xeee71b71
   140010056:	xor    edx,DWORD PTR [rdi-0x36]
   140010059:	rex.WR frstpm(287 only) 
   14001005c:	mov    ebp,0xb6fcf5ba
   140010061:	(bad)  
   140010063:	push   rdi
   140010064:	add    BYTE PTR [rbp-0x1d2957fa],bl
   14001006a:	(bad)  
   14001006b:	jbe    0x14001009b
   14001006d:	rex.B
   14001006e:	ds rex call 0x160180921
   140010075:	hlt    
   140010076:	data16 rex.X (bad) 
   140010079:	sbb    DWORD PTR [rdx+0x7b],edi
   14001007c:	je     0x140010055
   14001007e:	mov    ebx,0x63abff7e
   140010083:	(bad)  
   140010084:	iret   
   140010085:	rex.WRXB (bad) 
   140010087:	add    al,0x7c
   140010089:	(bad)  
   14001008a:	cs jae 0x140010031
   14001008d:	add    eax,0x73b2553d
   140010092:	clc    
   140010093:	cmp    DWORD PTR [rbx+0x7f],esi
   140010096:	cmp    DWORD PTR [rbx+0x7fe10a1f],edx
   14001009c:	adc    QWORD PTR [r14-0x4],rbx
   1400100a0:	nop
   1400100a1:	add    ch,BYTE PTR [rdi]
   1400100a3:	add    BYTE PTR [rcx],bh
   1400100a5:	cmc    
   1400100a6:	or     esp,DWORD PTR [rdi+rdi*1-0x4e6ed88c]
   1400100ad:	mov    bh,0x74
   1400100af:	xor    BYTE PTR [rdx-0x962db2f],al
   1400100b5:	mov    edx,0xe16e7e3e
   1400100ba:	test   eax,0xc5795ed7
   1400100bf:	xor    BYTE PTR cs:[rbx],dl
   1400100c2:	nop
   1400100c3:	sbb    ch,BYTE PTR [rip+0x5c7c8aef]        # 0x19c7d8bb8
   1400100c9:	cmp    cl,dh
   1400100cb:	(bad)  
   1400100cc:	out    dx,eax
   1400100cd:	xchg   edx,eax
   1400100ce:	out    dx,al
   1400100cf:	cmp    eax,0xb4af299e
   1400100d4:	sub    DWORD PTR [rip+0x20296e4e],esp        # 0x1602a6f28
   1400100da:	in     al,dx
   1400100db:	or     DWORD PTR [rax+0x43],0xe1af4cd4
   1400100e2:	cld    
   1400100e3:	jg     0x140010124
   1400100e5:	in     eax,0x7
   1400100e7:	test   eax,0x438b3bf0
   1400100ec:	gs jmp 0x140010160
   1400100ef:	mov    ah,0x8e
   1400100f1:	xor    eax,0x186ba846
   1400100f6:	add    dh,BYTE PTR [rax-0x47]
   1400100f9:	std    
   1400100fa:	outs   dx,BYTE PTR ds:[rsi]
   1400100fb:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400100fc:	jle    0x140010091
   1400100fe:	lods   al,BYTE PTR ds:[rsi]
   1400100ff:	loopne 0x1400100e8
   140010101:	add    edi,DWORD PTR [rbp-0x7b]
   140010104:	lock mov edi,0xe008288c
   14001010a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001010b:	rex.RXB sbb r13b,BYTE PTR [rip+0xffffffffbada6eeb]        # 0xfadb6ffd
   140010112:	cmp    bl,BYTE PTR [rsi-0x19]
   140010115:	(bad)  
   140010116:	cmp    BYTE PTR [rdx],dl
   140010118:	jo     0x1400100dc
   14001011a:	shr    BYTE PTR [rax*4-0x35e346bf],cl
   140010121:	rex.RX mov sil,0xf0
   140010124:	mov    DWORD PTR [rdi-0x713b9f99],0xba6a4420
   14001012e:	out    0x6f,eax
   140010130:	lahf   
   140010131:	fs (bad) 
   140010133:	jp     0x140010142
   140010135:	xor    esp,eax
   140010137:	sub    eax,0x809c288f
   14001013c:	mov    ebx,0x98f27253
   140010141:	mov    BYTE PTR [rax+0x2b409637],ch
   140010147:	rex.RXB add BYTE PTR [r13-0x74],r14b
   14001014b:	mov    al,0xcf
   14001014d:	xchg   ecx,eax
   14001014e:	pop    rdx
   14001014f:	add    DWORD PTR [rsi+0x4cfb977d],ebp
   140010155:	jns    0x140010118
   140010157:	out    dx,eax
   140010158:	repnz out 0xd7,ax
   14001015c:	or     edi,DWORD PTR [rsp+rax*2-0x1a1ff7d8]
   140010163:	rex.B (bad) 
   140010165:	adc    dh,BYTE PTR [rax-0x7d]
   140010168:	in     al,dx
   140010169:	popf   
   14001016a:	xor    eax,0x9d08a7e0
   14001016f:	xor    eax,0x9ea201d0
   140010174:	push   rdx
   140010175:	xor    BYTE PTR [rax+0xe],bl
   140010178:	ret    
   140010179:	rex.RX (bad) 
   14001017b:	add    dh,al
   14001017d:	add    eax,0xbf88d21c
   140010182:	mov    dh,0xef
   140010184:	jns    0x1400101fb
   140010186:	std    
   140010187:	jle    0x140010145
   140010189:	rex fcmovnu st,st(3)
   14001018c:	or     DWORD PTR [rbx-0x63],edi
   14001018f:	xchg   edx,eax
   140010190:	int    0x36
   140010192:	rex.R outs dx,BYTE PTR ds:[rsi]
   140010194:	movabs ds:0x734b6cadb7bffe6e,ax
   14001019e:	addr32 add eax,0xd22ad008
   1400101a4:	pop    rdx
   1400101a5:	jmp    0x1400101b5
   1400101a7:	rex.RX retf 
   1400101a9:	xlat   BYTE PTR ds:[rbx]
   1400101aa:	xor    BYTE PTR [rdx-0x41],al
   1400101ad:	rex push 0xfffffffffffffff6
   1400101b0:	(bad)  
   1400101b1:	xor    edx,eax
   1400101b3:	out    dx,eax
   1400101b4:	pop    rbx
   1400101b5:	cmp    eax,DWORD PTR [rbp+0x500cbfd6]
   1400101bb:	adc    al,al
   1400101bd:	retf   
   1400101be:	(bad)  
   1400101bf:	pop    rdi
   1400101c0:	push   rdx
   1400101c1:	std    
   1400101c2:	in     eax,dx
   1400101c3:	outs   dx,BYTE PTR ds:[rsi]
   1400101c4:	add    ecx,0xde9780cc
   1400101ca:	push   rdx
   1400101cb:	pop    rax
   1400101cc:	or     eax,0xad31d102
   1400101d1:	mov    bl,0x5d
   1400101d3:	or     BYTE PTR [rdi+0x7b],0xe6
   1400101d7:	mov    edx,0x1a4a202d
   1400101dc:	xchg   al,ch
   1400101de:	lods   al,BYTE PTR ds:[rsi]
   1400101df:	loopne 0x140010207
   1400101e1:	(bad)  
   1400101e2:	(bad)  
   1400101e4:	cmp    dh,BYTE PTR [rsi]
   1400101e6:	jne    0x1400101ea
   1400101e8:	mov    cl,0x4d
   1400101ea:	or     DWORD PTR [rsi],eax
   1400101ec:	mov    ebp,0xa69d5ae6
   1400101f1:	(bad)  
   1400101f2:	push   rbx
   1400101f3:	jo     0x140010244
   1400101f5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400101f6:	sar    DWORD PTR [rbp+0x7e],cl
   1400101f9:	hlt    
   1400101fa:	fistp  QWORD PTR [rsi]
   1400101fc:	mov    ch,0xe
   1400101fe:	xchg   DWORD PTR [rax-0x7c],edx
   140010201:	mov    dh,BYTE PTR [rax+rbx*4]
   140010204:	out    0xbb,eax
   140010206:	(bad)  
   140010207:	frstor [rdx]
   140010209:	cld    
   14001020a:	stc    
   14001020b:	sar    DWORD PTR [rax*4+0x2882bff0],0x8
   140010213:	loopne 0x1400101fa
   140010215:	rex.RXB (bad) 
   140010217:	imul   eax,eax,0xffffffa1
   14001021a:	fistp  DWORD PTR [rax]
   14001021c:	ja     0x140010277
   14001021e:	or     al,BYTE PTR [rbx-0x6b9adfaa]
   140010224:	adc    DWORD PTR [rax-0x1],esi
   140010227:	or     BYTE PTR [rdi-0x6f73efd6],bh
   14001022d:	cmp    dl,BYTE PTR [rdi-0x40]
   140010230:	in     al,dx
   140010231:	mov    al,0xc7
   140010233:	jns    0x1400101ec
   140010235:	retf   
   140010236:	cwde   
   140010237:	stc    
   140010238:	rex fsub DWORD PTR [rdi+0x8]
   14001023c:	and    DWORD PTR [rsi+0x7b],ebp
   14001023f:	xlat   BYTE PTR ds:[rbx]
   140010240:	cmc    
   140010241:	stos   BYTE PTR es:[rdi],al
   140010242:	add    BYTE PTR [rbx],dh
   140010244:	or     eax,0xc4ebd240
   140010249:	std    
   14001024a:	fistp  DWORD PTR [rax+0x3d50bd38]
   140010250:	jns    0x14001023c
   140010252:	ret    0x2902
   140010255:	add    DWORD PTR [rax],edi
   140010257:	movabs eax,ds:0xb3fe7f0b1618ac4f
   140010260:	(bad)  
   140010261:	ret    0xaff
   140010264:	movabs al,ds:0xce0359cb06578020
   14001026d:	sbb    eax,0x1c7aec88
   140010272:	rex.WX sbb QWORD PTR [rbx],rcx
   140010275:	or     DWORD PTR [rsi+0x46],0xf2fde5f7
   14001027c:	jl     0x1400102fd
   14001027e:	add    BYTE PTR [rdi-0x6240c86c],bh
   140010284:	xor    ebx,ebp
   140010286:	test   DWORD PTR [rbp+0x77538c38],ebp
   14001028c:	rex or ebx,DWORD PTR [rbx]
   14001028f:	sbb    ah,cl
   140010291:	fld    QWORD PTR [rdi-0x30]
   140010294:	in     eax,0x2a
   140010296:	rex.WRX xlat BYTE PTR ds:[rbx]
   140010298:	retf   
   140010299:	add    BYTE PTR [rax],al
   14001029b:	sbb    eax,0x41444953
   1400102a0:	push   rsp
   1400102a1:	mov    esi,0x3e61c3a0
   1400102a6:	cld    
   1400102a7:	mov    ecx,0xac8fb3d
   1400102ac:	mov    edi,0xe0be004f
   1400102b1:	ja     0x1400102c6
   1400102b3:	inc    BYTE PTR [rdx-0x10]
   1400102b6:	pop    rdi
   1400102b7:	rex.B adc al,0x4
   1400102ba:	lock retf 0x6f22
   1400102be:	or     eax,0x6f1e5b38
   1400102c3:	cmp    eax,0x919430a
   1400102c8:	xor    ecx,DWORD PTR [rbx-0x3bc571b8]
   1400102ce:	loop   0x1400102fb
   1400102d0:	gs (bad) 
   1400102d2:	(bad)  
   1400102d3:	in     al,0xee
   1400102d5:	loopne 0x1400102a6
   1400102d7:	icebp  
   1400102d8:	xchg   ecx,eax
   1400102d9:	push   0x5de574
   1400102de:	cmp    esp,DWORD PTR [rdi-0x5d8b161]
   1400102e4:	test   ah,ch
   1400102e6:	sbb    BYTE PTR [rax+0x1a249f64],al
   1400102ec:	mov    esp,0x3f1f279a
   1400102f1:	cmp    al,0xfe
   1400102f3:	sar    DWORD PTR [rdi+0x18b3d2fc],0x73
   1400102fa:	fild   QWORD PTR [rip+0xffffffffefcf8a7e]        # 0x12fd08d7e
   140010300:	fst    QWORD PTR [rdi+0x8]
   140010303:	jmp    QWORD PTR [rbp-0x7a]
   140010306:	(bad)  
   140010307:	add    BYTE PTR [rsi+0x79],bl
   14001030a:	clc    
   14001030b:	and    ch,ch
   14001030d:	jmp    0x1400102f6
   14001030f:	and    al,0x42
   140010311:	adc    esi,DWORD PTR cs:[rbp-0x25]
   140010315:	icebp  
   140010316:	(bad)  
   140010317:	xor    dh,0xd4
   14001031a:	fs ds mov edi,0xbfcffa5c
   140010321:	mov    ah,0xbf
   140010323:	retf   
   140010324:	add    eax,0xad9c7510
   140010329:	repnz rex.WXB (bad) 
   14001032c:	or     edx,DWORD PTR [rdx]
   14001032e:	rex.WX movabs rbp,0x4324a0c0d8e81dc6
   140010338:	add    BYTE PTR [rdx-0x4023bdcc],bh
   14001033e:	cdq    
   14001033f:	ret    
   140010340:	rex.RXB (bad) 
   140010342:	rex.WR movabs rdi,0xe7d02612f91f7df1
   14001034c:	out    0xf9,eax
   14001034e:	sbb    eax,0xff261409
   140010353:	mov    es,WORD PTR gs:[rdx-0x1be0d200]
   14001035a:	ins    BYTE PTR es:[rdi],dx
   14001035b:	stc    
   14001035c:	(bad)  
   14001035d:	sub    eax,0x29685210
   140010362:	shl    BYTE PTR [rsi-0x3e],1
   140010365:	rcr    ah,1
   140010367:	sub    al,0x3d
   140010369:	cmp    dh,BYTE PTR [rsi]
   14001036b:	add    DWORD PTR [rbp+0x2ed02794],0x8
   140010372:	cwde   
   140010373:	loope  0x140010389
   140010375:	shl    BYTE PTR [rbx+0x32],cl
   140010378:	ja     0x14001036e
   14001037a:	imul   ecx,DWORD PTR [rdx],0xffffffc0
   14001037d:	sbb    dh,BYTE PTR fs:[rcx+rbx*4+0x436b4fd3]
   140010385:	add    dh,BYTE PTR [rcx-0x7221e1da]
   14001038b:	(bad)  
   14001038c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001038d:	imul   rdi,QWORD PTR [r13-0x880c453],0xfffffffff33e0fd7
   140010398:	out    dx,eax
   140010399:	ds clc 
   14001039b:	std    
   14001039c:	rex.RXB xor BYTE PTR [r9+0x7f],r15b
   1400103a0:	mov    bh,0xf8
   1400103a2:	xor    esi,esi
   1400103a4:	je     0x140010391
   1400103a6:	(bad)  
   1400103a8:	sub    eax,0x15e057f0
   1400103ad:	rex.R
   1400103ae:	add    BYTE PTR [r15-0x6fbb0de1],dl
   1400103b5:	and    ch,BYTE PTR [rdx+0xbbcfea4]
   1400103bb:	lock rex.WB
   1400103bd:	rex.WB xor al,0x74
   1400103c0:	cwde   
   1400103c1:	sbb    DWORD PTR [rdi-0x271579c1],0x32
   1400103c8:	cli    
   1400103c9:	jbe    0x1400103de
   1400103cb:	(bad)  
   1400103cc:	add    BYTE PTR [rip+0xffffffff97f5b877],dl        # 0xd7f6bc49
   1400103d2:	inc    BYTE PTR [rcx+rdi*2]
   1400103d5:	out    0xbe,al
   1400103d7:	ins    BYTE PTR es:[rdi],dx
   1400103d8:	movabs al,gs:0x43fadfb39dbc30d6
   1400103e2:	push   0xffffffffffffffd5
   1400103e4:	(bad)  
   1400103e5:	and    ch,BYTE PTR [rbx+rax*4]
   1400103e8:	xor    BYTE PTR [rbp+0x3a],cl
   1400103eb:	movabs eax,ds:0x284403ad0972884
   1400103f4:	rex.B enter 0x457c,0xb4
   1400103f9:	mov    esi,0xf3bee4f3
   1400103fe:	xchg   ebx,eax
   1400103ff:	lea    esi,[rax+0x677ce876]
   140010405:	cli    
   140010406:	mov    esi,edi
   140010408:	(bad)  
   140010409:	sbb    eax,0x39fb4a55
   14001040e:	jg     0x140010467
   140010410:	imul   bl
   140010412:	in     ax,dx
   140010414:	mov    ecx,0x29f1758
   140010419:	xchg   edi,eax
   14001041a:	or     DWORD PTR [rdx],ecx
   14001041c:	add    bh,BYTE PTR [rax+0x1c1591bc]
   140010422:	xor    eax,0xebdae667
   140010427:	in     eax,dx
   140010428:	rex.WRXB
   140010429:	addr32 in al,dx
   14001042b:	push   rbp
   14001042c:	mov    bh,dl
   14001042e:	movabs ds:0xc741d504db399867,eax
   140010437:	or     ah,BYTE PTR [rcx]
   140010439:	add    eax,0x173553aa
   14001043e:	push   rax
   14001043f:	outs   dx,BYTE PTR ds:[rsi]
   140010440:	xchg   al,ah
   140010442:	jl     0x1400104ae
   140010444:	push   rax
   140010445:	icebp  
   140010446:	(bad)  
   140010447:	(bad)  
   140010448:	out    dx,al
   140010449:	pop    rcx
   14001044a:	out    0x96,al
   14001044c:	add    ah,cl
   14001044e:	cmp    al,0xf
   140010450:	call   0x1be90ba4e
   140010455:	std    
   140010456:	or     DWORD PTR [rax+riz*2+0x577e79fb],ecx
   14001045d:	(bad)  
   14001045e:	jmp    0x1400104ca
   140010460:	(bad)  
   140010461:	sub    ebx,DWORD PTR [rax-0x1ec600c]
   140010467:	(bad)  
   140010468:	lea    esp,[rcx+0x2597fed0]
   14001046e:	in     al,0xc5
   140010470:	movaps XMMWORD PTR [rax-0x7],xmm6
   140010474:	sbb    bpl,bpl
   140010477:	fisubr WORD PTR [rbx+rbx*8-0x2ed4e046]
   14001047e:	jno    0x14001044c
   140010480:	mov    cl,0xea
   140010482:	jmp    0x140010430
   140010484:	push   0x9bb5429
   140010489:	rex.X movabs ds:0x4a6e0462ee0b9ce3,al
   140010493:	xor    DWORD PTR [rax-0x60],eax
   140010496:	jae    0x140010423
   140010498:	mov    ebx,0x8b6b4eb4
   14001049d:	or     al,0xf2
   14001049f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400104a0:	mov    esi,0xb4997613
   1400104a5:	mov    ebp,DWORD PTR [rbx-0x2e83406]
   1400104ab:	adc    al,0x2
   1400104ad:	jg     0x1400104c8
   1400104af:	movabs ds:0xd96f36ac145600b0,eax
   1400104b8:	or     BYTE PTR [rbp+0x6f],bh
   1400104bb:	(bad)  
   1400104bc:	rex.WRX
   1400104bd:	rex.WX add rax,0x7a227510
   1400104c3:	rex.RXB cli 
   1400104c5:	adc    BYTE PTR [rsp+rcx*2+0x74024048],dl
   1400104cc:	jb     0x1400104f0
   1400104ce:	test   al,0xbb
   1400104d0:	mov    ah,ah
   1400104d2:	sbb    r15,QWORD PTR [r14+0x4ecad68d]
   1400104d9:	pop    rsp
   1400104da:	(bad)  
   1400104db:	out    0x2a,eax
   1400104dd:	sub    BYTE PTR [rip+0x3765b030],cl        # 0x17766b513
   1400104e3:	iret   
   1400104e4:	ds jle 0x14001054f
   1400104e7:	(bad)  
   1400104e8:	adc    edx,esp
   1400104ea:	jae    0x1400104f0
   1400104ec:	loopne 0x140010474
   1400104ee:	cmc    
   1400104ef:	(bad)  
   1400104f0:	xchg   ecx,eax
   1400104f1:	mov    gs,esi
   1400104f3:	jae    0x14001047a
   1400104f5:	(bad)  
   1400104f6:	add    edx,DWORD PTR cs:[rax-0x74]
   1400104fa:	out    0x5f,eax
   1400104fc:	add    DWORD PTR [rax],ebp
   1400104fe:	or     BYTE PTR [rax+0x45],ah
   140010501:	rex.B
   140010502:	and    BYTE PTR [r13+0x1c],cl
   140010506:	and    BYTE PTR [rcx],ah
   140010508:	cmp    DWORD PTR [rsi+0x64202e24],0xe8df40
   140010512:	cmp    ch,BYTE PTR [rsi-0x7e]
   140010515:	(bad)  
   140010516:	test   al,0x48
   140010518:	xor    DWORD PTR [rsi-0x4e],0xe62fc1e8
   14001051f:	mov    cl,0xc5
   140010521:	rex.B jmp 0x14001055b
   140010524:	xchg   ebp,eax
   140010525:	pop    rcx
   140010526:	(bad)  
   140010527:	adc    bl,BYTE PTR [rdx-0x5ed37fa8]
   14001052d:	adc    eax,ecx
   14001052f:	fiadd  WORD PTR [rcx+0x4a]
   140010532:	xlat   BYTE PTR ds:[rbx]
   140010533:	mov    esi,0x98e4fa9e
   140010538:	es int 0xf3
   14001053b:	cmp    edx,DWORD PTR [rdx]
   14001053d:	jo     0x14001057d
   14001053f:	mov    edi,0xcd39fc0b
   140010544:	out    dx,eax
   140010545:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010546:	dec    BYTE PTR [rdx]
   140010548:	(bad)  
   140010549:	push   QWORD PTR [rdx]
   14001054b:	rex.RXB
   14001054c:	add    BYTE PTR [r11],bpl
   14001054f:	or     dh,BYTE PTR [rdx]
   140010551:	fld    TBYTE PTR [rbp-0x52ff2a59]
   140010557:	call   0xc1a36db8
   14001055c:	stc    
   14001055d:	pop    rcx
   14001055e:	rex.RB fcomp DWORD PTR [r11]
   140010561:	movabs eax,ds:0xf764eb0335ad08e3
   14001056a:	jp     0x14001056d
   14001056c:	cmpps  xmm5,xmm6,0x2c
   140010570:	xchg   DWORD PTR [rcx],eax
   140010572:	rex.XB std 
   140010574:	add    DWORD PTR [rsi-0x72],esp
   140010577:	add    DWORD PTR [rcx-0x6],ebp
   14001057a:	(bad)  
   14001057b:	xchg   esp,eax
   14001057c:	rex.WXB adc BYTE PTR [r10+0x7a],cl
   140010580:	jnp    0x140010526
   140010582:	(bad)  
   140010583:	or     BYTE PTR [rsi+0x52e3f01b],dh
   140010589:	jle    0x140010609
   14001058b:	lods   eax,DWORD PTR ds:[rsi]
   14001058c:	jg     0x140010545
   14001058e:	push   rsi
   14001058f:	pop    rsi
   140010590:	or     ah,BYTE PTR ds:[rdx]
   140010593:	mov    eax,0xc010510c
   140010598:	rex.WX (bad) 
   14001059a:	adc    BYTE PTR [rcx+0x7b02e005],ch
   1400105a0:	lea    eax,[rsi]
   1400105a2:	rex.X xchg esi,eax
   1400105a4:	(bad)  
   1400105a5:	call   FWORD PTR [rsi]
   1400105a7:	xchg   esp,eax
   1400105a8:	rex
   1400105a9:	rex.W
   1400105aa:	rex.R push rax
   1400105ac:	rex.RX test al,0xd8
   1400105af:	int3   
   1400105b0:	(bad)  
   1400105b1:	test   al,0xad
   1400105b3:	adc    cl,BYTE PTR [rsi-0x5a]
   1400105b6:	adc    bl,al
   1400105b8:	adc    cl,BYTE PTR [rax-0x4a]
   1400105bb:	add    BYTE PTR [rax-0x38],cl
   1400105be:	jle    0x14001057b
   1400105c0:	imul   eax,DWORD PTR [rdi],0x9410ea27
   1400105c6:	jmp    0x14856a5ee
   1400105cb:	fabs   
   1400105cd:	retf   0x646e
   1400105d0:	pop    rdi
   1400105d1:	mov    esi,0xfd30afe2
   1400105d6:	push   rdi
   1400105d7:	sbb    BYTE PTR [rdx],cl
   1400105d9:	add    bl,BYTE PTR [rax+0x51]
   1400105dc:	mov    al,0xc2
   1400105de:	(bad)  
   1400105df:	rex.RB (bad) 
   1400105e1:	(bad)  
   1400105e2:	or     al,0x83
   1400105e4:	and    al,0xc5
   1400105e6:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400105e7:	xchg   ebp,eax
   1400105e8:	rex.WX test BYTE PTR [rsi+0x3],bl
   1400105ec:	xor    ch,BYTE PTR [rcx+rbx*2]
   1400105ef:	lea    ebp,[rsi]
   1400105f1:	jb     0x1400105d6
   1400105f3:	add    eax,0x326020bc
   1400105f8:	(bad)  
   1400105f9:	(bad)  
   1400105fa:	mov    ah,0x93
   1400105fc:	xchg   ecx,eax
   1400105fd:	xchg   dh,bl
   1400105ff:	call   0x18c4fd966
   140010604:	add    al,0xc2
   140010606:	xor    DWORD PTR [rsi-0x3771aed5],eax
   14001060c:	push   rsi
   14001060d:	sti    
   14001060e:	mov    ecx,0xaff9c8a5
   140010613:	xor    BYTE PTR [rsp+rax*1],dl
   140010616:	mov    al,0x92
   140010618:	and    BYTE PTR [rdx+rbp*2+0x1],ah
   14001061c:	cwde   
   14001061d:	sbb    eax,0x8080d524
   140010622:	sub    al,0x95
   140010624:	lea    eax,[rip+0xffffffff8440ca20]        # 0xc441d04a
   14001062a:	ret    0xfc56
   14001062d:	mov    ecx,0xc22afd63
   140010632:	rex.WR (bad) 
   140010634:	rex or DWORD PTR [rax],0x9bc089ca
   14001063b:	or     edx,0xc2012812
   140010641:	(bad)  
   140010642:	test   edi,0x743fb608
   140010648:	cmp    DWORD PTR [rdi+0x5fe10bf1],ebp
   14001064e:	sub    BYTE PTR [r8],cl
   140010651:	(bad)  
   140010652:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010653:	and    ecx,edx
   140010655:	(bad)  
   140010656:	scas   al,BYTE PTR es:[rdi]
   140010657:	in     eax,dx
   140010658:	(bad)  
   140010659:	mov    dh,0xd9
   14001065b:	(bad)  
   14001065c:	sbb    QWORD PTR [rdx-0x738b7aa7],rbx
   140010663:	or     al,0x4a
   140010665:	enter  0x2f52,0xd9
   140010669:	push   rsi
   14001066a:	(bad)  
   14001066b:	and    dh,BYTE PTR [rbp+0x1d]
   14001066e:	movabs ds:0x6830135c4d3977aa,al
   140010677:	pop    rbx
   140010678:	xchg   ecx,eax
   140010679:	or     ebx,DWORD PTR [rbx+0x7c]
   14001067c:	lods   al,BYTE PTR ds:[rsi]
   14001067d:	xor    al,0x44
   14001067f:	adc    BYTE PTR [rdi],dh
   140010681:	push   rsp
   140010682:	pop    rsi
   140010683:	enter  0x1297,0xfa
   140010687:	rex.X loopne 0x1400106e1
   14001068a:	sbb    BYTE PTR [rdx],cl
   14001068c:	add    bl,BYTE PTR [rax+0x49]
   14001068f:	adc    BYTE PTR [rcx+0x5b60529],al
   140010695:	rex (bad) 
   140010697:	lea    edx,[rdi]
   140010699:	outs   dx,BYTE PTR ds:[rsi]
   14001069a:	push   0x70
   14001069c:	sbb    DWORD PTR [rax],esp
   14001069e:	xor    DWORD PTR [rdx],0x5a
   1400106a1:	rex.RXB or r12b,r13b
   1400106a4:	adc    al,0x63
   1400106a6:	js     0x14001066b
   1400106a8:	(bad)  
   1400106a9:	push   rbp
   1400106aa:	pushf  
   1400106ab:	sbb    eax,0x641efef
   1400106b0:	and    eax,0x9a43e8db
   1400106b5:	movsxd esp,DWORD PTR [rax+rsi*4-0x50427eea]
   1400106bc:	rcl    DWORD PTR [rdx+0x42],0xef
   1400106c0:	or     edi,DWORD PTR [rsi-0x5f]
   1400106c3:	std    
   1400106c4:	push   rdi
   1400106c5:	adc    BYTE PTR [rdx],cl
   1400106c7:	add    bl,BYTE PTR [rax+0x51]
   1400106ca:	lock (bad) 
   1400106cc:	(bad)  
   1400106cd:	or     cl,BYTE PTR [rax+rdx*4+0x7f30206a]
   1400106d4:	and    DWORD PTR [rcx+r12*1-0x37d224ff],r12d
   1400106dc:	mov    ecx,0x2ff9a904
   1400106e1:	(bad)  
   1400106e2:	pop    rbp
   1400106e3:	rex.WXB clc 
   1400106e5:	(bad)  
   1400106e6:	mov    esi,0x69502108
   1400106eb:	adc    edx,DWORD PTR [rax]
   1400106ed:	sbb    DWORD PTR [rsi+0x14717044],esp
   1400106f3:	(bad)  
   1400106f4:	ror    BYTE PTR [rdx],0x44
   1400106f7:	add    BYTE PTR [r11],bpl
   1400106fa:	or     DWORD PTR [rsi+0x30],ebp
   1400106fd:	nop
   1400106fe:	push   rdx
   1400106ff:	stc    
   140010700:	(bad)  
   140010701:	adc    BYTE PTR [rax+0x64],ch
   140010704:	pop    rax
   140010705:	xor    bl,BYTE PTR [rdx+0x5f]
   140010708:	(bad)  
   140010709:	and    edi,esi
   14001070b:	add    DWORD PTR [rbx-0x791840c6],ecx
   140010711:	cmc    
   140010712:	es add al,0x20
   140010715:	ins    DWORD PTR es:[rdi],dx
   140010716:	adc    BYTE PTR [rax],dh
   140010718:	(bad)  
   140010719:	xchg   BYTE PTR [rax+0x12],dl
   14001071c:	ret    0x8510
   14001071f:	pop    rax
   140010720:	scas   eax,DWORD PTR es:[rdi]
   140010721:	(bad)  
   140010722:	adc    al,0x4
   140010724:	mov    al,0xd2
   140010726:	and    BYTE PTR [rsp+rax*1],al
   140010729:	and    DWORD PTR [rcx],0x5ba6d701
   14001072f:	pop    rdx
   140010730:	or     eax,DWORD PTR [rax+0x6]
   140010733:	(bad)  
   140010734:	sbb    eax,0x1f198c08
   140010739:	hlt    
   14001073a:	hlt    
   14001073b:	movabs eax,ds:0x5c8712d058b6d33b
   140010744:	in     al,dx
   140010745:	add    cl,BYTE PTR [rax]
   140010747:	xor    DWORD PTR [rbp+0x65040422],0x1e905c7b
   140010751:	and    al,0x8b
   140010753:	mov    dh,cl
   140010755:	(bad)  
   140010756:	mov    ah,dl
   140010758:	(bad)  
   140010759:	mov    ebx,0x28de0d2
   14001075e:	xor    al,0x66
   140010760:	mov    edx,0xb0bfa634
   140010765:	add    al,0x20
   140010767:	rex.XB adc r10b,al
   14001076a:	fadd   DWORD PTR [rdx+rbx*2]
   14001076d:	rex.XB xor al,0xf
   140010770:	mov    ch,0x9a
   140010772:	ja     0x140010722
   140010774:	jmp    0x1400107a4
   140010776:	and    BYTE PTR [rbx],dh
   140010778:	xchg   edi,eax
   140010779:	rex.WXB xor al,0xbe
   14001077c:	adc    dh,dh
   14001077e:	sub    eax,0x58411d91
   140010783:	(bad)  
   140010784:	push   rbp
   140010785:	movabs ds:0xc001ada4145600b0,al
   14001078e:	mov    es,WORD PTR [rsi]
   140010790:	je     0x14001076c
   140010792:	fcomp  QWORD PTR [rdx+0x1764d6f9]
   140010798:	(bad)  
   140010799:	stos   DWORD PTR es:[rdi],eax
   14001079a:	or     al,0xa0
   14001079c:	fnstenv [rax]
   14001079e:	out    0xf5,eax
   1400107a0:	seto   BYTE PTR [rdi+rcx*1]
   1400107a4:	mov    cl,0x48
   1400107a6:	movsxd eax,DWORD PTR [rax]
   1400107a8:	(bad)  
   1400107a9:	fmul   QWORD PTR [rdi+0x66]
   1400107ac:	sbb    dh,dl
   1400107ae:	rex.RX and eax,0x6ab03c17
   1400107b4:	push   rcx
   1400107b5:	adc    al,al
   1400107b7:	rex.WX (bad) 
   1400107b9:	(bad)  
   1400107ba:	pop    rdi
   1400107bb:	lahf   
   1400107bc:	hlt    
   1400107bd:	test   esp,edx
   1400107bf:	adc    eax,0x160118f5
   1400107c4:	ss lahf 
   1400107c6:	(bad)  
   1400107c7:	rex.WXB jbe 0x140010820
   1400107ca:	(bad)  
   1400107cb:	and    DWORD PTR [rax+0xfc7375e],esp
   1400107d1:	or     al,0xe2
   1400107d3:	(bad)  
   1400107d4:	add    BYTE PTR [rcx-0x6b],dh
   1400107d7:	ret    0xd842
   1400107da:	lahf   
   1400107db:	(bad)  
   1400107dc:	xor    QWORD PTR es:[r10],r9
   1400107e0:	mov    ebx,0xac0188a3
   1400107e5:	pop    rdx
   1400107e6:	adc    al,0x2e
   1400107e8:	ror    BYTE PTR [rdx-0x7d],0x3f
   1400107ec:	adc    eax,0x44037398
   1400107f1:	loopne 0x140010855
   1400107f3:	cli    
   1400107f4:	rex.RX jmp 0x140010862
   1400107f7:	rex.WR
   1400107f8:	and    BYTE PTR ss:[rcx+rax*2+0x12522940],dh
   140010800:	test   al,0xd5
   140010802:	rex.WR int3 
   140010804:	mov    BYTE PTR [rcx+rbx*8-0x45],al
   140010809:	pop    rdx
   14001080a:	add    ah,0x32
   14001080d:	sar    BYTE PTR [rcx-0x674dc3cf],1
   140010813:	rex.X jb 0x1400107cb
   140010816:	movabs ds:0x5bbf3d5c125600b0,al
   14001081f:	(bad)  
   140010820:	(bad)  
   140010821:	js     0x140010802
   140010823:	lods   al,BYTE PTR ds:[rsi]
   140010824:	rex.WX pop rbx
   140010826:	(bad)  
   140010827:	sub    al,0x24
   140010829:	or     BYTE PTR [rax+r12*2+0x5d],al
   14001082e:	add    bh,ah
   140010830:	xlat   BYTE PTR ds:[rbx]
   140010831:	or     ebp,DWORD PTR [rcx+0x7b]
   140010834:	or     DWORD PTR [rax],ecx
   140010836:	call   0x148e83c58
   14001083b:	popf   
   14001083c:	nop
   14001083d:	rex.RXB neg BYTE PTR [r14+0x60]
   140010841:	jp     0x14001084a
   140010843:	(bad)  
   140010844:	rex.RB cdq 
   140010846:	add    DWORD PTR [rdx],0xffffffab
   140010849:	(bad)  
   14001084a:	add    eax,0xf824ac01
   14001084f:	rol    DWORD PTR [rdx+0x780073fb],cl
   140010855:	mov    esi,0xb93448ba
   14001085a:	rex.RX xchg BYTE PTR [rcx],r12b
   14001085d:	data16 (bad) 
   14001085f:	and    BYTE PTR [rbx-0x509d621a],ch
   140010865:	xlat   BYTE PTR ds:[rbx]
   140010866:	movabs al,ds:0x659fd939214ee2af
   14001086f:	enter  0xff99,0xcb
   140010873:	je     0x14001089d
   140010875:	sub    esi,DWORD PTR [rax-0x3fefae0e]
   14001087b:	rex.WX (bad) 
   14001087d:	scas   eax,DWORD PTR es:[rdi]
   14001087e:	lea    edi,[rbx-0x69ba17ba]
   140010884:	adc    al,dl
   140010886:	es rex cwde 
   140010889:	mov    WORD PTR [rdi],ds
   14001088b:	mov    bl,dl
   14001088d:	loop   0x140010830
   14001088f:	mov    BYTE PTR [rdx-0x2fa0e689],0x5
   140010896:	mov    eax,DWORD PTR [rip+0x5600b0bf]        # 0x19601b95b
   14001089c:	sub    ecx,DWORD PTR [rdx+0x434ac018]
   1400108a2:	data16 rex.W outs dx,DWORD PTR ds:[rsi]
   1400108a5:	mov    edx,0xd607c32f
   1400108aa:	sub    eax,0x1b2d8110
   1400108af:	(bad)  
   1400108b0:	ins    DWORD PTR es:[rdi],dx
   1400108b1:	sbb    al,0xc0
   1400108b3:	lea    ebx,[rsp+rcx*1]
   1400108b6:	add    ch,bh
   1400108b8:	push   rax
   1400108b9:	ins    DWORD PTR es:[rdi],dx
   1400108ba:	rex.RB fidivr WORD PTR [r9-0x12c8e5e9]
   1400108c1:	ja     0x1400108fd
   1400108c3:	adc    eax,0x8ad58159
   1400108c8:	ret    0x5802
   1400108cb:	push   rcx
   1400108cc:	jo     0x140010933
   1400108ce:	mov    edx,0x4d3376
   1400108d3:	cwde   
   1400108d4:	rex.WRB loope 0x140010932
   1400108d7:	add    BYTE PTR [rdx],bl
   1400108d9:	adc    DWORD PTR [rax-0x7c],ecx
   1400108dc:	xor    BYTE PTR [rbx],al
   1400108de:	test   DWORD PTR [rsi+riz*8-0x4eb81049],ecx
   1400108e5:	ja     0x140010875
   1400108e7:	mov    ebx,0x7b09c894
   1400108ec:	(bad)  
   1400108ed:	idiv   BYTE PTR [rdi+0x58501a]
   1400108f3:	sub    ecx,DWORD PTR [rcx]
   1400108f5:	rex.WB jae 0x140010907
   1400108f8:	mov    ebx,0x7708b49d
   1400108fd:	jg     0x1400108c5
   1400108ff:	lods   al,BYTE PTR ds:[rsi]
   140010900:	adc    BYTE PTR [rbx],cl
   140010902:	mov    bh,0x5f
   140010904:	pop    rdx
   140010905:	lods   eax,DWORD PTR ds:[rsi]
   140010906:	(bad)  
   140010907:	enter  0x12d4,0xc0
   14001090b:	rex.WRXB add r14,r12
   14001090e:	retf   0x45f8
   140010911:	mov    fs,WORD PTR [rcx+0xa]
   140010914:	sub    esp,DWORD PTR [rax-0x2b]
   140010917:	movabs ds:0xb6d04b341a5600b0,al
   140010920:	jmp    0x14001091a
   140010922:	xchg   ebx,eax
   140010923:	xchg   edx,eax
   140010924:	sub    ecx,0x9f76205
   14001092a:	cmp    ecx,esi
   14001092c:	pop    rdi
   14001092d:	jp     0x1400108f2
   14001092f:	adc    ecx,0xffffffe6
   140010932:	ins    DWORD PTR es:[rdi],dx
   140010933:	xchg   edi,eax
   140010934:	sti    
   140010935:	iret   
   140010936:	int3   
   140010937:	cmp    ah,ah
   140010939:	outs   dx,BYTE PTR ds:[rsi]
   14001093a:	out    0x65,al
   14001093c:	(bad)  
   14001093d:	or     ch,BYTE PTR [rdx+rdi*1-0x753fe9ec]
   140010944:	(bad)  
   140010945:	(bad)  
   140010946:	(bad)  
   140010947:	rex.WX jns 0x14001099d
   14001094a:	je     0x14001097b
   14001094c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001094d:	popf   
   14001094e:	pop    rbp
   14001094f:	adc    bh,cl
   140010951:	jmp    0x14001095e
   140010953:	call   0x131bd0b42
   140010958:	add    BYTE PTR [rdx],dl
   14001095a:	ffree  st(5)
   14001095c:	(bad)  
   14001095e:	sub    al,0x80
   140010960:	rex.X stc 
   140010962:	scas   eax,DWORD PTR es:[rdi]
   140010963:	push   0x14
   140010965:	(bad)  
   140010966:	ror    BYTE PTR [rdx-0x7e],0x8e
   14001096a:	rcl    DWORD PTR [rcx-0x14502d80],cl
   140010970:	(bad)  
   140010971:	pop    rbp
   140010972:	cmp    eax,0xff72e176
   140010977:	rex.WRX call 0xc3fc6ee0
   14001097d:	or     bl,dl
   14001097f:	sbb    eax,eax
   140010981:	pushf  
   140010982:	(bad)  
   140010983:	rex.WR add BYTE PTR [rdx-0x4a],r12b
   140010987:	mov    ebp,0xa2e4c30a
   14001098c:	test   DWORD PTR [rsi-0x1d752a8],ebx
   140010992:	mov    dl,0x2b
   140010994:	or     ch,BYTE PTR [rdx]
   140010996:	and    eax,0x26b17500
   14001099b:	cmp    al,0xae
   14001099d:	and    DWORD PTR [rax],ecx
   14001099f:	test   eax,0x2cef09
   1400109a4:	scas   eax,DWORD PTR es:[rdi]
   1400109a5:	(bad)  
   1400109a6:	pop    rdi
   1400109a7:	loopne 0x14001094f
   1400109a9:	add    al,0xcb
   1400109ab:	(bad)  
   1400109ac:	lfs    eax,FWORD PTR [rbx+rax*1]
   1400109b0:	pop    rbp
   1400109b1:	sub    al,0x84
   1400109b3:	add    ch,BYTE PTR [rbx-0x53fefafb]
   1400109b9:	and    al,0xa8
   1400109bb:	cmp    BYTE PTR [rbx],ch
   1400109bd:	repz mov cl,0x97
   1400109c0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400109c1:	pop    rbx
   1400109c2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400109c3:	lods   eax,DWORD PTR ds:[rsi]
   1400109c4:	mov    ebp,0xd1626160
   1400109c9:	mov    esi,DWORD PTR [rcx+rsi*2-0x45]
   1400109cd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400109ce:	add    DWORD PTR [ecx+esi*8],esp
   1400109d2:	add    ebp,ecx
   1400109d4:	sbb    eax,0xab00f853
   1400109d9:	sbb    DWORD PTR [rbp-0x5f5d4ff5],eax
   1400109df:	push   rdx
   1400109e0:	movabs eax,ds:0xf953ccd77d18e8bf
   1400109e9:	mov    ebx,0x7802fa48
   1400109ee:	mov    ebx,0xd85e1a32
   1400109f3:	mov    esi,0x5fff8980
   1400109f8:	adc    al,al
   1400109fa:	push   0x46
   1400109fc:	add    BYTE PTR [r11],bpl
   1400109ff:	or     DWORD PTR [rdx],ebp
   140010a01:	ss ret 0x44a9
   140010a05:	rex.WX add sil,BYTE PTR [rcx+0x5ae40ae7]
   140010a0c:	jle    0x1400109a9
   140010a0e:	cmp    DWORD PTR [rax],eax
   140010a10:	leave  
   140010a11:	push   rbp
   140010a12:	repz jp 0x1400109f9
   140010a15:	xchg   ecx,eax
   140010a16:	sbb    BYTE PTR [rbx],al
   140010a18:	mov    ecx,0x70dd5cf3
   140010a1d:	push   rdx
   140010a1e:	addr32 push rax
   140010a20:	or     al,0x6
   140010a22:	pop    rdx
   140010a23:	lods   eax,DWORD PTR ds:[rsi]
   140010a24:	sub    BYTE PTR [rax],cl
   140010a26:	(bad)  
   140010a27:	rex.RB
   140010a28:	rex.B movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010a2a:	repz add ch,BYTE PTR [rax+0x5b]
   140010a2e:	mov    cl,0x27
   140010a30:	jae    0x140010a75
   140010a32:	jns    0x1400109f0
   140010a34:	adc    edx,eax
   140010a36:	cmp    dh,BYTE PTR [rdx+0x5d]
   140010a39:	rex.XB fstp QWORD PTR [r11+0x2e4481d9]
   140010a40:	(bad)  
   140010a41:	nop
   140010a42:	and    BYTE PTR [rbx],dh
   140010a44:	ror    al,1
   140010a46:	ja     0x140010a49
   140010a48:	repnz sub eax,0x16ac0ac8
   140010a4e:	adc    al,0x4
   140010a50:	mov    al,0x92
   140010a52:	loopne 0x140010a06
   140010a54:	add    BYTE PTR [rsi+0x3f8e5c04],cl
   140010a5a:	shl    ebx,cl
   140010a5c:	pop    rdi
   140010a5d:	(bad)  
   140010a5e:	es mov esp,0x7edb6d8a
   140010a64:	xlat   BYTE PTR ds:[rbx]
   140010a65:	in     al,0x53
   140010a67:	je     0x140010a82
   140010a69:	rex.RXB and BYTE PTR [r8-0x48],r8b
   140010a6d:	xor    DWORD PTR [rsi],eax
   140010a6f:	leave  
   140010a70:	jne    0x140010a0e
   140010a72:	or     edx,DWORD PTR [rax+0x14]
   140010a75:	add    DWORD PTR [rbp-0x4ffbeb8a],ebp
   140010a7b:	xchg   edx,eax
   140010a7c:	loopne 0x140010af8
   140010a7e:	add    BYTE PTR [rdx+0x17c27d91],bh
   140010a84:	rex.WRX ins DWORD PTR es:[rdi],dx
   140010a86:	pop    rdx
   140010a87:	or     BYTE PTR [rcx],0x6d
   140010a8a:	sti    
   140010a8b:	jge    0x140010af5
   140010a8d:	mov    ah,0x9b
   140010a8f:	adc    al,0x24
   140010a91:	movsxd ebx,edx
   140010a93:	addr32 iret 
   140010a95:	adc    ecx,esi
   140010a97:	(bad)  
   140010a98:	mov    bh,0xd7
   140010a9a:	enter  0xef1e,0xed
   140010a9e:	sub    esi,DWORD PTR [rax-0x3fefaed6]
   140010aa4:	mov    al,BYTE PTR [rdx-0x6c]
   140010aa7:	mov    dh,0x2
   140010aa9:	jae    0x140010ab8
   140010aab:	push   r12
   140010aad:	mov    dh,0x79
   140010aaf:	xchg   DWORD PTR [rsi-0x52],esi
   140010ab2:	adc    DWORD PTR [rax],0x568c4ee8
   140010ab8:	mov    cl,0xcd
   140010aba:	(bad)  
   140010abb:	fisttp DWORD PTR [rdx]
   140010abd:	rex (bad) 
   140010abf:	sbb    dl,BYTE PTR [rax]
   140010ac1:	ins    BYTE PTR es:[rdi],dx
   140010ac2:	(bad)  
   140010ac3:	add    BYTE PTR [rbp-0x1d],ch
   140010ac6:	jge    0x140010a81
   140010ac8:	cmp    BYTE PTR [rdx+0x7a],al
   140010acb:	or     r10b,BYTE PTR [r10]
   140010ace:	pop    rax
   140010acf:	mov    ebp,0x25600828
   140010ad4:	imul   ebx,r11d,0xffffffb6
   140010ad8:	fist   DWORD PTR [rip+0xffffffffbea9b8eb]        # 0xfeaac3c9
   140010ade:	mov    WORD PTR [rax-0x2558ea96],ss
   140010ae4:	pop    rbx
   140010ae5:	sub    esi,DWORD PTR [rdi+rcx*2-0x676a51f2]
   140010aec:	es fwait
   140010aee:	(bad)  
   140010aef:	rex.WR fisub WORD PTR [rdi]
   140010af2:	sbb    eax,DWORD PTR [rsp+rdx*1-0x68]
   140010af6:	jmp    0x140010ae3
   140010af8:	je     0x140010ada
   140010afa:	push   rax
   140010afb:	adc    ebp,0x56008287
   140010b01:	adc    dh,BYTE PTR [rbx+rcx*8+0x576db802]
   140010b08:	(bad)  
   140010b09:	jmp    0x140010b74
   140010b0b:	push   0x6bf08cad
   140010b10:	lea    ecx,[rdx+0x5ac8e814]
   140010b16:	add    dh,dl
   140010b18:	(bad)  
   140010b19:	rex.W test bl,bl
   140010b1c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010b1d:	add    ch,bh
   140010b1f:	clc    
   140010b20:	sbb    ebp,0x7004b49b
   140010b26:	mov    cl,0x81
   140010b28:	and    cl,BYTE PTR [rax]
   140010b2a:	mov    eax,0xc010515a
   140010b2f:	mov    al,BYTE PTR [rdx-0x52742f53]
   140010b35:	fucomip st,st(6)
   140010b37:	rol    BYTE PTR [rax+0x5af29ada],cl
   140010b3d:	pop    rcx
   140010b3e:	and    eax,0x4559846e
   140010b43:	xchg   ecx,eax
   140010b44:	push   rdi
   140010b45:	ds ins BYTE PTR es:[rdi],dx
   140010b47:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010b48:	or     DWORD PTR [rbx+0x17003f5c],eax
   140010b4e:	lock push rbx
   140010b50:	xchg   BYTE PTR [rax-0x6e],dl
   140010b53:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010b54:	and    dh,bh
   140010b56:	hlt    
   140010b57:	jg     0x140010b9e
   140010b59:	sub    eax,esp
   140010b5b:	push   0x45
   140010b5d:	add    BYTE PTR [r11],bpl
   140010b60:	or     bl,dh
   140010b62:	pop    rax
   140010b63:	add    BYTE PTR [rbp+rcx*4-0x7b6c5bf9],al
   140010b6a:	push   0x7f
   140010b6c:	(bad)  
   140010b6d:	rex.WRXB lods rax,QWORD PTR ds:[rsi]
   140010b6f:	shl    DWORD PTR [rcx+0x52e004b6],1
   140010b75:	jns    0x140010bc5
   140010b77:	mov    eax,0xc49f598d
   140010b7c:	add    dl,dh
   140010b7e:	(bad)  
   140010b7f:	rex.R cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010b81:	xor    eax,0xb0058538
   140010b86:	mov    dl,BYTE PTR [rcx-0x6c]
   140010b89:	add    ch,BYTE PTR [rdi+0x2c6f6824]
   140010b8f:	xor    BYTE PTR [rsi-0x5b],0xbe
   140010b93:	cmp    DWORD PTR [rbx],edx
   140010b95:	fidiv  WORD PTR [rbx]
   140010b97:	(bad)  
   140010b99:	rex.WRX (bad) 
   140010b9b:	sub    eax,0x2abd8a1e
   140010ba0:	rex.X mov edi,0x60dd012
   140010ba6:	repnz test esp,ebx
   140010ba9:	(bad)  
   140010bab:	out    0x3b,al
   140010bad:	add    al,0x17
   140010baf:	pop    rax
   140010bb0:	push   rbp
   140010bb1:	sub    BYTE PTR [rax+rax*4],ch
   140010bb4:	xchg   ebp,eax
   140010bb5:	or     bh,dl
   140010bb7:	or     BYTE PTR [rdx+rax*1-0x6f],al
   140010bbb:	retf   0xaf08
   140010bbe:	neg    BYTE PTR [rdx+0x7c]
   140010bc1:	test   eax,0x91fcd58e
   140010bc6:	repnz cli 
   140010bc8:	add    bl,BYTE PTR [rdx+0x1f]
   140010bcb:	pop    rdi
   140010bcc:	jp     0x140010bf1
   140010bce:	or     BYTE PTR [rbx-0x4e3a6066],dl
   140010bd4:	add    al,0xb3
   140010bd6:	mov    esp,0xc0a79fc4
   140010bdb:	sub    eax,DWORD PTR [rsi+0x12560082]
   140010be1:	pushf  
   140010be2:	(bad)  
   140010be3:	(bad)  
   140010be4:	push   rsi
   140010be5:	nop
   140010be6:	std    
   140010be7:	ss loope 0x140010ba0
   140010bea:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010beb:	xlat   BYTE PTR ds:[rbx]
   140010bec:	(bad)  
   140010bed:	sbb    BYTE PTR [rbp+rdx*4+0x4eb40175],ch
   140010bf4:	jrcxz  0x140010bfc
   140010bf6:	retf   0x296
   140010bf9:	rex.WXB mov r10,rdx
   140010bfc:	fidiv  DWORD PTR [rbx+rax*1-0x36]
   140010c00:	or     BYTE PTR [rax+0x657bf7ef],bh
   140010c06:	mov    BYTE PTR [rip+0x20a2556],0x58        # 0x1420b3163
   140010c0d:	rex.WB jo 0x140010c63
   140010c10:	sub    BYTE PTR [rcx-0x2e],0xe8
   140010c14:	mov    edi,0x5e15db2d
   140010c19:	mov    al,0x2e
   140010c1b:	(bad)  
   140010c1d:	(bad)  
   140010c1e:	xchg   BYTE PTR [rax+0x4c81c3a1],bh
   140010c24:	iret   
   140010c25:	(bad)  
   140010c26:	and    bl,BYTE PTR [rcx+0xf1d2052]
   140010c2c:	nop
   140010c2d:	fmul   st(0),st
   140010c2f:	repz dec DWORD PTR [rbx+0x466ac02c]
   140010c36:	adc    DWORD PTR [rbx],eax
   140010c38:	pop    rax
   140010c39:	push   rcx
   140010c3a:	mov    al,0xd
   140010c3c:	cmp    eax,0x581e8e5c
   140010c41:	push   rsp
   140010c42:	mov    ah,0x63
   140010c44:	(bad)  
   140010c45:	(bad)  
   140010c46:	add    eax,0xd768d620
   140010c4b:	fst    DWORD PTR [rdi+0x60]
   140010c4e:	addr32 adc al,0x56
   140010c51:	es cs (bad) 
   140010c54:	jrcxz  0x140010cd2
   140010c56:	or     DWORD PTR [rbp-0x78],esp
   140010c59:	fmul   QWORD PTR [rdi+0x21]
   140010c5c:	pop    rdi
   140010c5d:	sbb    eax,0xa2556058
   140010c62:	mov    al,0x0
   140010c64:	push   rsi
   140010c65:	adc    dl,BYTE PTR [rdx-0x4922c3f7]
   140010c6b:	xchg   ebx,eax
   140010c6c:	(bad)  
   140010c6d:	cmp    esp,DWORD PTR [rax]
   140010c6f:	enter  0xe94d,0x6d
   140010c73:	mov    bh,0x4d
   140010c75:	cld    
   140010c76:	(bad)  
   140010c77:	pop    rdx
   140010c78:	or     edx,ecx
   140010c7a:	(bad)  
   140010c7b:	scas   eax,DWORD PTR es:[rdi]
   140010c7c:	mov    ebp,0x436c0f3
   140010c81:	jne    0x140010c4b
   140010c83:	pop    rcx
   140010c84:	add    DWORD PTR [rcx-0x78de6e65],ecx
   140010c8a:	(bad)  
   140010c8b:	adc    DWORD PTR [rsi+0x11],edx
   140010c8e:	or     al,BYTE PTR [rdx]
   140010c90:	pop    rax
   140010c91:	rex.WB jo 0x140010c91
   140010c94:	cli    
   140010c95:	repz rol DWORD PTR [rbx+0x10bf9e79],cl
   140010c9c:	add    ch,BYTE PTR [rbp-0x25]
   140010c9f:	jg     0x140010d0c
   140010ca1:	and    eax,0x995f9e4c
   140010ca6:	xor    DWORD PTR [rdx],eax
   140010ca8:	data16 data16 (bad) 
   140010cab:	cdq    
   140010cac:	mov    ah,0x3
   140010cae:	rex.WXB movabs r11,0xbf015ad8833b6101
   140010cb8:	leave  
   140010cb9:	imul   QWORD PTR [rax+rax*2]
   140010cbd:	outs   dx,BYTE PTR ds:[rsi]
   140010cbe:	hlt    
   140010cbf:	push   rcx
   140010cc0:	adc    DWORD PTR [rbp+0x5805c28a],0xfdfd7049
   140010cca:	cld    
   140010ccb:	scas   al,BYTE PTR es:[rdi]
   140010ccc:	ds (bad) 
   140010cce:	mov    dh,0x90
   140010cd0:	or     BYTE PTR [rbx+rbx*8-0x7f],0x23
   140010cd5:	in     al,dx
   140010cd6:	test   BYTE PTR [rdi],bl
   140010cd8:	jbe    0x140010cad
   140010cda:	pop    rcx
   140010cdb:	add    al,0xf6
   140010cdd:	pop    rdx
   140010cde:	ret    0x284e
   140010ce1:	and    bl,BYTE PTR [rax+rdx*2-0x2f]
   140010ce5:	jne    0x140010cee
   140010ce7:	leave  
   140010ce8:	int3   
   140010ce9:	(bad)  
   140010cea:	nop
   140010ceb:	mov    ah,0x6
   140010ced:	jmp    0x140010d25
   140010cef:	rex.W movabs al,ds:0x5802c28415817adb
   140010cf9:	push   rcx
   140010cfa:	lock or BYTE PTR [rax],ah
   140010cfd:	rcl    DWORD PTR [rip+0xffffffff850404c8],cl        # 0xc50511cb
   140010d03:	mov    al,0x7d
   140010d05:	call   QWORD PTR [rbp-0x68a7fc75]
   140010d0b:	shr    DWORD PTR [rdi-0xe],0x99
   140010d0f:	fwait
   140010d10:	pop    rdx
   140010d11:	sub    al,0xe9
   140010d13:	(bad)  
   140010d14:	sub    BYTE PTR [rcx+riz*4+0x50],ch
   140010d18:	rcl    BYTE PTR [rcx],cl
   140010d1a:	enter  0xa71c,0xd1
   140010d1e:	or     BYTE PTR [rcx-0x681fe3b4],bl
   140010d24:	(bad)  
   140010d25:	(bad)  
   140010d26:	pop    rax
   140010d27:	add    eax,0x45600828
   140010d2c:	rcl    ebx,0xfc
   140010d2f:	push   rdx
   140010d30:	data16 test BYTE PTR [rcx-0x1c],bl
   140010d34:	xor    al,0xb8
   140010d36:	rex fdiv DWORD PTR [rdi-0x7ea706db]
   140010d3d:	mov    ebx,0x4b12e196
   140010d42:	(bad)  
   140010d43:	scas   al,BYTE PTR es:[rdi]
   140010d44:	jge    0x140010cfe
   140010d46:	(bad)  
   140010d47:	pop    rax
   140010d48:	enter  0x2ccd,0x6c
   140010d4c:	loopne 0x140010cd2
   140010d4e:	ficom  WORD PTR [rcx-0x54f9bec0]
   140010d54:	add    BYTE PTR [rip+0xffffffffa424ac01],al        # 0xe425b95b
   140010d5a:	mov    cl,0x3b
   140010d5c:	enter  0xf3f4,0x17
   140010d60:	push   rsi
   140010d61:	mov    esi,0xa6eff9ad
   140010d66:	add    bl,dh
   140010d68:	mov    ebx,0x7f3eb8f9
   140010d6d:	rex.WB and r8b,dl
   140010d70:	ins    DWORD PTR es:[rdi],dx
   140010d71:	ficomp DWORD PTR [rax+0x700dde42]
   140010d77:	(bad)  
   140010d78:	jne    0x140010d54
   140010d7a:	cs std 
   140010d7c:	test   al,0x30
   140010d7e:	xor    eax,0x10b5eec4
   140010d83:	(bad)  
   140010d84:	push   rbp
   140010d85:	add    BYTE PTR [rdx+0x64145600],0x4e
   140010d8c:	mov    ebx,DWORD PTR [rbx-0x8]
   140010d8f:	push   rbx
   140010d90:	jns    0x140010d4b
   140010d92:	add    DWORD PTR ds:[rdx+0x23],ebx
   140010d96:	rex.R
   140010d97:	rex fcmovu st,st(2)
   140010d9a:	cmp    esp,DWORD PTR [rdi+0x1]
   140010d9d:	or     BYTE PTR [rcx+0x7b],ch
   140010da0:	test   BYTE PTR [rsi],al
   140010da2:	mov    dh,0x91
   140010da4:	mov    BYTE PTR [rbx+0x637e3400],dh
   140010daa:	push   rax
   140010dab:	xor    DWORD PTR [rdi-0x6a],esi
   140010dae:	(bad)  
   140010daf:	clc    
   140010db0:	(bad)  
   140010db1:	repz pop QWORD PTR [rcx]
   140010db4:	sbb    eax,0x92c9896f
   140010db9:	rex
   140010dba:	rex.B (bad) 
   140010dbc:	sub    edx,DWORD PTR [rax*1+0x6428ac01]
   140010dc3:	rex.WR sub spl,0x3b
   140010dc7:	rex.WB int3 
   140010dc9:	cs rex.WRB cmc 
   140010dcc:	jmp    0x11f21354d
   140010dd1:	mov    esp,0xbf835677
   140010dd6:	sub    esi,DWORD PTR [rcx+0x28092c00]
   140010ddc:	(bad)  
   140010ddf:	jle    0x140010dc3
   140010de1:	sar    DWORD PTR [rdi+0xa7533df],0x68
   140010de8:	add    DWORD PTR [rbp-0x60],ecx
   140010deb:	rex.WRB
   140010dec:	rex.WX add cl,BYTE PTR [rdx-0x4fd7ea2c]
   140010df3:	add    dl,BYTE PTR [rcx+0x10]
   140010df6:	ror    BYTE PTR [rdx-0x3e],0x92
   140010dfa:	repnz out dx,eax
   140010dfc:	rex.WR jbe 0x140010e47
   140010dff:	stos   BYTE PTR es:[rdi],al
   140010e00:	add    ebp,DWORD PTR [rip+0x7d162411]        # 0x1bd173217
   140010e06:	add    bl,BYTE PTR [rbp-0x6647b4c7]
   140010e0c:	(bad)  
   140010e0d:	xchg   edx,eax
   140010e0e:	loopne 0x140010e72
   140010e10:	xor    dh,BYTE PTR [rax]
   140010e12:	sub    BYTE PTR [rdi-0x9c4cec3],0x7b
   140010e19:	lahf   
   140010e1a:	cmp    eax,0xdba80073
   140010e1f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010e20:	(bad)  
   140010e21:	xchg   edi,eax
   140010e22:	adc    BYTE PTR ss:[rcx-0x77d7ea28],dh
   140010e29:	(bad)  
   140010e2a:	test   DWORD PTR [rcx+0x5158020],esp
   140010e30:	cdq    
   140010e31:	(bad)  
   140010e32:	jmp    0x140010deb
   140010e34:	or     BYTE PTR [rsi-0x36],bl
   140010e37:	(bad)  
   140010e38:	cdq    
   140010e39:	add    edx,DWORD PTR [rdx]
   140010e3b:	xor    dh,BYTE PTR [rbx+0x1]
   140010e3e:	cs and ax,0x633c
   140010e43:	shl    BYTE PTR [rbx-0x1eca93f6],0x53
   140010e4a:	(bad)  
   140010e4b:	push   0x53
   140010e4d:	(bad)  
   140010e4e:	clc    
   140010e4f:	jnp    0x140010e4c
   140010e51:	out    dx,eax
   140010e52:	ret    
   140010e53:	or     BYTE PTR [rbp+rbx*1+0x58],bh
   140010e57:	add    BYTE PTR [rdx+0x76],ch
   140010e5a:	mov    ebx,0x280262c5
   140010e5f:	rol    BYTE PTR [rdx+0x105102b],cl
   140010e65:	lods   al,BYTE PTR ds:[rsi]
   140010e66:	and    al,0x88
   140010e68:	and    eax,0xa6400062
   140010e6d:	mov    ebp,0xed6413b7
   140010e72:	push   0x3
   140010e74:	cld    
   140010e75:	mov    bh,0x4
   140010e77:	jle    0x140010eaa
   140010e79:	push   rcx
   140010e7a:	pop    rdx
   140010e7b:	or     DWORD PTR [rax+0x3d1d0416],ebx
   140010e81:	push   rdi
   140010e82:	scas   eax,DWORD PTR es:[rdi]
   140010e83:	mov    esp,0xeecf03fb
   140010e88:	rcr    DWORD PTR [rax-0x1d5fca04],0x2d
   140010e8f:	add    DWORD PTR ds:[rcx+rbx*4],edx
   140010e93:	adc    BYTE PTR [rip+0x5600828e],0x14        # 0x196019128
   140010e9a:	repnz test eax,0xb1c8bbc
   140010ea0:	je     0x140010eaf
   140010ea2:	sbb    al,0x4a
   140010ea4:	push   rdi
   140010ea5:	xor    ah,ah
   140010ea7:	xchg   BYTE PTR [rip+0xffffffffb505e3b9],cl        # 0xf506f266
   140010ead:	data16 fdiv st(1),st
   140010eb0:	(bad)  
   140010eb2:	loop   0x140010e9c
   140010eb4:	jrcxz  0x140010ecd
   140010eb6:	out    0xda,al
   140010eb8:	xor    eax,0x20580252
   140010ebd:	imul   eax,DWORD PTR [rcx],0x44
   140010ec0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010ec1:	add    al,0x50
   140010ec3:	mov    WORD PTR [rdx+rbx*2],ss
   140010ec6:	shr    DWORD PTR [rax],0x8
   140010ec9:	(bad)  
   140010eca:	and    eax,0x600b1961
   140010ecf:	cdq    
   140010ed0:	xchg   ebx,eax
   140010ed1:	mov    dl,0x55
   140010ed3:	or     DWORD PTR [rbx-0x5e037ef6],0xffffffbf
   140010eda:	movabs al,ds:0xae618e981e88ddd6
   140010ee3:	and    DWORD PTR [rcx],0xffffff80
   140010ee6:	cmp    bl,BYTE PTR [rcx-0x2d]
   140010ee9:	(bad)  
   140010eeb:	(bad)  
   140010eec:	jns    0x140010edb
   140010eee:	pop    rdi
   140010eef:	(bad)
   140010ef3:	mov    dl,BYTE PTR [rdx-0x20]
   140010ef6:	xchg   ebp,eax
   140010ef7:	test   bh,bh
   140010ef9:	mov    edi,0x918dabbd
   140010efe:	jmp    0x140010ebc
   140010f00:	retf   0x79cf
   140010f03:	out    dx,eax
   140010f04:	int3   
   140010f05:	outs   dx,BYTE PTR ds:[rsi]
   140010f06:	(bad)  
   140010f07:	mov    cl,0xd7
   140010f09:	neg    dl
   140010f0b:	(bad)  
   140010f0c:	es mov dh,0x93
   140010f0f:	adc    al,0x9a
   140010f11:	rex.RX
   140010f12:	rex sub eax,DWORD PTR [rip+0xffffffff82402012]        # 0xc2412f2b
   140010f19:	rex adc eax,0xfc7c4212
   140010f1f:	add    DWORD PTR [rcx],eax
   140010f21:	and    bh,cl
   140010f23:	test   DWORD PTR [rsi+rdx*1-0x6f0695cb],edx
   140010f2a:	push   0x94ff514
   140010f2f:	push   0xfffffffffffffffb
   140010f31:	and    esp,DWORD PTR [rbp-0x7d25f684]
   140010f37:	push   rsp
   140010f38:	jle    0x140010f8e
   140010f3a:	or     dl,bl
   140010f3c:	adc    al,0x92
   140010f3e:	xor    al,0x29
   140010f40:	cmp    BYTE PTR [rcx-0x66],dh
   140010f43:	getsec 
   140010f45:	nop
   140010f46:	(bad)  
   140010f47:	imul   ebx,DWORD PTR [rdx-0x38a24a48],0xdec6c9b1
   140010f51:	in     al,dx
   140010f52:	jp     0x140010f41
   140010f54:	std    
   140010f55:	pushf  
   140010f56:	fstp   st(1)
   140010f58:	popf   
   140010f59:	fstp   QWORD PTR [rcx-0x6381e105]
   140010f5f:	repz fdivp st(3),st
   140010f62:	(bad)  
   140010f63:	popf   
   140010f64:	mov    cl,0x2d
   140010f66:	add    al,0x24
   140010f68:	sti    
   140010f69:	mov    cs,edi
   140010f6b:	mov    bl,0xba
   140010f6d:	(bad)  
   140010f6e:	(bad)  
   140010f6f:	clc    
   140010f70:	out    dx,al
   140010f71:	fstp   QWORD PTR [rbp-0x53]
   140010f74:	iret   
   140010f75:	repz sahf 
   140010f77:	iret   
   140010f78:	out    0xb0,eax
   140010f7a:	(bad)  
   140010f7b:	jmp    0x140010fc4
   140010f7d:	mov    edi,0x117d9f45
   140010f82:	sar    ah,cl
   140010f84:	jge    0x140010fb4
   140010f86:	push   rcx
   140010f87:	add    ecx,DWORD PTR [rdx-0x151fffc3]
   140010f8d:	loope  0x140010f3b
   140010f8f:	(bad)  
   140010f90:	lock (bad) 
   140010f92:	div    BYTE PTR ds:[rbx-0x29]
   140010f96:	out    dx,al
   140010f97:	fstp   DWORD PTR [rsi-0x6bc2f3bf]
   140010f9d:	(bad)  
   140010f9e:	(bad)
   140010fa3:	sbb    edx,DWORD PTR [rdx]
   140010fa5:	adc    DWORD PTR [rcx],0x40
   140010fa8:	rex.X (bad) 
   140010faa:	jb     0x14001100c
   140010fac:	adc    BYTE PTR [rax+0x499fc7a4],bl
   140010fb2:	scas   al,BYTE PTR es:[rdi]
   140010fb3:	xor    al,ch
   140010fb5:	xlat   BYTE PTR ds:[rbx]
   140010fb6:	(bad)  
   140010fb7:	icebp  
   140010fb8:	cld    
   140010fb9:	add    BYTE PTR [rax],dl
   140010fbb:	jge    0x140010fdb
   140010fbd:	lods   eax,DWORD PTR ds:[rsi]
   140010fbe:	dec    BYTE PTR [rsi+0x1fcdd6be]
   140010fc4:	(bad)  
   140010fc5:	push   rsi
   140010fc6:	sub    al,0xd6
   140010fc8:	mov    edi,0xfc4f95f5
   140010fcd:	repnz (bad) 
   140010fcf:	jmp    0x140010f97
   140010fd1:	scas   al,BYTE PTR es:[rdi]
   140010fd2:	mov    bl,BYTE PTR [rdi+0xbfe7ff4]
   140010fd8:	sbb    esi,ebx
   140010fda:	jne    0x140010ff4
   140010fdc:	add    DWORD PTR [rax+rcx*1+0x665de696],esp
   140010fe3:	adc    al,BYTE PTR [rcx]
   140010fe5:	mov    al,0x4b
   140010fe7:	(bad)  
   140010fe8:	imul   BYTE PTR [rcx+0x15]
   140010feb:	movabs al,ds:0x40a86461cfb625cf
   140010ff4:	in     eax,dx
   140010ff5:	int3   
   140010ff6:	sar    DWORD PTR [rax+0x7aed1771],cl
   140010ffc:	call   0x197ea0f70
   140011001:	add    BYTE PTR [rcx+rax*1],cl
   140011004:	sbb    dh,dl
   140011006:	xlat   BYTE PTR ds:[rbx]
   140011007:	cmp    ah,ah
   140011009:	dec    DWORD PTR [rax+rdx*2+0x25]
   14001100d:	mov    BYTE PTR [rdi],ch
   14001100f:	rex.XB (bad) 
   140011011:	xor    BYTE PTR [rdx],al
   140011013:	rex.W or spl,BYTE PTR [rcx+0x665d47bc]
   14001101a:	(bad)  
   14001101b:	push   rbp
   14001101c:	xchg   esp,ebx
   14001101e:	jae    0x140011099
   140011020:	add    DWORD PTR [rbp-0x28],eax
   140011023:	push   rax
   140011024:	std    
   140011025:	and    BYTE PTR [rdi+rsi*8+0x31],al
   140011029:	cmp    DWORD PTR [rbp+0x64759d5e],0xffffff93
   140011030:	ffreep st(2)
   140011032:	lods   eax,DWORD PTR ds:[rsi]
   140011033:	(bad)  
   140011034:	out    dx,eax
   140011035:	mov    edx,0x3e87d9e9
   14001103a:	repz cmp eax,DWORD PTR [rax]
   14001103d:	scas   al,BYTE PTR es:[rdi]
   14001103e:	(bad)  
   14001103f:	imul   eax,DWORD PTR [rax+rax*8],0x55
   140011043:	call   0xc7f9926e
   140011048:	mov    ebx,DWORD PTR [rdi+0xd]
   14001104b:	or     eax,eax
   14001104d:	or     BYTE PTR [rax],ah
   14001104f:	and    DWORD PTR [rax],esi
   140011051:	xor    edi,DWORD PTR fs:[rax+0x7c]
   140011055:	lock push rdx
   140011057:	(bad)  
   140011058:	imul   edi
   14001105a:	test   eax,0xac3bf7ca
   14001105f:	ret    
   140011060:	and    BYTE PTR [rax],al
   140011062:	retf   0x211c
   140011065:	xchg   edi,eax
   140011066:	fisub  DWORD PTR [rcx]
   140011068:	lock or al,0xac
   14001106b:	(bad)  
   14001106c:	and    ebx,DWORD PTR [rbx+0x7a9f8038]
   140011072:	dec    esi
   140011074:	(bad)  
   140011075:	std    
   140011076:	in     al,dx
   140011077:	std    
   140011078:	mov    edi,0xdb0041fd
   14001107d:	and    BYTE PTR [rax+rdx*1],ah
   140011080:	or     BYTE PTR [rax-0x3f90917a],ah
   140011086:	nop
   140011087:	and    BYTE PTR [rax+rax*1-0x65277d6e],cl
   14001108e:	out    0x38,eax
   140011090:	adc    eax,DWORD PTR [rdi+0x60]
   140011093:	idiv   ch
   140011095:	jae    0x140011097
   140011097:	xchg   edi,eax
   140011098:	rex.WB int 0x11
   14001109b:	je     0x1400110a3
   14001109d:	mov    BYTE PTR [rbx+0x551720c4],al
   1400110a3:	add    dh,dh
   1400110a5:	add    dh,dl
   1400110a7:	xchg   esi,eax
   1400110a8:	push   rax
   1400110a9:	mov    ebx,0x78bf196a
   1400110ae:	out    0x7,eax
   1400110b0:	jle    0x1400110c4
   1400110b2:	shr    BYTE PTR [rax],0x84
   1400110b5:	add    al,0x46
   1400110b7:	and    BYTE PTR [rcx],ah
   1400110b9:	rex.B
   1400110ba:	lock add cl,ah
   1400110bd:	clc    
   1400110be:	adc    eax,DWORD PTR [rsi+0x42930195]
   1400110c4:	(bad)  
   1400110c5:	xchg   bh,dl
   1400110c7:	and    DWORD PTR [rdi],ebx
   1400110c9:	add    BYTE PTR [rbp+rax*2+0x5ef2d678],ah
   1400110d0:	out    dx,al
   1400110d1:	jnp    0x1400110ae
   1400110d3:	jb     0x140011109
   1400110d5:	jno    0x14001112f
   1400110d7:	rex.RB movabs eax,ds:0x9fda97a96ef7a421
   1400110e1:	ds (bad) 
   1400110e3:	add    al,0x7d
   1400110e5:	repz xor BYTE PTR [rax+0x76],dh
   1400110e9:	leave  
   1400110ea:	add    eax,ebx
   1400110ec:	or     dh,cl
   1400110ee:	add    BYTE PTR [rsi-0x3dfd85c0],dh
   1400110f4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400110f5:	push   rcx
   1400110f6:	in     al,dx
   1400110f7:	push   rsi
   1400110f8:	(bad)  
   1400110f9:	pop    rbp
   1400110fa:	rex.RB push r14
   1400110fc:	sbb    DWORD PTR [rax+0x0],ecx
   1400110ff:	rex.RX add BYTE PTR [rcx+0x41],r9b
   140011103:	loop   0x140011184
   140011105:	mov    ?,WORD PTR [rdx+0x6f]
   140011108:	mov    BYTE PTR [rdx+rbx*4+0x2f],dh
   14001110c:	xchg   esp,eax
   14001110d:	(bad)  
   14001110e:	mov    ebx,0x74008018
   140011113:	xor    al,0x6c
   140011115:	call   0x137586393
   14001111a:	and    BYTE PTR [rbx+0x7c576787],dh
   140011120:	sub    DWORD PTR [rbx],eax
   140011122:	rex.RB jle 0x140011145
   140011125:	pop    rdi
   140011126:	mov    esi,0xfe4e4190
   14001112b:	nop
   14001112c:	add    ebx,DWORD PTR [rax]
   14001112e:	(bad)  
   14001112f:	cld    
   140011130:	fist   WORD PTR [rcx+0x11]
   140011133:	ret    0xef62
   140011136:	cwde   
   140011137:	sbb    DWORD PTR [rsi+0x62],edi
   14001113a:	xor    BYTE PTR [rdx],al
   14001113c:	or     rax,0x219f5f15
   140011142:	pop    rbx
   140011143:	and    BYTE PTR [rbp-0x78],0xaf
   140011147:	mov    edx,0x70c18fcf
   14001114c:	movabs al,ds:0x9e00009e2bba5ebe
   140011155:	test   eax,0x57481cb2
   14001115a:	test   BYTE PTR [rcx+0xf],bh
   14001115d:	out    dx,eax
   14001115e:	cmp    eax,0xb8fedc41
   140011163:	sbb    dl,BYTE PTR [rax]
   140011165:	cmp    al,0x0
   140011167:	xchg   DWORD PTR [rax+0x1c90cc6b],esi
   14001116d:	mov    WORD PTR [rax],es
   14001116f:	push   rdx
   140011170:	rex.X mov bl,dl
   140011173:	movsxd edi,DWORD PTR [rbx-0x5a]
   140011176:	jo     0x1400111e2
   140011178:	xchg   edi,eax
   140011179:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001117a:	ds push rdi
   14001117c:	rex.XB add r10b,bpl
   14001117f:	in     eax,dx
   140011180:	(bad)  
   140011181:	and    eax,0xee2d9b12
   140011186:	gs xor eax,0x5cfa18fa
   14001118c:	xchg   esi,eax
   14001118d:	sbb    BYTE PTR [rdx-0x1af1a2ea],ah
   140011193:	jmp    0x170054177
   140011198:	and    al,0x2
   14001119a:	and    eax,DWORD PTR [rax-0xa6c2f2c]
   1400111a0:	addr32 xor esp,ebx
   1400111a3:	(bad)  
   1400111a4:	leave  
   1400111a5:	cmp    DWORD PTR [rbx+rdi*8+0xf],esi
   1400111a9:	and    BYTE PTR [rsi],dh
   1400111ab:	sbb    DWORD PTR [rbx+rsi*8],edi
   1400111ae:	sahf   
   1400111af:	(bad)  
   1400111b0:	push   rbp
   1400111b1:	(bad)  
   1400111b2:	ret    
   1400111b3:	shr    DWORD PTR [rax],1
   1400111b5:	xor    BYTE PTR [rcx+rbp*4+0x8],ah
   1400111b9:	sbb    BYTE PTR [rbp+riz*4+0x1f469441],ah
   1400111c0:	mov    edi,0x7130025a
   1400111c5:	sbb    BYTE PTR [rcx],al
   1400111c7:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400111c8:	add    al,0x72
   1400111ca:	mov    cl,0x8d
   1400111cc:	xchg   esi,eax
   1400111cd:	and    eax,0x958c5cc0
   1400111d2:	cdq    
   1400111d3:	retf   
   1400111d4:	cld    
   1400111d5:	add    BYTE PTR [rbx+0x43],al
   1400111d8:	add    ah,BYTE PTR [rdi-0x4c150157]
   1400111de:	ret    0x714a
   1400111e1:	adc    al,0xf7
   1400111e3:	mov    bl,0x8f
   1400111e5:	adc    eax,DWORD PTR [rax]
   1400111e7:	loope  0x140011202
   1400111e9:	sbb    al,0xc6
   1400111eb:	jge    0x14001118f
   1400111ed:	jmp    0x13d290094
   1400111f2:	(bad)  
   1400111f3:	jle    0x140011218
   1400111f5:	ret    
   1400111f6:	mov    ebx,0x8480230c
   1400111fb:	shl    BYTE PTR [rax-0x20],0x3e
   1400111ff:	cmc    
   140011200:	ds scas eax,DWORD PTR es:[rdi]
   140011202:	cmp    bh,bh
   140011204:	mov    dl,0xf5
   140011206:	rex.RXB mov BYTE PTR [r8-0x4e81e2a4],r12b
   14001120d:	rex.RX mov ebp,0x667b4e8
   140011213:	jnp    0x1400111ff
   140011215:	cdq    
   140011216:	jmp    0x1400111fb
   140011218:	repnz hlt 
   14001121a:	(bad)  
   14001121b:	or     al,0x28
   14001121d:	mov    WORD PTR [rax],es
   14001121f:	xchg   edx,eax
   140011220:	(bad)  
   140011221:	out    dx,eax
   140011222:	cmp    cl,ch
   140011224:	pop    rcx
   140011225:	packsswb mm5,QWORD PTR [rdi-0x6842ffc5]
   14001122c:	jo     0x1400111ae
   14001122e:	ret    
   14001122f:	rex.RX pop rdi
   140011231:	(bad)  
   140011232:	(bad)  
   140011233:	imul   edi,edi,0x41
   140011236:	mov    WORD PTR ss:[rip+0x3301efd6],fs        # 0x173030213
   14001123d:	xchg   edi,eax
   14001123e:	or     eax,0x6abe885
   140011243:	ins    BYTE PTR es:[rdi],dx
   140011244:	or     al,0x91
   140011246:	xor    BYTE PTR [rax+rax*1+0x76144292],cl
   14001124d:	push   rbx
   14001124e:	push   rsp
   14001124f:	(bad)  
   140011250:	jrcxz  0x1400112ae
   140011252:	cs rex mov esp,0xf91a3c80
   140011259:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001125a:	(bad)  
   14001125b:	pop    rsi
   14001125c:	add    eax,ebx
   14001125e:	or     DWORD PTR [rdx-0x9],0xaafd3c5e
   140011265:	sub    DWORD PTR [rbx+0xe],edi
   140011268:	mov    bl,0x2
   14001126a:	mov    WORD PTR [rdx+0x8],ss
   14001126d:	(bad)  
   14001126e:	add    edi,DWORD PTR [rip+0x246805a]        # 0x1424792ce
   140011274:	mov    edx,eax
   140011276:	or     BYTE PTR [rax],ah
   140011278:	and    eax,0x9539a7c4
   14001127d:	push   rbp
   14001127e:	jl     0x140011249
   140011280:	add    DWORD PTR [rdx],esi
   140011282:	fsub   st,st(7)
   140011284:	sbb    dh,BYTE PTR [rsi+0x63fa52e7]
   14001128a:	rex.WRB add r14b,r14b
   14001128d:	int    0x1
   14001128f:	rex.R xchg esi,eax
   140011291:	(bad)  
   140011292:	je     0x140011296
   140011294:	sub    ah,BYTE PTR [rdx+0x5a004c5e]
   14001129a:	jmp    0x140011314
   14001129c:	clc    
   14001129d:	in     eax,0xf9
   14001129f:	xchg   ebx,eax
   1400112a0:	call   0x18f3717fa
   1400112a5:	(bad)  
   1400112a6:	add    BYTE PTR [rax+0x4],ah
   1400112a9:	nop
   1400112aa:	adc    al,0x3c
   1400112ac:	pop    rax
   1400112ad:	lea    edi,[rcx-0x4608af15]
   1400112b3:	sahf   
   1400112b4:	out    0xac,al
   1400112b6:	ins    BYTE PTR es:[rdi],dx
   1400112b7:	loopne 0x14001127a
   1400112b9:	and    BYTE PTR [rbp+0x11],bl
   1400112bc:	(bad)  
   1400112bd:	jne    0x1400112c1
   1400112bf:	rex.RX pop rdi
   1400112c1:	ret    
   1400112c2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400112c3:	leave  
   1400112c4:	rcl    eax,0xb
   1400112c7:	pushf  
   1400112c8:	mov    ebx,0x67016ca
   1400112cd:	out    0x1e,eax
   1400112cf:	lahf   
   1400112d0:	(bad)  
   1400112d1:	repnz icebp 
   1400112d3:	(bad)  
   1400112d4:	ds repz cmc 
   1400112d7:	mov    bh,0xbf
   1400112d9:	(bad)  
   1400112da:	adc    DWORD PTR [rbx],eax
   1400112dc:	or     DWORD PTR [rdx-0x47cb4ee0],eax
   1400112e2:	test   eax,0x230c2702
   1400112e7:	adc    BYTE PTR [rax+rdx*1+0x50310229],0x1a
   1400112ef:	je     0x14001128f
   1400112f1:	mov    eax,DWORD PTR [rdi]
   1400112f3:	nop
   1400112f4:	ja     0x1400112b6
   1400112f6:	jns    0x140011350
   1400112f8:	(bad)  
   1400112f9:	sbb    bl,BYTE PTR [rdx+0x1e22e79]
   1400112ff:	shr    BYTE PTR [rbx+0x10c36bed],0x73
   140011306:	and    al,0x23
   140011308:	cs ud0 edx,ebx
   14001130c:	rex.RXB (bad) 
   14001130e:	mov    esp,0xa637e0f4
   140011313:	pop    QWORD PTR [rdx+0x54]
   140011316:	adc    DWORD PTR [rsi+0x20],0x28ab40ca
   14001131d:	rex.WB sar BYTE PTR [r8+rax*4-0x6ffb9e3c],0x14
   140011326:	(bad)  
   140011327:	and    BYTE PTR [rdi],cl
   140011329:	xor    BYTE PTR [rax],0xf
   14001132c:	add    al,al
   14001132e:	sti    
   14001132f:	test   al,0xf
   140011331:	rex (bad) 
   140011333:	jp     0x140011376
   140011335:	icebp  
   140011336:	out    0xdf,al
   140011338:	mov    edi,DWORD PTR [rip+0x60a6cbcf]        # 0x1a0a7df0d
   14001133e:	jb     0x140011330
   140011340:	lock push rcx
   140011342:	adc    dl,BYTE PTR [rax-0x6cdc3f10]
   140011348:	xchg   edi,edi
   14001134a:	in     al,dx
   14001134b:	fbld   TBYTE PTR [rdi+0x7e8c418f]
   140011351:	or     DWORD PTR [rdx],esp
   140011353:	or     BYTE PTR [rdx+0x1680210c],bh
   140011359:	rex.WR adc rax,0x4602078
   14001135f:	nop
   140011360:	adc    ah,bh
   140011362:	(bad)  
   140011363:	pop    rsp
   140011364:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011365:	in     al,dx
   140011366:	adc    edi,ecx
   140011368:	jmp    0x1400113c8
   14001136a:	in     al,dx
   14001136b:	push   rax
   14001136c:	xor    bh,cl
   14001136e:	jns    0x1400113d1
   140011370:	(bad)  
   140011371:	or     al,0x8f
   140011373:	and    dl,BYTE PTR [rip+0x55470150]        # 0x1954814c9
   140011379:	add    BYTE PTR [rdx],al
   14001137b:	xor    DWORD PTR [rbx-0x6a],0x3c
   14001137f:	and    dl,BYTE PTR [rcx]
   140011381:	(bad)  
   140011382:	js     0x1400113f8
   140011384:	repnz in eax,0xcf
   140011387:	sbb    eax,0x721c7738
   14001138c:	(bad)  
   14001138d:	(bad)  
   14001138e:	(bad)  
   14001138f:	mov    ch,0x0
   140011391:	and    DWORD PTR [rcx-0x7fec8beb],eax
   140011397:	test   DWORD PTR [rax],eax
   140011399:	or     ebx,eax
   14001139b:	mov    BYTE PTR [rcx+0x5e6f8213],0x40
   1400113a2:	jnp    0x14001135e
   1400113a4:	shl    DWORD PTR [rbx],1
   1400113a6:	and    DWORD PTR [rdi],0xffffffb3
   1400113a9:	rex sbb eax,0xe24f7c31
   1400113af:	add    DWORD PTR [rax+0x2d],edi
   1400113b2:	add    eax,0xf7c881c2
   1400113b7:	mov    ebp,0xd2620cc0
   1400113bc:	mov    al,0x41
   1400113be:	mov    esp,0x9e1e0781
   1400113c3:	cld    
   1400113c4:	mul    bh
   1400113c6:	(bad)  
   1400113c7:	pushf  
   1400113c8:	cmp    eax,DWORD PTR [rcx]
   1400113ca:	xor    esp,esi
   1400113cc:	and    eax,0xa3cfe188
   1400113d1:	and    al,0x80
   1400113d3:	push   0x8
   1400113d5:	adc    BYTE PTR [rax+0x412048c8],bl
   1400113db:	cwde   
   1400113dc:	(bad)  
   1400113dd:	nop
   1400113de:	adc    BYTE PTR [rax+0x5726361d],bl
   1400113e4:	add    BYTE PTR [rax],dl
   1400113e6:	push   0xfffffffffffffffb
   1400113e8:	mov    bh,0x95
   1400113ea:	jmp    QWORD PTR [rax+0x35ec007d]
   1400113f0:	fisub  WORD PTR [rdi]
   1400113f2:	icebp  
   1400113f3:	(bad)  
   1400113f4:	loopne 0x14001145b
   1400113f6:	(bad)  
   1400113f7:	push   QWORD PTR [edx]
   1400113fa:	movabs al,ds:0x73c8abc5cfb18948
   140011403:	jl     0x1400113f7
   140011405:	rcr    DWORD PTR [rcx-0x1f1d01a9],1
   14001140b:	stc    
   14001140c:	xlat   BYTE PTR ds:[rbx]
   14001140d:	and    esi,eax
   14001140f:	fild   WORD PTR [rax-0x415301e8]
   140011415:	movabs eax,cs:0x89ffb9a84083fd3c
   14001141f:	ret    
   140011420:	or     BYTE PTR [rax],ah
   140011422:	sub    DWORD PTR [rax-0x50],edi
   140011425:	(bad)  
   140011426:	ss es push rdi
   140011429:	rol    BYTE PTR [rax+rbp*4-0x11],0xdf
   14001142e:	stos   BYTE PTR es:[rdi],al
   14001142f:	out    dx,eax
   140011430:	stos   BYTE PTR es:[rdi],al
   140011431:	xor    edx,DWORD PTR [rax]
   140011433:	retf   0xbe79
   140011436:	add    DWORD PTR [rdx-0x16],0xffffffa7
   14001143a:	fdivr  st,st(4)
   14001143c:	or     edx,DWORD PTR [rax-0x1c]
   14001143f:	lock adc DWORD PTR [rcx+0xe516ce],edx
   140011446:	adc    edi,DWORD PTR [rsi]
   140011448:	stc    
   140011449:	fdiv   st,st(4)
   14001144b:	imul   edi,DWORD PTR [rdi+0x7f],0x68
   14001144f:	not    BYTE PTR [rsp+rax*2]
   140011452:	(bad)  
   140011453:	cmp    edi,DWORD PTR [rax+0x43280bfe]
   140011459:	adc    BYTE PTR [rip+0xb05af74],0xbd        # 0x14b06c3d4
   140011460:	add    DWORD PTR [rsi-0x4],esp
   140011463:	or     ebx,eax
   140011465:	or     BYTE PTR [rax],ah
   140011467:	xor    eax,0x6ee8b490
   14001146c:	pushf  
   14001146d:	imul   eax,DWORD PTR [rax],0x3f5fa8f0
   140011473:	sub    ch,BYTE PTR [rbp-0x44]
   140011476:	add    dl,al
   140011478:	rex.X push rax
   14001147a:	out    dx,eax
   14001147b:	mov    ecx,0xaae80694
   140011480:	sbb    al,0x44
   140011482:	pop    rbp
   140011483:	test   ah,al
   140011485:	(bad)  
   140011486:	(bad)  
   140011487:	movabs ds:0x595e5fed7eab73c4,eax
   140011490:	pushf  
   140011491:	test   BYTE PTR [rax-0x69ff7e0b],bh
   140011497:	movabs ds:0xf8d8ff5d8c05ec2b,eax
   1400114a0:	int    0xf0
   1400114a2:	adc    eax,DWORD PTR [rbp+0x29200e5]
   1400114a8:	(bad)  
   1400114a9:	gs jnp 0x1400114dc
   1400114ac:	mov    al,0xf1
   1400114ae:	out    0x32,al
   1400114b0:	fisub  DWORD PTR [rdi-0x6a]
   1400114b3:	sub    DWORD PTR [rsi],0xb9025f5d
   1400114b9:	lods   al,BYTE PTR ds:[rsi]
   1400114ba:	mov    eax,0x540ef43f
   1400114bf:	scas   eax,DWORD PTR es:[rdi]
   1400114c0:	movabs ds:0xfc791a11b18197ab,al
   1400114c9:	mov    bl,0x77
   1400114cb:	fistp  QWORD PTR [rcx-0x13]
   1400114ce:	scas   al,BYTE PTR es:[rdi]
   1400114cf:	push   rcx
   1400114d0:	(bad)  
   1400114d1:	sbb    cl,bh
   1400114d3:	cmp    cl,dl
   1400114d5:	rex.RB movabs al,ds:0x175bf27946dffea1
   1400114df:	loopne 0x140011461
   1400114e1:	ror    BYTE PTR [rax],0x20
   1400114e4:	sub    DWORD PTR [rax-0x9],ebp
   1400114e7:	(bad)  
   1400114e8:	xchg   ecx,ecx
   1400114ea:	(bad)  
   1400114eb:	(bad)  
   1400114ec:	jge    0x140011490
   1400114ee:	add    DWORD PTR [rsi],eax
   1400114f0:	sar    DWORD PTR [rcx-0x1cf01a38],0xc1
   1400114f7:	fcmovu st,st(1)
   1400114f9:	rex.XB
   1400114fa:	rex.R cmp eax,0xec408817
   140011500:	sar    ecx,0x6
   140011503:	rcr    BYTE PTR [rsi],0xef
   140011506:	fnstsw WORD PTR [rbx+0x7f33c77b]
   14001150c:	not    ecx
   14001150e:	pop    rdi
   14001150f:	fidiv  DWORD PTR [rdi-0x33]
   140011512:	mov    fs,WORD PTR [rcx-0x6c]
   140011515:	leave  
   140011516:	mov    ebp,0x35d3ecd0
   14001151b:	(bad)  
   14001151c:	clc    
   14001151d:	mov    ?,edi
   14001151f:	fiadd  DWORD PTR [rsi+0x11837ff]
   140011525:	and    al,0x4
   140011527:	xchg   BYTE PTR [rsi-0x45b74506],dh
   14001152d:	rex.WXB iretq 
   14001152f:	(bad)  
   140011531:	clc    
   140011532:	(bad)  
   140011533:	fidivr WORD PTR [rsi+0x1f]
   140011536:	push   0x7f
   140011538:	scas   al,BYTE PTR es:[rdi]
   140011539:	rex.W or sil,sil
   14001153c:	mov    ebx,0x30726118
   140011541:	(bad)  
   140011542:	outs   dx,DWORD PTR ds:[rsi]
   140011543:	xor    al,0x71
   140011545:	std    
   140011546:	clc    
   140011547:	mov    ?,WORD PTR [rcx-0x210e8191]
   14001154d:	fistp  QWORD PTR [rdx-0x2462251f]
   140011553:	and    dl,cl
   140011555:	(bad)  
   140011556:	rex.B std 
   140011558:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011559:	sub    al,BYTE PTR [rdx]
   14001155b:	(bad)  
   14001155c:	ds scas eax,DWORD PTR es:[rdi]
   14001155e:	xchg   BYTE PTR [rcx+riz*2],al
   140011561:	add    al,0x90
   140011563:	adc    BYTE PTR [rax-0x55fed2ce],cl
   140011569:	pop    rbx
   14001156a:	ucomiss xmm7,xmm2
   14001156d:	add    DWORD PTR [rax+0x57],ecx
   140011570:	(bad)  
   140011571:	xchg   ebx,eax
   140011572:	retf   
   140011573:	rex (bad) 
   140011575:	adc    eax,0x12043dd3
   14001157a:	int    0xd0
   14001157c:	ror    BYTE PTR [rcx],0xb1
   14001157f:	sub    bh,BYTE PTR [rax-0x1f08df99]
   140011585:	fsub   QWORD PTR [rbx-0x7e61d8b]
   14001158b:	in     eax,0x19
   14001158d:	in     al,dx
   14001158e:	fbstp  TBYTE PTR [rbx]
   140011590:	mov    edx,0x7fcfa9e7
   140011595:	in     al,0x43
   140011597:	(bad)  
   140011598:	mov    al,0x77
   14001159a:	ins    BYTE PTR es:[rdi],dx
   14001159b:	cmovp  edx,DWORD PTR [rcx]
   14001159e:	shl    BYTE PTR [rax+0x741c04],1
   1400115a4:	movsxd esi,DWORD PTR [rip+0x30c24320]        # 0x170c358ca
   1400115aa:	add    cl,BYTE PTR [rax+0x8]
   1400115ad:	or     al,0x39
   1400115af:	fdivr  QWORD PTR [rip+0x595e8cc9]        # 0x1995fa27e
   1400115b5:	adc    BYTE PTR [rdi-0x29],0xdf
   1400115b9:	cmp    DWORD PTR [rip+0x60e51201],edx        # 0x1a0e627c0
   1400115bf:	jb     0x140011565
   1400115c1:	rex.RX lahf 
   1400115c3:	add    edx,DWORD PTR [rbx+rax*4+0x4a000262]
   1400115ca:	and    eax,0xd6f86621
   1400115cf:	sub    dl,BYTE PTR [rsi+0x5f]
   1400115d2:	std    
   1400115d3:	cmp    bh,BYTE PTR [rbx+riz*2+0x16]
   1400115d7:	jnp    0x1400115a0
   1400115d9:	rex.RX (bad) 
   1400115db:	paddd  mm1,mm5
   1400115de:	rex.RXB
   1400115df:	test   BYTE PTR ds:[rbx+0x5ed76fb],0xb0
   1400115e7:	add    esp,ebp
   1400115e9:	rex.WRX and BYTE PTR [rax+0x114fd809],0x18
   1400115f1:	xor    BYTE PTR [rdx+0x48],al
   1400115f4:	(bad)  
   1400115f5:	rex.RX add BYTE PTR [rcx],r13b
   1400115f8:	sbb    DWORD PTR [rsi+riz*1-0x7451aaff],0x11201c34
   140011603:	(bad)  
   140011604:	and    al,0x97
   140011606:	leave  
   140011607:	add    BYTE PTR [rax+0x57c624cb],dl
   14001160d:	rcr    esi,0x32
   140011610:	out    dx,al
   140011611:	not    ecx
   140011613:	xchg   ebp,eax
   140011614:	(bad)  
   140011615:	jrcxz  0x1400115db
   140011617:	pushf  
   140011618:	out    0x60,eax
   14001161a:	xor    BYTE PTR [rdx],bh
   14001161c:	jmp    0x14001166b
   14001161e:	xor    al,0x5f
   140011620:	jge    0x140011626
   140011622:	popf   
   140011623:	out    0x5,al
   140011625:	mov    edi,gs
   140011627:	fdiv   QWORD PTR [rdx-0x23]
   14001162a:	adc    edi,DWORD PTR [rdi-0x3]
   14001162d:	loope  0x14001166e
   14001162f:	jle    0x140011620
   140011631:	(bad)  
   140011632:	(bad)  
   140011634:	ror    DWORD PTR [rbp+0x2],1
   140011637:	and    DWORD PTR [rax+rcx*1],esi
   14001163a:	(bad)  
   14001163b:	sbb    DWORD PTR [rcx],0x230c27d
   140011641:	rex.W or cl,BYTE PTR [rsi]
   140011644:	test   al,0xe9
   140011646:	imul   ebx,DWORD PTR [rdi-0x30af5d17],0xfd375ce0
   140011650:	mov    dl,0xcc
   140011652:	call   QWORD PTR [rbx]
   140011654:	cmp    DWORD PTR [rip+0xffffffffb6a20778],esi        # 0xf6a31dd2
   14001165a:	sub    al,0x13
   14001165c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001165d:	ficom  WORD PTR [rax-0x60]
   140011660:	mov    al,0xdc
   140011662:	and    BYTE PTR [rsi],dh
   140011664:	(bad)  
   140011665:	sbb    DWORD PTR [rcx-0x55],edi
   140011668:	mov    ebp,edx
   14001166a:	outs   dx,DWORD PTR ds:[rsi]
   14001166b:	jg     0x14001167a
   14001166d:	jns    0x1400116e2
   14001166f:	(bad)  
   140011670:	xlat   BYTE PTR ds:[rbx]
   140011671:	mov    gs,WORD PTR [rbp-0x43]
   140011674:	out    dx,al
   140011675:	mov    DWORD PTR [rdi-0x64411844],edi
   14001167b:	scas   al,BYTE PTR es:[rdi]
   14001167c:	fistp  QWORD PTR [rbp+0x3d]
   14001167f:	sbb    BYTE PTR [rbp+0x56204928],0x5
   140011686:	ss (bad) 
   140011688:	and    BYTE PTR [rcx+0x18],ah
   14001168b:	add    DWORD PTR [rsp+rax*1-0x1016e29],esp
   140011692:	mov    WORD PTR [rcx],es
   140011694:	(bad)  
   140011695:	cli    
   140011696:	sbb    ch,BYTE PTR [rcx+rdi*1-0x5ab7099c]
   14001169d:	rcr    BYTE PTR [rsp+rbx*2],0xa6
   1400116a1:	stos   BYTE PTR es:[rdi],al
   1400116a2:	frstor [rdi+rsi*8+0x1cb0a64b]
   1400116a9:	add    DWORD PTR [rsi-0x9],edx
   1400116ac:	lahf   
   1400116ad:	loopne 0x14001168f
   1400116af:	cmp    edi,DWORD PTR [rcx-0x6fcffa0c]
   1400116b5:	mov    bh,0xd6
   1400116b7:	mov    cl,0x72
   1400116b9:	clc    
   1400116ba:	pop    rdi
   1400116bb:	xor    esp,esi
   1400116bd:	sahf   
   1400116be:	pop    rbx
   1400116bf:	xor    BYTE PTR [rsi],bh
   1400116c1:	mov    dh,0x6d
   1400116c3:	out    dx,eax
   1400116c4:	(bad)  
   1400116c5:	dec    cl
   1400116c7:	pop    rbp
   1400116c8:	mov    edi,0x51802107
   1400116cd:	xchg   esp,eax
   1400116ce:	movabs eax,ds:0x2008c2090c049540
   1400116d7:	and    DWORD PTR [rax+0x650dc3ab],edx
   1400116dd:	movabs al,ds:0x831c0235beed939a
   1400116e6:	sbb    eax,0xa750bec9
   1400116eb:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400116ec:	(bad)  
   1400116ed:	imul   edi,DWORD PTR [rsi],0x0
   1400116f0:	(bad)  
   1400116f1:	popf   
   1400116f2:	vpunpckhbw xmm0,xmm10,XMMWORD PTR [rax+0x242dd08]
   1400116fa:	rex.RB push r10
   1400116fc:	rex
   1400116fd:	addr32 add al,dl
   140011700:	jb     0x140011752
   140011702:	div    al
   140011704:	in     eax,dx
   140011705:	xor    eax,0xbdd2ff9c
   14001170a:	enter  0xe71b,0x51
   14001170e:	iret   
   14001170f:	push   0x10ed801b
   140011714:	add    bl,al
   140011716:	(bad)  
   140011717:	jb     0x140011758
   140011719:	(bad)  
   14001171a:	pop    rsp
   14001171b:	adc    eax,0x23082430
   140011720:	adc    ah,0x10
   140011723:	(bad)  
   140011724:	(bad)  
   140011725:	xor    eax,0x46502000
   14001172a:	(bad)  
   14001172b:	out    dx,eax
   14001172c:	loope  0x140011762
   14001172e:	(bad)  
   14001172f:	add    BYTE PTR [rax+0x73],al
   140011732:	add    cl,BYTE PTR [rsi]
   140011734:	in     al,0x6a
   140011736:	push   0xffffffffeb479e2f
   14001173b:	in     al,0x82
   14001173d:	and    al,0x2
   14001173f:	rex.XB pop r9
   140011741:	lahf   
   140011742:	cmp    al,0x40
   140011744:	sbb    eax,0x80381cad
   140011749:	pop    rbp
   14001174a:	pop    rcx
   14001174b:	fdivr  st(7),st
   14001174d:	stos   BYTE PTR es:[rdi],al
   14001174e:	and    al,0xac
   140011750:	add    eax,DWORD PTR [rsi+0x6b]
   140011753:	punpcklwd mm7,DWORD PTR [ebp-0xa]
   140011758:	ins    BYTE PTR es:[rdi],dx
   140011759:	(bad)  
   14001175a:	jno    0x14001175b
   14001175c:	jrcxz  0x1400117c2
   14001175e:	(bad)  
   14001175f:	test   al,0x8
   140011761:	push   rsp
   140011762:	xlat   BYTE PTR ds:[rbx]
   140011763:	test   DWORD PTR [rbx],eax
   140011765:	rex.RX or r9b,cl
   140011768:	rcr    BYTE PTR [rdx-0x7f],0x53
   14001176c:	(bad)  
   14001176d:	add    ebp,DWORD PTR [rax+0x37b93906]
   140011773:	and    al,0x4
   140011775:	loopne 0x140011797
   140011777:	(bad)  
   140011778:	adc    DWORD PTR [rdi+rdi*1-0xc],eax
   14001177c:	and    al,0x7
   14001177e:	add    BYTE PTR [rdx],bl
   140011780:	xchg   esi,eax
   140011781:	mov    bh,0xd6
   140011783:	mov    esi,0x184000df
   140011788:	stc    
   140011789:	loope  0x1400117f8
   14001178b:	sub    dh,al
   14001178d:	(bad)  
   14001178e:	mov    esp,DWORD PTR [rcx+riz*1]
   140011791:	jmp    0x18aa788b6
   140011796:	rex.X movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011798:	stos   BYTE PTR es:[rdi],al
   140011799:	adc    BYTE PTR [rdx],bh
   14001179b:	(bad)  
   14001179c:	fsubr  QWORD PTR [rdx-0x5f]
   14001179f:	jns    0x14001179d
   1400117a1:	pop    rcx
   1400117a2:	xchg   esi,ebp
   1400117a4:	jb     0x140011806
   1400117a6:	rex.W add dl,BYTE PTR [rsi-0x1d]
   1400117aa:	jg     0x1400117ef
   1400117ac:	(bad)  
   1400117ad:	xor    BYTE PTR [rdx],al
   1400117af:	or     QWORD PTR [rsi],rbp
   1400117b2:	add    ebp,DWORD PTR [rdx+0xe]
   1400117b5:	in     al,0x18
   1400117b7:	add    BYTE PTR [rbx],0xe7
   1400117ba:	or     al,0x22
   1400117bc:	xchg   ah,dl
   1400117be:	call   FWORD PTR [rbp-0x27]
   1400117c1:	loope  0x1400117aa
   1400117c3:	(bad)  
   1400117c4:	fwait
   1400117c5:	movabs al,ds:0xb008b63d58cc809a
   1400117ce:	(bad)  
   1400117cf:	enter  0x6c8f,0x2f
   1400117d3:	jae    0x1400117d5
   1400117d5:	movabs eax,ds:0x716cc5f311ac2077
   1400117de:	(bad)  
   1400117df:	test   eax,0xcca13330
   1400117e4:	inc    bh
   1400117e6:	jnp    0x1400117e9
   1400117e8:	add    DWORD PTR [rdi],0x10
   1400117eb:	mov    esi,0x26097599
   1400117f0:	(bad)  
   1400117f1:	and    eax,DWORD PTR [rax+0x1000e094]
   1400117f7:	sbb    DWORD PTR [rip+0xffffffff994019c0],0x3        # 0xd94131be
   1400117fe:	mov    bh,0x3d
   140011800:	cwde   
   140011801:	rex.WB
   140011802:	rex.WXB jp 0x1400117ef
   140011805:	shr    BYTE PTR [rbx],cl
   140011807:	sub    bl,dl
   140011809:	mov    al,0x40
   14001180b:	xor    edi,esi
   14001180d:	stos   DWORD PTR es:[rdi],eax
   14001180e:	(bad)  
   14001180f:	xchg   esi,eax
   140011810:	add    BYTE PTR [rsi-0x74],ah
   140011813:	mov    esp,0xd780147f
   140011818:	in     eax,0x41
   14001181a:	repnz xor eax,0x209e61cc
   140011820:	jl     0x1400117df
   140011822:	int3   
   140011823:	or     DWORD PTR [rax-0x62],esi
   140011826:	rex.XB push r15
   140011828:	jbe    0x12cd678e3
   14001182e:	(bad)  
   14001182f:	(bad)  
   140011830:	(bad)  
   140011831:	mov    dl,0xb0
   140011834:	sbb    al,0x40
   140011836:	rex.X and spl,dl
   140011839:	rex jne 0x140011885
   14001183c:	add    bh,BYTE PTR [rdx-0x18cba8df]
   140011842:	xor    ch,bl
   140011844:	hlt    
   140011845:	(bad)  
   140011846:	hlt    
   140011847:	(bad)  
   140011848:	(bad)  
   140011849:	jno    0x1400117e8
   14001184b:	mov    esp,ss
   14001184d:	repnz imul ebx,DWORD PTR [rdx-0xf],0xffffffcf
   140011852:	or     BYTE PTR [rbx+0x3b581bc7],ch
   140011858:	cs (bad) 
   14001185a:	add    ah,ah
   14001185c:	push   rsp
   14001185d:	cmp    BYTE PTR [rax+rdi*2],dh
   140011860:	add    bl,BYTE PTR [rdx+0x42]
   140011863:	xchg   esp,eax
   140011864:	outs   dx,BYTE PTR ds:[rsi]
   140011865:	(bad)  
   140011866:	(bad)  
   140011867:	setb   BYTE PTR [rbp+0x3]
   14001186b:	repnz in eax,dx
   14001186d:	pop    rbp
   14001186e:	lahf   
   14001186f:	rex.WXB movabs r15,0xc8129007985521a9
   140011879:	rex.WXB sahf 
   14001187b:	(bad)  
   14001187c:	mov    ah,0x0
   14001187e:	(bad)  
   14001187f:	pop    rsp
   140011880:	(bad)  
   140011881:	in     al,dx
   140011882:	rex.RB jb 0x140011844
   140011885:	sbb    BYTE PTR [rdx],cl
   140011887:	and    al,0x50
   140011889:	cmp    eax,0x4ce2de2b
   14001188e:	out    dx,al
   14001188f:	movsxd eax,DWORD PTR [rdx]
   140011891:	push   rsi
   140011892:	mov    gs,WORD PTR [rsi]
   140011894:	and    bl,bl
   140011896:	jge    0x14001184d
   140011898:	(bad)  
   140011899:	loope  0x1400118e9
   14001189b:	out    dx,eax
   14001189c:	jno    0x14001188e
   14001189e:	ret    0x1026
   1400118a1:	pop    QWORD PTR [rax+0x3c]
   1400118a4:	or     ah,BYTE PTR [rsi+0x7]
   1400118a7:	iret   
   1400118a8:	cs cmp al,0xbd
   1400118ab:	pop    rdx
   1400118ac:	div    DWORD PTR [rdi]
   1400118ae:	jrcxz  0x1400118ff
   1400118b0:	sbb    al,0x46
   1400118b2:	add    BYTE PTR [rcx],ch
   1400118b4:	xor    DWORD PTR [rbx+rax*8-0xf1ebcd1],0x20cee9cb
   1400118bf:	repnz shl BYTE PTR [rbx],cl
   1400118c2:	and    BYTE PTR [rbx+0x3e],dl
   1400118c5:	add    BYTE PTR [rax+0x179a6ac],al
   1400118cb:	rex.RXB
   1400118cc:	scas   al,BYTE PTR es:[rdi]
   1400118ce:	jp     0x1400118d0
   1400118d0:	(bad)  
   1400118d1:	adc    eax,0xabcd4eb4
   1400118d6:	or     BYTE PTR [rax-0x48],0xb4
   1400118da:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400118db:	cmp    BYTE PTR [rax+rdx*1],ah
   1400118de:	jge    0x1400118d0
   1400118e0:	and    al,0x38
   1400118e2:	mov    esp,0x66fbbb17
   1400118e7:	clc    
   1400118e8:	add    eax,DWORD PTR [rdx]
   1400118ea:	and    eax,DWORD PTR [rax-0x569fbf7c]
   1400118f0:	add    ah,ah
   1400118f2:	push   rdx
   1400118f3:	repz addr32 xchg ebp,eax
   1400118f6:	(bad)  
   1400118f7:	out    dx,al
   1400118f8:	movabs r13,0xc00fd265abb7d4a9
   140011902:	lods   al,BYTE PTR ds:[rsi]
   140011903:	test   eax,0x7c770200
   140011908:	movabs eax,ds:0x53039c9c5aba4819
   140011911:	push   rsi
   140011912:	in     al,dx
   140011913:	adc    esp,DWORD PTR [rbp+rdx*1+0x12]
   140011917:	or     DWORD PTR [rdx],eax
   140011919:	rex.XB
   14001191a:	rex.RB jns 0x1400118ce
   14001191d:	fcomi  st,st(0)
   14001191f:	lea    eax,[rsi+rax*1]
   140011922:	add    BYTE PTR [rsi+0x1a0a4803],dl
   140011928:	mov    bh,0x67
   14001192a:	and    al,0x25
   14001192c:	ror    DWORD PTR [rsi+rbp*4+0x32],0x7
   140011931:	sar    BYTE PTR [rbp+0x6f],1
   140011934:	push   rsi
   140011935:	xchg   edi,eax
   140011936:	and    al,0x1
   140011938:	gs (bad) 
   14001193a:	test   al,0x87
   14001193c:	cmp    al,0x80
   14001193e:	lods   al,BYTE PTR ds:[rsi]
   14001193f:	or     ah,BYTE PTR [rbx+0xf]
   140011942:	mov    ecx,edi
   140011944:	mov    ch,0xe6
   140011946:	(bad)  
   140011947:	(bad)
   14001194a:	rex.B
   14001194b:	sub    BYTE PTR [r12+rbx*1+0x3bd06348],cl
   140011953:	cld    
   140011954:	imul   ebx,DWORD PTR [rdx],0xffffffde
   140011957:	xor    DWORD PTR [rax],ebx
   140011959:	add    DWORD PTR [rsi+rdi*2-0x58],ebp
   14001195d:	rex.WRXB
   14001195e:	rex.WRX sub al,0xcd
   140011961:	cmp    al,0xa2
   140011963:	(bad)  
   140011964:	rex.B scas al,BYTE PTR es:[rdi]
   140011966:	rex.WR fdivr QWORD PTR [rcx-0x21]
   14001196a:	(bad)  
   14001196b:	cmp    BYTE PTR [rsi+0x3485124c],ah
   140011971:	rex.R (bad) 
   140011973:	xlat   BYTE PTR ds:[rbx]
   140011974:	jne    0x1400119a0
   140011976:	jp     0x140011981
   140011978:	cwde   
   140011979:	sbb    DWORD PTR [rsi+0x42e04842],ecx
   14001197f:	push   rdi
   140011980:	mov    al,0x96
   140011982:	add    ah,BYTE PTR [rip+0x2add601c]        # 0x16ade79a4
   140011988:	(bad)  
   140011989:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001198a:	scas   al,BYTE PTR es:[rdi]
   14001198b:	cmp    BYTE PTR [rdi+0x2e],dl
   14001198e:	rex.XB loop 0x1400119c1
   140011991:	add    bl,al
   140011993:	mov    esp,0x8474d688
   140011998:	(bad)  
   140011999:	mov    esp,0xe4c8fc0c
   14001199e:	lahf   
   14001199f:	(bad)  
   1400119a0:	gs xor dl,ch
   1400119a3:	push   rdi
   1400119a4:	call   0x13e6e2e29
   1400119a9:	xchg   edx,eax
   1400119aa:	and    eax,0x213a6acc
   1400119af:	cwde   
   1400119b0:	test   DWORD PTR [rcx-0x1f],edx
   1400119b3:	nop
   1400119b4:	(bad)  
   1400119b5:	and    BYTE PTR [rip+0xffffffff89b0c423],cl        # 0xc9b1ddde
   1400119bb:	rex.WX scas rax,QWORD PTR es:[rdi]
   1400119bd:	or     BYTE PTR [rcx-0x7f637420],0x9e
   1400119c4:	(bad)  
   1400119c5:	push   rsp
   1400119c6:	sbb    BYTE PTR [rbp+rbp*8+0x58301800],bh
   1400119cd:	(bad)  
   1400119ce:	(bad)  
   1400119cf:	jae    0x1400119f3
   1400119d1:	in     al,0xf8
   1400119d3:	sbb    BYTE PTR [rax],al
   1400119d5:	mov    bh,0x36
   1400119d7:	cmp    bl,BYTE PTR [rip+0xfffffffff732f202]        # 0x137340bdf
   1400119dd:	rex.WRX
   1400119de:	sbb    r15d,DWORD PTR [r15]
   1400119e1:	cmp    DWORD PTR [rdx+0x45],edx
   1400119e4:	movabs al,ds:0x7a6ae1e09f42382
   1400119ed:	jl     0x1400119b5
   1400119ef:	movabs ds:0x74016899844a1416,al
   1400119f8:	ins    DWORD PTR es:[rdi],dx
   1400119f9:	(bad)  
   1400119fa:	test   BYTE PTR [rsi+rsi*2],0xd0
   1400119fe:	jge    0x140011a02
   140011a00:	lods   al,BYTE PTR ds:[rsi]
   140011a01:	xchg   ebp,eax
   140011a02:	add    eax,0x170715a7
   140011a07:	(bad)  
   140011a08:	in     eax,dx
   140011a09:	movabs ds:0xf308243305aead7,eax
   140011a12:	and    BYTE PTR [rcx],al
   140011a14:	sbb    al,0x3e
   140011a16:	stc    
   140011a17:	jbe    0x1400119fc
   140011a19:	jmp    0x135002d41
   140011a1e:	fisubr DWORD PTR [rbx-0x49]
   140011a21:	movabs ds:0xf59046393576efb6,al
   140011a2a:	(bad)  
   140011a2b:	or     dl,dl
   140011a2d:	mov    ecx,0x9abbdc4c
   140011a32:	and    al,0xa
   140011a34:	sub    BYTE PTR [rbx+0x399740c9],dl
   140011a3a:	push   rax
   140011a3b:	es jns 0x140011a42
   140011a3e:	test   eax,0x199e000a
   140011a43:	add    eax,0x82370415
   140011a48:	or     DWORD PTR [rax+0x19],esi
   140011a4b:	cmp    al,0x8b
   140011a4d:	(bad)  
   140011a4e:	rcr    BYTE PTR [rdi+rcx*8-0x29],1
   140011a52:	push   rcx
   140011a53:	out    dx,al
   140011a54:	and    eax,0x9b84578b
   140011a59:	xor    BYTE PTR [rax-0x1e],ch
   140011a5c:	xor    BYTE PTR [rdx],al
   140011a5e:	fcomp  st(4)
   140011a60:	or     BYTE PTR [rdi],ah
   140011a62:	ins    BYTE PTR es:[rdi],dx
   140011a63:	jle    0x140011a4d
   140011a65:	call   0x13ea0adc5
   140011a6a:	(bad)  
   140011a6b:	(bad)  
   140011a6c:	jg     0x140011adb
   140011a6e:	stos   BYTE PTR es:[rdi],al
   140011a6f:	jno    0x140011a8e
   140011a71:	push   0x37
   140011a73:	fadd   QWORD PTR [rcx]
   140011a75:	data16 rex.WRB fiadd WORD PTR [r13-0x4c60a04e]
   140011a7d:	cmp    BYTE PTR [rbx],bl
   140011a7f:	retf   0x53c4
   140011a82:	enter  0xf2a0,0x1d
   140011a86:	sub    al,0x79
   140011a88:	or     BYTE PTR [rax+rsi*8],0xec
   140011a8c:	mov    esi,DWORD PTR [rsi]
   140011a8e:	loop   0x140011a50
   140011a90:	and    DWORD PTR [rsi-0x75afc05b],ebx
   140011a96:	add    al,0xc
   140011a98:	lahf   
   140011a99:	add    ecx,DWORD PTR [rbp+0x47f6b5d9]
   140011a9f:	jmp    FWORD PTR [rbp-0x2]
   140011aa2:	sbb    DWORD PTR [rdi+rbp*4+0x7],esi
   140011aa6:	(bad)  
   140011aa7:	push   rdi
   140011aa8:	test   bl,bl
   140011aaa:	data16 movabs al,ds:0x2a0c1179b0046184
   140011ab4:	sbb    BYTE PTR [rcx-0x19],bl
   140011ab7:	rcl    DWORD PTR [rdi-0x1101b0b2],1
   140011abd:	cmp    eax,0xc4f7757f
   140011ac2:	int3   
   140011ac3:	xor    eax,0x42777da0
   140011ac8:	stos   BYTE PTR es:[rdi],al
   140011ac9:	add    ch,BYTE PTR [rdx+rdx*8+0x700fbd5e]
   140011ad0:	xor    eax,0x1739f049
   140011ad5:	(bad)  
   140011ad6:	add    ch,0x3
   140011ad9:	jo     0x140011a74
   140011adb:	sub    ecx,ebp
   140011add:	(bad)  
   140011ade:	sub    BYTE PTR [rdx+0x3cd660d],al
   140011ae4:	test   BYTE PTR [rsi],cl
   140011ae6:	rex iret 
   140011ae8:	mov    eax,0x4ff3f1f7
   140011aed:	sahf   
   140011aee:	outs   dx,DWORD PTR ds:[rsi]
   140011aef:	out    0xcb,al
   140011af1:	sub    BYTE PTR [rbp+0x103783c2],ah
   140011af7:	cmp    al,0x2
   140011af9:	or     eax,DWORD PTR [rbx]
   140011afb:	adc    al,BYTE PTR [rsi+0x46e6c011]
   140011b01:	sub    al,0xcf
   140011b03:	fld    QWORD PTR [rsi]
   140011b05:	sar    BYTE PTR [rdx-0x2],1
   140011b08:	(bad)  
   140011b09:	(bad)  
   140011b0a:	cdq    
   140011b0b:	paddb  mm0,mm2
   140011b0e:	jge    0x140011acf
   140011b10:	jns    0x140011b04
   140011b12:	int3   
   140011b13:	sbb    ah,bh
   140011b15:	clc    
   140011b16:	iret   
   140011b17:	cmp    BYTE PTR [rbp-0x5a],0x39
   140011b1b:	mov    edi,0xc0030ee
   140011b20:	cmp    bh,ah
   140011b22:	xor    al,0x9
   140011b24:	test   al,0x15
   140011b26:	mov    esi,0x6af956ba
   140011b2b:	push   rdx
   140011b2c:	fisub  WORD PTR [rbx-0x30eda11e]
   140011b32:	pop    rdi
   140011b33:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011b34:	(bad)  
   140011b35:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011b36:	mov    edi,0xaf4be1c0
   140011b3b:	sub    eax,0x679ffabf
   140011b40:	pop    rbx
   140011b41:	push   rbx
   140011b42:	call   0xc6bf2aa5
   140011b47:	(bad)  
   140011b48:	fild   DWORD PTR [rcx-0x4f2a182f]
   140011b4e:	leave  
   140011b4f:	(bad)  
   140011b50:	add    al,0xb0
   140011b52:	mov    ecx,0x7c501b10
   140011b57:	jne    0x140011b29
   140011b59:	mov    ebp,0x27f167b5
   140011b5e:	jle    0x140011b55
   140011b60:	(bad)  
   140011b61:	mov    ebx,0x1ed6ffbe
   140011b66:	je     0x140011b16
   140011b68:	mov    ecx,0x1db1f51d
   140011b6d:	(bad)
   140011b70:	jl     0x140011bcb
   140011b72:	adc    BYTE PTR [rcx+rbx*1+0x1],dh
   140011b76:	xchg   esp,eax
   140011b77:	sbb    DWORD PTR [rcx+rax*8],0xffffffd5
   140011b7b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011b7c:	jg     0x140011afe
   140011b7e:	xor    ah,BYTE PTR [rdi]
   140011b80:	(bad)
   140011b85:	mul    BYTE PTR fs:[rbp+0x29]
   140011b89:	nop
   140011b8a:	add    DWORD PTR [rbx+0x13],0x3e0f13ab
   140011b91:	mov    edi,0xf1885df0
   140011b96:	(bad)  
   140011b97:	movabs ds:0x92cc1eb944dc0cdc,eax
   140011ba0:	or     DWORD PTR [rcx+0x736008c3],0x73dc6423
   140011baa:	xchg   esp,eax
   140011bab:	sbb    edi,DWORD PTR [rbx+0x56]
   140011bae:	and    BYTE PTR [rbx],bh
   140011bb0:	sti    
   140011bb1:	out    0xee,al
   140011bb3:	clc    
   140011bb4:	cmc    
   140011bb5:	sti    
   140011bb6:	out    dx,eax
   140011bb7:	dec    dh
   140011bb9:	adc    DWORD PTR [rbx],0xad9ab72f
   140011bbf:	jne    0x140011bf1
   140011bc1:	xor    BYTE PTR [rdx+rdi*4],bh
   140011bc4:	add    eax,0x30ad70d9
   140011bc9:	rex.WXB sub QWORD PTR [r9],rbx
   140011bcc:	cmp    ch,cl
   140011bce:	and    ah,dl
   140011bd0:	rex.WX movabs al,ds:0xe543439790c42c73
   140011bda:	and    eax,0x8bb38089
   140011bdf:	popf   
   140011be0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011be1:	rex.WRXB cmp al,0x35
   140011be4:	jnp    0x140011bfe
   140011be6:	(bad)  
   140011be7:	in     al,dx
   140011be8:	or     eax,0x25c06ec8
   140011bed:	std    
   140011bee:	mov    esp,0xe200f109
   140011bf3:	cmp    al,0x80
   140011bf5:	sbb    DWORD PTR [rdi-0x5e],edi
   140011bf8:	enter  0x7f2e,0x8b
   140011bfc:	loope  0x140011c5b
   140011bfe:	mov    bpl,0xaf
   140011c01:	(bad)  
   140011c02:	(bad)  
   140011c03:	cmc    
   140011c04:	mov    DWORD PTR [rdi],ebp
   140011c06:	jmp    rbp
   140011c08:	addr32 rex.WRXB sbb rax,0xfffffffffd767379
   140011c0f:	int    0xa5
   140011c11:	data16 addr32 jns 0x140011c7d
   140011c15:	out    0xd6,eax
   140011c17:	(bad)  
   140011c18:	ficomp WORD PTR [rbp-0x3d]
   140011c1b:	jnp    0x140011c57
   140011c1d:	sub    ebp,DWORD PTR [rbx-0x41139880]
   140011c23:	imul   edx,DWORD PTR [rbx+rax*8],0x4ce8c3e3
   140011c2a:	iret   
   140011c2b:	adc    eax,0xe232fe3d
   140011c30:	retf   
   140011c31:	call   0x17469576a
   140011c36:	jmp    0x140011c78
   140011c38:	cmp    eax,DWORD PTR [rdi]
   140011c3a:	add    BYTE PTR [rcx+rsi*2],cl
   140011c3d:	sbb    ecx,DWORD PTR [rsi-0x47c929c3]
   140011c43:	std    
   140011c44:	icebp  
   140011c45:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011c46:	cs cmp al,0x77
   140011c49:	jb     0x140011bf9
   140011c4b:	cmp    eax,0x79fa3103
   140011c50:	add    BYTE PTR [rbx+0x7a],dh
   140011c53:	sub    eax,0x7e81bc42
   140011c58:	add    al,0x60
   140011c5a:	out    dx,al
   140011c5b:	jg     0x140011bdf
   140011c5d:	mov    al,0x3e
   140011c5f:	or     ch,0xf
   140011c62:	xchg   BYTE PTR [rax],bl
   140011c64:	sbb    al,BYTE PTR [rcx-0x74]
   140011c67:	(bad)  
   140011c68:	push   rbp
   140011c69:	fmulp  st(7),st
   140011c6b:	movsx  edx,cl
   140011c6e:	js     0x140011c55
   140011c70:	loopne 0x140011c8d
   140011c72:	(bad)  
   140011c73:	sar    DWORD PTR [rax+0x6e],cl
   140011c76:	push   0xfffffffffffffffb
   140011c78:	clc    
   140011c79:	(bad)  
   140011c7a:	cli    
   140011c7b:	xor    eax,0x83ea7e4f
   140011c80:	(bad)  
   140011c81:	pop    rdi
   140011c82:	jns    0x140011c81
   140011c84:	in     eax,dx
   140011c85:	rex.X and edx,DWORD PTR [rax]
   140011c88:	sub    bl,BYTE PTR [rip+0xffffffffaa030e86]        # 0xea042b14
   140011c8e:	sbb    ch,BYTE PTR [rsi]
   140011c90:	sbb    eax,DWORD PTR [rbp+0xc06f3ba]
   140011c96:	loopne 0x140011c59
   140011c98:	(bad)  
   140011c99:	(bad)  
   140011c9a:	pop    rsi
   140011c9b:	jl     0x140011d0e
   140011c9d:	mov    dl,0x35
   140011c9f:	or     DWORD PTR [rcx],esi
   140011ca1:	hlt    
   140011ca2:	or     BYTE PTR [r9],r8b
   140011ca5:	sub    al,0xa0
   140011ca7:	pop    rsp
   140011ca8:	nop    edi
   140011cab:	or     DWORD PTR [rsi+rbp*2+0x6243607],ebp
   140011cb2:	or     eax,DWORD PTR [rcx]
   140011cb4:	ss (bad) 
   140011cb6:	cli    
   140011cb7:	in     eax,0x2
   140011cb9:	jb     0x140011c43
   140011cbb:	shr    DWORD PTR [rbp+0x40],1
   140011cbe:	rex.WRX loopne 0x140011ce7
   140011cc1:	(bad)  
   140011cc2:	sub    bh,ah
   140011cc4:	add    ah,cl
   140011cc6:	add    BYTE PTR [rax],bh
   140011cc8:	(bad)  
   140011cc9:	loopne 0x140011ca7
   140011ccb:	int3   
   140011ccc:	rex.WX jnp 0x140011cb1
   140011ccf:	xchg   esi,eax
   140011cd0:	fistp  QWORD PTR [rdi-0x1e]
   140011cd3:	mov    esi,0x6f23c30b
   140011cd8:	mov    edi,ebx
   140011cda:	loopne 0x140011d21
   140011cdc:	mov    BYTE PTR [r13+0x21550194],dil
   140011ce3:	cwde   
   140011ce4:	and    esp,ebx
   140011ce6:	outs   dx,DWORD PTR ds:[rsi]
   140011ce7:	mov    ch,0x7d
   140011ce9:	fwait
   140011cea:	sar    DWORD PTR [rax],0x70
   140011ced:	mov    edx,0xc72be279
   140011cf2:	xchg   esi,eax
   140011cf3:	pop    rdi
   140011cf4:	xchg   DWORD PTR [rax],ebx
   140011cf6:	inc    DWORD PTR [rdx-0x1ae184c2]
   140011cfc:	leave  
   140011cfd:	(bad)  
   140011cfe:	scas   eax,DWORD PTR es:[rdi]
   140011cff:	(bad)  
   140011d00:	not    DWORD PTR [rbp-0x4601d061]
   140011d06:	or     eax,0x8042c089
   140011d0b:	int    0x8b
   140011d0d:	mov    ecx,DWORD PTR [rbp-0x25]
   140011d10:	push   rbp
   140011d11:	cmp    esi,edx
   140011d13:	rex.X test DWORD PTR [rax+0xdce310d],esp
   140011d1a:	add    ch,ch
   140011d1c:	jg     0x140011d9c
   140011d1e:	jno    0x140011d0a
   140011d20:	cmp    esi,DWORD PTR [rdi-0x1cc2093]
   140011d26:	rex.XB ja 0x140011d15
   140011d29:	ficomp DWORD PTR [rbx+0x6582ce4f]
   140011d2f:	cmp    DWORD PTR [rax+0x31],edx
   140011d32:	cli    
   140011d33:	mov    ebx,0xf2c1df3e
   140011d38:	pop    rdx
   140011d39:	sbb    eax,0xc6adf393
   140011d3e:	(bad)  
   140011d3f:	cmp    al,0x36
   140011d41:	icebp  
   140011d42:	fmul   QWORD PTR [rdi-0x2170f073]
   140011d48:	repz clc 
   140011d4a:	int3   
   140011d4b:	rex.B
   140011d4c:	rex.W pushf 
   140011d4e:	mov    edi,0xbfc3100
   140011d53:	sub    BYTE PTR [rcx],cl
   140011d55:	(bad)  
   140011d56:	add    eax,0xb0eb3c42
   140011d5b:	fdivr  DWORD PTR [rdi+0x60]
   140011d5e:	(bad)  
   140011d5f:	add    al,0xb0
   140011d61:	mov    ecx,0xdb91a971
   140011d66:	cwde   
   140011d67:	add    BYTE PTR [rdx+0x5d],al
   140011d6a:	mov    esi,0x7de751ab
   140011d6f:	sti    
   140011d70:	jbe    0x140011d61
   140011d72:	mov    eax,0xbe6fc7f3
   140011d77:	test   ebx,ebx
   140011d79:	imul   eax,eax,0xfffffffa
   140011d7c:	xchg   edx,eax
   140011d7d:	cs adc esi,ebx
   140011d80:	and    BYTE PTR [rax-0x4c],bh
   140011d83:	(bad)  
   140011d84:	lock mov BYTE PTR ss:[rip+0xffffffffabf87f2c],0xa7        # 0xebf99cb9
   140011d8d:	sahf   
   140011d8e:	cdq    
   140011d8f:	push   0x6c
   140011d91:	sub    al,0x3c
   140011d93:	je     0x140011e11
   140011d95:	stc    
   140011d96:	jnp    0x140011da8
   140011d98:	(bad)  
   140011d99:	and    bl,BYTE PTR [rax]
   140011d9b:	jmp    FWORD PTR [rdx+rdi*4]
   140011d9e:	lea    edi,[rdi]
   140011da0:	ds std 
   140011da2:	sub    eax,0x58101ff6
   140011da7:	(bad)  
   140011da8:	(bad)  
   140011da9:	jae    0x140011dce
   140011dab:	int3   
   140011dac:	add    al,0x84
   140011dae:	iret   
   140011daf:	sbb    DWORD PTR [rsi-0x29],0xa005c8bb
   140011db6:	hlt    
   140011db7:	add    dh,dl
   140011db9:	add    DWORD PTR [rdi+rdx*8-0x6126c983],esi
   140011dc0:	js     0x140011dc7
   140011dc2:	cmc    
   140011dc3:	fwait
   140011dc4:	jg     0x140011de4
   140011dc6:	cwde   
   140011dc7:	cmp    DWORD PTR [rcx],eax
   140011dc9:	sahf   
   140011dca:	cmp    eax,0xba65800d
   140011dcf:	pop    QWORD PTR [rcx+0x3a58de97]
   140011dd5:	xor    edi,DWORD PTR [rdi-0x421af62a]
   140011ddb:	clc    
   140011ddc:	in     al,0xbf
   140011dde:	xchg   esp,eax
   140011ddf:	jmp    0x140011d80
   140011de1:	movabs ds:0xd200f30a2437f5d7,eax
   140011dea:	rex (bad) 
   140011dec:	rex.WRXB and BYTE PTR [r8+0x0],r15b
   140011df0:	rex ja 0x140011e24
   140011df3:	scas   eax,DWORD PTR es:[rdi]
   140011df4:	push   0xffffffffe4e17dd1
   140011df9:	(bad)  
   140011dfa:	mov    ah,0x5f
   140011dfc:	fnstenv [rcx]
   140011dfe:	jge    0x140011dfb
   140011e00:	fsubr  st,st(1)
   140011e02:	lahf   
   140011e03:	scas   al,BYTE PTR es:[rdi]
   140011e04:	fnsave [rax-0x55]
   140011e07:	repz push rdi
   140011e09:	in     eax,dx
   140011e0a:	add    BYTE PTR [rsi-0x53f3bf59],dl
   140011e10:	int    0xb5
   140011e12:	icebp  
   140011e13:	(bad)  
   140011e14:	cdq    
   140011e15:	jl     0x140011e11
   140011e17:	stc    
   140011e18:	mov    ebp,esp
   140011e1a:	inc    DWORD PTR [rdx-0x126380e8]
   140011e20:	scas   eax,DWORD PTR es:[rdi]
   140011e21:	sbb    bh,BYTE PTR [rdi+0x48]
   140011e24:	cld    
   140011e25:	cmc    
   140011e26:	cmp    edi,ecx
   140011e28:	add    DWORD PTR [rbx],esp
   140011e2a:	(bad)  
   140011e2b:	fs (bad) 
   140011e2d:	add    al,0x90
   140011e2f:	(bad)  
   140011e30:	stos   BYTE PTR es:[rdi],al
   140011e31:	and    al,0xd0
   140011e33:	(bad)  
   140011e34:	push   rcx
   140011e35:	sbb    BYTE PTR [rbx],dl
   140011e37:	add    DWORD PTR [rbx],eax
   140011e39:	sar    BYTE PTR [rdi-0x64],0x3a
   140011e3d:	jg     0x140011ded
   140011e3f:	mov    bl,0xb6
   140011e41:	imul   esp,esi,0xffffffd6
   140011e44:	loope  0x140011dfd
   140011e46:	outs   dx,DWORD PTR ds:[rsi]
   140011e47:	sbb    DWORD PTR [rdx],ebx
   140011e49:	fbstp  TBYTE PTR [rdi]
   140011e4b:	(bad)  
   140011e4c:	fsin   
   140011e4e:	ds mov eax,0xe75604c6
   140011e54:	fidivr DWORD PTR [rax]
   140011e56:	jb     0x140011e8e
   140011e58:	lahf   
   140011e59:	cmp    al,0x34
   140011e5b:	mov    cl,0x7c
   140011e5d:	adc    ah,BYTE PTR [rbp+0x32]
   140011e60:	jno    0x140011eb8
   140011e62:	pop    rdi
   140011e63:	rex.XB int 0xbf
   140011e66:	push   0xfffffffffffffffc
   140011e68:	(bad)  
   140011e69:	(bad)  
   140011e6a:	(bad)  
   140011e6b:	ror    BYTE PTR [rdi+rdi*1-0x5bfee797],0x87
   140011e73:	mov    edi,DWORD PTR [rcx+0x3]
   140011e76:	(bad)  
   140011e77:	sub    edi,DWORD PTR [rdi+rcx*2+0x30be9c2f]
   140011e7e:	repz int 0x13
   140011e81:	in     eax,dx
   140011e82:	and    edi,DWORD PTR [rdi-0x30151c8f]
   140011e88:	(bad)  
   140011e89:	ins    DWORD PTR es:[rdi],dx
   140011e8a:	sbb    ebx,DWORD PTR [rcx]
   140011e8c:	fcmovu st,st(0)
   140011e8e:	jne    0x140011eab
   140011e90:	mov    di,0x627b
   140011e94:	jmp    0x1ba9c3da8
   140011e99:	lods   al,BYTE PTR ds:[rsi]
   140011e9a:	fdecstp 
   140011e9c:	mov    ebp,eax
   140011e9e:	(bad)  
   140011e9f:	clc    
   140011ea0:	(bad)  
   140011ea1:	movabs eax,ds:0xdc5bf1af40dfe4fb
   140011eaa:	(bad)  
   140011eab:	and    BYTE PTR [rax],dh
   140011ead:	add    cl,BYTE PTR [rax+0x13]
   140011eb0:	xchg   edi,eax
   140011eb1:	repnz (bad) 
   140011eb3:	or     bl,BYTE PTR [rip+0xffffffff9986f881]        # 0xd988173a
   140011eb9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011eba:	(bad)  
   140011ebb:	mov    ch,0x3f
   140011ebd:	jg     0x140011f31
   140011ebf:	cli    
   140011ec0:	jmp    0xf91d8d80
   140011ec5:	ins    DWORD PTR es:[rdi],dx
   140011ec6:	je     0x140011f30
   140011ec8:	(bad)  
   140011ec9:	hlt    
   140011eca:	rex.XB lahf 
   140011ecc:	(bad)  
   140011ecd:	test   BYTE PTR [rdi],0x47
   140011ed0:	addr32 (bad) 
   140011ed2:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011ed3:	push   rcx
   140011ed4:	es inc dl
   140011ed7:	adc    eax,0xf66e3f8c
   140011edc:	xor    ebx,esp
   140011ede:	(bad)  
   140011edf:	push   rax
   140011ee0:	sbb    BYTE PTR [rcx],al
   140011ee2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011ee3:	mov    ecx,DWORD PTR [rbx-0x6b]
   140011ee6:	or     ebx,esp
   140011ee8:	jg     0x140011ed5
   140011eea:	retf   0x7c0f
   140011eed:	loope  0x140011ee8
   140011eef:	test   eax,0xf58bab43
   140011ef4:	jmp    0x1799a3da8
   140011ef9:	or     cl,BYTE PTR [rcx-0x2]
   140011efc:	add    eax,0x7f310802
   140011f01:	adc    edi,DWORD PTR [rbp-0x39a4092]
   140011f07:	(bad)  
   140011f08:	adc    al,0xa6
   140011f0a:	in     al,dx
   140011f0b:	(bad)  
   140011f0c:	ds stos BYTE PTR es:[rdi],al
   140011f0e:	rex.WX movabs rbp,0xd90433e4d8503d61
   140011f18:	out    0xbb,al
   140011f1a:	adc    eax,0x1b73d8b2
   140011f1f:	fs iret 
   140011f21:	pop    rdi
   140011f22:	sbb    eax,0x942dd862
   140011f27:	ret    
   140011f28:	ds (bad) 
   140011f2a:	mov    WORD PTR [rdi-0x41],?
   140011f2d:	xchg   ecx,eax
   140011f2e:	pop    rdi
   140011f2f:	xor    edi,esi
   140011f31:	add    DWORD PTR [rdx-0x382cfe6b],eax
   140011f37:	(bad)
   140011f3a:	popf   
   140011f3b:	retf   0x1e7d
   140011f3e:	cmp    dl,BYTE PTR [rdx+0xc]
   140011f41:	and    DWORD PTR [rax+rsi*8+0x4c80dfb7],eax
   140011f48:	cld    
   140011f49:	(bad)
   140011f4c:	(bad)  
   140011f4d:	cld    
   140011f4e:	push   rsi
   140011f4f:	out    dx,al
   140011f50:	sbb    esi,DWORD PTR [rax+0x18]
   140011f53:	add    DWORD PTR [rsi+rax*1],ecx
   140011f56:	cli    
   140011f57:	xchg   ecx,eax
   140011f58:	rex call 0x1442ca76d
   140011f5e:	cmp    esp,eax
   140011f60:	enter  0x5157,0x86
   140011f64:	jg     0x140011f3b
   140011f66:	cs ret 0xe5d8
   140011f6a:	scas   eax,DWORD PTR es:[rdi]
   140011f6b:	jbe    0x140011f68
   140011f6d:	sbb    DWORD PTR [rcx],edx
   140011f6f:	or     al,0x18
   140011f71:	mov    WORD PTR [rax],es
   140011f73:	(bad)  
   140011f74:	(bad)  
   140011f75:	push   rbp
   140011f76:	adc    ch,al
   140011f78:	out    0xba,eax
   140011f7a:	xchg   DWORD PTR [rsi-0x5f],esp
   140011f7d:	js     0x140011f2a
   140011f7f:	outs   dx,DWORD PTR ds:[rsi]
   140011f80:	fmul   QWORD PTR [rbp+0x58]
   140011f83:	(bad)  
   140011f84:	stc    
   140011f85:	stos   DWORD PTR es:[rdi],eax
   140011f86:	iret   
   140011f87:	(bad)  
   140011f88:	or     al,0x18
   140011f8a:	sub    al,0x7
   140011f8c:	xor    BYTE PTR [rax-0x18],bh
   140011f8f:	xchg   edi,eax
   140011f90:	adc    ecx,DWORD PTR [rax]
   140011f92:	jns    0x140011f15
   140011f94:	(bad)  
   140011f95:	(bad)  
   140011f96:	rex.WRXB movabs al,ds:0xd5e7d01af6207fbb
   140011fa0:	xor    BYTE PTR [rax+0x30],ah
   140011fa3:	add    bl,BYTE PTR [rax]
   140011fa5:	rex.WR hlt 
   140011fa7:	and    eax,DWORD PTR [rcx]
   140011fa9:	movabs al,ds:0x3f791b13df19ee5c
   140011fb2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011fb3:	pop    rdi
   140011fb4:	xor    edi,esi
   140011fb6:	add    DWORD PTR [rsi-0x5d1f3fef],eax
   140011fbc:	fistp  WORD PTR [rsi]
   140011fbe:	mov    edi,0xc5170dcb
   140011fc3:	scas   eax,DWORD PTR es:[rdi]
   140011fc4:	(bad)  
   140011fc5:	iret   
   140011fc6:	or     eax,0x80230803
   140011fcb:	rol    DWORD PTR [rsi-0x21],0x8d
   140011fcf:	(bad)  
   140011fd0:	(bad)  
   140011fd1:	mov    ecx,0x2bfe62d7
   140011fd6:	adc    BYTE PTR [rsi+0x0],al
   140011fd9:	push   rdi
   140011fda:	(bad)  
   140011fdb:	(bad)  
   140011fdc:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011fdd:	jg     0x140012046
   140011fdf:	xor    edi,esi
   140011fe1:	sub    eax,DWORD PTR [rsi+rax*2]
   140011fe4:	add    BYTE PTR [rdi+0x16],dl
   140011fe7:	cs div edi
   140011fea:	ss ret 
   140011fec:	mov    edi,0x94dff0c2
   140011ff1:	mov    edx,0x5b69ef20
   140011ff6:	scas   eax,DWORD PTR es:[rdi]
   140011ff7:	nop
   140011ff8:	add    BYTE PTR [rax],al
   140011ffa:	add    BYTE PTR [rax],al
   140011ffc:	rex.WB
   140011ffd:	rex.RB
   140011ffe:	rex.WRX
   140011fff:	rex.R scas al,BYTE PTR es:[rdi]
   140012001:	rex.X (bad) 
   140012003:	(bad)  
   140012004:	add    BYTE PTR [rax],al
   140012006:	add    BYTE PTR [rax],al
   140012008:	sub    BYTE PTR [rax],al
   14001200a:	add    BYTE PTR [rax],al
   14001200c:	xor    BYTE PTR [rax],al
   14001200e:	add    BYTE PTR [rax],al
   140012010:	(bad)  
   140012011:	add    BYTE PTR [rax],al
   140012013:	add    BYTE PTR [rcx],al
   140012015:	add    BYTE PTR [rax],ah
   140012017:	add    BYTE PTR [rax],al
   140012019:	add    BYTE PTR [rax],al
   14001201b:	add    BYTE PTR [rax+0x25],al
	...
   140012089:	add    BYTE PTR [rax],al
   14001208b:	(bad)  
   14001208c:	add    BYTE PTR [rax],al
   14001208e:	add    BYTE PTR [rsi],dl
   140012090:	add    BYTE PTR [rax],al
   140012092:	add    BYTE PTR [rip+0xd000000],bl        # 0x14d012098
   140012098:	add    BYTE PTR [rax],al
   14001209a:	add    BYTE PTR [rcx],al
	...
   140012144:	add    BYTE PTR [rax],al
   140012146:	add    BYTE PTR [rax+rax*1],al
   140012149:	add    BYTE PTR [rax],al
   14001214b:	sbb    eax,0x6a000001
   140012150:	add    BYTE PTR [rax],al
   140012152:	add    BYTE PTR [rcx+0x0],cl
   140012155:	add    BYTE PTR [rax],al
   140012157:	and    DWORD PTR [rax],eax
   140012159:	add    BYTE PTR [rax],al
   14001215b:	add    al,0x0
	...
   1400121fd:	add    BYTE PTR [rax],al
   1400121ff:	add    DWORD PTR [rax],eax
   140012201:	add    BYTE PTR [rax],al
   140012203:	or     DWORD PTR [rax],eax
   140012205:	add    BYTE PTR [rax],al
   140012207:	and    DWORD PTR [rax],ebx
   140012209:	rex.W
   14001220a:	mov    si,0x8727
   14001220e:	(bad)  
   14001220f:	inc    DWORD PTR [rax]
   140012211:	add    BYTE PTR [rax],al
   140012213:	jne    0x140012215
   140012215:	add    BYTE PTR [rax],al
   140012217:	xor    DWORD PTR [rax],eax
   140012219:	add    BYTE PTR [rax],al
   14001221b:	or     al,BYTE PTR [rax]
   14001221d:	add    BYTE PTR [rax],al
   14001221f:	add    DWORD PTR [rax],eax
	...
   1400122bd:	add    BYTE PTR [rax],al
   1400122bf:	or     DWORD PTR [rax],eax
   1400122c1:	add    BYTE PTR [rax],al
   1400122c3:	xor    BYTE PTR [rcx],cl
   1400122c5:	adc    BYTE PTR [rcx],ah
   1400122c7:	xchg   edx,eax
   1400122c8:	rex.RX retf 
   1400122ca:	(bad)  
   1400122cb:	push   QWORD PTR [rdi]
   1400122cd:	lods   al,BYTE PTR ds:[rsi]
   1400122ce:	(bad)  
   1400122cf:	inc    DWORD PTR [rax]
   1400122d1:	add    BYTE PTR [rax],al
   1400122d3:	xchg   ecx,eax
   1400122d4:	add    BYTE PTR [rax],al
   1400122d6:	add    BYTE PTR [rdi+0x0],al
   1400122d9:	add    BYTE PTR [rax],al
   1400122db:	sbb    al,BYTE PTR [rax]
   1400122dd:	add    BYTE PTR [rax],al
   1400122df:	add    eax,0x0
	...
   14001237c:	add    BYTE PTR [rax],al
   14001237e:	add    BYTE PTR [rbx],ch
   140012380:	sub    ecx,DWORD PTR [rdx+0x6d39f1bc]
   140012386:	mov    dh,0xff
   140012388:	rex.X mov edx,0x9433fffe
   14001238e:	(bad)  
   14001238f:	inc    DWORD PTR [rsi]
   140012391:	(bad)  
   140012392:	cs mov ch,0x0
   140012395:	add    BYTE PTR [rax],al
   140012397:	je     0x140012399
   140012399:	add    BYTE PTR [rax],al
   14001239b:	sub    al,0x0
   14001239d:	add    BYTE PTR [rax],al
   14001239f:	or     BYTE PTR [rax],al
	...
   140012439:	add    BYTE PTR [rax],al
   14001243b:	add    BYTE PTR [rcx],ah
   14001243d:	pop    rbp
   14001243e:	stos   DWORD PTR es:[rdi],eax
   14001243f:	lock rex.X (bad) 
   140012442:	(bad)  
   140012443:	push   QWORD PTR [rdx]
   140012445:	push   0xffffffff9b37ffaf
   14001244a:	out    0xff,eax
   14001244c:	(bad)  
   14001244d:	sbb    ah,0xff
   140012450:	(bad)  
   140012451:	fs retf 
   140012453:	inc    DWORD PTR [rax]
   140012455:	add    BYTE PTR [rax],al
   140012457:	xchg   esi,eax
   140012458:	add    BYTE PTR [rax],al
   14001245a:	add    BYTE PTR [rdx],dh
   14001245c:	add    BYTE PTR [rax],al
   14001245e:	add    BYTE PTR [rcx],cl
	...
   1400124fc:	and    esp,DWORD PTR [rbx-0x4a]
   1400124ff:	(bad)  
   140012500:	cmp    DWORD PTR [rsp+rdi*8-0x4a98cf01],esi
   140012507:	push   QWORD PTR [rbx]
   140012509:	xchg   esi,eax
   14001250a:	loop   0x14001250b
   14001250c:	cmp    BYTE PTR [rbx+0x6815ffde],bl
   140012512:	int    0xff
   140012514:	add    BYTE PTR [rax],al
   140012516:	add    BYTE PTR [rax+rax*1+0x270000],cl
   14001251d:	add    BYTE PTR [rax],al
   14001251f:	(bad)  
	...
   1400125bc:	and    esp,DWORD PTR [rdx-0x4d]
   1400125bf:	push   QWORD PTR [rbx]
   1400125c1:	popf   
   1400125c2:	idiv   edi
   1400125c4:	sub    ah,BYTE PTR [rbx-0x48]
   1400125c7:	jmp    FWORD PTR [rbp-0x1a]
   1400125ca:	(bad)  
   1400125cb:	jmp    FWORD PTR [rdi]
   1400125cd:	xchg   esi,ecx
   1400125cf:	dec    DWORD PTR [rbp+0xfff7c5]
   1400125d5:	add    BYTE PTR [rax],al
   1400125d7:	outs   dx,BYTE PTR ds:[rsi]
   1400125d8:	add    BYTE PTR [rax],al
   1400125da:	add    BYTE PTR [rsi],dl
   1400125dc:	add    BYTE PTR [rax],al
   1400125de:	add    BYTE PTR [rbx],al
	...
   14001267c:	and    esp,DWORD PTR [rdx-0x4d]
   14001267f:	push   QWORD PTR [rax]
   140012681:	xchg   edi,eax
   140012682:	clc    
   140012683:	jmp    QWORD PTR [rcx]
   140012685:	pop    rsi
   140012686:	mov    ah,0xff
   140012688:	ins    BYTE PTR es:[rdi],dx
   140012689:	out    0xff,al
   14001268b:	push   QWORD PTR [rcx]
   14001268d:	xchg   edx,edx
   14001268f:	inc    DWORD PTR [rdx]
   140012691:	add    BYTE PTR [rax],al
   140012693:	movabs ds:0x160000003d000000,eax
   14001269c:	add    BYTE PTR [rax],al
   14001269e:	add    BYTE PTR [rip+0x0],al        # 0x1400126a4
	...
   14001273c:	and    ah,BYTE PTR [rcx-0x4d]
   14001273f:	inc    DWORD PTR [rsi-0x3b]
   140012742:	(bad)  
   140012743:	jmp    QWORD PTR [rcx]
   140012745:	movsxd esi,DWORD PTR [rbx-0x199301]
   14001274b:	push   QWORD PTR [rdi+rax*4]
   14001274e:	sar    bh,1
   140012750:	add    BYTE PTR [rax],al
   140012752:	add    BYTE PTR [rax+0x6f000000],dl
   140012758:	add    BYTE PTR [rax],al
   14001275a:	add    BYTE PTR [rsi],ah
   14001275c:	add    BYTE PTR [rax],al
   14001275e:	add    BYTE PTR [rcx],cl
	...
   1400127fc:	and    esp,DWORD PTR [rcx-0x4c]
   1400127ff:	call   QWORD PTR [rdx-0x27]
   140012802:	(bad)  
   140012803:	jmp    FWORD PTR [rax]
   140012805:	addr32 mov ch,0xff
   140012808:	imul   esp,ebp,0xffffffff
   14001280b:	push   QWORD PTR [rax+rax*4]
   14001280e:	leave  
   14001280f:	jmp    QWORD PTR [rcx]
   140012811:	pop    rbp
   140012812:	mov    ah,bl
   140012814:	add    BYTE PTR [rax],al
   140012816:	add    BYTE PTR [rbx+0x30000000],dl
   14001281c:	add    BYTE PTR [rax],al
   14001281e:	add    BYTE PTR [rcx],cl
	...
   1400128bc:	and    esp,DWORD PTR [rcx-0x4c]
   1400128bf:	call   QWORD PTR [rcx-0x30]
   1400128c2:	(bad)  
   1400128c3:	push   QWORD PTR [rcx]
   1400128c5:	ins    DWORD PTR es:[rdi],dx
   1400128c6:	mov    ch,0xff
   1400128c8:	imul   esp,esp,0xffffffff
   1400128cb:	push   QWORD PTR [rip+0x57ffc27a]        # 0x19800eb4b
   1400128d1:	mov    dh,0xff
   1400128d3:	inc    DWORD PTR [rsi]
   1400128d5:	add    eax,DWORD PTR [rdx]
   1400128d7:	mov    es,WORD PTR [rax]
   1400128d9:	add    BYTE PTR [rax],al
   1400128db:	(bad)  
   1400128dc:	add    BYTE PTR [rax],al
   1400128de:	add    BYTE PTR [rsi],al
	...
   14001297c:	and    esp,DWORD PTR [rcx-0x4e]
   14001297f:	call   QWORD PTR [rax-0x35]
   140012982:	(bad)  
   140012983:	push   QWORD PTR [rip+0x65ffb372]        # 0x1a600dcfb
   140012989:	(bad)  
   14001298b:	push   QWORD PTR [rax+rdi*2]
   14001298e:	sar    bh,0xab
   140012991:	jrcxz  0x140012992
   140012993:	jmp    FWORD PTR [rax]
   140012995:	es and al,0x77
   140012998:	add    BYTE PTR [rax],al
   14001299a:	add    BYTE PTR [rax+rax*1],bl
   14001299d:	add    BYTE PTR [rax],al
   14001299f:	add    al,0x0
	...
   140012a39:	add    BYTE PTR [rax],al
   140012a3b:	add    BYTE PTR [rbx],ah
   140012a3d:	(bad)  
   140012a3e:	mov    ah,0xff
   140012a40:	rex.WRXB retf 
   140012a42:	(bad)  
   140012a43:	push   QWORD PTR [rsi]
   140012a45:	je     0x1400129f9
   140012a47:	call   QWORD PTR [rsi+rcx*8-0x1]
   140012a4b:	push   QWORD PTR [rdi]
   140012a4d:	jns    0x140012a10
   140012a4f:	inc    DWORD PTR [rdi]
   140012a51:	add    al,0x1
   140012a53:	movabs ds:0x2500000056000000,eax
   140012a5c:	add    BYTE PTR [rax],al
   140012a5e:	add    BYTE PTR [rdi],al
	...
   140012afc:	and    esp,DWORD PTR [rcx-0x4c]
   140012aff:	dec    DWORD PTR [rbx-0x38]
   140012b02:	(bad)  
   140012b03:	push   QWORD PTR [rsi]
   140012b05:	jb     0x140012ab6
   140012b07:	dec    DWORD PTR [rbx-0x3b]
   140012b0a:	(bad)  
   140012b0b:	(bad)  
   140012b0c:	cmp    DWORD PTR [rdi-0x44],esi
   140012b0f:	push   QWORD PTR [rbx]
   140012b11:	jg     0x140012ac3
   140012b13:	jmp    0xce012b18
   140012b18:	add    BYTE PTR [rax],al
   140012b1a:	add    BYTE PTR [rcx],dh
   140012b1c:	add    BYTE PTR [rax],al
   140012b1e:	add    BYTE PTR [rcx],cl
	...
   140012bbc:	and    esp,DWORD PTR [rdx-0x4c]
   140012bbf:	inc    DWORD PTR [rdi-0x3f]
   140012bc2:	(bad)  
   140012bc3:	push   QWORD PTR [rax]
   140012bc5:	outs   dx,DWORD PTR ds:[rsi]
   140012bc6:	lods   al,BYTE PTR ds:[rsi]
   140012bc7:	dec    DWORD PTR [rbx-0x3b]
   140012bca:	(bad)  
   140012bcb:	(bad)  
   140012bcc:	cmp    dh,BYTE PTR [rdx-0x4a]
   140012bcf:	dec    DWORD PTR [rbp-0x42]
   140012bd2:	(bad)  
   140012bd3:	inc    DWORD PTR [rax]
   140012bd5:	add    BYTE PTR [rax],al
   140012bd7:	xchg   esi,eax
   140012bd8:	add    BYTE PTR [rax],al
   140012bda:	add    BYTE PTR [rbx],dh
   140012bdc:	add    BYTE PTR [rax],al
   140012bde:	add    BYTE PTR [rcx],cl
	...
   140012c7c:	and    esp,DWORD PTR [rdx-0x4c]
   140012c7f:	inc    DWORD PTR [rbx-0x42]
   140012c82:	(bad)  
   140012c83:	jmp    FWORD PTR [rbx]
   140012c85:	imul   ebp,DWORD PTR [rax-0x3ab401],0xffffffff
   140012c8c:	cmp    al,0x6f
   140012c8e:	mov    cl,0xff
   140012c90:	rex.WXB movabs r9,0x95000000ffff
   140012c9a:	add    BYTE PTR [rdx],dh
   140012c9c:	add    BYTE PTR [rax],al
   140012c9e:	add    BYTE PTR [rcx],cl
	...
   140012d3c:	and    esp,DWORD PTR [rdx-0x4c]
   140012d3f:	inc    DWORD PTR [rsi-0x3c]
   140012d42:	(bad)  
   140012d43:	jmp    FWORD PTR [rip+0x4cffa76b]        # 0x18d00d4b4
   140012d49:	(bad)  
   140012d4a:	(bad)  
   140012d4b:	(bad)  
   140012d4c:	outs   dx,DWORD PTR ds:[rsi]
   140012d4e:	scas   al,BYTE PTR es:[rdi]
   140012d4f:	dec    DWORD PTR [rax+rdi*4-0x1]
   140012d53:	inc    DWORD PTR [rax]
   140012d55:	add    BYTE PTR [rax],al
   140012d57:	xchg   ebp,eax
   140012d58:	add    BYTE PTR [rax],al
   140012d5a:	add    BYTE PTR [rdx],dh
   140012d5c:	add    BYTE PTR [rax],al
   140012d5e:	add    BYTE PTR [rcx],cl
	...
   140012dfc:	and    esp,DWORD PTR [rcx-0x4c]
   140012dff:	call   QWORD PTR [rcx-0x31]
   140012e02:	(bad)  
   140012e03:	push   QWORD PTR [rbx+rbp*2]
   140012e06:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012e07:	call   QWORD PTR [rcx-0x35]
   140012e0a:	(bad)  
   140012e0b:	(bad)  
   140012e0c:	(bad)  
   140012e0d:	ins    BYTE PTR es:[rdi],dx
   140012e0e:	stos   DWORD PTR es:[rdi],eax
   140012e0f:	dec    DWORD PTR [rbp-0x48]
   140012e12:	(bad)  
   140012e13:	inc    DWORD PTR [rax]
   140012e15:	add    BYTE PTR [rax],al
   140012e17:	xchg   ebp,eax
   140012e18:	add    BYTE PTR [rax],al
   140012e1a:	add    BYTE PTR [rdx],dh
   140012e1c:	add    BYTE PTR [rax],al
   140012e1e:	add    BYTE PTR [rcx],cl
	...
   140012ebc:	and    esp,DWORD PTR [rcx-0x4c]
   140012ebf:	call   FWORD PTR [rbx-0x26]
   140012ec2:	(bad)  
   140012ec3:	push   QWORD PTR [rdx+rbp*2]
   140012ec6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012ec7:	call   FWORD PTR [rdi-0x27]
   140012eca:	(bad)  
   140012ecb:	inc    DWORD PTR [rax+0x6a]
   140012ece:	test   eax,0xffb84dff
   140012ed3:	inc    DWORD PTR [rax]
   140012ed5:	add    BYTE PTR [rax],al
   140012ed7:	xchg   ebp,eax
   140012ed8:	add    BYTE PTR [rax],al
   140012eda:	add    BYTE PTR [rdx],dh
   140012edc:	add    BYTE PTR [rax],al
   140012ede:	add    BYTE PTR [rcx],cl
	...
   140012f7c:	and    ah,BYTE PTR [rdx-0x4c]
   140012f7f:	call   FWORD PTR [rsi-0x21]
   140012f82:	(bad)  
   140012f83:	push   QWORD PTR [rdx]
   140012f85:	push   0xffffffffe369ffa3
   140012f8a:	(bad)  
   140012f8b:	inc    DWORD PTR [rax+0x68]
   140012f8e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012f8f:	dec    DWORD PTR [rbx-0x48]
   140012f92:	(bad)  
   140012f93:	inc    DWORD PTR [rax]
   140012f95:	add    BYTE PTR [rax],al
   140012f97:	xchg   ebx,eax
   140012f98:	add    BYTE PTR [rax],al
   140012f9a:	add    BYTE PTR [rdx],dh
   140012f9c:	add    BYTE PTR [rax],al
   140012f9e:	add    BYTE PTR [rcx],cl
	...
   14001303c:	and    al,0x63
   14001303e:	mov    ch,0xff
   140013040:	pop    rbp
   140013041:	(bad)  
   140013043:	jmp    FWORD PTR [rbx+riz*2]
   140013046:	movabs al,ds:0xa46742ffffe56aff
   14001304f:	dec    DWORD PTR [rbx-0x48]
   140013052:	(bad)  
   140013053:	inc    DWORD PTR [rax]
   140013055:	add    BYTE PTR [rax],al
   140013057:	xchg   ebx,eax
   140013058:	add    BYTE PTR [rax],al
   14001305a:	add    BYTE PTR [rdx],dh
   14001305c:	add    BYTE PTR [rax],al
   14001305e:	add    BYTE PTR [rcx],cl
	...
   1400130fc:	and    eax,0x55ffb965
   140013101:	(bad)  
   140013102:	(bad)  
   140013103:	jmp    QWORD PTR [rdx]
   140013105:	pop    rcx
   140013106:	(bad)  
   140013107:	jmp    FWORD PTR [rdx-0x1b]
   14001310a:	(bad)  
   14001310b:	inc    DWORD PTR [rbx+0x64]
   14001310e:	movabs eax,ds:0xffffb849ff
   140013117:	xchg   esp,eax
   140013118:	add    BYTE PTR [rax],al
   14001311a:	add    BYTE PTR [rip+0xa000000],dh        # 0x14a013120
	...
   1400131b8:	add    BYTE PTR [rax],al
   1400131ba:	add    BYTE PTR [rcx],al
   1400131bc:	and    eax,0x51ffbc67
   1400131c1:	iret   
   1400131c2:	(bad)  
   1400131c3:	call   QWORD PTR [rcx]
   1400131c5:	rex.WRXB xchg r12,rax
   1400131c7:	jmp    FWORD PTR [rdx-0x1c]
   1400131ca:	(bad)  
   1400131cb:	inc    DWORD PTR [rbx+0x63]
   1400131ce:	sahf   
   1400131cf:	inc    DWORD PTR [rcx-0x4c]
   1400131d2:	std    
   1400131d3:	inc    DWORD PTR [rax]
   1400131d5:	add    BYTE PTR [rax],al
   1400131d7:	pushf  
   1400131d8:	add    BYTE PTR [rax],al
   1400131da:	add    BYTE PTR [rax+0x0],cl
   1400131dd:	add    BYTE PTR [rax],al
   1400131df:	and    BYTE PTR [rax],al
   1400131e1:	add    BYTE PTR [rax],al
   1400131e3:	or     DWORD PTR [rax],eax
   1400131e5:	add    BYTE PTR [rax],al
   1400131e7:	add    DWORD PTR [rax],eax
	...
   140013271:	add    BYTE PTR [rax],al
   140013273:	add    DWORD PTR [rax],eax
   140013275:	add    BYTE PTR [rax],al
   140013277:	add    al,0x0
   140013279:	add    BYTE PTR [rax],al
   14001327b:	adc    BYTE PTR [rsi+riz*2],ah
   14001327e:	mov    ebp,0xffde62ff
   140013283:	jmp    QWORD PTR [rdi]
   140013285:	ins    DWORD PTR es:[rdi],dx
   140013286:	movabs ds:0x9b5e43ffffe169ff,al
   14001328f:	inc    DWORD PTR [rsi+riz*2-0x5e]
   140013293:	inc    DWORD PTR [rsi]
   140013295:	adc    BYTE PTR [rsi],dl
   140013297:	mov    cl,0x0
   140013299:	add    BYTE PTR [rax],al
   14001329b:	ins    BYTE PTR es:[rdi],dx
   14001329c:	add    BYTE PTR [rax],al
   14001329e:	add    BYTE PTR [rax+0x0],dl
   1400132a1:	add    BYTE PTR [rax],al
   1400132a3:	sub    al,0x0
   1400132a5:	add    BYTE PTR [rax],al
   1400132a7:	adc    al,BYTE PTR [rax]
   1400132a9:	add    BYTE PTR [rax],al
   1400132ab:	(bad)  
   1400132ac:	add    BYTE PTR [rax],al
   1400132ae:	add    BYTE PTR [rcx],al
	...
   14001332c:	add    BYTE PTR [rax],al
   14001332e:	add    BYTE PTR [rcx],al
   140013330:	add    BYTE PTR [rax],al
   140013332:	add    BYTE PTR [rax],cl
   140013334:	add    BYTE PTR [rax],al
   140013336:	add    BYTE PTR [rip+0x55060100],bl        # 0x19507343c
   14001333c:	sub    al,0x6d
   14001333e:	stos   BYTE PTR es:[rdi],al
   14001333f:	jmp    QWORD PTR [rbp-0x1f]
   140013342:	(bad)  
   140013343:	jmp    QWORD PTR [rsi-0x21]
   140013346:	(bad)  
   140013347:	jmp    QWORD PTR [rsi-0x21]
   14001334a:	(bad)  
   14001334b:	jmp    QWORD PTR [rdi-0x24]
   14001334e:	(bad)  
   14001334f:	jmp    QWORD PTR [rdi-0x24]
   140013352:	(bad)  
   140013353:	dec    DWORD PTR [rdi+0x11ffe4cd]
   140013359:	xor    bl,BYTE PTR [rbx-0x15]
   14001335c:	add    BYTE PTR [rcx],al
   14001335e:	add    ecx,DWORD PTR [rdx+0x5d000000]
   140013364:	add    BYTE PTR [rax],al
   140013366:	add    BYTE PTR [rsi],bh
   140013368:	add    BYTE PTR [rax],al
   14001336a:	add    BYTE PTR [rcx],ah
   14001336c:	add    BYTE PTR [rax],al
   14001336e:	add    BYTE PTR [rbx],cl
   140013370:	add    BYTE PTR [rax],al
   140013372:	add    BYTE PTR [rdx],al
	...
   1400133e8:	add    BYTE PTR [rax],al
   1400133ea:	add    BYTE PTR [rcx],al
   1400133ec:	add    BYTE PTR [rax],al
   1400133ee:	add    BYTE PTR [rcx],cl
   1400133f0:	add    BYTE PTR [rsi],al
   1400133f2:	or     eax,0x2c180133
   1400133f7:	xchg   esi,eax
   1400133f8:	xchg   rdx,rax
   1400133fa:	(bad)  
   1400133fb:	(bad)  
   1400133fc:	mov    eax,edx
   1400133fe:	in     al,dx
   1400133ff:	jmp    QWORD PTR [rcx+riz*8-0x1]
   140013403:	jmp    QWORD PTR [rax+riz*8-0x1]
   140013407:	jmp    QWORD PTR [rdi+rbx*8-0x1]
   14001340b:	jmp    QWORD PTR [rbp-0x21]
   14001340e:	(bad)  
   14001340f:	jmp    FWORD PTR [rbp-0x1f]
   140013412:	(bad)  
   140013413:	call   FWORD PTR [rbp+0x28ffeddc]
   140013419:	ins    DWORD PTR es:[rdi],dx
   14001341a:	mov    dh,0xff
   14001341c:	sbb    BYTE PTR [rdi+0x7b],al
   14001341f:	icebp  
   140013420:	or     DWORD PTR [rax],ebx
   140013422:	(bad)  
   140013423:	mov    ecx,0x7b030000
   140013428:	add    BYTE PTR [rax],al
   14001342a:	add    BYTE PTR [rdi+0x0],cl
   14001342d:	add    BYTE PTR [rax],al
   14001342f:	sub    al,BYTE PTR [rax]
   140013431:	add    BYTE PTR [rax],al
   140013433:	or     eax,0x2000000
	...
   1400134a8:	add    BYTE PTR [rax],al
   1400134aa:	add    BYTE PTR [rax],cl
   1400134ac:	add    BYTE PTR [rsi],cl
   1400134ae:	sbb    bh,BYTE PTR [rdx]
   1400134b0:	sbb    edx,DWORD PTR [rdx+0x7b]
   1400134b3:	retf   0xb762
   1400134b6:	hlt    
   1400134b7:	(bad)  
   1400134b8:	mov    ecx,0xc4ffffe1
   1400134bd:	(bad)  
   1400134be:	(bad)  
   1400134bf:	jmp    QWORD PTR [rax-0x21]
   1400134c2:	(bad)  
   1400134c3:	jmp    QWORD PTR [rbx-0x21]
   1400134c6:	(bad)  
   1400134c7:	jmp    QWORD PTR [rbx-0x21]
   1400134ca:	(bad)  
   1400134cb:	jmp    QWORD PTR [rbp-0x21]
   1400134ce:	(bad)  
   1400134cf:	jmp    FWORD PTR [rcx-0x21]
   1400134d2:	(bad)  
   1400134d3:	push   QWORD PTR [rcx+0x3afffbef]
   1400134d9:	mov    dl,ah
   1400134db:	push   QWORD PTR [rbx]
   1400134dd:	mov    esi,esp
   1400134df:	jmp    FWORD PTR [rbx]
   1400134e1:	jo     0x14001349b
   1400134e3:	call   FWORD PTR [rax]
   1400134e5:	rex jno 0x1400134c5
   1400134e8:	add    al,BYTE PTR [rdi]
   1400134ea:	(bad)  
   1400134eb:	xchg   ecx,eax
   1400134ec:	add    BYTE PTR [rax],al
   1400134ee:	add    BYTE PTR [rbx+0x0],dl
   1400134f1:	add    BYTE PTR [rax],al
   1400134f3:	sub    DWORD PTR [rax],eax
   1400134f5:	add    BYTE PTR [rax],al
   1400134f7:	or     eax,DWORD PTR [rax]
   1400134f9:	add    BYTE PTR [rax],al
   1400134fb:	add    DWORD PTR [rax],eax
	...
   140013565:	add    BYTE PTR [rax],al
   140013567:	add    al,0x4
   140013569:	(bad)  
   14001356a:	xor    BYTE PTR [rbx],dh
   14001356c:	sub    BYTE PTR [rcx-0x5c],dh
   14001356f:	(bad)  
   140013570:	rex.WRX mov cl,0xf9
   140013573:	inc    DWORD PTR [rbx+0x79ffffca]
   140013579:	ret    0xfff3
   14001357c:	push   rbp
   14001357d:	int3   
   14001357e:	std    
   14001357f:	call   FWORD PTR [rcx-0x2c]
   140013582:	std    
   140013583:	call   FWORD PTR [rdi-0x27]
   140013586:	(bad)  
   140013587:	jmp    QWORD PTR [rax-0x25]
   14001358a:	(bad)  
   14001358b:	call   FWORD PTR [rdi-0x25]
   14001358e:	(bad)  
   14001358f:	jmp    QWORD PTR [rcx-0x27]
   140013592:	(bad)  
   140013593:	push   QWORD PTR [rcx+0x5bfff8ed]
   140013599:	sahf   
   14001359a:	sar    edi,cl
   14001359c:	rex.WRX (bad) 
   14001359e:	sar    edi,cl
   1400135a0:	ds xchg ecx,eax
   1400135a2:	out    0xff,al
   1400135a4:	cmp    BYTE PTR [rsi+0x481affd5],al
   1400135aa:	jne    0x14001358c
   1400135ac:	add    cl,BYTE PTR [rax]
   1400135ae:	setno  BYTE PTR [rax]
   1400135b1:	add    BYTE PTR [rax],al
   1400135b3:	rex.WRB add BYTE PTR [r8],r8b
   1400135b6:	add    BYTE PTR [rax],ah
   1400135b8:	add    BYTE PTR [rax],al
   1400135ba:	add    BYTE PTR [rsi],al
	...
   140013624:	add    DWORD PTR [rsi],ecx
   140013626:	(bad)  
   140013627:	adc    eax,0xc39c6c29
   14001362c:	rex.RXB lods eax,DWORD PTR ds:[rsi]
   14001362e:	stc    
   14001362f:	call   QWORD PTR [rdx-0x53]
   140013632:	idiv   bh
   140013634:	rex.RB movabs ds:0xc550fff7b54dffeb,eax
   14001363e:	sti    
   14001363f:	call   FWORD PTR [rcx-0x30]
   140013642:	cld    
   140013643:	call   FWORD PTR [rsi+rdx*8-0x3]
   140013647:	call   FWORD PTR [rbp-0x2a]
   14001364a:	std    
   14001364b:	call   FWORD PTR [rbp-0x29]
   14001364e:	std    
   14001364f:	call   FWORD PTR [rdx-0x2e]
   140013652:	std    
   140013653:	call   QWORD PTR [rsi-0x31]
   140013656:	std    
   140013657:	call   QWORD PTR [rcx-0x39]
   14001365a:	(bad)  
   14001365b:	call   FWORD PTR [rdx-0x44]
   14001365e:	icebp  
   14001365f:	call   FWORD PTR [rbp-0x59]
   140013662:	(bad)  
   140013664:	rex.WRXB lahf 
   140013666:	out    0xff,al
   140013668:	pop    rcx
   140013669:	movabs ds:0x100d6683e15ffe3,al
   140013672:	add    edi,DWORD PTR [rdx+0x0]
   140013675:	add    BYTE PTR [rax],al
   140013677:	cmp    eax,0x12000000
   14001367c:	add    BYTE PTR [rax],al
   14001367e:	add    BYTE PTR [rcx],al
	...
   1400136e0:	add    BYTE PTR [rax],al
   1400136e2:	add    BYTE PTR [rbx],al
   1400136e4:	sub    BYTE PTR [rbx-0x73],ah
   1400136e7:	jle    0x14001373a
   1400136e9:	mov    bl,0xf6
   1400136eb:	jmp    QWORD PTR [rsp+rdi*4-0x3]
   1400136ef:	inc    DWORD PTR [rax-0x66]
   1400136f2:	loop   0x1400136f3
   1400136f4:	rex.R cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400136f6:	hlt    
   1400136f7:	dec    DWORD PTR [rax-0x4c]
   1400136fa:	sti    
   1400136fb:	dec    DWORD PTR [rdi-0x3e]
   1400136fe:	sti    
   1400136ff:	call   QWORD PTR [rsp+rcx*8-0x4]
   140013703:	call   FWORD PTR [rcx-0x2f]
   140013706:	cld    
   140013707:	call   FWORD PTR [rdx-0x30]
   14001370a:	cld    
   14001370b:	call   FWORD PTR [rax-0x32]
   14001370e:	cld    
   14001370f:	call   QWORD PTR [rbp-0x35]
   140013712:	cld    
   140013713:	dec    DWORD PTR [rbp-0x3c]
   140013716:	cld    
   140013717:	call   QWORD PTR [rdx-0x3c]
   14001371a:	std    
   14001371b:	jmp    QWORD PTR [rbx-0x1f]
   14001371e:	(bad)  
   14001371f:	jmp    QWORD PTR [rsi-0x2b]
   140013722:	cld    
   140013723:	call   FWORD PTR [rbx-0x58]
   140013726:	fdivp  st(7),st
   140013728:	ins    DWORD PTR es:[rdi],dx
   140013729:	mov    ch,0xf7
   14001372b:	dec    DWORD PTR [rbp+rbx*4-0x1e]
   14001372f:	dec    DWORD PTR [rsi]
   140013731:	sub    BYTE PTR [rax+rdi*4+0x0],al
   140013735:	add    BYTE PTR [rax],al
   140013737:	pop    rax
   140013738:	add    BYTE PTR [rax],al
   14001373a:	add    BYTE PTR [rip+0x6000000],ah        # 0x146013740
	...
   1400137a0:	or     al,0x29
   1400137a2:	cmp    eax,0xc88f4015
   1400137a7:	loop   0x140013739
   1400137a9:	sar    esi,1
   1400137ab:	call   FWORD PTR [rsi-0x55]
   1400137ae:	jmp    0x1400137af
   1400137b0:	rex movabs eax,ds:0xb244fffbac46ffef
   1400137ba:	cli    
   1400137bb:	dec    DWORD PTR [rdx-0x43]
   1400137be:	cli    
   1400137bf:	dec    DWORD PTR [rsi-0x3b]
   1400137c2:	cli    
   1400137c3:	call   QWORD PTR [rcx-0x39]
   1400137c6:	cli    
   1400137c7:	call   QWORD PTR [rcx-0x39]
   1400137ca:	cli    
   1400137cb:	call   QWORD PTR [rax-0x3b]
   1400137ce:	cli    
   1400137cf:	dec    DWORD PTR [rbp-0x3f]
   1400137d2:	cli    
   1400137d3:	dec    DWORD PTR [rbx-0x43]
   1400137d6:	sti    
   1400137d7:	jmp    FWORD PTR [rcx-0x23]
   1400137da:	(bad)  
   1400137db:	jmp    QWORD PTR [rdi-0x20]
   1400137de:	(bad)  
   1400137df:	jmp    QWORD PTR [rdx-0x21]
   1400137e2:	(bad)  
   1400137e3:	jmp    FWORD PTR [rsp+rcx*8-0x7]
   1400137e7:	call   FWORD PTR [rdx-0x58]
   1400137ea:	out    0xff,eax
   1400137ec:	rex.W movabs ds:0x401eda86927fff4,al
   1400137f6:	or     DWORD PTR [rax+0x38000000],eax
   1400137fc:	add    BYTE PTR [rax],al
   1400137fe:	add    BYTE PTR [rip+0x0],cl        # 0x140013804
	...
   140013860:	sub    ah,BYTE PTR [rsp+rcx*4+0x65]
   140013864:	jnp    0x140013829
   140013866:	icebp  
   140013867:	push   QWORD PTR [rax+0x38fffddb]
   14001386d:	xchg   ebx,eax
   14001386e:	loop   0x14001386f
   140013870:	rex.RB lods eax,DWORD PTR ds:[rsi]
   140013872:	cld    
   140013873:	inc    DWORD PTR [rdx-0x5c]
   140013876:	clc    
   140013877:	(bad)  
   140013878:	cmp    ah,BYTE PTR [rsi-0x48be0008]
   14001387e:	stc    
   14001387f:	inc    DWORD PTR [rdx-0x45]
   140013882:	stc    
   140013883:	inc    DWORD PTR [rdx-0x44]
   140013886:	stc    
   140013887:	inc    DWORD PTR [rax-0x46]
   14001388a:	stc    
   14001388b:	(bad)  
   14001388c:	(bad)  
   14001388d:	mov    ecx,0xb73cfff9
   140013892:	stc    
   140013893:	jmp    QWORD PTR [rdi-0x26]
   140013896:	(bad)  
   140013897:	jmp    QWORD PTR [rcx-0x24]
   14001389a:	std    
   14001389b:	call   FWORD PTR [rbp+rdx*8-0x3]
   14001389f:	call   FWORD PTR [rcx-0x2c]
   1400138a2:	cld    
   1400138a3:	call   QWORD PTR [rsi-0x2c]
   1400138a6:	(bad)  
   1400138a7:	call   QWORD PTR [rsp+riz*4-0x1f]
   1400138ab:	(bad)  
   1400138ac:	cmp    dl,BYTE PTR [rsi-0x76cd000e]
   1400138b2:	(bad)  
   1400138b4:	(bad)  
   1400138b5:	es (bad) 
   1400138b7:	lods   al,BYTE PTR ds:[rsi]
   1400138b8:	add    BYTE PTR [rax],al
   1400138ba:	add    BYTE PTR [rax+0x0],cl
   1400138bd:	add    BYTE PTR [rax],al
   1400138bf:	adc    al,0x0
	...
   14001391d:	add    BYTE PTR [rax],al
   14001391f:	add    BYTE PTR [rbx],dh
   140013921:	ja     0x1400138ca
   140013923:	mov    bh,0xb4
   140013925:	fcomip st,st(7)
   140013927:	dec    DWORD PTR [rbx+0x3cfff0bf]
   14001392d:	pushf  
   14001392e:	in     al,dx
   14001392f:	inc    DWORD PTR [rcx-0x5a]
   140013932:	clc    
   140013933:	push   QWORD PTR [rip+0x43fff795]        # 0x1840130ce
   140013939:	mov    dl,0xfa
   14001393b:	inc    DWORD PTR [rdx+rdi*4-0x5]
   14001393f:	(bad)  
   140013940:	ds mov bh,0xfb
   140013943:	(bad)  
   140013944:	cmp    eax,0x43fffbb7
   140013949:	mov    ecx,0xba46fffb
   14001394e:	sti    
   14001394f:	call   QWORD PTR [rcx-0x42]
   140013952:	sti    
   140013953:	call   FWORD PTR [rax-0x3a]
   140013956:	std    
   140013957:	call   FWORD PTR [rcx-0x38]
   14001395a:	std    
   14001395b:	call   FWORD PTR [rcx-0x38]
   14001395e:	std    
   14001395f:	call   QWORD PTR [rdx-0x3c]
   140013962:	cld    
   140013963:	dec    DWORD PTR [rax-0x38]
   140013966:	cli    
   140013967:	call   FWORD PTR [rdi-0x53]
   14001396a:	call   0x1268e716e
   14001396f:	push   QWORD PTR [rbx]
   140013971:	mov    esi,esp
   140013973:	call   FWORD PTR [rcx*2+0xcf7d]
   14001397a:	add    BYTE PTR [rax+rax*1+0x0],dl
   14001397e:	add    BYTE PTR [rdx],bl
	...
   1400139e0:	cmp    DWORD PTR [rdi-0xb182240],eax
   1400139e6:	(bad)  
   1400139e7:	call   FWORD PTR [rcx-0x62]
   1400139ea:	loope  0x1400139eb
   1400139ec:	cmp    eax,0x3efff7a1
   1400139f1:	test   al,0xf9
   1400139f3:	dec    DWORD PTR [rdx-0x2a00001e]
   1400139f9:	sti    
   1400139fa:	(bad)  
   1400139fb:	(bad)  
   1400139fc:	std    
   1400139fd:	(bad)  
   1400139fe:	(bad)  
   1400139ff:	(bad)  
   140013a00:	(bad)  
   140013a01:	(bad)  
   140013a02:	(bad)  
   140013a03:	(bad)  
   140013a04:	sti    
   140013a05:	(bad)  
   140013a06:	(bad)  
   140013a07:	push   rbp
   140013a09:	(bad)  
   140013a0a:	(bad)  
   140013a0b:	(bad)  
   140013a0c:	(bad)  
   140013a0d:	(bad)  
   140013a0e:	(bad)  
   140013a0f:	push   rbp
   140013a11:	(bad)  
   140013a12:	(bad)  
   140013a13:	(bad)  
   140013a14:	(bad)  
   140013a16:	(bad)  
   140013a17:	inc    edx
   140013a19:	cli    
   140013a1a:	(bad)  
   140013a1b:	jmp    FWORD PTR [rcx+0x6cfffff0]
   140013a21:	fdiv   st(7),st
   140013a23:	inc    DWORD PTR [rax-0x3d]
   140013a26:	(bad)  
   140013a27:	inc    DWORD PTR [rbp-0x4f]
   140013a2a:	icebp  
   140013a2b:	push   QWORD PTR [rdi]
   140013a2d:	mov    ebx,ebp
   140013a2f:	push   QWORD PTR [rsp+rcx*4]
   140013a32:	in     eax,dx
   140013a33:	jmp    QWORD PTR [rdi]
   140013a35:	addr32 test eax,0xea
   140013a3b:	pop    rbx
   140013a3c:	add    BYTE PTR [rax],al
   140013a3e:	add    BYTE PTR [rsi],bl
	...
   140013aa0:	ds xchg edi,eax
   140013aa2:	xlat   BYTE PTR ds:[rbx]
   140013aa3:	idiv   bh
   140013aa5:	(bad)  
   140013aa6:	(bad)  
   140013aa7:	push   QWORD PTR [rsi]
   140013aa9:	xchg   bh,dl
   140013aab:	inc    DWORD PTR [rsi-0x77]
   140013aae:	mov    edi,0xba8f5cff
   140013ab3:	jmp    FWORD PTR [rdx+rcx*4-0x54]
   140013ab7:	(bad)  
   140013ab8:	jp     0x140013a4a
   140013aba:	lods   al,BYTE PTR ds:[rsi]
   140013abb:	inc    DWORD PTR [rdi+rdx*4-0x6075004d]
   140013ac2:	mov    ebx,0xc0a78eff
   140013ac7:	dec    DWORD PTR [rbx-0x7600435d]
   140013acd:	movabs eax,ds:0x9a7affb79d82ffba
   140013ad6:	mov    ch,0xff
   140013ad8:	je     0x140013a78
   140013ada:	mov    ebx,0xbd9e6cff
   140013adf:	jmp    QWORD PTR [rcx-0x66]
   140013ae2:	mov    ebx,0xb88f4cff
   140013ae7:	(bad)  
   140013ae8:	cmp    ch,BYTE PTR [rdi-0x75c50008]
   140013aee:	fcos   
   140013af0:	xor    eax,0x2dfff290
   140013af5:	jns    0x140013abb
   140013af7:	stc    
   140013af8:	add    BYTE PTR [rax],al
   140013afa:	add    BYTE PTR [rbx+0x0],bl
   140013afd:	add    BYTE PTR [rax],al
   140013aff:	(bad)  
	...
   140013b60:	rex.X
   140013b61:	fcomi  st,st(6)
   140013b64:	(bad)  
   140013b65:	(bad)  
   140013b66:	(bad)  
   140013b67:	push   QWORD PTR [rbx]
   140013b69:	(bad)  
   140013b6a:	fcos   
   140013b6c:	ss pop rcx
   140013b6e:	jg     0x140013b67
   140013b70:	add    BYTE PTR [rax],al
   140013b72:	add    BYTE PTR [rdi+0x0],bl
   140013b75:	add    BYTE PTR [rax],al
   140013b77:	and    al,BYTE PTR [rax]
   140013b79:	add    BYTE PTR [rax],al
   140013b7b:	add    al,BYTE PTR [rax]
	...
   140013ba1:	add    BYTE PTR [rax],al
   140013ba3:	add    BYTE PTR [rsi],ah
   140013ba5:	ss pop rax
   140013ba7:	xchg   ebp,eax
   140013ba8:	rex.X movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013baa:	repnz push QWORD PTR [rip+0x3affd484]        # 0x17b011035
   140013bb1:	(bad)  
   140013bb2:	idiv   edi
   140013bb4:	cs jns 0x140013b78
   140013bb7:	stc    
   140013bb8:	add    BYTE PTR [rax],al
   140013bba:	add    BYTE PTR [rax+rax*1+0x0],dl
   140013bbe:	add    BYTE PTR [rdx],bl
	...
   140013c20:	rex.RB xchg r13d,eax
   140013c22:	(bad)  
   140013c23:	fucomi st,st(3)
   140013c25:	stc    
   140013c26:	(bad)  
   140013c27:	call   QWORD PTR [rbp-0x69]
   140013c2a:	in     al,0xff
   140013c2c:	cs rex.WXB jae 0x140013c25
   140013c30:	add    BYTE PTR [rax],al
   140013c32:	add    BYTE PTR [rax+rax*1+0x0],ch
   140013c36:	add    BYTE PTR [rax+rax*1],ch
   140013c39:	add    BYTE PTR [rax],al
   140013c3b:	(bad)  
	...
   140013c60:	add    BYTE PTR [rax],al
   140013c62:	add    BYTE PTR [rdx],al
   140013c64:	sub    edi,DWORD PTR [rbx]
   140013c66:	pop    rbx
   140013c67:	popf   
   140013c68:	rex.RXB cdq 
   140013c6a:	out    0xff,al
   140013c6c:	(bad)  
   140013c6d:	mov    al,bl
   140013c6f:	inc    DWORD PTR [rsi-0x5b]
   140013c72:	idiv   edi
   140013c74:	and    eax,0xe89961
   140013c79:	add    BYTE PTR [rax],al
   140013c7b:	rex.W add BYTE PTR [rax],al
   140013c7e:	add    BYTE PTR [rax+rax*1],dl
	...
   140013cdd:	add    BYTE PTR [rax],al
   140013cdf:	add    BYTE PTR [rcx-0x75],cl
   140013ce2:	mov    ebx,0xffebc7b0
   140013ce7:	dec    DWORD PTR [rbx+rdi*4+0x5f3cfff4]
   140013cee:	xchg   ebx,eax
   140013cef:	inc    DWORD PTR [rcx]
   140013cf1:	add    DWORD PTR [rdx],eax
   140013cf3:	mov    BYTE PTR [rax],al
   140013cf5:	add    BYTE PTR [rax],al
   140013cf7:	rex.X add BYTE PTR [rax],al
   140013cfa:	add    BYTE PTR [rax+rax*1],dl
   140013cfd:	add    BYTE PTR [rax],al
   140013cff:	add    al,BYTE PTR [rax]
	...
   140013d1d:	add    BYTE PTR [rax],al
   140013d1f:	add    DWORD PTR [rbx],ecx
   140013d21:	adc    DWORD PTR [rax+rdx*1],ebx
   140013d24:	and    eax,0x3cbf5d3c
   140013d29:	test   eax,ebx
   140013d2b:	dec    DWORD PTR [rcx-0x64]
   140013d2e:	jmp    0x12fab9532
   140013d33:	call   FWORD PTR [rdx]
   140013d35:	rex.XB imul ecx,r9d,0x0
   140013d39:	add    BYTE PTR [rax],al
   140013d3b:	cmp    DWORD PTR [rax],eax
   140013d3d:	add    BYTE PTR [rax],al
   140013d3f:	or     eax,0x0
	...
   140013da0:	rex.WRB test BYTE PTR [r14-0x123608d],r13b
   140013da7:	call   rbp
   140013da9:	jmp    0x140013daa
   140013dab:	(bad)  
   140013dac:	cmp    eax,0x5ffbb71
   140013db1:	or     DWORD PTR [rdi],ecx
   140013db3:	mov    ah,0x0
   140013db5:	add    BYTE PTR [rax],al
   140013db7:	(bad)  
   140013db8:	add    BYTE PTR [rax],al
   140013dba:	add    BYTE PTR [rcx],dh
   140013dbc:	add    BYTE PTR [rax],al
   140013dbe:	add    BYTE PTR [rsi],cl
   140013dc0:	add    BYTE PTR [rax],al
   140013dc2:	add    BYTE PTR [rdx],al
	...
   140013dd8:	add    BYTE PTR [rax],al
   140013dda:	add    BYTE PTR [rcx],al
   140013ddc:	add    BYTE PTR [rax],al
   140013dde:	add    BYTE PTR [rax],cl
   140013de0:	adc    ebx,DWORD PTR [rsi]
   140013de2:	xor    cl,BYTE PTR [rax+rcx*2+0x6a]
   140013de6:	xchg   ebp,eax
   140013de7:	cld    
   140013de8:	(bad)  
   140013de9:	mov    ah,al
   140013deb:	call   QWORD PTR [rsi-0x50]
   140013dee:	cli    
   140013def:	call   QWORD PTR [rcx-0x62]
   140013df2:	(bad)  
   140013df4:	adc    BYTE PTR [rcx],ch
   140013df6:	rex.XB lahf 
   140013df8:	add    BYTE PTR [rax],al
   140013dfa:	add    BYTE PTR [rax+rax*1],ah
   140013dfd:	add    BYTE PTR [rax],al
   140013dff:	(bad)  
	...
   140013e60:	gs xchg ecx,eax
   140013e62:	scas   eax,DWORD PTR es:[rdi]
   140013e63:	divps  xmm3,XMMWORD PTR [rsi-0x5181733]
   140013e6a:	(bad)  
   140013e6b:	(bad)  
   140013e6c:	jle    0x140013e1b
   140013e6e:	jmp    0x140013e6f
   140013e70:	cmp    BYTE PTR [rcx-0x7a],bl
   140013e73:	std    
   140013e74:	add    BYTE PTR [rcx],al
   140013e76:	add    dl,BYTE PTR [rax+rax*1+0x590000]
   140013e7d:	add    BYTE PTR [rax],al
   140013e7f:	xor    DWORD PTR [rax],eax
   140013e81:	add    BYTE PTR [rax],al
   140013e83:	adc    al,0x0
   140013e85:	add    BYTE PTR [rax],al
   140013e87:	(bad)  
   140013e88:	add    BYTE PTR [rax],al
   140013e8a:	add    BYTE PTR [rdx],al
   140013e8c:	add    BYTE PTR [rax],al
   140013e8e:	add    BYTE PTR [rcx],al
   140013e90:	add    BYTE PTR [rax],al
   140013e92:	add    BYTE PTR [rdx],al
   140013e94:	add    BYTE PTR [rax],al
   140013e96:	add    BYTE PTR [rip+0x10000000],al        # 0x150013e9c
   140013e9c:	add    eax,0x3e360d08
   140013ea1:	push   rcx
   140013ea2:	jo     0x140013e76
   140013ea4:	push   rax
   140013ea5:	mov    edx,ss
   140013ea7:	inc    DWORD PTR [rbx-0x6c]
   140013eaa:	in     al,0xff
   140013eac:	push   rcx
   140013ead:	mov    bl,0xfd
   140013eaf:	(bad)  
   140013eb0:	cmp    esi,DWORD PTR [rdi-0x55]
   140013eb3:	jmp    0x197164abb
   140013eb8:	add    BYTE PTR [rax],al
   140013eba:	add    BYTE PTR [rcx],dl
   140013ebc:	add    BYTE PTR [rax],al
   140013ebe:	add    BYTE PTR [rcx],al
	...
   140013f24:	pop    rax
   140013f25:	(bad)  
   140013f26:	mov    ah,0x80
   140013f28:	xchg   ebp,eax
   140013f29:	leave  
   140013f2a:	(bad)  
   140013f2b:	(bad)  
   140013f2c:	fcomi  st,st(1)
   140013f2e:	(bad)  
   140013f2f:	inc    DWORD PTR [rdi-0x78]
   140013f32:	(bad)  
   140013f34:	sub    eax,0xe96443
   140013f39:	add    BYTE PTR [rdx],al
   140013f3b:	xchg   esp,eax
   140013f3c:	add    BYTE PTR [rax],al
   140013f3e:	add    BYTE PTR [rcx+0x0],ah
   140013f41:	add    BYTE PTR [rax],al
   140013f43:	rex.X add BYTE PTR [rax],al
   140013f46:	add    BYTE PTR [rip+0x23000000],ch        # 0x163013f4c
   140013f4c:	add    BYTE PTR [rax],al
   140013f4e:	add    BYTE PTR [rax],ah
   140013f50:	add    BYTE PTR [rax],al
   140013f52:	add    BYTE PTR [rdx],ah
   140013f54:	add    BYTE PTR [rax],al
   140013f56:	add    BYTE PTR [rdx],ch
   140013f58:	add    eax,DWORD PTR [rip+0x43364f09]        # 0x183378e67
   140013f5e:	pop    rcx
   140013f5f:	(bad)  
   140013f60:	push   rdi
   140013f61:	test   cl,al
   140013f63:	dec    DWORD PTR [rcx-0x74]
   140013f66:	(bad)  
   140013f68:	gs mov esp,0xaf60fffe
   140013f6e:	in     al,dx
   140013f6f:	call   FWORD PTR [rdi]
   140013f71:	rex.XB (bad) 
   140013f73:	movabs ds:0x50000001e000000,al
	...
   140013fe4:	jbe    0x140013f77
   140013fe6:	movabs eax,ds:0xffecc6caa77e4d05
   140013fef:	dec    ebx
   140013ff1:	out    0xfd,eax
   140013ff3:	dec    DWORD PTR [rdi-0x70]
   140013ff6:	(bad)  
   140013ff8:	cmp    ebx,DWORD PTR [rbx-0x7c]
   140013ffb:	inc    BYTE PTR [rsi]
   140013ffd:	or     dl,BYTE PTR [rdx]
   140013fff:	mov    bl,0x0
   140014001:	add    DWORD PTR [rbx],eax
   140014003:	mov    DWORD PTR [rax],eax
   140014005:	add    BYTE PTR [rax],al
   140014007:	ins    BYTE PTR es:[rdi],dx
   140014008:	add    BYTE PTR [rax],al
   14001400a:	add    BYTE PTR [rax+0x0],ah
   14001400d:	add    BYTE PTR [rax],al
   14001400f:	movsxd eax,DWORD PTR [rcx]
   140014011:	add    al,BYTE PTR [rsp+rsi*2]
   140014014:	or     dl,BYTE PTR [rax]
   140014016:	sbb    DWORD PTR [rcx-0x6849faf],ebx
   14001401c:	pop    rsi
   14001401d:	mov    ah,cl
   14001401f:	dec    DWORD PTR [rdi+rax*4-0x2a]
   140014023:	push   QWORD PTR [rax+rax*8-0x6]
   140014027:	(bad)  
   140014028:	jnp    0x140013fed
   14001402a:	idiv   bh
   14001402c:	cmp    BYTE PTR [rax-0x76],ch
   14001402f:	enter  0xa02,0x12
   140014033:	xor    al,BYTE PTR [rax]
   140014035:	add    BYTE PTR [rax],al
   140014037:	or     BYTE PTR [rax],al
   140014039:	add    BYTE PTR [rax],al
   14001403b:	add    DWORD PTR [rax],eax
	...
   1400140a5:	add    BYTE PTR [rax],al
   1400140a7:	add    BYTE PTR [rsi-0x7c],ah
   1400140aa:	cdq    
   1400140ab:	and    ah,BYTE PTR [rdx-0x69]
   1400140ae:	mov    esi,0xffe9c0d7
   1400140b3:	(bad)  
   1400140b4:	(bad)  
   1400140b6:	(bad)  
   1400140b7:	inc    DWORD PTR [rsi+0x4affe6b6]
   1400140bd:	cmp    DWORD PTR [rbp-0x6c98bd01],0x765238ff
   1400140c7:	clc    
   1400140c8:	cmp    BYTE PTR [rcx+0x65],cl
   1400140cb:	test   BYTE PTR [rbp+0x57],0x73
   1400140cf:	cli    
   1400140d0:	ds pop rsi
   1400140d2:	(bad)  
   1400140d3:	inc    DWORD PTR [rdi+0x71]
   1400140d6:	lods   eax,DWORD PTR ds:[rsi]
   1400140d7:	call   QWORD PTR [rbp-0x79]
   1400140da:	(bad)  
   1400140db:	call   FWORD PTR [rdx-0x65]
   1400140de:	(bad)  
   1400140e0:	gs mov ebp,0xbb75ffff
   1400140e6:	jmp    0x1400140e7
   1400140e8:	(bad)  
   1400140e9:	jb     0x14001407f
   1400140eb:	ror    DWORD PTR [rdx],cl
   1400140ed:	and    DWORD PTR [rdx],esi
   1400140ef:	cmp    DWORD PTR [rax],eax
   1400140f1:	add    BYTE PTR [rax],al
   1400140f3:	or     DWORD PTR [rax],eax
   1400140f5:	add    BYTE PTR [rax],al
   1400140f7:	add    DWORD PTR [rax],eax
	...
   140014169:	add    BYTE PTR [rax],al
   14001416b:	add    BYTE PTR [rcx+0x7d],ch
   14001416e:	mov    ebx,DWORD PTR [rsi]
   140014170:	rex.WRXB jg 0x14001411c
   140014173:	(bad)  
   140014174:	mov    es,ebp
   140014176:	(bad)  
   140014177:	jmp    rsp
   140014179:	stc    
   14001417a:	(bad)  
   14001417b:	(bad)  
   14001417c:	(bad)  
   14001417e:	(bad)  
   14001417f:	jmp    FWORD PTR [rdi+0x76fff5d3]
   140014185:	scas   al,BYTE PTR es:[rdi]
   140014186:	call   0x11c8d838a
   14001418b:	(bad)  
   14001418c:	cmp    eax,0x6affdc88
   140014191:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140014192:	out    0xff,al
   140014194:	mov    ecx,es
   140014196:	repnz (bad) 
   140014198:	jge    0x140014161
   14001419a:	(bad)  
   14001419b:	jmp    QWORD PTR [rax-0x43]
   14001419e:	(bad)  
   14001419f:	jmp    QWORD PTR [rcx-0x53]
   1400141a2:	loope  0x1400141a3
   1400141a4:	sub    cl,BYTE PTR [rsi+0x68]
   1400141a7:	scas   eax,DWORD PTR es:[rdi]
   1400141a8:	add    eax,0x2a3320
   1400141ad:	add    BYTE PTR [rax],al
   1400141af:	(bad)  
   1400141b0:	add    BYTE PTR [rax],al
   1400141b2:	add    BYTE PTR [rcx],al
	...
   140014230:	jbe    0x1400141c3
   140014232:	movabs ds:0xbc925f7dad947606,eax
   14001423b:	out    0x95,eax
   14001423d:	(bad)  
   14001423e:	jmp    0x13fe80237
   140014243:	(bad)  
   140014244:	call   0x140014243
   140014249:	(bad)  
   14001424a:	(bad)  
   14001424b:	(bad)  
   14001424c:	(bad)  
   14001424d:	(bad)  
   14001424e:	(bad)  
   14001424f:	call   rbx
   140014251:	out    dx,eax
   140014252:	(bad)  
   140014253:	call   FWORD PTR [rcx+0x6efbf2ce]
   140014259:	scas   al,BYTE PTR es:[rdi]
   14001425a:	fdecstp 
   14001425c:	rex.R jle 0x140014207
   14001425f:	fstp   DWORD PTR [rip+0x5c533d]        # 0x1405d95a2
   140014265:	or     eax,0x1217
   14001426a:	add    BYTE PTR [rbx],al
	...
   1400142f8:	rex.RB jbe 0x140014293
   1400142fb:	and    DWORD PTR [rcx],edi
   1400142fd:	push   0x6738648e
   140014302:	mov    WORD PTR [rbp-0x65789ece],es
   140014308:	xor    DWORD PTR [rbx-0x76],esp
   14001430b:	mov    ah,0x2e
   14001430d:	(bad)  
   14001430e:	test   DWORD PTR [rbp-0x6083a7d8],ebp
   140014314:	and    cl,BYTE PTR [rdi+0x70]
   140014317:	jns    0x140014337
   140014319:	rex.RXB
   14001431a:	sbb    QWORD PTR [r9d+0x5c],r8
   14001431f:	(bad)  
   140014320:	add    BYTE PTR [rax],al
   140014322:	add    BYTE PTR [rax+rax*1],al
   140014325:	add    BYTE PTR [rax],al
   140014327:	add    DWORD PTR [rax],eax
	...
   14001442d:	add    BYTE PTR [rax],al
   14001442f:	add    bh,bh
   140014431:	(bad)  
   140014432:	cld    
   140014433:	(bad)  
   140014434:	(bad)  
   140014435:	inc    DWORD PTR [rax]
   140014437:	add    bh,bh
   140014439:	(bad)  
   14001443a:	clc    
   14001443b:	(bad)  
   14001443c:	(bad)  
   14001443d:	inc    DWORD PTR [rax]
   14001443f:	add    bh,bh
   140014441:	jmp    rax
   140014443:	ud0    edi,edi
   140014446:	add    BYTE PTR [rax],al
   140014448:	(bad)  
   140014449:	jmp    rax
   14001444b:	ud0    edi,edi
   14001444e:	add    BYTE PTR [rax],al
   140014450:	(bad)  
   140014451:	jmp    rax
   140014453:	ud0    edi,edi
   140014456:	add    BYTE PTR [rax],al
   140014458:	(bad)  
   140014459:	jmp    rax
   14001445b:	ud0    edi,edi
   14001445e:	add    BYTE PTR [rax],al
   140014460:	(bad)  
   140014461:	jmp    rax
   140014463:	ud0    edi,edi
   140014466:	add    BYTE PTR [rax],al
   140014468:	(bad)  
   140014469:	jmp    rax
   14001446b:	ud0    edi,edi
   14001446e:	add    BYTE PTR [rax],al
   140014470:	(bad)  
   140014471:	jmp    rax
   140014473:	ud0    edi,edi
   140014476:	add    BYTE PTR [rax],al
   140014478:	(bad)  
   140014479:	jmp    rax
   14001447b:	ud0    edi,edi
   14001447e:	add    BYTE PTR [rax],al
   140014480:	(bad)  
   140014481:	jmp    rax
   140014483:	ud0    edi,edi
   140014486:	add    BYTE PTR [rax],al
   140014488:	(bad)  
   140014489:	jmp    rax
   14001448b:	ud0    edi,edi
   14001448e:	add    BYTE PTR [rax],al
   140014490:	(bad)  
   140014491:	jmp    rax
   140014493:	ud0    edi,edi
   140014496:	add    BYTE PTR [rax],al
   140014498:	(bad)  
   140014499:	jmp    rax
   14001449b:	ud0    edi,edi
   14001449e:	add    BYTE PTR [rax],al
   1400144a0:	(bad)  
   1400144a1:	jmp    rax
   1400144a3:	ud0    edi,edi
   1400144a6:	add    BYTE PTR [rax],al
   1400144a8:	(bad)  
   1400144a9:	jmp    rax
   1400144ab:	ud0    edi,edi
   1400144ae:	add    BYTE PTR [rax],al
   1400144b0:	(bad)  
   1400144b1:	jmp    rax
   1400144b3:	ud0    edi,edi
   1400144b6:	add    BYTE PTR [rax],al
   1400144b8:	(bad)  
   1400144b9:	jmp    rax
   1400144bb:	ud0    edi,edi
   1400144be:	add    BYTE PTR [rax],al
   1400144c0:	(bad)  
   1400144c1:	jmp    rax
   1400144c3:	ud0    edi,edi
   1400144c6:	add    BYTE PTR [rax],al
   1400144c8:	(bad)  
   1400144c9:	jmp    rax
   1400144cb:	ud0    edi,edi
   1400144ce:	add    BYTE PTR [rax],al
   1400144d0:	(bad)  
   1400144d1:	jmp    rax
   1400144d3:	ud0    edi,edi
   1400144d6:	add    BYTE PTR [rax],al
   1400144d8:	(bad)  
   1400144d9:	jmp    rax
   1400144db:	ud0    edi,edi
   1400144de:	add    BYTE PTR [rax],al
   1400144e0:	(bad)  
   1400144e1:	jmp    rax
   1400144e3:	ud0    edi,edi
   1400144e6:	add    BYTE PTR [rax],al
   1400144e8:	(bad)  
   1400144e9:	inc    eax
   1400144eb:	add    edi,edi
   1400144ed:	inc    DWORD PTR [rax]
   1400144ef:	add    bh,bh
   1400144f1:	inc    DWORD PTR [rax]
   1400144f3:	add    bh,bh
   1400144f5:	inc    DWORD PTR [rax]
   1400144f7:	add    bh,bh
   1400144f9:	inc    BYTE PTR [rax]
   1400144fb:	add    BYTE PTR [rdi-0x1],bh
   1400144fe:	add    BYTE PTR [rax],al
   140014500:	(bad)  
   140014501:	cld    
   140014502:	add    BYTE PTR [rax],al
   140014504:	(bad)  
   140014505:	inc    DWORD PTR [rax]
   140014507:	add    bh,bh
   140014509:	cld    
   14001450a:	add    BYTE PTR [rax],al
   14001450c:	(bad)  
   14001450d:	inc    DWORD PTR [rax]
   14001450f:	add    bh,bh
   140014511:	clc    
   140014512:	add    BYTE PTR [rax],al
   140014514:	(bad)  
   140014515:	inc    DWORD PTR [rax]
   140014517:	add    bh,bh
   140014519:	clc    
   14001451a:	add    BYTE PTR [rax],al
   14001451c:	ud0    eax,DWORD PTR [rax]
   14001451f:	add    bh,bh
   140014521:	lock add BYTE PTR [rax],al
   140014524:	ud0    eax,DWORD PTR [rax]
   140014527:	add    bh,bh
   140014529:	lock add BYTE PTR [rax],al
   14001452c:	ud0    eax,DWORD PTR [rax]
   14001452f:	add    bh,bh
   140014531:	lock add BYTE PTR [rax],al
   140014534:	ud0    eax,DWORD PTR [rax]
   140014537:	add    bh,bh
   140014539:	lock add BYTE PTR [rax],al
   14001453c:	ud0    eax,DWORD PTR [rax]
   14001453f:	add    bh,bh
   140014541:	lock add BYTE PTR [rax],al
   140014544:	ud0    eax,DWORD PTR [rax]
   140014547:	add    bh,bh
   140014549:	lock add BYTE PTR [rax],al
   14001454c:	ud0    eax,DWORD PTR [rax]
   14001454f:	add    bh,bh
   140014551:	lock (bad) 
   140014553:	clc    
   140014554:	ud0    eax,DWORD PTR [rax]
   140014557:	add    bh,bh
   140014559:	lock (bad) 
   14001455b:	lock ud0 eax,DWORD PTR [rax]
   14001455f:	add    bh,bh
   140014561:	lock pavgb mm1,QWORD PTR [rdi]
   140014565:	inc    DWORD PTR [rax]
   140014567:	add    bh,bh
   140014569:	lock (bad) 
   14001456b:	ror    BYTE PTR [rdi],0xff
   14001456e:	add    BYTE PTR [rax],al
   140014570:	push   rax
   140014572:	add    BYTE PTR [rax],al
   140014574:	ud0    eax,DWORD PTR [rax]
   140014577:	add    bh,bh
   140014579:	clc    
   14001457a:	add    BYTE PTR [rax],al
   14001457c:	(bad)  
   14001457d:	inc    DWORD PTR [rax]
   14001457f:	add    bh,bh
   140014581:	clc    
   140014582:	add    BYTE PTR [rax],al
   140014584:	(bad)  
   140014585:	inc    DWORD PTR [rax]
   140014587:	add    bh,bh
   140014589:	cld    
   14001458a:	add    BYTE PTR [rax],al
   14001458c:	(bad)  
   14001458d:	inc    DWORD PTR [rax]
   14001458f:	add    bh,bh
   140014591:	inc    BYTE PTR [rax]
   140014593:	add    BYTE PTR [rdi-0x1],bh
   140014596:	add    BYTE PTR [rax],al
   140014598:	(bad)  
   140014599:	inc    DWORD PTR [rax]
   14001459b:	add    edi,edi
   14001459d:	inc    DWORD PTR [rax]
   14001459f:	add    bh,bh
   1400145a1:	inc    eax
   1400145a3:	add    edi,edi
   1400145a5:	inc    DWORD PTR [rax]
   1400145a7:	add    bh,bh
   1400145a9:	(bad)  
   1400145aa:	(bad)  
   1400145ab:	(bad)  
   1400145ac:	(bad)  
   1400145ad:	inc    DWORD PTR [rax]
   1400145af:	add    BYTE PTR [rax],ch
   1400145b1:	add    BYTE PTR [rax],al
   1400145b3:	add    BYTE PTR [rax],ah
   1400145b5:	add    BYTE PTR [rax],al
   1400145b7:	add    BYTE PTR [rax+0x0],al
   1400145ba:	add    BYTE PTR [rax],al
   1400145bc:	add    DWORD PTR [rax],eax
   1400145be:	and    BYTE PTR [rax],al
   1400145c0:	add    BYTE PTR [rax],al
   1400145c2:	add    BYTE PTR [rax],al
   1400145c4:	adc    BYTE PTR [rax],0x0
	...
   140014613:	add    al,BYTE PTR [rax]
   140014615:	add    BYTE PTR [rax],al
   140014617:	adc    DWORD PTR [rax],eax
   140014619:	add    BYTE PTR [rax],al
   14001461b:	xor    DWORD PTR [rax],eax
   14001461d:	add    BYTE PTR [rax],al
   14001461f:	rex.WRB add BYTE PTR [r8],r8b
   140014622:	add    BYTE PTR [rax+rax*1+0x0],al
   140014626:	add    BYTE PTR [rsi],bl
   140014628:	add    BYTE PTR [rax],al
   14001462a:	add    BYTE PTR [rip+0x0],al        # 0x140014630
	...
   140014690:	add    BYTE PTR [rax],al
   140014692:	add    BYTE PTR [rip+0x707c4419],cl        # 0x1b07d8ab1
   140014698:	(bad)  
   140014699:	pop    rdi
   14001469a:	fwait
   14001469b:	jmp    0x1238390bb
   1400146a0:	add    BYTE PTR [rax],al
   1400146a2:	add    BYTE PTR [rbx+0x0],ch
   1400146a5:	add    BYTE PTR [rax],al
   1400146a7:	add    BYTE PTR ds:[rax],al
   1400146aa:	add    BYTE PTR [rax],dl
	...
   140014710:	(bad)  
   140014711:	push   rdx
   140014712:	xchg   ebp,eax
   140014713:	pop    rbp
   140014714:	and    eax,0x39ffb965
   140014719:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001471a:	out    dx,al
   14001471b:	jmp    FWORD PTR [riz*2+0x321bffa4]
   140014722:	rex.WRXB mov BYTE PTR [r8],0x0
   140014726:	add    BYTE PTR [rax+0x0],dl
   140014729:	add    BYTE PTR [rax],al
   14001472b:	sbb    BYTE PTR [rax],al
	...
   14001478d:	add    BYTE PTR [rax],al
   14001478f:	add    BYTE PTR [rip+0x5fffb965],ah        # 0x1a00100fa
   140014795:	(bad)  
   140014796:	(bad)  
   140014797:	push   QWORD PTR [rsi]
   140014799:	jl     0x14001475f
   14001479b:	(bad)  
   14001479c:	cmp    edx,DWORD PTR [rsi+0x5028ffec]
   1400147a2:	sub    bl,0x0
   1400147a5:	add    BYTE PTR [rax],al
   1400147a7:	rex.RX add BYTE PTR [rax],r8b
   1400147aa:	add    BYTE PTR [rbx],dl
	...
   140014810:	and    eax,0x5fffb965
   140014815:	sar    edi,1
   140014817:	push   QWORD PTR [rsi]
   140014819:	jl     0x1400147df
   14001481b:	call   FWORD PTR [rdi-0x3f]
   14001481e:	idiv   edi
   140014820:	and    ecx,DWORD PTR [rdx+0x75]
   140014823:	rol    DWORD PTR [rax],cl
   140014825:	add    BYTE PTR [rax],al
   140014827:	(bad)  
   140014828:	add    BYTE PTR [rax],al
   14001482a:	add    BYTE PTR [rax+rax*1],cl
	...
   14001488d:	add    BYTE PTR [rax],al
   14001488f:	add    BYTE PTR [rip+0x56ffb965],ah        # 0x1970101fa
   140014895:	sar    al,0xff
   140014898:	cmp    bh,BYTE PTR [rdx+rdi*4-0x1]
   14001489c:	cmp    DWORD PTR [rcx+0x604f8ba],ecx
   1400148a2:	or     BYTE PTR [rbx+0x3f000000],al
   1400148a8:	add    BYTE PTR [rax],al
   1400148aa:	add    BYTE PTR [rax],dl
	...
   140014910:	and    eax,0x51ffb965
   140014915:	mov    ecx,0x7d3bfff5
   14001491a:	mov    ecx,0xbb873eff
   14001491f:	std    
   140014920:	sbb    DWORD PTR [rdx],ebp
   140014922:	cmp    al,0xbc
   140014924:	add    BYTE PTR [rax],al
   140014926:	add    BYTE PTR [rdx+0x0],al
   140014929:	add    BYTE PTR [rax],al
   14001492b:	adc    DWORD PTR [rax],eax
	...
   14001498d:	add    BYTE PTR [rax],al
   14001498f:	add    BYTE PTR [rip+0x58ffb965],ah        # 0x1990102fa
   140014995:	retf   0xffff
   140014998:	ds jnp 0x14001494d
   14001499b:	call   QWORD PTR [rbx+rdi*4-0x4]
   14001499f:	jmp    FWORD PTR [rip+0xdd8259]        # 0x140decbfe
   1400149a5:	add    BYTE PTR [rax],al
   1400149a7:	(bad)  
   1400149a8:	add    BYTE PTR [rax],al
   1400149aa:	add    BYTE PTR [rax+rax*1],cl
	...
   140014a0d:	add    BYTE PTR [rax],al
   140014a0f:	add    BYTE PTR [rip+0x56ffb965],ah        # 0x19701037a
   140014a15:	enter  0xffff,0x38
   140014a19:	jns    0x1400149ca
   140014a1b:	call   QWORD PTR [rsi-0x3f]
   140014a1e:	(bad)  
   140014a1f:	inc    DWORD PTR [rdi]
   140014a21:	(bad)  
   140014a22:	adc    edi,DWORD PTR [rbp+0x0]
   140014a25:	add    BYTE PTR [rax],al
   140014a27:	cmp    eax,0xf000000
	...
   140014a90:	and    eax,0x53ffb965
   140014a95:	sar    ebx,0xff
   140014a98:	ss ins DWORD PTR es:[rdi],dx
   140014a9a:	movabs eax,ds:0x482e10ffbe8f48ff
   140014aa3:	mov    dh,0x0
   140014aa5:	add    BYTE PTR [rax],al
   140014aa7:	rex.WRB add BYTE PTR [r8],r8b
   140014aaa:	add    BYTE PTR [rdi],dl
	...
   140014b10:	and    eax,0x56ffb965
   140014b15:	shl    esi,0xff
   140014b18:	ss ins DWORD PTR es:[rdi],dx
   140014b1a:	movabs al,ds:0x7e582dffffc356ff
   140014b23:	in     al,0x0
   140014b25:	add    BYTE PTR [rax],al
   140014b27:	push   rdx
   140014b28:	add    BYTE PTR [rax],al
   140014b2a:	add    BYTE PTR [rcx],bl
	...
   140014b90:	and    eax,0x5fffb965
   140014b95:	iret   
   140014b96:	sti    
   140014b97:	(bad)  
   140014b98:	cmp    al,0x6d
   140014b9a:	movabs al,ds:0x7d582effffc356ff
   140014ba3:	jrcxz  0x140014ba5
   140014ba5:	add    BYTE PTR [rax],al
   140014ba7:	push   rdx
   140014ba8:	add    BYTE PTR [rax],al
   140014baa:	add    BYTE PTR [rcx],bl
	...
   140014c10:	and    eax,0x69ffb965
   140014c15:	(bad)  
   140014c17:	(bad)  
   140014c18:	cmp    ah,BYTE PTR [rbp-0x6b]
   140014c1b:	call   QWORD PTR [rsi-0x3d]
   140014c1e:	(bad)  
   140014c1f:	jmp    FWORD PTR [rdi]
   140014c21:	pop    rax
   140014c22:	jge    0x140014c07
   140014c24:	add    BYTE PTR [rax],al
   140014c26:	add    BYTE PTR [rdx+0x0],dl
   140014c29:	add    BYTE PTR [rax],al
   140014c2b:	sbb    DWORD PTR [rax],eax
	...
   140014c8d:	add    BYTE PTR [rax],al
   140014c8f:	add    BYTE PTR [rip+0x68ffb965],ah        # 0x1a90105fa
   140014c95:	(bad)  
   140014c97:	(bad)  
   140014c98:	cmp    DWORD PTR [rbx-0x6c],esp
   140014c9b:	call   QWORD PTR [rsi-0x3d]
   140014c9e:	(bad)  
   140014c9f:	jmp    FWORD PTR [rdi]
   140014ca1:	pop    rax
   140014ca2:	jge    0x140014c87
   140014ca4:	add    BYTE PTR [rax],al
   140014ca6:	add    BYTE PTR [rdx+0x0],dl
   140014ca9:	add    BYTE PTR [rax],al
   140014cab:	sbb    DWORD PTR [rax],eax
	...
   140014d0d:	add    BYTE PTR [rax],al
   140014d0f:	add    BYTE PTR [rip+0x62ffb965],ah        # 0x1a301067a
   140014d15:	fdivr  st,st(7)
   140014d17:	push   QWORD PTR [rdi]
   140014d19:	push   0xffffffffffffff9c
   140014d1b:	call   QWORD PTR [rsi-0x3d]
   140014d1e:	(bad)  
   140014d1f:	jmp    FWORD PTR [rip+0xe37c58]        # 0x140e4c97d
   140014d25:	add    BYTE PTR [rax],al
   140014d27:	pop    rcx
   140014d28:	add    BYTE PTR [rax],al
   140014d2a:	add    BYTE PTR [rdx],ah
   140014d2c:	add    BYTE PTR [rax],al
   140014d2e:	add    BYTE PTR [rax+rax*1],al
	...
   140014d89:	add    BYTE PTR [rax],al
   140014d8b:	add    DWORD PTR [rax],eax
   140014d8d:	add    BYTE PTR [rax],al
   140014d8f:	or     BYTE PTR [rip+0x5fffb965],ah        # 0x1a00106fa
   140014d95:	(bad)  
   140014d96:	(bad)  
   140014d97:	push   QWORD PTR [rbx]
   140014d99:	ins    BYTE PTR es:[rdi],dx
   140014d9a:	movabs ds:0x775529ffb87b35ff,eax
   140014da3:	out    0x0,al
   140014da5:	add    BYTE PTR [rax],al
   140014da7:	imul   eax,DWORD PTR [rax],0x390000
   140014dad:	add    BYTE PTR [rax],al
   140014daf:	sldt   WORD PTR [rax]
   140014db2:	add    BYTE PTR [rcx],al
	...
   140014e04:	add    BYTE PTR [rax],al
   140014e06:	add    BYTE PTR [rdx],al
   140014e08:	add    BYTE PTR [rax],al
   140014e0a:	add    BYTE PTR [rsi],cl
   140014e0c:	add    BYTE PTR [rax],al
   140014e0e:	add    BYTE PTR [rax],ch
   140014e10:	and    eax,0x69ffb965
   140014e15:	fdivp  st(7),st
   140014e17:	call   FWORD PTR [rsp+rcx*8-0x6]
   140014e1b:	call   FWORD PTR [rax-0x3b]
   140014e1e:	hlt    
   140014e1f:	inc    DWORD PTR [rbx-0x78]
   140014e22:	lods   al,BYTE PTR ds:[rsi]
   140014e23:	std    
   140014e24:	(bad)  
   140014e25:	sub    eax,DWORD PTR [rbx-0x4d]
   140014e28:	add    BYTE PTR [rax],al
   140014e2a:	add    BYTE PTR [rax+0x0],bl
   140014e2d:	add    BYTE PTR [rax],al
   140014e2f:	sub    eax,DWORD PTR [rax]
   140014e31:	add    BYTE PTR [rax],al
   140014e33:	or     eax,0x2000000
	...
   140014e80:	add    BYTE PTR [rax],al
   140014e82:	add    BYTE PTR [rdx],al
   140014e84:	add    BYTE PTR [rax],al
   140014e86:	add    BYTE PTR [rax],dl
   140014e88:	add    DWORD PTR [rcx],eax
   140014e8a:	add    DWORD PTR [rdx+0x32],edx
   140014e8d:	push   rax
   140014e8e:	pop    rsp
   140014e8f:	(bad)  
   140014e90:	ins    BYTE PTR es:[rdi],dx
   140014e91:	fdiv   st(7),st
   140014e93:	jmp    FWORD PTR [rbp-0x21]
   140014e96:	(bad)  
   140014e97:	jmp    QWORD PTR [rbp-0x25]
   140014e9a:	(bad)  
   140014e9b:	call   FWORD PTR [rsi-0x22]
   140014e9e:	(bad)  
   140014e9f:	call   QWORD PTR [rdi-0x43]
   140014ea2:	jmp    0x1b24869a6
   140014ea7:	loope  0x140014ea9
   140014ea9:	add    BYTE PTR [rax],al
   140014eab:	xchg   BYTE PTR [rax],al
   140014ead:	add    BYTE PTR [rax],al
   140014eaf:	push   rsi
   140014eb0:	add    BYTE PTR [rax],al
   140014eb2:	add    BYTE PTR [rip+0xe000000],ch        # 0x14e014eb8
   140014eb8:	add    BYTE PTR [rax],al
   140014eba:	add    BYTE PTR [rcx],al
	...
   140014f00:	add    BYTE PTR [rax],al
   140014f02:	add    BYTE PTR [rcx],cl
   140014f04:	or     DWORD PTR [rcx],edx
   140014f06:	(bad)  
   140014f07:	push   0x51
   140014f09:	mov    ch,BYTE PTR [rax-0x1217817]
   140014f0f:	jmp    QWORD PTR [rbp-0x2c]
   140014f12:	cld    
   140014f13:	jmp    FWORD PTR [rcx-0x1e]
   140014f16:	(bad)  
   140014f17:	jmp    QWORD PTR [rdx-0x22]
   140014f1a:	(bad)  
   140014f1b:	call   FWORD PTR [rbp-0x27]
   140014f1e:	(bad)  
   140014f1f:	call   QWORD PTR [rdi-0x3e]
   140014f22:	idiv   edi
   140014f24:	xor    BYTE PTR [rbp-0x32],bh
   140014f27:	call   FWORD PTR [rdi]
   140014f29:	rex.WRX jle 0x140014f18
   140014f2c:	add    BYTE PTR [rax],al
   140014f2e:	add    BYTE PTR [rbp+0x56000000],dl
   140014f34:	add    BYTE PTR [rax],al
   140014f36:	add    BYTE PTR [rax],ch
   140014f38:	add    BYTE PTR [rax],al
   140014f3a:	add    BYTE PTR [rcx],cl
	...
   140014f7c:	add    BYTE PTR [rax],al
   140014f7e:	add    BYTE PTR [rbx],al
   140014f80:	(bad)  
   140014f81:	or     eax,0x914c4c11
   140014f86:	ret    
   140014f87:	out    dx,eax
   140014f88:	push   0x50fffac9
   140014f8d:	mov    bh,0xf3
   140014f8f:	call   QWORD PTR [rcx-0x42]
   140014f92:	clc    
   140014f93:	call   FWORD PTR [rbx-0x2d]
   140014f96:	cld    
   140014f97:	call   FWORD PTR [rbp-0x2c]
   140014f9a:	cld    
   140014f9b:	call   QWORD PTR [rdi-0x32]
   140014f9e:	cld    
   140014f9f:	call   QWORD PTR [rax-0x3c]
   140014fa2:	cld    
   140014fa3:	inc    DWORD PTR [rbx-0x52]
   140014fa6:	stc    
   140014fa7:	push   QWORD PTR [rcx]
   140014fa9:	xchg   ecx,eax
   140014faa:	in     eax,dx
   140014fab:	call   FWORD PTR [rip+0xee8252]        # 0x140efd203
   140014fb1:	add    BYTE PTR [rax],al
   140014fb3:	mov    eax,DWORD PTR [rax]
   140014fb5:	add    BYTE PTR [rax],al
   140014fb7:	rex.W add BYTE PTR [rax],al
   140014fba:	add    BYTE PTR [rax],bl
   140014fbc:	add    BYTE PTR [rax],al
   140014fbe:	add    BYTE PTR [rdx],al
	...
   140014ffc:	add    BYTE PTR [rax],al
   140014ffe:	add    BYTE PTR [rsi],cl
   140015000:	xor    ebx,DWORD PTR [rbp+0x7f]
   140015003:	mov    edi,0xfff7b154
   140015008:	rex.RX lods eax,DWORD PTR ds:[rsi]
   14001500a:	repnz inc DWORD PTR [rdx-0x58]
   14001500e:	lock dec DWORD PTR [rsi-0x42]
   140015012:	clc    
   140015013:	call   QWORD PTR [rcx-0x3e]
   140015016:	clc    
   140015017:	call   QWORD PTR [rcx-0x3d]
   14001501a:	clc    
   14001501b:	dec    DWORD PTR [rbp-0x42]
   14001501e:	clc    
   14001501f:	dec    DWORD PTR [rcx+rdi*4-0x8]
   140015023:	jmp    FWORD PTR [rdx-0x24]
   140015026:	(bad)  
   140015027:	dec    DWORD PTR [rbp-0x3f]
   14001502a:	(bad)  
   14001502b:	jmp    FWORD PTR [rax+rdx*4]
   14001502e:	loopne 0x14001502f
   140015030:	adc    BYTE PTR [rbx],ch
   140015032:	rex.XB (bad) 
   140015034:	add    BYTE PTR [rax],al
   140015036:	add    BYTE PTR [rbx+0x0],ah
   140015039:	add    BYTE PTR [rax],al
   14001503b:	sub    al,BYTE PTR [rax]
   14001503d:	add    BYTE PTR [rax],al
   14001503f:	(bad)  
	...
   14001507c:	(bad)  
   14001507d:	sub    dh,BYTE PTR [rbx]
   14001507f:	push   rsi
   140015080:	pop    rbp
   140015081:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015082:	(bad)  
   140015084:	rex.WB scas al,BYTE PTR es:[rdi]
   140015086:	idiv   edi
   140015088:	cmp    eax,0x48fff3a7
   14001508d:	mov    dh,0xf8
   14001508f:	dec    DWORD PTR [rbx+rdi*4-0x7]
   140015093:	dec    DWORD PTR [rdi-0x42]
   140015096:	stc    
   140015097:	dec    DWORD PTR [rbp-0x42]
   14001509a:	cli    
   14001509b:	dec    DWORD PTR [rcx+rdi*4-0x9]
   14001509f:	jmp    QWORD PTR [rbp-0x2a]
   1400150a2:	(bad)  
   1400150a3:	jmp    QWORD PTR [rdx-0x2a]
   1400150a6:	std    
   1400150a7:	call   QWORD PTR [rsi-0x34]
   1400150aa:	cli    
   1400150ab:	(bad)  
   1400150ac:	cmp    BYTE PTR [rdi+0x6421ffff],ch
   1400150b2:	movabs eax,ds:0x88000000f6
   1400150bb:	cmp    BYTE PTR [rax],al
   1400150bd:	add    BYTE PTR [rax],al
   1400150bf:	or     eax,0x0
	...
   1400150fc:	xor    eax,0x6c8c5a4c
   140015101:	(bad)  
   140015102:	(bad)  
   140015103:	(bad)  
   140015104:	cmp    esp,DWORD PTR [rbp-0x2e890008]
   14001510a:	(bad)  
   14001510b:	push   QWORD PTR [rdx-0x3f00000f]
   140015111:	clc    
   140015112:	(bad)  
   140015113:	(bad)  
   140015114:	mov    esi,0xbbfffff7
   140015119:	repz (bad) 
   14001511b:	(bad)  
   14001511c:	mov    ebx,0xa9fffff1
   140015121:	out    dx,al
   140015122:	(bad)  
   140015123:	inc    DWORD PTR [rsi+0x58ffffe1]
   140015129:	iret   
   14001512a:	(bad)  
   14001512b:	(bad)  
   14001512c:	cmp    ebp,DWORD PTR [rbx+0x7a2afffa]
   140015132:	int    0xff
   140015134:	(bad)  
   140015135:	adc    DWORD PTR [rip+0xad],edx        # 0x1400151e8
   14001513b:	(bad)  
   14001513c:	add    BYTE PTR [rax],al
   14001513e:	add    BYTE PTR [rdi],cl
	...
   14001517c:	rex.RB
   14001517d:	fs je  0x140015121
   140015180:	imul   eax,esi,0xffffffff
   140015183:	(bad)  
   140015184:	cmp    DWORD PTR [rax-0x75930944],eax
   14001518a:	lods   al,BYTE PTR ds:[rsi]
   14001518b:	jmp    FWORD PTR [rdx+rcx*4-0x54]
   14001518f:	jmp    FWORD PTR [rdx+rcx*4-0x54]
   140015193:	jmp    FWORD PTR [rdx+rcx*4-0x54]
   140015197:	jmp    FWORD PTR [rdx+rcx*4-0x54]
   14001519b:	jmp    FWORD PTR [rdx+rcx*4-0x54]
   14001519f:	jmp    FWORD PTR [rdx+rcx*4-0x54]
   1400151a3:	jmp    FWORD PTR [rdx+rcx*4-0x54]
   1400151a7:	jmp    FWORD PTR [rdx+rcx*4-0x54]
   1400151ab:	push   QWORD PTR [rdi]
   1400151ad:	popf   
   1400151ae:	in     eax,0xfc
   1400151b0:	(bad)  
   1400151b1:	mov    edx,esp
   1400151b3:	call   QWORD PTR [rax]
   1400151b5:	adc    eax,0xb71c
   1400151ba:	add    BYTE PTR [rip+0xf000000],bh        # 0x14f0151c0
	...
   1400151fc:	rex.RXB
   1400151fd:	gs je  0x14001519d
   140015200:	jl     0x1400151d5
   140015202:	(bad)  
   140015203:	dec    DWORD PTR [rip+0xea4f28]        # 0x140eba131
   140015209:	add    BYTE PTR [rax],al
   14001520b:	jp     0x14001520d
   14001520d:	add    BYTE PTR [rax],al
   14001520f:	cmp    eax,DWORD PTR [rax]
   140015211:	add    BYTE PTR [rax],al
   140015213:	(bad)  
   140015214:	add    BYTE PTR [rax],al
   140015216:	add    BYTE PTR [rax+rax*1],cl
   140015219:	add    BYTE PTR [rax],al
   14001521b:	or     eax,DWORD PTR [rax]
   14001521d:	add    BYTE PTR [rax],al
   14001521f:	or     eax,DWORD PTR [rax]
   140015221:	add    BYTE PTR [rax],al
   140015223:	or     eax,DWORD PTR [rax]
   140015225:	add    BYTE PTR [rax],al
   140015227:	or     DWORD PTR [rax+0x5d],ecx
   14001522a:	jae    0x1400152a5
   14001522c:	cmp    DWORD PTR [rsi-0x6bbf092a],ecx
   140015232:	call   0x15c176336
   140015237:	mov    al,0x0
   140015239:	add    BYTE PTR [rax],al
   14001523b:	xor    eax,DWORD PTR [rax]
   14001523d:	add    BYTE PTR [rax],al
   14001523f:	or     al,BYTE PTR [rax]
	...
   140015279:	add    BYTE PTR [rax],al
   14001527b:	add    BYTE PTR [rdx],bh
   14001527d:	rex.WRXB pop r10
   14001527f:	jp     0x14001521c
   140015281:	in     eax,0xff
   140015283:	call   FWORD PTR [rcx]
   140015285:	cmp    al,0x71
   140015287:	clc    
   140015288:	add    BYTE PTR [rax],al
   14001528a:	add    BYTE PTR [rdi+0x51000000],dl
   140015290:	add    BYTE PTR [rax],al
   140015292:	add    BYTE PTR [rdi],ah
   140015294:	add    BYTE PTR [rax],al
   140015296:	add    BYTE PTR [rsi],cl
   140015298:	add    BYTE PTR [rax],al
   14001529a:	add    BYTE PTR [rip+0x1000000],al        # 0x1410152a0
   1400152a0:	add    BYTE PTR [rax],al
   1400152a2:	add    BYTE PTR [rdx],al
   1400152a4:	add    BYTE PTR [rax],al
   1400152a6:	add    BYTE PTR [rdx],cl
   1400152a8:	cmp    DWORD PTR [rax+0x69],edx
   1400152ab:	lahf   
   1400152ac:	rex.WX sahf 
   1400152ae:	lock (bad) 
   1400152b0:	(bad)  
   1400152b1:	mov    cl,ch
   1400152b3:	std    
   1400152b4:	movlps xmm2,QWORD PTR [rsi]
   1400152b7:	xchg   ecx,eax
   1400152b8:	add    BYTE PTR [rax],al
   1400152ba:	add    BYTE PTR [rcx],ah
   1400152bc:	add    BYTE PTR [rax],al
   1400152be:	add    BYTE PTR [rax+rax*1],al
	...
   1400152f9:	add    BYTE PTR [rax],al
   1400152fb:	add    BYTE PTR [rbx],ch
   1400152fd:	xor    bh,BYTE PTR [rbx]
   1400152ff:	cmp    al,0x90
   140015301:	ret    
   140015302:	(bad)  
   140015303:	mul    DWORD PTR [rdi-0x5c]
   140015306:	out    0xff,al
   140015308:	add    BYTE PTR [rdx],cl
   14001530a:	and    bl,dl
   14001530c:	add    BYTE PTR [rax],al
   14001530e:	add    BYTE PTR [rdx+0x0],bh
   140015311:	add    BYTE PTR [rax],al
   140015313:	push   rsp
   140015314:	add    BYTE PTR [rax],al
   140015316:	add    BYTE PTR [rdi],dh
   140015318:	add    BYTE PTR [rax],al
   14001531a:	add    BYTE PTR [rdx],ah
   14001531c:	add    BYTE PTR [rax],al
   14001531e:	add    BYTE PTR [rcx],bl
   140015320:	add    BYTE PTR [rax],al
   140015322:	add    BYTE PTR [rax+rax*1],bl
   140015325:	add    BYTE PTR [rax],al
   140015327:	rex (bad) 
   140015329:	rex.WR sbb rdx,0x64
   14001532d:	mov    esp,0x562bffff
   140015332:	jns    0x14001531c
   140015334:	add    BYTE PTR [rax],al
   140015336:	add    BYTE PTR [rdx+0x0],cl
   140015339:	add    BYTE PTR [rax],al
   14001533b:	sldt   WORD PTR [rax]
   14001533e:	add    BYTE PTR [rcx],al
	...
   14001537c:	rex.WR push rsp
   14001537e:	sbb    ecx,DWORD PTR gs:[rsi+0x75]
   140015382:	(bad)  
   140015383:	mov    dl,0xf9
   140015386:	(bad)  
   140015387:	(bad)  
   140015388:	cmp    al,0x77
   14001538a:	mov    ch,0xfc
   14001538c:	add    BYTE PTR [rdx],cl
   14001538e:	and    bl,ah
   140015390:	add    BYTE PTR [rbx],al
   140015392:	adc    esp,DWORD PTR [rdi+0x76080200]
   140015398:	add    BYTE PTR [rax],al
   14001539a:	add    BYTE PTR [rsi+0x0],dl
   14001539d:	add    BYTE PTR [rax],al
   14001539f:	push   rdx
   1400153a0:	add    BYTE PTR [rax],al
   1400153a2:	add    BYTE PTR [rax+0xa],dh
   1400153a5:	and    ecx,DWORD PTR [rdx+rcx*8+0x69]
   1400153a9:	stos   DWORD PTR es:[rdi],eax
   1400153aa:	repz dec DWORD PTR [rsi-0x5c]
   1400153ae:	jrcxz  0x1400153ad
   1400153b0:	adc    bl,BYTE PTR [rip+0x9924]        # 0x14001ecda
   1400153b6:	add    BYTE PTR [rdx],bl
   1400153b8:	add    BYTE PTR [rax],al
   1400153ba:	add    BYTE PTR [rax+rax*1],al
	...
   1400153fd:	add    BYTE PTR [rax],al
   1400153ff:	add    BYTE PTR [rbx],bh
   140015401:	rex.X
   140015402:	rex.WRXB
   140015403:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140015405:	xchg   esi,eax
   140015406:	mov    ah,0xe2
   140015408:	fdivr  st,st(6)
   14001540a:	(bad)  
   14001540b:	jmp    FWORD PTR [rax+0x51ffefd9]
   140015411:	jnp    0x1400153ab
   140015413:	icebp  
   140015414:	add    edx,DWORD PTR [rsi]
   140015416:	xor    bl,cl
   140015418:	add    BYTE PTR [rip+0x1504d428],cl        # 0x155062846
   14001541e:	(bad)  
   14001541f:	fldcw  WORD PTR [rbx]
   140015421:	rex.WRXB mov r14,gs
   140015424:	jl     0x1400153dc
   140015426:	stc    
   140015427:	jmp    QWORD PTR [rbp-0x40]
   14001542a:	stc    
   14001542b:	jmp    QWORD PTR [rdi]
   14001542d:	cmp    al,0x4e
   14001542f:	mov    esi,0x21000000
   140015434:	add    BYTE PTR [rax],al
   140015436:	add    BYTE PTR [rsi],al
	...
   140015484:	cmp    al,BYTE PTR [rcx+0x4f]
   140015487:	rex.RXB pop r15
   140015489:	(bad)  
   14001548a:	movabs ds:0xe2dab3ffd1b394ce,al
   140015493:	push   QWORD PTR [rdi-0x4b000019]
   140015499:	jrcxz  0x140015496
   14001549b:	jmp    FWORD PTR [rcx-0x6f000024]
   1400154a1:	fdivr  st,st(7)
   1400154a3:	call   QWORD PTR [rbx-0x6a]
   1400154a6:	mov    ebp,0x544130f2
   1400154ab:	mov    bl,0x0
   1400154ad:	add    BYTE PTR [rax],al
   1400154af:	sbb    al,BYTE PTR [rax]
   1400154b1:	add    BYTE PTR [rax],al
   1400154b3:	add    eax,0x0
	...
   140015508:	rex.RX movsxd r9d,DWORD PTR [rsi-0x7fa5c0e7]
   14001550f:	gs rex.R
   140015511:	addr32 xchg ebx,eax
   140015513:	xchg   esi,eax
   140015514:	rex.WRB jl 0x1400154c6
   140015517:	leave  
   140015518:	rex.WRB jle 0x1400154ca
   14001551b:	fstp   TBYTE PTR [rsi]
   14001551d:	addr32 nop
   14001551f:	mov    ch,0x2c
   140015521:	rex.R push rsi
   140015523:	xchg   DWORD PTR [rbx],ebp
   140015525:	xor    DWORD PTR [rbx],edi
   140015527:	cmp    eax,0x7000000
   14001552c:	add    BYTE PTR [rax],al
   14001552e:	add    BYTE PTR [rdx],al
	...
   140015594:	add    BYTE PTR [rax],al
   140015596:	add    BYTE PTR [rbx],al
   140015598:	add    BYTE PTR [rax],al
   14001559a:	add    BYTE PTR [rsi],al
   14001559c:	add    BYTE PTR [rax],al
   14001559e:	add    BYTE PTR [rdx],al
	...
   1400155d8:	(bad)  
   1400155d9:	cld    
   1400155da:	(bad)  
   1400155db:	(bad)  
   1400155dc:	(bad)  
   1400155dd:	cld    
   1400155de:	(bad)  
   1400155df:	(bad)  
   1400155e0:	(bad)  
   1400155e1:	cld    
   1400155e2:	(bad)  
   1400155e3:	(bad)  
   1400155e4:	(bad)  
   1400155e5:	cld    
   1400155e6:	(bad)  
   1400155e7:	(bad)  
   1400155e8:	(bad)  
   1400155e9:	cld    
   1400155ea:	(bad)  
   1400155eb:	(bad)  
   1400155ec:	(bad)  
   1400155ed:	cld    
   1400155ee:	(bad)  
   1400155ef:	(bad)  
   1400155f0:	(bad)  
   1400155f1:	cld    
   1400155f2:	(bad)  
   1400155f3:	(bad)  
   1400155f4:	(bad)  
   1400155f5:	cld    
   1400155f6:	(bad)  
   1400155f7:	(bad)  
   1400155f8:	(bad)  
   1400155f9:	cld    
   1400155fa:	(bad)  
   1400155fb:	(bad)  
   1400155fc:	(bad)  
   1400155fd:	cld    
   1400155fe:	(bad)  
   1400155ff:	(bad)  
   140015600:	(bad)  
   140015601:	cld    
   140015602:	(bad)  
   140015603:	(bad)  
   140015604:	(bad)  
   140015605:	cld    
   140015606:	(bad)  
   140015607:	(bad)  
   140015608:	(bad)  
   140015609:	cld    
   14001560a:	(bad)  
   14001560b:	(bad)  
   14001560c:	(bad)  
   14001560d:	cld    
   14001560e:	(bad)  
   14001560f:	(bad)  
   140015610:	(bad)  
   140015611:	cld    
   140015612:	add    edi,edi
   140015614:	push   rax
   140015616:	add    edi,edi
   140015618:	jmp    rax
   14001561a:	add    bh,bh
   14001561c:	inc    eax
   14001561e:	add    BYTE PTR [rdi-0x1],bh
   140015621:	rol    BYTE PTR [rax],0x7f
   140015624:	inc    DWORD PTR [rax-0x7f00c100]
   14001562a:	add    BYTE PTR [rdi],bh
   14001562c:	inc    DWORD PTR [rax-0x7f00c100]
   140015632:	add    BYTE PTR [rdi],bh
   140015634:	inc    DWORD PTR [rax-0x7f00c100]
   14001563a:	add    BYTE PTR [rdi],bh
   14001563c:	inc    DWORD PTR [rax-0x7f00c100]
   140015642:	add    BYTE PTR [rdi],bh
   140015644:	inc    DWORD PTR [rax-0x3f008100]
   14001564a:	add    bh,bh
   14001564c:	jmp    rax
   14001564e:	add    edi,edi
   140015650:	push   rax
   140015652:	add    edi,edi
   140015654:	(bad)  
   140015655:	(bad)  
   140015656:	(bad)  
   140015657:	jmp    FWORD PTR [rax]
   140015659:	add    BYTE PTR [rax],al
   14001565b:	add    BYTE PTR [rax],dl
   14001565d:	add    BYTE PTR [rax],al
   14001565f:	add    BYTE PTR [rax],ah
   140015661:	add    BYTE PTR [rax],al
   140015663:	add    BYTE PTR [rcx],al
   140015665:	add    BYTE PTR [rax],ah
   140015667:	add    BYTE PTR [rax],al
   140015669:	add    BYTE PTR [rax],al
   14001566b:	add    BYTE PTR [rax+0x4],al
	...
   14001569a:	add    BYTE PTR [rax],al
   14001569c:	sbb    BYTE PTR [rbp-0x47],bl
   14001569f:	ins    DWORD PTR es:[rdi],dx
   1400156a0:	xor    cl,BYTE PTR [rdi+0x7e]
   1400156a3:	inc    DWORD PTR [rcx+0x4a]
   1400156a6:	(bad)  
   1400156a7:	(bad)  
	...
   1400156dc:	(bad)  
   1400156dd:	jle    0x1400156a6
   1400156df:	dec    DWORD PTR [rax-0x33]
   1400156e2:	cld    
   1400156e3:	(bad)  
   1400156e4:	cmp    bl,BYTE PTR [rdi-0x79]
   1400156e7:	inc    DWORD PTR [rax]
	...
   140015719:	add    BYTE PTR [rax],al
   14001571b:	add    BYTE PTR [rdi],ah
   14001571d:	jle    0x1400156e6
   14001571f:	inc    DWORD PTR [rcx-0x60]
   140015722:	sar    bh,cl
   140015724:	cmp    eax,0x797555
	...
   140015759:	add    BYTE PTR [rax],al
   14001575b:	add    BYTE PTR [rdi],ah
   14001575d:	jle    0x140015726
   14001575f:	dec    DWORD PTR [rdx-0x2f]
   140015762:	cld    
   140015763:	(bad)  
   140015764:	cmp    bl,BYTE PTR [rdi-0x79]
   140015767:	inc    DWORD PTR [rax]
	...
   140015799:	add    BYTE PTR [rax],al
   14001579b:	add    BYTE PTR [rdi],ah
   14001579d:	jle    0x140015766
   14001579f:	inc    DWORD PTR [rbx-0x5f]
   1400157a2:	sar    edi,1
   1400157a4:	cmp    eax,0x797555
	...
   1400157d9:	add    BYTE PTR [rax],al
   1400157db:	add    BYTE PTR [rdi],ah
   1400157dd:	jle    0x1400157a6
   1400157df:	call   QWORD PTR [rdx+riz*8-0x3]
   1400157e3:	(bad)  
   1400157e4:	cmp    ebx,DWORD PTR [rbx-0x80]
   1400157e7:	inc    DWORD PTR [rax]
	...
   140015819:	add    BYTE PTR [rax],al
   14001581b:	add    BYTE PTR [rdi],ah
   14001581d:	jle    0x1400157e6
   14001581f:	call   FWORD PTR [rbx-0x29]
   140015822:	cld    
   140015823:	(bad)  
   140015824:	cmp    ebx,DWORD PTR [rbx-0x80]
   140015827:	inc    DWORD PTR [rax]
	...
   140015855:	add    BYTE PTR [rax],al
   140015857:	add    BYTE PTR [rcx],ah
   140015859:	movsxd edx,DWORD PTR [rax-0x3881d8ba]
   14001585f:	push   QWORD PTR [rcx-0x22]
   140015862:	cld    
   140015863:	(bad)  
   140015864:	cmp    ebx,DWORD PTR [rbx-0x80]
   140015867:	call   QWORD PTR [rcx]
   140015869:	push   rcx
   14001586a:	jge    0x1400158a1
	...
   140015894:	cs jb  0x140015837
   140015897:	push   rsi
   140015898:	xor    al,0x87
   14001589a:	(bad)  
   14001589b:	call   FWORD PTR [rsi-0x40]
   14001589e:	lock call QWORD PTR [rbx-0x35]
   1400158a2:	(bad)  
   1400158a3:	call   QWORD PTR [rbx+rsi*4-0x23]
   1400158a7:	(bad)  
   1400158a8:	(bad)  
   1400158a9:	push   rax
   1400158aa:	imul   edi,edi,0x417d5111
	...
   1400158d0:	cmp    eax,DWORD PTR [rax-0x78cbb24f]
   1400158d6:	enter  0x55ff,0xba
   1400158da:	idiv   edi
   1400158dc:	push   rdi
   1400158dd:	ret    0xfff9
   1400158e0:	rex.WRB mov r15b,0xf9
   1400158e3:	jmp    FWORD PTR [rbx-0x2a]
   1400158e6:	sti    
   1400158e7:	dec    DWORD PTR [rax-0x5a]
   1400158ea:	call   0x1a75098ee
   1400158ef:	call   QWORD PTR [rdx]
   1400158f1:	push   rsp
   1400158f2:	xor    DWORD PTR [rsi],0x0
	...
   14001590d:	add    BYTE PTR [rax],al
   14001590f:	add    BYTE PTR [rax],bh
   140015911:	jle    0x1400158cb
   140015913:	loope  0x14001596c
   140015915:	sar    ecx,0xff
   140015918:	push   rbx
   140015919:	mov    bh,0xf9
   14001591b:	call   QWORD PTR [rbx-0x70000112]
   140015921:	in     al,dx
   140015922:	(bad)  
   140015923:	call   QWORD PTR [rbp-0x4c]
   140015926:	repz dec DWORD PTR [rbp+0x52fffee3]
   14001592d:	mov    edx,0x5137ffe2
   140015932:	outs   dx,BYTE PTR ds:[rsi]
   140015933:	fiadd  DWORD PTR [rax]
	...
   14001594d:	add    BYTE PTR [rax],al
   14001594f:	add    BYTE PTR [rbx+rax*4],bh
   140015952:	mov    ebx,0xf9c65cfc
   140015957:	jmp    FWORD PTR [rdx+rcx*4-0x54]
   14001595b:	jmp    FWORD PTR [rdx+rcx*4-0x54]
   14001595f:	jmp    FWORD PTR [rdx+rcx*4-0x54]
   140015963:	jmp    FWORD PTR [rdx+rcx*4-0x54]
   140015967:	jmp    FWORD PTR [rdx+rcx*4-0x54]
   14001596b:	jmp    QWORD PTR [rbp-0x2b]
   14001596e:	cli    
   14001596f:	(bad)  
   140015970:	cmp    dl,BYTE PTR [rax+0x6b]
   140015973:	cld    
	...
   140015990:	cmp    al,0x83
   140015992:	mov    esp,0xfad25fe7
   140015997:	dec    DWORD PTR [rbp+0x67]
   14001599a:	test   bh,bh
	...
   1400159a8:	push   rax
   1400159a9:	nop
   1400159aa:	sar    edi,0x56
   1400159ad:	mov    ebx,0x4e3cffe1
   1400159b2:	push   0xdf
	...
   1400159cf:	add    BYTE PTR [rbp-0x78],al
   1400159d2:	rcl    DWORD PTR [rdx-0x2f62b7],0x7d
   1400159d9:	jrcxz  0x1400159d5
   1400159db:	dec    DWORD PTR [rbp-0x7b]
   1400159de:	sahf   
   1400159df:	call   QWORD PTR [rdi+riz*2-0x79]
   1400159e3:	call   QWORD PTR [rcx+rdi*2-0x64]
   1400159e7:	call   QWORD PTR [rbp-0x41]
   1400159ea:	hlt    
   1400159eb:	loope  0x140015a38
   1400159ed:	mov    WORD PTR [rdx+0x7d5b34ff],gs
   1400159f3:	test   DWORD PTR [rax],eax
	...
   140015a0d:	add    BYTE PTR [rax],al
   140015a0f:	add    BYTE PTR [rsp+rdx*4-0x3a],cl
   140015a13:	sbb    BYTE PTR [rdi-0x76],al
   140015a16:	shr    DWORD PTR [rcx+rcx*2+0x71ffcd9a],0xd5
   140015a1e:	cmc    
   140015a1f:	push   QWORD PTR [rcx+rbp*8-0x2]
   140015a23:	push   QWORD PTR [rax-0x2c]
   140015a26:	repz dec DWORD PTR [rbp-0x6e]
   140015a2a:	mov    dl,0xff
   140015a2c:	cmp    ah,BYTE PTR [rdi-0x74]
   140015a2f:	pushf  
   140015a30:	(bad)  
   140015a31:	jae    0x1400159d5
   140015a33:	and    BYTE PTR [rax],al
	...
   140015a51:	add    BYTE PTR [rax],al
   140015a53:	add    BYTE PTR [rsp+rdx*4-0x3a],cl
   140015a57:	sbb    BYTE PTR [rax-0x73],cl
   140015a5a:	ret    
   140015a5b:	(bad)  
   140015a5c:	rex.XB mov edi,DWORD PTR [r11-0x4574bc39]
   140015a63:	sti    
   140015a64:	mov    BYTE PTR [rdi-0x5f89be25],sil
   140015a6b:	(bad)  
   140015a6c:	cmp    al,0x82
   140015a6e:	mov    dl,0x20
	...
   140015a80:	(bad)  
   140015a81:	(bad)  
   140015a82:	add    BYTE PTR [rax],al
   140015a84:	(bad)  
   140015a85:	(bad)  
   140015a86:	add    BYTE PTR [rax],al
   140015a88:	(bad)  
   140015a89:	(bad)  
   140015a8a:	add    BYTE PTR [rax],al
   140015a8c:	(bad)  
   140015a8d:	(bad)  
   140015a8e:	add    BYTE PTR [rax],al
   140015a90:	(bad)  
   140015a91:	(bad)  
   140015a92:	add    BYTE PTR [rax],al
   140015a94:	(bad)  
   140015a95:	(bad)  
   140015a96:	add    BYTE PTR [rax],al
   140015a98:	(bad)  
   140015a99:	(bad)  
   140015a9a:	add    BYTE PTR [rax],al
   140015a9c:	cld    
   140015a9d:	(bad)  
   140015a9e:	add    BYTE PTR [rax],al
   140015aa0:	clc    
   140015aa1:	sldt   WORD PTR [rax]
   140015aa4:	lock (bad) 
   140015aa6:	add    BYTE PTR [rax],al
   140015aa8:	lock (bad) 
   140015aaa:	add    BYTE PTR [rax],al
   140015aac:	lock (bad) 
   140015aae:	add    BYTE PTR [rax],al
   140015ab0:	icebp  
   140015ab1:	mov    DWORD PTR [rax],0x7f000
   140015ab7:	add    al,dh
   140015ab9:	(bad)  
   140015aba:	add    BYTE PTR [rax],al
   140015abc:	clc    
   140015abd:	sldt   WORD PTR [rax]
   140015ac0:	add    BYTE PTR [rax],al
   140015ac2:	add    DWORD PTR [rax],eax
   140015ac4:	or     al,BYTE PTR [rax]
   140015ac6:	xor    BYTE PTR [rax],dh
   140015ac8:	adc    BYTE PTR [rax],al
   140015aca:	add    DWORD PTR [rax],eax
   140015acc:	add    al,0x0
   140015ace:	push   0x1000006
   140015ad3:	add    BYTE PTR [rax],ah
   140015ad5:	and    BYTE PTR [rax],dl
   140015ad7:	add    BYTE PTR [rcx],al
   140015ad9:	add    BYTE PTR [rax+rax*1],al
   140015adc:	call   0x142015ae3
   140015ae1:	add    BYTE PTR [rax],dl
   140015ae3:	adc    BYTE PTR [rax],dl
   140015ae5:	add    BYTE PTR [rcx],al
   140015ae7:	add    BYTE PTR [rax+rax*1],al
   140015aea:	sub    BYTE PTR [rcx],al
   140015aec:	add    BYTE PTR [rax],al
   140015aee:	add    eax,DWORD PTR [rax]
   140015af0:	xor    BYTE PTR [rax],dh
   140015af2:	add    BYTE PTR [rax],al
   140015af4:	add    DWORD PTR [rax],eax
   140015af6:	or     BYTE PTR [rax],al
   140015af8:	test   al,0xe
   140015afa:	add    BYTE PTR [rax],al
   140015afc:	add    al,0x0
   140015afe:	and    BYTE PTR [rax],ah
   140015b00:	add    BYTE PTR [rax],al
   140015b02:	add    DWORD PTR [rax],eax
   140015b04:	or     BYTE PTR [rax],al
   140015b06:	test   al,0x8
   140015b08:	add    BYTE PTR [rax],al
   140015b0a:	add    eax,0x101000
   140015b0f:	add    BYTE PTR [rcx],al
   140015b11:	add    BYTE PTR [rax],cl
   140015b13:	add    BYTE PTR [rax+0x5],ch
   140015b16:	add    BYTE PTR [rax],al
   140015b18:	(bad)  
   140015b19:	add    BYTE PTR [rax],al
   140015b1b:	add    BYTE PTR [rax],al
   140015b1d:	add    BYTE PTR [rcx],al
   140015b1f:	add    BYTE PTR [rax],ah
   140015b21:	add    BYTE PTR [rbp+rbx*2+0x70000],ah
   140015b28:	xor    BYTE PTR [rax],dh
   140015b2a:	add    BYTE PTR [rax],al
   140015b2c:	add    DWORD PTR [rax],eax
   140015b2e:	and    BYTE PTR [rax],al
   140015b30:	test   al,0x25
   140015b32:	add    BYTE PTR [rax],al
   140015b34:	or     BYTE PTR [rax],al
   140015b36:	and    BYTE PTR [rax],ah
   140015b38:	add    BYTE PTR [rax],al
   140015b3a:	add    DWORD PTR [rax],eax
   140015b3c:	and    BYTE PTR [rax],al
   140015b3e:	test   al,0x10
   140015b40:	add    BYTE PTR [rax],al
   140015b42:	or     DWORD PTR [rax],eax
   140015b44:	adc    BYTE PTR [rax],dl
   140015b46:	add    BYTE PTR [rax],al
   140015b48:	add    DWORD PTR [rax],eax
   140015b4a:	and    BYTE PTR [rax],al
   140015b4c:	push   0xa000004
   140015b51:	add    BYTE PTR [rax],al
   140015b53:	add    BYTE PTR [rax],al
   140015b55:	add    BYTE PTR [rax],al
   140015b57:	add    ch,cl
   140015b59:	dec    ch
   140015b5b:	(bad)  
   140015b5c:	loopne 0x140015b5e
   140015b5e:	add    BYTE PTR [rax],al
   140015b60:	add    BYTE PTR [rax],al
   140015b62:	add    DWORD PTR [rax],eax
   140015b64:	add    BYTE PTR [rax],al
   140015b66:	add    BYTE PTR [rax],al
   140015b68:	adc    DWORD PTR [rax],eax
   140015b6a:	add    BYTE PTR [rax],al
   140015b6c:	add    BYTE PTR [rax],al
   140015b6e:	add    BYTE PTR [rax],al
   140015b70:	add    al,BYTE PTR [rax]
   140015b72:	add    BYTE PTR [rax],al
   140015b74:	(bad)  
   140015b75:	jmp    0x140015b9b
   140015b77:	or     DWORD PTR [rbp-0x6b0b43f],eax
   140015b7d:	rex.RB fld TBYTE PTR [r10+0x5b]
   140015b81:	lods   al,BYTE PTR ds:[rsi]
   140015b82:	bnd jmp 0x140015b9c
   140015b85:	sub    eax,0x12715ee7
   140015b8a:	vshufpd xmm9,xmm9,XMMWORD PTR [rdi+rcx*4-0x6cba79e8],0x2e
	...
   140015bac:	mov    BYTE PTR [rax],al
   140015bae:	add    BYTE PTR [rax],al
   140015bb0:	sbb    al,0x0
   140015bb2:	add    BYTE PTR [rax],al
   140015bb4:	test   al,0x0
   140015bb6:	add    BYTE PTR [rax],al
   140015bb8:	adc    BYTE PTR [rax],al
   140015bba:	add    BYTE PTR [rax],al
   140015bbc:	mov    eax,0xe000000
   140015bc1:	add    BYTE PTR [rax],al
   140015bc3:	add    al,cl
   140015bc5:	add    BYTE PTR [rax],al
   140015bc7:	add    BYTE PTR [rax],cl
	...
   140015bd1:	add    BYTE PTR [rax],al
   140015bd3:	add    al,dl
   140015bd5:	add    BYTE PTR [rax],al
   140015bd7:	add    BYTE PTR [rax+rax*1],cl
   140015bda:	add    BYTE PTR [rax],al
   140015bdc:	add    BYTE PTR [rax],al
   140015bde:	add    BYTE PTR [rax],al
   140015be0:	push   rbp
   140015be1:	add    BYTE PTR [rcx+0x0],cl
   140015be4:	rex.RX add BYTE PTR [rcx+0x0],r9b
   140015be8:	rex.WR add BYTE PTR [rbp+0x0],r8b
   140015bec:	add    BYTE PTR [rax],al
   140015bee:	rex.WRB add BYTE PTR [r13+0x0],r10b
   140015bf2:	rex.WB add BYTE PTR [r8],al
	...
   140015bfd:	add    BYTE PTR [rax],al
   140015bff:	add    BYTE PTR [rbx],al
   140015c01:	add    BYTE PTR [rax],al
   140015c03:	add    BYTE PTR [rsi],cl
   140015c05:	add    BYTE PTR [rax],al
   140015c07:	add    BYTE PTR [rax],dl
   140015c09:	add    BYTE PTR [rax],al
   140015c0b:	add    BYTE PTR [rax],bl
   140015c0d:	add    BYTE PTR [rax],al
   140015c0f:	add    BYTE PTR [rbp+0x0],cl
   140015c12:	push   rbp
   140015c13:	add    BYTE PTR [rcx+0x0],cl
	...
   140015c1e:	add    BYTE PTR [rax],al
   140015c20:	(bad)  
   140015c21:	add    BYTE PTR [rax],al
   140015c23:	add    BYTE PTR [rax],dl
   140015c25:	add    BYTE PTR [rax],al
   140015c27:	add    BYTE PTR [rbp+0x0],ah
   140015c2a:	outs   dx,BYTE PTR ds:[rsi]
   140015c2b:	add    BYTE PTR [rip+0x53005500],ch        # 0x19301b131
   140015c31:	add    BYTE PTR [rax],al
   140015c33:	add    BYTE PTR [rax],al
   140015c35:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

0000000140016000 <.reloc>:
   140016000:	add    BYTE PTR [rax+0x0],al
   140016003:	add    BYTE PTR [rax+0x0],dl
   140016006:	add    BYTE PTR [rax],al
   140016008:	loopne 0x140015fad
   14001600a:	call   0x150a558b2
   14001600f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140016010:	sbb    BYTE PTR [rax+rsi*4-0x175b475c],ah
   140016017:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140016018:	lock cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001601a:	clc    
   14001601b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001601c:	add    BYTE PTR [rdi-0x58ef58f8],ah
   140016022:	sbb    BYTE PTR [rdi-0x58d758e0],ah
   140016028:	xor    BYTE PTR [rdi-0x58bf58c8],ah
   14001602e:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   140016030:	push   rax
   140016031:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140016032:	pop    rax
   140016033:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140016034:	(bad)  
   140016035:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140016036:	push   0x78a770a7
   14001603b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001603c:	and    BYTE PTR [rdi-0x586f5878],0x98
   140016043:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140016044:	movabs al,ds:0x90a888a880a868a7
   14001604d:	test   al,0x0
	...
