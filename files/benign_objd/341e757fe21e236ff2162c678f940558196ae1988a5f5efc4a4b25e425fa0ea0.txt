
341e757fe21e236ff2162c678f940558196ae1988a5f5efc4a4b25e425fa0ea0.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x2f1a5]        # 0x4301c0
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x2f1a6]        # 0x4301d0
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x2f1a9]        # 0x4301e0
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x2f16c]        # 0x4301b0
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x2ef6f]        # 0x42ffc0
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x2f141]        # 0x4301a0
  40105f:	mov    DWORD PTR [rip+0x31fa3],edx        # 0x433008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x4162f8
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x410940
  401081:	mov    rdx,QWORD PTR [rip+0x2efc8]        # 0x430050
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x2efae]        # 0x430040
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x2f034]        # 0x4300d0
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x2ef4b]        # 0x42fff0
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x410520
  4010af:	mov    rax,QWORD PTR [rip+0x2ee9a]        # 0x42ff50
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x4162f8
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0xf6f9]        # 0x410820
  401127:	call   0x410810
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x2ef95]        # 0x430100
  40116b:	lea    r8,[rip+0x31ea6]        # 0x433018
  401172:	lea    rdx,[rip+0x31ea7]        # 0x433020
  401179:	lea    rcx,[rip+0x31ea8]        # 0x433028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x31e78],eax        # 0x433000
  401188:	lea    rax,[rip+0x31e71]        # 0x433000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x2ef25]        # 0x4300c0
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x416310
  4011a3:	mov    DWORD PTR [rip+0x31e67],eax        # 0x433010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x2efda]        # 0x4301a0
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x2ee2b]        # 0x430020
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x34546]        # 0x435748
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x2ee07]        # 0x430030
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x31dba],0x1        # 0x433004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x2ed3c]        # 0x42ffa0
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x410b30
  40127d:	lea    rcx,[rip+0xfe4c]        # 0x4110d0
  401284:	call   QWORD PTR [rip+0x344b6]        # 0x435740
  40128a:	mov    rdx,QWORD PTR [rip+0x2ed7f]        # 0x430010
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x410fe0
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x416340
  4012a5:	call   0x410920
  4012aa:	mov    rax,QWORD PTR [rip+0x2ed0f]        # 0x42ffc0
  4012b1:	mov    QWORD PTR [rip+0x331e0],rax        # 0x434498
  4012b8:	mov    rax,QWORD PTR [rip+0x2ed21]        # 0x42ffe0
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x33179],rax        # 0x434490
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x15cca],eax        # 0x417000
  401336:	mov    r12d,DWORD PTR [rip+0x31ceb]        # 0x433028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x4161d0
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x31cc2]        # 0x433020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x416150
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x4161d0
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x4161b8
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x31c6a],rbp        # 0x433020
  4013b6:	call   0x4104f0
  4013bb:	mov    rax,QWORD PTR [rip+0x2ec0e]        # 0x42ffd0
  4013c2:	mov    rdx,QWORD PTR [rip+0x31c4f]        # 0x433018
  4013c9:	mov    ecx,DWORD PTR [rip+0x31c59]        # 0x433028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x31c3c]        # 0x433018
  4013dc:	mov    rdx,QWORD PTR [rip+0x31c3d]        # 0x433020
  4013e3:	call   0x416630
  4013e8:	mov    ecx,DWORD PTR [rip+0x31c1a]        # 0x433008
  4013ee:	mov    DWORD PTR [rip+0x31c18],eax        # 0x43300c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x31c02]        # 0x433004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x4162e0
  40140b:	mov    eax,DWORD PTR [rip+0x31bfb]        # 0x43300c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x2ebf9]        # 0x430030
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x4162e8
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x2ec2d]        # 0x430090
  401463:	mov    rcx,QWORD PTR [rip+0x2ec16]        # 0x430080
  40146a:	call   0x4162c0
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x34237]        # 0x4356d0
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x2ec09]        # 0x4300b0
  4014a7:	mov    rcx,QWORD PTR [rip+0x2ebf2]        # 0x4300a0
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x4162c0
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x416268
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x2ecc5]        # 0x4301a0
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x410530
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x2ec95]        # 0x4301a0
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x410530
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	push   rsi
  401531:	push   rbx
  401532:	sub    rsp,0x28
  401536:	mov    rbx,rcx
  401539:	xor    ecx,ecx
  40153b:	call   QWORD PTR [rip+0x340d7]        # 0x435618
  401541:	test   rax,rax
  401544:	mov    rsi,rax
  401547:	je     0x401580
  401549:	test   rbx,rbx
  40154c:	je     0x401564
  40154e:	mov    rax,QWORD PTR [rbx+0x8]
  401552:	mov    QWORD PTR [rax+0x8],rsi
  401556:	mov    QWORD PTR [rbx+0x8],rsi
  40155a:	mov    rax,rbx
  40155d:	add    rsp,0x28
  401561:	pop    rbx
  401562:	pop    rsi
  401563:	ret    
  401564:	mov    ecx,0x10
  401569:	call   0x4161d0
  40156e:	test   rax,rax
  401571:	je     0x401584
  401573:	mov    QWORD PTR [rax],rsi
  401576:	mov    QWORD PTR [rax+0x8],rsi
  40157a:	jmp    0x40155d
  40157c:	nop    DWORD PTR [rax+0x0]
  401580:	xor    eax,eax
  401582:	jmp    0x40155d
  401584:	mov    rcx,rsi
  401587:	call   QWORD PTR [rip+0x34093]        # 0x435620
  40158d:	xor    eax,eax
  40158f:	jmp    0x40155d
  401591:	nop    DWORD PTR [rax+rax*1+0x0]
  401596:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4015a0:	push   rbx
  4015a1:	sub    rsp,0x20
  4015a5:	test   rcx,rcx
  4015a8:	je     0x4015c3
  4015aa:	mov    rbx,rcx
  4015ad:	mov    rcx,QWORD PTR [rcx]
  4015b0:	call   QWORD PTR [rip+0x3406a]        # 0x435620
  4015b6:	mov    rcx,rbx
  4015b9:	add    rsp,0x20
  4015bd:	pop    rbx
  4015be:	jmp    0x416220
  4015c3:	add    rsp,0x20
  4015c7:	pop    rbx
  4015c8:	ret    
  4015c9:	nop
  4015ca:	nop
  4015cb:	nop
  4015cc:	nop
  4015cd:	nop
  4015ce:	nop
  4015cf:	nop
  4015d0:	sub    rsp,0x28
  4015d4:	call   0x4160b0
  4015d9:	mov    edx,0x8000
  4015de:	mov    ecx,eax
  4015e0:	add    rsp,0x28
  4015e4:	jmp    0x4160e0
  4015e9:	nop
  4015ea:	nop
  4015eb:	nop
  4015ec:	nop
  4015ed:	nop
  4015ee:	nop
  4015ef:	nop
  4015f0:	push   r15
  4015f2:	push   r14
  4015f4:	push   r13
  4015f6:	push   r12
  4015f8:	push   rbp
  4015f9:	push   rdi
  4015fa:	push   rsi
  4015fb:	push   rbx
  4015fc:	sub    rsp,0x98
  401603:	mov    rax,QWORD PTR [rsp+0x100]
  40160b:	mov    r14d,edx
  40160e:	mov    QWORD PTR [rsp+0xf0],r8
  401616:	mov    rbx,r9
  401619:	mov    rbp,QWORD PTR [rax+0x3d0]
  401620:	cmp    BYTE PTR [rbp+0x38],0x0
  401624:	mov    r15,QWORD PTR [rbp+0x10]
  401628:	jne    0x4016d9
  40162e:	mov    BYTE PTR [rsp+0x70],0x0
  401633:	mov    rax,QWORD PTR [rbp+0x28]
  401637:	test   rax,rax
  40163a:	mov    QWORD PTR [rsp+0x40],rax
  40163f:	je     0x401663
  401641:	mov    edi,DWORD PTR [rbp+0x34]
  401644:	cmp    edi,0x3
  401647:	je     0x401744
  40164d:	cmp    r14d,0x6
  401651:	ja     0x4016c3
  401653:	lea    rax,[rip+0x16a92]        # 0x4180ec
  40165a:	movsxd rdx,DWORD PTR [rax+r14*4]
  40165e:	add    rax,rdx
  401661:	jmp    rax
  401663:	mov    rax,QWORD PTR [rbp+0x20]
  401667:	lea    rsi,[rip+0x16a02]        # 0x418070
  40166e:	mov    ecx,0x2
  401673:	mov    rdi,rax
  401676:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  401678:	je     0x401b7c
  40167e:	lea    rsi,[rip+0x169ed]        # 0x418072
  401685:	mov    ecx,0x2
  40168a:	mov    rdi,rax
  40168d:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40168f:	jne    0x401c4b
  401695:	mov    r12,QWORD PTR [rbp+0x10]
  401699:	mov    QWORD PTR [rbp+0x28],r12
  40169d:	mov    QWORD PTR [rsp+0x40],r12
  4016a2:	cmp    QWORD PTR [rsp+0x40],0x0
  4016a8:	jne    0x401641
  4016aa:	test   r15,r15
  4016ad:	mov    QWORD PTR [rsp+0x40],r15
  4016b2:	jne    0x401641
  4016b4:	lea    rdx,[rip+0x169bc]        # 0x418077
  4016bb:	mov    rcx,rbp
  4016be:	call   0x408110
  4016c3:	xor    eax,eax
  4016c5:	add    rsp,0x98
  4016cc:	pop    rbx
  4016cd:	pop    rsi
  4016ce:	pop    rdi
  4016cf:	pop    rbp
  4016d0:	pop    r12
  4016d2:	pop    r13
  4016d4:	pop    r14
  4016d6:	pop    r15
  4016d8:	ret    
  4016d9:	call   0x40f8a0
  4016de:	mov    rsi,rax
  4016e1:	mov    eax,DWORD PTR [rip+0x31959]        # 0x433040
  4016e7:	test   eax,eax
  4016e9:	je     0x401b45
  4016ef:	mov    rax,QWORD PTR [rip+0x31942]        # 0x433038
  4016f6:	movsxd rdx,esi
  4016f9:	add    rdx,rax
  4016fc:	lea    rcx,[rsp+0x68]
  401701:	mov    QWORD PTR [rsp+0x68],rdx
  401706:	call   QWORD PTR [rip+0x340f4]        # 0x435800
  40170c:	mov    rdx,rsi
  40170f:	mov    r9d,DWORD PTR [rax+0x8]
  401713:	lea    rcx,[rsp+0x70]
  401718:	sar    rdx,0x20
  40171c:	lea    r8,[rip+0x16937]        # 0x41805a
  401723:	mov    DWORD PTR [rsp+0x30],edx
  401727:	mov    edx,DWORD PTR [rax]
  401729:	mov    DWORD PTR [rsp+0x28],edx
  40172d:	mov    eax,DWORD PTR [rax+0x4]
  401730:	mov    edx,0x14
  401735:	mov    DWORD PTR [rsp+0x20],eax
  401739:	call   QWORD PTR [rip+0x33eb9]        # 0x4355f8
  40173f:	jmp    0x401633
  401744:	cmp    r14d,0x6
  401748:	ja     0x401b69
  40174e:	lea    rax,[rip+0x169b3]        # 0x418108
  401755:	mov    esi,r14d
  401758:	movsxd rdx,DWORD PTR [rax+rsi*4]
  40175c:	add    rax,rdx
  40175f:	jmp    rax
  401761:	lea    r9,[rip+0x16898]        # 0x418000
  401768:	cmp    edi,0x2
  40176b:	mov    eax,0x10
  401770:	mov    esi,0x40
  401775:	cmovne esi,eax
  401778:	lea    rdx,[rip+0x1693d]        # 0x4180bc
  40177f:	mov    QWORD PTR [rsp+0x28],rbx
  401784:	mov    QWORD PTR [rsp+0x20],rbx
  401789:	lea    r8,[rsp+0x70]
  40178e:	mov    rcx,QWORD PTR [rsp+0x40]
  401793:	mov    r14,QWORD PTR [rip+0x33e4e]        # 0x4355e8
  40179a:	call   r14
  40179d:	mov    eax,esi
  40179f:	mov    QWORD PTR [rsp+0x48],0x0
  4017a8:	mov    rdx,rax
  4017ab:	mov    QWORD PTR [rsp+0x50],rax
  4017b0:	mov    eax,0x2
  4017b5:	sub    rax,rdx
  4017b8:	test   rbx,rbx
  4017bb:	mov    QWORD PTR [rsp+0x58],rax
  4017c0:	je     0x401a9d
  4017c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4017d0:	mov    rsi,QWORD PTR [rsp+0x48]
  4017d5:	mov    rcx,QWORD PTR [rsp+0x40]
  4017da:	lea    rdx,[rip+0x168f4]        # 0x4180d5
  4017e1:	mov    r8,rsi
  4017e4:	call   r14
  4017e7:	mov    rcx,QWORD PTR [rsp+0x50]
  4017ec:	cmp    edi,0x1
  4017ef:	lea    rsi,[rsi+rcx*1]
  4017f3:	je     0x401af0
  4017f9:	mov    rbp,QWORD PTR [rsp+0x48]
  4017fe:	cmp    rbx,rbp
  401801:	jbe    0x401a80
  401807:	mov    r13,rbp
  40180a:	lea    r12,[rbp+0x1]
  40180e:	add    r13,QWORD PTR [rsp+0xf0]
  401816:	not    rbp
  401819:	jmp    0x401853
  40181b:	nop    DWORD PTR [rax+rax*1+0x0]
  401820:	mov    r8d,0x2e
  401826:	lea    rdx,[rip+0x168ba]        # 0x4180e7
  40182d:	mov    rcx,QWORD PTR [rsp+0x40]
  401832:	call   r14
  401835:	cmp    r12,rsi
  401838:	je     0x401a80
  40183e:	add    r13,0x1
  401842:	cmp    r12,rbx
  401845:	lea    rax,[r12+0x1]
  40184a:	jae    0x401a80
  401850:	mov    r12,rax
  401853:	cmp    edi,0x2
  401856:	lea    r15,[rbp+r12*1+0x0]
  40185b:	movzx  r8d,BYTE PTR [r13+0x0]
  401860:	je     0x401a25
  401866:	lea    eax,[r8-0x20]
  40186a:	cmp    al,0x5f
  40186c:	ja     0x401820
  40186e:	lea    rdx,[rip+0x16872]        # 0x4180e7
  401875:	mov    rcx,QWORD PTR [rsp+0x40]
  40187a:	call   r14
  40187d:	jmp    0x401835
  40187f:	lea    r9,[rip+0x167a5]        # 0x41802b
  401886:	jmp    0x401768
  40188b:	lea    r9,[rip+0x1677d]        # 0x41800f
  401892:	jmp    0x401768
  401897:	lea    r9,[rip+0x1679a]        # 0x418038
  40189e:	jmp    0x401768
  4018a3:	lea    r9,[rip+0x1679f]        # 0x418049
  4018aa:	jmp    0x401768
  4018af:	mov    r9,QWORD PTR [rsp+0xf0]
  4018b7:	lea    r8,[rsp+0x70]
  4018bc:	lea    rdx,[rip+0x167eb]        # 0x4180ae
  4018c3:	mov    rcx,QWORD PTR [rsp+0x40]
  4018c8:	call   QWORD PTR [rip+0x33d1a]        # 0x4355e8
  4018ce:	jmp    0x4016c3
  4018d3:	lea    r9,[rip+0x16742]        # 0x41801c
  4018da:	jmp    0x401768
  4018df:	xor    eax,eax
  4018e1:	test   rbx,rbx
  4018e4:	je     0x4019c3
  4018ea:	mov    rbp,rbx
  4018ed:	xor    edi,edi
  4018ef:	movzx  ecx,BYTE PTR [rip+0x3173b]        # 0x433031
  4018f6:	sub    rbp,0x1
  4018fa:	mov    esi,0x1
  4018ff:	je     0x401bf6
  401905:	lea    r15,[rsp+0x70]
  40190a:	mov    r14,QWORD PTR [rip+0x33cd7]        # 0x4355e8
  401911:	mov    r12,QWORD PTR [rsp+0xf0]
  401919:	jmp    0x401928
  40191b:	add    rsi,0x1
  40191f:	cmp    rax,rbp
  401922:	jae    0x401bf0
  401928:	cmp    BYTE PTR [r12+rsi*1-0x1],0xa
  40192e:	mov    rax,rsi
  401931:	jne    0x40191b
  401933:	test   cl,cl
  401935:	je     0x401c6c
  40193b:	mov    r9,QWORD PTR [rsp+0x40]
  401940:	lea    rcx,[r12+rdi*1]
  401944:	mov    rdx,rsi
  401947:	sub    rdx,rdi
  40194a:	mov    r8d,0x1
  401950:	mov    rdi,rsi
  401953:	call   0x416210
  401958:	mov    BYTE PTR [rip+0x316d2],0x0        # 0x433031
  40195f:	mov    rax,rsi
  401962:	xor    ecx,ecx
  401964:	jmp    0x40191b
  401966:	cmp    BYTE PTR [rip+0x316c4],0x0        # 0x433031
  40196d:	jne    0x401991
  40196f:	lea    rax,[rip+0x167ca]        # 0x418140
  401976:	lea    r8,[rsp+0x70]
  40197b:	lea    rdx,[rip+0x16714]        # 0x418096
  401982:	mov    rcx,QWORD PTR [rsp+0x40]
  401987:	mov    r9,QWORD PTR [rax+rsi*8]
  40198b:	call   QWORD PTR [rip+0x33c57]        # 0x4355e8
  401991:	mov    r9,QWORD PTR [rsp+0x40]
  401996:	mov    rcx,QWORD PTR [rsp+0xf0]
  40199e:	mov    r8d,0x1
  4019a4:	mov    rdx,rbx
  4019a7:	call   0x416210
  4019ac:	xor    eax,eax
  4019ae:	test   rbx,rbx
  4019b1:	je     0x4019c3
  4019b3:	mov    rax,QWORD PTR [rsp+0xf0]
  4019bb:	cmp    BYTE PTR [rax+rbx*1-0x1],0xa
  4019c0:	setne  al
  4019c3:	mov    BYTE PTR [rip+0x31668],al        # 0x433031
  4019c9:	mov    BYTE PTR [rip+0x31660],0x0        # 0x433030
  4019d0:	jmp    0x4016c3
  4019d5:	cmp    BYTE PTR [rip+0x31654],0x0        # 0x433030
  4019dc:	jne    0x4016c3
  4019e2:	cmp    BYTE PTR [rbp+0xe],0x0
  4019e6:	jne    0x401bb8
  4019ec:	cmp    BYTE PTR [rip+0x3163e],0x0        # 0x433031
  4019f3:	mov    r14,QWORD PTR [rip+0x33bee]        # 0x4355e8
  4019fa:	je     0x401b94
  401a00:	mov    r8,rbx
  401a03:	lea    rdx,[rip+0x16692]        # 0x41809c
  401a0a:	mov    rcx,QWORD PTR [rsp+0x40]
  401a0f:	call   r14
  401a12:	mov    BYTE PTR [rip+0x31618],0x0        # 0x433031
  401a19:	mov    BYTE PTR [rip+0x31610],0x1        # 0x433030
  401a20:	jmp    0x4016c3
  401a25:	cmp    rbx,r12
  401a28:	jbe    0x401a34
  401a2a:	cmp    r8b,0xd
  401a2e:	je     0x401ac1
  401a34:	lea    eax,[r8-0x20]
  401a38:	cmp    al,0x5f
  401a3a:	jbe    0x401ab0
  401a3c:	mov    r8d,0x2e
  401a42:	lea    rdx,[rip+0x1669e]        # 0x4180e7
  401a49:	mov    rcx,QWORD PTR [rsp+0x40]
  401a4e:	call   r14
  401a51:	lea    rax,[r12+0x1]
  401a56:	cmp    rbx,rax
  401a59:	jbe    0x401835
  401a5f:	cmp    BYTE PTR [r13+0x1],0xd
  401a64:	jne    0x401835
  401a6a:	cmp    BYTE PTR [r13+0x2],0xa
  401a6f:	jne    0x401835
  401a75:	mov    rax,QWORD PTR [rsp+0x48]
  401a7a:	lea    rsi,[r15+rax*1+0x3]
  401a7f:	nop
  401a80:	mov    rdx,QWORD PTR [rsp+0x40]
  401a85:	mov    ecx,0xa
  401a8a:	call   0x416238
  401a8f:	cmp    rbx,rsi
  401a92:	mov    QWORD PTR [rsp+0x48],rsi
  401a97:	ja     0x4017d0
  401a9d:	mov    rcx,QWORD PTR [rsp+0x40]
  401aa2:	call   0x416258
  401aa7:	jmp    0x4016c3
  401aac:	nop    DWORD PTR [rax+0x0]
  401ab0:	lea    rdx,[rip+0x16630]        # 0x4180e7
  401ab7:	mov    rcx,QWORD PTR [rsp+0x40]
  401abc:	call   r14
  401abf:	jmp    0x401a51
  401ac1:	cmp    BYTE PTR [r13+0x1],0xa
  401ac6:	jne    0x401a3c
  401acc:	mov    r13,QWORD PTR [rsp+0x48]
  401ad1:	add    r13,QWORD PTR [rsp+0x58]
  401ad6:	mov    rdx,QWORD PTR [rsp+0x50]
  401adb:	lea    rax,[r13+r15*1+0x0]
  401ae0:	lea    rsi,[rax+rdx*1]
  401ae4:	jmp    0x401a80
  401ae6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401af0:	mov    rbp,QWORD PTR [rsp+0x48]
  401af5:	mov    r12,QWORD PTR [rsp+0x40]
  401afa:	mov    r13,QWORD PTR [rsp+0xf0]
  401b02:	jmp    0x401b24
  401b04:	movzx  r8d,BYTE PTR [r13+rbp*1+0x0]
  401b0a:	lea    rdx,[rip+0x165cc]        # 0x4180dd
  401b11:	mov    rcx,r12
  401b14:	call   r14
  401b17:	add    rbp,0x1
  401b1b:	cmp    rbp,rsi
  401b1e:	je     0x4017f9
  401b24:	cmp    rbx,rbp
  401b27:	ja     0x401b04
  401b29:	lea    rcx,[rip+0x165b3]        # 0x4180e3
  401b30:	mov    r9,r12
  401b33:	mov    r8d,0x3
  401b39:	mov    edx,0x1
  401b3e:	call   0x416210
  401b43:	jmp    0x401b17
  401b45:	xor    ecx,ecx
  401b47:	call   QWORD PTR [rip+0x33cdb]        # 0x435828
  401b4d:	movsxd rdx,esi
  401b50:	mov    DWORD PTR [rip+0x314e6],0x1        # 0x433040
  401b5a:	sub    rax,rdx
  401b5d:	mov    QWORD PTR [rip+0x314d4],rax        # 0x433038
  401b64:	jmp    0x4016f9
  401b69:	mov    BYTE PTR [rip+0x314c1],0x0        # 0x433031
  401b70:	mov    BYTE PTR [rip+0x314b9],0x0        # 0x433030
  401b77:	jmp    0x4016c3
  401b7c:	call   QWORD PTR [rip+0x33c1e]        # 0x4357a0
  401b82:	lea    r12,[rax+0x30]
  401b86:	mov    QWORD PTR [rbp+0x28],r12
  401b8a:	mov    QWORD PTR [rsp+0x40],r12
  401b8f:	jmp    0x4016a2
  401b94:	lea    rax,[rip+0x165a5]        # 0x418140
  401b9b:	lea    r8,[rsp+0x70]
  401ba0:	lea    rdx,[rip+0x164ef]        # 0x418096
  401ba7:	mov    rcx,QWORD PTR [rsp+0x40]
  401bac:	mov    r9,QWORD PTR [rax+rsi*8]
  401bb0:	call   r14
  401bb3:	jmp    0x401a00
  401bb8:	mov    rdi,QWORD PTR [rip+0x33be1]        # 0x4357a0
  401bbf:	call   rdi
  401bc1:	mov    r14,QWORD PTR [rsp+0x40]
  401bc6:	add    rax,0x60
  401bca:	cmp    r14,rax
  401bcd:	je     0x4016c3
  401bd3:	call   rdi
  401bd5:	add    rax,0x30
  401bd9:	cmp    r14,rax
  401bdc:	jne    0x4019ec
  401be2:	jmp    0x4016c3
  401be7:	nop    WORD PTR [rax+rax*1+0x0]
  401bf0:	mov    rsi,rbx
  401bf3:	sub    rsi,rdi
  401bf6:	test   cl,cl
  401bf8:	jne    0x401c18
  401bfa:	lea    r9,[rip+0x16493]        # 0x418094
  401c01:	lea    r8,[rsp+0x70]
  401c06:	lea    rdx,[rip+0x16489]        # 0x418096
  401c0d:	mov    rcx,QWORD PTR [rsp+0x40]
  401c12:	call   QWORD PTR [rip+0x339d0]        # 0x4355e8
  401c18:	mov    rcx,rdi
  401c1b:	add    rcx,QWORD PTR [rsp+0xf0]
  401c23:	mov    r9,QWORD PTR [rsp+0x40]
  401c28:	mov    r8d,0x1
  401c2e:	mov    rdx,rsi
  401c31:	call   0x416210
  401c36:	mov    rax,QWORD PTR [rsp+0xf0]
  401c3e:	cmp    BYTE PTR [rax+rbx*1-0x1],0xa
  401c43:	setne  al
  401c46:	jmp    0x4019c3
  401c4b:	lea    rdx,[rip+0x16422]        # 0x418074
  401c52:	mov    rcx,rax
  401c55:	call   0x416248
  401c5a:	mov    BYTE PTR [rbp+0x30],0x1
  401c5e:	mov    QWORD PTR [rbp+0x28],rax
  401c62:	mov    QWORD PTR [rsp+0x40],rax
  401c67:	jmp    0x4016a2
  401c6c:	lea    r9,[rip+0x16421]        # 0x418094
  401c73:	mov    r8,r15
  401c76:	lea    rdx,[rip+0x16419]        # 0x418096
  401c7d:	mov    rcx,QWORD PTR [rsp+0x40]
  401c82:	call   r14
  401c85:	jmp    0x40193b
  401c8a:	nop
  401c8b:	nop
  401c8c:	nop
  401c8d:	nop
  401c8e:	nop
  401c8f:	nop
  401c90:	push   r15
  401c92:	push   r14
  401c94:	push   r13
  401c96:	push   r12
  401c98:	push   rbp
  401c99:	push   rdi
  401c9a:	push   rsi
  401c9b:	push   rbx
  401c9c:	sub    rsp,0x48
  401ca0:	mov    r12,QWORD PTR [r9+0x8]
  401ca4:	xor    esi,esi
  401ca6:	mov    rdi,QWORD PTR [r9]
  401ca9:	mov    rbp,rdx
  401cac:	mov    QWORD PTR [rsp+0x30],0x0
  401cb5:	imul   rbp,r8
  401cb9:	mov    rax,QWORD PTR [r12+0x18]
  401cbe:	test   rbp,rbp
  401cc1:	sete   sil
  401cc5:	test   rax,rax
  401cc8:	je     0x401de0
  401cce:	cmp    QWORD PTR [rax+0xa8],0x0
  401cd6:	mov    rbx,r9
  401cd9:	mov    r13,rcx
  401cdc:	je     0x401d1a
  401cde:	mov    r9,QWORD PTR [r12+0x10]
  401ce3:	test   r9,r9
  401ce6:	je     0x401d1a
  401ce8:	call   0x416210
  401ced:	cmp    rax,rbp
  401cf0:	mov    r14,rax
  401cf3:	je     0x401d10
  401cf5:	mov    rax,r14
  401cf8:	add    rsp,0x48
  401cfc:	pop    rbx
  401cfd:	pop    rsi
  401cfe:	pop    rdi
  401cff:	pop    rbp
  401d00:	pop    r12
  401d02:	pop    r13
  401d04:	pop    r14
  401d06:	pop    r15
  401d08:	ret    
  401d09:	nop    DWORD PTR [rax+0x0]
  401d10:	mov    rcx,QWORD PTR [r12+0x10]
  401d15:	call   0x416258
  401d1a:	cmp    rbp,0x14
  401d1e:	jbe    0x401d26
  401d20:	cmp    BYTE PTR [rbx+0x10],0x0
  401d24:	jne    0x401d30
  401d26:	mov    r14,rbp
  401d29:	jmp    0x401cf5
  401d2b:	nop    DWORD PTR [rax+rax*1+0x0]
  401d30:	mov    r8d,0x14
  401d36:	mov    rdx,r13
  401d39:	lea    rcx,[rip+0x16440]        # 0x418180
  401d40:	mov    r12,QWORD PTR [rip+0x338e9]        # 0x435630
  401d47:	mov    r14,rbp
  401d4a:	call   r12
  401d4d:	test   eax,eax
  401d4f:	je     0x401cf5
  401d51:	mov    rax,QWORD PTR [rdi+0x18]
  401d55:	lea    r8,[rsp+0x30]
  401d5a:	mov    edx,0x100001
  401d5f:	mov    rcx,QWORD PTR [rax]
  401d62:	call   QWORD PTR [rip+0x33810]        # 0x435578
  401d68:	test   eax,eax
  401d6a:	jne    0x401cf5
  401d6c:	mov    rdx,QWORD PTR [rsp+0x30]
  401d71:	test   rdx,rdx
  401d74:	je     0x401cf5
  401d7a:	mov    r8d,0x7
  401d80:	lea    rcx,[rip+0x1640e]        # 0x418195
  401d87:	call   r12
  401d8a:	test   eax,eax
  401d8c:	je     0x401fc6
  401d92:	lea    r14,[r13+rbp*1+0x0]
  401d97:	movzx  r12d,BYTE PTR [r13+0x14]
  401d9c:	lea    r15,[r13+0x14]
  401da0:	lea    rax,[r14-0x9]
  401da4:	mov    QWORD PTR [rsp+0x28],rax
  401da9:	cmp    r15,r14
  401dac:	setb   BYTE PTR [rsp+0x27]
  401db1:	test   r12b,r12b
  401db4:	movzx  eax,BYTE PTR [rsp+0x27]
  401db9:	je     0x401df0
  401dbb:	test   al,al
  401dbd:	je     0x401df0
  401dbf:	movzx  ecx,r12b
  401dc3:	call   QWORD PTR [rip+0x33aef]        # 0x4358b8
  401dc9:	test   eax,eax
  401dcb:	jne    0x401df0
  401dcd:	movzx  r12d,BYTE PTR [r15+0x1]
  401dd2:	add    r15,0x1
  401dd6:	jmp    0x401da9
  401dd8:	mov    rcx,r13
  401ddb:	call   0x416220
  401de0:	mov    r14,rsi
  401de3:	jmp    0x401cf5
  401de8:	nop    DWORD PTR [rax+rax*1+0x0]
  401df0:	cmp    r15,QWORD PTR [rsp+0x28]
  401df5:	ja     0x401d26
  401dfb:	lea    rdx,[rip+0x163a4]        # 0x4181a6
  401e02:	mov    r8d,0x9
  401e08:	mov    rcx,r15
  401e0b:	call   0x4161c0
  401e10:	test   eax,eax
  401e12:	je     0x401e4c
  401e14:	cmp    BYTE PTR [rsp+0x27],0x0
  401e19:	je     0x401da9
  401e1b:	cmp    r12b,0x3b
  401e1f:	jne    0x401e2b
  401e21:	jmp    0x401da9
  401e23:	cmp    BYTE PTR [rax],0x3b
  401e26:	mov    r15,rax
  401e29:	je     0x401e41
  401e2b:	lea    rax,[r15+0x1]
  401e2f:	cmp    rax,r14
  401e32:	jne    0x401e23
  401e34:	movzx  r12d,BYTE PTR [r15+0x1]
  401e39:	mov    r15,r14
  401e3c:	jmp    0x401da9
  401e41:	mov    r12d,0x3b
  401e47:	jmp    0x401da9
  401e4c:	add    r15,0x9
  401e50:	sub    r13,r15
  401e53:	lea    r12,[r13+rbp*1+0x0]
  401e58:	lea    rcx,[r12+0x1]
  401e5d:	call   0x4161d0
  401e62:	test   rax,rax
  401e65:	mov    r13,rax
  401e68:	je     0x401de0
  401e6e:	mov    r8,r12
  401e71:	mov    rdx,r15
  401e74:	mov    rcx,rax
  401e77:	call   0x4161b8
  401e7c:	mov    BYTE PTR [r13+r12*1+0x0],0x0
  401e82:	movzx  r14d,BYTE PTR [r13+0x0]
  401e87:	cmp    r14b,0x22
  401e8b:	je     0x401fb4
  401e91:	cmp    r14b,0x27
  401e95:	je     0x401fb4
  401e9b:	mov    r12,r13
  401e9e:	mov    r14d,0x3b
  401ea4:	mov    edx,0x2f
  401ea9:	mov    rcx,r13
  401eac:	call   0x416130
  401eb1:	test   rax,rax
  401eb4:	je     0x401ec4
  401eb6:	cmp    BYTE PTR [rax+0x1],0x0
  401eba:	lea    r12,[rax+0x1]
  401ebe:	je     0x401dd8
  401ec4:	mov    edx,0x5c
  401ec9:	mov    rcx,r12
  401ecc:	call   0x416130
  401ed1:	test   rax,rax
  401ed4:	je     0x401fe8
  401eda:	lea    r12,[rax+0x1]
  401ede:	movzx  eax,BYTE PTR [rax+0x1]
  401ee2:	test   al,al
  401ee4:	je     0x401dd8
  401eea:	cmp    r14b,al
  401eed:	mov    r8,r12
  401ef0:	jne    0x401f09
  401ef2:	jmp    0x401fbd
  401ef7:	nop    WORD PTR [rax+rax*1+0x0]
  401f00:	cmp    r14b,al
  401f03:	je     0x401fbd
  401f09:	add    r8,0x1
  401f0d:	movzx  eax,BYTE PTR [r8]
  401f11:	test   al,al
  401f13:	jne    0x401f00
  401f15:	mov    edx,0xd
  401f1a:	mov    rcx,r12
  401f1d:	call   0x416178
  401f22:	test   rax,rax
  401f25:	je     0x401f2a
  401f27:	mov    BYTE PTR [rax],0x0
  401f2a:	mov    edx,0xa
  401f2f:	mov    rcx,r12
  401f32:	call   0x416178
  401f37:	test   rax,rax
  401f3a:	je     0x401f3f
  401f3c:	mov    BYTE PTR [rax],0x0
  401f3f:	cmp    r13,r12
  401f42:	je     0x401f5b
  401f44:	mov    rcx,r12
  401f47:	call   0x416150
  401f4c:	lea    r8,[rax+0x1]
  401f50:	mov    rdx,r12
  401f53:	mov    rcx,r13
  401f56:	call   0x4161b0
  401f5b:	lea    rcx,[rsp+0x38]
  401f60:	xor    r8d,r8d
  401f63:	mov    rdx,r13
  401f66:	call   0x4032d0
  401f6b:	mov    rcx,r13
  401f6e:	mov    r12d,eax
  401f71:	call   0x416220
  401f76:	test   r12d,r12d
  401f79:	jne    0x401de0
  401f7f:	mov    rax,QWORD PTR [rsp+0x38]
  401f84:	test   rax,rax
  401f87:	je     0x401de0
  401f8d:	mov    QWORD PTR [rdi],rax
  401f90:	mov    BYTE PTR [rdi+0x8],0x1
  401f94:	mov    r14,rbp
  401f97:	mov    BYTE PTR [rdi+0x9],0x1
  401f9b:	mov    BYTE PTR [rdi+0xa],0x1
  401f9f:	mov    BYTE PTR [rdi+0xb],0x0
  401fa3:	mov    QWORD PTR [rdi+0x10],0x0
  401fab:	mov    BYTE PTR [rbx+0x10],0x0
  401faf:	jmp    0x401cf5
  401fb4:	lea    r12,[r13+0x1]
  401fb8:	jmp    0x401ea4
  401fbd:	mov    BYTE PTR [r8],0x0
  401fc1:	jmp    0x401f15
  401fc6:	mov    r8d,0x8
  401fcc:	mov    rdx,QWORD PTR [rsp+0x30]
  401fd1:	lea    rcx,[rip+0x161c5]        # 0x41819d
  401fd8:	call   r12
  401fdb:	test   eax,eax
  401fdd:	jne    0x401d92
  401fe3:	jmp    0x401cf5
  401fe8:	movzx  eax,BYTE PTR [r12]
  401fed:	test   al,al
  401fef:	jne    0x401eea
  401ff5:	jmp    0x401f15
  401ffa:	nop
  401ffb:	nop
  401ffc:	nop
  401ffd:	nop
  401ffe:	nop
  401fff:	nop
  402000:	push   r13
  402002:	push   r12
  402004:	push   rbp
  402005:	push   rdi
  402006:	push   rsi
  402007:	push   rbx
  402008:	sub    rsp,0x178
  40200f:	movaps XMMWORD PTR [rsp+0x160],xmm6
  402017:	mov    rbx,rcx
  40201a:	mov    r13,rdx
  40201d:	mov    rdi,r8
  402020:	mov    rsi,r9
  402023:	call   0x40f8a0
  402028:	add    rdi,QWORD PTR [rsp+0x1d0]
  402030:	mov    rbp,QWORD PTR [rbx+0x28]
  402034:	mov    r12,rax
  402037:	mov    eax,DWORD PTR [rbx]
  402039:	add    rsi,r13
  40203c:	add    rsi,rbp
  40203f:	add    rbp,rdi
  402042:	test   eax,eax
  402044:	jne    0x402160
  40204a:	cmp    rsi,rbp
  40204d:	cmovl  rsi,rbp
  402051:	add    eax,0x1
  402054:	test   rsi,rsi
  402057:	mov    DWORD PTR [rbx],eax
  402059:	jle    0x402180
  40205f:	cmp    QWORD PTR [rbx+0x8],rbp
  402063:	je     0x402132
  402069:	pxor   xmm6,xmm6
  40206d:	mov    eax,DWORD PTR [rbx+0x18]
  402070:	mov    edx,0x100
  402075:	pxor   xmm0,xmm0
  402079:	cvtsi2sd xmm6,rbp
  40207e:	lea    r9d,[rax-0x7]
  402082:	cvtsi2sd xmm0,rsi
  402087:	lea    rsi,[rsp+0x50]
  40208c:	mov    rdi,rsi
  40208f:	divsd  xmm6,xmm0
  402093:	pxor   xmm0,xmm0
  402097:	cvtsi2sd xmm0,r9d
  40209c:	mulsd  xmm0,xmm6
  4020a0:	cvttsd2si eax,xmm0
  4020a4:	cmp    eax,0x100
  4020a9:	cmovle edx,eax
  4020ac:	movsxd rdx,edx
  4020af:	cmp    rdx,0x8
  4020b3:	jb     0x4020c9
  4020b5:	mov    rcx,rdx
  4020b8:	movabs rax,0x2323232323232323
  4020c2:	shr    rcx,0x3
  4020c6:	rep stos QWORD PTR es:[rdi],rax
  4020c9:	test   dl,0x4
  4020cc:	je     0x4020d8
  4020ce:	mov    DWORD PTR [rdi],0x23232323
  4020d4:	add    rdi,0x4
  4020d8:	test   dl,0x2
  4020db:	je     0x4020ea
  4020dd:	mov    eax,0x2323
  4020e2:	add    rdi,0x2
  4020e6:	mov    WORD PTR [rdi-0x2],ax
  4020ea:	test   dl,0x1
  4020ed:	je     0x4020f2
  4020ef:	mov    BYTE PTR [rdi],0x23
  4020f2:	lea    rdi,[rsp+0x20]
  4020f7:	mov    BYTE PTR [rsp+rdx*1+0x50],0x0
  4020fc:	lea    r8,[rip+0x160af]        # 0x4181b2
  402103:	mov    edx,0x28
  402108:	mov    rcx,rdi
  40210b:	call   QWORD PTR [rip+0x334e7]        # 0x4355f8
  402111:	mulsd  xmm6,QWORD PTR [rip+0x160b7]        # 0x4181d0
  402119:	mov    rcx,QWORD PTR [rbx+0x20]
  40211d:	mov    r8,rsi
  402120:	mov    rdx,rdi
  402123:	movapd xmm3,xmm6
  402127:	movq   r9,xmm6
  40212c:	call   QWORD PTR [rip+0x334b6]        # 0x4355e8
  402132:	mov    rcx,QWORD PTR [rbx+0x20]
  402136:	call   0x416258
  40213b:	mov    QWORD PTR [rbx+0x8],rbp
  40213f:	mov    QWORD PTR [rbx+0x10],r12
  402143:	movaps xmm6,XMMWORD PTR [rsp+0x160]
  40214b:	xor    eax,eax
  40214d:	add    rsp,0x178
  402154:	pop    rbx
  402155:	pop    rsi
  402156:	pop    rdi
  402157:	pop    rbp
  402158:	pop    r12
  40215a:	pop    r13
  40215c:	ret    
  40215d:	nop    DWORD PTR [rax]
  402160:	mov    rdx,QWORD PTR [rbx+0x10]
  402164:	mov    rcx,r12
  402167:	call   0x40f8e0
  40216c:	cmp    eax,0x63
  40216f:	jg     0x402176
  402171:	cmp    rsi,rbp
  402174:	jg     0x402143
  402176:	mov    eax,DWORD PTR [rbx]
  402178:	jmp    0x40204a
  40217d:	nop    DWORD PTR [rax]
  402180:	mov    rsi,QWORD PTR [rbx+0x8]
  402184:	lea    rdi,[rbp+0x3ff]
  40218b:	mov    r13,QWORD PTR [rip+0x33456]        # 0x4355e8
  402192:	lea    rax,[rsi+0x3ff]
  402199:	test   rsi,rsi
  40219c:	cmovs  rsi,rax
  4021a0:	sar    rsi,0xa
  4021a4:	test   rbp,rbp
  4021a7:	cmovns rdi,rbp
  4021ab:	sar    rdi,0xa
  4021af:	cmp    rsi,rdi
  4021b2:	jge    0x402132
  4021b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4021c0:	add    rsi,0x1
  4021c4:	mov    rcx,QWORD PTR [rbx+0x20]
  4021c8:	lea    rdx,[rip+0x15fe1]        # 0x4181b0
  4021cf:	call   r13
  4021d2:	cmp    rsi,rdi
  4021d5:	jne    0x4021c0
  4021d7:	jmp    0x402132
  4021dc:	nop    DWORD PTR [rax+0x0]
  4021e0:	push   r12
  4021e2:	push   rbp
  4021e3:	push   rdi
  4021e4:	push   rsi
  4021e5:	push   rbx
  4021e6:	sub    rsp,0x30
  4021ea:	xor    eax,eax
  4021ec:	lea    rdi,[rcx+0x8]
  4021f0:	mov    r8,rcx
  4021f3:	mov    QWORD PTR [rcx],0x0
  4021fa:	mov    QWORD PTR [rcx+0x28],0x0
  402202:	mov    rbx,rcx
  402205:	mov    rsi,rdx
  402208:	and    rdi,0xfffffffffffffff8
  40220c:	sub    r8,rdi
  40220f:	add    r8d,0x30
  402213:	shr    r8d,0x3
  402217:	mov    ecx,r8d
  40221a:	rep stos QWORD PTR es:[rdi],rax
  40221d:	cmp    BYTE PTR [rdx+0x48],0x0
  402221:	je     0x40222b
  402223:	mov    rax,QWORD PTR [rdx+0x68]
  402227:	mov    QWORD PTR [rbx+0x28],rax
  40222b:	lea    rcx,[rip+0x15f93]        # 0x4181c5
  402232:	call   QWORD PTR [rip+0x33390]        # 0x4355c8
  402238:	test   rax,rax
  40223b:	mov    rdi,rax
  40223e:	je     0x4022b0
  402240:	lea    rdx,[rsp+0x28]
  402245:	mov    r8d,0xa
  40224b:	mov    rcx,rax
  40224e:	call   0x416118
  402253:	mov    rbp,QWORD PTR [rsp+0x28]
  402258:	mov    r12d,eax
  40225b:	cmp    rbp,rdi
  40225e:	je     0x402280
  402260:	mov    rcx,rdi
  402263:	call   0x416150
  402268:	lea    rdx,[rdi+rax*1]
  40226c:	cmp    rbp,rdx
  40226f:	jne    0x402280
  402271:	test   r12d,r12d
  402274:	jle    0x402280
  402276:	mov    DWORD PTR [rbx+0x18],r12d
  40227a:	jmp    0x402287
  40227c:	nop    DWORD PTR [rax+0x0]
  402280:	mov    DWORD PTR [rbx+0x18],0x4f
  402287:	mov    rcx,rdi
  40228a:	call   QWORD PTR [rip+0x33328]        # 0x4355b8
  402290:	mov    rax,QWORD PTR [rsi+0x3d0]
  402297:	mov    rax,QWORD PTR [rax+0x10]
  40229b:	mov    QWORD PTR [rbx+0x20],rax
  40229f:	add    rsp,0x30
  4022a3:	pop    rbx
  4022a4:	pop    rsi
  4022a5:	pop    rdi
  4022a6:	pop    rbp
  4022a7:	pop    r12
  4022a9:	ret    
  4022aa:	nop    WORD PTR [rax+rax*1+0x0]
  4022b0:	mov    DWORD PTR [rbx+0x18],0x4f
  4022b7:	jmp    0x402290
  4022b9:	nop
  4022ba:	nop
  4022bb:	nop
  4022bc:	nop
  4022bd:	nop
  4022be:	nop
  4022bf:	nop
  4022c0:	push   rsi
  4022c1:	push   rbx
  4022c2:	sub    rsp,0x28
  4022c6:	imul   r8,rdx
  4022ca:	mov    rdx,rcx
  4022cd:	mov    ecx,DWORD PTR [r9]
  4022d0:	mov    rbx,r9
  4022d3:	call   0x410260
  4022d8:	test   rax,rax
  4022db:	js     0x4022f0
  4022dd:	mov    rdx,QWORD PTR [rbx+0x8]
  4022e1:	mov    BYTE PTR [rdx+0x27d],0x0
  4022e8:	add    rsp,0x28
  4022ec:	pop    rbx
  4022ed:	pop    rsi
  4022ee:	ret    
  4022ef:	nop
  4022f0:	mov    rsi,QWORD PTR [rip+0x334e1]        # 0x4357d8
  4022f7:	call   rsi
  4022f9:	mov    rdx,rax
  4022fc:	xor    eax,eax
  4022fe:	cmp    DWORD PTR [rdx],0xb
  402301:	jne    0x4022dd
  402303:	call   rsi
  402305:	mov    DWORD PTR [rax],0x0
  40230b:	mov    rax,QWORD PTR [rbx+0x8]
  40230f:	mov    BYTE PTR [rax+0x27d],0x1
  402316:	mov    eax,0x10000001
  40231b:	jmp    0x4022e8
  40231d:	nop
  40231e:	nop
  40231f:	nop
  402320:	sub    rsp,0x28
  402324:	mov    ecx,DWORD PTR [rcx]
  402326:	call   0x4162a8
  40232b:	cmp    rax,0xffffffffffffffff
  40232f:	sete   al
  402332:	movzx  eax,al
  402335:	add    eax,eax
  402337:	add    rsp,0x28
  40233b:	ret    
  40233c:	nop
  40233d:	nop
  40233e:	nop
  40233f:	nop
  402340:	push   rsi
  402341:	push   rbx
  402342:	sub    rsp,0x28
  402346:	mov    rax,QWORD PTR [rcx+0x18]
  40234a:	mov    rbx,rcx
  40234d:	mov    rcx,QWORD PTR [rcx]
  402350:	mov    rsi,QWORD PTR [rax+0x3d0]
  402357:	test   rcx,rcx
  40235a:	je     0x4023f1
  402360:	cmp    BYTE PTR [rcx],0x0
  402363:	je     0x4023f1
  402369:	cmp    BYTE PTR [rbx+0x9],0x0
  40236d:	jne    0x4023b0
  40236f:	lea    rdx,[rip+0x15eab]        # 0x418221
  402376:	call   0x416248
  40237b:	test   rax,rax
  40237e:	je     0x402420
  402384:	mov    QWORD PTR [rbx+0x10],rax
  402388:	mov    BYTE PTR [rbx+0xa],0x1
  40238c:	mov    eax,0x1
  402391:	mov    BYTE PTR [rbx+0xb],0x1
  402395:	mov    QWORD PTR [rbx+0x20],0x0
  40239d:	mov    QWORD PTR [rbx+0x28],0x0
  4023a5:	add    rsp,0x28
  4023a9:	pop    rbx
  4023aa:	pop    rsi
  4023ab:	ret    
  4023ac:	nop    DWORD PTR [rax+0x0]
  4023b0:	lea    rdx,[rip+0x15e49]        # 0x418200
  4023b7:	call   0x416248
  4023bc:	test   rax,rax
  4023bf:	je     0x402410
  4023c1:	mov    rcx,rax
  4023c4:	call   0x416260
  4023c9:	mov    ecx,0x11
  4023ce:	call   0x416158
  4023d3:	mov    r8,QWORD PTR [rbx]
  4023d6:	lea    rdx,[rip+0x15e26]        # 0x418203
  4023dd:	mov    r9,rax
  4023e0:	mov    rcx,rsi
  4023e3:	call   0x408110
  4023e8:	xor    eax,eax
  4023ea:	add    rsp,0x28
  4023ee:	pop    rbx
  4023ef:	pop    rsi
  4023f0:	ret    
  4023f1:	lea    rdx,[rip+0x15de8]        # 0x4181e0
  4023f8:	mov    rcx,rsi
  4023fb:	call   0x408110
  402400:	xor    eax,eax
  402402:	add    rsp,0x28
  402406:	pop    rbx
  402407:	pop    rsi
  402408:	ret    
  402409:	nop    DWORD PTR [rax+0x0]
  402410:	mov    rcx,QWORD PTR [rbx]
  402413:	jmp    0x40236f
  402418:	nop    DWORD PTR [rax+rax*1+0x0]
  402420:	call   QWORD PTR [rip+0x333b2]        # 0x4357d8
  402426:	mov    ecx,DWORD PTR [rax]
  402428:	call   0x416158
  40242d:	mov    r8,QWORD PTR [rbx]
  402430:	lea    rdx,[rip+0x15df1]        # 0x418228
  402437:	mov    r9,rax
  40243a:	mov    rcx,rsi
  40243d:	call   0x408110
  402442:	xor    eax,eax
  402444:	jmp    0x4023a5
  402449:	nop    DWORD PTR [rax+0x0]
  402450:	push   r13
  402452:	push   r12
  402454:	push   rbp
  402455:	push   rdi
  402456:	push   rsi
  402457:	push   rbx
  402458:	sub    rsp,0x38
  40245c:	mov    rbp,QWORD PTR [r9+0x18]
  402460:	xor    edi,edi
  402462:	mov    r12,rdx
  402465:	imul   r12,r8
  402469:	test   r12,r12
  40246c:	sete   dil
  402470:	test   rbp,rbp
  402473:	je     0x402540
  402479:	mov    rbx,r9
  40247c:	mov    r9,QWORD PTR [r9+0x10]
  402480:	mov    r13,rcx
  402483:	test   r9,r9
  402486:	je     0x402510
  40248c:	mov    rcx,r13
  40248f:	call   0x416210
  402494:	cmp    r12,rax
  402497:	mov    rsi,rax
  40249a:	je     0x402500
  40249c:	cmp    BYTE PTR [rbp+0x27d],0x0
  4024a3:	jne    0x4024c0
  4024a5:	cmp    BYTE PTR [rbp+0x27c],0x0
  4024ac:	jne    0x4024dc
  4024ae:	mov    rax,rsi
  4024b1:	add    rsp,0x38
  4024b5:	pop    rbx
  4024b6:	pop    rsi
  4024b7:	pop    rdi
  4024b8:	pop    rbp
  4024b9:	pop    r12
  4024bb:	pop    r13
  4024bd:	ret    
  4024be:	xchg   ax,ax
  4024c0:	xor    edx,edx
  4024c2:	mov    BYTE PTR [rbp+0x27d],0x0
  4024c9:	mov    rcx,QWORD PTR [rbp+0x0]
  4024cd:	call   QWORD PTR [rip+0x330b5]        # 0x435588
  4024d3:	cmp    BYTE PTR [rbp+0x27c],0x0
  4024da:	je     0x4024ae
  4024dc:	mov    rcx,QWORD PTR [rbx+0x10]
  4024e0:	call   0x416258
  4024e5:	test   eax,eax
  4024e7:	cmovne rsi,rdi
  4024eb:	mov    rax,rsi
  4024ee:	add    rsp,0x38
  4024f2:	pop    rbx
  4024f3:	pop    rsi
  4024f4:	pop    rdi
  4024f5:	pop    rbp
  4024f6:	pop    r12
  4024f8:	pop    r13
  4024fa:	ret    
  4024fb:	nop    DWORD PTR [rax+rax*1+0x0]
  402500:	add    QWORD PTR [rbx+0x20],rax
  402504:	jmp    0x40249c
  402506:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402510:	mov    rcx,rbx
  402513:	mov    QWORD PTR [rsp+0x28],r8
  402518:	mov    QWORD PTR [rsp+0x20],rdx
  40251d:	call   0x402340
  402522:	test   al,al
  402524:	mov    rsi,rdi
  402527:	je     0x4024ae
  402529:	mov    r9,QWORD PTR [rbx+0x10]
  40252d:	mov    r8,QWORD PTR [rsp+0x28]
  402532:	mov    rdx,QWORD PTR [rsp+0x20]
  402537:	jmp    0x40248c
  40253c:	nop    DWORD PTR [rax+0x0]
  402540:	mov    rsi,rdi
  402543:	mov    rax,rsi
  402546:	add    rsp,0x38
  40254a:	pop    rbx
  40254b:	pop    rsi
  40254c:	pop    rdi
  40254d:	pop    rbp
  40254e:	pop    r12
  402550:	pop    r13
  402552:	ret    
  402553:	nop
  402554:	nop
  402555:	nop
  402556:	nop
  402557:	nop
  402558:	nop
  402559:	nop
  40255a:	nop
  40255b:	nop
  40255c:	nop
  40255d:	nop
  40255e:	nop
  40255f:	nop
  402560:	push   rdi
  402561:	xor    eax,eax
  402563:	lea    rdi,[rcx+0x8]
  402567:	mov    QWORD PTR [rcx],0x0
  40256e:	mov    QWORD PTR [rcx+0x3e0],0x0
  402579:	mov    rdx,rcx
  40257c:	and    rdi,0xfffffffffffffff8
  402580:	sub    rcx,rdi
  402583:	add    ecx,0x3e8
  402589:	shr    ecx,0x3
  40258c:	rep stos QWORD PTR es:[rdi],rax
  40258f:	mov    rax,0xffffffffffffffff
  402596:	mov    BYTE PTR [rdx+0x27f],0x0
  40259d:	mov    BYTE PTR [rdx+0x283],0x0
  4025a4:	mov    QWORD PTR [rdx+0x78],rax
  4025a8:	mov    DWORD PTR [rdx+0x98],0x32
  4025b2:	mov    DWORD PTR [rdx+0x50],eax
  4025b5:	mov    BYTE PTR [rdx+0x54],0x0
  4025b9:	mov    DWORD PTR [rdx+0x58],0xf3fffbef
  4025c0:	mov    BYTE PTR [rdx+0x5c],0x0
  4025c4:	mov    QWORD PTR [rdx+0x60],0x0
  4025cc:	mov    BYTE PTR [rdx+0x348],0x1
  4025d3:	pop    rdi
  4025d4:	ret    
  4025d5:	nop
  4025d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4025e0:	push   r13
  4025e2:	push   r12
  4025e4:	push   rbp
  4025e5:	push   rdi
  4025e6:	push   rsi
  4025e7:	push   rbx
  4025e8:	sub    rsp,0x28
  4025ec:	mov    rbp,QWORD PTR [rip+0x3302d]        # 0x435620
  4025f3:	mov    r13,QWORD PTR [rip+0x32fb6]        # 0x4355b0
  4025fa:	test   rcx,rcx
  4025fd:	mov    rbx,rcx
  402600:	je     0x402c71
  402606:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402610:	mov    rcx,QWORD PTR [rbx+0x10]
  402614:	mov    r12,QWORD PTR [rbx+0x3d8]
  40261b:	call   0x416220
  402620:	mov    rcx,QWORD PTR [rbx+0x18]
  402624:	mov    QWORD PTR [rbx+0x10],0x0
  40262c:	call   0x416220
  402631:	mov    rcx,QWORD PTR [rbx+0x20]
  402635:	mov    QWORD PTR [rbx+0x18],0x0
  40263d:	call   0x416220
  402642:	mov    rcx,QWORD PTR [rbx+0x28]
  402646:	mov    QWORD PTR [rbx+0x20],0x0
  40264e:	call   0x416220
  402653:	mov    rcx,QWORD PTR [rbx+0x30]
  402657:	mov    QWORD PTR [rbx+0x28],0x0
  40265f:	call   0x416220
  402664:	mov    rcx,QWORD PTR [rbx+0x38]
  402668:	mov    QWORD PTR [rbx+0x30],0x0
  402670:	call   0x416220
  402675:	mov    rcx,QWORD PTR [rbx+0x70]
  402679:	mov    QWORD PTR [rbx+0x38],0x0
  402681:	call   0x416220
  402686:	mov    rcx,QWORD PTR [rbx+0x80]
  40268d:	mov    QWORD PTR [rbx+0x70],0x0
  402695:	call   0x416220
  40269a:	mov    rcx,QWORD PTR [rbx+0xa8]
  4026a1:	mov    QWORD PTR [rbx+0x80],0x0
  4026ac:	call   0x416220
  4026b1:	mov    rcx,QWORD PTR [rbx+0xb0]
  4026b8:	mov    QWORD PTR [rbx+0xa8],0x0
  4026c3:	call   0x416220
  4026c8:	mov    rcx,QWORD PTR [rbx+0xb8]
  4026cf:	mov    QWORD PTR [rbx+0xb0],0x0
  4026da:	call   0x416220
  4026df:	mov    rcx,QWORD PTR [rbx+0xd0]
  4026e6:	mov    QWORD PTR [rbx+0xb8],0x0
  4026f1:	call   0x416220
  4026f6:	mov    rcx,QWORD PTR [rbx+0x100]
  4026fd:	mov    QWORD PTR [rbx+0xd0],0x0
  402708:	call   0x416220
  40270d:	mov    rcx,QWORD PTR [rbx+0x110]
  402714:	mov    QWORD PTR [rbx+0x100],0x0
  40271f:	call   0x416220
  402724:	mov    rcx,QWORD PTR [rbx+0x118]
  40272b:	mov    QWORD PTR [rbx+0x110],0x0
  402736:	call   0x416220
  40273b:	mov    rcx,QWORD PTR [rbx+0x120]
  402742:	mov    QWORD PTR [rbx+0x118],0x0
  40274d:	call   0x416220
  402752:	mov    rcx,QWORD PTR [rbx+0x128]
  402759:	mov    QWORD PTR [rbx+0x120],0x0
  402764:	call   0x416220
  402769:	mov    rcx,QWORD PTR [rbx+0x130]
  402770:	mov    QWORD PTR [rbx+0x128],0x0
  40277b:	call   0x416220
  402780:	mov    rcx,QWORD PTR [rbx+0x138]
  402787:	mov    QWORD PTR [rbx+0x130],0x0
  402792:	call   0x416220
  402797:	mov    rcx,QWORD PTR [rbx+0x140]
  40279e:	mov    QWORD PTR [rbx+0x138],0x0
  4027a9:	call   0x416220
  4027ae:	mov    rcx,QWORD PTR [rbx+0x148]
  4027b5:	mov    QWORD PTR [rbx+0x140],0x0
  4027c0:	call   0x416220
  4027c5:	mov    rcx,QWORD PTR [rbx+0xf8]
  4027cc:	mov    QWORD PTR [rbx+0x148],0x0
  4027d7:	call   0x416220
  4027dc:	mov    rcx,QWORD PTR [rbx+0xf0]
  4027e3:	mov    QWORD PTR [rbx+0xf8],0x0
  4027ee:	call   0x416220
  4027f3:	mov    rcx,QWORD PTR [rbx+0xe8]
  4027fa:	mov    QWORD PTR [rbx+0xf0],0x0
  402805:	call   0x416220
  40280a:	mov    rcx,QWORD PTR [rbx+0xe0]
  402811:	mov    QWORD PTR [rbx+0xe8],0x0
  40281c:	call   0x416220
  402821:	mov    rcx,QWORD PTR [rbx+0x158]
  402828:	mov    QWORD PTR [rbx+0xe0],0x0
  402833:	call   0x416220
  402838:	mov    rcx,QWORD PTR [rbx+0x160]
  40283f:	mov    QWORD PTR [rbx+0x158],0x0
  40284a:	call   0x416220
  40284f:	mov    rcx,QWORD PTR [rbx+0x168]
  402856:	mov    QWORD PTR [rbx+0x160],0x0
  402861:	call   rbp
  402863:	mov    rcx,QWORD PTR [rbx+0x170]
  40286a:	call   0x416220
  40286f:	mov    rcx,QWORD PTR [rbx+0x188]
  402876:	mov    QWORD PTR [rbx+0x170],0x0
  402881:	call   0x416220
  402886:	mov    rsi,QWORD PTR [rbx+0x190]
  40288d:	mov    QWORD PTR [rbx+0x188],0x0
  402898:	test   rsi,rsi
  40289b:	je     0x4028de
  40289d:	nop    DWORD PTR [rax]
  4028a0:	mov    rcx,QWORD PTR [rsi+0x8]
  4028a4:	mov    rdi,QWORD PTR [rsi]
  4028a7:	call   0x416220
  4028ac:	mov    rcx,QWORD PTR [rsi+0x10]
  4028b0:	mov    QWORD PTR [rsi+0x8],0x0
  4028b8:	call   0x416220
  4028bd:	mov    rcx,QWORD PTR [rsi+0x18]
  4028c1:	mov    QWORD PTR [rsi+0x10],0x0
  4028c9:	call   0x416220
  4028ce:	mov    rcx,rsi
  4028d1:	mov    rsi,rdi
  4028d4:	call   0x416220
  4028d9:	test   rdi,rdi
  4028dc:	jne    0x4028a0
  4028de:	mov    rcx,QWORD PTR [rbx+0x1b0]
  4028e5:	mov    QWORD PTR [rbx+0x190],0x0
  4028f0:	mov    QWORD PTR [rbx+0x198],0x0
  4028fb:	mov    QWORD PTR [rbx+0x1a0],0x0
  402906:	mov    QWORD PTR [rbx+0x1a8],0x0
  402911:	call   0x416220
  402916:	mov    rcx,QWORD PTR [rbx+0x1b8]
  40291d:	mov    QWORD PTR [rbx+0x1b0],0x0
  402928:	call   0x416220
  40292d:	mov    rcx,QWORD PTR [rbx+0x1c0]
  402934:	mov    QWORD PTR [rbx+0x1b8],0x0
  40293f:	call   0x416220
  402944:	mov    rcx,QWORD PTR [rbx+0x1c8]
  40294b:	mov    QWORD PTR [rbx+0x1c0],0x0
  402956:	call   0x416220
  40295b:	mov    rcx,QWORD PTR [rbx+0x1d0]
  402962:	mov    QWORD PTR [rbx+0x1c8],0x0
  40296d:	call   0x416220
  402972:	mov    rcx,QWORD PTR [rbx+0x1d8]
  402979:	mov    QWORD PTR [rbx+0x1d0],0x0
  402984:	call   0x416220
  402989:	mov    rcx,QWORD PTR [rbx+0x1e0]
  402990:	mov    QWORD PTR [rbx+0x1d8],0x0
  40299b:	call   0x416220
  4029a0:	mov    rcx,QWORD PTR [rbx+0x1e8]
  4029a7:	mov    QWORD PTR [rbx+0x1e0],0x0
  4029b2:	call   0x416220
  4029b7:	mov    rcx,QWORD PTR [rbx+0x1f0]
  4029be:	mov    QWORD PTR [rbx+0x1e8],0x0
  4029c9:	call   0x416220
  4029ce:	mov    rcx,QWORD PTR [rbx+0x1f8]
  4029d5:	mov    QWORD PTR [rbx+0x1f0],0x0
  4029e0:	call   0x416220
  4029e5:	mov    rcx,QWORD PTR [rbx+0x200]
  4029ec:	mov    QWORD PTR [rbx+0x1f8],0x0
  4029f7:	call   0x416220
  4029fc:	mov    rcx,QWORD PTR [rbx+0x210]
  402a03:	mov    QWORD PTR [rbx+0x200],0x0
  402a0e:	call   0x416220
  402a13:	mov    rcx,QWORD PTR [rbx+0x208]
  402a1a:	mov    QWORD PTR [rbx+0x210],0x0
  402a25:	call   0x416220
  402a2a:	mov    rcx,QWORD PTR [rbx+0x218]
  402a31:	mov    QWORD PTR [rbx+0x208],0x0
  402a3c:	call   0x416220
  402a41:	mov    rcx,QWORD PTR [rbx+0x220]
  402a48:	mov    QWORD PTR [rbx+0x218],0x0
  402a53:	call   0x416220
  402a58:	mov    rcx,QWORD PTR [rbx+0x228]
  402a5f:	mov    QWORD PTR [rbx+0x220],0x0
  402a6a:	call   0x416220
  402a6f:	mov    rcx,QWORD PTR [rbx+0x230]
  402a76:	mov    QWORD PTR [rbx+0x228],0x0
  402a81:	call   0x416220
  402a86:	mov    rcx,QWORD PTR [rbx+0x238]
  402a8d:	mov    QWORD PTR [rbx+0x230],0x0
  402a98:	call   0x416220
  402a9d:	mov    rcx,QWORD PTR [rbx+0x240]
  402aa4:	mov    QWORD PTR [rbx+0x238],0x0
  402aaf:	call   0x416220
  402ab4:	mov    rcx,QWORD PTR [rbx+0x248]
  402abb:	mov    QWORD PTR [rbx+0x240],0x0
  402ac6:	call   0x416220
  402acb:	mov    rcx,QWORD PTR [rbx+0x250]
  402ad2:	mov    QWORD PTR [rbx+0x248],0x0
  402add:	call   0x416220
  402ae2:	mov    rcx,QWORD PTR [rbx+0x258]
  402ae9:	mov    QWORD PTR [rbx+0x250],0x0
  402af4:	call   0x416220
  402af9:	mov    rcx,QWORD PTR [rbx+0x268]
  402b00:	mov    QWORD PTR [rbx+0x258],0x0
  402b0b:	call   0x416220
  402b10:	mov    rcx,QWORD PTR [rbx+0x270]
  402b17:	mov    QWORD PTR [rbx+0x268],0x0
  402b22:	call   0x416220
  402b27:	mov    rcx,QWORD PTR [rbx+0x3a8]
  402b2e:	mov    QWORD PTR [rbx+0x270],0x0
  402b39:	call   0x416220
  402b3e:	mov    rcx,QWORD PTR [rbx+0x3b8]
  402b45:	mov    QWORD PTR [rbx+0x3a8],0x0
  402b50:	call   0x416220
  402b55:	mov    rcx,QWORD PTR [rbx+0x290]
  402b5c:	mov    QWORD PTR [rbx+0x3b8],0x0
  402b67:	call   0x416220
  402b6c:	mov    rcx,QWORD PTR [rbx+0x60]
  402b70:	mov    QWORD PTR [rbx+0x290],0x0
  402b7b:	call   0x416220
  402b80:	mov    rcx,QWORD PTR [rbx+0x2a0]
  402b87:	mov    QWORD PTR [rbx+0x60],0x0
  402b8f:	call   rbp
  402b91:	mov    rcx,QWORD PTR [rbx+0x2a8]
  402b98:	call   rbp
  402b9a:	mov    rcx,QWORD PTR [rbx+0x2b0]
  402ba1:	call   rbp
  402ba3:	mov    rcx,QWORD PTR [rbx+0x2d0]
  402baa:	call   rbp
  402bac:	mov    rcx,QWORD PTR [rbx+0x2d8]
  402bb3:	call   rbp
  402bb5:	mov    rcx,QWORD PTR [rbx+0x2e0]
  402bbc:	test   rcx,rcx
  402bbf:	je     0x402bcf
  402bc1:	call   r13
  402bc4:	mov    QWORD PTR [rbx+0x2e0],0x0
  402bcf:	mov    rcx,QWORD PTR [rbx+0x2f0]
  402bd6:	mov    QWORD PTR [rbx+0x2e8],0x0
  402be1:	call   rbp
  402be3:	mov    rcx,QWORD PTR [rbx+0x2f8]
  402bea:	call   rbp
  402bec:	mov    rcx,QWORD PTR [rbx+0x300]
  402bf3:	call   rbp
  402bf5:	mov    rcx,QWORD PTR [rbx+0x328]
  402bfc:	call   0x416220
  402c01:	mov    rcx,QWORD PTR [rbx+0x338]
  402c08:	mov    QWORD PTR [rbx+0x328],0x0
  402c13:	call   0x416220
  402c18:	mov    rcx,QWORD PTR [rbx+0x340]
  402c1f:	mov    QWORD PTR [rbx+0x338],0x0
  402c2a:	call   0x416220
  402c2f:	mov    rcx,QWORD PTR [rbx+0x360]
  402c36:	mov    QWORD PTR [rbx+0x340],0x0
  402c41:	call   0x416220
  402c46:	mov    rcx,QWORD PTR [rbx+0x368]
  402c4d:	mov    QWORD PTR [rbx+0x360],0x0
  402c58:	call   0x416220
  402c5d:	mov    rcx,rbx
  402c60:	mov    rbx,r12
  402c63:	call   0x416220
  402c68:	test   r12,r12
  402c6b:	jne    0x402610
  402c71:	add    rsp,0x28
  402c75:	pop    rbx
  402c76:	pop    rsi
  402c77:	pop    rdi
  402c78:	pop    rbp
  402c79:	pop    r12
  402c7b:	pop    r13
  402c7d:	ret    
  402c7e:	nop
  402c7f:	nop
  402c80:	push   r15
  402c82:	push   r14
  402c84:	push   r13
  402c86:	push   r12
  402c88:	push   rbp
  402c89:	push   rdi
  402c8a:	push   rsi
  402c8b:	push   rbx
  402c8c:	sub    rsp,0x38
  402c90:	mov    esi,0x1b
  402c95:	mov    rbx,rcx
  402c98:	mov    r14,rdx
  402c9b:	call   0x416150
  402ca0:	mov    rcx,rbx
  402ca3:	mov    rbp,rax
  402ca6:	call   0x4160e8
  402cab:	test   rax,rax
  402cae:	mov    rdi,rax
  402cb1:	je     0x402da6
  402cb7:	lea    rcx,[rbp+0x1]
  402cbb:	call   0x4161d0
  402cc0:	test   rax,rax
  402cc3:	mov    rbx,rax
  402cc6:	je     0x402d9e
  402ccc:	lea    rdx,[rip+0x1557d]        # 0x418250
  402cd3:	mov    BYTE PTR [rax],0x0
  402cd6:	mov    rcx,rdi
  402cd9:	call   0x416120
  402cde:	test   rax,rax
  402ce1:	mov    r15,rax
  402ce4:	je     0x402d94
  402cea:	mov    r12,QWORD PTR [rip+0x32907]        # 0x4355f8
  402cf1:	mov    r13,r12
  402cf4:	jmp    0x402d7a
  402cf9:	nop    DWORD PTR [rax+0x0]
  402d00:	mov    rcx,rbx
  402d03:	mov    edx,DWORD PTR [rcx]
  402d05:	add    rcx,0x4
  402d09:	lea    r9d,[rdx-0x1010101]
  402d10:	not    edx
  402d12:	and    r9d,edx
  402d15:	and    r9d,0x80808080
  402d1c:	je     0x402d03
  402d1e:	mov    eax,r9d
  402d21:	shr    eax,0x10
  402d24:	test   r9d,0x8080
  402d2b:	cmove  r9d,eax
  402d2f:	lea    rax,[rcx+0x2]
  402d33:	cmove  rcx,rax
  402d37:	add    r9b,r9b
  402d3a:	sbb    rcx,0x3
  402d3e:	sub    rcx,rbx
  402d41:	jne    0x402dc0
  402d43:	cmp    rdi,r15
  402d46:	je     0x402e40
  402d4c:	mov    QWORD PTR [rsp+0x20],r15
  402d51:	lea    r9,[rip+0x154fb]        # 0x418253
  402d58:	lea    r8,[rip+0x154f6]        # 0x418255
  402d5f:	mov    rdx,rbp
  402d62:	mov    rcx,rbx
  402d65:	call   r12
  402d68:	xor    edx,edx
  402d6a:	mov    rcx,rbx
  402d6d:	call   0x4160a0
  402d72:	cmp    eax,0xffffffff
  402d75:	je     0x402dee
  402d77:	mov    r15,rsi
  402d7a:	lea    rdx,[rip+0x154cf]        # 0x418250
  402d81:	xor    ecx,ecx
  402d83:	call   0x416120
  402d88:	test   rax,rax
  402d8b:	mov    rsi,rax
  402d8e:	jne    0x402d00
  402d94:	xor    esi,esi
  402d96:	mov    rcx,rbx
  402d99:	call   0x416220
  402d9e:	mov    rcx,rdi
  402da1:	call   0x416220
  402da6:	mov    eax,esi
  402da8:	add    rsp,0x38
  402dac:	pop    rbx
  402dad:	pop    rsi
  402dae:	pop    rdi
  402daf:	pop    rbp
  402db0:	pop    r12
  402db2:	pop    r13
  402db4:	pop    r14
  402db6:	pop    r15
  402db8:	ret    
  402db9:	nop    DWORD PTR [rax+0x0]
  402dc0:	mov    rdx,rbp
  402dc3:	lea    r9,[rip+0x15489]        # 0x418253
  402dca:	lea    r8,[rip+0x15484]        # 0x418255
  402dd1:	sub    rdx,rcx
  402dd4:	mov    QWORD PTR [rsp+0x20],r15
  402dd9:	add    rcx,rbx
  402ddc:	call   r13
  402ddf:	xor    edx,edx
  402de1:	mov    rcx,rbx
  402de4:	call   0x4160a0
  402de9:	cmp    eax,0xffffffff
  402dec:	jne    0x402d77
  402dee:	mov    rcx,rbx
  402df1:	call   0x4160c8
  402df6:	cmp    eax,0xffffffff
  402df9:	jne    0x402d77
  402dff:	call   QWORD PTR [rip+0x328bb]        # 0x4356c0
  402e05:	cmp    eax,0x1e
  402e08:	je     0x402e79
  402e0a:	jg     0x402e50
  402e0c:	cmp    eax,0xd
  402e0f:	je     0x402ed0
  402e15:	cmp    eax,0x1c
  402e18:	jne    0x402eb3
  402e1e:	mov    r8,rbx
  402e21:	lea    rdx,[rip+0x154b8]        # 0x4182e0
  402e28:	mov    rcx,r14
  402e2b:	mov    esi,0x17
  402e30:	call   QWORD PTR [rip+0x327b2]        # 0x4355e8
  402e36:	jmp    0x402d96
  402e3b:	nop    DWORD PTR [rax+rax*1+0x0]
  402e40:	mov    rdx,rdi
  402e43:	mov    rcx,rbx
  402e46:	call   0x416168
  402e4b:	jmp    0x402d68
  402e50:	cmp    eax,0x26
  402e53:	je     0x402e96
  402e55:	cmp    eax,0x2755
  402e5a:	jne    0x402eb3
  402e5c:	mov    r8,rbx
  402e5f:	lea    rdx,[rip+0x154c2]        # 0x418328
  402e66:	mov    rcx,r14
  402e69:	mov    esi,0x17
  402e6e:	call   QWORD PTR [rip+0x32774]        # 0x4355e8
  402e74:	jmp    0x402d96
  402e79:	mov    r8,rbx
  402e7c:	lea    rdx,[rip+0x15435]        # 0x4182b8
  402e83:	mov    rcx,r14
  402e86:	mov    esi,0x17
  402e8b:	call   QWORD PTR [rip+0x32757]        # 0x4355e8
  402e91:	jmp    0x402d96
  402e96:	mov    r8,rbx
  402e99:	lea    rdx,[rip+0x153f0]        # 0x418290
  402ea0:	mov    rcx,r14
  402ea3:	mov    esi,0x17
  402ea8:	call   QWORD PTR [rip+0x3273a]        # 0x4355e8
  402eae:	jmp    0x402d96
  402eb3:	mov    r8,rbx
  402eb6:	lea    rdx,[rip+0x154a8]        # 0x418365
  402ebd:	mov    rcx,r14
  402ec0:	mov    esi,0x17
  402ec5:	call   QWORD PTR [rip+0x3271d]        # 0x4355e8
  402ecb:	jmp    0x402d96
  402ed0:	mov    r8,rbx
  402ed3:	lea    rdx,[rip+0x15386]        # 0x418260
  402eda:	mov    rcx,r14
  402edd:	mov    esi,0x17
  402ee2:	call   QWORD PTR [rip+0x32700]        # 0x4355e8
  402ee8:	jmp    0x402d96
  402eed:	nop
  402eee:	nop
  402eef:	nop
  402ef0:	push   rbp
  402ef1:	push   rdi
  402ef2:	push   rsi
  402ef3:	push   rbx
  402ef4:	sub    rsp,0x28
  402ef8:	mov    edi,0x2
  402efd:	test   rcx,rcx
  402f00:	je     0x402f12
  402f02:	mov    rbx,rdx
  402f05:	mov    rsi,rcx
  402f08:	call   0x416150
  402f0d:	cmp    rax,rbx
  402f10:	jae    0x402f20
  402f12:	mov    eax,edi
  402f14:	add    rsp,0x28
  402f18:	pop    rbx
  402f19:	pop    rsi
  402f1a:	pop    rdi
  402f1b:	pop    rbp
  402f1c:	ret    
  402f1d:	nop    DWORD PTR [rax]
  402f20:	test   rax,rax
  402f23:	je     0x402f70
  402f25:	test   rbx,rbx
  402f28:	je     0x402f70
  402f2a:	lea    rbp,[rsi+rbx*1-0x1]
  402f2f:	lea    rdx,[rip+0x1545a]        # 0x418390
  402f36:	mov    dil,0x1
  402f39:	mov    rcx,rbp
  402f3c:	call   0x416138
  402f41:	test   rax,rax
  402f44:	jne    0x402f12
  402f46:	cmp    rbx,0x1
  402f4a:	ja     0x402f63
  402f4c:	jmp    0x402f80
  402f4e:	xchg   ax,ax
  402f50:	cmp    al,0x2f
  402f52:	setne  dl
  402f55:	cmp    al,0x5c
  402f57:	setne  al
  402f5a:	test   dl,al
  402f5c:	je     0x402f80
  402f5e:	cmp    rsi,rbp
  402f61:	je     0x402f80
  402f63:	sub    rbp,0x1
  402f67:	movzx  eax,BYTE PTR [rbp+0x0]
  402f6b:	cmp    al,0x3a
  402f6d:	jne    0x402f50
  402f6f:	nop
  402f70:	mov    edi,0x1
  402f75:	mov    eax,edi
  402f77:	add    rsp,0x28
  402f7b:	pop    rbx
  402f7c:	pop    rsi
  402f7d:	pop    rdi
  402f7e:	pop    rbp
  402f7f:	ret    
  402f80:	xor    edi,edi
  402f82:	jmp    0x402f12
  402f84:	xchg   ax,ax
  402f86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402f90:	push   r15
  402f92:	push   r14
  402f94:	push   r13
  402f96:	push   r12
  402f98:	push   rbp
  402f99:	push   rdi
  402f9a:	push   rsi
  402f9b:	push   rbx
  402f9c:	sub    rsp,0x138
  402fa3:	test   rcx,rcx
  402fa6:	je     0x403244
  402fac:	test   rdx,rdx
  402faf:	mov    QWORD PTR [rcx],0x0
  402fb6:	je     0x403244
  402fbc:	test   r8b,0x2
  402fc0:	mov    edi,r8d
  402fc3:	mov    rsi,rdx
  402fc6:	mov    rbp,rcx
  402fc9:	je     0x402fd4
  402fcb:	cmp    BYTE PTR [rdx],0x5c
  402fce:	je     0x40324e
  402fd4:	mov    rcx,rsi
  402fd7:	call   0x416150
  402fdc:	cmp    rax,0x103
  402fe2:	jbe    0x403003
  402fe4:	test   dil,0x8
  402fe8:	je     0x403169
  402fee:	mov    edx,0x103
  402ff3:	mov    rcx,rsi
  402ff6:	call   0x402ef0
  402ffb:	test   eax,eax
  402ffd:	jne    0x403169
  403003:	lea    rbx,[rsp+0x20]
  403008:	mov    rdx,rsi
  40300b:	mov    r8d,0x103
  403011:	mov    r13d,edi
  403014:	and    edi,0x3
  403017:	mov    rcx,rbx
  40301a:	mov    r14,rbx
  40301d:	and    r13d,0x8
  403021:	call   0x416140
  403026:	mov    rcx,rbx
  403029:	mov    BYTE PTR [rsp+0x123],0x0
  403031:	call   0x4119c0
  403036:	mov    rsi,QWORD PTR [rip+0x325f3]        # 0x435630
  40303d:	mov    r12,rax
  403040:	mov    r8d,0x3
  403046:	lea    rdx,[rip+0x15347]        # 0x418394
  40304d:	mov    rcx,r14
  403050:	call   rsi
  403052:	test   eax,eax
  403054:	je     0x403192
  40305a:	mov    eax,0x3
  40305f:	mov    edx,0x3
  403064:	add    rax,r14
  403067:	movzx  r9d,BYTE PTR [rax]
  40306b:	cmp    r9b,0x20
  40306f:	jne    0x403092
  403071:	movsxd rdx,edx
  403074:	lea    r8,[r14+rdx*1+0x1]
  403079:	nop    DWORD PTR [rax+0x0]
  403080:	mov    rax,r8
  403083:	add    r8,0x1
  403087:	movzx  r9d,BYTE PTR [r8-0x1]
  40308c:	cmp    r9b,0x20
  403090:	je     0x403080
  403092:	cmp    r9b,0x2e
  403096:	je     0x403178
  40309c:	cmp    r9b,0x3a
  4030a0:	je     0x403170
  4030a6:	test   r9b,r9b
  4030a9:	jne    0x40317b
  4030af:	mov    rcx,r14
  4030b2:	call   0x416150
  4030b7:	mov    r8,rbx
  4030ba:	mov    r15,rax
  4030bd:	mov    r12,rax
  4030c0:	mov    r9d,DWORD PTR [r8]
  4030c3:	add    r8,0x4
  4030c7:	lea    ecx,[r9-0x1010101]
  4030ce:	not    r9d
  4030d1:	and    ecx,r9d
  4030d4:	and    ecx,0x80808080
  4030da:	je     0x4030c0
  4030dc:	mov    eax,ecx
  4030de:	shr    eax,0x10
  4030e1:	test   ecx,0x8080
  4030e7:	cmove  ecx,eax
  4030ea:	lea    rax,[r8+0x2]
  4030ee:	cmove  r8,rax
  4030f2:	add    cl,cl
  4030f4:	sbb    r8,0x3
  4030f8:	sub    r8,rbx
  4030fb:	cmp    r8,0x103
  403102:	jne    0x403122
  403104:	test   r13d,r13d
  403107:	lea    r12,[r15-0x1]
  40310b:	je     0x403169
  40310d:	mov    rdx,r12
  403110:	mov    rcx,r14
  403113:	call   0x402ef0
  403118:	test   eax,eax
  40311a:	jne    0x403169
  40311c:	mov    BYTE PTR [r14+r15*1-0x1],0x0
  403122:	lea    rcx,[r14+0x1]
  403126:	lea    r8,[r12+0x1]
  40312b:	mov    rdx,r14
  40312e:	call   0x4161b0
  403133:	cmp    r14,rbx
  403136:	mov    BYTE PTR [r14],0x5f
  40313a:	je     0x403293
  403140:	mov    rcx,rbx
  403143:	call   0x4160e8
  403148:	cmp    rax,0x1
  40314c:	mov    QWORD PTR [rbp+0x0],rax
  403150:	sbb    eax,eax
  403152:	and    eax,0x3
  403155:	add    rsp,0x138
  40315c:	pop    rbx
  40315d:	pop    rsi
  40315e:	pop    rdi
  40315f:	pop    rbp
  403160:	pop    r12
  403162:	pop    r13
  403164:	pop    r14
  403166:	pop    r15
  403168:	ret    
  403169:	mov    eax,0x1
  40316e:	jmp    0x403155
  403170:	test   edi,edi
  403172:	jne    0x4030af
  403178:	mov    BYTE PTR [rax],0x5f
  40317b:	cmp    r14,rbx
  40317e:	jne    0x403140
  403180:	cmp    r12,rbx
  403183:	je     0x403140
  403185:	test   r12,r12
  403188:	je     0x403140
  40318a:	mov    r14,r12
  40318d:	jmp    0x403040
  403192:	mov    r8d,0x3
  403198:	lea    rdx,[rip+0x151f9]        # 0x418398
  40319f:	mov    rcx,r14
  4031a2:	call   rsi
  4031a4:	test   eax,eax
  4031a6:	jne    0x40305a
  4031ac:	mov    r8d,0x3
  4031b2:	lea    rdx,[rip+0x151e3]        # 0x41839c
  4031b9:	mov    rcx,r14
  4031bc:	call   rsi
  4031be:	test   eax,eax
  4031c0:	jne    0x40305a
  4031c6:	mov    r8d,0x3
  4031cc:	lea    rdx,[rip+0x151cd]        # 0x4183a0
  4031d3:	mov    rcx,r14
  4031d6:	call   rsi
  4031d8:	test   eax,eax
  4031da:	jne    0x40305a
  4031e0:	lea    rdx,[rip+0x151bd]        # 0x4183a4
  4031e7:	mov    rcx,r14
  4031ea:	mov    r8d,0x6
  4031f0:	call   rsi
  4031f2:	mov    ecx,eax
  4031f4:	mov    edx,0x6
  4031f9:	mov    eax,0x6
  4031fe:	test   ecx,ecx
  403200:	jne    0x403064
  403206:	mov    r8d,0x3
  40320c:	lea    rdx,[rip+0x15198]        # 0x4183ab
  403213:	mov    rcx,r14
  403216:	call   rsi
  403218:	test   eax,eax
  40321a:	je     0x4032a3
  403220:	movzx  eax,BYTE PTR [r14+0x3]
  403225:	lea    edx,[rax-0x31]
  403228:	cmp    dl,0x9
  40322b:	sbb    rax,rax
  40322e:	not    rax
  403231:	add    rax,0x4
  403235:	cmp    dl,0x9
  403238:	sbb    edx,edx
  40323a:	not    edx
  40323c:	add    edx,0x4
  40323f:	jmp    0x403064
  403244:	mov    eax,0x2
  403249:	jmp    0x403155
  40324e:	cmp    BYTE PTR [rdx+0x1],0x5c
  403252:	jne    0x402fd4
  403258:	mov    rcx,rdx
  40325b:	call   0x416150
  403260:	lea    rbx,[rax+0x1]
  403264:	mov    rcx,rbx
  403267:	call   0x4161d0
  40326c:	mov    rcx,rax
  40326f:	mov    QWORD PTR [rbp+0x0],rax
  403273:	mov    eax,0x3
  403278:	test   rcx,rcx
  40327b:	je     0x403155
  403281:	mov    r8,rbx
  403284:	mov    rdx,rsi
  403287:	call   0x416140
  40328c:	xor    eax,eax
  40328e:	jmp    0x403155
  403293:	mov    rcx,rbx
  403296:	call   0x4119c0
  40329b:	mov    r12,rax
  40329e:	jmp    0x403180
  4032a3:	mov    r8d,0x3
  4032a9:	lea    rdx,[rip+0x150ff]        # 0x4183af
  4032b0:	mov    rcx,r14
  4032b3:	call   rsi
  4032b5:	test   eax,eax
  4032b7:	jne    0x403220
  4032bd:	jmp    0x40317b
  4032c2:	nop    DWORD PTR [rax+0x0]
  4032c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4032d0:	push   r15
  4032d2:	push   r14
  4032d4:	push   r13
  4032d6:	push   r12
  4032d8:	push   rbp
  4032d9:	push   rdi
  4032da:	push   rsi
  4032db:	push   rbx
  4032dc:	sub    rsp,0x38
  4032e0:	test   rcx,rcx
  4032e3:	je     0x4033d3
  4032e9:	test   rdx,rdx
  4032ec:	mov    QWORD PTR [rcx],0x0
  4032f3:	je     0x4033d3
  4032f9:	mov    r13d,r8d
  4032fc:	mov    r12d,0xff
  403302:	and    r13d,0x2
  403306:	je     0x403316
  403308:	cmp    BYTE PTR [rdx],0x5c
  40330b:	mov    r12w,0x103
  403310:	je     0x4033e0
  403316:	mov    rbx,rcx
  403319:	mov    rcx,rdx
  40331c:	mov    ebp,r8d
  40331f:	mov    rsi,rdx
  403322:	call   0x416150
  403327:	cmp    r12,rax
  40332a:	mov    r15,rax
  40332d:	jae    0x403350
  40332f:	test   bpl,0x8
  403333:	mov    edi,0x1
  403338:	je     0x4033c0
  40333e:	mov    rdx,r12
  403341:	mov    rcx,rsi
  403344:	call   0x402ef0
  403349:	test   eax,eax
  40334b:	jne    0x4033c0
  40334d:	mov    r15,r12
  403350:	lea    rcx,[r15+0x1]
  403354:	mov    edi,0x3
  403359:	call   0x4161d0
  40335e:	test   rax,rax
  403361:	mov    r14,rax
  403364:	je     0x4033c0
  403366:	mov    r8,r15
  403369:	mov    rdx,rsi
  40336c:	mov    rcx,rax
  40336f:	call   0x416140
  403374:	lea    r8,[r14+r15*1]
  403378:	test   r13d,r13d
  40337b:	mov    BYTE PTR [r8],0x0
  40337f:	je     0x4033f2
  403381:	lea    rdi,[rip+0x15032]        # 0x4183ba
  403388:	mov    ecx,0x4
  40338d:	mov    rsi,r14
  403390:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403392:	jne    0x4034e5
  403398:	movzx  r11d,BYTE PTR [r14+0x4]
  40339d:	lea    rdx,[r14+0x4]
  4033a1:	mov    QWORD PTR [rsp+0x28],rdx
  4033a6:	test   r11b,r11b
  4033a9:	jne    0x403407
  4033ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4033b0:	test   bpl,0x4
  4033b4:	je     0x403500
  4033ba:	mov    QWORD PTR [rbx],r14
  4033bd:	xor    edi,edi
  4033bf:	nop
  4033c0:	mov    eax,edi
  4033c2:	add    rsp,0x38
  4033c6:	pop    rbx
  4033c7:	pop    rsi
  4033c8:	pop    rdi
  4033c9:	pop    rbp
  4033ca:	pop    r12
  4033cc:	pop    r13
  4033ce:	pop    r14
  4033d0:	pop    r15
  4033d2:	ret    
  4033d3:	mov    edi,0x2
  4033d8:	jmp    0x4033c0
  4033da:	nop    WORD PTR [rax+rax*1+0x0]
  4033e0:	cmp    BYTE PTR [rdx+0x1],0x5c
  4033e4:	mov    eax,0x7ffe
  4033e9:	cmove  r12,rax
  4033ed:	jmp    0x403316
  4033f2:	movzx  r11d,BYTE PTR [r14]
  4033f6:	mov    QWORD PTR [rsp+0x28],r14
  4033fb:	mov    rdx,r14
  4033fe:	test   r11b,r11b
  403401:	je     0x40348a
  403407:	mov    ecx,ebp
  403409:	and    ecx,0x3
  40340c:	nop    DWORD PTR [rax+0x0]
  403410:	lea    eax,[r11-0x1]
  403414:	cmp    al,0x1e
  403416:	jbe    0x4034e0
  40341c:	cmp    r11b,0x3a
  403420:	jne    0x40342a
  403422:	test   ecx,ecx
  403424:	je     0x4034e0
  40342a:	test   r13d,r13d
  40342d:	jne    0x403443
  40342f:	cmp    r11b,0x5c
  403433:	je     0x4034e0
  403439:	cmp    r11b,0x2f
  40343d:	je     0x4034e0
  403443:	cmp    r11b,0x7c
  403447:	je     0x4034e0
  40344d:	lea    r9,[rip+0x14f5f]        # 0x4183b3
  403454:	jmp    0x403465
  403456:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403460:	cmp    r11b,r10b
  403463:	je     0x4034e0
  403465:	add    r9,0x1
  403469:	movzx  r10d,BYTE PTR [r9]
  40346d:	test   r10b,r10b
  403470:	jne    0x403460
  403472:	mov    rax,QWORD PTR [rsp+0x28]
  403477:	lea    rdx,[rax+0x1]
  40347b:	mov    QWORD PTR [rsp+0x28],rdx
  403480:	movzx  r11d,BYTE PTR [rax+0x1]
  403485:	test   r11b,r11b
  403488:	jne    0x403410
  40348a:	test   r15,r15
  40348d:	je     0x4033b0
  403493:	xor    ecx,ecx
  403495:	test   r13d,r13d
  403498:	je     0x4034ab
  40349a:	jmp    0x4033b0
  40349f:	nop
  4034a0:	cmp    r14,rax
  4034a3:	mov    rcx,rax
  4034a6:	mov    r8,rax
  4034a9:	je     0x4034cf
  4034ab:	lea    rax,[r8-0x1]
  4034af:	mov    QWORD PTR [rsp+0x28],rax
  4034b4:	movzx  edx,BYTE PTR [r8-0x1]
  4034b9:	cmp    dl,0x2e
  4034bc:	je     0x4034a0
  4034be:	cmp    dl,0x20
  4034c1:	je     0x4034a0
  4034c3:	test   rcx,rcx
  4034c6:	mov    rax,rcx
  4034c9:	je     0x4033b0
  4034cf:	mov    BYTE PTR [rax],0x0
  4034d2:	jmp    0x4033b0
  4034d7:	nop    WORD PTR [rax+rax*1+0x0]
  4034e0:	mov    BYTE PTR [rdx],0x5f
  4034e3:	jmp    0x403472
  4034e5:	movzx  r11d,BYTE PTR [r14]
  4034e9:	mov    QWORD PTR [rsp+0x28],r14
  4034ee:	mov    rdx,r14
  4034f1:	test   r11b,r11b
  4034f4:	jne    0x403407
  4034fa:	jmp    0x4033b0
  4034ff:	nop
  403500:	lea    rcx,[rsp+0x28]
  403505:	mov    r8d,ebp
  403508:	mov    rdx,r14
  40350b:	call   0x402f90
  403510:	mov    rcx,r14
  403513:	mov    edi,eax
  403515:	call   0x416220
  40351a:	test   edi,edi
  40351c:	jne    0x4033c0
  403522:	mov    r14,QWORD PTR [rsp+0x28]
  403527:	mov    rcx,r14
  40352a:	call   0x416150
  40352f:	cmp    r12,rax
  403532:	jae    0x4033ba
  403538:	mov    rcx,r14
  40353b:	mov    dil,0x1
  40353e:	call   0x416220
  403543:	jmp    0x4033c0
  403548:	nop    DWORD PTR [rax+rax*1+0x0]
  403550:	push   rdi
  403551:	push   rsi
  403552:	push   rbx
  403553:	sub    rsp,0x40
  403557:	mov    rax,QWORD PTR [rip+0x2cbc2]        # 0x430120
  40355e:	mov    r8,QWORD PTR [rax]
  403561:	xor    eax,eax
  403563:	test   BYTE PTR [r8+0x20],0x4
  403568:	jne    0x403572
  40356a:	add    rsp,0x40
  40356e:	pop    rbx
  40356f:	pop    rsi
  403570:	pop    rdi
  403571:	ret    
  403572:	mov    rsi,rcx
  403575:	mov    ecx,0x105
  40357a:	mov    rbx,rdx
  40357d:	mov    QWORD PTR [rsp+0x38],0x0
  403586:	call   0x4161d0
  40358b:	mov    rdi,rax
  40358e:	mov    eax,0x1b
  403593:	test   rdi,rdi
  403596:	je     0x40356a
  403598:	lea    rax,[rsp+0x38]
  40359d:	xor    r8d,r8d
  4035a0:	xor    ecx,ecx
  4035a2:	mov    BYTE PTR [rdi],0x0
  4035a5:	mov    QWORD PTR [rsp+0x20],rdi
  4035aa:	mov    r9d,0x105
  4035b0:	mov    QWORD PTR [rsp+0x28],rax
  4035b5:	mov    rdx,rbx
  4035b8:	call   QWORD PTR [rip+0x3216a]        # 0x435728
  4035be:	test   eax,eax
  4035c0:	jne    0x4035e0
  4035c2:	xor    ebx,ebx
  4035c4:	mov    rcx,rdi
  4035c7:	call   0x416220
  4035cc:	mov    eax,ebx
  4035ce:	add    rsp,0x40
  4035d2:	pop    rbx
  4035d3:	pop    rsi
  4035d4:	pop    rdi
  4035d5:	ret    
  4035d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4035e0:	mov    rcx,QWORD PTR [rsi+0x1e0]
  4035e7:	call   0x416220
  4035ec:	mov    rcx,rdi
  4035ef:	call   0x4160e8
  4035f4:	test   rax,rax
  4035f7:	mov    QWORD PTR [rsi+0x1e0],rax
  4035fe:	jne    0x4035c2
  403600:	mov    ebx,0x1b
  403605:	jmp    0x4035c4
  403607:	nop
  403608:	nop
  403609:	nop
  40360a:	nop
  40360b:	nop
  40360c:	nop
  40360d:	nop
  40360e:	nop
  40360f:	nop
  403610:	sub    rsp,0x28
  403614:	mov    rcx,QWORD PTR [rip+0x2fa5d]        # 0x433078
  40361b:	call   0x4015a0
  403620:	mov    rcx,QWORD PTR [rip+0x2fa49]        # 0x433070
  403627:	mov    QWORD PTR [rip+0x2fa46],0x0        # 0x433078
  403632:	call   0x4015a0
  403637:	mov    rcx,QWORD PTR [rip+0x2fa2a]        # 0x433068
  40363e:	mov    QWORD PTR [rip+0x2fa27],0x0        # 0x433070
  403649:	call   0x4015a0
  40364e:	mov    rcx,QWORD PTR [rip+0x2fa0b]        # 0x433060
  403655:	mov    QWORD PTR [rip+0x2fa08],0x0        # 0x433068
  403660:	call   0x4015a0
  403665:	mov    rcx,QWORD PTR [rip+0x2f9ec]        # 0x433058
  40366c:	mov    QWORD PTR [rip+0x2f9e9],0x0        # 0x433060
  403677:	call   0x4015a0
  40367c:	mov    QWORD PTR [rip+0x2f9d1],0x0        # 0x433058
  403687:	add    rsp,0x28
  40368b:	ret    
  40368c:	nop    DWORD PTR [rax+0x0]
  403690:	push   rbx
  403691:	sub    rsp,0x20
  403695:	mov    rbx,rcx
  403698:	mov    rcx,QWORD PTR [rcx]
  40369b:	call   0x401530
  4036a0:	test   rax,rax
  4036a3:	je     0x4036b0
  4036a5:	mov    QWORD PTR [rbx],rax
  4036a8:	xor    eax,eax
  4036aa:	add    rsp,0x20
  4036ae:	pop    rbx
  4036af:	ret    
  4036b0:	call   0x403610
  4036b5:	mov    eax,0x1b
  4036ba:	add    rsp,0x20
  4036be:	pop    rbx
  4036bf:	ret    
  4036c0:	push   rsi
  4036c1:	push   rbx
  4036c2:	sub    rsp,0x48
  4036c6:	mov    rsi,rcx
  4036c9:	mov    rcx,rdx
  4036cc:	lea    rdx,[rsp+0x70]
  4036d1:	mov    QWORD PTR [rsp+0x70],r8
  4036d6:	mov    QWORD PTR [rsp+0x78],r9
  4036db:	mov    QWORD PTR [rsp+0x38],rdx
  4036e0:	call   QWORD PTR [rip+0x31f1a]        # 0x435600
  4036e6:	mov    rbx,rax
  4036e9:	mov    eax,0x1b
  4036ee:	test   rbx,rbx
  4036f1:	je     0x40370f
  4036f3:	mov    rdx,rbx
  4036f6:	mov    rcx,rsi
  4036f9:	call   0x403690
  4036fe:	mov    rcx,rbx
  403701:	mov    DWORD PTR [rsp+0x2c],eax
  403705:	call   QWORD PTR [rip+0x31ead]        # 0x4355b8
  40370b:	mov    eax,DWORD PTR [rsp+0x2c]
  40370f:	add    rsp,0x48
  403713:	pop    rbx
  403714:	pop    rsi
  403715:	ret    
  403716:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403720:	lea    rdx,[rip+0x14c99]        # 0x4183c0
  403727:	lea    rcx,[rip+0x2f93a]        # 0x433068
  40372e:	jmp    0x403690
  403733:	nop    DWORD PTR [rax]
  403736:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403740:	push   rbx
  403741:	sub    rsp,0x20
  403745:	cmp    QWORD PTR [rip+0x2f913],0x0        # 0x433060
  40374d:	je     0x403825
  403753:	lea    rdx,[rip+0x14cc8]        # 0x418422
  40375a:	lea    rcx,[rip+0x2f907]        # 0x433068
  403761:	call   0x403690
  403766:	test   eax,eax
  403768:	jne    0x40379c
  40376a:	lea    rbx,[rip+0x14e6f]        # 0x4185e0
  403771:	lea    rdx,[rip+0x14c60]        # 0x4183d8
  403778:	jmp    0x40378c
  40377a:	nop    WORD PTR [rax+rax*1+0x0]
  403780:	add    rbx,0x8
  403784:	mov    rdx,QWORD PTR [rbx]
  403787:	test   rdx,rdx
  40378a:	je     0x4037a2
  40378c:	lea    rcx,[rip+0x2f8d5]        # 0x433068
  403793:	call   0x403690
  403798:	test   eax,eax
  40379a:	je     0x403780
  40379c:	add    rsp,0x20
  4037a0:	pop    rbx
  4037a1:	ret    
  4037a2:	mov    rax,QWORD PTR [rip+0x2f8b7]        # 0x433060
  4037a9:	test   rax,rax
  4037ac:	je     0x4037e0
  4037ae:	mov    rbx,QWORD PTR [rax]
  4037b1:	test   rbx,rbx
  4037b4:	jne    0x4037c9
  4037b6:	jmp    0x4037e0
  4037b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4037c0:	mov    rbx,QWORD PTR [rbx+0x8]
  4037c4:	test   rbx,rbx
  4037c7:	je     0x4037e0
  4037c9:	mov    rdx,QWORD PTR [rbx]
  4037cc:	lea    rcx,[rip+0x2f895]        # 0x433068
  4037d3:	call   0x403690
  4037d8:	test   eax,eax
  4037da:	je     0x4037c0
  4037dc:	jmp    0x40379c
  4037de:	xchg   ax,ax
  4037e0:	lea    rdx,[rip+0x14c3b]        # 0x418422
  4037e7:	lea    rcx,[rip+0x2f87a]        # 0x433068
  4037ee:	call   0x403690
  4037f3:	test   eax,eax
  4037f5:	jne    0x40379c
  4037f7:	lea    rdx,[rip+0x14c25]        # 0x418423
  4037fe:	lea    rcx,[rip+0x2f863]        # 0x433068
  403805:	call   0x403690
  40380a:	test   eax,eax
  40380c:	jne    0x40379c
  40380e:	mov    rcx,QWORD PTR [rip+0x2f84b]        # 0x433060
  403815:	call   0x4015a0
  40381a:	mov    QWORD PTR [rip+0x2f83b],0x0        # 0x433060
  403825:	lea    rdx,[rip+0x14bf6]        # 0x418422
  40382c:	lea    rcx,[rip+0x2f835]        # 0x433068
  403833:	call   0x403690
  403838:	test   eax,eax
  40383a:	jne    0x40379c
  403840:	lea    rdx,[rip+0x14bdf]        # 0x418426
  403847:	lea    rcx,[rip+0x2f81a]        # 0x433068
  40384e:	call   0x403690
  403853:	test   eax,eax
  403855:	jne    0x40379c
  40385b:	lea    rdx,[rip+0x14bc0]        # 0x418422
  403862:	lea    rcx,[rip+0x2f7ff]        # 0x433068
  403869:	add    rsp,0x20
  40386d:	pop    rbx
  40386e:	jmp    0x403690
  403873:	nop    DWORD PTR [rax]
  403876:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403880:	sub    rsp,0x28
  403884:	lea    rdx,[rip+0x14bb9]        # 0x418444
  40388b:	lea    rcx,[rip+0x2f7d6]        # 0x433068
  403892:	call   0x403690
  403897:	test   eax,eax
  403899:	je     0x4038a0
  40389b:	add    rsp,0x28
  40389f:	ret    
  4038a0:	lea    rdx,[rip+0x14bb5]        # 0x41845c
  4038a7:	lea    rcx,[rip+0x2f7ba]        # 0x433068
  4038ae:	add    rsp,0x28
  4038b2:	jmp    0x403690
  4038b7:	nop    WORD PTR [rax+rax*1+0x0]
  4038c0:	push   r13
  4038c2:	push   r12
  4038c4:	push   rbp
  4038c5:	push   rdi
  4038c6:	push   rsi
  4038c7:	push   rbx
  4038c8:	sub    rsp,0x28
  4038cc:	mov    r12,QWORD PTR [rcx+0x40]
  4038d0:	lea    rdi,[rip+0x14bdb]        # 0x4184b2
  4038d7:	mov    r13,rcx
  4038da:	mov    ecx,0x2
  4038df:	mov    rsi,r12
  4038e2:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4038e4:	je     0x403a80
  4038ea:	lea    rdx,[rip+0x14bc3]        # 0x4184b4
  4038f1:	mov    rcx,r12
  4038f4:	mov    ebp,0x1
  4038f9:	call   0x416248
  4038fe:	mov    rbx,rax
  403901:	test   rbx,rbx
  403904:	je     0x403a91
  40390a:	mov    rsi,QWORD PTR [rip+0x31cd7]        # 0x4355e8
  403911:	lea    rdi,[rip+0x14e30]        # 0x418748
  403918:	lea    r8,[rip+0x14b49]        # 0x418468
  40391f:	nop
  403920:	add    rdi,0x8
  403924:	lea    rdx,[rip+0x14bb7]        # 0x4184e2
  40392b:	mov    rcx,rbx
  40392e:	call   rsi
  403930:	mov    r8,QWORD PTR [rdi-0x8]
  403934:	test   r8,r8
  403937:	jne    0x403920
  403939:	mov    rax,QWORD PTR [rip+0x2f738]        # 0x433078
  403940:	test   rax,rax
  403943:	je     0x403968
  403945:	mov    rdi,QWORD PTR [rax]
  403948:	test   rdi,rdi
  40394b:	je     0x403968
  40394d:	nop    DWORD PTR [rax]
  403950:	mov    r8,QWORD PTR [rdi]
  403953:	lea    rdx,[rip+0x14b8c]        # 0x4184e6
  40395a:	mov    rcx,rbx
  40395d:	call   rsi
  40395f:	mov    rdi,QWORD PTR [rdi+0x8]
  403963:	test   rdi,rdi
  403966:	jne    0x403950
  403968:	cmp    QWORD PTR [rip+0x2f700],0x0        # 0x433070
  403970:	je     0x4039a8
  403972:	lea    rdx,[rip+0x14b73]        # 0x4184ec
  403979:	mov    rcx,rbx
  40397c:	call   rsi
  40397e:	mov    rax,QWORD PTR [rip+0x2f6eb]        # 0x433070
  403985:	mov    rdi,QWORD PTR [rax]
  403988:	test   rdi,rdi
  40398b:	je     0x4039a8
  40398d:	nop    DWORD PTR [rax]
  403990:	mov    r8,QWORD PTR [rdi]
  403993:	lea    rdx,[rip+0x14b4c]        # 0x4184e6
  40399a:	mov    rcx,rbx
  40399d:	call   rsi
  40399f:	mov    rdi,QWORD PTR [rdi+0x8]
  4039a3:	test   rdi,rdi
  4039a6:	jne    0x403990
  4039a8:	lea    rdx,[rip+0x14b3d]        # 0x4184ec
  4039af:	mov    rcx,rbx
  4039b2:	call   rsi
  4039b4:	mov    rax,QWORD PTR [rip+0x2f6ad]        # 0x433068
  4039bb:	test   rax,rax
  4039be:	je     0x403a03
  4039c0:	mov    rdi,QWORD PTR [rax]
  4039c3:	test   rdi,rdi
  4039c6:	jne    0x4039e5
  4039c8:	jmp    0x403a03
  4039ca:	nop    WORD PTR [rax+rax*1+0x0]
  4039d0:	lea    rdx,[rip+0x14b0f]        # 0x4184e6
  4039d7:	mov    rcx,rbx
  4039da:	call   rsi
  4039dc:	mov    rdi,QWORD PTR [rdi+0x8]
  4039e0:	test   rdi,rdi
  4039e3:	je     0x403a03
  4039e5:	mov    r8,QWORD PTR [rdi]
  4039e8:	cmp    BYTE PTR [r8],0x0
  4039ec:	jne    0x4039d0
  4039ee:	lea    rdx,[rip+0x14af7]        # 0x4184ec
  4039f5:	mov    rcx,rbx
  4039f8:	call   rsi
  4039fa:	mov    rdi,QWORD PTR [rdi+0x8]
  4039fe:	test   rdi,rdi
  403a01:	jne    0x4039e5
  403a03:	mov    rax,QWORD PTR [rip+0x2f64e]        # 0x433058
  403a0a:	test   rax,rax
  403a0d:	je     0x403a38
  403a0f:	mov    rdi,QWORD PTR [rax]
  403a12:	test   rdi,rdi
  403a15:	je     0x403a38
  403a17:	nop    WORD PTR [rax+rax*1+0x0]
  403a20:	mov    r8,QWORD PTR [rdi]
  403a23:	lea    rdx,[rip+0x14abc]        # 0x4184e6
  403a2a:	mov    rcx,rbx
  403a2d:	call   rsi
  403a2f:	mov    rdi,QWORD PTR [rdi+0x8]
  403a33:	test   rdi,rdi
  403a36:	jne    0x403a20
  403a38:	lea    rdi,[rip+0x14b01]        # 0x418540
  403a3f:	lea    r8,[rip+0x149dc]        # 0x418422
  403a46:	add    rdi,0x8
  403a4a:	lea    rdx,[rip+0x14a91]        # 0x4184e2
  403a51:	mov    rcx,rbx
  403a54:	call   rsi
  403a56:	mov    r8,QWORD PTR [rdi]
  403a59:	test   r8,r8
  403a5c:	jne    0x403a46
  403a5e:	test   bpl,bpl
  403a61:	je     0x403a6c
  403a63:	mov    rcx,rbx
  403a66:	call   0x416260
  403a6b:	nop
  403a6c:	add    rsp,0x28
  403a70:	pop    rbx
  403a71:	pop    rsi
  403a72:	pop    rdi
  403a73:	pop    rbp
  403a74:	pop    r12
  403a76:	pop    r13
  403a78:	jmp    0x403610
  403a7d:	nop    DWORD PTR [rax]
  403a80:	call   QWORD PTR [rip+0x31d1a]        # 0x4357a0
  403a86:	xor    ebp,ebp
  403a88:	lea    rbx,[rax+0x30]
  403a8c:	jmp    0x403901
  403a91:	lea    rdx,[rip+0x14a20]        # 0x4184b8
  403a98:	mov    r8,r12
  403a9b:	mov    rcx,r13
  403a9e:	call   0x408110
  403aa3:	jmp    0x403a6c
  403aa5:	nop
  403aa6:	nop
  403aa7:	nop
  403aa8:	nop
  403aa9:	nop
  403aaa:	nop
  403aab:	nop
  403aac:	nop
  403aad:	nop
  403aae:	nop
  403aaf:	nop
  403ab0:	push   r12
  403ab2:	push   rbp
  403ab3:	push   rdi
  403ab4:	push   rsi
  403ab5:	push   rbx
  403ab6:	sub    rsp,0x20
  403aba:	mov    rsi,QWORD PTR [rcx]
  403abd:	mov    rbp,rcx
  403ac0:	mov    rdi,rdx
  403ac3:	movzx  r8d,BYTE PTR [rsi]
  403ac7:	cmp    r8b,0x22
  403acb:	je     0x403b20
  403acd:	test   r8b,r8b
  403ad0:	mov    rbx,rsi
  403ad3:	je     0x403b02
  403ad5:	mov    rbx,rsi
  403ad8:	jmp    0x403aed
  403ada:	nop    WORD PTR [rax+rax*1+0x0]
  403ae0:	add    rbx,0x1
  403ae4:	movzx  r8d,BYTE PTR [rbx]
  403ae8:	test   r8b,r8b
  403aeb:	je     0x403b02
  403aed:	lea    rcx,[rip+0x14ccc]        # 0x4187c0
  403af4:	movsx  edx,r8b
  403af8:	call   0x416178
  403afd:	test   rax,rax
  403b00:	je     0x403ae0
  403b02:	mov    rax,rsi
  403b05:	mov    QWORD PTR [rdi],rbx
  403b08:	mov    QWORD PTR [rbp+0x0],rbx
  403b0c:	add    rsp,0x20
  403b10:	pop    rbx
  403b11:	pop    rsi
  403b12:	pop    rdi
  403b13:	pop    rbp
  403b14:	pop    r12
  403b16:	ret    
  403b17:	nop    WORD PTR [rax+rax*1+0x0]
  403b20:	movzx  edx,BYTE PTR [rsi+0x1]
  403b24:	lea    r12,[rsi+0x1]
  403b28:	xor    eax,eax
  403b2a:	mov    rbx,r12
  403b2d:	test   dl,dl
  403b2f:	je     0x403ad5
  403b31:	cmp    dl,0x5c
  403b34:	je     0x403b4c
  403b36:	cmp    dl,0x22
  403b39:	je     0x403b70
  403b3b:	movzx  edx,BYTE PTR [rbx+0x1]
  403b3f:	add    rbx,0x1
  403b43:	test   dl,dl
  403b45:	je     0x403ad5
  403b47:	cmp    dl,0x5c
  403b4a:	jne    0x403b36
  403b4c:	movzx  edx,BYTE PTR [rbx+0x1]
  403b50:	cmp    dl,0x22
  403b53:	je     0x403b5a
  403b55:	cmp    dl,0x5c
  403b58:	jne    0x403b3f
  403b5a:	test   rax,rax
  403b5d:	movzx  edx,BYTE PTR [rbx+0x2]
  403b61:	cmove  rax,rbx
  403b65:	add    rbx,0x2
  403b69:	jmp    0x403b2d
  403b6b:	nop    DWORD PTR [rax+rax*1+0x0]
  403b70:	test   rax,rax
  403b73:	mov    QWORD PTR [rdi],rbx
  403b76:	je     0x403be5
  403b78:	mov    rbx,rax
  403b7b:	jmp    0x403b90
  403b7d:	nop    DWORD PTR [rax]
  403b80:	add    rax,0x1
  403b84:	add    rbx,0x1
  403b88:	mov    BYTE PTR [rax-0x1],dl
  403b8b:	cmp    rbx,QWORD PTR [rdi]
  403b8e:	jae    0x403bc0
  403b90:	movzx  edx,BYTE PTR [rbx]
  403b93:	cmp    dl,0x5c
  403b96:	jne    0x403b80
  403b98:	movzx  ecx,BYTE PTR [rbx+0x1]
  403b9c:	cmp    cl,0x22
  403b9f:	je     0x403ba6
  403ba1:	cmp    cl,0x5c
  403ba4:	jne    0x403b80
  403ba6:	add    rbx,0x1
  403baa:	add    rax,0x1
  403bae:	mov    edx,ecx
  403bb0:	add    rbx,0x1
  403bb4:	mov    BYTE PTR [rax-0x1],dl
  403bb7:	cmp    rbx,QWORD PTR [rdi]
  403bba:	jb     0x403b90
  403bbc:	nop    DWORD PTR [rax+0x0]
  403bc0:	mov    QWORD PTR [rdi],rax
  403bc3:	movsx  edx,BYTE PTR [rbx]
  403bc6:	test   dl,dl
  403bc8:	je     0x403bec
  403bca:	nop    WORD PTR [rax+rax*1+0x0]
  403bd0:	lea    rcx,[rip+0x14be9]        # 0x4187c0
  403bd7:	call   0x416178
  403bdc:	test   rax,rax
  403bdf:	jne    0x403bec
  403be1:	add    rbx,0x1
  403be5:	movsx  edx,BYTE PTR [rbx]
  403be8:	test   dl,dl
  403bea:	jne    0x403bd0
  403bec:	mov    rax,r12
  403bef:	mov    QWORD PTR [rbp+0x0],rbx
  403bf3:	add    rsp,0x20
  403bf7:	pop    rbx
  403bf8:	pop    rsi
  403bf9:	pop    rdi
  403bfa:	pop    rbp
  403bfb:	pop    r12
  403bfd:	ret    
  403bfe:	xchg   ax,ax
  403c00:	push   r15
  403c02:	push   r14
  403c04:	push   r13
  403c06:	push   r12
  403c08:	push   rbp
  403c09:	push   rdi
  403c0a:	push   rsi
  403c0b:	push   rbx
  403c0c:	sub    rsp,0x2e8
  403c13:	xor    eax,eax
  403c15:	mov    esi,DWORD PTR [rsp+0x350]
  403c1c:	lea    rdi,[rsp+0xe8]
  403c24:	mov    r14,rcx
  403c27:	mov    ecx,0xf
  403c2c:	lea    r15,[rsp+0x1e0]
  403c34:	mov    rbp,rdx
  403c37:	lea    rdx,[rip+0x14b85]        # 0x4187c3
  403c3e:	rep stos QWORD PTR es:[rdi],rax
  403c41:	lea    rdi,[rsp+0x168]
  403c49:	mov    QWORD PTR [rsp+0x340],r8
  403c51:	mov    r8,r15
  403c54:	mov    QWORD PTR [rsp+0x348],r9
  403c5c:	mov    QWORD PTR [rsp+0xe0],0x0
  403c68:	mov    QWORD PTR [rsp+0x160],0x0
  403c74:	mov    cl,0xf
  403c76:	rep stos QWORD PTR es:[rdi],rax
  403c79:	mov    rcx,rbp
  403c7c:	call   0x416180
  403c81:	cmp    eax,0x1
  403c84:	mov    ebx,eax
  403c86:	jne    0x403d94
  403c8c:	mov    edx,0x3d
  403c91:	mov    rcx,rbp
  403c94:	call   0x416178
  403c99:	test   rax,rax
  403c9c:	je     0x403d94
  403ca2:	lea    rcx,[rax+0x1]
  403ca6:	call   0x4160e8
  403cab:	test   rax,rax
  403cae:	mov    r12,rax
  403cb1:	je     0x4043d0
  403cb7:	movzx  ebx,BYTE PTR [rax]
  403cba:	cmp    bl,0x40
  403cbd:	je     0x403de4
  403cc3:	test   sil,sil
  403cc6:	jne    0x403dc2
  403ccc:	lea    rdx,[rip+0x14bb1]        # 0x418884
  403cd3:	mov    rcx,rax
  403cd6:	call   0x416128
  403cdb:	test   rax,rax
  403cde:	mov    DWORD PTR [rsp+0xa0],0x1
  403ce9:	mov    QWORD PTR [rsp+0xa8],r15
  403cf1:	je     0x40442c
  403cf7:	mov    BYTE PTR [rax],0x0
  403cfa:	movzx  ebx,BYTE PTR [r12]
  403cff:	lea    rdx,[rax+0x6]
  403d03:	mov    DWORD PTR [rsp+0xb0],0xe
  403d0e:	mov    eax,0x2
  403d13:	mov    QWORD PTR [rsp+0xb8],rdx
  403d1b:	mov    edx,0x3
  403d20:	shl    rax,0x4
  403d24:	cmp    bl,0x3c
  403d27:	jne    0x403d32
  403d29:	test   sil,sil
  403d2c:	je     0x404165
  403d32:	shl    rdx,0x4
  403d36:	mov    DWORD PTR [rsp+rax*1+0xa0],0x4
  403d41:	mov    QWORD PTR [rsp+rax*1+0xa8],r12
  403d49:	lea    r9,[rsp+0xa0]
  403d51:	mov    DWORD PTR [rsp+rdx*1+0xa0],0x11
  403d5c:	mov    r8d,0x8
  403d62:	mov    DWORD PTR [rsp+0x20],0x11
  403d6a:	mov    rdx,QWORD PTR [rsp+0x348]
  403d72:	mov    rcx,QWORD PTR [rsp+0x340]
  403d7a:	call   QWORD PTR [rip+0x31828]        # 0x4355a8
  403d80:	test   eax,eax
  403d82:	jne    0x404140
  403d88:	mov    rcx,r12
  403d8b:	xor    ebx,ebx
  403d8d:	call   0x416220
  403d92:	jmp    0x403dac
  403d94:	mov    rcx,QWORD PTR [r14+0x3d0]
  403d9b:	lea    rdx,[rip+0x14b26]        # 0x4188c8
  403da2:	mov    ebx,0x1
  403da7:	call   0x408110
  403dac:	mov    eax,ebx
  403dae:	add    rsp,0x2e8
  403db5:	pop    rbx
  403db6:	pop    rsi
  403db7:	pop    rdi
  403db8:	pop    rbp
  403db9:	pop    r12
  403dbb:	pop    r13
  403dbd:	pop    r14
  403dbf:	pop    r15
  403dc1:	ret    
  403dc2:	mov    DWORD PTR [rsp+0xa0],0x1
  403dcd:	mov    QWORD PTR [rsp+0xa8],r15
  403dd5:	mov    edx,0x2
  403dda:	mov    eax,0x1
  403ddf:	jmp    0x403d20
  403de4:	test   sil,sil
  403de7:	jne    0x403dc2
  403de9:	mov    QWORD PTR [rsp+0x88],0x0
  403df5:	mov    QWORD PTR [rsp+0x90],0x0
  403e01:	mov    rdx,rax
  403e04:	mov    QWORD PTR [rsp+0x98],rax
  403e0c:	mov    ecx,DWORD PTR [rdx]
  403e0e:	add    rdx,0x4
  403e12:	lea    eax,[rcx-0x1010101]
  403e18:	not    ecx
  403e1a:	and    eax,ecx
  403e1c:	and    eax,0x80808080
  403e21:	je     0x403e0c
  403e23:	mov    ecx,eax
  403e25:	lea    rdi,[rsp+0xa0]
  403e2d:	mov    rbx,QWORD PTR [rip+0x31a9c]        # 0x4358d0
  403e34:	shr    ecx,0x10
  403e37:	test   eax,0x8080
  403e3c:	lea    rbp,[rsp+0xe0]
  403e44:	cmove  eax,ecx
  403e47:	lea    rcx,[rdx+0x2]
  403e4b:	mov    rsi,rdi
  403e4e:	lea    rdi,[rsp+0x98]
  403e56:	mov    QWORD PTR [rsp+0x60],r12
  403e5b:	mov    QWORD PTR [rsp+0x330],r14
  403e63:	cmove  rdx,rcx
  403e67:	add    al,al
  403e69:	lea    rcx,[rsp+0x80]
  403e71:	sbb    rdx,0x3
  403e75:	mov    r13,rdi
  403e78:	mov    rdi,QWORD PTR [rip+0x317b1]        # 0x435630
  403e7f:	mov    QWORD PTR [rsp+0x58],rdx
  403e84:	mov    QWORD PTR [rsp+0x70],rcx
  403e89:	lea    rdx,[rsp+0x160]
  403e91:	lea    rcx,[rsp+0x88]
  403e99:	mov    rax,r12
  403e9c:	mov    QWORD PTR [rsp+0x78],r15
  403ea1:	mov    r14,rsi
  403ea4:	mov    r12,rdx
  403ea7:	mov    QWORD PTR [rsp+0x68],rcx
  403eac:	add    rax,0x1
  403eb0:	mov    rdx,r14
  403eb3:	mov    rcx,r13
  403eb6:	mov    QWORD PTR [rsp+0x98],rax
  403ebe:	xor    esi,esi
  403ec0:	call   0x403ab0
  403ec5:	mov    QWORD PTR [rsp+0x50],rax
  403eca:	mov    rax,QWORD PTR [rsp+0x98]
  403ed2:	mov    rdx,QWORD PTR [rsp+0xa0]
  403eda:	mov    QWORD PTR [rsp+0x48],0x0
  403ee3:	movzx  eax,BYTE PTR [rax]
  403ee6:	mov    BYTE PTR [rdx],0x0
  403ee9:	cmp    al,0x3b
  403eeb:	jne    0x404013
  403ef1:	mov    rax,QWORD PTR [rsp+0x98]
  403ef9:	lea    r15,[rax+0x1]
  403efd:	mov    QWORD PTR [rsp+0x98],r15
  403f05:	movzx  eax,BYTE PTR [rax+0x1]
  403f09:	test   al,al
  403f0b:	jne    0x403f24
  403f0d:	jmp    0x403f2d
  403f0f:	nop
  403f10:	add    r15,0x1
  403f14:	mov    QWORD PTR [rsp+0x98],r15
  403f1c:	movzx  eax,BYTE PTR [r15]
  403f20:	test   al,al
  403f22:	je     0x403f2d
  403f24:	movzx  ecx,al
  403f27:	call   rbx
  403f29:	test   eax,eax
  403f2b:	jne    0x403f10
  403f2d:	mov    r8d,0x5
  403f33:	mov    rdx,r15
  403f36:	lea    rcx,[rip+0x1489f]        # 0x4187dc
  403f3d:	call   rdi
  403f3f:	test   eax,eax
  403f41:	je     0x4041f0
  403f47:	mov    rax,QWORD PTR [rsp+0x98]
  403f4f:	lea    rdx,[rip+0x1488c]        # 0x4187e2
  403f56:	mov    r9,r12
  403f59:	mov    r8,rbp
  403f5c:	lea    rsi,[rax+0x5]
  403f60:	mov    rcx,rsi
  403f63:	call   0x416180
  403f68:	cmp    eax,0x2
  403f6b:	jne    0x4042d4
  403f71:	mov    rdx,rbp
  403f74:	mov    ecx,DWORD PTR [rdx]
  403f76:	add    rdx,0x4
  403f7a:	lea    eax,[rcx-0x1010101]
  403f80:	not    ecx
  403f82:	and    eax,ecx
  403f84:	and    eax,0x80808080
  403f89:	je     0x403f74
  403f8b:	mov    ecx,eax
  403f8d:	shr    ecx,0x10
  403f90:	test   eax,0x8080
  403f95:	cmove  eax,ecx
  403f98:	lea    rcx,[rdx+0x2]
  403f9c:	cmove  rdx,rcx
  403fa0:	add    al,al
  403fa2:	mov    rcx,r12
  403fa5:	sbb    rdx,0x3
  403fa9:	sub    rdx,rbp
  403fac:	mov    r8d,DWORD PTR [rcx]
  403faf:	add    rcx,0x4
  403fb3:	lea    eax,[r8-0x1010101]
  403fba:	not    r8d
  403fbd:	and    eax,r8d
  403fc0:	and    eax,0x80808080
  403fc5:	je     0x403fac
  403fc7:	mov    r8d,eax
  403fca:	shr    r8d,0x10
  403fce:	test   eax,0x8080
  403fd3:	cmove  eax,r8d
  403fd7:	lea    r8,[rcx+0x2]
  403fdb:	cmove  rcx,r8
  403fdf:	add    al,al
  403fe1:	sbb    rcx,0x3
  403fe5:	sub    rcx,r12
  403fe8:	lea    rdx,[rdx+rcx*1+0x1]
  403fed:	add    rdx,rsi
  403ff0:	mov    QWORD PTR [rsp+0x80],rdx
  403ff8:	mov    QWORD PTR [rsp+0x98],rdx
  404000:	movzx  eax,BYTE PTR [rdx]
  404003:	cmp    al,0x3b
  404005:	je     0x4042a8
  40400b:	test   al,al
  40400d:	jne    0x4042a0
  404013:	mov    rax,QWORD PTR [rsp+0x50]
  404018:	cmp    BYTE PTR [rax],0x0
  40401b:	jne    0x404361
  404021:	mov    rax,QWORD PTR [rsp+0x98]
  404029:	cmp    QWORD PTR [rsp+0x58],rax
  40402e:	ja     0x403eac
  404034:	mov    rdi,QWORD PTR [rsp+0x88]
  40403c:	mov    r12,QWORD PTR [rsp+0x60]
  404041:	mov    r14,QWORD PTR [rsp+0x330]
  404049:	mov    r15,QWORD PTR [rsp+0x78]
  40404e:	test   rdi,rdi
  404051:	je     0x403d88
  404057:	mov    rax,rdi
  40405a:	xor    ebx,ebx
  40405c:	mov    rax,QWORD PTR [rax+0x10]
  404060:	add    ebx,0x1
  404063:	test   rax,rax
  404066:	jne    0x40405c
  404068:	lea    ecx,[rbx+0x1]
  40406b:	shl    rcx,0x4
  40406f:	call   0x4161d0
  404074:	test   rax,rax
  404077:	mov    rsi,rax
  40407a:	je     0x4043ed
  404080:	test   ebx,ebx
  404082:	je     0x4040ae
  404084:	lea    edx,[rbx-0x1]
  404087:	lea    rax,[rax+0x8]
  40408b:	shl    rdx,0x4
  40408f:	lea    rdx,[rsi+rdx*1+0x18]
  404094:	mov    ecx,DWORD PTR [rdi]
  404096:	add    rax,0x10
  40409a:	mov    DWORD PTR [rax-0x18],ecx
  40409d:	mov    rcx,QWORD PTR [rdi+0x8]
  4040a1:	mov    QWORD PTR [rax-0x10],rcx
  4040a5:	cmp    rax,rdx
  4040a8:	mov    rdi,QWORD PTR [rdi+0x10]
  4040ac:	jne    0x404094
  4040ae:	mov    eax,ebx
  4040b0:	lea    rdx,[rsp+0x90]
  4040b8:	lea    rcx,[rsp+0x88]
  4040c0:	shl    rax,0x4
  4040c4:	mov    DWORD PTR [rsi+rax*1],0x11
  4040cb:	call   0x407e60
  4040d0:	mov    DWORD PTR [rsp+0x30],0x11
  4040d8:	mov    QWORD PTR [rsp+0x28],rsi
  4040dd:	mov    r9,r15
  4040e0:	mov    DWORD PTR [rsp+0x20],0x8
  4040e8:	mov    r8d,0x1
  4040ee:	mov    rdx,QWORD PTR [rsp+0x348]
  4040f6:	mov    rcx,QWORD PTR [rsp+0x340]
  4040fe:	call   QWORD PTR [rip+0x314a4]        # 0x4355a8
  404104:	test   eax,eax
  404106:	je     0x40443b
  40410c:	mov    rcx,QWORD PTR [r14+0x3d0]
  404113:	lea    rdx,[rip+0x14754]        # 0x41886e
  40411a:	mov    ebx,0x5
  40411f:	call   0x408110
  404124:	mov    rcx,rsi
  404127:	call   0x416220
  40412c:	mov    rcx,r12
  40412f:	call   0x416220
  404134:	jmp    0x403dac
  404139:	nop    DWORD PTR [rax+0x0]
  404140:	mov    rcx,QWORD PTR [r14+0x3d0]
  404147:	lea    rdx,[rip+0x14720]        # 0x41886e
  40414e:	mov    ebx,0x8
  404153:	call   0x408110
  404158:	mov    rcx,r12
  40415b:	call   0x416220
  404160:	jmp    0x403dac
  404165:	lea    rbx,[r12+0x1]
  40416a:	mov    DWORD PTR [rsp+rax*1+0xa0],0x7
  404175:	lea    r9,[rsp+0xa0]
  40417d:	mov    r8d,0x8
  404183:	mov    rcx,QWORD PTR [rsp+0x340]
  40418b:	mov    QWORD PTR [rsp+rax*1+0xa8],rbx
  404193:	movsxd rax,edx
  404196:	mov    rdx,QWORD PTR [rsp+0x348]
  40419e:	shl    rax,0x4
  4041a2:	mov    DWORD PTR [rsp+rax*1+0xa0],0x11
  4041ad:	mov    DWORD PTR [rsp+0x20],0x11
  4041b5:	call   QWORD PTR [rip+0x313ed]        # 0x4355a8
  4041bb:	test   eax,eax
  4041bd:	je     0x403d88
  4041c3:	mov    rcx,QWORD PTR [r14+0x3d0]
  4041ca:	lea    rdx,[rip+0x146bf]        # 0x418890
  4041d1:	mov    r8,rbx
  4041d4:	mov    ebx,0x6
  4041d9:	call   0x408110
  4041de:	mov    rcx,r12
  4041e1:	call   0x416220
  4041e6:	jmp    0x403dac
  4041eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4041f0:	mov    r8d,0x9
  4041f6:	mov    rdx,QWORD PTR [rsp+0x98]
  4041fe:	lea    rcx,[rip+0x14627]        # 0x41882c
  404205:	call   rdi
  404207:	test   eax,eax
  404209:	je     0x404250
  40420b:	mov    rdx,r14
  40420e:	mov    rcx,r13
  404211:	add    QWORD PTR [rsp+0x98],0x9
  40421a:	call   0x403ab0
  40421f:	mov    QWORD PTR [rsp+0x48],rax
  404224:	mov    rax,QWORD PTR [rsp+0x98]
  40422c:	cmp    BYTE PTR [rax],0x3b
  40422f:	mov    rax,QWORD PTR [rsp+0xa0]
  404237:	mov    BYTE PTR [rax],0x0
  40423a:	sete   r15b
  40423e:	test   r15b,r15b
  404241:	jne    0x403ef1
  404247:	jmp    0x404013
  40424c:	nop    DWORD PTR [rax+0x0]
  404250:	mov    rdx,r14
  404253:	mov    rcx,r13
  404256:	call   0x403ab0
  40425b:	mov    rdx,QWORD PTR [rsp+0x98]
  404263:	cmp    BYTE PTR [rdx],0x3b
  404266:	sete   r15b
  40426a:	cmp    BYTE PTR [rax],0x0
  40426d:	je     0x40423e
  40426f:	mov    rdx,QWORD PTR [rsp+0xa0]
  404277:	mov    r8,rax
  40427a:	mov    BYTE PTR [rdx],0x0
  40427d:	mov    rdx,QWORD PTR [rsp+0x330]
  404285:	mov    rcx,QWORD PTR [rdx+0x3d0]
  40428c:	lea    rdx,[rip+0x145a3]        # 0x418836
  404293:	call   0x408110
  404298:	jmp    0x40423e
  40429a:	nop    WORD PTR [rax+rax*1+0x0]
  4042a0:	xor    r15d,r15d
  4042a3:	mov    BYTE PTR [rdx],0x0
  4042a6:	jmp    0x40423e
  4042a8:	mov    r8d,0xa
  4042ae:	lea    rcx,[rip+0x1456c]        # 0x418821
  4042b5:	call   rdi
  4042b7:	test   eax,eax
  4042b9:	je     0x40431b
  4042bb:	mov    rdx,QWORD PTR [rsp+0x80]
  4042c3:	cmp    BYTE PTR [rdx],0x0
  4042c6:	je     0x403ef1
  4042cc:	mov    r15d,0x1
  4042d2:	jmp    0x4042a3
  4042d4:	mov    r14,QWORD PTR [rsp+0x330]
  4042dc:	mov    r12,QWORD PTR [rsp+0x60]
  4042e1:	lea    rdx,[rip+0x14510]        # 0x4187f8
  4042e8:	mov    ebx,0x2
  4042ed:	mov    rcx,QWORD PTR [r14+0x3d0]
  4042f4:	call   0x408110
  4042f9:	mov    rcx,r12
  4042fc:	call   0x416220
  404301:	lea    rdx,[rsp+0x90]
  404309:	lea    rcx,[rsp+0x88]
  404311:	call   0x407e60
  404316:	jmp    0x403dac
  40431b:	mov    rax,QWORD PTR [rsp+0x80]
  404323:	mov    rdx,QWORD PTR [rsp+0x70]
  404328:	mov    rcx,r13
  40432b:	add    rax,0x1
  40432f:	mov    QWORD PTR [rsp+0x98],rax
  404337:	call   0x403ab0
  40433c:	mov    rax,QWORD PTR [rsp+0x98]
  404344:	mov    rdx,QWORD PTR [rsp+0x80]
  40434c:	cmp    BYTE PTR [rax],0x3b
  40434f:	sete   r15b
  404353:	cmp    BYTE PTR [rdx],0x0
  404356:	je     0x40423e
  40435c:	jmp    0x4042a3
  404361:	lea    rax,[rsp+0x90]
  404369:	mov    r9,QWORD PTR [rsp+0x68]
  40436e:	mov    r8,QWORD PTR [rsp+0x48]
  404373:	mov    rcx,QWORD PTR [rsp+0x50]
  404378:	mov    rdx,rsi
  40437b:	mov    QWORD PTR [rsp+0x20],rax
  404380:	mov    r15,rax
  404383:	call   0x407eb0
  404388:	test   rax,rax
  40438b:	jne    0x404021
  404391:	mov    r14,QWORD PTR [rsp+0x330]
  404399:	mov    r12,QWORD PTR [rsp+0x60]
  40439e:	lea    rdx,[rip+0x144ae]        # 0x418853
  4043a5:	mov    ebx,0x3
  4043aa:	mov    rcx,QWORD PTR [r14+0x3d0]
  4043b1:	call   0x408110
  4043b6:	mov    rcx,r12
  4043b9:	call   0x416220
  4043be:	mov    rcx,QWORD PTR [rsp+0x68]
  4043c3:	mov    rdx,r15
  4043c6:	call   0x407e60
  4043cb:	jmp    0x403dac
  4043d0:	mov    rax,QWORD PTR [r14+0x3d0]
  4043d7:	lea    rdx,[rip+0x143ef]        # 0x4187cd
  4043de:	mov    rcx,QWORD PTR [rax+0x10]
  4043e2:	call   QWORD PTR [rip+0x31200]        # 0x4355e8
  4043e8:	jmp    0x403dac
  4043ed:	mov    rax,QWORD PTR [r14+0x3d0]
  4043f4:	lea    rdx,[rip+0x14458]        # 0x418853
  4043fb:	mov    ebx,0x4
  404400:	mov    rcx,QWORD PTR [rax+0x10]
  404404:	call   QWORD PTR [rip+0x311de]        # 0x4355e8
  40440a:	mov    rcx,r12
  40440d:	call   0x416220
  404412:	lea    rdx,[rsp+0x90]
  40441a:	lea    rcx,[rsp+0x88]
  404422:	call   0x407e60
  404427:	jmp    0x403dac
  40442c:	mov    edx,0x2
  404431:	mov    eax,0x1
  404436:	jmp    0x403d20
  40443b:	mov    rcx,rsi
  40443e:	call   0x416220
  404443:	jmp    0x403d88
  404448:	nop
  404449:	nop
  40444a:	nop
  40444b:	nop
  40444c:	nop
  40444d:	nop
  40444e:	nop
  40444f:	nop
  404450:	push   r15
  404452:	push   r14
  404454:	push   r13
  404456:	push   r12
  404458:	push   rbp
  404459:	push   rdi
  40445a:	push   rsi
  40445b:	push   rbx
  40445c:	sub    rsp,0xc8
  404463:	cmp    BYTE PTR [rcx],0x2d
  404466:	mov    rbp,rcx
  404469:	mov    QWORD PTR [rsp+0x118],rdx
  404471:	mov    QWORD PTR [rsp+0x120],r8
  404479:	mov    QWORD PTR [rsp+0x128],r9
  404481:	je     0x404836
  404487:	mov    rcx,rbp
  40448a:	lea    rdi,[rip+0x14482]        # 0x418913
  404491:	mov    rsi,rbp
  404494:	call   0x416150
  404499:	mov    ecx,0x3
  40449e:	mov    r12,rax
  4044a1:	mov    BYTE PTR [rsp+0x30],0x1
  4044a6:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4044a8:	seta   dl
  4044ab:	setb   al
  4044ae:	cmp    dl,al
  4044b0:	je     0x404565
  4044b6:	lea    r13,[rip+0x15a0b]        # 0x419ec8
  4044bd:	xor    r14d,r14d
  4044c0:	xor    r15d,r15d
  4044c3:	mov    DWORD PTR [rsp+0x48],0xffffffff
  4044cb:	xor    ebx,ebx
  4044cd:	mov    QWORD PTR [rsp+0x40],0x0
  4044d6:	mov    rsi,QWORD PTR [rip+0x31153]        # 0x435630
  4044dd:	jmp    0x4044ef
  4044df:	nop
  4044e0:	add    ebx,0x1
  4044e3:	add    r13,0x18
  4044e7:	cmp    ebx,0xd3
  4044ed:	je     0x404538
  4044ef:	mov    rdi,QWORD PTR [r13+0x0]
  4044f3:	mov    r8,r12
  4044f6:	mov    rdx,rbp
  4044f9:	mov    rcx,rdi
  4044fc:	call   rsi
  4044fe:	test   eax,eax
  404500:	je     0x4044e0
  404502:	add    r14d,0x1
  404506:	mov    rdx,rbp
  404509:	mov    rcx,rdi
  40450c:	call   QWORD PTR [rip+0x31116]        # 0x435628
  404512:	test   eax,eax
  404514:	jne    0x404573
  404516:	mov    rax,QWORD PTR [r13-0x8]
  40451a:	mov    DWORD PTR [rsp+0x48],ebx
  40451e:	add    ebx,0x1
  404521:	add    r13,0x18
  404525:	cmp    ebx,0xd3
  40452b:	mov    r15d,0x1
  404531:	mov    QWORD PTR [rsp+0x40],rax
  404536:	jne    0x4044ef
  404538:	cmp    r14d,0x1
  40453c:	mov    ebx,DWORD PTR [rsp+0x48]
  404540:	mov    eax,0x1
  404545:	jg     0x40480f
  40454b:	cmp    ebx,0xffffffff
  40454e:	je     0x40480a
  404554:	mov    rax,QWORD PTR [rsp+0x40]
  404559:	lea    rbp,[rip+0x15960]        # 0x419ec0
  404560:	movzx  esi,BYTE PTR [rax]
  404563:	jmp    0x404593
  404565:	add    rbp,0x3
  404569:	mov    BYTE PTR [rsp+0x30],0x0
  40456e:	jmp    0x4044b6
  404573:	mov    eax,ebx
  404575:	lea    rbp,[rip+0x15944]        # 0x419ec0
  40457c:	mov    r15d,0x1
  404582:	lea    rax,[rax+rax*2]
  404586:	mov    rax,QWORD PTR [rbp+rax*8+0x0]
  40458b:	movzx  esi,BYTE PTR [rax]
  40458e:	mov    QWORD PTR [rsp+0x40],rax
  404593:	movzx  r14d,BYTE PTR [rsp+0x30]
  404599:	mov    r13,QWORD PTR [rsp+0x40]
  40459e:	xor    r12d,r12d
  4045a1:	mov    QWORD PTR [rsp+0x40],rbp
  4045a6:	mov    rbp,QWORD PTR [rsp+0x130]
  4045ae:	add    r13,0x1
  4045b2:	xor    r14d,0x1
  4045b6:	movzx  eax,r14b
  4045ba:	mov    BYTE PTR [rsp+0x48],r14b
  4045bf:	mov    r14,QWORD PTR [rsp+0x118]
  4045c7:	mov    DWORD PTR [rsp+0x4c],eax
  4045cb:	mov    eax,ebx
  4045cd:	mov    ebx,r12d
  4045d0:	mov    r12,QWORD PTR [rsp+0x120]
  4045d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4045e0:	xor    r9d,r9d
  4045e3:	test   r15b,r15b
  4045e6:	je     0x4045ed
  4045e8:	movzx  r9d,BYTE PTR [r13+0x0]
  4045ed:	cmp    eax,0xffffffff
  4045f0:	mov    BYTE PTR [r12],0x0
  4045f5:	je     0x4047e0
  4045fb:	cdqe   
  4045fd:	mov    rdi,QWORD PTR [rsp+0x40]
  404602:	lea    rax,[rax+rax*2]
  404606:	cmp    BYTE PTR [rdi+rax*8+0x10],0x0
  40460b:	je     0x404630
  40460d:	test   r15b,r15b
  404610:	jne    0x404823
  404616:	cmp    BYTE PTR [r13+0x0],0x0
  40461b:	je     0x404823
  404621:	mov    r14,r13
  404624:	mov    ebx,0x1
  404629:	nop    DWORD PTR [rax+0x0]
  404630:	lea    eax,[rsi-0x23]
  404633:	cmp    al,0x57
  404635:	ja     0x40480a
  40463b:	lea    rdx,[rip+0x146d2]        # 0x418d14
  404642:	movzx  eax,al
  404645:	movsxd rax,DWORD PTR [rdx+rax*4]
  404649:	add    rdx,rax
  40464c:	jmp    rdx
  40464e:	cmp    r9b,0x65
  404652:	mov    QWORD PTR [rsp+0x78],0x0
  40465b:	mov    QWORD PTR [rsp+0x80],0x0
  404667:	je     0x4054a9
  40466d:	cmp    BYTE PTR [r14],0x40
  404671:	jne    0x4057e5
  404677:	cmp    r9b,0x72
  40467b:	je     0x4057e5
  404681:	add    r14,0x1
  404685:	lea    rsi,[rip+0x1432e]        # 0x4189ba
  40468c:	mov    ecx,0x2
  404691:	mov    rdi,r14
  404694:	mov    BYTE PTR [rsp+0x50],r9b
  404699:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40469b:	seta   dl
  40469e:	setb   al
  4046a1:	cmp    dl,al
  4046a3:	jne    0x405a8d
  4046a9:	mov    rsi,QWORD PTR [rip+0x310f0]        # 0x4357a0
  4046b0:	call   rsi
  4046b2:	movzx  r9d,BYTE PTR [rsp+0x50]
  4046b8:	mov    rdi,rax
  4046bb:	cmp    r9b,0x62
  4046bf:	je     0x405ce5
  4046c5:	lea    rcx,[rsp+0x78]
  4046ca:	mov    rdx,rdi
  4046cd:	call   0x40cb90
  4046d2:	mov    rcx,QWORD PTR [rsp+0x78]
  4046d7:	mov    esi,eax
  4046d9:	test   rcx,rcx
  4046dc:	je     0x4046eb
  4046de:	call   0x416150
  4046e3:	mov    QWORD PTR [rsp+0x80],rax
  4046eb:	test   rdi,rdi
  4046ee:	je     0x404703
  4046f0:	call   QWORD PTR [rip+0x310aa]        # 0x4357a0
  4046f6:	cmp    rax,rdi
  4046f9:	je     0x404703
  4046fb:	mov    rcx,rdi
  4046fe:	call   0x416260
  404703:	test   esi,esi
  404705:	jne    0x406549
  40470b:	cmp    QWORD PTR [rsp+0x78],0x0
  404711:	je     0x40652a
  404717:	mov    r9,QWORD PTR [rsp+0x80]
  40471f:	mov    rsi,QWORD PTR [rbp+0x70]
  404723:	test   rsi,rsi
  404726:	je     0x40595c
  40472c:	mov    rdi,QWORD PTR [rbp+0x78]
  404730:	mov    rcx,r9
  404733:	call   0x410160
  404738:	lea    rcx,[rdi+rax*1+0x2]
  40473d:	call   0x4161d0
  404742:	test   rax,rax
  404745:	mov    QWORD PTR [rbp+0x70],rax
  404749:	je     0x40650e
  40474f:	mov    r8,rdi
  404752:	mov    rdx,rsi
  404755:	mov    rcx,rax
  404758:	call   0x4161b8
  40475d:	mov    r8,QWORD PTR [rsp+0x80]
  404765:	mov    rdx,QWORD PTR [rsp+0x78]
  40476a:	lea    rcx,[rax+rdi*1+0x1]
  40476f:	mov    BYTE PTR [rax+rdi*1],0x26
  404773:	call   0x4161b8
  404778:	mov    rax,rdi
  40477b:	add    rax,QWORD PTR [rbp+0x70]
  40477f:	mov    rcx,rsi
  404782:	add    rax,QWORD PTR [rsp+0x80]
  40478a:	mov    BYTE PTR [rax+0x1],0x0
  40478e:	call   0x416220
  404793:	mov    rcx,QWORD PTR [rsp+0x78]
  404798:	call   0x416220
  40479d:	mov    rax,QWORD PTR [rsp+0x80]
  4047a5:	add    rax,0x1
  4047a9:	add    QWORD PTR [rbp+0x78],rax
  4047ad:	nop    DWORD PTR [rax]
  4047b0:	mov    eax,ebx
  4047b2:	xor    eax,0x1
  4047b5:	cmp    al,r15b
  4047b8:	jbe    0x4047d8
  4047ba:	movzx  esi,BYTE PTR [r13+0x0]
  4047bf:	test   sil,sil
  4047c2:	je     0x4047d8
  4047c4:	add    r13,0x1
  4047c8:	cmp    BYTE PTR [r12],0x0
  4047cd:	mov    eax,0xffffffff
  4047d2:	je     0x4045e0
  4047d8:	xor    eax,eax
  4047da:	jmp    0x40480f
  4047dc:	nop    DWORD PTR [rax+0x0]
  4047e0:	lea    rdx,[rip+0x156d9]        # 0x419ec0
  4047e7:	xor    eax,eax
  4047e9:	nop    DWORD PTR [rax+0x0]
  4047f0:	mov    rcx,QWORD PTR [rdx]
  4047f3:	cmp    sil,BYTE PTR [rcx]
  4047f6:	je     0x4045fb
  4047fc:	add    eax,0x1
  4047ff:	add    rdx,0x18
  404803:	cmp    eax,0xd3
  404808:	jne    0x4047f0
  40480a:	mov    eax,0x2
  40480f:	add    rsp,0xc8
  404816:	pop    rbx
  404817:	pop    rsi
  404818:	pop    rdi
  404819:	pop    rbp
  40481a:	pop    r12
  40481c:	pop    r13
  40481e:	pop    r14
  404820:	pop    r15
  404822:	ret    
  404823:	test   r14,r14
  404826:	je     0x4057db
  40482c:	mov    BYTE PTR [r12],0x1
  404831:	jmp    0x404630
  404836:	movzx  esi,BYTE PTR [rcx+0x1]
  40483a:	cmp    sil,0x2d
  40483e:	je     0x404862
  404840:	lea    rax,[rcx+0x1]
  404844:	mov    BYTE PTR [rsp+0x30],0x1
  404849:	xor    r15d,r15d
  40484c:	mov    ebx,0xffffffff
  404851:	lea    rbp,[rip+0x15668]        # 0x419ec0
  404858:	mov    QWORD PTR [rsp+0x40],rax
  40485d:	jmp    0x404593
  404862:	add    rbp,0x2
  404866:	jmp    0x404487
  40486b:	cmp    r9b,0x61
  40486f:	je     0x405491
  404875:	mov    rax,QWORD PTR [rbp+0x1a8]
  40487c:	test   rax,rax
  40487f:	je     0x4058bf
  404885:	test   BYTE PTR [rax+0x20],0x1
  404889:	jne    0x40489a
  40488b:	jmp    0x405757
  404890:	test   BYTE PTR [rax+0x20],0x1
  404894:	je     0x405750
  40489a:	mov    rax,QWORD PTR [rax]
  40489d:	test   rax,rax
  4048a0:	jne    0x404890
  4048a2:	mov    QWORD PTR [rbp+0x1a8],0x0
  4048ad:	mov    rcx,rbp
  4048b0:	call   0x40cb40
  4048b5:	test   rax,rax
  4048b8:	mov    rdi,rax
  4048bb:	je     0x404ebd
  4048c1:	cmp    sil,0x6f
  4048c5:	je     0x4057a0
  4048cb:	cmp    BYTE PTR [rsp+0x30],0x0
  4048d0:	mov    QWORD PTR [rdi+0x10],0x0
  4048d8:	mov    eax,DWORD PTR [rdi+0x20]
  4048db:	je     0x40575f
  4048e1:	or     eax,0x4
  4048e4:	or     eax,0x1
  4048e7:	mov    DWORD PTR [rdi+0x20],eax
  4048ea:	jmp    0x4047b0
  4048ef:	movzx  eax,BYTE PTR [rsp+0x30]
  4048f4:	mov    BYTE PTR [rbp+0x179],al
  4048fa:	jmp    0x4047b0
  4048ff:	cmp    BYTE PTR [rsp+0x30],0x0
  404904:	mov    rax,QWORD PTR [rsp+0x128]
  40490c:	jne    0x405380
  404912:	mov    BYTE PTR [rax+0xd],0x0
  404916:	mov    BYTE PTR [rax+0xc],0x0
  40491a:	mov    rax,QWORD PTR [rsp+0x128]
  404922:	mov    ecx,DWORD PTR [rax+0x8]
  404925:	test   ecx,ecx
  404927:	jns    0x4047b0
  40492d:	mov    esi,DWORD PTR [rsp+0x4c]
  404931:	mov    DWORD PTR [rax+0x8],esi
  404934:	jmp    0x4047b0
  404939:	movzx  eax,BYTE PTR [r14]
  40493d:	mov    esi,eax
  40493f:	sub    eax,0x30
  404942:	cmp    eax,0x9
  404945:	ja     0x4049c5
  404947:	mov    edx,0x2d
  40494c:	mov    rcx,r14
  40494f:	call   0x416178
  404954:	test   rax,rax
  404957:	jne    0x4049c5
  404959:	mov    rcx,QWORD PTR [rsp+0x128]
  404961:	lea    rdx,[rip+0x141d8]        # 0x418b40
  404968:	lea    rsi,[rsp+0x80]
  404970:	call   0x408110
  404975:	xor    edx,edx
  404977:	mov    r8d,0xa
  40497d:	mov    rcx,r14
  404980:	call   0x411c70
  404985:	lea    r8,[rip+0x14202]        # 0x418b8e
  40498c:	mov    r9,rax
  40498f:	mov    edx,0x20
  404994:	mov    rcx,rsi
  404997:	call   QWORD PTR [rip+0x30c5b]        # 0x4355f8
  40499d:	mov    rcx,QWORD PTR [rbp+0xd0]
  4049a4:	call   0x416220
  4049a9:	mov    rcx,rsi
  4049ac:	call   0x4160e8
  4049b1:	test   rax,rax
  4049b4:	mov    QWORD PTR [rbp+0xd0],rax
  4049bb:	je     0x406550
  4049c1:	movzx  esi,BYTE PTR [r14]
  4049c5:	test   sil,sil
  4049c8:	je     0x404a0e
  4049ca:	lea    eax,[rsi-0x2c]
  4049cd:	cmp    al,0x1
  4049cf:	jbe    0x4049da
  4049d1:	sub    esi,0x30
  4049d4:	cmp    sil,0x9
  4049d8:	ja     0x4049fa
  4049da:	mov    rdx,r14
  4049dd:	nop    DWORD PTR [rax]
  4049e0:	add    rdx,0x1
  4049e4:	movzx  eax,BYTE PTR [rdx]
  4049e7:	test   al,al
  4049e9:	je     0x404a0e
  4049eb:	lea    ecx,[rax-0x2c]
  4049ee:	cmp    cl,0x1
  4049f1:	jbe    0x4049e0
  4049f3:	sub    eax,0x30
  4049f6:	cmp    al,0x9
  4049f8:	jbe    0x4049e0
  4049fa:	mov    rcx,QWORD PTR [rsp+0x128]
  404a02:	lea    rdx,[rip+0x1418f]        # 0x418b98
  404a09:	call   0x408110
  404a0e:	mov    rcx,QWORD PTR [rbp+0xd0]
  404a15:	test   rcx,rcx
  404a18:	je     0x404a2a
  404a1a:	call   0x416220
  404a1f:	mov    QWORD PTR [rbp+0xd0],0x0
  404a2a:	mov    rcx,r14
  404a2d:	call   0x4160e8
  404a32:	test   rax,rax
  404a35:	mov    QWORD PTR [rbp+0xd0],rax
  404a3c:	jne    0x4047b0
  404a42:	jmp    0x404ebd
  404a47:	nop    WORD PTR [rax+rax*1+0x0]
  404a50:	movzx  eax,BYTE PTR [r14]
  404a54:	cmp    al,0x2d
  404a56:	je     0x4053e8
  404a5c:	cmp    al,0x3d
  404a5e:	je     0x4058ac
  404a64:	cmp    al,0x2b
  404a66:	mov    DWORD PTR [rbp+0x2c4],0x1
  404a70:	sete   al
  404a73:	movzx  eax,al
  404a76:	add    r14,rax
  404a79:	xor    ecx,ecx
  404a7b:	call   QWORD PTR [rip+0x30da7]        # 0x435828
  404a81:	lea    rdx,[rsp+0x70]
  404a86:	mov    QWORD PTR [rsp+0x70],rax
  404a8b:	mov    rcx,r14
  404a8e:	call   QWORD PTR [rip+0x30b2c]        # 0x4355c0
  404a94:	cmp    eax,0xffffffff
  404a97:	mov    QWORD PTR [rbp+0x2c8],rax
  404a9e:	jne    0x4047b0
  404aa4:	lea    rdx,[rsp+0x80]
  404aac:	mov    rcx,r14
  404aaf:	call   QWORD PTR [rip+0x30f0b]        # 0x4359c0
  404ab5:	cmp    eax,0xffffffff
  404ab8:	je     0x406878
  404abe:	mov    rax,QWORD PTR [rsp+0xa8]
  404ac6:	mov    QWORD PTR [rbp+0x2c8],rax
  404acd:	jmp    0x4047b0
  404ad2:	cmp    BYTE PTR [r14],0x40
  404ad6:	je     0x405608
  404adc:	mov    rcx,QWORD PTR [rbp+0x290]
  404ae3:	test   rcx,rcx
  404ae6:	je     0x404af8
  404ae8:	call   0x416220
  404aed:	mov    QWORD PTR [rbp+0x290],0x0
  404af8:	mov    rcx,r14
  404afb:	call   0x4160e8
  404b00:	test   rax,rax
  404b03:	mov    QWORD PTR [rbp+0x290],rax
  404b0a:	jne    0x4047b0
  404b10:	jmp    0x404ebd
  404b15:	cmp    BYTE PTR [rsp+0x30],0x0
  404b1a:	mov    rax,QWORD PTR [rsp+0x128]
  404b22:	jne    0x4053fb
  404b28:	mov    DWORD PTR [rax+0x34],0x0
  404b2f:	jmp    0x4047b0
  404b34:	mov    rcx,QWORD PTR [rbp+0x100]
  404b3b:	test   rcx,rcx
  404b3e:	je     0x404b50
  404b40:	call   0x416220
  404b45:	mov    QWORD PTR [rbp+0x100],0x0
  404b50:	test   r14,r14
  404b53:	je     0x404b6d
  404b55:	mov    rcx,r14
  404b58:	call   0x4160e8
  404b5d:	test   rax,rax
  404b60:	mov    QWORD PTR [rbp+0x100],rax
  404b67:	je     0x404ebd
  404b6d:	mov    rcx,r14
  404b70:	call   0x40cd70
  404b75:	jmp    0x4047b0
  404b7a:	lea    rcx,[rbp+0x2f0]
  404b81:	mov    rdx,r14
  404b84:	call   0x40d0c0
  404b89:	test   eax,eax
  404b8b:	je     0x4047b0
  404b91:	jmp    0x40480f
  404b96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404ba0:	lea    rcx,[rbp+0xdc]
  404ba7:	mov    rdx,r14
  404baa:	call   0x40cda0
  404baf:	test   eax,eax
  404bb1:	jne    0x40480f
  404bb7:	mov    edx,DWORD PTR [rbp+0xd8]
  404bbd:	test   edx,edx
  404bbf:	jne    0x4047b0
  404bc5:	mov    DWORD PTR [rbp+0xd8],0x1
  404bcf:	jmp    0x4047b0
  404bd4:	cmp    r9b,0x61
  404bd8:	je     0x405329
  404bde:	mov    rcx,QWORD PTR [rbp+0x148]
  404be5:	test   rcx,rcx
  404be8:	je     0x404bfa
  404bea:	call   0x416220
  404bef:	mov    QWORD PTR [rbp+0x148],0x0
  404bfa:	test   r14,r14
  404bfd:	je     0x404c17
  404bff:	mov    rcx,r14
  404c02:	call   0x4160e8
  404c07:	test   rax,rax
  404c0a:	mov    QWORD PTR [rbp+0x148],rax
  404c11:	je     0x404ebd
  404c17:	mov    DWORD PTR [rbp+0x150],0x0
  404c21:	jmp    0x4047b0
  404c26:	cmp    r9b,0x65
  404c2a:	je     0x40538d
  404c30:	cmp    r9b,0x6f
  404c34:	movzx  eax,BYTE PTR [rsp+0x30]
  404c39:	jne    0x405875
  404c3f:	mov    BYTE PTR [rbp+0x183],al
  404c45:	jmp    0x4047b0
  404c4a:	lea    rcx,[rbp+0x88]
  404c51:	mov    rdx,r14
  404c54:	call   0x40cdf0
  404c59:	test   eax,eax
  404c5b:	je     0x4047b0
  404c61:	jmp    0x40480f
  404c66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404c70:	movzx  eax,BYTE PTR [rsp+0x30]
  404c75:	mov    BYTE PTR [rbp+0x180],al
  404c7b:	jmp    0x4047b0
  404c80:	movzx  eax,BYTE PTR [rsp+0x30]
  404c85:	mov    BYTE PTR [rbp+0x280],al
  404c8b:	jmp    0x4047b0
  404c90:	movzx  eax,BYTE PTR [rsp+0x30]
  404c95:	mov    BYTE PTR [rbp+0x40],al
  404c98:	jmp    0x4047b0
  404c9d:	movzx  eax,BYTE PTR [rsp+0x30]
  404ca2:	mov    BYTE PTR [rbp+0x17e],al
  404ca8:	jmp    0x4047b0
  404cad:	cmp    BYTE PTR [rsp+0x30],0x0
  404cb2:	je     0x4047b0
  404cb8:	mov    eax,0x5
  404cbd:	jmp    0x40480f
  404cc2:	movzx  eax,BYTE PTR [rsp+0x30]
  404cc7:	mov    BYTE PTR [rbp+0x27e],al
  404ccd:	jmp    0x4047b0
  404cd2:	cmp    r9b,0x61
  404cd6:	jne    0x405370
  404cdc:	movzx  esi,BYTE PTR [rsp+0x30]
  404ce1:	mov    rax,QWORD PTR [rsp+0x128]
  404ce9:	mov    BYTE PTR [rax+0x48],sil
  404ced:	jmp    0x4047b0
  404cf2:	lea    rdx,[rip+0x13dce]        # 0x418ac7
  404cf9:	mov    rcx,r14
  404cfc:	call   0x416128
  404d01:	test   rax,rax
  404d04:	je     0x405700
  404d0a:	mov    BYTE PTR [rbp+0x17c],0x1
  404d11:	mov    BYTE PTR [rax],0x0
  404d14:	mov    rcx,QWORD PTR [rbp+0x80]
  404d1b:	test   rcx,rcx
  404d1e:	je     0x404d30
  404d20:	call   0x416220
  404d25:	mov    QWORD PTR [rbp+0x80],0x0
  404d30:	mov    rcx,r14
  404d33:	call   0x4160e8
  404d38:	test   rax,rax
  404d3b:	mov    QWORD PTR [rbp+0x80],rax
  404d42:	jne    0x4047b0
  404d48:	jmp    0x404ebd
  404d4d:	nop    DWORD PTR [rax]
  404d50:	mov    rcx,QWORD PTR [rbp+0x30]
  404d54:	test   rcx,rcx
  404d57:	je     0x404d66
  404d59:	call   0x416220
  404d5e:	mov    QWORD PTR [rbp+0x30],0x0
  404d66:	test   r14,r14
  404d69:	je     0x405309
  404d6f:	mov    rcx,r14
  404d72:	call   0x4160e8
  404d77:	test   rax,rax
  404d7a:	mov    QWORD PTR [rbp+0x30],rax
  404d7e:	jne    0x4047b0
  404d84:	jmp    0x404ebd
  404d89:	nop    DWORD PTR [rax+0x0]
  404d90:	cmp    BYTE PTR [r14],0x40
  404d94:	je     0x405454
  404d9a:	mov    edx,0x3d
  404d9f:	mov    rcx,r14
  404da2:	call   0x416178
  404da7:	test   rax,rax
  404daa:	je     0x40590d
  404db0:	mov    rcx,QWORD PTR [rbp+0x28]
  404db4:	test   rcx,rcx
  404db7:	je     0x404dc6
  404db9:	call   0x416220
  404dbe:	mov    QWORD PTR [rbp+0x28],0x0
  404dc6:	mov    rcx,r14
  404dc9:	call   0x4160e8
  404dce:	test   rax,rax
  404dd1:	mov    QWORD PTR [rbp+0x28],rax
  404dd5:	jne    0x4047b0
  404ddb:	jmp    0x404ebd
  404de0:	lea    rcx,[rbp+0xd8]
  404de7:	mov    rdx,r14
  404dea:	call   0x40cda0
  404def:	test   eax,eax
  404df1:	jne    0x40480f
  404df7:	mov    eax,DWORD PTR [rbp+0xdc]
  404dfd:	test   eax,eax
  404dff:	jne    0x4047b0
  404e05:	mov    DWORD PTR [rbp+0xdc],0x1e
  404e0f:	jmp    0x4047b0
  404e14:	mov    rcx,QWORD PTR [rbp+0x268]
  404e1b:	test   rcx,rcx
  404e1e:	je     0x404e30
  404e20:	call   0x416220
  404e25:	mov    QWORD PTR [rbp+0x268],0x0
  404e30:	test   r14,r14
  404e33:	je     0x405309
  404e39:	mov    rcx,r14
  404e3c:	call   0x4160e8
  404e41:	test   rax,rax
  404e44:	mov    QWORD PTR [rbp+0x268],rax
  404e4b:	jne    0x4047b0
  404e51:	jmp    0x404ebd
  404e53:	movzx  eax,BYTE PTR [rsp+0x30]
  404e58:	mov    BYTE PTR [rbp+0x17a],al
  404e5e:	jmp    0x4047b0
  404e63:	cmp    BYTE PTR [rsp+0x30],0x0
  404e68:	je     0x4047b0
  404e6e:	mov    eax,0x7
  404e73:	jmp    0x40480f
  404e78:	nop    DWORD PTR [rax+rax*1+0x0]
  404e80:	mov    rcx,QWORD PTR [rbp+0x140]
  404e87:	test   rcx,rcx
  404e8a:	je     0x404e9c
  404e8c:	call   0x416220
  404e91:	mov    QWORD PTR [rbp+0x140],0x0
  404e9c:	test   r14,r14
  404e9f:	je     0x405311
  404ea5:	mov    rcx,r14
  404ea8:	call   0x4160e8
  404ead:	test   rax,rax
  404eb0:	mov    QWORD PTR [rbp+0x140],rax
  404eb7:	jne    0x405311
  404ebd:	mov    eax,0xe
  404ec2:	jmp    0x40480f
  404ec7:	mov    rax,QWORD PTR [rbp+0x1a8]
  404ece:	test   rax,rax
  404ed1:	je     0x4056e4
  404ed7:	mov    edx,DWORD PTR [rax+0x20]
  404eda:	mov    rsi,rax
  404edd:	test   dl,0x8
  404ee0:	jne    0x404ef0
  404ee2:	jmp    0x404f16
  404ee4:	mov    edx,DWORD PTR [rax+0x20]
  404ee7:	test   dl,0x8
  404eea:	je     0x405843
  404ef0:	mov    rax,QWORD PTR [rax]
  404ef3:	test   rax,rax
  404ef6:	jne    0x404ee4
  404ef8:	mov    QWORD PTR [rbp+0x1a8],0x0
  404f03:	mov    rcx,rbp
  404f06:	call   0x40cb40
  404f0b:	test   rax,rax
  404f0e:	mov    rsi,rax
  404f11:	je     0x404ebd
  404f13:	mov    edx,DWORD PTR [rsi+0x20]
  404f16:	mov    eax,edx
  404f18:	or     eax,0x8
  404f1b:	mov    DWORD PTR [rsi+0x20],eax
  404f1e:	cmp    BYTE PTR [r14],0x0
  404f22:	jne    0x405767
  404f28:	or     edx,0x18
  404f2b:	mov    DWORD PTR [rsi+0x20],edx
  404f2e:	jmp    0x4047b0
  404f33:	movzx  eax,BYTE PTR [rsp+0x30]
  404f38:	mov    rsi,QWORD PTR [rsp+0x128]
  404f40:	mov    DWORD PTR [rsi+0x8],eax
  404f43:	jmp    0x4047b0
  404f48:	movzx  eax,BYTE PTR [rsp+0x30]
  404f4d:	mov    BYTE PTR [rbp+0x8],al
  404f50:	jmp    0x4047b0
  404f55:	movzx  eax,BYTE PTR [r14]
  404f59:	cmp    al,0x2b
  404f5b:	je     0x4053d0
  404f61:	cmp    al,0x2d
  404f63:	jne    0x405880
  404f69:	add    r14,0x1
  404f6d:	lea    rcx,[rbp+0x2a8]
  404f74:	mov    rdx,r14
  404f77:	call   0x40d0c0
  404f7c:	jmp    0x4050b9
  404f81:	mov    rcx,QWORD PTR [rbp+0xb0]
  404f88:	test   rcx,rcx
  404f8b:	je     0x404f9d
  404f8d:	call   0x416220
  404f92:	mov    QWORD PTR [rbp+0xb0],0x0
  404f9d:	test   r14,r14
  404fa0:	je     0x405309
  404fa6:	mov    rcx,r14
  404fa9:	call   0x4160e8
  404fae:	test   rax,rax
  404fb1:	mov    QWORD PTR [rbp+0xb0],rax
  404fb8:	jne    0x4047b0
  404fbe:	jmp    0x404ebd
  404fc3:	test   r15b,r15b
  404fc6:	movzx  eax,BYTE PTR [rsp+0x30]
  404fcb:	je     0x40531e
  404fd1:	mov    rsi,QWORD PTR [rsp+0x130]
  404fd9:	xor    eax,0x1
  404fdc:	mov    BYTE PTR [rsi+0x27c],al
  404fe2:	xor    eax,eax
  404fe4:	jmp    0x40480f
  404fe9:	cmp    BYTE PTR [rsp+0x30],0x0
  404fee:	je     0x4047b0
  404ff4:	mov    eax,0x6
  404ff9:	jmp    0x40480f
  404ffe:	xchg   ax,ax
  405000:	movzx  eax,BYTE PTR [rsp+0x30]
  405005:	cmp    r9b,0x74
  405009:	mov    BYTE PTR [rbp+0x181],al
  40500f:	jne    0x4047b0
  405015:	mov    BYTE PTR [rbp+0x182],al
  40501b:	jmp    0x4047b0
  405020:	mov    rdx,QWORD PTR [rsp+0x128]
  405028:	mov    rcx,r14
  40502b:	call   0x40d320
  405030:	test   eax,eax
  405032:	je     0x4047b0
  405038:	mov    rcx,QWORD PTR [rsp+0x128]
  405040:	lea    rdx,[rip+0x13ac9]        # 0x418b10
  405047:	mov    r8,r14
  40504a:	call   0x408110
  40504f:	jmp    0x4047b0
  405054:	cmp    BYTE PTR [rbp+0x17e],0x0
  40505b:	jne    0x40689b
  405061:	movzx  eax,BYTE PTR [rsp+0x30]
  405066:	mov    BYTE PTR [rbp+0x384],al
  40506c:	jmp    0x4047b0
  405071:	movzx  eax,BYTE PTR [rsp+0x30]
  405076:	lea    r8,[rbp+0x308]
  40507d:	mov    rcx,rbp
  405080:	cmp    al,0x1
  405082:	mov    BYTE PTR [rbp+0x17f],al
  405088:	sbb    edx,edx
  40508a:	add    edx,0x2
  40508d:	call   0x407a10
  405092:	test   eax,eax
  405094:	je     0x4047b0
  40509a:	jmp    0x406470
  40509f:	nop
  4050a0:	cmp    r9b,0x70
  4050a4:	je     0x405695
  4050aa:	lea    rcx,[rbp+0x2d0]
  4050b1:	mov    rdx,r14
  4050b4:	call   0x40d0c0
  4050b9:	test   eax,eax
  4050bb:	je     0x4047b0
  4050c1:	jmp    0x40480f
  4050c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4050d0:	mov    BYTE PTR [rbp+0x27f],0x1
  4050d7:	jmp    0x4047b0
  4050dc:	xor    eax,eax
  4050de:	cmp    r9b,0x73
  4050e2:	lea    r8,[rbp+0x2e0]
  4050e9:	sete   al
  4050ec:	lea    r9,[rbp+0x2e8]
  4050f3:	mov    rdx,r14
  4050f6:	mov    DWORD PTR [rsp+0x20],eax
  4050fa:	mov    rcx,rbp
  4050fd:	call   0x403c00
  405102:	test   eax,eax
  405104:	jne    0x406470
  40510a:	lea    r8,[rbp+0x308]
  405111:	mov    edx,0x3
  405116:	mov    rcx,rbp
  405119:	call   0x407a10
  40511e:	test   eax,eax
  405120:	je     0x4047b0
  405126:	jmp    0x406470
  40512b:	nop    DWORD PTR [rax+rax*1+0x0]
  405130:	cmp    r9b,0x7a
  405134:	ja     0x40480a
  40513a:	lea    rax,[rip+0x13d33]        # 0x418e74
  405141:	movsxd rdx,DWORD PTR [rax+r9*4]
  405145:	add    rax,rdx
  405148:	jmp    rax
  40514a:	mov    rcx,QWORD PTR [rbp+0xa8]
  405151:	test   rcx,rcx
  405154:	je     0x405166
  405156:	call   0x416220
  40515b:	mov    QWORD PTR [rbp+0xa8],0x0
  405166:	test   r14,r14
  405169:	je     0x405309
  40516f:	mov    rcx,r14
  405172:	call   0x4160e8
  405177:	test   rax,rax
  40517a:	mov    QWORD PTR [rbp+0xa8],rax
  405181:	jne    0x4047b0
  405187:	jmp    0x404ebd
  40518c:	nop    DWORD PTR [rax+0x0]
  405190:	lea    rdi,[rip+0x13823]        # 0x4189ba
  405197:	mov    ecx,0x2
  40519c:	mov    rsi,r14
  40519f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4051a1:	jne    0x4056a9
  4051a7:	mov    BYTE PTR [rbp+0x49],0x1
  4051ab:	mov    QWORD PTR [rbp+0x68],0x0
  4051b3:	mov    BYTE PTR [rbp+0x48],0x1
  4051b7:	jmp    0x4047b0
  4051bc:	mov    DWORD PTR [rbp+0x2c0],0x4
  4051c6:	jmp    0x4047b0
  4051cb:	mov    DWORD PTR [rbp+0x2b8],0x3
  4051d5:	jmp    0x4047b0
  4051da:	mov    DWORD PTR [rbp+0x2b8],0x2
  4051e4:	jmp    0x4047b0
  4051e9:	cmp    r9b,0x31
  4051ed:	je     0x4056c6
  4051f3:	jg     0x405852
  4051f9:	test   r9b,r9b
  4051fc:	je     0x4058e0
  405202:	cmp    r9b,0x30
  405206:	jne    0x4047b0
  40520c:	mov    DWORD PTR [rbp+0x2b8],0x4
  405216:	jmp    0x4047b0
  40521b:	cmp    r9b,0x31
  40521f:	je     0x4056d5
  405225:	jle    0x405894
  40522b:	cmp    r9b,0x32
  40522f:	je     0x4058ef
  405235:	cmp    r9b,0x33
  405239:	jne    0x4047b0
  40523f:	mov    DWORD PTR [rbp+0x278],0x5
  405249:	jmp    0x4047b0
  40524e:	sub    r9d,0x34
  405252:	cmp    r9b,0x4a
  405256:	ja     0x4047b0
  40525c:	lea    rax,[rip+0x13dfd]        # 0x419060
  405263:	movzx  r9d,r9b
  405267:	movsxd rdx,DWORD PTR [rax+r9*4]
  40526b:	add    rax,rdx
  40526e:	jmp    rax
  405270:	sub    r9d,0x23
  405274:	cmp    r9b,0x57
  405278:	ja     0x4047b0
  40527e:	lea    rax,[rip+0x13f07]        # 0x41918c
  405285:	movzx  r9d,r9b
  405289:	movsxd rdx,DWORD PTR [rax+r9*4]
  40528d:	add    rax,rdx
  405290:	jmp    rax
  405292:	mov    eax,DWORD PTR [rsp+0x30]
  405296:	mov    rsi,QWORD PTR [rsp+0x128]
  40529e:	and    eax,0x1
  4052a1:	mov    DWORD PTR [rsi+0x3c],eax
  4052a4:	jmp    0x4047b0
  4052a9:	movzx  eax,BYTE PTR [rsp+0x30]
  4052ae:	mov    BYTE PTR [rbp+0x17b],al
  4052b4:	jmp    0x4047b0
  4052b9:	mov    rcx,QWORD PTR [rbp+0x20]
  4052bd:	test   rcx,rcx
  4052c0:	je     0x4052cf
  4052c2:	call   0x416220
  4052c7:	mov    QWORD PTR [rbp+0x20],0x0
  4052cf:	test   r14,r14
  4052d2:	je     0x405309
  4052d4:	mov    rcx,r14
  4052d7:	call   0x4160e8
  4052dc:	test   rax,rax
  4052df:	mov    QWORD PTR [rbp+0x20],rax
  4052e3:	jne    0x4047b0
  4052e9:	jmp    0x404ebd
  4052ee:	xchg   ax,ax
  4052f0:	mov    eax,0xf
  4052f5:	jmp    0x40480f
  4052fa:	mov    DWORD PTR [rbp+0x2c0],0x6
  405304:	jmp    0x4047b0
  405309:	xor    r14d,r14d
  40530c:	jmp    0x4047b0
  405311:	mov    rcx,r14
  405314:	call   0x40cd70
  405319:	jmp    0x4047b0
  40531e:	mov    BYTE PTR [rbp+0x27c],al
  405324:	jmp    0x4047b0
  405329:	mov    rcx,QWORD PTR [rbp+0x328]
  405330:	test   rcx,rcx
  405333:	je     0x405345
  405335:	call   0x416220
  40533a:	mov    QWORD PTR [rbp+0x328],0x0
  405345:	test   r14,r14
  405348:	je     0x405309
  40534a:	mov    rcx,r14
  40534d:	call   0x4160e8
  405352:	test   rax,rax
  405355:	mov    QWORD PTR [rbp+0x328],rax
  40535c:	jne    0x4047b0
  405362:	jmp    0x404ebd
  405367:	nop    WORD PTR [rax+rax*1+0x0]
  405370:	movzx  eax,BYTE PTR [rsp+0x30]
  405375:	mov    BYTE PTR [rbp+0x17d],al
  40537b:	jmp    0x4047b0
  405380:	mov    BYTE PTR [rax+0xd],0x1
  405384:	mov    BYTE PTR [rax+0xc],0x1
  405388:	jmp    0x40491a
  40538d:	mov    rcx,QWORD PTR [rbp+0x188]
  405394:	test   rcx,rcx
  405397:	je     0x4053a9
  405399:	call   0x416220
  40539e:	mov    QWORD PTR [rbp+0x188],0x0
  4053a9:	test   r14,r14
  4053ac:	je     0x405309
  4053b2:	mov    rcx,r14
  4053b5:	call   0x4160e8
  4053ba:	test   rax,rax
  4053bd:	mov    QWORD PTR [rbp+0x188],rax
  4053c4:	jne    0x4047b0
  4053ca:	jmp    0x404ebd
  4053cf:	nop
  4053d0:	add    r14,0x1
  4053d4:	lea    rcx,[rbp+0x2b0]
  4053db:	mov    rdx,r14
  4053de:	call   0x40d0c0
  4053e3:	jmp    0x4050b9
  4053e8:	mov    DWORD PTR [rbp+0x2c4],0x2
  4053f2:	add    r14,0x1
  4053f6:	jmp    0x404a79
  4053fb:	mov    rcx,QWORD PTR [rax+0x20]
  4053ff:	call   0x416220
  405404:	lea    rcx,[rip+0x13828]        # 0x418c33
  40540b:	call   0x4160e8
  405410:	mov    rsi,QWORD PTR [rsp+0x128]
  405418:	test   rax,rax
  40541b:	mov    QWORD PTR [rsi+0x20],rax
  40541f:	je     0x404ebd
  405425:	mov    eax,DWORD PTR [rsi+0x34]
  405428:	cmp    eax,0x3
  40542b:	je     0x405440
  40542d:	test   eax,eax
  40542f:	je     0x405440
  405431:	lea    rdx,[rip+0x13800]        # 0x418c38
  405438:	mov    rcx,rsi
  40543b:	call   0x408110
  405440:	mov    rax,QWORD PTR [rsp+0x128]
  405448:	mov    DWORD PTR [rax+0x34],0x3
  40544f:	jmp    0x4047b0
  405454:	mov    rcx,QWORD PTR [rbp+0x38]
  405458:	add    r14,0x1
  40545c:	test   rcx,rcx
  40545f:	je     0x40546e
  405461:	call   0x416220
  405466:	mov    QWORD PTR [rbp+0x38],0x0
  40546e:	test   r14,r14
  405471:	je     0x405309
  405477:	mov    rcx,r14
  40547a:	call   0x4160e8
  40547f:	test   rax,rax
  405482:	mov    QWORD PTR [rbp+0x38],rax
  405486:	jne    0x4047b0
  40548c:	jmp    0x404ebd
  405491:	mov    eax,DWORD PTR [rsp+0x30]
  405495:	shl    eax,0x1f
  405498:	sar    eax,0x1f
  40549b:	and    eax,0x4
  40549e:	mov    DWORD PTR [rbp+0x388],eax
  4054a4:	jmp    0x4047b0
  4054a9:	mov    edx,0x3d
  4054ae:	mov    rcx,r14
  4054b1:	call   0x416178
  4054b6:	test   rax,rax
  4054b9:	je     0x405a07
  4054bf:	mov    rsi,rax
  4054c2:	lea    r8,[rax+0x1]
  4054c6:	sub    rsi,r14
  4054c9:	cmp    BYTE PTR [rax],0x40
  4054cc:	mov    QWORD PTR [rsp+0x50],rsi
  4054d1:	je     0x405976
  4054d7:	test   r8,r8
  4054da:	je     0x4059d9
  4054e0:	mov    rcx,r8
  4054e3:	call   0x4160e8
  4054e8:	test   rax,rax
  4054eb:	mov    QWORD PTR [rsp+0x78],rax
  4054f0:	je     0x404ebd
  4054f6:	mov    r8,rax
  4054f9:	mov    edx,DWORD PTR [r8]
  4054fc:	add    r8,0x4
  405500:	lea    ecx,[rdx-0x1010101]
  405506:	not    edx
  405508:	and    ecx,edx
  40550a:	and    ecx,0x80808080
  405510:	je     0x4054f9
  405512:	mov    edx,ecx
  405514:	shr    edx,0x10
  405517:	test   ecx,0x8080
  40551d:	cmove  ecx,edx
  405520:	lea    rdx,[r8+0x2]
  405524:	cmove  r8,rdx
  405528:	add    cl,cl
  40552a:	sbb    r8,0x3
  40552e:	sub    r8,rax
  405531:	mov    QWORD PTR [rsp+0x80],r8
  405539:	mov    r8d,DWORD PTR [rsp+0x80]
  405541:	mov    rdx,rax
  405544:	mov    rcx,QWORD PTR [rbp+0x0]
  405548:	call   QWORD PTR [rip+0x30022]        # 0x435570
  40554e:	mov    rcx,QWORD PTR [rsp+0x78]
  405553:	mov    rsi,rax
  405556:	call   0x416220
  40555b:	test   rsi,rsi
  40555e:	mov    QWORD PTR [rsp+0x78],0x0
  405567:	je     0x404ebd
  40556d:	mov    rcx,rsi
  405570:	call   0x416150
  405575:	mov    r8,rax
  405578:	mov    rax,QWORD PTR [rsp+0x50]
  40557d:	mov    QWORD PTR [rsp+0x68],r8
  405582:	add    rax,r8
  405585:	lea    rdx,[rax+0x2]
  405589:	mov    QWORD PTR [rsp+0x58],rax
  40558e:	mov    rcx,rdx
  405591:	mov    QWORD PTR [rsp+0x60],rdx
  405596:	call   0x4161d0
  40559b:	test   rax,rax
  40559e:	mov    rdi,rax
  4055a1:	mov    rdx,QWORD PTR [rsp+0x60]
  4055a6:	mov    r8,QWORD PTR [rsp+0x68]
  4055ab:	je     0x405d83
  4055b1:	cmp    QWORD PTR [rsp+0x50],0x0
  4055b7:	je     0x40591f
  4055bd:	mov    QWORD PTR [rsp+0x28],rsi
  4055c2:	mov    QWORD PTR [rsp+0x20],r14
  4055c7:	lea    r8,[rip+0x134f1]        # 0x418abf
  4055ce:	mov    r9,QWORD PTR [rsp+0x50]
  4055d3:	mov    rcx,rax
  4055d6:	call   QWORD PTR [rip+0x3001c]        # 0x4355f8
  4055dc:	mov    rax,QWORD PTR [rsp+0x58]
  4055e1:	add    rax,0x1
  4055e5:	mov    QWORD PTR [rsp+0x80],rax
  4055ed:	mov    rcx,rsi
  4055f0:	call   QWORD PTR [rip+0x2ffc2]        # 0x4355b8
  4055f6:	mov    QWORD PTR [rsp+0x78],rdi
  4055fb:	mov    r9,QWORD PTR [rsp+0x80]
  405603:	jmp    0x40471f
  405608:	add    r14,0x1
  40560c:	lea    rsi,[rip+0x133a7]        # 0x4189ba
  405613:	mov    ecx,0x2
  405618:	mov    rdi,r14
  40561b:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40561d:	jne    0x405940
  405623:	call   QWORD PTR [rip+0x30177]        # 0x4357a0
  405629:	mov    rsi,rax
  40562c:	lea    rax,[rip+0x132d8]        # 0x41890b
  405633:	mov    QWORD PTR [rsp+0x50],rax
  405638:	lea    rcx,[rbp+0x290]
  40563f:	mov    rdx,rsi
  405642:	call   0x40cb90
  405647:	test   rsi,rsi
  40564a:	mov    edi,eax
  40564c:	je     0x405661
  40564e:	call   QWORD PTR [rip+0x3014c]        # 0x4357a0
  405654:	cmp    rax,rsi
  405657:	je     0x405661
  405659:	mov    rcx,rsi
  40565c:	call   0x416260
  405661:	test   edi,edi
  405663:	jne    0x4068b9
  405669:	cmp    QWORD PTR [rbp+0x290],0x0
  405671:	jne    0x4047b0
  405677:	mov    r8,QWORD PTR [rsp+0x50]
  40567c:	mov    rcx,QWORD PTR [rsp+0x128]
  405684:	lea    rdx,[rip+0x135e9]        # 0x418c74
  40568b:	call   0x408110
  405690:	jmp    0x4047b0
  405695:	lea    rcx,[rbp+0x2d8]
  40569c:	mov    rdx,r14
  40569f:	call   0x40d0c0
  4056a4:	jmp    0x4050b9
  4056a9:	lea    rcx,[rbp+0x68]
  4056ad:	mov    rdx,r14
  4056b0:	call   0x40d020
  4056b5:	test   eax,eax
  4056b7:	jne    0x40480f
  4056bd:	mov    BYTE PTR [rbp+0x49],0x0
  4056c1:	jmp    0x4051b3
  4056c6:	mov    DWORD PTR [rbp+0x2b8],0x5
  4056d0:	jmp    0x4047b0
  4056d5:	mov    DWORD PTR [rbp+0x278],0x2
  4056df:	jmp    0x4047b0
  4056e4:	mov    rax,QWORD PTR [rbp+0x190]
  4056eb:	test   rax,rax
  4056ee:	mov    QWORD PTR [rbp+0x1a8],rax
  4056f5:	je     0x404f03
  4056fb:	jmp    0x404ed7
  405700:	mov    BYTE PTR [rbp+0x17c],0x0
  405707:	jmp    0x404d14
  40570c:	mov    rcx,QWORD PTR [rbp+0x108]
  405713:	test   rcx,rcx
  405716:	je     0x405728
  405718:	call   0x416220
  40571d:	mov    QWORD PTR [rbp+0x108],0x0
  405728:	test   r14,r14
  40572b:	je     0x405309
  405731:	mov    rcx,r14
  405734:	call   0x4160e8
  405739:	test   rax,rax
  40573c:	mov    QWORD PTR [rbp+0x108],rax
  405743:	jne    0x4047b0
  405749:	jmp    0x404ebd
  40574e:	xchg   ax,ax
  405750:	mov    QWORD PTR [rbp+0x1a8],rax
  405757:	mov    rdi,rax
  40575a:	jmp    0x4048c1
  40575f:	and    eax,0xfffffffb
  405762:	jmp    0x4048e4
  405767:	mov    rcx,QWORD PTR [rsi+0x18]
  40576b:	test   rcx,rcx
  40576e:	je     0x40577d
  405770:	call   0x416220
  405775:	mov    QWORD PTR [rsi+0x18],0x0
  40577d:	mov    rcx,r14
  405780:	call   0x4160e8
  405785:	test   rax,rax
  405788:	mov    QWORD PTR [rsi+0x18],rax
  40578c:	jne    0x4047b0
  405792:	jmp    0x404ebd
  405797:	nop    WORD PTR [rax+rax*1+0x0]
  4057a0:	mov    rcx,QWORD PTR [rdi+0x10]
  4057a4:	test   rcx,rcx
  4057a7:	je     0x4057b6
  4057a9:	call   0x416220
  4057ae:	mov    QWORD PTR [rdi+0x10],0x0
  4057b6:	test   r14,r14
  4057b9:	je     0x4057d0
  4057bb:	mov    rcx,r14
  4057be:	call   0x4160e8
  4057c3:	test   rax,rax
  4057c6:	mov    QWORD PTR [rdi+0x10],rax
  4057ca:	je     0x404ebd
  4057d0:	mov    eax,DWORD PTR [rdi+0x20]
  4057d3:	and    eax,0xfffffffb
  4057d6:	jmp    0x4048e4
  4057db:	mov    eax,0x3
  4057e0:	jmp    0x40480f
  4057e5:	mov    rcx,r14
  4057e8:	call   0x4160e8
  4057ed:	test   rax,rax
  4057f0:	mov    QWORD PTR [rsp+0x78],rax
  4057f5:	je     0x404ebd
  4057fb:	mov    r9,rax
  4057fe:	mov    ecx,DWORD PTR [r9]
  405801:	add    r9,0x4
  405805:	lea    edx,[rcx-0x1010101]
  40580b:	not    ecx
  40580d:	and    edx,ecx
  40580f:	and    edx,0x80808080
  405815:	je     0x4057fe
  405817:	mov    ecx,edx
  405819:	shr    ecx,0x10
  40581c:	test   edx,0x8080
  405822:	cmove  edx,ecx
  405825:	lea    rcx,[r9+0x2]
  405829:	cmove  r9,rcx
  40582d:	add    dl,dl
  40582f:	sbb    r9,0x3
  405833:	sub    r9,rax
  405836:	mov    QWORD PTR [rsp+0x80],r9
  40583e:	jmp    0x40471f
  405843:	mov    QWORD PTR [rbp+0x1a8],rax
  40584a:	mov    rsi,rax
  40584d:	jmp    0x404f16
  405852:	cmp    r9b,0x32
  405856:	je     0x4058fe
  40585c:	cmp    r9b,0x33
  405860:	jne    0x4047b0
  405866:	mov    DWORD PTR [rbp+0x2b8],0x7
  405870:	jmp    0x4047b0
  405875:	mov    BYTE PTR [rbp+0x184],al
  40587b:	jmp    0x4047b0
  405880:	lea    rcx,[rbp+0x2a0]
  405887:	mov    rdx,r14
  40588a:	call   0x40d0c0
  40588f:	jmp    0x4050b9
  405894:	test   r9b,r9b
  405897:	jne    0x4047b0
  40589d:	mov    DWORD PTR [rbp+0x278],0x1
  4058a7:	jmp    0x4047b0
  4058ac:	mov    DWORD PTR [rbp+0x2c4],0x3
  4058b6:	add    r14,0x1
  4058ba:	jmp    0x404a79
  4058bf:	mov    rax,QWORD PTR [rbp+0x190]
  4058c6:	test   rax,rax
  4058c9:	mov    QWORD PTR [rbp+0x1a8],rax
  4058d0:	je     0x4048ad
  4058d6:	jmp    0x404885
  4058db:	nop    DWORD PTR [rax+rax*1+0x0]
  4058e0:	mov    DWORD PTR [rbp+0x2b8],0x1
  4058ea:	jmp    0x4047b0
  4058ef:	mov    DWORD PTR [rbp+0x278],0x3
  4058f9:	jmp    0x4047b0
  4058fe:	mov    DWORD PTR [rbp+0x2b8],0x6
  405908:	jmp    0x4047b0
  40590d:	mov    rcx,QWORD PTR [rbp+0x38]
  405911:	test   rcx,rcx
  405914:	jne    0x405461
  40591a:	jmp    0x405477
  40591f:	add    r8,0x1
  405923:	mov    rdx,rsi
  405926:	mov    rcx,rax
  405929:	call   0x4161b8
  40592e:	mov    rax,QWORD PTR [rsp+0x58]
  405933:	mov    QWORD PTR [rsp+0x80],rax
  40593b:	jmp    0x4055ed
  405940:	lea    rdx,[rip+0x1332a]        # 0x418c71
  405947:	mov    rcx,r14
  40594a:	call   0x416248
  40594f:	mov    QWORD PTR [rsp+0x50],r14
  405954:	mov    rsi,rax
  405957:	jmp    0x405638
  40595c:	mov    rax,QWORD PTR [rsp+0x78]
  405961:	mov    rcx,r9
  405964:	mov    QWORD PTR [rbp+0x70],rax
  405968:	call   0x410160
  40596d:	mov    QWORD PTR [rbp+0x78],rax
  405971:	jmp    0x4047b0
  405976:	lea    rsi,[rip+0x1303d]        # 0x4189ba
  40597d:	mov    ecx,0x2
  405982:	mov    rdi,r8
  405985:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405987:	jne    0x405a30
  40598d:	mov    rsi,QWORD PTR [rip+0x2fe0c]        # 0x4357a0
  405994:	call   rsi
  405996:	mov    rdi,rax
  405999:	call   rsi
  40599b:	mov    rcx,rax
  40599e:	call   0x4015d0
  4059a3:	lea    rdx,[rsp+0x80]
  4059ab:	lea    rcx,[rsp+0x78]
  4059b0:	mov    r8,rdi
  4059b3:	call   0x40cc90
  4059b8:	test   rdi,rdi
  4059bb:	mov    edx,eax
  4059bd:	jne    0x405a69
  4059c3:	test   edx,edx
  4059c5:	jne    0x405d91
  4059cb:	mov    rax,QWORD PTR [rsp+0x78]
  4059d0:	test   rax,rax
  4059d3:	jne    0x405539
  4059d9:	lea    rcx,[rip+0x130de]        # 0x418abe
  4059e0:	call   0x4160e8
  4059e5:	test   rax,rax
  4059e8:	mov    QWORD PTR [rsp+0x78],rax
  4059ed:	je     0x404ebd
  4059f3:	mov    QWORD PTR [rsp+0x80],0x0
  4059ff:	xor    r9d,r9d
  405a02:	jmp    0x40471f
  405a07:	mov    edx,0x40
  405a0c:	mov    rcx,r14
  405a0f:	call   0x416178
  405a14:	test   rax,rax
  405a17:	mov    r8,r14
  405a1a:	mov    QWORD PTR [rsp+0x50],0x0
  405a23:	je     0x4054e0
  405a29:	jmp    0x4054bf
  405a2e:	xchg   ax,ax
  405a30:	lea    rdx,[rip+0x13040]        # 0x418a77
  405a37:	mov    rcx,r8
  405a3a:	call   0x416248
  405a3f:	test   rax,rax
  405a42:	mov    rdi,rax
  405a45:	je     0x406599
  405a4b:	lea    rdx,[rsp+0x80]
  405a53:	lea    rcx,[rsp+0x78]
  405a58:	mov    r8,rax
  405a5b:	call   0x40cc90
  405a60:	mov    rsi,QWORD PTR [rip+0x2fd39]        # 0x4357a0
  405a67:	mov    edx,eax
  405a69:	mov    DWORD PTR [rsp+0x58],edx
  405a6d:	call   rsi
  405a6f:	cmp    rax,rdi
  405a72:	mov    edx,DWORD PTR [rsp+0x58]
  405a76:	je     0x4059c3
  405a7c:	mov    rcx,rdi
  405a7f:	call   0x416260
  405a84:	mov    edx,DWORD PTR [rsp+0x58]
  405a88:	jmp    0x4059c3
  405a8d:	lea    rdx,[rip+0x12fe3]        # 0x418a77
  405a94:	mov    rcx,r14
  405a97:	call   0x416248
  405a9c:	test   rax,rax
  405a9f:	mov    rdi,rax
  405aa2:	movzx  r9d,BYTE PTR [rsp+0x50]
  405aa8:	je     0x405dda
  405aae:	cmp    r9b,0x62
  405ab2:	jne    0x4046c5
  405ab8:	lea    rdx,[rsp+0x80]
  405ac0:	lea    rcx,[rsp+0x78]
  405ac5:	mov    r8,rdi
  405ac8:	call   0x40cc90
  405acd:	mov    esi,eax
  405acf:	jmp    0x4046eb
  405ad4:	mov    rcx,QWORD PTR [rbp+0xf8]
  405adb:	test   rcx,rcx
  405ade:	je     0x405af0
  405ae0:	call   0x416220
  405ae5:	mov    QWORD PTR [rbp+0xf8],0x0
  405af0:	test   r14,r14
  405af3:	je     0x405309
  405af9:	mov    rcx,r14
  405afc:	call   0x4160e8
  405b01:	test   rax,rax
  405b04:	mov    QWORD PTR [rbp+0xf8],rax
  405b0b:	jne    0x4047b0
  405b11:	jmp    0x404ebd
  405b16:	mov    rax,QWORD PTR [rip+0x2a603]        # 0x430120
  405b1d:	mov    rax,QWORD PTR [rax]
  405b20:	test   BYTE PTR [rax+0x20],0x4
  405b24:	je     0x4047b0
  405b2a:	movzx  eax,BYTE PTR [rsp+0x30]
  405b2f:	mov    BYTE PTR [rbp+0x395],al
  405b35:	jmp    0x4047b0
  405b3a:	mov    rcx,QWORD PTR [rbp+0x1f8]
  405b41:	test   rcx,rcx
  405b44:	je     0x405b56
  405b46:	call   0x416220
  405b4b:	mov    QWORD PTR [rbp+0x1f8],0x0
  405b56:	test   r14,r14
  405b59:	je     0x405309
  405b5f:	mov    rcx,r14
  405b62:	call   0x4160e8
  405b67:	test   rax,rax
  405b6a:	mov    QWORD PTR [rbp+0x1f8],rax
  405b71:	jne    0x4047b0
  405b77:	jmp    0x404ebd
  405b7c:	mov    rcx,QWORD PTR [rbp+0x1e8]
  405b83:	test   rcx,rcx
  405b86:	je     0x405b98
  405b88:	call   0x416220
  405b8d:	mov    QWORD PTR [rbp+0x1e8],0x0
  405b98:	test   r14,r14
  405b9b:	je     0x405309
  405ba1:	mov    rcx,r14
  405ba4:	call   0x4160e8
  405ba9:	test   rax,rax
  405bac:	mov    QWORD PTR [rbp+0x1e8],rax
  405bb3:	jne    0x4047b0
  405bb9:	jmp    0x404ebd
  405bbe:	mov    rcx,QWORD PTR [rbp+0x208]
  405bc5:	test   rcx,rcx
  405bc8:	je     0x405bda
  405bca:	call   0x416220
  405bcf:	mov    QWORD PTR [rbp+0x208],0x0
  405bda:	test   r14,r14
  405bdd:	je     0x405309
  405be3:	mov    rcx,r14
  405be6:	call   0x4160e8
  405beb:	test   rax,rax
  405bee:	mov    QWORD PTR [rbp+0x208],rax
  405bf5:	jne    0x4047b0
  405bfb:	jmp    0x404ebd
  405c00:	mov    rcx,QWORD PTR [rbp+0x1b8]
  405c07:	test   rcx,rcx
  405c0a:	je     0x405c1c
  405c0c:	call   0x416220
  405c11:	mov    QWORD PTR [rbp+0x1b8],0x0
  405c1c:	test   r14,r14
  405c1f:	je     0x405309
  405c25:	mov    rcx,r14
  405c28:	call   0x4160e8
  405c2d:	test   rax,rax
  405c30:	mov    QWORD PTR [rbp+0x1b8],rax
  405c37:	jne    0x4047b0
  405c3d:	jmp    0x404ebd
  405c42:	mov    rcx,QWORD PTR [rbp+0x240]
  405c49:	test   rcx,rcx
  405c4c:	je     0x405c5e
  405c4e:	call   0x416220
  405c53:	mov    QWORD PTR [rbp+0x240],0x0
  405c5e:	test   r14,r14
  405c61:	je     0x405c7b
  405c63:	mov    rcx,r14
  405c66:	call   0x4160e8
  405c6b:	test   rax,rax
  405c6e:	mov    QWORD PTR [rbp+0x240],rax
  405c75:	je     0x404ebd
  405c7b:	mov    rcx,r14
  405c7e:	call   0x40cd70
  405c83:	jmp    0x4047b0
  405c88:	mov    rcx,QWORD PTR [rbp+0x230]
  405c8f:	test   rcx,rcx
  405c92:	je     0x405ca4
  405c94:	call   0x416220
  405c99:	mov    QWORD PTR [rbp+0x230],0x0
  405ca4:	test   r14,r14
  405ca7:	je     0x405309
  405cad:	mov    rcx,r14
  405cb0:	call   0x4160e8
  405cb5:	test   rax,rax
  405cb8:	mov    QWORD PTR [rbp+0x230],rax
  405cbf:	jne    0x4047b0
  405cc5:	jmp    0x404ebd
  405cca:	lea    rdx,[rbp+0x1c0]
  405cd1:	lea    r8,[rbp+0x238]
  405cd8:	mov    rcx,r14
  405cdb:	call   0x416480
  405ce0:	jmp    0x4047b0
  405ce5:	call   rsi
  405ce7:	mov    rcx,rax
  405cea:	call   0x4015d0
  405cef:	jmp    0x405ab8
  405cf4:	lea    rdx,[rbp+0x1c8]
  405cfb:	lea    r8,[rbp+0x240]
  405d02:	mov    rcx,r14
  405d05:	call   0x416480
  405d0a:	jmp    0x4047b0
  405d0f:	mov    rax,QWORD PTR [rip+0x2a40a]        # 0x430120
  405d16:	mov    rax,QWORD PTR [rax]
  405d19:	test   BYTE PTR [rax+0x21],0x40
  405d1d:	je     0x405d70
  405d1f:	mov    rcx,QWORD PTR [rbp+0x138]
  405d26:	test   rcx,rcx
  405d29:	je     0x405d3b
  405d2b:	call   0x416220
  405d30:	mov    QWORD PTR [rbp+0x138],0x0
  405d3b:	test   r14,r14
  405d3e:	je     0x405d7a
  405d40:	mov    rcx,r14
  405d43:	call   0x4160e8
  405d48:	test   rax,rax
  405d4b:	mov    QWORD PTR [rbp+0x138],rax
  405d52:	je     0x404ebd
  405d58:	lea    rdx,[rip+0x12d6e]        # 0x418acd
  405d5f:	mov    rcx,rax
  405d62:	call   QWORD PTR [rip+0x2f8c0]        # 0x435628
  405d68:	test   eax,eax
  405d6a:	jne    0x4047b0
  405d70:	mov    eax,0xc
  405d75:	jmp    0x40480f
  405d7a:	mov    rax,QWORD PTR [rbp+0x138]
  405d81:	jmp    0x405d58
  405d83:	mov    rcx,rsi
  405d86:	call   QWORD PTR [rip+0x2f82c]        # 0x4355b8
  405d8c:	jmp    0x404ebd
  405d91:	mov    eax,edx
  405d93:	jmp    0x40480f
  405d98:	mov    rcx,QWORD PTR [rbp+0xf0]
  405d9f:	test   rcx,rcx
  405da2:	je     0x405db4
  405da4:	call   0x416220
  405da9:	mov    QWORD PTR [rbp+0xf0],0x0
  405db4:	test   r14,r14
  405db7:	je     0x405309
  405dbd:	mov    rcx,r14
  405dc0:	call   0x4160e8
  405dc5:	test   rax,rax
  405dc8:	mov    QWORD PTR [rbp+0xf0],rax
  405dcf:	jne    0x4047b0
  405dd5:	jmp    0x404ebd
  405dda:	mov    rcx,QWORD PTR [rsp+0x128]
  405de2:	lea    rdx,[rip+0x12c97]        # 0x418a80
  405de9:	mov    r8,r14
  405dec:	call   0x408110
  405df1:	movzx  r9d,BYTE PTR [rsp+0x50]
  405df7:	jmp    0x405aae
  405dfc:	mov    rax,QWORD PTR [rsp+0x128]
  405e04:	mov    rcx,QWORD PTR [rax+0x40]
  405e08:	test   rcx,rcx
  405e0b:	je     0x405e22
  405e0d:	call   0x416220
  405e12:	mov    rax,QWORD PTR [rsp+0x128]
  405e1a:	mov    QWORD PTR [rax+0x40],0x0
  405e22:	test   r14,r14
  405e25:	je     0x405309
  405e2b:	mov    rcx,r14
  405e2e:	call   0x4160e8
  405e33:	mov    rsi,QWORD PTR [rsp+0x128]
  405e3b:	test   rax,rax
  405e3e:	mov    QWORD PTR [rsi+0x40],rax
  405e42:	jne    0x4047b0
  405e48:	jmp    0x404ebd
  405e4d:	movzx  eax,BYTE PTR [rsp+0x30]
  405e52:	mov    r8d,DWORD PTR [rbp+0x324]
  405e59:	test   r8d,r8d
  405e5c:	mov    BYTE PTR [rbp+0x323],al
  405e62:	jne    0x4047b0
  405e68:	mov    DWORD PTR [rbp+0x324],0x1
  405e72:	jmp    0x4047b0
  405e77:	cmp    BYTE PTR [rsp+0x30],0x0
  405e7c:	je     0x405e92
  405e7e:	mov    rax,QWORD PTR [rip+0x2a29b]        # 0x430120
  405e85:	mov    rax,QWORD PTR [rax]
  405e88:	test   BYTE PTR [rax+0x20],0x4
  405e8c:	je     0x405d70
  405e92:	movzx  eax,BYTE PTR [rsp+0x30]
  405e97:	mov    BYTE PTR [rbp+0x322],al
  405e9d:	jmp    0x4047b0
  405ea2:	movzx  eax,BYTE PTR [rsp+0x48]
  405ea7:	mov    BYTE PTR [rbp+0x37a],al
  405ead:	jmp    0x4047b0
  405eb2:	cmp    BYTE PTR [rsp+0x30],0x0
  405eb7:	je     0x405ecd
  405eb9:	mov    rax,QWORD PTR [rip+0x2a260]        # 0x430120
  405ec0:	mov    rax,QWORD PTR [rax]
  405ec3:	test   BYTE PTR [rax+0x20],0x4
  405ec7:	je     0x405d70
  405ecd:	movzx  eax,BYTE PTR [rsp+0x30]
  405ed2:	mov    BYTE PTR [rbp+0x321],al
  405ed8:	jmp    0x4047b0
  405edd:	mov    rcx,QWORD PTR [rbp+0x368]
  405ee4:	test   rcx,rcx
  405ee7:	je     0x405ef9
  405ee9:	call   0x416220
  405eee:	mov    QWORD PTR [rbp+0x368],0x0
  405ef9:	test   r14,r14
  405efc:	je     0x405309
  405f02:	mov    rcx,r14
  405f05:	call   0x4160e8
  405f0a:	test   rax,rax
  405f0d:	mov    QWORD PTR [rbp+0x368],rax
  405f14:	jne    0x4047b0
  405f1a:	jmp    0x404ebd
  405f1f:	mov    rcx,QWORD PTR [rbp+0x148]
  405f26:	test   rcx,rcx
  405f29:	je     0x405f3b
  405f2b:	call   0x416220
  405f30:	mov    QWORD PTR [rbp+0x148],0x0
  405f3b:	test   r14,r14
  405f3e:	je     0x405f58
  405f40:	mov    rcx,r14
  405f43:	call   0x4160e8
  405f48:	test   rax,rax
  405f4b:	mov    QWORD PTR [rbp+0x148],rax
  405f52:	je     0x404ebd
  405f58:	mov    DWORD PTR [rbp+0x150],0x4
  405f62:	jmp    0x4047b0
  405f67:	lea    r9,[rbp+0xc4]
  405f6e:	lea    r8,[rbp+0xc0]
  405f75:	lea    rdx,[rip+0x12a57]        # 0x4189d3
  405f7c:	mov    rcx,r14
  405f7f:	call   0x416180
  405f84:	test   eax,eax
  405f86:	je     0x406470
  405f8c:	cmp    eax,0x1
  405f8f:	je     0x4060ac
  405f95:	mov    eax,DWORD PTR [rbp+0xc4]
  405f9b:	sub    eax,DWORD PTR [rbp+0xc0]
  405fa1:	test   eax,eax
  405fa3:	mov    DWORD PTR [rbp+0xc4],eax
  405fa9:	jg     0x4047b0
  405faf:	mov    rcx,QWORD PTR [rsp+0x128]
  405fb7:	lea    rdx,[rip+0x12a1d]        # 0x4189db
  405fbe:	call   0x408110
  405fc3:	mov    eax,0x4
  405fc8:	jmp    0x40480f
  405fcd:	mov    rdx,r14
  405fd0:	mov    rcx,rbp
  405fd3:	call   0x40d0f0
  405fd8:	mov    DWORD PTR [rbp+0x370],eax
  405fde:	jmp    0x4047b0
  405fe3:	movzx  eax,BYTE PTR [rsp+0x30]
  405fe8:	mov    BYTE PTR [rbp+0x28a],al
  405fee:	jmp    0x4047b0
  405ff3:	mov    rcx,QWORD PTR [rbp+0x360]
  405ffa:	test   rcx,rcx
  405ffd:	je     0x40600f
  405fff:	call   0x416220
  406004:	mov    QWORD PTR [rbp+0x360],0x0
  40600f:	test   r14,r14
  406012:	je     0x405309
  406018:	mov    rcx,r14
  40601b:	call   0x4160e8
  406020:	test   rax,rax
  406023:	mov    QWORD PTR [rbp+0x360],rax
  40602a:	jne    0x4047b0
  406030:	jmp    0x404ebd
  406035:	mov    rax,QWORD PTR [rip+0x2a0e4]        # 0x430120
  40603c:	mov    rax,QWORD PTR [rax]
  40603f:	test   BYTE PTR [rax+0x21],0x1
  406043:	je     0x405d70
  406049:	movzx  eax,BYTE PTR [rsp+0x30]
  40604e:	mov    BYTE PTR [rbp+0x286],al
  406054:	jmp    0x4047b0
  406059:	mov    BYTE PTR [rbp+0x323],0x1
  406060:	mov    rdx,r14
  406063:	mov    rcx,rbp
  406066:	call   0x40d160
  40606b:	mov    DWORD PTR [rbp+0x324],eax
  406071:	jmp    0x4047b0
  406076:	movzx  eax,BYTE PTR [rsp+0x30]
  40607b:	mov    BYTE PTR [rbp+0x379],al
  406081:	jmp    0x4047b0
  406086:	movzx  esi,BYTE PTR [rsp+0x30]
  40608b:	mov    rax,QWORD PTR [rsp+0x128]
  406093:	mov    BYTE PTR [rax+0x38],sil
  406097:	jmp    0x4047b0
  40609c:	movzx  eax,BYTE PTR [rsp+0x30]
  4060a1:	mov    BYTE PTR [rbp+0x285],al
  4060a7:	jmp    0x4047b0
  4060ac:	mov    DWORD PTR [rbp+0xc4],0x1
  4060b6:	jmp    0x4047b0
  4060bb:	lea    rcx,[rbp+0x358]
  4060c2:	mov    rdx,r14
  4060c5:	call   0x40cda0
  4060ca:	test   eax,eax
  4060cc:	je     0x4047b0
  4060d2:	jmp    0x40480f
  4060d7:	lea    rcx,[rbp+0x354]
  4060de:	mov    rdx,r14
  4060e1:	call   0x40cda0
  4060e6:	test   eax,eax
  4060e8:	je     0x4047b0
  4060ee:	jmp    0x40480f
  4060f3:	lea    rcx,[rbp+0x34c]
  4060fa:	mov    rdx,r14
  4060fd:	call   0x40cda0
  406102:	test   eax,eax
  406104:	je     0x4047b0
  40610a:	jmp    0x40480f
  40610f:	movzx  eax,BYTE PTR [rsp+0x30]
  406114:	mov    BYTE PTR [rbp+0x289],al
  40611a:	jmp    0x4047b0
  40611f:	movzx  eax,BYTE PTR [rsp+0x30]
  406124:	mov    BYTE PTR [rbp+0x288],al
  40612a:	jmp    0x4047b0
  40612f:	movzx  eax,BYTE PTR [rsp+0x30]
  406134:	mov    BYTE PTR [rbp+0x348],al
  40613a:	jmp    0x4047b0
  40613f:	mov    rcx,QWORD PTR [rbp+0x148]
  406146:	test   rcx,rcx
  406149:	je     0x40615b
  40614b:	call   0x416220
  406150:	mov    QWORD PTR [rbp+0x148],0x0
  40615b:	test   r14,r14
  40615e:	je     0x406178
  406160:	mov    rcx,r14
  406163:	call   0x4160e8
  406168:	test   rax,rax
  40616b:	mov    QWORD PTR [rbp+0x148],rax
  406172:	je     0x404ebd
  406178:	mov    DWORD PTR [rbp+0x150],0x5
  406182:	jmp    0x4047b0
  406187:	mov    rcx,QWORD PTR [rbp+0xb0]
  40618e:	call   0x416220
  406193:	mov    QWORD PTR [rbp+0xb0],0x0
  40619e:	jmp    0x4047b0
  4061a3:	cmp    BYTE PTR [rsp+0x30],0x0
  4061a8:	je     0x4061be
  4061aa:	mov    rax,QWORD PTR [rip+0x29f6f]        # 0x430120
  4061b1:	mov    rax,QWORD PTR [rax]
  4061b4:	test   BYTE PTR [rax+0x20],0x4
  4061b8:	je     0x405d70
  4061be:	movzx  eax,BYTE PTR [rsp+0x30]
  4061c3:	mov    BYTE PTR [rbp+0x320],al
  4061c9:	jmp    0x4047b0
  4061ce:	movzx  eax,BYTE PTR [rsp+0x30]
  4061d3:	mov    BYTE PTR [rbp+0x350],al
  4061d9:	jmp    0x4047b0
  4061de:	lea    rcx,[rbp+0x300]
  4061e5:	mov    rdx,r14
  4061e8:	call   0x40d0c0
  4061ed:	test   eax,eax
  4061ef:	je     0x4047b0
  4061f5:	jmp    0x40480f
  4061fa:	mov    rcx,QWORD PTR [rbp+0x148]
  406201:	test   rcx,rcx
  406204:	je     0x406216
  406206:	call   0x416220
  40620b:	mov    QWORD PTR [rbp+0x148],0x0
  406216:	test   r14,r14
  406219:	je     0x406233
  40621b:	mov    rcx,r14
  40621e:	call   0x4160e8
  406223:	test   rax,rax
  406226:	mov    QWORD PTR [rbp+0x148],rax
  40622d:	je     0x404ebd
  406233:	mov    DWORD PTR [rbp+0x150],0x6
  40623d:	jmp    0x4047b0
  406242:	movzx  eax,BYTE PTR [rsp+0x30]
  406247:	mov    BYTE PTR [rbp+0x378],al
  40624d:	jmp    0x4047b0
  406252:	lea    rcx,[rbp+0x3c8]
  406259:	mov    rdx,r14
  40625c:	call   0x40cdf0
  406261:	test   eax,eax
  406263:	je     0x4047b0
  406269:	jmp    0x40480f
  40626e:	mov    rcx,QWORD PTR [rbp+0x60]
  406272:	test   rcx,rcx
  406275:	je     0x406284
  406277:	call   0x416220
  40627c:	mov    QWORD PTR [rbp+0x60],0x0
  406284:	test   r14,r14
  406287:	je     0x4062f5
  406289:	mov    rcx,r14
  40628c:	call   0x4160e8
  406291:	test   rax,rax
  406294:	mov    QWORD PTR [rbp+0x60],rax
  406298:	je     0x404ebd
  40629e:	mov    rcx,rax
  4062a1:	call   0x40cfb0
  4062a6:	test   eax,eax
  4062a8:	je     0x4047b0
  4062ae:	jmp    0x40480f
  4062b3:	mov    rcx,QWORD PTR [rbp+0x340]
  4062ba:	test   rcx,rcx
  4062bd:	je     0x4062cf
  4062bf:	call   0x416220
  4062c4:	mov    QWORD PTR [rbp+0x340],0x0
  4062cf:	test   r14,r14
  4062d2:	je     0x405309
  4062d8:	mov    rcx,r14
  4062db:	call   0x4160e8
  4062e0:	test   rax,rax
  4062e3:	mov    QWORD PTR [rbp+0x340],rax
  4062ea:	jne    0x4047b0
  4062f0:	jmp    0x404ebd
  4062f5:	mov    rax,QWORD PTR [rbp+0x60]
  4062f9:	jmp    0x40629e
  4062fb:	mov    rcx,QWORD PTR [rbp+0x338]
  406302:	test   rcx,rcx
  406305:	je     0x406317
  406307:	call   0x416220
  40630c:	mov    QWORD PTR [rbp+0x338],0x0
  406317:	test   r14,r14
  40631a:	je     0x405309
  406320:	mov    rcx,r14
  406323:	call   0x4160e8
  406328:	test   rax,rax
  40632b:	mov    QWORD PTR [rbp+0x338],rax
  406332:	jne    0x4047b0
  406338:	jmp    0x404ebd
  40633d:	movzx  eax,BYTE PTR [rsp+0x30]
  406342:	mov    BYTE PTR [rbp+0x3c1],al
  406348:	jmp    0x4047b0
  40634d:	mov    rcx,QWORD PTR [rbp+0x3b8]
  406354:	test   rcx,rcx
  406357:	je     0x406369
  406359:	call   0x416220
  40635e:	mov    QWORD PTR [rbp+0x3b8],0x0
  406369:	test   r14,r14
  40636c:	je     0x405309
  406372:	mov    rcx,r14
  406375:	call   0x4160e8
  40637a:	test   rax,rax
  40637d:	mov    QWORD PTR [rbp+0x3b8],rax
  406384:	jne    0x4047b0
  40638a:	jmp    0x404ebd
  40638f:	mov    rcx,QWORD PTR [rsp+0x128]
  406397:	lea    rdx,[rip+0x126aa]        # 0x418a48
  40639e:	call   0x408110
  4063a3:	jmp    0x4047b0
  4063a8:	movzx  eax,BYTE PTR [rsp+0x30]
  4063ad:	mov    BYTE PTR [rbp+0x178],al
  4063b3:	jmp    0x4047b0
  4063b8:	mov    rcx,QWORD PTR [rsp+0x128]
  4063c0:	lea    rdx,[rip+0x12629]        # 0x4189f0
  4063c7:	call   0x408110
  4063cc:	jmp    0x4047b0
  4063d1:	movzx  eax,BYTE PTR [rsp+0x30]
  4063d6:	mov    BYTE PTR [rbp+0x37e],al
  4063dc:	jmp    0x4047b0
  4063e1:	mov    rcx,QWORD PTR [rbp+0x170]
  4063e8:	test   rcx,rcx
  4063eb:	je     0x4063fd
  4063ed:	call   0x416220
  4063f2:	mov    QWORD PTR [rbp+0x170],0x0
  4063fd:	test   r14,r14
  406400:	je     0x405309
  406406:	mov    rcx,r14
  406409:	call   0x4160e8
  40640e:	test   rax,rax
  406411:	mov    QWORD PTR [rbp+0x170],rax
  406418:	jne    0x4047b0
  40641e:	jmp    0x404ebd
  406423:	mov    rdx,r14
  406426:	mov    rcx,rbp
  406429:	call   0x40d1d0
  40642e:	mov    DWORD PTR [rbp+0x390],eax
  406434:	jmp    0x4047b0
  406439:	lea    rcx,[rbp+0x2f8]
  406440:	mov    rdx,r14
  406443:	call   0x40d0c0
  406448:	test   eax,eax
  40644a:	je     0x4047b0
  406450:	jmp    0x40480f
  406455:	lea    rdx,[rbp+0x58]
  406459:	mov    BYTE PTR [rbp+0x5c],0x1
  40645d:	mov    r8,r14
  406460:	mov    rcx,rbp
  406463:	call   0x40ce30
  406468:	test   eax,eax
  40646a:	je     0x4047b0
  406470:	mov    eax,0x4
  406475:	jmp    0x40480f
  40647a:	movzx  eax,BYTE PTR [rsp+0x30]
  40647f:	mov    BYTE PTR [rbp+0x4c],al
  406482:	jmp    0x4047b0
  406487:	lea    rcx,[rbp+0x168]
  40648e:	mov    rdx,r14
  406491:	call   0x40d0c0
  406496:	test   eax,eax
  406498:	je     0x4047b0
  40649e:	jmp    0x40480f
  4064a3:	mov    rcx,QWORD PTR [rbp+0x160]
  4064aa:	test   rcx,rcx
  4064ad:	je     0x4064bf
  4064af:	call   0x416220
  4064b4:	mov    QWORD PTR [rbp+0x160],0x0
  4064bf:	test   r14,r14
  4064c2:	je     0x405309
  4064c8:	mov    rcx,r14
  4064cb:	call   0x4160e8
  4064d0:	test   rax,rax
  4064d3:	mov    QWORD PTR [rbp+0x160],rax
  4064da:	jne    0x4047b0
  4064e0:	jmp    0x404ebd
  4064e5:	lea    rcx,[rbp+0x374]
  4064ec:	mov    rdx,r14
  4064ef:	call   0x40cda0
  4064f4:	test   eax,eax
  4064f6:	je     0x4047b0
  4064fc:	jmp    0x40480f
  406501:	mov    BYTE PTR [rbp+0x54],0x1
  406505:	lea    rdx,[rbp+0x50]
  406509:	jmp    0x40645d
  40650e:	mov    rcx,rsi
  406511:	call   0x416220
  406516:	mov    rcx,QWORD PTR [rsp+0x78]
  40651b:	call   0x416220
  406520:	mov    eax,0xe
  406525:	jmp    0x40480f
  40652a:	lea    rcx,[rip+0x1258d]        # 0x418abe
  406531:	call   0x4160e8
  406536:	test   rax,rax
  406539:	mov    QWORD PTR [rsp+0x78],rax
  40653e:	jne    0x404717
  406544:	jmp    0x404ebd
  406549:	mov    eax,esi
  40654b:	jmp    0x40480f
  406550:	mov    al,0xe
  406552:	jmp    0x40480f
  406557:	mov    rcx,QWORD PTR [rbp+0x1d8]
  40655e:	test   rcx,rcx
  406561:	je     0x406573
  406563:	call   0x416220
  406568:	mov    QWORD PTR [rbp+0x1d8],0x0
  406573:	test   r14,r14
  406576:	je     0x405309
  40657c:	mov    rcx,r14
  40657f:	call   0x4160e8
  406584:	test   rax,rax
  406587:	mov    QWORD PTR [rbp+0x1d8],rax
  40658e:	jne    0x4047b0
  406594:	jmp    0x404ebd
  406599:	mov    rcx,QWORD PTR [rsp+0x128]
  4065a1:	lea    rdx,[rip+0x124d8]        # 0x418a80
  4065a8:	mov    r8,r14
  4065ab:	call   0x408110
  4065b0:	lea    rdx,[rsp+0x80]
  4065b8:	lea    rcx,[rsp+0x78]
  4065bd:	xor    r8d,r8d
  4065c0:	call   0x40cc90
  4065c5:	mov    edx,eax
  4065c7:	jmp    0x4059c3
  4065cc:	mov    rcx,QWORD PTR [rbp+0x148]
  4065d3:	test   rcx,rcx
  4065d6:	je     0x4065e8
  4065d8:	call   0x416220
  4065dd:	mov    QWORD PTR [rbp+0x148],0x0
  4065e8:	test   r14,r14
  4065eb:	je     0x406605
  4065ed:	mov    rcx,r14
  4065f0:	call   0x4160e8
  4065f5:	test   rax,rax
  4065f8:	mov    QWORD PTR [rbp+0x148],rax
  4065ff:	je     0x404ebd
  406605:	mov    DWORD PTR [rbp+0x150],0x1
  40660f:	jmp    0x4047b0
  406614:	movzx  eax,BYTE PTR [rsp+0x30]
  406619:	mov    DWORD PTR [rbp+0x330],eax
  40661f:	jmp    0x4047b0
  406624:	mov    rcx,QWORD PTR [rbp+0x158]
  40662b:	test   rcx,rcx
  40662e:	je     0x406640
  406630:	call   0x416220
  406635:	mov    QWORD PTR [rbp+0x158],0x0
  406640:	test   r14,r14
  406643:	je     0x405309
  406649:	mov    rcx,r14
  40664c:	call   0x4160e8
  406651:	test   rax,rax
  406654:	mov    QWORD PTR [rbp+0x158],rax
  40665b:	jne    0x4047b0
  406661:	jmp    0x404ebd
  406666:	movzx  eax,BYTE PTR [rsp+0x30]
  40666b:	mov    BYTE PTR [rbp+0x37d],al
  406671:	jmp    0x4047b0
  406676:	lea    rcx,[rbp+0x380]
  40667d:	mov    rdx,r14
  406680:	call   0x40cda0
  406685:	test   eax,eax
  406687:	je     0x4047b0
  40668d:	jmp    0x40480f
  406692:	mov    rcx,QWORD PTR [rbp+0x148]
  406699:	test   rcx,rcx
  40669c:	je     0x4066ae
  40669e:	call   0x416220
  4066a3:	mov    QWORD PTR [rbp+0x148],0x0
  4066ae:	test   r14,r14
  4066b1:	je     0x4066cb
  4066b3:	mov    rcx,r14
  4066b6:	call   0x4160e8
  4066bb:	test   rax,rax
  4066be:	mov    QWORD PTR [rbp+0x148],rax
  4066c5:	je     0x404ebd
  4066cb:	mov    DWORD PTR [rbp+0x150],0x7
  4066d5:	jmp    0x4047b0
  4066da:	movzx  eax,BYTE PTR [rsp+0x48]
  4066df:	mov    BYTE PTR [rbp+0x37f],al
  4066e5:	jmp    0x4047b0
  4066ea:	movzx  eax,BYTE PTR [rsp+0x30]
  4066ef:	mov    BYTE PTR [rbp+0x37c],al
  4066f5:	jmp    0x4047b0
  4066fa:	movzx  eax,BYTE PTR [rsp+0x30]
  4066ff:	mov    BYTE PTR [rbp+0x37b],al
  406705:	jmp    0x4047b0
  40670a:	movzx  eax,BYTE PTR [rsp+0x30]
  40670f:	mov    BYTE PTR [rbp+0x38c],al
  406715:	jmp    0x4047b0
  40671a:	movzx  eax,BYTE PTR [rsp+0x30]
  40671f:	mov    BYTE PTR [rbp+0x4b],al
  406722:	jmp    0x4047b0
  406727:	lea    rcx,[rbp+0xa0]
  40672e:	mov    rdx,r14
  406731:	call   0x40d020
  406736:	test   eax,eax
  406738:	je     0x4047b0
  40673e:	jmp    0x40480f
  406743:	mov    rax,QWORD PTR [rip+0x299d6]        # 0x430120
  40674a:	mov    rax,QWORD PTR [rax]
  40674d:	test   BYTE PTR [rax+0x20],0x2
  406751:	je     0x405d70
  406757:	mov    rcx,QWORD PTR [rbp+0x270]
  40675e:	test   rcx,rcx
  406761:	je     0x406773
  406763:	call   0x416220
  406768:	mov    QWORD PTR [rbp+0x270],0x0
  406773:	test   r14,r14
  406776:	je     0x405309
  40677c:	mov    rcx,r14
  40677f:	call   0x4160e8
  406784:	test   rax,rax
  406787:	mov    QWORD PTR [rbp+0x270],rax
  40678e:	jne    0x4047b0
  406794:	jmp    0x404ebd
  406799:	mov    rcx,QWORD PTR [rbp+0xb8]
  4067a0:	test   rcx,rcx
  4067a3:	je     0x4067b5
  4067a5:	call   0x416220
  4067aa:	mov    QWORD PTR [rbp+0xb8],0x0
  4067b5:	test   r14,r14
  4067b8:	je     0x405309
  4067be:	mov    rcx,r14
  4067c1:	call   0x4160e8
  4067c6:	test   rax,rax
  4067c9:	mov    QWORD PTR [rbp+0xb8],rax
  4067d0:	jne    0x4047b0
  4067d6:	jmp    0x404ebd
  4067db:	lea    rdi,[rip+0x121d8]        # 0x4189ba
  4067e2:	mov    ecx,0x2
  4067e7:	mov    rsi,r14
  4067ea:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4067ec:	je     0x40684d
  4067ee:	lea    rdx,[rip+0x121c7]        # 0x4189bc
  4067f5:	mov    rcx,r14
  4067f8:	call   0x416248
  4067fd:	test   rax,rax
  406800:	mov    rsi,rax
  406803:	je     0x406831
  406805:	mov    rax,QWORD PTR [rsp+0x128]
  40680d:	cmp    BYTE PTR [rax+0x18],0x0
  406811:	je     0x40681c
  406813:	mov    rcx,QWORD PTR [rax+0x10]
  406817:	call   0x416260
  40681c:	mov    rax,QWORD PTR [rsp+0x128]
  406824:	mov    QWORD PTR [rax+0x10],rsi
  406828:	mov    BYTE PTR [rax+0x18],0x1
  40682c:	jmp    0x4047b0
  406831:	mov    rcx,QWORD PTR [rsp+0x128]
  406839:	lea    rdx,[rip+0x1217f]        # 0x4189bf
  406840:	mov    r8,r14
  406843:	call   0x408110
  406848:	jmp    0x4047b0
  40684d:	call   QWORD PTR [rip+0x2ef4d]        # 0x4357a0
  406853:	mov    rsi,QWORD PTR [rsp+0x128]
  40685b:	add    rax,0x30
  40685f:	mov    QWORD PTR [rsi+0x10],rax
  406863:	jmp    0x4047b0
  406868:	movzx  eax,BYTE PTR [rsp+0x30]
  40686d:	mov    BYTE PTR [rbp+0x260],al
  406873:	jmp    0x4047b0
  406878:	mov    rcx,QWORD PTR [rsp+0x128]
  406880:	lea    rdx,[rip+0x12401]        # 0x418c88
  406887:	mov    DWORD PTR [rbp+0x2c4],0x0
  406891:	call   0x408110
  406896:	jmp    0x4047b0
  40689b:	mov    rcx,QWORD PTR [rsp+0x128]
  4068a3:	lea    rdx,[rip+0x1222e]        # 0x418ad8
  4068aa:	call   0x408110
  4068af:	mov    eax,0x4
  4068b4:	jmp    0x40480f
  4068b9:	mov    eax,edi
  4068bb:	jmp    0x40480f
  4068c0:	movzx  eax,BYTE PTR [rsp+0x48]
  4068c5:	mov    BYTE PTR [rbp+0x4a],al
  4068c8:	jmp    0x4047b0
  4068cd:	mov    rcx,QWORD PTR [rbp+0xe8]
  4068d4:	test   rcx,rcx
  4068d7:	je     0x4068e9
  4068d9:	call   0x416220
  4068de:	mov    QWORD PTR [rbp+0xe8],0x0
  4068e9:	test   r14,r14
  4068ec:	je     0x405309
  4068f2:	mov    rcx,r14
  4068f5:	call   0x4160e8
  4068fa:	test   rax,rax
  4068fd:	mov    QWORD PTR [rbp+0xe8],rax
  406904:	jne    0x4047b0
  40690a:	jmp    0x404ebd
  40690f:	mov    rcx,QWORD PTR [rbp+0x3a8]
  406916:	test   rcx,rcx
  406919:	je     0x40692b
  40691b:	call   0x416220
  406920:	mov    QWORD PTR [rbp+0x3a8],0x0
  40692b:	test   r14,r14
  40692e:	je     0x405309
  406934:	mov    rcx,r14
  406937:	call   0x4160e8
  40693c:	test   rax,rax
  40693f:	mov    QWORD PTR [rbp+0x3a8],rax
  406946:	jne    0x4047b0
  40694c:	jmp    0x404ebd
  406951:	mov    rax,QWORD PTR [rbp+0x1a0]
  406958:	test   rax,rax
  40695b:	je     0x406a9d
  406961:	test   BYTE PTR [rax+0x20],0x2
  406965:	jne    0x40697a
  406967:	jmp    0x406a61
  40696c:	nop    DWORD PTR [rax+0x0]
  406970:	test   BYTE PTR [rax+0x20],0x2
  406974:	je     0x406a5a
  40697a:	mov    rax,QWORD PTR [rax]
  40697d:	test   rax,rax
  406980:	jne    0x406970
  406982:	mov    QWORD PTR [rbp+0x1a0],0x0
  40698d:	mov    rcx,rbp
  406990:	call   0x40cb40
  406995:	test   rax,rax
  406998:	mov    rsi,rax
  40699b:	jne    0x406a64
  4069a1:	jmp    0x404ebd
  4069a6:	mov    rcx,QWORD PTR [rbp+0x18]
  4069aa:	test   rcx,rcx
  4069ad:	je     0x4069bc
  4069af:	call   0x416220
  4069b4:	mov    QWORD PTR [rbp+0x18],0x0
  4069bc:	test   r14,r14
  4069bf:	je     0x405309
  4069c5:	mov    rcx,r14
  4069c8:	call   0x4160e8
  4069cd:	test   rax,rax
  4069d0:	mov    QWORD PTR [rbp+0x18],rax
  4069d4:	jne    0x4047b0
  4069da:	jmp    0x404ebd
  4069df:	mov    rcx,QWORD PTR [rbp+0x10]
  4069e3:	test   rcx,rcx
  4069e6:	je     0x4069f5
  4069e8:	call   0x416220
  4069ed:	mov    QWORD PTR [rbp+0x10],0x0
  4069f5:	test   r14,r14
  4069f8:	je     0x405309
  4069fe:	mov    rcx,r14
  406a01:	call   0x4160e8
  406a06:	test   rax,rax
  406a09:	mov    QWORD PTR [rbp+0x10],rax
  406a0d:	jne    0x4047b0
  406a13:	jmp    0x404ebd
  406a18:	movzx  eax,BYTE PTR [rsp+0x48]
  406a1d:	mov    BYTE PTR [rbp+0x4b],al
  406a20:	jmp    0x4047b0
  406a25:	cmp    BYTE PTR [rsp+0x30],0x0
  406a2a:	je     0x406b1b
  406a30:	mov    rax,QWORD PTR [rip+0x296e9]        # 0x430120
  406a37:	mov    rax,QWORD PTR [rax]
  406a3a:	test   BYTE PTR [rax+0x21],0x80
  406a3e:	je     0x405d70
  406a44:	or     DWORD PTR [rbp+0x44],0x20
  406a48:	jmp    0x4047b0
  406a4d:	movzx  eax,BYTE PTR [rsp+0x30]
  406a52:	mov    BYTE PTR [rbp+0x42],al
  406a55:	jmp    0x4047b0
  406a5a:	mov    QWORD PTR [rbp+0x1a0],rax
  406a61:	mov    rsi,rax
  406a64:	mov    rcx,QWORD PTR [rsi+0x8]
  406a68:	test   rcx,rcx
  406a6b:	je     0x406a7a
  406a6d:	call   0x416220
  406a72:	mov    QWORD PTR [rsi+0x8],0x0
  406a7a:	test   r14,r14
  406a7d:	je     0x406a94
  406a7f:	mov    rcx,r14
  406a82:	call   0x4160e8
  406a87:	test   rax,rax
  406a8a:	mov    QWORD PTR [rsi+0x8],rax
  406a8e:	je     0x404ebd
  406a94:	or     DWORD PTR [rsi+0x20],0x2
  406a98:	jmp    0x4047b0
  406a9d:	mov    rax,QWORD PTR [rbp+0x190]
  406aa4:	test   rax,rax
  406aa7:	mov    QWORD PTR [rbp+0x1a0],rax
  406aae:	jne    0x406961
  406ab4:	jmp    0x40698d
  406ab9:	movzx  eax,BYTE PTR [rsp+0x48]
  406abe:	mov    BYTE PTR [rbp+0x3b0],al
  406ac4:	jmp    0x4047b0
  406ac9:	mov    rcx,QWORD PTR [rbp+0xe0]
  406ad0:	test   rcx,rcx
  406ad3:	je     0x406ae5
  406ad5:	call   0x416220
  406ada:	mov    QWORD PTR [rbp+0xe0],0x0
  406ae5:	test   r14,r14
  406ae8:	je     0x405309
  406aee:	mov    rcx,r14
  406af1:	call   0x4160e8
  406af6:	test   rax,rax
  406af9:	mov    QWORD PTR [rbp+0xe0],rax
  406b00:	jne    0x4047b0
  406b06:	jmp    0x404ebd
  406b0b:	movzx  eax,BYTE PTR [rsp+0x48]
  406b10:	mov    BYTE PTR [rbp+0x3b1],al
  406b16:	jmp    0x4047b0
  406b1b:	and    DWORD PTR [rbp+0x44],0xffffffdf
  406b1f:	jmp    0x4047b0
  406b24:	mov    rax,QWORD PTR [rip+0x295f5]        # 0x430120
  406b2b:	mov    rax,QWORD PTR [rax]
  406b2e:	test   BYTE PTR [rax+0x20],0x10
  406b32:	je     0x405d70
  406b38:	movzx  eax,BYTE PTR [rsp+0x30]
  406b3d:	mov    BYTE PTR [rbp+0x287],al
  406b43:	jmp    0x4047b0
  406b48:	lea    rcx,[rbp+0x98]
  406b4f:	mov    rdx,r14
  406b52:	call   0x40cd80
  406b57:	test   eax,eax
  406b59:	jne    0x40480f
  406b5f:	cmp    DWORD PTR [rbp+0x98],0xffffffff
  406b66:	jge    0x4047b0
  406b6c:	mov    eax,0xa
  406b71:	jmp    0x40480f
  406b76:	movzx  eax,BYTE PTR [rsp+0x30]
  406b7b:	mov    BYTE PTR [rbp+0x283],al
  406b81:	jmp    0x4047b0
  406b86:	movzx  eax,BYTE PTR [rsp+0x30]
  406b8b:	mov    BYTE PTR [rbp+0x284],al
  406b91:	jmp    0x4047b0
  406b96:	cmp    BYTE PTR [rsp+0x30],0x0
  406b9b:	je     0x4047b0
  406ba1:	mov    DWORD PTR [rbp+0x44],0xffffffef
  406ba8:	jmp    0x4047b0
  406bad:	cmp    BYTE PTR [rsp+0x30],0x0
  406bb2:	je     0x406c05
  406bb4:	or     DWORD PTR [rbp+0x44],0x1
  406bb8:	jmp    0x4047b0
  406bbd:	cmp    BYTE PTR [rsp+0x30],0x0
  406bc2:	je     0x406c0e
  406bc4:	mov    rax,QWORD PTR [rip+0x29555]        # 0x430120
  406bcb:	mov    rax,QWORD PTR [rax]
  406bce:	test   BYTE PTR [rax+0x20],0x10
  406bd2:	je     0x405d70
  406bd8:	or     DWORD PTR [rbp+0x44],0x8
  406bdc:	jmp    0x4047b0
  406be1:	cmp    BYTE PTR [rsp+0x30],0x0
  406be6:	je     0x406c17
  406be8:	mov    rax,QWORD PTR [rip+0x29531]        # 0x430120
  406bef:	mov    rax,QWORD PTR [rax]
  406bf2:	test   BYTE PTR [rax+0x21],0x1
  406bf6:	je     0x405d70
  406bfc:	or     DWORD PTR [rbp+0x44],0x4
  406c00:	jmp    0x4047b0
  406c05:	and    DWORD PTR [rbp+0x44],0xfffffffe
  406c09:	jmp    0x4047b0
  406c0e:	and    DWORD PTR [rbp+0x44],0xfffffff7
  406c12:	jmp    0x4047b0
  406c17:	and    DWORD PTR [rbp+0x44],0xfffffffb
  406c1b:	jmp    0x4047b0
  406c20:	cmp    BYTE PTR [rsp+0x30],0x0
  406c25:	je     0x406c58
  406c27:	or     DWORD PTR [rbp+0x44],0x2
  406c2b:	jmp    0x4047b0
  406c30:	cmp    BYTE PTR [rsp+0x30],0x0
  406c35:	je     0x406c4b
  406c37:	mov    rax,QWORD PTR [rip+0x294e2]        # 0x430120
  406c3e:	mov    rax,QWORD PTR [rax]
  406c41:	test   BYTE PTR [rax+0x20],0x8
  406c45:	je     0x405d70
  406c4b:	movzx  eax,BYTE PTR [rsp+0x30]
  406c50:	mov    BYTE PTR [rbp+0x41],al
  406c53:	jmp    0x4047b0
  406c58:	and    DWORD PTR [rbp+0x44],0xfffffffd
  406c5c:	jmp    0x4047b0
  406c61:	lea    rdx,[rsp+0x80]
  406c69:	xor    r8d,r8d
  406c6c:	mov    rcx,r14
  406c6f:	call   0x411c70
  406c74:	mov    rcx,QWORD PTR [rsp+0x80]
  406c7c:	mov    rsi,rax
  406c7f:	movzx  edi,BYTE PTR [rcx]
  406c82:	test   dil,dil
  406c85:	je     0x406d6d
  406c8b:	call   0x416150
  406c90:	cmp    rax,0x1
  406c94:	jbe    0x406d48
  406c9a:	lea    rax,[rip+0x11ce8]        # 0x418989
  406ca1:	mov    QWORD PTR [rsp+0x80],rax
  406ca9:	mov    rcx,QWORD PTR [rsp+0x128]
  406cb1:	lea    rdx,[rip+0x11cd8]        # 0x418990
  406cb8:	call   0x408110
  406cbd:	mov    eax,0x4
  406cc2:	jmp    0x40480f
  406cc7:	mov    rax,QWORD PTR [rsp+0x128]
  406ccf:	mov    rcx,QWORD PTR [rax+0x20]
  406cd3:	test   rcx,rcx
  406cd6:	je     0x406ced
  406cd8:	call   0x416220
  406cdd:	mov    rax,QWORD PTR [rsp+0x128]
  406ce5:	mov    QWORD PTR [rax+0x20],0x0
  406ced:	test   r14,r14
  406cf0:	je     0x406d0f
  406cf2:	mov    rcx,r14
  406cf5:	call   0x4160e8
  406cfa:	mov    rsi,QWORD PTR [rsp+0x128]
  406d02:	test   rax,rax
  406d05:	mov    QWORD PTR [rsi+0x20],rax
  406d09:	je     0x404ebd
  406d0f:	mov    rax,QWORD PTR [rsp+0x128]
  406d17:	test   DWORD PTR [rax+0x34],0xfffffffd
  406d1e:	je     0x406d34
  406d20:	mov    rcx,QWORD PTR [rsp+0x128]
  406d28:	lea    rdx,[rip+0x11c21]        # 0x418950
  406d2f:	call   0x408110
  406d34:	mov    rax,QWORD PTR [rsp+0x128]
  406d3c:	mov    DWORD PTR [rax+0x34],0x2
  406d43:	jmp    0x4047b0
  406d48:	sub    edi,0x42
  406d4b:	cmp    dil,0x2b
  406d4f:	ja     0x406ca9
  406d55:	lea    rax,[rip+0x12590]        # 0x4192ec
  406d5c:	movzx  edi,dil
  406d60:	movsxd rdx,DWORD PTR [rax+rdi*4]
  406d64:	add    rax,rdx
  406d67:	jmp    rax
  406d69:	shl    rsi,0x14
  406d6d:	mov    QWORD PTR [rbp+0x318],rsi
  406d74:	mov    QWORD PTR [rbp+0x310],rsi
  406d7b:	jmp    0x4047b0
  406d80:	shl    rsi,0xa
  406d84:	jmp    0x406d6d
  406d86:	shl    rsi,0x1e
  406d8a:	jmp    0x406d6d
  406d8c:	mov    rax,QWORD PTR [rsp+0x128]
  406d94:	mov    rcx,QWORD PTR [rax+0x20]
  406d98:	test   rcx,rcx
  406d9b:	je     0x406db2
  406d9d:	call   0x416220
  406da2:	mov    rax,QWORD PTR [rsp+0x128]
  406daa:	mov    QWORD PTR [rax+0x20],0x0
  406db2:	test   r14,r14
  406db5:	je     0x406dd4
  406db7:	mov    rcx,r14
  406dba:	call   0x4160e8
  406dbf:	mov    rsi,QWORD PTR [rsp+0x128]
  406dc7:	test   rax,rax
  406dca:	mov    QWORD PTR [rsi+0x20],rax
  406dce:	je     0x404ebd
  406dd4:	mov    rax,QWORD PTR [rsp+0x128]
  406ddc:	cmp    DWORD PTR [rax+0x34],0x1
  406de0:	jbe    0x406df6
  406de2:	mov    rcx,QWORD PTR [rsp+0x128]
  406dea:	lea    rdx,[rip+0x11b27]        # 0x418918
  406df1:	call   0x408110
  406df6:	mov    rax,QWORD PTR [rsp+0x128]
  406dfe:	mov    DWORD PTR [rax+0x34],0x1
  406e05:	jmp    0x4047b0
  406e0a:	movzx  eax,BYTE PTR [rsp+0x30]
  406e0f:	mov    BYTE PTR [rbp+0x4a],al
  406e12:	jmp    0x4047b0
  406e17:	mov    rcx,QWORD PTR [rbp+0x1b0]
  406e1e:	test   rcx,rcx
  406e21:	je     0x406e33
  406e23:	call   0x416220
  406e28:	mov    QWORD PTR [rbp+0x1b0],0x0
  406e33:	test   r14,r14
  406e36:	je     0x405309
  406e3c:	mov    rcx,r14
  406e3f:	call   0x4160e8
  406e44:	test   rax,rax
  406e47:	mov    QWORD PTR [rbp+0x1b0],rax
  406e4e:	jne    0x4047b0
  406e54:	jmp    0x404ebd
  406e59:	lea    rcx,[rbp+0x90]
  406e60:	mov    rdx,r14
  406e63:	call   0x40cdf0
  406e68:	test   eax,eax
  406e6a:	je     0x4047b0
  406e70:	jmp    0x40480f
  406e75:	mov    rax,QWORD PTR [rip+0x292a4]        # 0x430120
  406e7c:	mov    rax,QWORD PTR [rax]
  406e7f:	test   BYTE PTR [rax+0x20],0x4
  406e83:	je     0x4047b0
  406e89:	movzx  eax,BYTE PTR [rsp+0x30]
  406e8e:	mov    BYTE PTR [rbp+0x394],al
  406e94:	jmp    0x4047b0
  406e99:	mov    rax,QWORD PTR [rip+0x29280]        # 0x430120
  406ea0:	mov    rax,QWORD PTR [rax]
  406ea3:	test   BYTE PTR [rax+0x21],0x40
  406ea7:	je     0x405d70
  406ead:	mov    rcx,QWORD PTR [rbp+0x120]
  406eb4:	test   rcx,rcx
  406eb7:	je     0x406ec9
  406eb9:	call   0x416220
  406ebe:	mov    QWORD PTR [rbp+0x120],0x0
  406ec9:	test   r14,r14
  406ecc:	je     0x406f9b
  406ed2:	mov    rcx,r14
  406ed5:	call   0x4160e8
  406eda:	test   rax,rax
  406edd:	mov    QWORD PTR [rbp+0x120],rax
  406ee4:	jne    0x405d58
  406eea:	jmp    0x404ebd
  406eef:	mov    rax,QWORD PTR [rip+0x2922a]        # 0x430120
  406ef6:	mov    rax,QWORD PTR [rax]
  406ef9:	test   BYTE PTR [rax+0x21],0x40
  406efd:	je     0x405d70
  406f03:	mov    rcx,QWORD PTR [rbp+0x118]
  406f0a:	test   rcx,rcx
  406f0d:	je     0x406f1f
  406f0f:	call   0x416220
  406f14:	mov    QWORD PTR [rbp+0x118],0x0
  406f1f:	test   r14,r14
  406f22:	je     0x405309
  406f28:	mov    rcx,r14
  406f2b:	call   0x4160e8
  406f30:	test   rax,rax
  406f33:	mov    QWORD PTR [rbp+0x118],rax
  406f3a:	jne    0x4047b0
  406f40:	jmp    0x404ebd
  406f45:	mov    rax,QWORD PTR [rip+0x291d4]        # 0x430120
  406f4c:	mov    rax,QWORD PTR [rax]
  406f4f:	test   BYTE PTR [rax+0x21],0x40
  406f53:	je     0x405d70
  406f59:	mov    rcx,QWORD PTR [rbp+0x110]
  406f60:	test   rcx,rcx
  406f63:	je     0x406f75
  406f65:	call   0x416220
  406f6a:	mov    QWORD PTR [rbp+0x110],0x0
  406f75:	test   r14,r14
  406f78:	je     0x405309
  406f7e:	mov    rcx,r14
  406f81:	call   0x4160e8
  406f86:	test   rax,rax
  406f89:	mov    QWORD PTR [rbp+0x110],rax
  406f90:	jne    0x4047b0
  406f96:	jmp    0x404ebd
  406f9b:	mov    rax,QWORD PTR [rbp+0x120]
  406fa2:	jmp    0x405d58
  406fa7:	mov    rcx,QWORD PTR [rbp+0x200]
  406fae:	test   rcx,rcx
  406fb1:	je     0x406fc3
  406fb3:	call   0x416220
  406fb8:	mov    QWORD PTR [rbp+0x200],0x0
  406fc3:	test   r14,r14
  406fc6:	je     0x405309
  406fcc:	mov    rcx,r14
  406fcf:	call   0x4160e8
  406fd4:	test   rax,rax
  406fd7:	mov    QWORD PTR [rbp+0x200],rax
  406fde:	jne    0x4047b0
  406fe4:	jmp    0x404ebd
  406fe9:	mov    rcx,QWORD PTR [rbp+0x250]
  406ff0:	test   rcx,rcx
  406ff3:	je     0x407005
  406ff5:	call   0x416220
  406ffa:	mov    QWORD PTR [rbp+0x250],0x0
  407005:	test   r14,r14
  407008:	je     0x406470
  40700e:	mov    rcx,r14
  407011:	call   0x4160e8
  407016:	test   rax,rax
  407019:	mov    QWORD PTR [rbp+0x250],rax
  407020:	je     0x404ebd
  407026:	mov    rcx,rax
  407029:	mov    r8d,DWORD PTR [rcx]
  40702c:	add    rcx,0x4
  407030:	lea    edx,[r8-0x1010101]
  407037:	not    r8d
  40703a:	and    edx,r8d
  40703d:	and    edx,0x80808080
  407043:	je     0x407029
  407045:	mov    r8d,edx
  407048:	shr    r8d,0x10
  40704c:	test   edx,0x8080
  407052:	cmove  edx,r8d
  407056:	lea    r8,[rcx+0x2]
  40705a:	cmove  rcx,r8
  40705e:	add    dl,dl
  407060:	sbb    rcx,0x3
  407064:	sub    rcx,rax
  407067:	cmp    rcx,0x20
  40706b:	je     0x4047b0
  407071:	jmp    0x406470
  407076:	mov    rcx,QWORD PTR [rbp+0x248]
  40707d:	test   rcx,rcx
  407080:	je     0x407092
  407082:	call   0x416220
  407087:	mov    QWORD PTR [rbp+0x248],0x0
  407092:	test   r14,r14
  407095:	je     0x405309
  40709b:	mov    rcx,r14
  40709e:	call   0x4160e8
  4070a3:	test   rax,rax
  4070a6:	mov    QWORD PTR [rbp+0x248],rax
  4070ad:	jne    0x4047b0
  4070b3:	jmp    0x404ebd
  4070b8:	mov    rcx,QWORD PTR [rbp+0x1f0]
  4070bf:	test   rcx,rcx
  4070c2:	je     0x4070d4
  4070c4:	call   0x416220
  4070c9:	mov    QWORD PTR [rbp+0x1f0],0x0
  4070d4:	test   r14,r14
  4070d7:	je     0x405309
  4070dd:	mov    rcx,r14
  4070e0:	call   0x4160e8
  4070e5:	test   rax,rax
  4070e8:	mov    QWORD PTR [rbp+0x1f0],rax
  4070ef:	jne    0x4047b0
  4070f5:	jmp    0x404ebd
  4070fa:	mov    rax,QWORD PTR [rip+0x2901f]        # 0x430120
  407101:	mov    rax,QWORD PTR [rax]
  407104:	test   BYTE PTR [rax+0x21],0x40
  407108:	je     0x405d70
  40710e:	mov    rcx,QWORD PTR [rbp+0x130]
  407115:	test   rcx,rcx
  407118:	je     0x40712a
  40711a:	call   0x416220
  40711f:	mov    QWORD PTR [rbp+0x130],0x0
  40712a:	test   r14,r14
  40712d:	je     0x405309
  407133:	mov    rcx,r14
  407136:	call   0x4160e8
  40713b:	test   rax,rax
  40713e:	mov    QWORD PTR [rbp+0x130],rax
  407145:	jne    0x4047b0
  40714b:	jmp    0x404ebd
  407150:	mov    rax,QWORD PTR [rip+0x28fc9]        # 0x430120
  407157:	mov    rax,QWORD PTR [rax]
  40715a:	test   BYTE PTR [rax+0x21],0x40
  40715e:	je     0x405d70
  407164:	mov    rcx,QWORD PTR [rbp+0x128]
  40716b:	test   rcx,rcx
  40716e:	je     0x407180
  407170:	call   0x416220
  407175:	mov    QWORD PTR [rbp+0x128],0x0
  407180:	test   r14,r14
  407183:	je     0x405309
  407189:	mov    rcx,r14
  40718c:	call   0x4160e8
  407191:	test   rax,rax
  407194:	mov    QWORD PTR [rbp+0x128],rax
  40719b:	jne    0x4047b0
  4071a1:	jmp    0x404ebd
  4071a6:	mov    BYTE PTR [rbp+0x349],0x1
  4071ad:	jmp    0x4047b0
  4071b2:	mov    rax,QWORD PTR [rip+0x28f67]        # 0x430120
  4071b9:	mov    rax,QWORD PTR [rax]
  4071bc:	test   BYTE PTR [rax+0x20],0x4
  4071c0:	je     0x4047b0
  4071c6:	mov    BYTE PTR [rbp+0x396],0x1
  4071cd:	jmp    0x4047b0
  4071d2:	mov    BYTE PTR [rbp+0x3c0],0x1
  4071d9:	jmp    0x4047b0
  4071de:	mov    BYTE PTR [rbp+0x282],0x1
  4071e5:	jmp    0x4047b0
  4071ea:	mov    rcx,QWORD PTR [rbp+0x210]
  4071f1:	test   rcx,rcx
  4071f4:	je     0x407206
  4071f6:	call   0x416220
  4071fb:	mov    QWORD PTR [rbp+0x210],0x0
  407206:	test   r14,r14
  407209:	je     0x405309
  40720f:	mov    rcx,r14
  407212:	call   0x4160e8
  407217:	test   rax,rax
  40721a:	mov    QWORD PTR [rbp+0x210],rax
  407221:	jne    0x4047b0
  407227:	jmp    0x404ebd
  40722c:	mov    rcx,QWORD PTR [rbp+0x220]
  407233:	test   rcx,rcx
  407236:	je     0x407248
  407238:	call   0x416220
  40723d:	mov    QWORD PTR [rbp+0x220],0x0
  407248:	test   r14,r14
  40724b:	je     0x405309
  407251:	mov    rcx,r14
  407254:	call   0x4160e8
  407259:	test   rax,rax
  40725c:	mov    QWORD PTR [rbp+0x220],rax
  407263:	jne    0x4047b0
  407269:	jmp    0x404ebd
  40726e:	mov    rcx,QWORD PTR [rbp+0x258]
  407275:	test   rcx,rcx
  407278:	je     0x40728a
  40727a:	call   0x416220
  40727f:	mov    QWORD PTR [rbp+0x258],0x0
  40728a:	test   r14,r14
  40728d:	je     0x4047b0
  407293:	mov    rcx,r14
  407296:	call   0x4160e8
  40729b:	test   rax,rax
  40729e:	mov    QWORD PTR [rbp+0x258],rax
  4072a5:	je     0x404ebd
  4072ab:	lea    rdx,[rip+0x11a5a]        # 0x418d0c
  4072b2:	mov    rcx,rax
  4072b5:	call   QWORD PTR [rip+0x2e36d]        # 0x435628
  4072bb:	test   eax,eax
  4072bd:	je     0x4047b0
  4072c3:	mov    eax,0x8
  4072c8:	jmp    0x40480f
  4072cd:	mov    rcx,QWORD PTR [rbp+0x238]
  4072d4:	test   rcx,rcx
  4072d7:	je     0x4072e9
  4072d9:	call   0x416220
  4072de:	mov    QWORD PTR [rbp+0x238],0x0
  4072e9:	test   r14,r14
  4072ec:	je     0x407306
  4072ee:	mov    rcx,r14
  4072f1:	call   0x4160e8
  4072f6:	test   rax,rax
  4072f9:	mov    QWORD PTR [rbp+0x238],rax
  407300:	je     0x404ebd
  407306:	mov    rcx,r14
  407309:	call   0x40cd70
  40730e:	jmp    0x4047b0
  407313:	mov    rcx,QWORD PTR [rbp+0x228]
  40731a:	test   rcx,rcx
  40731d:	je     0x40732f
  40731f:	call   0x416220
  407324:	mov    QWORD PTR [rbp+0x228],0x0
  40732f:	test   r14,r14
  407332:	je     0x405309
  407338:	mov    rcx,r14
  40733b:	call   0x4160e8
  407340:	test   rax,rax
  407343:	mov    QWORD PTR [rbp+0x228],rax
  40734a:	jne    0x4047b0
  407350:	jmp    0x404ebd
  407355:	mov    rcx,QWORD PTR [rbp+0x218]
  40735c:	test   rcx,rcx
  40735f:	je     0x407371
  407361:	call   0x416220
  407366:	mov    QWORD PTR [rbp+0x218],0x0
  407371:	test   r14,r14
  407374:	je     0x405309
  40737a:	mov    rcx,r14
  40737d:	call   0x4160e8
  407382:	test   rax,rax
  407385:	mov    QWORD PTR [rbp+0x218],rax
  40738c:	jne    0x4047b0
  407392:	jmp    0x404ebd
  407397:	mov    rcx,QWORD PTR [rbp+0x1d0]
  40739e:	test   rcx,rcx
  4073a1:	je     0x4073b3
  4073a3:	call   0x416220
  4073a8:	mov    QWORD PTR [rbp+0x1d0],0x0
  4073b3:	test   r14,r14
  4073b6:	je     0x405309
  4073bc:	mov    rcx,r14
  4073bf:	call   0x4160e8
  4073c4:	test   rax,rax
  4073c7:	mov    QWORD PTR [rbp+0x1d0],rax
  4073ce:	jne    0x4047b0
  4073d4:	jmp    0x404ebd
  4073d9:	mov    rcx,QWORD PTR [rbp+0x1e0]
  4073e0:	test   rcx,rcx
  4073e3:	je     0x4073f5
  4073e5:	call   0x416220
  4073ea:	mov    QWORD PTR [rbp+0x1e0],0x0
  4073f5:	test   r14,r14
  4073f8:	je     0x405309
  4073fe:	mov    rcx,r14
  407401:	call   0x4160e8
  407406:	test   rax,rax
  407409:	mov    QWORD PTR [rbp+0x1e0],rax
  407410:	jne    0x4047b0
  407416:	jmp    0x404ebd
  40741b:	mov    DWORD PTR [rbp+0x2bc],0x1
  407425:	jmp    0x4047b0
  40742a:	movzx  eax,BYTE PTR [rsp+0x30]
  40742f:	mov    BYTE PTR [rbp+0x281],al
  407435:	jmp    0x4047b0
  40743a:	nop    WORD PTR [rax+rax*1+0x0]
  407440:	push   r15
  407442:	push   r14
  407444:	push   r13
  407446:	push   r12
  407448:	push   rbp
  407449:	push   rdi
  40744a:	push   rsi
  40744b:	push   rbx
  40744c:	sub    rsp,0x68
  407450:	mov    r15,QWORD PTR [rcx+0x50]
  407454:	cmp    edx,0x1
  407457:	jle    0x40765d
  40745d:	lea    rax,[rsp+0x5f]
  407462:	mov    r13,r8
  407465:	mov    ebp,edx
  407467:	mov    QWORD PTR [rsp+0x38],rcx
  40746c:	mov    r14d,0x1
  407472:	mov    ebx,0x1
  407477:	mov    QWORD PTR [rsp+0x40],rax
  40747c:	lea    eax,[rdx-0x1]
  40747f:	mov    DWORD PTR [rsp+0x4c],eax
  407483:	jmp    0x4074b9
  407485:	mov    r9,QWORD PTR [rsp+0x38]
  40748a:	mov    r8,QWORD PTR [rsp+0x40]
  40748f:	lea    rcx,[rip+0x11f09]        # 0x41939f
  407496:	mov    rdx,r12
  407499:	mov    QWORD PTR [rsp+0x20],r15
  40749e:	add    ebx,0x1
  4074a1:	call   0x404450
  4074a6:	test   eax,eax
  4074a8:	mov    r11d,eax
  4074ab:	sete   dl
  4074ae:	cmp    ebp,ebx
  4074b0:	setg   al
  4074b3:	and    eax,edx
  4074b5:	test   al,al
  4074b7:	je     0x407500
  4074b9:	movsxd rax,ebx
  4074bc:	test   r14b,r14b
  4074bf:	lea    r8,[rax*8+0x0]
  4074c7:	mov    r12,QWORD PTR [r13+rax*8+0x0]
  4074cc:	je     0x407485
  4074ce:	cmp    BYTE PTR [r12],0x2d
  4074d3:	jne    0x407485
  4074d5:	lea    rsi,[rip+0x11ec0]        # 0x41939c
  4074dc:	mov    rdi,r12
  4074df:	mov    ecx,0x3
  4074e4:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4074e6:	jne    0x407572
  4074ec:	add    ebx,0x1
  4074ef:	cmp    ebp,ebx
  4074f1:	setg   al
  4074f4:	xor    r11d,r11d
  4074f7:	xor    r14d,r14d
  4074fa:	test   al,al
  4074fc:	jne    0x4074b9
  4074fe:	xchg   ax,ax
  407500:	lea    eax,[r11-0x5]
  407504:	cmp    eax,0x3
  407507:	jbe    0x40755e
  407509:	test   r11d,r11d
  40750c:	je     0x40755e
  40750e:	mov    ecx,r11d
  407511:	mov    DWORD PTR [rsp+0x40],r11d
  407516:	call   0x407940
  40751b:	test   r12,r12
  40751e:	mov    r8,rax
  407521:	mov    r11d,DWORD PTR [rsp+0x40]
  407526:	je     0x40753f
  407528:	lea    rsi,[rip+0x11e76]        # 0x4193a5
  40752f:	mov    ecx,0x2
  407534:	mov    rdi,r12
  407537:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407539:	jne    0x407665
  40753f:	mov    rax,QWORD PTR [rsp+0x38]
  407544:	lea    rdx,[rip+0x11e6b]        # 0x4193b6
  40754b:	mov    DWORD PTR [rsp+0x40],r11d
  407550:	mov    rcx,QWORD PTR [rax+0x10]
  407554:	call   0x408150
  407559:	mov    r11d,DWORD PTR [rsp+0x40]
  40755e:	mov    eax,r11d
  407561:	add    rsp,0x68
  407565:	pop    rbx
  407566:	pop    rsi
  407567:	pop    rdi
  407568:	pop    rbp
  407569:	pop    r12
  40756b:	pop    r13
  40756d:	pop    r14
  40756f:	pop    r15
  407571:	ret    
  407572:	xor    edx,edx
  407574:	cmp    DWORD PTR [rsp+0x4c],ebx
  407578:	jle    0x40757f
  40757a:	mov    rdx,QWORD PTR [r13+r8*1+0x8]
  40757f:	mov    r9,QWORD PTR [rsp+0x38]
  407584:	mov    r8,QWORD PTR [rsp+0x40]
  407589:	mov    rcx,r12
  40758c:	mov    QWORD PTR [rsp+0x20],r15
  407591:	call   0x404450
  407596:	cmp    eax,0xf
  407599:	mov    r11d,eax
  40759c:	je     0x4075d0
  40759e:	test   eax,eax
  4075a0:	jne    0x4075c0
  4075a2:	cmp    BYTE PTR [rsp+0x5f],0x0
  4075a7:	je     0x407640
  4075ad:	add    ebx,0x2
  4075b0:	cmp    ebp,ebx
  4075b2:	setg   al
  4075b5:	jmp    0x4074b5
  4075ba:	nop    WORD PTR [rax+rax*1+0x0]
  4075c0:	add    ebx,0x1
  4075c3:	xor    eax,eax
  4075c5:	jmp    0x4074b5
  4075ca:	nop    WORD PTR [rax+rax*1+0x0]
  4075d0:	mov    rax,QWORD PTR [r15+0x190]
  4075d7:	test   rax,rax
  4075da:	je     0x407698
  4075e0:	cmp    QWORD PTR [rax+0x8],0x0
  4075e5:	je     0x40764d
  4075e7:	mov    ecx,0x3e8
  4075ec:	call   0x4161d0
  4075f1:	test   rax,rax
  4075f4:	mov    QWORD PTR [r15+0x3e0],rax
  4075fb:	je     0x40768a
  407601:	mov    rcx,rax
  407604:	add    ebx,0x1
  407607:	call   0x402560
  40760c:	mov    rdi,QWORD PTR [rsp+0x38]
  407611:	mov    rdx,QWORD PTR [r15+0x3e0]
  407618:	cmp    ebp,ebx
  40761a:	mov    rax,QWORD PTR [rdi]
  40761d:	mov    QWORD PTR [rdx+0x3d0],rdi
  407624:	mov    QWORD PTR [rdx],rax
  407627:	mov    QWORD PTR [rdi+0x60],rdx
  40762b:	setg   al
  40762e:	mov    QWORD PTR [rdx+0x3d8],r15
  407635:	xor    r11d,r11d
  407638:	mov    r15,rdx
  40763b:	jmp    0x4074b5
  407640:	add    ebx,0x1
  407643:	cmp    ebp,ebx
  407645:	setg   al
  407648:	jmp    0x4074b5
  40764d:	add    ebx,0x1
  407650:	cmp    ebp,ebx
  407652:	setg   al
  407655:	xor    r11d,r11d
  407658:	jmp    0x4074b5
  40765d:	xor    r11d,r11d
  407660:	jmp    0x40755e
  407665:	mov    rax,QWORD PTR [rsp+0x38]
  40766a:	lea    rdx,[rip+0x11d36]        # 0x4193a7
  407671:	mov    r9,r8
  407674:	mov    r8,r12
  407677:	mov    rcx,QWORD PTR [rax+0x10]
  40767b:	call   0x408150
  407680:	mov    r11d,DWORD PTR [rsp+0x40]
  407685:	jmp    0x40755e
  40768a:	add    ebx,0x1
  40768d:	mov    r11d,0xe
  407693:	jmp    0x4074b5
  407698:	add    ebx,0x1
  40769b:	cmp    ebp,ebx
  40769d:	setg   al
  4076a0:	xor    r11b,r11b
  4076a3:	jmp    0x4074b5
  4076a8:	nop
  4076a9:	nop
  4076aa:	nop
  4076ab:	nop
  4076ac:	nop
  4076ad:	nop
  4076ae:	nop
  4076af:	nop
  4076b0:	push   r12
  4076b2:	push   rbp
  4076b3:	push   rdi
  4076b4:	push   rsi
  4076b5:	push   rbx
  4076b6:	sub    rsp,0x20
  4076ba:	mov    r12,QWORD PTR [rip+0x2e0df]        # 0x4357a0
  4076c1:	mov    rdi,r8
  4076c4:	mov    rbx,rcx
  4076c7:	mov    rbp,rdx
  4076ca:	call   r12
  4076cd:	lea    rdx,[rax+0x60]
  4076d1:	mov    rcx,rbx
  4076d4:	call   0x416230
  4076d9:	test   rdi,rdi
  4076dc:	je     0x407777
  4076e2:	xor    ebx,ebx
  4076e4:	jmp    0x4076f9
  4076e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4076f0:	add    rbx,0x1
  4076f4:	cmp    rdi,rbx
  4076f7:	jbe    0x407730
  4076f9:	lea    rsi,[rbp+rbx*1+0x0]
  4076fe:	call   0x4160b8
  407703:	cmp    al,0xa
  407705:	mov    BYTE PTR [rsi],al
  407707:	je     0x407754
  407709:	cmp    al,0xd
  40770b:	je     0x407754
  40770d:	cmp    al,0x8
  40770f:	jne    0x4076f0
  407711:	cmp    rbx,0x1
  407715:	sbb    rax,rax
  407718:	add    rax,0x2
  40771c:	sub    rbx,rax
  40771f:	add    rbx,0x1
  407723:	cmp    rdi,rbx
  407726:	ja     0x4076f9
  407728:	nop    DWORD PTR [rax+rax*1+0x0]
  407730:	call   r12
  407733:	lea    rdx,[rax+0x60]
  407737:	mov    ecx,0xa
  40773c:	call   0x416238
  407741:	cmp    rbx,rdi
  407744:	je     0x407760
  407746:	mov    rax,rbp
  407749:	add    rsp,0x20
  40774d:	pop    rbx
  40774e:	pop    rsi
  40774f:	pop    rdi
  407750:	pop    rbp
  407751:	pop    r12
  407753:	ret    
  407754:	mov    BYTE PTR [rsi],0x0
  407757:	jmp    0x407730
  407759:	nop    DWORD PTR [rax+0x0]
  407760:	sub    rbx,0x1
  407764:	mov    rax,rbp
  407767:	mov    BYTE PTR [rbp+rbx*1+0x0],0x0
  40776c:	add    rsp,0x20
  407770:	pop    rbx
  407771:	pop    rsi
  407772:	pop    rdi
  407773:	pop    rbp
  407774:	pop    r12
  407776:	ret    
  407777:	call   r12
  40777a:	lea    rdx,[rax+0x60]
  40777e:	mov    ecx,0xa
  407783:	mov    rbx,0xffffffffffffffff
  40778a:	call   0x416238
  40778f:	jmp    0x407764
  407791:	nop
  407792:	nop
  407793:	nop
  407794:	nop
  407795:	nop
  407796:	nop
  407797:	nop
  407798:	nop
  407799:	nop
  40779a:	nop
  40779b:	nop
  40779c:	nop
  40779d:	nop
  40779e:	nop
  40779f:	nop
  4077a0:	push   rbx
  4077a1:	sub    rsp,0x20
  4077a5:	lea    rbx,[rip+0x170dc]        # 0x41e888
  4077ac:	lea    rcx,[rip+0x13b0d]        # 0x41b2c0
  4077b3:	add    rbx,0x8
  4077b7:	call   0x4161a0
  4077bc:	mov    rcx,QWORD PTR [rbx-0x8]
  4077c0:	test   rcx,rcx
  4077c3:	jne    0x4077b3
  4077c5:	add    rsp,0x20
  4077c9:	pop    rbx
  4077ca:	ret    
  4077cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4077d0:	push   rdi
  4077d1:	push   rsi
  4077d2:	push   rbx
  4077d3:	sub    rsp,0x20
  4077d7:	call   QWORD PTR [rip+0x2de5b]        # 0x435638
  4077dd:	lea    rcx,[rip+0x13afc]        # 0x41b2e0
  4077e4:	mov    rdx,rax
  4077e7:	call   0x4161a8
  4077ec:	mov    rsi,QWORD PTR [rip+0x2892d]        # 0x430120
  4077f3:	mov    rax,QWORD PTR [rsi]
  4077f6:	cmp    QWORD PTR [rax+0x40],0x0
  4077fb:	je     0x407847
  4077fd:	lea    rcx,[rip+0x13b01]        # 0x41b305
  407804:	call   0x4161a8
  407809:	mov    rax,QWORD PTR [rsi]
  40780c:	mov    rbx,QWORD PTR [rax+0x40]
  407810:	mov    rdx,QWORD PTR [rbx]
  407813:	test   rdx,rdx
  407816:	je     0x407838
  407818:	nop    DWORD PTR [rax+rax*1+0x0]
  407820:	lea    rcx,[rip+0x13aeb]        # 0x41b312
  407827:	add    rbx,0x8
  40782b:	call   0x4161a8
  407830:	mov    rdx,QWORD PTR [rbx]
  407833:	test   rdx,rdx
  407836:	jne    0x407820
  407838:	lea    rcx,[rip+0x13ad2]        # 0x41b311
  40783f:	call   0x4161a0
  407844:	mov    rax,QWORD PTR [rsi]
  407847:	mov    eax,DWORD PTR [rax+0x20]
  40784a:	test   eax,eax
  40784c:	jne    0x407860
  40784e:	add    rsp,0x20
  407852:	pop    rbx
  407853:	pop    rsi
  407854:	pop    rdi
  407855:	ret    
  407856:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407860:	lea    rcx,[rip+0x13aaf]        # 0x41b316
  407867:	lea    rbx,[rip+0x13b9a]        # 0x41b408
  40786e:	lea    rdi,[rip+0x13cc3]        # 0x41b538
  407875:	call   0x4161a8
  40787a:	jmp    0x407889
  40787c:	nop    DWORD PTR [rax+0x0]
  407880:	add    rbx,0x10
  407884:	cmp    rbx,rdi
  407887:	je     0x4078ac
  407889:	mov    rax,QWORD PTR [rsi]
  40788c:	mov    edx,DWORD PTR [rbx]
  40788e:	test   DWORD PTR [rax+0x20],edx
  407891:	je     0x407880
  407893:	mov    rdx,QWORD PTR [rbx-0x8]
  407897:	lea    rcx,[rip+0x13a74]        # 0x41b312
  40789e:	add    rbx,0x10
  4078a2:	call   0x4161a8
  4078a7:	cmp    rbx,rdi
  4078aa:	jne    0x407889
  4078ac:	lea    rcx,[rip+0x13a5e]        # 0x41b311
  4078b3:	add    rsp,0x20
  4078b7:	pop    rbx
  4078b8:	pop    rsi
  4078b9:	pop    rdi
  4078ba:	jmp    0x4161a0
  4078bf:	nop
  4078c0:	sub    rsp,0x38
  4078c4:	mov    edx,0x40001b
  4078c9:	lea    r8,[rsp+0x28]
  4078ce:	mov    QWORD PTR [rsp+0x28],0x0
  4078d7:	call   QWORD PTR [rip+0x2dc9b]        # 0x435578
  4078dd:	lea    rcx,[rip+0x13a3d]        # 0x41b321
  4078e4:	call   0x4161a0
  4078e9:	mov    rcx,QWORD PTR [rsp+0x28]
  4078ee:	test   rcx,rcx
  4078f1:	je     0x407921
  4078f3:	mov    rdx,QWORD PTR [rcx]
  4078f6:	lea    rcx,[rip+0x13a38]        # 0x41b335
  4078fd:	call   0x4161a8
  407902:	mov    rax,QWORD PTR [rsp+0x28]
  407907:	mov    rcx,QWORD PTR [rax+0x8]
  40790b:	test   rcx,rcx
  40790e:	mov    QWORD PTR [rsp+0x28],rcx
  407913:	jne    0x4078f3
  407915:	call   QWORD PTR [rip+0x2dd05]        # 0x435620
  40791b:	nop
  40791c:	add    rsp,0x38
  407920:	ret    
  407921:	lea    rcx,[rip+0x13a13]        # 0x41b33b
  407928:	call   0x4161a0
  40792d:	mov    rcx,QWORD PTR [rsp+0x28]
  407932:	jmp    0x407915
  407934:	nop
  407935:	nop
  407936:	nop
  407937:	nop
  407938:	nop
  407939:	nop
  40793a:	nop
  40793b:	nop
  40793c:	nop
  40793d:	nop
  40793e:	nop
  40793f:	nop
  407940:	cmp    ecx,0xe
  407943:	ja     0x407a00
  407949:	lea    rax,[rip+0x176e4]        # 0x41f034
  407950:	mov    ecx,ecx
  407952:	movsxd rdx,DWORD PTR [rax+rcx*4]
  407956:	add    rax,rdx
  407959:	jmp    rax
  40795b:	nop    DWORD PTR [rax+rax*1+0x0]
  407960:	lea    rax,[rip+0x17599]        # 0x41ef00
  407967:	ret    
  407968:	nop    DWORD PTR [rax+rax*1+0x0]
  407970:	lea    rax,[rip+0x175e9]        # 0x41ef60
  407977:	ret    
  407978:	nop    DWORD PTR [rax+rax*1+0x0]
  407980:	lea    rax,[rip+0x17601]        # 0x41ef88
  407987:	ret    
  407988:	nop    DWORD PTR [rax+rax*1+0x0]
  407990:	lea    rax,[rip+0x17619]        # 0x41efb0
  407997:	ret    
  407998:	nop    DWORD PTR [rax+rax*1+0x0]
  4079a0:	lea    rax,[rip+0x17641]        # 0x41efe8
  4079a7:	ret    
  4079a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4079b0:	lea    rax,[rip+0x17660]        # 0x41f017
  4079b7:	ret    
  4079b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4079c0:	lea    rax,[rip+0x17565]        # 0x41ef2c
  4079c7:	ret    
  4079c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4079d0:	lea    rax,[rip+0x1754a]        # 0x41ef21
  4079d7:	ret    
  4079d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4079e0:	lea    rax,[rip+0x17552]        # 0x41ef39
  4079e7:	ret    
  4079e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4079f0:	lea    rax,[rip+0x17555]        # 0x41ef4c
  4079f7:	ret    
  4079f8:	nop    DWORD PTR [rax+rax*1+0x0]
  407a00:	lea    rax,[rip+0x1761e]        # 0x41f025
  407a07:	ret    
  407a08:	nop    DWORD PTR [rax+rax*1+0x0]
  407a10:	sub    rsp,0x58
  407a14:	lea    rax,[rip+0x17655]        # 0x41f070
  407a1b:	mov    QWORD PTR [rsp+0x20],rax
  407a20:	lea    rax,[rip+0x1764a]        # 0x41f071
  407a27:	mov    QWORD PTR [rsp+0x28],rax
  407a2c:	lea    rax,[rip+0x1764e]        # 0x41f081
  407a33:	mov    QWORD PTR [rsp+0x30],rax
  407a38:	lea    rax,[rip+0x17659]        # 0x41f098
  407a3f:	mov    QWORD PTR [rsp+0x38],rax
  407a44:	lea    rax,[rip+0x1766d]        # 0x41f0b8
  407a4b:	mov    QWORD PTR [rsp+0x40],rax
  407a50:	mov    eax,DWORD PTR [r8]
  407a53:	test   eax,eax
  407a55:	je     0x407a84
  407a57:	cmp    eax,edx
  407a59:	je     0x407a84
  407a5b:	mov    edx,edx
  407a5d:	mov    r9,QWORD PTR [rsp+rax*8+0x20]
  407a62:	mov    rcx,QWORD PTR [rcx+0x3d0]
  407a69:	mov    r8,QWORD PTR [rsp+rdx*8+0x20]
  407a6e:	lea    rdx,[rip+0x1765b]        # 0x41f0d0
  407a75:	call   0x408110
  407a7a:	mov    eax,0x1
  407a7f:	add    rsp,0x58
  407a83:	ret    
  407a84:	xor    eax,eax
  407a86:	mov    DWORD PTR [r8],edx
  407a89:	add    rsp,0x58
  407a8d:	ret    
  407a8e:	xchg   ax,ax
  407a90:	push   rbp
  407a91:	push   rdi
  407a92:	push   rsi
  407a93:	push   rbx
  407a94:	sub    rsp,0x58
  407a98:	lea    rax,[rip+0x1767d]        # 0x41f11c
  407a9f:	test   r8,r8
  407aa2:	mov    QWORD PTR [rsp+0x20],rax
  407aa7:	mov    QWORD PTR [rsp+0x28],rax
  407aac:	lea    rax,[rip+0x1766d]        # 0x41f120
  407ab3:	mov    QWORD PTR [rsp+0x30],rax
  407ab8:	lea    rax,[rip+0x17666]        # 0x41f125
  407abf:	mov    QWORD PTR [rsp+0x38],rax
  407ac4:	mov    QWORD PTR [rsp+0x40],rax
  407ac9:	je     0x407afb
  407acb:	mov    edx,edx
  407acd:	mov    rbx,r8
  407ad0:	mov    rsi,rcx
  407ad3:	mov    rbp,QWORD PTR [rsp+rdx*8+0x20]
  407ad8:	mov    rcx,r8
  407adb:	mov    rdi,QWORD PTR [rip+0x2db46]        # 0x435628
  407ae2:	mov    rdx,rbp
  407ae5:	call   rdi
  407ae7:	test   eax,eax
  407ae9:	jne    0x407b04
  407aeb:	lea    rdx,[rip+0x1767b]        # 0x41f16d
  407af2:	mov    rcx,rbx
  407af5:	call   rdi
  407af7:	test   eax,eax
  407af9:	jne    0x407b22
  407afb:	add    rsp,0x58
  407aff:	pop    rbx
  407b00:	pop    rsi
  407b01:	pop    rdi
  407b02:	pop    rbp
  407b03:	ret    
  407b04:	mov    rcx,QWORD PTR [rsi+0x3d0]
  407b0b:	lea    rdx,[rip+0x1761e]        # 0x41f130
  407b12:	mov    r8,rbp
  407b15:	add    rsp,0x58
  407b19:	pop    rbx
  407b1a:	pop    rsi
  407b1b:	pop    rdi
  407b1c:	pop    rbp
  407b1d:	jmp    0x4080c0
  407b22:	mov    rcx,QWORD PTR [rsi+0x3d0]
  407b29:	lea    rdx,[rip+0x17648]        # 0x41f178
  407b30:	add    rsp,0x58
  407b34:	pop    rbx
  407b35:	pop    rsi
  407b36:	pop    rdi
  407b37:	pop    rbp
  407b38:	jmp    0x408110
  407b3d:	nop
  407b3e:	nop
  407b3f:	nop
  407b40:	push   rdi
  407b41:	push   rsi
  407b42:	push   rbx
  407b43:	sub    rsp,0x820
  407b4a:	mov    r8d,0x400
  407b50:	lea    rbx,[rsp+0x20]
  407b55:	mov    rsi,rcx
  407b58:	mov    edi,edx
  407b5a:	mov    rdx,rbx
  407b5d:	call   QWORD PTR [rip+0x2db3d]        # 0x4356a0
  407b63:	sub    eax,0x1
  407b66:	cmp    eax,0x3fe
  407b6b:	ja     0x407b90
  407b6d:	test   dil,dil
  407b70:	jne    0x407ba2
  407b72:	mov    rcx,rbx
  407b75:	cmp    BYTE PTR [rcx],0x0
  407b78:	je     0x407b95
  407b7a:	call   0x4160e8
  407b7f:	add    rsp,0x820
  407b86:	pop    rbx
  407b87:	pop    rsi
  407b88:	pop    rdi
  407b89:	ret    
  407b8a:	nop    WORD PTR [rax+rax*1+0x0]
  407b90:	test   dil,dil
  407b93:	jne    0x407bf1
  407b95:	xor    eax,eax
  407b97:	add    rsp,0x820
  407b9e:	pop    rbx
  407b9f:	pop    rsi
  407ba0:	pop    rdi
  407ba1:	ret    
  407ba2:	mov    edx,0x25
  407ba7:	mov    rcx,rbx
  407baa:	call   0x416178
  407baf:	test   rax,rax
  407bb2:	je     0x407b72
  407bb4:	lea    rsi,[rsp+0x420]
  407bbc:	mov    r8d,0x400
  407bc2:	mov    rcx,rbx
  407bc5:	mov    rdx,rsi
  407bc8:	call   QWORD PTR [rip+0x2da92]        # 0x435660
  407bce:	sub    eax,0x1
  407bd1:	cmp    eax,0x3fe
  407bd6:	ja     0x407b72
  407bd8:	mov    rcx,rsi
  407bdb:	mov    edx,0x25
  407be0:	call   0x416178
  407be5:	test   rax,rax
  407be8:	cmovne rsi,rbx
  407bec:	mov    rcx,rsi
  407bef:	jmp    0x407b75
  407bf1:	mov    edx,0x25
  407bf6:	mov    rcx,rsi
  407bf9:	call   0x416178
  407bfe:	test   rax,rax
  407c01:	je     0x407b95
  407c03:	lea    rbx,[rsp+0x420]
  407c0b:	mov    r8d,0x400
  407c11:	mov    rcx,rsi
  407c14:	mov    rdx,rbx
  407c17:	call   QWORD PTR [rip+0x2da43]        # 0x435660
  407c1d:	sub    eax,0x1
  407c20:	cmp    eax,0x3fe
  407c25:	ja     0x407b95
  407c2b:	mov    edx,0x25
  407c30:	mov    rcx,rbx
  407c33:	call   0x416178
  407c38:	test   rax,rax
  407c3b:	jne    0x407b95
  407c41:	jmp    0x407b72
  407c46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407c50:	sub    rsp,0x28
  407c54:	lea    rcx,[rip+0x17595]        # 0x41f1f0
  407c5b:	xor    edx,edx
  407c5d:	call   0x407b40
  407c62:	test   rax,rax
  407c65:	je     0x407c70
  407c67:	add    rsp,0x28
  407c6b:	ret    
  407c6c:	nop    DWORD PTR [rax+0x0]
  407c70:	lea    rcx,[rip+0x17583]        # 0x41f1fa
  407c77:	xor    edx,edx
  407c79:	call   0x407b40
  407c7e:	test   rax,rax
  407c81:	jne    0x407c67
  407c83:	lea    rcx,[rip+0x17575]        # 0x41f1ff
  407c8a:	mov    edx,0x1
  407c8f:	call   0x407b40
  407c94:	test   rax,rax
  407c97:	jne    0x407c67
  407c99:	lea    rcx,[rip+0x17568]        # 0x41f208
  407ca0:	mov    edx,0x1
  407ca5:	add    rsp,0x28
  407ca9:	jmp    0x407b40
  407cae:	nop
  407caf:	nop
  407cb0:	mov    rcx,rdx
  407cb3:	jmp    0x416220
  407cb8:	nop    DWORD PTR [rax+rax*1+0x0]
  407cc0:	mov    ecx,edx
  407cc2:	mov    edx,r8d
  407cc5:	jmp    0x416270
  407cca:	nop    WORD PTR [rax+rax*1+0x0]
  407cd0:	push   rbp
  407cd1:	push   rdi
  407cd2:	push   rsi
  407cd3:	push   rbx
  407cd4:	sub    rsp,0x88
  407cdb:	xor    eax,eax
  407cdd:	mov    ecx,0xb
  407ce2:	lea    r8,[rip+0x17557]        # 0x41f240
  407ce9:	lea    rsi,[rsp+0x20]
  407cee:	mov    r9d,0x58
  407cf4:	mov    edx,0xfffffff1
  407cf9:	mov    rdi,rsi
  407cfc:	rep stos QWORD PTR es:[rdi],rax
  407cff:	lea    rax,[rip+0xffffffffffffffba]        # 0x407cc0
  407d06:	mov    rcx,rsi
  407d09:	mov    DWORD PTR [rsp+0x28],0xd348
  407d11:	mov    QWORD PTR [rsp+0x50],rax
  407d16:	lea    rax,[rip+0xffffffffffffff93]        # 0x407cb0
  407d1d:	mov    QWORD PTR [rsp+0x58],rax
  407d22:	lea    rax,[rip+0x17561]        # 0x41f28a
  407d29:	mov    QWORD PTR [rsp+0x20],rax
  407d2e:	call   0x410360
  407d33:	test   eax,eax
  407d35:	je     0x407d43
  407d37:	add    rsp,0x88
  407d3e:	pop    rbx
  407d3f:	pop    rsi
  407d40:	pop    rdi
  407d41:	pop    rbp
  407d42:	ret    
  407d43:	mov    ecx,0x10000
  407d48:	call   0x4161d0
  407d4d:	test   rax,rax
  407d50:	mov    rdi,rax
  407d53:	je     0x407dab
  407d55:	mov    rbp,QWORD PTR [rip+0x2da44]        # 0x4357a0
  407d5c:	jmp    0x407d82
  407d5e:	xchg   ax,ax
  407d60:	call   rbp
  407d62:	mov    edx,0x10000
  407d67:	sub    edx,DWORD PTR [rsp+0x38]
  407d6b:	lea    r9,[rax+0x30]
  407d6f:	mov    r8d,0x1
  407d75:	mov    rcx,rdi
  407d78:	call   0x416210
  407d7d:	cmp    ebx,0x1
  407d80:	je     0x407da3
  407d82:	mov    edx,0x2
  407d87:	mov    rcx,rsi
  407d8a:	mov    DWORD PTR [rsp+0x38],0x10000
  407d92:	mov    QWORD PTR [rsp+0x30],rdi
  407d97:	call   0x410370
  407d9c:	cmp    eax,0x1
  407d9f:	mov    ebx,eax
  407da1:	jbe    0x407d60
  407da3:	mov    rcx,rdi
  407da6:	call   0x416220
  407dab:	mov    rcx,rsi
  407dae:	call   0x410368
  407db3:	nop
  407db4:	add    rsp,0x88
  407dbb:	pop    rbx
  407dbc:	pop    rsi
  407dbd:	pop    rdi
  407dbe:	pop    rbp
  407dbf:	ret    
  407dc0:	push   rdi
  407dc1:	push   rsi
  407dc2:	push   rbx
  407dc3:	sub    rsp,0x20
  407dc7:	mov    ecx,0x3
  407dcc:	call   QWORD PTR [rip+0x2d86e]        # 0x435640
  407dd2:	mov    rdx,rax
  407dd5:	mov    QWORD PTR [rip+0x2b2ac],rax        # 0x433088
  407ddc:	mov    eax,0x2
  407de1:	test   rdx,rdx
  407de4:	je     0x407e4c
  407de6:	mov    rsi,QWORD PTR [rdx+0x40]
  407dea:	mov    DWORD PTR [rip+0x2b28c],0x0        # 0x433080
  407df4:	test   rsi,rsi
  407df7:	je     0x407e4a
  407df9:	mov    rcx,QWORD PTR [rsi]
  407dfc:	mov    rdi,QWORD PTR [rip+0x2d825]        # 0x435628
  407e03:	test   rcx,rcx
  407e06:	je     0x407e4a
  407e08:	nop    DWORD PTR [rax+rax*1+0x0]
  407e10:	lea    rdx,[rip+0x247e9]        # 0x42c600
  407e17:	lea    rbx,[rip+0x24862]        # 0x42c680
  407e1e:	jmp    0x407e2f
  407e20:	add    rbx,0x10
  407e24:	mov    rdx,QWORD PTR [rbx]
  407e27:	test   rdx,rdx
  407e2a:	je     0x407e3e
  407e2c:	mov    rcx,QWORD PTR [rsi]
  407e2f:	call   rdi
  407e31:	test   eax,eax
  407e33:	je     0x407e20
  407e35:	mov    eax,DWORD PTR [rbx+0x8]
  407e38:	or     DWORD PTR [rip+0x2b242],eax        # 0x433080
  407e3e:	add    rsi,0x8
  407e42:	mov    rcx,QWORD PTR [rsi]
  407e45:	test   rcx,rcx
  407e48:	jne    0x407e10
  407e4a:	xor    eax,eax
  407e4c:	add    rsp,0x20
  407e50:	pop    rbx
  407e51:	pop    rsi
  407e52:	pop    rdi
  407e53:	ret    
  407e54:	nop
  407e55:	nop
  407e56:	nop
  407e57:	nop
  407e58:	nop
  407e59:	nop
  407e5a:	nop
  407e5b:	nop
  407e5c:	nop
  407e5d:	nop
  407e5e:	nop
  407e5f:	nop
  407e60:	push   rdi
  407e61:	push   rsi
  407e62:	push   rbx
  407e63:	sub    rsp,0x20
  407e67:	mov    rsi,rcx
  407e6a:	mov    rcx,QWORD PTR [rcx]
  407e6d:	mov    rdi,rdx
  407e70:	test   rcx,rcx
  407e73:	je     0x407e86
  407e75:	mov    rbx,QWORD PTR [rcx+0x10]
  407e79:	call   0x416220
  407e7e:	test   rbx,rbx
  407e81:	mov    rcx,rbx
  407e84:	jne    0x407e75
  407e86:	test   rdi,rdi
  407e89:	mov    QWORD PTR [rsi],0x0
  407e90:	je     0x407e99
  407e92:	mov    QWORD PTR [rdi],0x0
  407e99:	add    rsp,0x20
  407e9d:	pop    rbx
  407e9e:	pop    rsi
  407e9f:	pop    rdi
  407ea0:	ret    
  407ea1:	nop    DWORD PTR [rax+rax*1+0x0]
  407ea6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407eb0:	push   r13
  407eb2:	push   r12
  407eb4:	push   rbp
  407eb5:	push   rdi
  407eb6:	push   rsi
  407eb7:	push   rbx
  407eb8:	sub    rsp,0x28
  407ebc:	mov    rsi,QWORD PTR [rsp+0x80]
  407ec4:	mov    r13,rcx
  407ec7:	mov    rdi,rdx
  407eca:	mov    ecx,0x1
  407ecf:	mov    edx,0x18
  407ed4:	mov    rbp,r8
  407ed7:	mov    r12,r9
  407eda:	call   0x416270
  407edf:	test   rax,rax
  407ee2:	mov    rbx,rax
  407ee5:	je     0x407fa0
  407eeb:	mov    DWORD PTR [rax],0xa
  407ef1:	mov    QWORD PTR [rax+0x8],r13
  407ef5:	mov    rax,QWORD PTR [rsi]
  407ef8:	test   rax,rax
  407efb:	je     0x407f81
  407f01:	mov    QWORD PTR [rax+0x10],rbx
  407f05:	test   rdi,rdi
  407f08:	mov    QWORD PTR [rsi],rbx
  407f0b:	je     0x407f32
  407f0d:	mov    edx,0x18
  407f12:	mov    ecx,0x1
  407f17:	call   0x416270
  407f1c:	test   rax,rax
  407f1f:	je     0x407fa0
  407f21:	mov    DWORD PTR [rax],0xe
  407f27:	mov    QWORD PTR [rax+0x8],rdi
  407f2b:	mov    QWORD PTR [rbx+0x10],rax
  407f2f:	mov    QWORD PTR [rsi],rax
  407f32:	test   rbp,rbp
  407f35:	je     0x407f71
  407f37:	mov    edx,0x18
  407f3c:	mov    ecx,0x1
  407f41:	call   0x416270
  407f46:	test   rax,rax
  407f49:	je     0x407fa0
  407f4b:	mov    rdx,QWORD PTR [rsi]
  407f4e:	mov    DWORD PTR [rax],0x10
  407f54:	mov    QWORD PTR [rax+0x8],rbp
  407f58:	test   rdx,rdx
  407f5b:	je     0x407f90
  407f5d:	mov    QWORD PTR [rdx+0x10],rax
  407f61:	mov    QWORD PTR [rsi],rax
  407f64:	add    rsp,0x28
  407f68:	pop    rbx
  407f69:	pop    rsi
  407f6a:	pop    rdi
  407f6b:	pop    rbp
  407f6c:	pop    r12
  407f6e:	pop    r13
  407f70:	ret    
  407f71:	mov    rax,QWORD PTR [rsi]
  407f74:	add    rsp,0x28
  407f78:	pop    rbx
  407f79:	pop    rsi
  407f7a:	pop    rdi
  407f7b:	pop    rbp
  407f7c:	pop    r12
  407f7e:	pop    r13
  407f80:	ret    
  407f81:	mov    QWORD PTR [r12],rbx
  407f85:	jmp    0x407f05
  407f8a:	nop    WORD PTR [rax+rax*1+0x0]
  407f90:	mov    QWORD PTR [r12],rax
  407f94:	jmp    0x407f61
  407f96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407fa0:	mov    rdx,rsi
  407fa3:	mov    rcx,r12
  407fa6:	call   0x407e60
  407fab:	xor    eax,eax
  407fad:	jmp    0x407f64
  407faf:	nop
  407fb0:	push   r15
  407fb2:	push   r14
  407fb4:	push   r13
  407fb6:	push   r12
  407fb8:	push   rbp
  407fb9:	push   rdi
  407fba:	push   rsi
  407fbb:	push   rbx
  407fbc:	sub    rsp,0x138
  407fc3:	mov    ebx,ecx
  407fc5:	mov    rcx,r8
  407fc8:	mov    r12,rdx
  407fcb:	mov    r15,r8
  407fce:	mov    rsi,r9
  407fd1:	call   0x416150
  407fd6:	test   bl,bl
  407fd8:	mov    rbp,rax
  407fdb:	je     0x407ff1
  407fdd:	add    rsp,0x138
  407fe4:	pop    rbx
  407fe5:	pop    rsi
  407fe6:	pop    rdi
  407fe7:	pop    rbp
  407fe8:	pop    r12
  407fea:	pop    r13
  407fec:	pop    r14
  407fee:	pop    r15
  407ff0:	ret    
  407ff1:	lea    rbx,[rsp+0x30]
  407ff6:	mov    r9,QWORD PTR [rsp+0x1a0]
  407ffe:	mov    r8,rsi
  408001:	mov    edx,0x100
  408006:	mov    rcx,rbx
  408009:	call   QWORD PTR [rip+0x2d601]        # 0x435610
  40800f:	movsxd rdi,eax
  408012:	test   rdi,rdi
  408015:	je     0x407fdd
  408017:	mov    r14d,0x4f
  40801d:	mov    rsi,QWORD PTR [rip+0x2d8ac]        # 0x4358d0
  408024:	sub    r14d,ebp
  408027:	movsxd rax,r14d
  40802a:	lea    r13,[rax-0x1]
  40802e:	mov    QWORD PTR [rsp+0x28],rax
  408033:	mov    rdx,QWORD PTR [r12]
  408037:	mov    rcx,r15
  40803a:	call   0x416230
  40803f:	cmp    QWORD PTR [rsp+0x28],rdi
  408044:	jae    0x4080a2
  408046:	mov    rbp,r13
  408049:	mov    r14,r13
  40804c:	jmp    0x408059
  40804e:	xchg   ax,ax
  408050:	test   r14,r14
  408053:	je     0x40806e
  408055:	sub    r14,0x1
  408059:	movzx  ecx,BYTE PTR [rbx+r14*1]
  40805e:	call   rsi
  408060:	test   eax,eax
  408062:	je     0x408050
  408064:	test   r14,r14
  408067:	cmove  r14,r13
  40806b:	mov    rbp,r14
  40806e:	lea    r14,[rbp+0x1]
  408072:	mov    r9,QWORD PTR [r12]
  408076:	mov    rcx,rbx
  408079:	mov    r8d,0x1
  40807f:	mov    rdx,r14
  408082:	add    rbx,r14
  408085:	call   0x416210
  40808a:	mov    rdx,QWORD PTR [r12]
  40808e:	mov    ecx,0xa
  408093:	call   0x416238
  408098:	sub    rdi,rbp
  40809b:	jne    0x408033
  40809d:	jmp    0x407fdd
  4080a2:	mov    rdx,QWORD PTR [r12]
  4080a6:	mov    rcx,rbx
  4080a9:	call   0x416230
  4080ae:	jmp    0x407fdd
  4080b3:	nop    DWORD PTR [rax]
  4080b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4080c0:	sub    rsp,0x48
  4080c4:	mov    QWORD PTR [rsp+0x60],r8
  4080c9:	mov    QWORD PTR [rsp+0x68],r9
  4080ce:	lea    rax,[rsp+0x60]
  4080d3:	mov    r8d,DWORD PTR [rcx+0x34]
  4080d7:	mov    QWORD PTR [rsp+0x38],rax
  4080dc:	test   r8d,r8d
  4080df:	je     0x4080fe
  4080e1:	mov    r9,rdx
  4080e4:	lea    rdx,[rcx+0x10]
  4080e8:	movzx  ecx,BYTE PTR [rcx+0xc]
  4080ec:	lea    r8,[rip+0x247ad]        # 0x42c8a0
  4080f3:	mov    QWORD PTR [rsp+0x20],rax
  4080f8:	call   0x407fb0
  4080fd:	nop
  4080fe:	add    rsp,0x48
  408102:	ret    
  408103:	nop    DWORD PTR [rax]
  408106:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408110:	sub    rsp,0x48
  408114:	mov    QWORD PTR [rsp+0x60],r8
  408119:	mov    QWORD PTR [rsp+0x68],r9
  40811e:	mov    r9,rdx
  408121:	lea    rdx,[rcx+0x10]
  408125:	movzx  ecx,BYTE PTR [rcx+0xc]
  408129:	lea    rax,[rsp+0x60]
  40812e:	lea    r8,[rip+0x24772]        # 0x42c8a7
  408135:	mov    QWORD PTR [rsp+0x20],rax
  40813a:	mov    QWORD PTR [rsp+0x38],rax
  40813f:	call   0x407fb0
  408144:	nop
  408145:	add    rsp,0x48
  408149:	ret    
  40814a:	nop    WORD PTR [rax+rax*1+0x0]
  408150:	push   rsi
  408151:	push   rbx
  408152:	sub    rsp,0x38
  408156:	test   rdx,rdx
  408159:	mov    rbx,rcx
  40815c:	mov    QWORD PTR [rsp+0x60],r8
  408161:	mov    QWORD PTR [rsp+0x68],r9
  408166:	mov    rsi,rdx
  408169:	je     0x4081a0
  40816b:	lea    rax,[rsp+0x60]
  408170:	mov    r9,rcx
  408173:	lea    rcx,[rip+0x24737]        # 0x42c8b1
  40817a:	mov    r8d,0x6
  408180:	mov    edx,0x1
  408185:	mov    QWORD PTR [rsp+0x28],rax
  40818a:	call   0x416210
  40818f:	mov    r8,QWORD PTR [rsp+0x28]
  408194:	mov    rdx,rsi
  408197:	mov    rcx,rbx
  40819a:	call   QWORD PTR [rip+0x2d468]        # 0x435608
  4081a0:	lea    rdx,[rip+0x24711]        # 0x42c8b8
  4081a7:	mov    rcx,rbx
  4081aa:	call   QWORD PTR [rip+0x2d438]        # 0x4355e8
  4081b0:	nop
  4081b1:	add    rsp,0x38
  4081b5:	pop    rbx
  4081b6:	pop    rsi
  4081b7:	ret    
  4081b8:	nop
  4081b9:	nop
  4081ba:	nop
  4081bb:	nop
  4081bc:	nop
  4081bd:	nop
  4081be:	nop
  4081bf:	nop
  4081c0:	push   r15
  4081c2:	push   r14
  4081c4:	push   r13
  4081c6:	push   r12
  4081c8:	push   rbp
  4081c9:	push   rdi
  4081ca:	push   rsi
  4081cb:	push   rbx
  4081cc:	sub    rsp,0x318
  4081d3:	movaps XMMWORD PTR [rsp+0x300],xmm6
  4081db:	lea    rdi,[rsp+0x160]
  4081e3:	mov    r14,rcx
  4081e6:	mov    r13,rdx
  4081e9:	mov    rax,QWORD PTR [rdx]
  4081ec:	mov    BYTE PTR [rsp+0x200],0x0
  4081f4:	mov    QWORD PTR [rsp+0xa8],rdi
  4081fc:	mov    QWORD PTR [rsp+0x110],0x0
  408208:	mov    QWORD PTR [rsp+0x118],0x0
  408214:	mov    QWORD PTR [rsp+0x120],0x0
  408220:	mov    QWORD PTR [rsp+0x40],rax
  408225:	movzx  eax,BYTE PTR [rcx+0xd]
  408229:	mov    BYTE PTR [rsp+0x90],al
  408230:	movzx  eax,BYTE PTR [rcx+0xe]
  408234:	mov    ecx,0x6
  408239:	mov    BYTE PTR [rsp+0x91],al
  408240:	xor    eax,eax
  408242:	rep stos QWORD PTR es:[rdi],rax
  408245:	mov    rax,QWORD PTR [rip+0x2d554]        # 0x4357a0
  40824c:	mov    QWORD PTR [rsp+0x38],rax
  408251:	call   rax
  408253:	add    rax,0x30
  408257:	mov    QWORD PTR [rsp+0x178],r13
  40825f:	mov    QWORD PTR [rsp+0x170],rax
  408267:	mov    rax,QWORD PTR [r13+0x190]
  40826e:	test   rax,rax
  408271:	je     0x408838
  408277:	cmp    QWORD PTR [rax+0x8],0x0
  40827c:	je     0x408838
  408282:	cmp    QWORD PTR [r13+0x1e0],0x0
  40828a:	je     0x40b1a5
  408290:	mov    BYTE PTR [rsp+0x93],0x0
  408298:	mov    rbx,QWORD PTR [r13+0x70]
  40829c:	test   rbx,rbx
  40829f:	je     0x40890b
  4082a5:	cmp    BYTE PTR [r13+0x27f],0x0
  4082ad:	je     0x4088e0
  4082b3:	mov    rcx,rbx
  4082b6:	call   0x4160e8
  4082bb:	mov    rcx,rbx
  4082be:	mov    rdi,rax
  4082c1:	mov    QWORD PTR [rsp+0x58],rax
  4082c6:	call   0x416220
  4082cb:	test   rdi,rdi
  4082ce:	mov    QWORD PTR [r13+0x70],0x0
  4082d6:	je     0x40b18a
  4082dc:	cmp    BYTE PTR [r13+0x17f],0x1
  4082e4:	lea    r8,[r13+0x308]
  4082eb:	mov    rcx,r13
  4082ee:	mov    r15d,0x2
  4082f4:	sbb    edx,edx
  4082f6:	add    edx,0x2
  4082f9:	call   0x407a10
  4082fe:	test   eax,eax
  408300:	jne    0x408857
  408306:	mov    rax,QWORD PTR [r13+0xa8]
  40830d:	test   rax,rax
  408310:	je     0x408368
  408312:	lea    rdi,[rip+0x2466e]        # 0x42c987
  408319:	mov    ecx,0x2
  40831e:	mov    rsi,rax
  408321:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  408323:	je     0x40b153
  408329:	lea    rdx,[rip+0x24659]        # 0x42c989
  408330:	mov    rcx,rax
  408333:	call   0x416248
  408338:	test   rax,rax
  40833b:	je     0x40b165
  408341:	mov    rdx,QWORD PTR [r13+0xa8]
  408348:	mov    BYTE PTR [rsp+0x16a],0x1
  408350:	mov    BYTE PTR [rsp+0x16b],0x1
  408358:	mov    QWORD PTR [rsp+0x170],rax
  408360:	mov    QWORD PTR [rsp+0x160],rdx
  408368:	mov    rax,QWORD PTR [r13+0x190]
  40836f:	xor    r15d,r15d
  408372:	test   rax,rax
  408375:	mov    QWORD PTR [rsp+0x50],rax
  40837a:	je     0x408857
  408380:	mov    rax,QWORD PTR [rip+0x2d261]        # 0x4355e8
  408387:	mov    QWORD PTR [rsp+0x88],0x0
  408393:	mov    QWORD PTR [rsp+0x78],rax
  408398:	mov    QWORD PTR [rsp+0x68],rax
  40839d:	mov    rax,QWORD PTR [rsp+0x50]
  4083a2:	mov    DWORD PTR [rsp+0xcc],0x1
  4083ad:	mov    QWORD PTR [rsp+0xd8],0x0
  4083b9:	mov    DWORD PTR [rsp+0x80],0x0
  4083c4:	test   BYTE PTR [rax+0x20],0x20
  4083c8:	je     0x4083f7
  4083ca:	cmp    QWORD PTR [rsp+0x88],0x0
  4083d3:	je     0x40b13f
  4083d9:	mov    rax,QWORD PTR [rsp+0x88]
  4083e1:	mov    DWORD PTR [rsp+0x80],0x1
  4083ec:	mov    rax,QWORD PTR [rax]
  4083ef:	mov    QWORD PTR [rsp+0x88],rax
  4083f7:	mov    rax,QWORD PTR [rsp+0x50]
  4083fc:	cmp    QWORD PTR [rax+0x8],0x0
  408401:	je     0x40b10e
  408407:	mov    rax,QWORD PTR [rsp+0x50]
  40840c:	mov    rcx,QWORD PTR [rax+0x10]
  408410:	test   rcx,rcx
  408413:	je     0x40b0d7
  408419:	call   0x4160e8
  40841e:	test   rax,rax
  408421:	mov    QWORD PTR [rsp+0x48],rax
  408426:	je     0x40b18a
  40842c:	mov    rax,QWORD PTR [rsp+0x50]
  408431:	mov    rax,QWORD PTR [rax+0x18]
  408435:	test   rax,rax
  408438:	mov    QWORD PTR [rsp+0x98],rax
  408440:	setne  al
  408443:	cmp    al,BYTE PTR [r13+0x27e]
  40844a:	jbe    0x408497
  40844c:	mov    eax,DWORD PTR [r14+0x8]
  408450:	xor    r9d,r9d
  408453:	test   eax,eax
  408455:	je     0x40845b
  408457:	mov    r9,QWORD PTR [r14+0x10]
  40845b:	mov    rdx,QWORD PTR [rsp+0x98]
  408463:	lea    rcx,[rsp+0xd8]
  40846b:	lea    r8,[rsp+0xcc]
  408473:	call   0x40e970
  408478:	test   eax,eax
  40847a:	mov    r15d,eax
  40847d:	jne    0x40c37e
  408483:	mov    eax,DWORD PTR [rsp+0xcc]
  40848a:	mov    ebx,0xfffffffe
  40848f:	test   eax,eax
  408491:	je     0x40add2
  408497:	cmp    QWORD PTR [rsp+0x98],0x0
  4084a0:	mov    QWORD PTR [rsp+0x368],r13
  4084a8:	mov    r13,r14
  4084ab:	mov    DWORD PTR [rsp+0x70],0x0
  4084b3:	mov    r14,QWORD PTR [rsp+0x368]
  4084bb:	sete   BYTE PTR [rsp+0x92]
  4084c3:	jmp    0x408555
  4084c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4084d0:	mov    DWORD PTR [rsp+0xd0],0x0
  4084db:	nop    DWORD PTR [rax+rax*1+0x0]
  4084e0:	mov    rcx,QWORD PTR [rsp+0xe0]
  4084e8:	call   0x416220
  4084ed:	mov    rcx,QWORD PTR [rsp+0xe8]
  4084f5:	mov    QWORD PTR [rsp+0xe0],0x0
  408501:	test   rcx,rcx
  408504:	je     0x408517
  408506:	call   0x40e8c0
  40850b:	mov    QWORD PTR [rsp+0xe8],0x0
  408517:	mov    eax,DWORD PTR [rsp+0xcc]
  40851e:	cmp    eax,0x1
  408521:	jbe    0x40af67
  408527:	lea    ebx,[r15-0x2]
  40852b:	cmp    ebx,0x2e
  40852e:	ja     0x408544
  408530:	movabs rdx,0x428002000001
  40853a:	bt     rdx,rbx
  40853e:	jb     0x40b0bf
  408544:	add    DWORD PTR [rsp+0x70],0x1
  408549:	mov    ebx,DWORD PTR [rsp+0x70]
  40854d:	cmp    eax,ebx
  40854f:	jbe    0x40adbb
  408555:	mov    r12d,DWORD PTR [rsp+0x70]
  40855a:	mov    QWORD PTR [rsp+0xe0],0x0
  408566:	mov    QWORD PTR [rsp+0xe8],0x0
  408572:	mov    DWORD PTR [rsp+0xd0],0x0
  40857d:	test   r12d,r12d
  408580:	sete   al
  408583:	jne    0x40ad80
  408589:	cmp    BYTE PTR [rsp+0x92],0x0
  408591:	je     0x40ad80
  408597:	mov    ebp,DWORD PTR [rsp+0x80]
  40859e:	test   ebp,ebp
  4085a0:	jne    0x4084d0
  4085a6:	cmp    BYTE PTR [r14+0x27e],0x0
  4085ae:	jne    0x40af91
  4085b4:	mov    edi,DWORD PTR [r13+0x8]
  4085b8:	xor    r9d,r9d
  4085bb:	test   edi,edi
  4085bd:	je     0x4085c3
  4085bf:	mov    r9,QWORD PTR [r13+0x10]
  4085c3:	mov    rax,QWORD PTR [rsp+0x50]
  4085c8:	lea    rcx,[rsp+0xe8]
  4085d0:	lea    r8,[rsp+0xd0]
  4085d8:	mov    rdx,QWORD PTR [rax+0x8]
  4085dc:	call   0x40e970
  4085e1:	test   eax,eax
  4085e3:	mov    r15d,eax
  4085e6:	jne    0x40b0e5
  4085ec:	cmp    QWORD PTR [rsp+0x48],0x0
  4085f2:	mov    eax,DWORD PTR [rsp+0xd0]
  4085f9:	je     0x408614
  4085fb:	mov    rsi,QWORD PTR [rsp+0x48]
  408600:	lea    rdi,[rip+0x24380]        # 0x42c987
  408607:	mov    ecx,0x2
  40860c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40860e:	jne    0x40ad40
  408614:	cmp    eax,0x1
  408617:	mov    DWORD PTR [rsp+0x74],0x1
  40861f:	jbe    0x40ad40
  408625:	lea    rax,[rsp+0x190]
  40862d:	mov    esi,r15d
  408630:	xor    r12d,r12d
  408633:	mov    r15,rax
  408636:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408640:	xor    eax,eax
  408642:	mov    ecx,0x6
  408647:	mov    rdi,r15
  40864a:	rep stos QWORD PTR es:[rdi],rax
  40864d:	mov    QWORD PTR [rsp+0xf8],0x0
  408659:	mov    QWORD PTR [rsp+0xf0],0x0
  408665:	mov    rax,QWORD PTR [rsp+0x38]
  40866a:	call   rax
  40866c:	mov    rdx,QWORD PTR [rsp+0xe8]
  408674:	add    rax,0x30
  408678:	mov    QWORD PTR [rsp+0x1a8],r14
  408680:	mov    QWORD PTR [rsp+0x1a0],rax
  408688:	test   rdx,rdx
  40868b:	je     0x40aa70
  408691:	lea    rcx,[rsp+0xf8]
  408699:	call   0x40f3d0
  40869e:	test   eax,eax
  4086a0:	mov    esi,eax
  4086a2:	je     0x4089c0
  4086a8:	xor    ebx,ebx
  4086aa:	xor    ebp,ebp
  4086ac:	mov    eax,DWORD PTR [r13+0x8]
  4086b0:	test   eax,eax
  4086b2:	je     0x4086e8
  4086b4:	cmp    BYTE PTR [rsp+0x200],0x0
  4086bc:	lea    r9,[rsp+0x200]
  4086c4:	je     0x40acf5
  4086ca:	mov    rcx,QWORD PTR [r13+0x10]
  4086ce:	mov    r8d,esi
  4086d1:	lea    rdx,[rip+0x25386]        # 0x42da5e
  4086d8:	mov    rax,QWORD PTR [rsp+0x68]
  4086dd:	call   rax
  4086df:	cmp    esi,0x3c
  4086e2:	je     0x40ae80
  4086e8:	cmp    BYTE PTR [rsp+0x19b],0x0
  4086f0:	je     0x408920
  4086f6:	mov    rcx,QWORD PTR [rsp+0x1a0]
  4086fe:	test   rcx,rcx
  408701:	je     0x408714
  408703:	call   0x416260
  408708:	test   eax,eax
  40870a:	je     0x408714
  40870c:	test   esi,esi
  40870e:	je     0x40abd1
  408714:	test   esi,esi
  408716:	jne    0x408790
  408718:	xor    esi,esi
  40871a:	cmp    BYTE PTR [r14+0x8],0x0
  40871f:	je     0x408790
  408721:	cmp    BYTE PTR [rsp+0x19a],0x0
  408729:	je     0x408790
  40872b:	cmp    QWORD PTR [rsp+0x190],0x0
  408734:	je     0x408790
  408736:	mov    DWORD PTR [rsp+0xd4],0xffffffff
  408741:	lea    r8,[rsp+0xd4]
  408749:	mov    edx,0x20000e
  40874e:	mov    rcx,QWORD PTR [rsp+0x40]
  408753:	call   QWORD PTR [rip+0x2ce1f]        # 0x435578
  408759:	movsxd rax,DWORD PTR [rsp+0xd4]
  408761:	test   eax,eax
  408763:	js     0x40878b
  408765:	mov    QWORD PTR [rsp+0x1c0],rax
  40876d:	mov    QWORD PTR [rsp+0x1c8],rax
  408775:	lea    rdx,[rsp+0x1c0]
  40877d:	mov    rcx,QWORD PTR [rsp+0x190]
  408785:	call   QWORD PTR [rip+0x2d0ad]        # 0x435838
  40878b:	xor    esi,esi
  40878d:	nop    DWORD PTR [rax]
  408790:	cmp    BYTE PTR [rsp+0x198],0x0
  408798:	jne    0x408980
  40879e:	xor    eax,eax
  4087a0:	mov    ecx,0x6
  4087a5:	mov    rdi,r15
  4087a8:	rep stos QWORD PTR es:[rdi],rax
  4087ab:	mov    rcx,QWORD PTR [rsp+0xf0]
  4087b3:	mov    QWORD PTR [rsp+0x110],0x0
  4087bf:	call   0x416220
  4087c4:	mov    rcx,QWORD PTR [rsp+0xf8]
  4087cc:	mov    QWORD PTR [rsp+0xf0],0x0
  4087d8:	call   0x416220
  4087dd:	test   bl,bl
  4087df:	mov    QWORD PTR [rsp+0xf8],0x0
  4087eb:	jne    0x408992
  4087f1:	mov    eax,DWORD PTR [rsp+0xd0]
  4087f8:	cmp    eax,0x1
  4087fb:	jbe    0x4089a9
  408801:	lea    edx,[rsi-0x2]
  408804:	cmp    edx,0x2e
  408807:	ja     0x408819
  408809:	movabs rcx,0x428002000001
  408813:	bt     rcx,rdx
  408817:	jb     0x408830
  408819:	add    r12d,0x1
  40881d:	cmp    eax,r12d
  408820:	ja     0x408640
  408826:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408830:	mov    r15d,esi
  408833:	jmp    0x4084e0
  408838:	mov    rcx,QWORD PTR [r14+0x10]
  40883c:	lea    rdx,[rip+0x240f8]        # 0x42c93b
  408843:	mov    r15d,0x2
  408849:	call   0x408150
  40884e:	mov    QWORD PTR [rsp+0x58],0x0
  408857:	movzx  eax,BYTE PTR [rsp+0x90]
  40885f:	mov    rcx,QWORD PTR [rsp+0x58]
  408864:	mov    BYTE PTR [r14+0xd],al
  408868:	movzx  eax,BYTE PTR [rsp+0x91]
  408870:	mov    BYTE PTR [r14+0xe],al
  408874:	call   0x416220
  408879:	mov    rcx,r13
  40887c:	call   0x40c5c0
  408881:	cmp    BYTE PTR [rsp+0x16b],0x0
  408889:	mov    QWORD PTR [rsp+0x118],0x0
  408895:	je     0x4088a9
  408897:	mov    rcx,QWORD PTR [rsp+0x170]
  40889f:	test   rcx,rcx
  4088a2:	je     0x4088a9
  4088a4:	call   0x416260
  4088a9:	cmp    BYTE PTR [rsp+0x168],0x0
  4088b1:	je     0x4088c1
  4088b3:	mov    rcx,QWORD PTR [rsp+0x160]
  4088bb:	call   0x416220
  4088c0:	nop
  4088c1:	movaps xmm6,XMMWORD PTR [rsp+0x300]
  4088c9:	mov    eax,r15d
  4088cc:	add    rsp,0x318
  4088d3:	pop    rbx
  4088d4:	pop    rsi
  4088d5:	pop    rdi
  4088d6:	pop    rbp
  4088d7:	pop    r12
  4088d9:	pop    r13
  4088db:	pop    r14
  4088dd:	pop    r15
  4088df:	ret    
  4088e0:	lea    r8,[r13+0x308]
  4088e7:	mov    edx,0x4
  4088ec:	mov    rcx,r13
  4088ef:	mov    r15d,0x2
  4088f5:	call   0x407a10
  4088fa:	test   eax,eax
  4088fc:	mov    QWORD PTR [rsp+0x58],0x0
  408905:	jne    0x408857
  40890b:	mov    QWORD PTR [rsp+0x58],0x0
  408914:	jmp    0x408306
  408919:	nop    DWORD PTR [rax+0x0]
  408920:	cmp    BYTE PTR [rsp+0x19a],0x0
  408928:	jne    0x408714
  40892e:	mov    rcx,QWORD PTR [rsp+0x1a0]
  408936:	test   rcx,rcx
  408939:	je     0x408714
  40893f:	call   0x416258
  408944:	test   eax,eax
  408946:	je     0x408714
  40894c:	test   esi,esi
  40894e:	jne    0x408714
  408954:	mov    rcx,QWORD PTR [r13+0x10]
  408958:	mov    r8d,0x17
  40895e:	lea    rdx,[rip+0x253c2]        # 0x42dd27
  408965:	call   QWORD PTR [rip+0x2cc7d]        # 0x4355e8
  40896b:	cmp    BYTE PTR [rsp+0x198],0x0
  408973:	mov    esi,0x17
  408978:	je     0x40879e
  40897e:	xchg   ax,ax
  408980:	mov    rcx,QWORD PTR [rsp+0x190]
  408988:	call   0x416220
  40898d:	jmp    0x40879e
  408992:	mov    ecx,ebp
  408994:	call   0x4160a8
  408999:	mov    eax,DWORD PTR [rsp+0xd0]
  4089a0:	cmp    eax,0x1
  4089a3:	ja     0x408801
  4089a9:	test   esi,esi
  4089ab:	je     0x408819
  4089b1:	mov    r15d,esi
  4089b4:	jmp    0x4084e0
  4089b9:	nop    DWORD PTR [rax+0x0]
  4089c0:	cmp    QWORD PTR [rsp+0xf8],0x0
  4089c9:	je     0x408830
  4089cf:	cmp    QWORD PTR [rsp+0x48],0x0
  4089d5:	je     0x4089f2
  4089d7:	mov    rcx,QWORD PTR [rsp+0x48]
  4089dc:	call   0x4160e8
  4089e1:	test   rax,rax
  4089e4:	mov    QWORD PTR [rsp+0xf0],rax
  4089ec:	je     0x40aaa0
  4089f2:	mov    rax,QWORD PTR [rsp+0x50]
  4089f7:	test   BYTE PTR [rax+0x20],0x4
  4089fb:	jne    0x408a22
  4089fd:	mov    rdi,QWORD PTR [rsp+0xf0]
  408a05:	test   rdi,rdi
  408a08:	je     0x408aea
  408a0e:	lea    rsi,[rip+0x23f72]        # 0x42c987
  408a15:	mov    ecx,0x2
  408a1a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  408a1c:	je     0x408aea
  408a22:	cmp    BYTE PTR [r14+0x397],0x0
  408a2a:	jne    0x408aea
  408a30:	mov    rdi,QWORD PTR [rsp+0xf0]
  408a38:	test   rdi,rdi
  408a3b:	je     0x40aef9
  408a41:	mov    r8,QWORD PTR [rsp+0xe8]
  408a49:	mov    rcx,rdi
  408a4c:	test   r8,r8
  408a4f:	je     0x408a7b
  408a51:	lea    rcx,[rsp+0xf0]
  408a59:	mov    rdx,rdi
  408a5c:	call   0x40f5e0
  408a61:	mov    rcx,rdi
  408a64:	mov    esi,eax
  408a66:	call   0x416220
  408a6b:	test   esi,esi
  408a6d:	jne    0x40af75
  408a73:	mov    rcx,QWORD PTR [rsp+0xf0]
  408a7b:	cmp    BYTE PTR [r14+0x283],0x0
  408a83:	jne    0x40aab0
  408a89:	cmp    BYTE PTR [r14+0x49],0x0
  408a8e:	jne    0x40aadf
  408a94:	mov    rax,QWORD PTR [r14+0x68]
  408a98:	test   rax,rax
  408a9b:	je     0x40ab12
  408aa1:	lea    rdx,[rip+0x23f2b]        # 0x42c9d3
  408aa8:	call   0x416248
  408aad:	test   rax,rax
  408ab0:	je     0x40b059
  408ab6:	mov    QWORD PTR [rsp+0x1a0],rax
  408abe:	mov    rax,QWORD PTR [r14+0x68]
  408ac2:	mov    rcx,QWORD PTR [rsp+0xf0]
  408aca:	mov    BYTE PTR [rsp+0x19b],0x1
  408ad2:	mov    QWORD PTR [rsp+0x1b8],rax
  408ada:	mov    QWORD PTR [rsp+0x190],rcx
  408ae2:	mov    BYTE PTR [rsp+0x19a],0x1
  408aea:	mov    rdx,QWORD PTR [rsp+0xe0]
  408af2:	test   rdx,rdx
  408af5:	je     0x40ab23
  408afb:	mov    rcx,rdx
  408afe:	call   0x40c6a0
  408b03:	test   al,al
  408b05:	je     0x40ac20
  408b0b:	mov    rdx,QWORD PTR [rsp+0xe0]
  408b13:	test   rdx,rdx
  408b16:	je     0x40ab23
  408b1c:	mov    rcx,rdx
  408b1f:	call   0x40c6a0
  408b24:	test   al,al
  408b26:	jne    0x40ab35
  408b2c:	mov    rdx,QWORD PTR [rsp+0xe0]
  408b34:	mov    QWORD PTR [rsp+0x60],0xffffffffffffffff
  408b3d:	xor    ebx,ebx
  408b3f:	xor    ebp,ebp
  408b41:	test   rdx,rdx
  408b44:	je     0x408b55
  408b46:	cmp    BYTE PTR [r14+0x49],0x0
  408b4b:	je     0x408b55
  408b4d:	mov    QWORD PTR [r14+0x68],0xffffffffffffffff
  408b55:	mov    rcx,QWORD PTR [rsp+0xf8]
  408b5d:	call   0x40c640
  408b62:	test   al,al
  408b64:	je     0x40aa50
  408b6a:	mov    rcx,QWORD PTR [rsp+0x1a0]
  408b72:	test   rcx,rcx
  408b75:	je     0x40aa50
  408b7b:	call   0x4160b0
  408b80:	mov    ecx,eax
  408b82:	call   0x4160c0
  408b87:	test   eax,eax
  408b89:	je     0x40aa50
  408b8f:	mov    BYTE PTR [r13+0xe],0x1
  408b94:	mov    BYTE PTR [r13+0xd],0x1
  408b99:	nop    DWORD PTR [rax+0x0]
  408ba0:	mov    r9d,DWORD PTR [rsp+0xd0]
  408ba8:	cmp    r9d,0x1
  408bac:	jbe    0x408bff
  408bae:	cmp    BYTE PTR [r13+0xc],0x0
  408bb3:	jne    0x408bff
  408bb5:	mov    rax,QWORD PTR [rsp+0xf0]
  408bbd:	lea    rdx,[rip+0x23d3c]        # 0x42c900
  408bc4:	mov    rcx,QWORD PTR [r13+0x10]
  408bc8:	lea    r8d,[r12+0x1]
  408bcd:	test   rax,rax
  408bd0:	cmove  rax,rdx
  408bd4:	lea    rdx,[rip+0x23ebf]        # 0x42ca9a
  408bdb:	mov    QWORD PTR [rsp+0x28],rax
  408be0:	mov    rax,QWORD PTR [rsp+0xf8]
  408be8:	mov    QWORD PTR [rsp+0x20],rax
  408bed:	call   QWORD PTR [rip+0x2c9f5]        # 0x4355e8
  408bf3:	mov    esi,DWORD PTR [rsp+0x74]
  408bf7:	test   esi,esi
  408bf9:	jne    0x40ad55
  408bff:	mov    rdi,QWORD PTR [rsp+0x58]
  408c04:	test   rdi,rdi
  408c07:	je     0x408c90
  408c0d:	mov    rsi,QWORD PTR [rsp+0xf8]
  408c15:	lea    rdx,[rip+0x23ea6]        # 0x42cac2
  408c1c:	mov    rcx,rsi
  408c1f:	call   0x416128
  408c24:	lea    rcx,[rax+0x3]
  408c28:	test   rax,rax
  408c2b:	mov    edx,0x2f
  408c30:	cmove  rcx,rsi
  408c34:	call   0x416130
  408c39:	test   rax,rax
  408c3c:	je     0x40ad05
  408c42:	mov    edx,0x3f
  408c47:	mov    rcx,rax
  408c4a:	call   0x416178
  408c4f:	cmp    rax,0x1
  408c53:	mov    rdx,rsi
  408c56:	mov    r9,rdi
  408c59:	sbb    eax,eax
  408c5b:	lea    rcx,[rip+0x250f2]        # 0x42dd54
  408c62:	and    eax,0x19
  408c65:	lea    r8d,[rax+0x26]
  408c69:	call   QWORD PTR [rip+0x2c971]        # 0x4355e0
  408c6f:	mov    rsi,rax
  408c72:	test   rsi,rsi
  408c75:	je     0x40ac10
  408c7b:	mov    rcx,QWORD PTR [rsp+0xf8]
  408c83:	call   0x416220
  408c88:	mov    QWORD PTR [rsp+0xf8],rsi
  408c90:	cmp    QWORD PTR [r13+0x10],0x0
  408c95:	je     0x40af53
  408c9b:	mov    rsi,QWORD PTR [rsp+0xf0]
  408ca3:	test   rsi,rsi
  408ca6:	je     0x408cb8
  408ca8:	lea    rdi,[rip+0x23cd8]        # 0x42c987
  408caf:	mov    ecx,0x2
  408cb4:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  408cb6:	jne    0x408cc6
  408cb8:	cmp    BYTE PTR [r14+0x17b],0x0
  408cc0:	je     0x40ad22
  408cc6:	cmp    BYTE PTR [r14+0x348],0x0
  408cce:	je     0x40acc0
  408cd4:	cmp    BYTE PTR [r14+0x349],0x0
  408cdc:	je     0x408d0e
  408cde:	mov    rcx,QWORD PTR [rsp+0x40]
  408ce3:	lea    r9,[rip+0x23e02]        # 0x42caec
  408cea:	xor    edx,edx
  408cec:	mov    DWORD PTR [rsp+0x28],0x1
  408cf4:	mov    DWORD PTR [rsp+0x20],0xf4
  408cfc:	mov    r8,r13
  408cff:	call   0x40e5e0
  408d04:	test   eax,eax
  408d06:	mov    esi,eax
  408d08:	jne    0x4086ac
  408d0e:	mov    rcx,QWORD PTR [rsp+0x40]
  408d13:	lea    r9,[rip+0x23dc0]        # 0x42cada
  408d1a:	xor    edx,edx
  408d1c:	mov    QWORD PTR [rsp+0x28],r15
  408d21:	mov    DWORD PTR [rsp+0x20],0x2711
  408d29:	mov    r8,r13
  408d2c:	call   0x40e5e0
  408d31:	test   eax,eax
  408d33:	mov    esi,eax
  408d35:	jne    0x4086ac
  408d3b:	mov    rcx,QWORD PTR [rsp+0x40]
  408d40:	lea    r9,[rip+0x23dba]        # 0x42cb01
  408d47:	xor    edx,edx
  408d49:	mov    QWORD PTR [rsp+0x28],r15
  408d4e:	mov    DWORD PTR [rsp+0x20],0x27d3
  408d56:	mov    r8,r13
  408d59:	call   0x40e5e0
  408d5e:	test   eax,eax
  408d60:	mov    esi,eax
  408d62:	jne    0x4086ac
  408d68:	cmp    BYTE PTR [r14+0x397],0x0
  408d70:	je     0x40afbe
  408d76:	lea    rdi,[rsp+0x100]
  408d7e:	mov    rcx,QWORD PTR [rsp+0x40]
  408d83:	lea    r9,[rip+0x23d8e]        # 0x42cb18
  408d8a:	xor    edx,edx
  408d8c:	mov    DWORD PTR [rsp+0x20],0x2719
  408d94:	mov    r8,r13
  408d97:	mov    QWORD PTR [rsp+0x28],rdi
  408d9c:	mov    DWORD PTR [rsp+0x100],ebp
  408da3:	mov    QWORD PTR [rsp+0x108],r14
  408dab:	call   0x40e5e0
  408db0:	test   eax,eax
  408db2:	mov    esi,eax
  408db4:	jne    0x4086ac
  408dba:	mov    rax,QWORD PTR [rip+0x274ff]        # 0x4302c0
  408dc1:	mov    rcx,QWORD PTR [rsp+0x40]
  408dc6:	lea    r9,[rip+0x23d72]        # 0x42cb3f
  408dcd:	xor    edx,edx
  408dcf:	mov    DWORD PTR [rsp+0x20],0x4e2c
  408dd7:	mov    r8,r13
  408dda:	mov    QWORD PTR [rsp+0x28],rax
  408ddf:	call   0x40e5e0
  408de4:	test   eax,eax
  408de6:	mov    esi,eax
  408de8:	jne    0x4086ac
  408dee:	mov    rcx,QWORD PTR [rsp+0x40]
  408df3:	lea    r9,[rip+0x23d5a]        # 0x42cb54
  408dfa:	xor    edx,edx
  408dfc:	mov    QWORD PTR [rsp+0x28],rdi
  408e01:	mov    DWORD PTR [rsp+0x20],0x27b8
  408e09:	mov    r8,r13
  408e0c:	call   0x40e5e0
  408e11:	test   eax,eax
  408e13:	mov    esi,eax
  408e15:	jne    0x4086ac
  408e1b:	mov    rax,QWORD PTR [rip+0x274ae]        # 0x4302d0
  408e22:	mov    rcx,QWORD PTR [rsp+0x40]
  408e27:	lea    r9,[rip+0x23d37]        # 0x42cb65
  408e2e:	xor    edx,edx
  408e30:	mov    DWORD PTR [rsp+0x20],0x4ec7
  408e38:	mov    r8,r13
  408e3b:	mov    QWORD PTR [rsp+0x28],rax
  408e40:	call   0x40e5e0
  408e45:	test   eax,eax
  408e47:	mov    esi,eax
  408e49:	jne    0x4086ac
  408e4f:	mov    rax,QWORD PTR [r14+0x318]
  408e56:	test   rax,rax
  408e59:	jne    0x40c34d
  408e5f:	cmp    QWORD PTR [rsp+0x60],0xffffffffffffffff
  408e65:	je     0x408e99
  408e67:	mov    rax,QWORD PTR [rsp+0x60]
  408e6c:	mov    rcx,QWORD PTR [rsp+0x40]
  408e71:	lea    r9,[rip+0x23d21]        # 0x42cb99
  408e78:	xor    edx,edx
  408e7a:	mov    DWORD PTR [rsp+0x20],0x75a3
  408e82:	mov    r8,r13
  408e85:	mov    QWORD PTR [rsp+0x28],rax
  408e8a:	call   0x40e5e0
  408e8f:	test   eax,eax
  408e91:	mov    esi,eax
  408e93:	jne    0x4086ac
  408e99:	mov    rax,QWORD PTR [rsp+0xf8]
  408ea1:	mov    rcx,QWORD PTR [rsp+0x40]
  408ea6:	lea    r9,[rip+0x23ce0]        # 0x42cb8d
  408ead:	mov    DWORD PTR [rsp+0x20],0x2712
  408eb5:	mov    r8,r13
  408eb8:	mov    edx,0x1
  408ebd:	mov    QWORD PTR [rsp+0x28],rax
  408ec2:	call   0x40e5e0
  408ec7:	test   eax,eax
  408ec9:	mov    esi,eax
  408ecb:	jne    0x4086ac
  408ed1:	movzx  eax,BYTE PTR [r13+0xd]
  408ed6:	mov    rcx,QWORD PTR [rsp+0x40]
  408edb:	lea    r9,[rip+0x23cd0]        # 0x42cbb2
  408ee2:	xor    edx,edx
  408ee4:	mov    DWORD PTR [rsp+0x20],0x2b
  408eec:	mov    r8,r13
  408eef:	mov    DWORD PTR [rsp+0x28],eax
  408ef3:	call   0x40e5e0
  408ef8:	test   eax,eax
  408efa:	mov    esi,eax
  408efc:	jne    0x4086ac
  408f02:	cmp    BYTE PTR [r14+0x17f],0x0
  408f0a:	jne    0x40c2a1
  408f10:	cmp    BYTE PTR [r14+0x397],0x0
  408f18:	jne    0x408f4e
  408f1a:	movzx  eax,BYTE PTR [r14+0x17e]
  408f22:	mov    DWORD PTR [rsp+0x28],eax
  408f26:	mov    rcx,QWORD PTR [rsp+0x40]
  408f2b:	lea    r9,[rip+0x23ca2]        # 0x42cbd4
  408f32:	xor    edx,edx
  408f34:	mov    DWORD PTR [rsp+0x20],0x2a
  408f3c:	mov    r8,r13
  408f3f:	call   0x40e5e0
  408f44:	test   eax,eax
  408f46:	mov    esi,eax
  408f48:	jne    0x4086ac
  408f4e:	mov    rax,QWORD PTR [r14+0x3a8]
  408f55:	test   rax,rax
  408f58:	je     0x408f8a
  408f5a:	mov    rcx,QWORD PTR [rsp+0x40]
  408f5f:	lea    r9,[rip+0x23c8b]        # 0x42cbf1
  408f66:	mov    QWORD PTR [rsp+0x28],rax
  408f6b:	mov    DWORD PTR [rsp+0x20],0x27ec
  408f73:	mov    r8,r13
  408f76:	mov    edx,0x1
  408f7b:	call   0x40e5e0
  408f80:	test   eax,eax
  408f82:	mov    esi,eax
  408f84:	jne    0x4086ac
  408f8a:	mov    rax,QWORD PTR [r14+0x148]
  408f91:	mov    rcx,QWORD PTR [rsp+0x40]
  408f96:	lea    r9,[rip+0x23c46]        # 0x42cbe3
  408f9d:	mov    DWORD PTR [rsp+0x20],0x2714
  408fa5:	mov    r8,r13
  408fa8:	mov    edx,0x1
  408fad:	mov    QWORD PTR [rsp+0x28],rax
  408fb2:	call   0x40e5e0
  408fb7:	test   eax,eax
  408fb9:	mov    esi,eax
  408fbb:	jne    0x4086ac
  408fc1:	cmp    QWORD PTR [r14+0x148],0x0
  408fc9:	je     0x409006
  408fcb:	mov    eax,DWORD PTR [r14+0x150]
  408fd2:	mov    rcx,QWORD PTR [rsp+0x40]
  408fd7:	lea    r8,[rip+0x23c3f]        # 0x42cc1d
  408fde:	mov    r9d,0x65
  408fe4:	mov    rdx,r13
  408fe7:	mov    DWORD PTR [rsp+0x28],eax
  408feb:	mov    rax,QWORD PTR [rip+0x2722e]        # 0x430220
  408ff2:	mov    QWORD PTR [rsp+0x20],rax
  408ff7:	call   0x40ddd0
  408ffc:	test   eax,eax
  408ffe:	mov    esi,eax
  409000:	jne    0x4086ac
  409006:	mov    rax,QWORD PTR [r14+0x140]
  40900d:	mov    rcx,QWORD PTR [rsp+0x40]
  409012:	lea    r9,[rip+0x23bef]        # 0x42cc08
  409019:	mov    DWORD PTR [rsp+0x20],0x2716
  409021:	mov    r8,r13
  409024:	mov    edx,0x1
  409029:	mov    QWORD PTR [rsp+0x28],rax
  40902e:	call   0x40e5e0
  409033:	test   eax,eax
  409035:	mov    esi,eax
  409037:	jne    0x4086ac
  40903d:	movzx  eax,BYTE PTR [r14+0x179]
  409045:	mov    rcx,QWORD PTR [rsp+0x40]
  40904a:	lea    r9,[rip+0x23bde]        # 0x42cc2f
  409051:	xor    edx,edx
  409053:	mov    DWORD PTR [rsp+0x20],0x3d
  40905b:	mov    r8,r13
  40905e:	mov    DWORD PTR [rsp+0x28],eax
  409062:	call   0x40e5e0
  409067:	test   eax,eax
  409069:	mov    esi,eax
  40906b:	jne    0x4086ac
  409071:	mov    rax,QWORD PTR [r14+0x328]
  409078:	test   rax,rax
  40907b:	je     0x4090ad
  40907d:	mov    rcx,QWORD PTR [rsp+0x40]
  409082:	lea    r9,[rip+0x23bbe]        # 0x42cc47
  409089:	mov    QWORD PTR [rsp+0x28],rax
  40908e:	mov    DWORD PTR [rsp+0x20],0x2816
  409096:	mov    r8,r13
  409099:	mov    edx,0x1
  40909e:	call   0x40e5e0
  4090a3:	test   eax,eax
  4090a5:	mov    esi,eax
  4090a7:	jne    0x4086ac
  4090ad:	cmp    BYTE PTR [r14+0x28a],0x0
  4090b5:	jne    0x40c297
  4090bb:	cmp    BYTE PTR [r14+0x286],0x0
  4090c3:	jne    0x40c28d
  4090c9:	cmp    BYTE PTR [r14+0x287],0x0
  4090d1:	jne    0x40c283
  4090d7:	cmp    BYTE PTR [r14+0x288],0x0
  4090df:	jne    0x40c279
  4090e5:	cmp    BYTE PTR [r14+0x289],0x0
  4090ed:	jne    0x40c23c
  4090f3:	mov    rax,QWORD PTR [r14+0x158]
  4090fa:	mov    rcx,QWORD PTR [rsp+0x40]
  4090ff:	lea    r9,[rip+0x23b65]        # 0x42cc6b
  409106:	mov    DWORD PTR [rsp+0x20],0x27c1
  40910e:	mov    r8,r13
  409111:	mov    edx,0x1
  409116:	mov    QWORD PTR [rsp+0x28],rax
  40911b:	call   0x40e5e0
  409120:	test   eax,eax
  409122:	mov    esi,eax
  409124:	jne    0x4086ac
  40912a:	movzx  eax,BYTE PTR [r14+0x17d]
  409132:	mov    rcx,QWORD PTR [rsp+0x40]
  409137:	lea    r9,[rip+0x23b3d]        # 0x42cc7b
  40913e:	xor    edx,edx
  409140:	mov    DWORD PTR [rsp+0x20],0x2d
  409148:	mov    r8,r13
  40914b:	mov    DWORD PTR [rsp+0x28],eax
  40914f:	call   0x40e5e0
  409154:	test   eax,eax
  409156:	mov    esi,eax
  409158:	jne    0x4086ac
  40915e:	xor    eax,eax
  409160:	cmp    QWORD PTR [rsp+0xe0],0x0
  409169:	mov    rcx,QWORD PTR [rsp+0x40]
  40916e:	lea    r9,[rip+0x23b1a]        # 0x42cc8f
  409175:	mov    DWORD PTR [rsp+0x20],0x2e
  40917d:	mov    r8,r13
  409180:	setne  al
  409183:	xor    edx,edx
  409185:	mov    DWORD PTR [rsp+0x28],eax
  409189:	call   0x40e5e0
  40918e:	test   eax,eax
  409190:	mov    esi,eax
  409192:	jne    0x4086ac
  409198:	movzx  eax,BYTE PTR [r14+0x180]
  4091a0:	mov    rcx,QWORD PTR [rsp+0x40]
  4091a5:	lea    r9,[rip+0x23af2]        # 0x42cc9e
  4091ac:	xor    edx,edx
  4091ae:	mov    DWORD PTR [rsp+0x20],0x30
  4091b6:	mov    r8,r13
  4091b9:	mov    DWORD PTR [rsp+0x28],eax
  4091bd:	call   0x40e5e0
  4091c2:	test   eax,eax
  4091c4:	mov    esi,eax
  4091c6:	jne    0x4086ac
  4091cc:	movzx  eax,BYTE PTR [r14+0x17a]
  4091d4:	mov    rcx,QWORD PTR [rsp+0x40]
  4091d9:	lea    r9,[rip+0x23ad2]        # 0x42ccb2
  4091e0:	xor    edx,edx
  4091e2:	mov    DWORD PTR [rsp+0x20],0x32
  4091ea:	mov    r8,r13
  4091ed:	mov    DWORD PTR [rsp+0x28],eax
  4091f1:	call   0x40e5e0
  4091f6:	test   eax,eax
  4091f8:	mov    esi,eax
  4091fa:	jne    0x4086ac
  409200:	cmp    BYTE PTR [r14+0x183],0x0
  409208:	jne    0x40c22f
  40920e:	cmp    BYTE PTR [r14+0x184],0x0
  409216:	jne    0x409226
  409218:	cmp    QWORD PTR [r14+0x188],0x0
  409220:	je     0x40c2de
  409226:	mov    DWORD PTR [rsp+0x28],0x2
  40922e:	mov    rax,QWORD PTR [rip+0x2702b]        # 0x430260
  409235:	mov    rcx,QWORD PTR [rsp+0x40]
  40923a:	lea    r8,[rip+0x23a80]        # 0x42ccc1
  409241:	mov    r9d,0x33
  409247:	mov    rdx,r13
  40924a:	mov    QWORD PTR [rsp+0x20],rax
  40924f:	call   0x40ddd0
  409254:	test   eax,eax
  409256:	mov    esi,eax
  409258:	jne    0x4086ac
  40925e:	mov    rax,QWORD PTR [r14+0x188]
  409265:	test   rax,rax
  409268:	je     0x40929a
  40926a:	mov    rcx,QWORD PTR [rsp+0x40]
  40926f:	lea    r9,[rip+0x23a6e]        # 0x42cce4
  409276:	mov    QWORD PTR [rsp+0x28],rax
  40927b:	mov    DWORD PTR [rsp+0x20],0x2786
  409283:	mov    r8,r13
  409286:	mov    edx,0x1
  40928b:	call   0x40e5e0
  409290:	test   eax,eax
  409292:	mov    esi,eax
  409294:	jne    0x4086ac
  40929a:	movzx  eax,BYTE PTR [r14+0x17b]
  4092a2:	mov    rcx,QWORD PTR [rsp+0x40]
  4092a7:	lea    r9,[rip+0x23a21]        # 0x42cccf
  4092ae:	xor    edx,edx
  4092b0:	mov    DWORD PTR [rsp+0x20],0x35
  4092b8:	mov    r8,r13
  4092bb:	mov    DWORD PTR [rsp+0x28],eax
  4092bf:	call   0x40e5e0
  4092c4:	test   eax,eax
  4092c6:	mov    esi,eax
  4092c8:	jne    0x4086ac
  4092ce:	mov    rax,QWORD PTR [r14+0x108]
  4092d5:	test   rax,rax
  4092d8:	je     0x40930a
  4092da:	mov    rcx,QWORD PTR [rsp+0x40]
  4092df:	lea    r9,[rip+0x23a21]        # 0x42cd07
  4092e6:	mov    QWORD PTR [rsp+0x28],rax
  4092eb:	mov    DWORD PTR [rsp+0x20],0x27f0
  4092f3:	mov    r8,r13
  4092f6:	mov    edx,0x1
  4092fb:	call   0x40e5e0
  409300:	test   eax,eax
  409302:	mov    esi,eax
  409304:	jne    0x4086ac
  40930a:	mov    rax,QWORD PTR [r14+0x100]
  409311:	mov    rcx,QWORD PTR [rsp+0x40]
  409316:	lea    r9,[rip+0x239da]        # 0x42ccf7
  40931d:	mov    DWORD PTR [rsp+0x20],0x2715
  409325:	mov    r8,r13
  409328:	mov    edx,0x1
  40932d:	mov    QWORD PTR [rsp+0x28],rax
  409332:	call   0x40e5e0
  409337:	test   eax,eax
  409339:	mov    esi,eax
  40933b:	jne    0x4086ac
  409341:	mov    rax,QWORD PTR [r14+0xd0]
  409348:	mov    rcx,QWORD PTR [rsp+0x40]
  40934d:	lea    r9,[rip+0x239c9]        # 0x42cd1d
  409354:	mov    DWORD PTR [rsp+0x20],0x2717
  40935c:	mov    r8,r13
  40935f:	mov    edx,0x1
  409364:	mov    QWORD PTR [rsp+0x28],rax
  409369:	call   0x40e5e0
  40936e:	test   eax,eax
  409370:	mov    esi,eax
  409372:	jne    0x4086ac
  409378:	lea    rax,[rsp+0x200]
  409380:	mov    rcx,QWORD PTR [rsp+0x40]
  409385:	lea    r9,[rip+0x2399f]        # 0x42cd2b
  40938c:	xor    edx,edx
  40938e:	mov    DWORD PTR [rsp+0x20],0x271a
  409396:	mov    r8,r13
  409399:	mov    QWORD PTR [rsp+0x28],rax
  40939e:	call   0x40e5e0
  4093a3:	test   eax,eax
  4093a5:	mov    esi,eax
  4093a7:	jne    0x4086ac
  4093ad:	movsd  xmm0,QWORD PTR [r14+0x88]
  4093b6:	mov    rcx,QWORD PTR [rsp+0x40]
  4093bb:	lea    r9,[rip+0x2397d]        # 0x42cd3f
  4093c2:	movsd  xmm6,QWORD PTR [rip+0x249fe]        # 0x42ddc8
  4093ca:	xor    edx,edx
  4093cc:	mov    DWORD PTR [rsp+0x20],0x9b
  4093d4:	mov    r8,r13
  4093d7:	mulsd  xmm0,xmm6
  4093db:	cvttsd2si eax,xmm0
  4093df:	mov    DWORD PTR [rsp+0x28],eax
  4093e3:	call   0x40e5e0
  4093e8:	test   eax,eax
  4093ea:	mov    esi,eax
  4093ec:	jne    0x4086ac
  4093f2:	mov    rdi,QWORD PTR [rip+0x26d17]        # 0x430110
  4093f9:	test   BYTE PTR [rdi],0x1
  4093fc:	je     0x4096e4
  409402:	movzx  eax,BYTE PTR [r14+0x181]
  40940a:	mov    rcx,QWORD PTR [rsp+0x40]
  40940f:	lea    r9,[rip+0x2394c]        # 0x42cd62
  409416:	xor    edx,edx
  409418:	mov    DWORD PTR [rsp+0x20],0x34
  409420:	mov    r8,r13
  409423:	mov    DWORD PTR [rsp+0x28],eax
  409427:	call   0x40e5e0
  40942c:	test   eax,eax
  40942e:	mov    esi,eax
  409430:	jne    0x4086ac
  409436:	movzx  eax,BYTE PTR [r14+0x182]
  40943e:	mov    rcx,QWORD PTR [rsp+0x40]
  409443:	lea    r9,[rip+0x2392f]        # 0x42cd79
  40944a:	xor    edx,edx
  40944c:	mov    DWORD PTR [rsp+0x20],0x69
  409454:	mov    r8,r13
  409457:	mov    DWORD PTR [rsp+0x28],eax
  40945b:	call   0x40e5e0
  409460:	test   eax,eax
  409462:	mov    esi,eax
  409464:	jne    0x4086ac
  40946a:	mov    eax,DWORD PTR [r14+0x308]
  409471:	cmp    eax,0x3
  409474:	je     0x40c1fa
  40947a:	cmp    eax,0x4
  40947d:	jne    0x4094e4
  40947f:	mov    rax,QWORD PTR [r14+0x70]
  409483:	mov    rcx,QWORD PTR [rsp+0x40]
  409488:	lea    r9,[rip+0x23904]        # 0x42cd93
  40948f:	mov    DWORD PTR [rsp+0x20],0x271f
  409497:	mov    r8,r13
  40949a:	mov    edx,0x1
  40949f:	mov    QWORD PTR [rsp+0x28],rax
  4094a4:	call   0x40e5e0
  4094a9:	test   eax,eax
  4094ab:	mov    esi,eax
  4094ad:	jne    0x4086ac
  4094b3:	mov    rax,QWORD PTR [r14+0x78]
  4094b7:	mov    rcx,QWORD PTR [rsp+0x40]
  4094bc:	lea    r9,[rip+0x238e3]        # 0x42cda6
  4094c3:	xor    edx,edx
  4094c5:	mov    DWORD PTR [rsp+0x20],0x75a8
  4094cd:	mov    r8,r13
  4094d0:	mov    QWORD PTR [rsp+0x28],rax
  4094d5:	call   0x40e5e0
  4094da:	test   eax,eax
  4094dc:	mov    esi,eax
  4094de:	jne    0x4086ac
  4094e4:	mov    rax,QWORD PTR [r14+0x80]
  4094eb:	mov    rcx,QWORD PTR [rsp+0x40]
  4094f0:	lea    r9,[rip+0x238dc]        # 0x42cdd3
  4094f7:	mov    DWORD PTR [rsp+0x20],0x2720
  4094ff:	mov    r8,r13
  409502:	mov    edx,0x1
  409507:	mov    QWORD PTR [rsp+0x28],rax
  40950c:	call   0x40e5e0
  409511:	test   eax,eax
  409513:	mov    esi,eax
  409515:	jne    0x4086ac
  40951b:	movzx  eax,BYTE PTR [r14+0x17c]
  409523:	mov    rcx,QWORD PTR [rsp+0x40]
  409528:	lea    r9,[rip+0x238b4]        # 0x42cde3
  40952f:	xor    edx,edx
  409531:	mov    DWORD PTR [rsp+0x20],0x3a
  409539:	mov    r8,r13
  40953c:	mov    DWORD PTR [rsp+0x28],eax
  409540:	call   0x40e5e0
  409545:	test   eax,eax
  409547:	mov    esi,eax
  409549:	jne    0x4086ac
  40954f:	mov    rax,QWORD PTR [r14+0x20]
  409553:	mov    rcx,QWORD PTR [rsp+0x40]
  409558:	lea    r9,[rip+0x23898]        # 0x42cdf7
  40955f:	mov    DWORD PTR [rsp+0x20],0x2722
  409567:	mov    r8,r13
  40956a:	mov    edx,0x1
  40956f:	mov    QWORD PTR [rsp+0x28],rax
  409574:	call   0x40e5e0
  409579:	test   eax,eax
  40957b:	mov    esi,eax
  40957d:	jne    0x4086ac
  409583:	mov    rax,QWORD PTR [r14+0x2d0]
  40958a:	mov    rcx,QWORD PTR [rsp+0x40]
  40958f:	lea    r8,[rip+0x23873]        # 0x42ce09
  409596:	mov    r9d,0x2727
  40959c:	mov    rdx,r13
  40959f:	mov    QWORD PTR [rsp+0x20],rax
  4095a4:	call   0x40e470
  4095a9:	test   eax,eax
  4095ab:	mov    esi,eax
  4095ad:	jne    0x4086ac
  4095b3:	mov    rax,QWORD PTR [r14+0x2d8]
  4095ba:	test   rax,rax
  4095bd:	je     0x409618
  4095bf:	mov    rcx,QWORD PTR [rsp+0x40]
  4095c4:	lea    r8,[rip+0x23863]        # 0x42ce2e
  4095cb:	mov    QWORD PTR [rsp+0x20],rax
  4095d0:	mov    r9d,0x27f4
  4095d6:	mov    rdx,r13
  4095d9:	call   0x40e470
  4095de:	test   eax,eax
  4095e0:	mov    esi,eax
  4095e2:	jne    0x4086ac
  4095e8:	mov    rcx,QWORD PTR [rsp+0x40]
  4095ed:	lea    r9,[rip+0x2384e]        # 0x42ce42
  4095f4:	xor    edx,edx
  4095f6:	mov    DWORD PTR [rsp+0x28],0x1
  4095fe:	mov    DWORD PTR [rsp+0x20],0xe5
  409606:	mov    r8,r13
  409609:	call   0x40e5e0
  40960e:	test   eax,eax
  409610:	mov    esi,eax
  409612:	jne    0x4086ac
  409618:	mov    eax,DWORD PTR [r14+0x98]
  40961f:	mov    rcx,QWORD PTR [rsp+0x40]
  409624:	lea    r9,[rip+0x237f1]        # 0x42ce1c
  40962b:	xor    edx,edx
  40962d:	mov    DWORD PTR [rsp+0x20],0x44
  409635:	mov    r8,r13
  409638:	mov    DWORD PTR [rsp+0x28],eax
  40963c:	call   0x40e5e0
  409641:	test   eax,eax
  409643:	mov    esi,eax
  409645:	jne    0x4086ac
  40964b:	mov    eax,DWORD PTR [r14+0x278]
  409652:	test   eax,eax
  409654:	jne    0x40c1f4
  40965a:	mov    rax,QWORD PTR [rip+0x26abf]        # 0x430120
  409661:	mov    rax,QWORD PTR [rax]
  409664:	test   BYTE PTR [rax+0x22],0x1
  409668:	jne    0x40c1b7
  40966e:	mov    eax,DWORD PTR [r14+0x44]
  409672:	test   eax,eax
  409674:	jne    0x40c17e
  40967a:	movzx  eax,BYTE PTR [r14+0x37c]
  409682:	mov    rcx,QWORD PTR [rsp+0x40]
  409687:	lea    r9,[rip+0x237ec]        # 0x42ce7a
  40968e:	mov    r8,r13
  409691:	mov    edx,eax
  409693:	or     edx,0x2
  409696:	cmp    BYTE PTR [r14+0x37d],0x0
  40969e:	cmovne eax,edx
  4096a1:	mov    edx,eax
  4096a3:	or     edx,0x4
  4096a6:	cmp    BYTE PTR [r14+0x37e],0x0
  4096ae:	mov    DWORD PTR [rsp+0x20],0xa1
  4096b6:	cmovne eax,edx
  4096b9:	xor    edx,edx
  4096bb:	mov    DWORD PTR [rsp+0x28],eax
  4096bf:	call   0x40e5e0
  4096c4:	test   eax,eax
  4096c6:	mov    esi,eax
  4096c8:	jne    0x4086ac
  4096ce:	cmp    BYTE PTR [r14+0x41],0x0
  4096d3:	jne    0x40c107
  4096d9:	cmp    BYTE PTR [r14+0x42],0x0
  4096de:	jne    0x40c0d2
  4096e4:	mov    rax,QWORD PTR [r14+0xb0]
  4096eb:	mov    rcx,QWORD PTR [rsp+0x40]
  4096f0:	lea    r9,[rip+0x2365b]        # 0x42cd52
  4096f7:	mov    DWORD PTR [rsp+0x20],0x2721
  4096ff:	mov    r8,r13
  409702:	mov    edx,0x1
  409707:	mov    QWORD PTR [rsp+0x28],rax
  40970c:	call   0x40e5e0
  409711:	test   eax,eax
  409713:	mov    esi,eax
  409715:	jne    0x4086ac
  40971b:	mov    eax,DWORD PTR [r14+0xd8]
  409722:	mov    rcx,QWORD PTR [rsp+0x40]
  409727:	lea    r9,[rip+0x23791]        # 0x42cebf
  40972e:	xor    edx,edx
  409730:	mov    DWORD PTR [rsp+0x20],0x13
  409738:	mov    r8,r13
  40973b:	mov    DWORD PTR [rsp+0x28],eax
  40973f:	call   0x40e5e0
  409744:	test   eax,eax
  409746:	mov    esi,eax
  409748:	jne    0x4086ac
  40974e:	mov    eax,DWORD PTR [r14+0xdc]
  409755:	mov    rcx,QWORD PTR [rsp+0x40]
  40975a:	lea    r9,[rip+0x23776]        # 0x42ced7
  409761:	xor    edx,edx
  409763:	mov    DWORD PTR [rsp+0x20],0x14
  40976b:	mov    r8,r13
  40976e:	mov    DWORD PTR [rsp+0x28],eax
  409772:	call   0x40e5e0
  409777:	test   eax,eax
  409779:	mov    esi,eax
  40977b:	jne    0x4086ac
  409781:	mov    rax,QWORD PTR [r14+0x310]
  409788:	mov    rcx,QWORD PTR [rsp+0x40]
  40978d:	lea    r9,[rip+0x2375a]        # 0x42ceee
  409794:	xor    edx,edx
  409796:	mov    DWORD PTR [rsp+0x20],0x75c1
  40979e:	mov    r8,r13
  4097a1:	mov    QWORD PTR [rsp+0x28],rax
  4097a6:	call   0x40e5e0
  4097ab:	test   eax,eax
  4097ad:	mov    esi,eax
  4097af:	jne    0x4086ac
  4097b5:	mov    rax,QWORD PTR [r14+0x318]
  4097bc:	mov    rcx,QWORD PTR [rsp+0x40]
  4097c1:	lea    r9,[rip+0x23743]        # 0x42cf0b
  4097c8:	xor    edx,edx
  4097ca:	mov    DWORD PTR [rsp+0x20],0x75c2
  4097d2:	mov    r8,r13
  4097d5:	mov    QWORD PTR [rsp+0x28],rax
  4097da:	call   0x40e5e0
  4097df:	test   eax,eax
  4097e1:	mov    esi,eax
  4097e3:	jne    0x4086ac
  4097e9:	cmp    BYTE PTR [r14+0x48],0x0
  4097ee:	je     0x40c0c4
  4097f4:	mov    rax,QWORD PTR [r14+0x68]
  4097f8:	mov    QWORD PTR [rsp+0x28],rax
  4097fd:	mov    rcx,QWORD PTR [rsp+0x40]
  409802:	lea    r9,[rip+0x2371f]        # 0x42cf28
  409809:	xor    edx,edx
  40980b:	mov    DWORD PTR [rsp+0x20],0x75a4
  409813:	mov    r8,r13
  409816:	call   0x40e5e0
  40981b:	test   eax,eax
  40981d:	mov    esi,eax
  40981f:	jne    0x4086ac
  409825:	mov    rax,QWORD PTR [r14+0x238]
  40982c:	mov    rcx,QWORD PTR [rsp+0x40]
  409831:	lea    r9,[rip+0x2370a]        # 0x42cf42
  409838:	mov    DWORD PTR [rsp+0x20],0x272a
  409840:	mov    r8,r13
  409843:	mov    edx,0x1
  409848:	mov    QWORD PTR [rsp+0x28],rax
  40984d:	call   0x40e5e0
  409852:	test   eax,eax
  409854:	mov    esi,eax
  409856:	jne    0x4086ac
  40985c:	mov    rax,QWORD PTR [r14+0x240]
  409863:	mov    rcx,QWORD PTR [rsp+0x40]
  409868:	lea    r9,[rip+0x236e5]        # 0x42cf54
  40986f:	mov    DWORD PTR [rsp+0x20],0x2812
  409877:	mov    r8,r13
  40987a:	mov    edx,0x1
  40987f:	mov    QWORD PTR [rsp+0x28],rax
  409884:	call   0x40e5e0
  409889:	test   eax,eax
  40988b:	mov    esi,eax
  40988d:	jne    0x4086ac
  409893:	test   BYTE PTR [rdi],0x30
  409896:	jne    0x40c01a
  40989c:	mov    rax,QWORD PTR [r14+0x1e0]
  4098a3:	test   rax,rax
  4098a6:	je     0x4098d8
  4098a8:	mov    rcx,QWORD PTR [rsp+0x40]
  4098ad:	lea    r9,[rip+0x23714]        # 0x42cfc8
  4098b4:	mov    QWORD PTR [rsp+0x28],rax
  4098b9:	mov    DWORD PTR [rsp+0x20],0x2751
  4098c1:	mov    r8,r13
  4098c4:	mov    edx,0x1
  4098c9:	call   0x40e5e0
  4098ce:	test   eax,eax
  4098d0:	mov    esi,eax
  4098d2:	jne    0x4086ac
  4098d8:	mov    rax,QWORD PTR [r14+0x1e8]
  4098df:	test   rax,rax
  4098e2:	je     0x409914
  4098e4:	mov    rcx,QWORD PTR [rsp+0x40]
  4098e9:	lea    r9,[rip+0x236e7]        # 0x42cfd7
  4098f0:	mov    QWORD PTR [rsp+0x28],rax
  4098f5:	mov    DWORD PTR [rsp+0x20],0x2806
  4098fd:	mov    r8,r13
  409900:	mov    edx,0x1
  409905:	call   0x40e5e0
  40990a:	test   eax,eax
  40990c:	mov    esi,eax
  40990e:	jne    0x4086ac
  409914:	mov    rax,QWORD PTR [r14+0x1f0]
  40991b:	test   rax,rax
  40991e:	je     0x40c005
  409924:	mov    rcx,QWORD PTR [rsp+0x40]
  409929:	lea    r9,[rip+0x236bc]        # 0x42cfec
  409930:	mov    QWORD PTR [rsp+0x28],rax
  409935:	mov    DWORD PTR [rsp+0x20],0x2771
  40993d:	mov    r8,r13
  409940:	mov    edx,0x1
  409945:	call   0x40e5e0
  40994a:	cmp    eax,0x4
  40994d:	mov    esi,eax
  40994f:	je     0x40bfd3
  409955:	test   eax,eax
  409957:	jne    0x4086ac
  40995d:	mov    rax,QWORD PTR [r14+0x1f8]
  409964:	test   rax,rax
  409967:	je     0x40c143
  40996d:	mov    rcx,QWORD PTR [rsp+0x40]
  409972:	lea    r9,[rip+0x236ae]        # 0x42d027
  409979:	mov    QWORD PTR [rsp+0x28],rax
  40997e:	mov    DWORD PTR [rsp+0x20],0x2807
  409986:	mov    r8,r13
  409989:	mov    edx,0x1
  40998e:	call   0x40e5e0
  409993:	test   eax,eax
  409995:	mov    esi,eax
  409997:	jne    0x4086ac
  40999d:	mov    rax,QWORD PTR [r14+0x200]
  4099a4:	test   rax,rax
  4099a7:	je     0x40bfbe
  4099ad:	mov    rcx,QWORD PTR [rsp+0x40]
  4099b2:	lea    r9,[rip+0x23683]        # 0x42d03c
  4099b9:	mov    QWORD PTR [rsp+0x28],rax
  4099be:	mov    DWORD PTR [rsp+0x20],0x27b9
  4099c6:	mov    r8,r13
  4099c9:	mov    edx,0x1
  4099ce:	call   0x40e5e0
  4099d3:	test   eax,eax
  4099d5:	mov    esi,eax
  4099d7:	jne    0x4086ac
  4099dd:	mov    rax,QWORD PTR [r14+0x208]
  4099e4:	test   rax,rax
  4099e7:	je     0x40bf1f
  4099ed:	mov    rcx,QWORD PTR [rsp+0x40]
  4099f2:	lea    r9,[rip+0x23653]        # 0x42d04c
  4099f9:	mov    QWORD PTR [rsp+0x28],rax
  4099fe:	mov    DWORD PTR [rsp+0x20],0x2814
  409a06:	mov    r8,r13
  409a09:	mov    edx,0x1
  409a0e:	call   0x40e5e0
  409a13:	test   eax,eax
  409a15:	mov    esi,eax
  409a17:	jne    0x4086ac
  409a1d:	mov    rax,QWORD PTR [r14+0x210]
  409a24:	test   rax,rax
  409a27:	je     0x409a59
  409a29:	mov    rcx,QWORD PTR [rsp+0x40]
  409a2e:	lea    r9,[rip+0x2362d]        # 0x42d062
  409a35:	mov    QWORD PTR [rsp+0x28],rax
  409a3a:	mov    DWORD PTR [rsp+0x20],0x27f6
  409a42:	mov    r8,r13
  409a45:	mov    edx,0x1
  409a4a:	call   0x40e5e0
  409a4f:	test   eax,eax
  409a51:	mov    esi,eax
  409a53:	jne    0x4086ac
  409a59:	mov    rax,QWORD PTR [rip+0x266c0]        # 0x430120
  409a60:	mov    rax,QWORD PTR [rax]
  409a63:	test   BYTE PTR [rax+0x20],0x4
  409a67:	jne    0x40bb5b
  409a6d:	cmp    BYTE PTR [r14+0x3c1],0x0
  409a75:	jne    0x40bb26
  409a7b:	test   BYTE PTR [rdi],0x30
  409a7e:	je     0x409a8e
  409a80:	cmp    BYTE PTR [r14+0x280],0x0
  409a88:	je     0x40bf34
  409a8e:	cmp    BYTE PTR [r14+0x17f],0x0
  409a96:	jne    0x40baf1
  409a9c:	cmp    BYTE PTR [r14+0x8],0x0
  409aa1:	jne    0x40baf1
  409aa7:	movzx  eax,BYTE PTR [r14+0x260]
  409aaf:	mov    rcx,QWORD PTR [rsp+0x40]
  409ab4:	lea    r9,[rip+0x23768]        # 0x42d223
  409abb:	xor    edx,edx
  409abd:	mov    DWORD PTR [rsp+0x20],0x1b
  409ac5:	mov    r8,r13
  409ac8:	mov    DWORD PTR [rsp+0x28],eax
  409acc:	call   0x40e5e0
  409ad1:	test   eax,eax
  409ad3:	mov    esi,eax
  409ad5:	jne    0x4086ac
  409adb:	mov    rax,QWORD PTR [r14+0x2a0]
  409ae2:	mov    rcx,QWORD PTR [rsp+0x40]
  409ae7:	lea    r8,[rip+0x23753]        # 0x42d241
  409aee:	mov    r9d,0x272c
  409af4:	mov    rdx,r13
  409af7:	mov    QWORD PTR [rsp+0x20],rax
  409afc:	call   0x40e470
  409b01:	test   eax,eax
  409b03:	mov    esi,eax
  409b05:	jne    0x4086ac
  409b0b:	mov    rax,QWORD PTR [r14+0x2a8]
  409b12:	mov    rcx,QWORD PTR [rsp+0x40]
  409b17:	lea    r8,[rip+0x23731]        # 0x42d24f
  409b1e:	mov    r9d,0x2737
  409b24:	mov    rdx,r13
  409b27:	mov    QWORD PTR [rsp+0x20],rax
  409b2c:	call   0x40e470
  409b31:	test   eax,eax
  409b33:	mov    esi,eax
  409b35:	jne    0x4086ac
  409b3b:	mov    rax,QWORD PTR [r14+0x2b0]
  409b42:	mov    rcx,QWORD PTR [rsp+0x40]
  409b47:	lea    r8,[rip+0x23713]        # 0x42d261
  409b4e:	mov    r9d,0x276d
  409b54:	mov    rdx,r13
  409b57:	mov    QWORD PTR [rsp+0x20],rax
  409b5c:	call   0x40e470
  409b61:	test   eax,eax
  409b63:	mov    esi,eax
  409b65:	jne    0x4086ac
  409b6b:	mov    rax,QWORD PTR [r14+0x28]
  409b6f:	test   rax,rax
  409b72:	je     0x409ba4
  409b74:	mov    rcx,QWORD PTR [rsp+0x40]
  409b79:	lea    r9,[rip+0x236f2]        # 0x42d272
  409b80:	mov    QWORD PTR [rsp+0x28],rax
  409b85:	mov    DWORD PTR [rsp+0x20],0x2726
  409b8d:	mov    r8,r13
  409b90:	mov    edx,0x1
  409b95:	call   0x40e5e0
  409b9a:	test   eax,eax
  409b9c:	mov    esi,eax
  409b9e:	jne    0x4086ac
  409ba4:	mov    rax,QWORD PTR [r14+0x38]
  409ba8:	test   rax,rax
  409bab:	je     0x409bdd
  409bad:	mov    rcx,QWORD PTR [rsp+0x40]
  409bb2:	lea    r9,[rip+0x236c8]        # 0x42d281
  409bb9:	mov    QWORD PTR [rsp+0x28],rax
  409bbe:	mov    DWORD PTR [rsp+0x20],0x272f
  409bc6:	mov    r8,r13
  409bc9:	mov    edx,0x1
  409bce:	call   0x40e5e0
  409bd3:	test   eax,eax
  409bd5:	mov    esi,eax
  409bd7:	jne    0x4086ac
  409bdd:	mov    rax,QWORD PTR [r14+0x30]
  409be1:	test   rax,rax
  409be4:	je     0x409c16
  409be6:	mov    rcx,QWORD PTR [rsp+0x40]
  409beb:	lea    r9,[rip+0x236b8]        # 0x42d2aa
  409bf2:	mov    QWORD PTR [rsp+0x28],rax
  409bf7:	mov    DWORD PTR [rsp+0x20],0x2762
  409bff:	mov    r8,r13
  409c02:	mov    edx,0x1
  409c07:	call   0x40e5e0
  409c0c:	test   eax,eax
  409c0e:	mov    esi,eax
  409c10:	jne    0x4086ac
  409c16:	movzx  eax,BYTE PTR [r14+0x40]
  409c1b:	mov    rcx,QWORD PTR [rsp+0x40]
  409c20:	lea    r9,[rip+0x2366d]        # 0x42d294
  409c27:	xor    edx,edx
  409c29:	mov    DWORD PTR [rsp+0x20],0x60
  409c31:	mov    r8,r13
  409c34:	mov    DWORD PTR [rsp+0x28],eax
  409c38:	call   0x40e5e0
  409c3d:	test   eax,eax
  409c3f:	mov    esi,eax
  409c41:	jne    0x4086ac
  409c47:	mov    eax,DWORD PTR [r14+0x2c4]
  409c4e:	mov    rcx,QWORD PTR [rsp+0x40]
  409c53:	lea    r8,[rip+0x23662]        # 0x42d2bc
  409c5a:	mov    r9d,0x21
  409c60:	mov    rdx,r13
  409c63:	mov    DWORD PTR [rsp+0x28],eax
  409c67:	mov    rax,QWORD PTR [rip+0x26612]        # 0x430280
  409c6e:	mov    QWORD PTR [rsp+0x20],rax
  409c73:	call   0x40ddd0
  409c78:	test   eax,eax
  409c7a:	mov    esi,eax
  409c7c:	jne    0x4086ac
  409c82:	mov    rax,QWORD PTR [r14+0x2c8]
  409c89:	mov    rcx,QWORD PTR [rsp+0x40]
  409c8e:	lea    r9,[rip+0x2363d]        # 0x42d2d2
  409c95:	xor    edx,edx
  409c97:	mov    DWORD PTR [rsp+0x20],0x22
  409c9f:	mov    r8,r13
  409ca2:	mov    DWORD PTR [rsp+0x28],eax
  409ca6:	call   0x40e5e0
  409cab:	test   eax,eax
  409cad:	mov    esi,eax
  409caf:	jne    0x4086ac
  409cb5:	mov    rax,QWORD PTR [r14+0x268]
  409cbc:	mov    rcx,QWORD PTR [rsp+0x40]
  409cc1:	lea    r9,[rip+0x2361c]        # 0x42d2e4
  409cc8:	mov    DWORD PTR [rsp+0x20],0x2734
  409cd0:	mov    r8,r13
  409cd3:	mov    edx,0x1
  409cd8:	mov    QWORD PTR [rsp+0x28],rax
  409cdd:	call   0x40e5e0
  409ce2:	test   eax,eax
  409ce4:	mov    esi,eax
  409ce6:	jne    0x4086ac
  409cec:	mov    edx,DWORD PTR [r14+0x308]
  409cf3:	mov    r8,QWORD PTR [r14+0x268]
  409cfa:	mov    rcx,r14
  409cfd:	call   0x407a90
  409d02:	mov    rax,QWORD PTR [r13+0x10]
  409d06:	mov    rcx,QWORD PTR [rsp+0x40]
  409d0b:	lea    r9,[rip+0x235e8]        # 0x42d2fa
  409d12:	xor    edx,edx
  409d14:	mov    DWORD PTR [rsp+0x20],0x2735
  409d1c:	mov    r8,r13
  409d1f:	mov    QWORD PTR [rsp+0x28],rax
  409d24:	call   0x40e5e0
  409d29:	test   eax,eax
  409d2b:	mov    esi,eax
  409d2d:	jne    0x4086ac
  409d33:	mov    rax,QWORD PTR [r14+0xb8]
  409d3a:	mov    rcx,QWORD PTR [rsp+0x40]
  409d3f:	lea    r9,[rip+0x235c3]        # 0x42d309
  409d46:	mov    DWORD PTR [rsp+0x20],0x274e
  409d4e:	mov    r8,r13
  409d51:	mov    edx,0x1
  409d56:	mov    QWORD PTR [rsp+0x28],rax
  409d5b:	call   0x40e5e0
  409d60:	test   eax,eax
  409d62:	mov    esi,eax
  409d64:	jne    0x4086ac
  409d6a:	mov    rax,QWORD PTR [r14+0x270]
  409d71:	mov    rcx,QWORD PTR [rsp+0x40]
  409d76:	lea    r9,[rip+0x2359e]        # 0x42d31b
  409d7d:	mov    DWORD PTR [rsp+0x20],0x274f
  409d85:	mov    r8,r13
  409d88:	mov    edx,0x1
  409d8d:	mov    QWORD PTR [rsp+0x28],rax
  409d92:	call   0x40e5e0
  409d97:	test   eax,eax
  409d99:	mov    esi,eax
  409d9b:	jne    0x4086ac
  409da1:	lea    rdi,[rsp+0x130]
  409da9:	mov    rdx,r14
  409dac:	mov    rcx,rdi
  409daf:	call   0x4021e0
  409db4:	cmp    DWORD PTR [r13+0x3c],0x1
  409db9:	je     0x40ba75
  409dbf:	mov    rax,QWORD PTR [r14+0xe0]
  409dc6:	test   rax,rax
  409dc9:	je     0x409dfb
  409dcb:	mov    rcx,QWORD PTR [rsp+0x40]
  409dd0:	lea    r9,[rip+0x23583]        # 0x42d35a
  409dd7:	mov    QWORD PTR [rsp+0x28],rax
  409ddc:	mov    DWORD PTR [rsp+0x20],0x27e3
  409de4:	mov    r8,r13
  409de7:	mov    edx,0x1
  409dec:	call   0x40e5e0
  409df1:	test   eax,eax
  409df3:	mov    esi,eax
  409df5:	jne    0x4086ac
  409dfb:	mov    rax,QWORD PTR [r14+0xe8]
  409e02:	test   rax,rax
  409e05:	je     0x409e37
  409e07:	mov    rcx,QWORD PTR [rsp+0x40]
  409e0c:	lea    r9,[rip+0x2355b]        # 0x42d36e
  409e13:	mov    QWORD PTR [rsp+0x28],rax
  409e18:	mov    DWORD PTR [rsp+0x20],0x27ed
  409e20:	mov    r8,r13
  409e23:	mov    edx,0x1
  409e28:	call   0x40e5e0
  409e2d:	test   eax,eax
  409e2f:	mov    esi,eax
  409e31:	jne    0x4086ac
  409e37:	mov    rax,QWORD PTR [r14+0xf0]
  409e3e:	test   rax,rax
  409e41:	je     0x409e73
  409e43:	mov    rcx,QWORD PTR [rsp+0x40]
  409e48:	lea    r9,[rip+0x23535]        # 0x42d384
  409e4f:	mov    QWORD PTR [rsp+0x28],rax
  409e54:	mov    DWORD PTR [rsp+0x20],0x27ee
  409e5c:	mov    r8,r13
  409e5f:	mov    edx,0x1
  409e64:	call   0x40e5e0
  409e69:	test   eax,eax
  409e6b:	mov    esi,eax
  409e6d:	jne    0x4086ac
  409e73:	mov    rax,QWORD PTR [r14+0xf8]
  409e7a:	test   rax,rax
  409e7d:	je     0x409eaf
  409e7f:	mov    rcx,QWORD PTR [rsp+0x40]
  409e84:	lea    r9,[rip+0x23525]        # 0x42d3b0
  409e8b:	mov    QWORD PTR [rsp+0x28],rax
  409e90:	mov    DWORD PTR [rsp+0x20],0x27ef
  409e98:	mov    r8,r13
  409e9b:	mov    edx,0x1
  409ea0:	call   0x40e5e0
  409ea5:	test   eax,eax
  409ea7:	mov    esi,eax
  409ea9:	jne    0x4086ac
  409eaf:	mov    rax,QWORD PTR [r14+0x2f0]
  409eb6:	mov    rcx,QWORD PTR [rsp+0x40]
  409ebb:	lea    r8,[rip+0x234d8]        # 0x42d39a
  409ec2:	mov    r9d,0x2756
  409ec8:	mov    rdx,r13
  409ecb:	mov    QWORD PTR [rsp+0x20],rax
  409ed0:	call   0x40e470
  409ed5:	test   eax,eax
  409ed7:	mov    esi,eax
  409ed9:	jne    0x4086ac
  409edf:	mov    rax,QWORD PTR [r14+0x10]
  409ee3:	mov    rcx,QWORD PTR [rsp+0x40]
  409ee8:	lea    r9,[rip+0x234d7]        # 0x42d3c6
  409eef:	mov    DWORD PTR [rsp+0x20],0x275c
  409ef7:	mov    r8,r13
  409efa:	mov    edx,0x1
  409eff:	mov    QWORD PTR [rsp+0x28],rax
  409f04:	call   0x40e5e0
  409f09:	test   eax,eax
  409f0b:	mov    esi,eax
  409f0d:	jne    0x4086ac
  409f13:	mov    rax,QWORD PTR [r14+0x18]
  409f17:	mov    rcx,QWORD PTR [rsp+0x40]
  409f1c:	lea    r9,[rip+0x234b7]        # 0x42d3da
  409f23:	mov    DWORD PTR [rsp+0x20],0x275d
  409f2b:	mov    r8,r13
  409f2e:	mov    edx,0x1
  409f33:	mov    QWORD PTR [rsp+0x28],rax
  409f38:	call   0x40e5e0
  409f3d:	test   eax,eax
  409f3f:	mov    esi,eax
  409f41:	jne    0x4086ac
  409f47:	movsd  xmm0,QWORD PTR [r14+0x90]
  409f50:	mov    rcx,QWORD PTR [rsp+0x40]
  409f55:	lea    r9,[rip+0x23490]        # 0x42d3ec
  409f5c:	xor    edx,edx
  409f5e:	mov    DWORD PTR [rsp+0x20],0x9c
  409f66:	mov    r8,r13
  409f69:	mulsd  xmm0,xmm6
  409f6d:	cvttsd2si eax,xmm0
  409f71:	mov    DWORD PTR [rsp+0x28],eax
  409f75:	call   0x40e5e0
  409f7a:	test   eax,eax
  409f7c:	mov    esi,eax
  409f7e:	jne    0x4086ac
  409f84:	mov    rax,QWORD PTR [r14+0x1b0]
  409f8b:	test   rax,rax
  409f8e:	je     0x409fc0
  409f90:	mov    rcx,QWORD PTR [rsp+0x40]
  409f95:	lea    r9,[rip+0x2346a]        # 0x42d406
  409f9c:	mov    QWORD PTR [rsp+0x28],rax
  409fa1:	mov    DWORD PTR [rsp+0x20],0x2763
  409fa9:	mov    r8,r13
  409fac:	mov    edx,0x1
  409fb1:	call   0x40e5e0
  409fb6:	test   eax,eax
  409fb8:	mov    esi,eax
  409fba:	jne    0x4086ac
  409fc0:	mov    rax,QWORD PTR [r14+0x1b8]
  409fc7:	test   rax,rax
  409fca:	je     0x409ffc
  409fcc:	mov    rcx,QWORD PTR [rsp+0x40]
  409fd1:	lea    r9,[rip+0x23446]        # 0x42d41e
  409fd8:	mov    QWORD PTR [rsp+0x28],rax
  409fdd:	mov    DWORD PTR [rsp+0x20],0x2813
  409fe5:	mov    r8,r13
  409fe8:	mov    edx,0x1
  409fed:	call   0x40e5e0
  409ff2:	test   eax,eax
  409ff4:	mov    esi,eax
  409ff6:	jne    0x4086ac
  409ffc:	cmp    BYTE PTR [r14+0x4a],0x0
  40a001:	jne    0x40ba40
  40a007:	cmp    BYTE PTR [r14+0x4b],0x0
  40a00c:	jne    0x40ba0b
  40a012:	mov    r11d,DWORD PTR [r13+0x34]
  40a016:	test   r11d,r11d
  40a019:	jne    0x40b975
  40a01f:	mov    rax,QWORD PTR [r14+0x258]
  40a026:	test   rax,rax
  40a029:	je     0x40a05b
  40a02b:	mov    rcx,QWORD PTR [rsp+0x40]
  40a030:	lea    r9,[rip+0x23467]        # 0x42d49e
  40a037:	mov    QWORD PTR [rsp+0x28],rax
  40a03c:	mov    DWORD PTR [rsp+0x20],0x2769
  40a044:	mov    r8,r13
  40a047:	mov    edx,0x1
  40a04c:	call   0x40e5e0
  40a051:	test   eax,eax
  40a053:	mov    esi,eax
  40a055:	jne    0x4086ac
  40a05b:	cmp    BYTE PTR [r14+0x284],0x1
  40a063:	mov    rcx,QWORD PTR [rsp+0x40]
  40a068:	lea    r9,[rip+0x23441]        # 0x42d4b0
  40a06f:	mov    DWORD PTR [rsp+0x20],0x6e
  40a077:	mov    r8,r13
  40a07a:	sbb    eax,eax
  40a07c:	xor    edx,edx
  40a07e:	not    eax
  40a080:	and    eax,0x2
  40a083:	mov    DWORD PTR [rsp+0x28],eax
  40a087:	call   0x40e5e0
  40a08c:	test   eax,eax
  40a08e:	mov    esi,eax
  40a090:	jne    0x4086ac
  40a096:	mov    rax,QWORD PTR [r14+0xa0]
  40a09d:	test   rax,rax
  40a0a0:	jne    0x40b943
  40a0a6:	mov    eax,DWORD PTR [r14+0x2c0]
  40a0ad:	cmp    eax,0x4
  40a0b0:	je     0x40b936
  40a0b6:	cmp    eax,0x6
  40a0b9:	je     0x40b929
  40a0bf:	mov    DWORD PTR [rsp+0x28],0x0
  40a0c7:	mov    rcx,QWORD PTR [rsp+0x40]
  40a0cc:	lea    r9,[rip+0x23417]        # 0x42d4ea
  40a0d3:	xor    edx,edx
  40a0d5:	mov    DWORD PTR [rsp+0x20],0x71
  40a0dd:	mov    r8,r13
  40a0e0:	call   0x40e5e0
  40a0e5:	test   eax,eax
  40a0e7:	mov    esi,eax
  40a0e9:	jne    0x4086ac
  40a0ef:	cmp    BYTE PTR [r14+0x321],0x0
  40a0f7:	jne    0x40b91f
  40a0fd:	cmp    BYTE PTR [r14+0x320],0x0
  40a105:	jne    0x40b915
  40a10b:	cmp    BYTE PTR [r14+0x322],0x0
  40a113:	jne    0x40b8d8
  40a119:	cmp    BYTE PTR [r14+0x323],0x0
  40a121:	jne    0x40b898
  40a127:	mov    eax,DWORD PTR [r14+0x330]
  40a12e:	test   eax,eax
  40a130:	jne    0x40b864
  40a136:	mov    rax,QWORD PTR [r14+0x338]
  40a13d:	test   rax,rax
  40a140:	je     0x40a172
  40a142:	mov    rcx,QWORD PTR [rsp+0x40]
  40a147:	lea    r9,[rip+0x233ec]        # 0x42d53a
  40a14e:	mov    QWORD PTR [rsp+0x28],rax
  40a153:	mov    DWORD PTR [rsp+0x20],0x27fb
  40a15b:	mov    r8,r13
  40a15e:	mov    edx,0x1
  40a163:	call   0x40e5e0
  40a168:	test   eax,eax
  40a16a:	mov    esi,eax
  40a16c:	jne    0x4086ac
  40a172:	mov    rax,QWORD PTR [r14+0x340]
  40a179:	test   rax,rax
  40a17c:	je     0x40a1ae
  40a17e:	mov    rcx,QWORD PTR [rsp+0x40]
  40a183:	lea    r9,[rip+0x233df]        # 0x42d569
  40a18a:	mov    QWORD PTR [rsp+0x28],rax
  40a18f:	mov    DWORD PTR [rsp+0x20],0x27fc
  40a197:	mov    r8,r13
  40a19a:	mov    edx,0x1
  40a19f:	call   0x40e5e0
  40a1a4:	test   eax,eax
  40a1a6:	mov    esi,eax
  40a1a8:	jne    0x4086ac
  40a1ae:	mov    rax,QWORD PTR [r14+0x360]
  40a1b5:	mov    rcx,QWORD PTR [rsp+0x40]
  40a1ba:	lea    r9,[rip+0x23394]        # 0x42d555
  40a1c1:	mov    DWORD PTR [rsp+0x20],0x2796
  40a1c9:	mov    r8,r13
  40a1cc:	mov    edx,0x1
  40a1d1:	mov    QWORD PTR [rsp+0x28],rax
  40a1d6:	call   0x40e5e0
  40a1db:	test   eax,eax
  40a1dd:	mov    esi,eax
  40a1df:	jne    0x4086ac
  40a1e5:	movzx  eax,BYTE PTR [r14+0x379]
  40a1ed:	mov    rcx,QWORD PTR [rsp+0x40]
  40a1f2:	lea    r9,[rip+0x23385]        # 0x42d57e
  40a1f9:	xor    edx,edx
  40a1fb:	mov    DWORD PTR [rsp+0x20],0x88
  40a203:	mov    r8,r13
  40a206:	mov    DWORD PTR [rsp+0x28],eax
  40a20a:	call   0x40e5e0
  40a20f:	test   eax,eax
  40a211:	mov    esi,eax
  40a213:	jne    0x4086ac
  40a219:	movzx  eax,BYTE PTR [r14+0x285]
  40a221:	mov    rcx,QWORD PTR [rsp+0x40]
  40a226:	lea    r9,[rip+0x2336f]        # 0x42d59c
  40a22d:	xor    edx,edx
  40a22f:	mov    DWORD PTR [rsp+0x20],0x89
  40a237:	mov    r8,r13
  40a23a:	mov    DWORD PTR [rsp+0x28],eax
  40a23e:	call   0x40e5e0
  40a243:	test   eax,eax
  40a245:	mov    esi,eax
  40a247:	jne    0x4086ac
  40a24d:	mov    eax,DWORD PTR [r14+0x370]
  40a254:	mov    rcx,QWORD PTR [rsp+0x40]
  40a259:	lea    r9,[rip+0x23355]        # 0x42d5b5
  40a260:	xor    edx,edx
  40a262:	mov    DWORD PTR [rsp+0x20],0x8a
  40a26a:	mov    r8,r13
  40a26d:	mov    DWORD PTR [rsp+0x28],eax
  40a271:	call   0x40e5e0
  40a276:	test   eax,eax
  40a278:	mov    esi,eax
  40a27a:	jne    0x4086ac
  40a280:	mov    eax,DWORD PTR [r14+0xc0]
  40a287:	test   eax,eax
  40a289:	jne    0x40b7fd
  40a28f:	mov    rax,QWORD PTR [r14+0x368]
  40a296:	mov    rcx,QWORD PTR [rsp+0x40]
  40a29b:	lea    r9,[rip+0x2332e]        # 0x42d5d0
  40a2a2:	mov    DWORD PTR [rsp+0x20],0x27a3
  40a2aa:	mov    r8,r13
  40a2ad:	mov    edx,0x1
  40a2b2:	mov    QWORD PTR [rsp+0x28],rax
  40a2b7:	call   0x40e5e0
  40a2bc:	test   eax,eax
  40a2be:	mov    esi,eax
  40a2c0:	jne    0x4086ac
  40a2c6:	cmp    BYTE PTR [r14+0x37a],0x0
  40a2ce:	jne    0x40b7c8
  40a2d4:	cmp    BYTE PTR [r14+0x37b],0x0
  40a2dc:	jne    0x40b763
  40a2e2:	cmp    BYTE PTR [r14+0x37f],0x0
  40a2ea:	jne    0x40b74a
  40a2f0:	mov    rcx,QWORD PTR [rsp+0x40]
  40a2f5:	lea    r9,[rip+0x2337b]        # 0x42d677
  40a2fc:	xor    edx,edx
  40a2fe:	mov    DWORD PTR [rsp+0x28],0x1
  40a306:	mov    DWORD PTR [rsp+0x20],0xd5
  40a30e:	mov    r8,r13
  40a311:	call   0x40e5e0
  40a316:	test   eax,eax
  40a318:	mov    esi,eax
  40a31a:	jne    0x4086ac
  40a320:	mov    eax,DWORD PTR [r14+0x380]
  40a327:	test   eax,eax
  40a329:	jne    0x40b6e6
  40a32f:	mov    eax,DWORD PTR [r14+0x374]
  40a336:	test   eax,eax
  40a338:	jne    0x40b6b5
  40a33e:	mov    rax,QWORD PTR [r14+0x160]
  40a345:	test   rax,rax
  40a348:	je     0x40a37a
  40a34a:	mov    rcx,QWORD PTR [rsp+0x40]
  40a34f:	lea    r9,[rip+0x23377]        # 0x42d6cd
  40a356:	mov    QWORD PTR [rsp+0x28],rax
  40a35b:	mov    DWORD PTR [rsp+0x20],0x27ca
  40a363:	mov    r8,r13
  40a366:	mov    edx,0x1
  40a36b:	call   0x40e5e0
  40a370:	test   eax,eax
  40a372:	mov    esi,eax
  40a374:	jne    0x4086ac
  40a37a:	mov    rax,QWORD PTR [r14+0x168]
  40a381:	test   rax,rax
  40a384:	je     0x40a3af
  40a386:	mov    rcx,QWORD PTR [rsp+0x40]
  40a38b:	lea    r8,[rip+0x2334d]        # 0x42d6df
  40a392:	mov    QWORD PTR [rsp+0x20],rax
  40a397:	mov    r9d,0x27cb
  40a39d:	mov    rdx,r13
  40a3a0:	call   0x40e470
  40a3a5:	test   eax,eax
  40a3a7:	mov    esi,eax
  40a3a9:	jne    0x4086ac
  40a3af:	cmp    BYTE PTR [r14+0x4c],0x0
  40a3b4:	jne    0x40b680
  40a3ba:	cmp    BYTE PTR [r14+0x54],0x0
  40a3bf:	jne    0x40b643
  40a3c5:	cmp    BYTE PTR [r14+0x5c],0x0
  40a3ca:	jne    0x40b606
  40a3d0:	cmp    BYTE PTR [r14+0x384],0x0
  40a3d8:	je     0x40b5f9
  40a3de:	mov    rax,QWORD PTR [rsp+0x50]
  40a3e3:	test   BYTE PTR [rax+0x20],0x4
  40a3e7:	je     0x40b5f9
  40a3ed:	mov    BYTE PTR [rsp+0x120],0x1
  40a3f5:	mov    rax,QWORD PTR [rsp+0xa8]
  40a3fd:	mov    rcx,QWORD PTR [rsp+0x40]
  40a402:	lea    r9,[rip+0x23327]        # 0x42d730
  40a409:	xor    edx,edx
  40a40b:	mov    DWORD PTR [rsp+0x20],0x4e6f
  40a413:	mov    r8,r13
  40a416:	mov    QWORD PTR [rsp+0x110],r15
  40a41e:	mov    QWORD PTR [rsp+0x118],rax
  40a426:	mov    rax,QWORD PTR [rip+0x25e73]        # 0x4302a0
  40a42d:	mov    QWORD PTR [rsp+0x28],rax
  40a432:	call   0x40e5e0
  40a437:	test   eax,eax
  40a439:	mov    esi,eax
  40a43b:	jne    0x4086ac
  40a441:	lea    rax,[rsp+0x110]
  40a449:	mov    rcx,QWORD PTR [rsp+0x40]
  40a44e:	lea    r9,[rip+0x232f2]        # 0x42d747
  40a455:	xor    edx,edx
  40a457:	mov    DWORD PTR [rsp+0x20],0x272d
  40a45f:	mov    r8,r13
  40a462:	mov    QWORD PTR [rsp+0x28],rax
  40a467:	call   0x40e5e0
  40a46c:	test   eax,eax
  40a46e:	mov    esi,eax
  40a470:	jne    0x4086ac
  40a476:	mov    rax,QWORD PTR [r14+0x2f8]
  40a47d:	test   rax,rax
  40a480:	je     0x40a4ab
  40a482:	mov    rcx,QWORD PTR [rsp+0x40]
  40a487:	lea    r8,[rip+0x232cc]        # 0x42d75a
  40a48e:	mov    QWORD PTR [rsp+0x20],rax
  40a493:	mov    r9d,0x27db
  40a499:	mov    rdx,r13
  40a49c:	call   0x40e470
  40a4a1:	test   eax,eax
  40a4a3:	mov    esi,eax
  40a4a5:	jne    0x4086ac
  40a4ab:	mov    rax,QWORD PTR [r14+0x300]
  40a4b2:	test   rax,rax
  40a4b5:	je     0x40a4e0
  40a4b7:	mov    rcx,QWORD PTR [rsp+0x40]
  40a4bc:	lea    r8,[rip+0x232a7]        # 0x42d76a
  40a4c3:	mov    QWORD PTR [rsp+0x20],rax
  40a4c8:	mov    r9d,0x2803
  40a4ce:	mov    rdx,r13
  40a4d1:	call   0x40e470
  40a4d6:	test   eax,eax
  40a4d8:	mov    esi,eax
  40a4da:	jne    0x4086ac
  40a4e0:	mov    rax,QWORD PTR [rip+0x25c39]        # 0x430120
  40a4e7:	mov    rax,QWORD PTR [rax]
  40a4ea:	test   BYTE PTR [rax+0x21],0x40
  40a4ee:	je     0x40a65c
  40a4f4:	mov    rax,QWORD PTR [r14+0x110]
  40a4fb:	test   rax,rax
  40a4fe:	je     0x40a530
  40a500:	mov    rcx,QWORD PTR [rsp+0x40]
  40a505:	lea    r9,[rip+0x23271]        # 0x42d77d
  40a50c:	mov    QWORD PTR [rsp+0x28],rax
  40a511:	mov    DWORD PTR [rsp+0x20],0x27dc
  40a519:	mov    r8,r13
  40a51c:	mov    edx,0x1
  40a521:	call   0x40e5e0
  40a526:	test   eax,eax
  40a528:	mov    esi,eax
  40a52a:	jne    0x4086ac
  40a530:	mov    rax,QWORD PTR [r14+0x118]
  40a537:	test   rax,rax
  40a53a:	je     0x40a56c
  40a53c:	mov    rcx,QWORD PTR [rsp+0x40]
  40a541:	lea    r9,[rip+0x2324e]        # 0x42d796
  40a548:	mov    QWORD PTR [rsp+0x28],rax
  40a54d:	mov    DWORD PTR [rsp+0x20],0x27dd
  40a555:	mov    r8,r13
  40a558:	mov    edx,0x1
  40a55d:	call   0x40e5e0
  40a562:	test   eax,eax
  40a564:	mov    esi,eax
  40a566:	jne    0x4086ac
  40a56c:	mov    rax,QWORD PTR [r14+0x120]
  40a573:	test   rax,rax
  40a576:	je     0x40a5a8
  40a578:	mov    rcx,QWORD PTR [rsp+0x40]
  40a57d:	lea    r9,[rip+0x2322b]        # 0x42d7af
  40a584:	mov    QWORD PTR [rsp+0x28],rax
  40a589:	mov    DWORD PTR [rsp+0x20],0x27de
  40a591:	mov    r8,r13
  40a594:	mov    edx,0x1
  40a599:	call   0x40e5e0
  40a59e:	test   eax,eax
  40a5a0:	mov    esi,eax
  40a5a2:	jne    0x4086ac
  40a5a8:	mov    rax,QWORD PTR [r14+0x128]
  40a5af:	test   rax,rax
  40a5b2:	je     0x40a5e4
  40a5b4:	mov    rcx,QWORD PTR [rsp+0x40]
  40a5b9:	lea    r9,[rip+0x23208]        # 0x42d7c8
  40a5c0:	mov    QWORD PTR [rsp+0x28],rax
  40a5c5:	mov    DWORD PTR [rsp+0x20],0x280b
  40a5cd:	mov    r8,r13
  40a5d0:	mov    edx,0x1
  40a5d5:	call   0x40e5e0
  40a5da:	test   eax,eax
  40a5dc:	mov    esi,eax
  40a5de:	jne    0x4086ac
  40a5e4:	mov    rax,QWORD PTR [r14+0x130]
  40a5eb:	test   rax,rax
  40a5ee:	je     0x40a620
  40a5f0:	mov    rcx,QWORD PTR [rsp+0x40]
  40a5f5:	lea    r9,[rip+0x231ec]        # 0x42d7e8
  40a5fc:	mov    QWORD PTR [rsp+0x28],rax
  40a601:	mov    DWORD PTR [rsp+0x20],0x280c
  40a609:	mov    r8,r13
  40a60c:	mov    edx,0x1
  40a611:	call   0x40e5e0
  40a616:	test   eax,eax
  40a618:	mov    esi,eax
  40a61a:	jne    0x4086ac
  40a620:	mov    rax,QWORD PTR [r14+0x138]
  40a627:	test   rax,rax
  40a62a:	je     0x40a65c
  40a62c:	mov    rcx,QWORD PTR [rsp+0x40]
  40a631:	lea    r9,[rip+0x231cf]        # 0x42d807
  40a638:	mov    QWORD PTR [rsp+0x28],rax
  40a63d:	mov    DWORD PTR [rsp+0x20],0x280d
  40a645:	mov    r8,r13
  40a648:	mov    edx,0x1
  40a64d:	call   0x40e5e0
  40a652:	test   eax,eax
  40a654:	mov    esi,eax
  40a656:	jne    0x4086ac
  40a65c:	mov    eax,DWORD PTR [r14+0x390]
  40a663:	test   eax,eax
  40a665:	jne    0x40b5c5
  40a66b:	cmp    BYTE PTR [r14+0x396],0x1
  40a673:	movzx  edx,BYTE PTR [r14+0x394]
  40a67b:	sbb    eax,eax
  40a67d:	not    eax
  40a67f:	and    eax,0x2
  40a682:	or     eax,edx
  40a684:	jne    0x40b58c
  40a68a:	cmp    BYTE PTR [r14+0x395],0x0
  40a692:	jne    0x40b557
  40a698:	mov    rax,QWORD PTR [r14+0x170]
  40a69f:	test   rax,rax
  40a6a2:	je     0x40a6d4
  40a6a4:	mov    rcx,QWORD PTR [rsp+0x40]
  40a6a9:	lea    r9,[rip+0x231ba]        # 0x42d86a
  40a6b0:	mov    QWORD PTR [rsp+0x28],rax
  40a6b5:	mov    DWORD PTR [rsp+0x20],0x27e9
  40a6bd:	mov    r8,r13
  40a6c0:	mov    edx,0x1
  40a6c5:	call   0x40e5e0
  40a6ca:	test   eax,eax
  40a6cc:	mov    esi,eax
  40a6ce:	jne    0x4086ac
  40a6d4:	cmp    BYTE PTR [r14+0x178],0x0
  40a6dc:	jne    0x40b522
  40a6e2:	cmp    BYTE PTR [r14+0x3b0],0x0
  40a6ea:	jne    0x40b4ed
  40a6f0:	cmp    BYTE PTR [r14+0x3b1],0x0
  40a6f8:	jne    0x40b4b8
  40a6fe:	mov    rax,QWORD PTR [r14+0x3b8]
  40a705:	test   rax,rax
  40a708:	je     0x40a73a
  40a70a:	mov    rcx,QWORD PTR [rsp+0x40]
  40a70f:	lea    r9,[rip+0x231a5]        # 0x42d8bb
  40a716:	mov    QWORD PTR [rsp+0x28],rax
  40a71b:	mov    DWORD PTR [rsp+0x20],0x27f7
  40a723:	mov    r8,r13
  40a726:	mov    edx,0x1
  40a72b:	call   0x40e5e0
  40a730:	test   eax,eax
  40a732:	mov    esi,eax
  40a734:	jne    0x4086ac
  40a73a:	mov    rax,QWORD PTR [r14+0x60]
  40a73e:	test   rax,rax
  40a741:	je     0x40a773
  40a743:	mov    rcx,QWORD PTR [rsp+0x40]
  40a748:	lea    r9,[rip+0x23185]        # 0x42d8d4
  40a74f:	mov    QWORD PTR [rsp+0x28],rax
  40a754:	mov    DWORD PTR [rsp+0x20],0x27fe
  40a75c:	mov    r8,r13
  40a75f:	mov    edx,0x1
  40a764:	call   0x40e5e0
  40a769:	test   eax,eax
  40a76b:	mov    esi,eax
  40a76d:	jne    0x4086ac
  40a773:	movsd  xmm0,QWORD PTR [r14+0x3c8]
  40a77c:	ucomisd xmm0,QWORD PTR [rip+0x2364c]        # 0x42ddd0
  40a784:	jbe    0x40a7bd
  40a786:	mulsd  xmm0,xmm6
  40a78a:	mov    rcx,QWORD PTR [rsp+0x40]
  40a78f:	lea    r9,[rip+0x23157]        # 0x42d8ed
  40a796:	mov    DWORD PTR [rsp+0x20],0xe3
  40a79e:	mov    r8,r13
  40a7a1:	mov    edx,0x1
  40a7a6:	cvttsd2si eax,xmm0
  40a7aa:	mov    DWORD PTR [rsp+0x28],eax
  40a7ae:	call   0x40e5e0
  40a7b3:	test   eax,eax
  40a7b5:	mov    esi,eax
  40a7b7:	jne    0x4086ac
  40a7bd:	cmp    BYTE PTR [r14+0x378],0x0
  40a7c5:	jne    0x40b483
  40a7cb:	mov    eax,DWORD PTR [r14+0x354]
  40a7d2:	test   eax,eax
  40a7d4:	jne    0x40b471
  40a7da:	mov    DWORD PTR [rsp+0x84],0x3e8
  40a7e5:	mov    eax,DWORD PTR [r14+0x34c]
  40a7ec:	mov    DWORD PTR [rsp+0x94],eax
  40a7f3:	call   0x40f8a0
  40a7f8:	cmp    QWORD PTR [r13+0x40],0x0
  40a7fd:	mov    QWORD PTR [rsp+0xa0],rax
  40a805:	je     0x40a816
  40a807:	call   0x403740
  40a80c:	test   eax,eax
  40a80e:	mov    esi,eax
  40a810:	jne    0x4086ac
  40a816:	mov    rsi,QWORD PTR [rip+0x2ad5b]        # 0x435578
  40a81d:	mov    rdi,QWORD PTR [rsp+0x40]
  40a822:	mov    BYTE PTR [rsp+0x60],bl
  40a826:	mov    QWORD PTR [rsp+0xb0],rsi
  40a82e:	mov    QWORD PTR [rsp+0xb8],rsi
  40a836:	mov    rcx,rdi
  40a839:	call   QWORD PTR [rip+0x2ad51]        # 0x435590
  40a83f:	test   eax,eax
  40a841:	mov    ebx,eax
  40a843:	jne    0x40b41a
  40a849:	cmp    QWORD PTR [rsp+0x1a0],0x0
  40a852:	je     0x40b3cb
  40a858:	cmp    BYTE PTR [rsp+0x199],0x0
  40a860:	je     0x40a883
  40a862:	cmp    BYTE PTR [r13+0xc],0x0
  40a867:	jne    0x40a883
  40a869:	mov    rdx,QWORD PTR [rsp+0x190]
  40a871:	test   rdx,rdx
  40a874:	je     0x40a883
  40a876:	lea    rcx,[rip+0x230a6]        # 0x42d923
  40a87d:	call   QWORD PTR [rip+0x2ad6d]        # 0x4355f0
  40a883:	mov    r9d,DWORD PTR [rsp+0x94]
  40a88b:	test   r9d,r9d
  40a88e:	je     0x40b277
  40a894:	mov    r8d,DWORD PTR [r14+0x358]
  40a89b:	test   r8d,r8d
  40a89e:	jne    0x40b39e
  40a8a4:	mov    eax,ebx
  40a8a6:	and    eax,0xffffffef
  40a8a9:	cmp    eax,0xc
  40a8ac:	je     0x40b394
  40a8b2:	lea    eax,[rbx-0x5]
  40a8b5:	cmp    eax,0x1
  40a8b8:	jbe    0x40b394
  40a8be:	cmp    ebx,0x7
  40a8c1:	jne    0x40a8d1
  40a8c3:	cmp    BYTE PTR [r14+0x350],0x0
  40a8cb:	jne    0x40b43c
  40a8d1:	test   ebx,ebx
  40a8d3:	je     0x40b231
  40a8d9:	cmp    ebx,0x16
  40a8dc:	jne    0x40a8ec
  40a8de:	cmp    BYTE PTR [r14+0x17d],0x0
  40a8e6:	jne    0x40b231
  40a8ec:	lea    r8,[rsp+0xd4]
  40a8f4:	mov    edx,0x200002
  40a8f9:	mov    rcx,rdi
  40a8fc:	mov    rax,QWORD PTR [rsp+0xb0]
  40a904:	call   rax
  40a906:	mov    eax,DWORD PTR [rsp+0xd4]
  40a90d:	sub    eax,0x190
  40a912:	cmp    eax,0x63
  40a915:	ja     0x40b277
  40a91b:	mov    ecx,0x4
  40a920:	mov    eax,DWORD PTR [rsp+0x84]
  40a927:	mov    edx,0x10624dd3
  40a92c:	mov    ebx,DWORD PTR [rsp+0x84]
  40a933:	lea    r8,[rip+0x23466]        # 0x42dda0
  40a93a:	imul   edx
  40a93c:	mov    r8,QWORD PTR [r8+rcx*8]
  40a940:	mov    eax,ebx
  40a942:	mov    rcx,QWORD PTR [r14+0x3d0]
  40a949:	sar    eax,0x1f
  40a94c:	sar    edx,0x6
  40a94f:	mov    r9d,edx
  40a952:	mov    edx,DWORD PTR [rsp+0x94]
  40a959:	sub    r9d,eax
  40a95c:	mov    DWORD PTR [rsp+0x20],edx
  40a960:	lea    rdx,[rip+0x22fe1]        # 0x42d948
  40a967:	call   0x408110
  40a96c:	mov    ecx,ebx
  40a96e:	call   0x40e8b0
  40a973:	mov    ecx,DWORD PTR [r14+0x354]
  40a97a:	sub    DWORD PTR [rsp+0x94],0x1
  40a982:	test   ecx,ecx
  40a984:	jne    0x40a9a3
  40a986:	mov    eax,DWORD PTR [rsp+0x84]
  40a98d:	mov    edx,0x927c0
  40a992:	add    eax,eax
  40a994:	cmp    eax,0x927c0
  40a999:	cmovle edx,eax
  40a99c:	mov    DWORD PTR [rsp+0x84],edx
  40a9a3:	mov    r8,QWORD PTR [rsp+0x1b0]
  40a9ab:	test   r8,r8
  40a9ae:	je     0x40a836
  40a9b4:	cmp    QWORD PTR [rsp+0x190],0x0
  40a9bd:	je     0x40a836
  40a9c3:	mov    rcx,QWORD PTR [rsp+0x1a0]
  40a9cb:	test   rcx,rcx
  40a9ce:	je     0x40a836
  40a9d4:	cmp    BYTE PTR [r13+0xc],0x0
  40a9d9:	jne    0x40a9f4
  40a9db:	mov    rcx,QWORD PTR [r13+0x10]
  40a9df:	lea    rdx,[rip+0x22fa6]        # 0x42d98c
  40a9e6:	call   QWORD PTR [rip+0x2abfc]        # 0x4355e8
  40a9ec:	mov    rcx,QWORD PTR [rsp+0x1a0]
  40a9f4:	call   0x416258
  40a9f9:	mov    rbx,QWORD PTR [rsp+0x1b8]
  40aa01:	mov    rcx,QWORD PTR [rsp+0x1a0]
  40aa09:	call   0x4160b0
  40aa0e:	mov    rdx,rbx
  40aa11:	mov    ecx,eax
  40aa13:	call   0x411ed0
  40aa18:	test   eax,eax
  40aa1a:	je     0x40b20b
  40aa20:	cmp    BYTE PTR [r13+0xc],0x0
  40aa25:	movzx  ebx,BYTE PTR [rsp+0x60]
  40aa2a:	jne    0x40aa3d
  40aa2c:	mov    rcx,QWORD PTR [r13+0x10]
  40aa30:	lea    rdx,[rip+0x22f70]        # 0x42d9a7
  40aa37:	call   QWORD PTR [rip+0x2abab]        # 0x4355e8
  40aa3d:	mov    esi,0x17
  40aa42:	jmp    0x4086e8
  40aa47:	nop    WORD PTR [rax+rax*1+0x0]
  40aa50:	movzx  eax,BYTE PTR [rsp+0x90]
  40aa58:	mov    BYTE PTR [r13+0xd],al
  40aa5c:	movzx  eax,BYTE PTR [rsp+0x91]
  40aa64:	mov    BYTE PTR [r13+0xe],al
  40aa68:	jmp    0x408ba0
  40aa6d:	nop    DWORD PTR [rax]
  40aa70:	test   r12d,r12d
  40aa73:	jne    0x408830
  40aa79:	mov    rax,QWORD PTR [rsp+0x50]
  40aa7e:	mov    rcx,QWORD PTR [rax+0x8]
  40aa82:	call   0x4160e8
  40aa87:	test   rax,rax
  40aa8a:	mov    QWORD PTR [rsp+0xf8],rax
  40aa92:	jne    0x4089cf
  40aa98:	nop    DWORD PTR [rax+rax*1+0x0]
  40aaa0:	xor    ebx,ebx
  40aaa2:	xor    ebp,ebp
  40aaa4:	mov    esi,0x1b
  40aaa9:	jmp    0x4086ac
  40aaae:	xchg   ax,ax
  40aab0:	mov    rdx,QWORD PTR [r13+0x10]
  40aab4:	call   0x402c80
  40aab9:	cmp    eax,0x17
  40aabc:	mov    esi,eax
  40aabe:	je     0x40aff7
  40aac4:	test   eax,eax
  40aac6:	jne    0x40acb0
  40aacc:	cmp    BYTE PTR [r14+0x49],0x0
  40aad1:	mov    rcx,QWORD PTR [rsp+0xf0]
  40aad9:	je     0x408a94
  40aadf:	lea    rdx,[rsp+0x1c0]
  40aae7:	call   QWORD PTR [rip+0x2aed3]        # 0x4359c0
  40aaed:	test   eax,eax
  40aaef:	jne    0x40aeb3
  40aaf5:	mov    rax,QWORD PTR [rsp+0x1d8]
  40aafd:	mov    QWORD PTR [r14+0x68],rax
  40ab01:	test   rax,rax
  40ab04:	mov    rcx,QWORD PTR [rsp+0xf0]
  40ab0c:	jne    0x408aa1
  40ab12:	mov    QWORD PTR [rsp+0x1a0],0x0
  40ab1e:	jmp    0x408ada
  40ab23:	mov    QWORD PTR [rsp+0x60],0xffffffffffffffff
  40ab2c:	xor    ebx,ebx
  40ab2e:	xor    ebp,ebp
  40ab30:	jmp    0x408b55
  40ab35:	mov    ecx,DWORD PTR [r14+0x44]
  40ab39:	xor    eax,eax
  40ab3b:	xor    r8d,r8d
  40ab3e:	xchg   ax,ax
  40ab40:	bt     ecx,eax
  40ab43:	lea    edx,[rax+0x1]
  40ab46:	jae    0x40ab58
  40ab48:	cmp    r8d,0x1
  40ab4c:	je     0x40abf0
  40ab52:	mov    r8d,0x1
  40ab58:	cmp    edx,0x20
  40ab5b:	mov    eax,edx
  40ab5d:	jne    0x40ab40
  40ab5f:	cmp    BYTE PTR [r14+0x28a],0x0
  40ab67:	jne    0x40abf0
  40ab6d:	mov    rax,QWORD PTR [rsp+0x38]
  40ab72:	lea    rdi,[rip+0x21f04]        # 0x42ca7d
  40ab79:	call   rax
  40ab7b:	mov    rcx,rax
  40ab7e:	call   0x4015d0
  40ab83:	mov    rdx,QWORD PTR [rsp+0xe0]
  40ab8b:	mov    ecx,0x2
  40ab90:	mov    QWORD PTR [rsp+0x60],0xffffffffffffffff
  40ab99:	mov    rsi,rdx
  40ab9c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40ab9e:	seta   cl
  40aba1:	setb   al
  40aba4:	xor    ebx,ebx
  40aba6:	xor    ebp,ebp
  40aba8:	cmp    cl,al
  40abaa:	jne    0x408b46
  40abb0:	xor    ecx,ecx
  40abb2:	mov    edx,0x1
  40abb7:	call   0x410100
  40abbc:	test   eax,eax
  40abbe:	js     0x40b07f
  40abc4:	mov    rdx,QWORD PTR [rsp+0xe0]
  40abcc:	jmp    0x408b41
  40abd1:	mov    rcx,QWORD PTR [r13+0x10]
  40abd5:	mov    r8d,0x17
  40abdb:	lea    rdx,[rip+0x23145]        # 0x42dd27
  40abe2:	mov    rax,QWORD PTR [rsp+0x78]
  40abe7:	call   rax
  40abe9:	jmp    0x40896b
  40abee:	xchg   ax,ax
  40abf0:	mov    rcx,QWORD PTR [r14+0x3d0]
  40abf7:	lea    rdx,[rip+0x21dea]        # 0x42c9e8
  40abfe:	call   0x408110
  40ac03:	jmp    0x40ab6d
  40ac08:	nop    DWORD PTR [rax+rax*1+0x0]
  40ac10:	mov    esi,0x1b
  40ac15:	jmp    0x4086ac
  40ac1a:	nop    WORD PTR [rax+rax*1+0x0]
  40ac20:	mov    r8,QWORD PTR [rsp+0xe0]
  40ac28:	mov    rdx,QWORD PTR [rsp+0xf8]
  40ac30:	mov    rcx,QWORD PTR [rsp+0x40]
  40ac35:	call   0x40c6e0
  40ac3a:	test   rax,rax
  40ac3d:	mov    QWORD PTR [rsp+0xf8],rax
  40ac45:	je     0x40aea5
  40ac4b:	mov    rcx,QWORD PTR [rsp+0xe0]
  40ac53:	mov    edx,0x8000
  40ac58:	call   0x4160d0
  40ac5d:	cmp    eax,0xffffffff
  40ac60:	mov    ebp,eax
  40ac62:	je     0x40afa1
  40ac68:	lea    rdx,[rsp+0x1c0]
  40ac70:	mov    ecx,eax
  40ac72:	call   QWORD PTR [rip+0x2ab70]        # 0x4357e8
  40ac78:	test   eax,eax
  40ac7a:	je     0x40aec2
  40ac80:	mov    rcx,QWORD PTR [r13+0x10]
  40ac84:	mov    r8,QWORD PTR [rsp+0xe0]
  40ac8c:	lea    rdx,[rip+0x21d43]        # 0x42c9d6
  40ac93:	call   0x408150
  40ac98:	mov    ecx,ebp
  40ac9a:	xor    ebp,ebp
  40ac9c:	call   0x4160a8
  40aca1:	xor    ebx,ebx
  40aca3:	mov    esi,0x1a
  40aca8:	jmp    0x4086e8
  40acad:	nop    DWORD PTR [rax]
  40acb0:	xor    ebx,ebx
  40acb2:	xor    ebp,ebp
  40acb4:	jmp    0x4086ac
  40acb9:	nop    DWORD PTR [rax+0x0]
  40acc0:	mov    rcx,QWORD PTR [rsp+0x40]
  40acc5:	lea    r9,[rip+0x21dfa]        # 0x42cac6
  40accc:	xor    edx,edx
  40acce:	mov    DWORD PTR [rsp+0x28],0x0
  40acd6:	mov    DWORD PTR [rsp+0x20],0x79
  40acde:	mov    r8,r13
  40ace1:	call   0x40e5e0
  40ace6:	test   eax,eax
  40ace8:	mov    esi,eax
  40acea:	jne    0x4086ac
  40acf0:	jmp    0x408cd4
  40acf5:	mov    ecx,esi
  40acf7:	call   QWORD PTR [rip+0x2a8a3]        # 0x4355a0
  40acfd:	mov    r9,rax
  40ad00:	jmp    0x4086ca
  40ad05:	mov    rdx,rsi
  40ad08:	mov    r8,QWORD PTR [rsp+0x58]
  40ad0d:	lea    rcx,[rip+0x23047]        # 0x42dd5b
  40ad14:	call   QWORD PTR [rip+0x2a8c6]        # 0x4355e0
  40ad1a:	mov    rsi,rax
  40ad1d:	jmp    0x408c72
  40ad22:	mov    rax,QWORD PTR [rsp+0x38]
  40ad27:	call   rax
  40ad29:	lea    rcx,[rax+0x30]
  40ad2d:	call   0x4015d0
  40ad32:	jmp    0x408cc6
  40ad37:	nop    WORD PTR [rax+rax*1+0x0]
  40ad40:	test   eax,eax
  40ad42:	je     0x4084e0
  40ad48:	mov    DWORD PTR [rsp+0x74],0x0
  40ad50:	jmp    0x408625
  40ad55:	mov    r8,QWORD PTR [rsp+0xf8]
  40ad5d:	lea    rdx,[rip+0x21d4d]        # 0x42cab1
  40ad64:	lea    rcx,[rip+0x21d51]        # 0x42cabc
  40ad6b:	call   QWORD PTR [rip+0x2a87f]        # 0x4355f0
  40ad71:	jmp    0x408bff
  40ad76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ad80:	mov    rdx,QWORD PTR [rsp+0xd8]
  40ad88:	test   rdx,rdx
  40ad8b:	je     0x40b000
  40ad91:	lea    rcx,[rsp+0xe0]
  40ad99:	call   0x40f3d0
  40ad9e:	cmp    eax,0x1b
  40ada1:	mov    r15d,eax
  40ada4:	je     0x40b0aa
  40adaa:	mov    rax,QWORD PTR [rsp+0xe0]
  40adb2:	test   rax,rax
  40adb5:	jne    0x408597
  40adbb:	mov    QWORD PTR [rsp+0x368],r14
  40adc3:	mov    r14,r13
  40adc6:	mov    r13,QWORD PTR [rsp+0x368]
  40adce:	lea    ebx,[r15-0x2]
  40add2:	mov    rcx,QWORD PTR [rsp+0x48]
  40add7:	call   0x416220
  40addc:	mov    rcx,QWORD PTR [rsp+0xd8]
  40ade4:	test   rcx,rcx
  40ade7:	je     0x40adfa
  40ade9:	call   0x40e8c0
  40adee:	mov    QWORD PTR [rsp+0xd8],0x0
  40adfa:	mov    rdi,QWORD PTR [rsp+0x50]
  40adff:	mov    rcx,QWORD PTR [rdi+0x8]
  40ae03:	call   0x416220
  40ae08:	mov    rcx,QWORD PTR [rdi+0x10]
  40ae0c:	mov    QWORD PTR [rdi+0x8],0x0
  40ae14:	call   0x416220
  40ae19:	mov    rcx,QWORD PTR [rdi+0x18]
  40ae1d:	mov    QWORD PTR [rdi+0x10],0x0
  40ae25:	call   0x416220
  40ae2a:	cmp    ebx,0x2e
  40ae2d:	mov    QWORD PTR [rdi+0x18],0x0
  40ae35:	mov    DWORD PTR [rdi+0x20],0x0
  40ae3c:	ja     0x40ae52
  40ae3e:	movabs rax,0x428002000001
  40ae48:	bt     rax,rbx
  40ae4c:	jb     0x408857
  40ae52:	test   r15d,r15d
  40ae55:	je     0x40ae62
  40ae57:	cmp    BYTE PTR [r14+0x48],0x0
  40ae5c:	jne    0x408857
  40ae62:	mov    rax,QWORD PTR [rsp+0x50]
  40ae67:	mov    rax,QWORD PTR [rax]
  40ae6a:	test   rax,rax
  40ae6d:	mov    QWORD PTR [rsp+0x50],rax
  40ae72:	jne    0x40839d
  40ae78:	jmp    0x408857
  40ae7d:	nop    DWORD PTR [rax]
  40ae80:	mov    rcx,QWORD PTR [r13+0x10]
  40ae84:	lea    r9,[rip+0x22be5]        # 0x42da70
  40ae8b:	lea    r8,[rip+0x22d3e]        # 0x42dbd0
  40ae92:	lea    rdx,[rip+0x22e5d]        # 0x42dcf6
  40ae99:	mov    rax,QWORD PTR [rsp+0x68]
  40ae9e:	call   rax
  40aea0:	jmp    0x4086e8
  40aea5:	xor    ebx,ebx
  40aea7:	xor    ebp,ebp
  40aea9:	mov    esi,0x1b
  40aeae:	jmp    0x4086ac
  40aeb3:	mov    QWORD PTR [r14+0x68],0x0
  40aebb:	xor    eax,eax
  40aebd:	jmp    0x40ab01
  40aec2:	movzx  eax,WORD PTR [rsp+0x1c6]
  40aeca:	mov    rdx,QWORD PTR [rsp+0xe0]
  40aed2:	mov    ebx,0x1
  40aed7:	and    ax,0xf000
  40aedb:	cmp    ax,0x8000
  40aedf:	mov    rax,0xffffffffffffffff
  40aee6:	cmove  rax,QWORD PTR [rsp+0x1d8]
  40aeef:	mov    QWORD PTR [rsp+0x60],rax
  40aef4:	jmp    0x408b41
  40aef9:	mov    rdx,QWORD PTR [rsp+0xf8]
  40af01:	lea    rcx,[rsp+0xf0]
  40af09:	call   0x40c800
  40af0e:	test   eax,eax
  40af10:	mov    esi,eax
  40af12:	jne    0x40b050
  40af18:	mov    rcx,QWORD PTR [rsp+0xf0]
  40af20:	cmp    BYTE PTR [rcx],0x0
  40af23:	jne    0x408a7b
  40af29:	cmp    BYTE PTR [r14+0x384],0x0
  40af31:	jne    0x408a7b
  40af37:	mov    rcx,QWORD PTR [r13+0x10]
  40af3b:	lea    rdx,[rip+0x21a5e]        # 0x42c9a0
  40af42:	xor    ebx,ebx
  40af44:	xor    ebp,ebp
  40af46:	mov    sil,0x17
  40af49:	call   0x408150
  40af4e:	jmp    0x4086e8
  40af53:	mov    rax,QWORD PTR [rsp+0x38]
  40af58:	call   rax
  40af5a:	add    rax,0x60
  40af5e:	mov    QWORD PTR [r13+0x10],rax
  40af62:	jmp    0x408c9b
  40af67:	test   r15d,r15d
  40af6a:	je     0x408544
  40af70:	jmp    0x40adbb
  40af75:	mov    rcx,QWORD PTR [r14+0x3d0]
  40af7c:	lea    rdx,[rip+0x21a3e]        # 0x42c9c1
  40af83:	xor    ebx,ebx
  40af85:	xor    ebp,ebp
  40af87:	call   0x408110
  40af8c:	jmp    0x4086e8
  40af91:	mov    DWORD PTR [rsp+0xd0],0x1
  40af9c:	jmp    0x40ad48
  40afa1:	mov    rcx,QWORD PTR [r13+0x10]
  40afa5:	mov    r8,QWORD PTR [rsp+0xe0]
  40afad:	lea    rdx,[rip+0x21a22]        # 0x42c9d6
  40afb4:	call   0x408150
  40afb9:	jmp    0x40aca1
  40afbe:	mov    rax,QWORD PTR [rip+0x2531b]        # 0x4302e0
  40afc5:	mov    rcx,QWORD PTR [rsp+0x40]
  40afca:	lea    r9,[rip+0x21b58]        # 0x42cb29
  40afd1:	xor    edx,edx
  40afd3:	mov    DWORD PTR [rsp+0x20],0x4e2b
  40afdb:	mov    r8,r13
  40afde:	mov    QWORD PTR [rsp+0x28],rax
  40afe3:	call   0x40e5e0
  40afe8:	test   eax,eax
  40afea:	mov    esi,eax
  40afec:	jne    0x4086ac
  40aff2:	jmp    0x408d76
  40aff7:	xor    ebx,ebx
  40aff9:	xor    ebp,ebp
  40affb:	jmp    0x4086e8
  40b000:	test   al,al
  40b002:	je     0x40adbb
  40b008:	mov    rcx,QWORD PTR [rsp+0x98]
  40b010:	call   0x4160e8
  40b015:	test   rax,rax
  40b018:	mov    QWORD PTR [rsp+0xe0],rax
  40b020:	jne    0x408597
  40b026:	mov    rcx,QWORD PTR [r13+0x10]
  40b02a:	lea    rdx,[rip+0x2192c]        # 0x42c95d
  40b031:	mov    r15d,0x1b
  40b037:	call   0x408150
  40b03c:	mov    rax,QWORD PTR [rsp+0xe0]
  40b044:	jmp    0x40adb2
  40b049:	nop    DWORD PTR [rax+0x0]
  40b050:	xor    ebx,ebx
  40b052:	xor    ebp,ebp
  40b054:	jmp    0x4086ac
  40b059:	mov    rcx,QWORD PTR [r13+0x10]
  40b05d:	mov    r8,QWORD PTR [rsp+0xf0]
  40b065:	lea    rdx,[rip+0x2196a]        # 0x42c9d6
  40b06c:	xor    ebx,ebx
  40b06e:	xor    ebp,ebp
  40b070:	mov    esi,0x17
  40b075:	call   0x408150
  40b07a:	jmp    0x4086e8
  40b07f:	call   QWORD PTR [rip+0x2a753]        # 0x4357d8
  40b085:	mov    ecx,DWORD PTR [rax]
  40b087:	call   0x416158
  40b08c:	mov    rcx,QWORD PTR [r14+0x3d0]
  40b093:	lea    rdx,[rip+0x219e5]        # 0x42ca7f
  40b09a:	mov    r9,rax
  40b09d:	xor    r8d,r8d
  40b0a0:	call   0x408110
  40b0a5:	jmp    0x40abc4
  40b0aa:	mov    rcx,QWORD PTR [r13+0x10]
  40b0ae:	lea    rdx,[rip+0x218a8]        # 0x42c95d
  40b0b5:	call   0x408150
  40b0ba:	jmp    0x40adaa
  40b0bf:	mov    QWORD PTR [rsp+0x368],r14
  40b0c7:	mov    r14,r13
  40b0ca:	mov    r13,QWORD PTR [rsp+0x368]
  40b0d2:	jmp    0x40add2
  40b0d7:	mov    QWORD PTR [rsp+0x48],0x0
  40b0e0:	jmp    0x40842c
  40b0e5:	mov    rcx,QWORD PTR [rsp+0xe0]
  40b0ed:	mov    QWORD PTR [rsp+0x368],r14
  40b0f5:	lea    ebx,[r15-0x2]
  40b0f9:	mov    r14,r13
  40b0fc:	mov    r13,QWORD PTR [rsp+0x368]
  40b104:	call   0x416220
  40b109:	jmp    0x40add2
  40b10e:	mov    rcx,QWORD PTR [rax+0x10]
  40b112:	mov    rbx,rax
  40b115:	call   0x416220
  40b11a:	mov    rcx,QWORD PTR [rbx+0x18]
  40b11e:	mov    QWORD PTR [rbx+0x10],0x0
  40b126:	call   0x416220
  40b12b:	mov    QWORD PTR [rbx+0x18],0x0
  40b133:	mov    DWORD PTR [rbx+0x20],0x0
  40b13a:	jmp    0x40ae62
  40b13f:	mov    rax,QWORD PTR [r13+0x398]
  40b146:	mov    QWORD PTR [rsp+0x88],rax
  40b14e:	jmp    0x4083d9
  40b153:	mov    rcx,QWORD PTR [rsp+0x170]
  40b15b:	call   0x4015d0
  40b160:	jmp    0x408368
  40b165:	mov    rcx,QWORD PTR [r13+0x3d0]
  40b16c:	mov    r8,QWORD PTR [r13+0xa8]
  40b173:	lea    rdx,[rip+0x21812]        # 0x42c98c
  40b17a:	mov    r15d,0x17
  40b180:	call   0x408110
  40b185:	jmp    0x408857
  40b18a:	mov    rcx,QWORD PTR [r14+0x10]
  40b18e:	lea    rdx,[rip+0x217c8]        # 0x42c95d
  40b195:	mov    r15d,0x1b
  40b19b:	call   0x408150
  40b1a0:	jmp    0x408857
  40b1a5:	cmp    QWORD PTR [r13+0x1f0],0x0
  40b1ad:	jne    0x408290
  40b1b3:	cmp    BYTE PTR [r13+0x280],0x0
  40b1bb:	jne    0x408290
  40b1c1:	lea    rcx,[rip+0x21786]        # 0x42c94e
  40b1c8:	mov    rsi,QWORD PTR [rip+0x2a3f9]        # 0x4355c8
  40b1cf:	call   rsi
  40b1d1:	test   rax,rax
  40b1d4:	mov    rbx,rax
  40b1d7:	je     0x40c2eb
  40b1dd:	mov    rcx,rbx
  40b1e0:	call   0x4160e8
  40b1e5:	test   rax,rax
  40b1e8:	mov    QWORD PTR [r13+0x1e0],rax
  40b1ef:	mov    BYTE PTR [rsp+0x93],0x0
  40b1f7:	je     0x40c320
  40b1fd:	mov    rcx,rbx
  40b200:	call   QWORD PTR [rip+0x2a3b2]        # 0x4355b8
  40b206:	jmp    0x408298
  40b20b:	mov    rcx,QWORD PTR [rsp+0x1a0]
  40b213:	mov    r8d,0x2
  40b219:	xor    edx,edx
  40b21b:	call   0x416218
  40b220:	mov    QWORD PTR [rsp+0x1b0],0x0
  40b22c:	jmp    0x40a836
  40b231:	mov    edx,0x100001
  40b236:	mov    QWORD PTR [rsp+0x1c0],0x0
  40b242:	lea    r8,[rsp+0x1c0]
  40b24a:	mov    rcx,rdi
  40b24d:	call   rsi
  40b24f:	mov    rdx,QWORD PTR [rsp+0x1c0]
  40b257:	test   rdx,rdx
  40b25a:	je     0x40b277
  40b25c:	mov    r8d,0x4
  40b262:	lea    rcx,[rip+0x226d8]        # 0x42d941
  40b269:	call   QWORD PTR [rip+0x2a3c1]        # 0x435630
  40b26f:	test   eax,eax
  40b271:	jne    0x40b352
  40b277:	cmp    DWORD PTR [r13+0x3c],0x1
  40b27c:	mov    edi,ebx
  40b27e:	movzx  ebx,BYTE PTR [rsp+0x60]
  40b283:	mov    esi,edi
  40b285:	je     0x40b32c
  40b28b:	mov    r8,QWORD PTR [r14+0x290]
  40b292:	test   r8,r8
  40b295:	je     0x40b2a4
  40b297:	mov    rcx,QWORD PTR [rsp+0x40]
  40b29c:	mov    rdx,r15
  40b29f:	call   0x40f970
  40b2a4:	test   edi,edi
  40b2a6:	jne    0x40b325
  40b2a8:	cmp    BYTE PTR [r14+0x38c],0x0
  40b2b0:	je     0x4086e8
  40b2b6:	cmp    BYTE PTR [rsp+0x19b],0x0
  40b2be:	je     0x40b312
  40b2c0:	mov    rcx,QWORD PTR [rsp+0x1a0]
  40b2c8:	test   rcx,rcx
  40b2cb:	je     0x408718
  40b2d1:	call   0x4160b0
  40b2d6:	mov    rcx,QWORD PTR [rsp+0x40]
  40b2db:	mov    edx,eax
  40b2dd:	call   0x4100f0
  40b2e2:	test   eax,eax
  40b2e4:	je     0x4086e8
  40b2ea:	call   QWORD PTR [rip+0x2a4e8]        # 0x4357d8
  40b2f0:	mov    ecx,DWORD PTR [rax]
  40b2f2:	call   0x416158
  40b2f7:	mov    rcx,QWORD PTR [r14+0x3d0]
  40b2fe:	lea    rdx,[rip+0x229fb]        # 0x42dd00
  40b305:	mov    r8,rax
  40b308:	call   0x408110
  40b30d:	jmp    0x4086e8
  40b312:	cmp    BYTE PTR [rsp+0x19a],0x0
  40b31a:	jne    0x408718
  40b320:	jmp    0x40892e
  40b325:	mov    esi,edi
  40b327:	jmp    0x4086ac
  40b32c:	mov    edx,DWORD PTR [rsp+0x130]
  40b333:	test   edx,edx
  40b335:	je     0x40b28b
  40b33b:	mov    rdx,QWORD PTR [rsp+0x150]
  40b343:	mov    ecx,0xa
  40b348:	call   0x416238
  40b34d:	jmp    0x40b28b
  40b352:	mov    rcx,rdi
  40b355:	lea    r8,[rsp+0xd4]
  40b35d:	mov    edx,0x200002
  40b362:	call   rsi
  40b364:	mov    eax,DWORD PTR [rsp+0xd4]
  40b36b:	lea    ecx,[rax-0x1f4]
  40b371:	cmp    ecx,0x4
  40b374:	ja     0x40b277
  40b37a:	mov    eax,0x1
  40b37f:	shl    rax,cl
  40b382:	test   al,0x1d
  40b384:	je     0x40b277
  40b38a:	mov    ecx,0x3
  40b38f:	jmp    0x40a920
  40b394:	mov    ecx,0x1
  40b399:	jmp    0x40a920
  40b39e:	call   0x40f8a0
  40b3a3:	mov    rdx,QWORD PTR [rsp+0xa0]
  40b3ab:	mov    rcx,rax
  40b3ae:	call   0x40f8e0
  40b3b3:	imul   edx,DWORD PTR [r14+0x358],0x3e8
  40b3be:	cmp    eax,edx
  40b3c0:	jl     0x40a8a4
  40b3c6:	jmp    0x40b277
  40b3cb:	cmp    QWORD PTR [rsp+0x1b0],0x0
  40b3d4:	jne    0x40a883
  40b3da:	mov    DWORD PTR [rsp+0x1c0],0x0
  40b3e5:	lea    r8,[rsp+0x1c0]
  40b3ed:	mov    edx,0x200023
  40b3f2:	mov    rcx,rdi
  40b3f5:	call   QWORD PTR [rip+0x2a17d]        # 0x435578
  40b3fb:	mov    r10d,DWORD PTR [rsp+0x1c0]
  40b403:	test   r10d,r10d
  40b406:	jne    0x40b41a
  40b408:	mov    rcx,r15
  40b40b:	call   0x402340
  40b410:	test   al,al
  40b412:	mov    eax,0x17
  40b417:	cmove  ebx,eax
  40b41a:	cmp    BYTE PTR [rsp+0x199],0x0
  40b422:	je     0x40a883
  40b428:	cmp    QWORD PTR [rsp+0x1a0],0x0
  40b431:	jne    0x40a862
  40b437:	jmp    0x40a883
  40b43c:	lea    r8,[rsp+0x1c0]
  40b444:	mov    edx,0x200019
  40b449:	mov    rcx,rdi
  40b44c:	mov    rax,QWORD PTR [rsp+0xb8]
  40b454:	call   rax
  40b456:	cmp    DWORD PTR [rsp+0x1c0],0x274d
  40b461:	jne    0x40b277
  40b467:	mov    ecx,0x2
  40b46c:	jmp    0x40a920
  40b471:	imul   eax,eax,0x3e8
  40b477:	mov    DWORD PTR [rsp+0x84],eax
  40b47e:	jmp    0x40a7e5
  40b483:	mov    rcx,QWORD PTR [rsp+0x40]
  40b488:	lea    r9,[rip+0x2247c]        # 0x42d90b
  40b48f:	xor    edx,edx
  40b491:	mov    DWORD PTR [rsp+0x28],0x1
  40b499:	mov    DWORD PTR [rsp+0x20],0xf2
  40b4a1:	mov    r8,r13
  40b4a4:	call   0x40e5e0
  40b4a9:	test   eax,eax
  40b4ab:	mov    esi,eax
  40b4ad:	jne    0x4086ac
  40b4b3:	jmp    0x40a7cb
  40b4b8:	mov    rcx,QWORD PTR [rsp+0x40]
  40b4bd:	lea    r9,[rip+0x223df]        # 0x42d8a3
  40b4c4:	xor    edx,edx
  40b4c6:	mov    DWORD PTR [rsp+0x28],0x0
  40b4ce:	mov    DWORD PTR [rsp+0x20],0xe2
  40b4d6:	mov    r8,r13
  40b4d9:	call   0x40e5e0
  40b4de:	test   eax,eax
  40b4e0:	mov    esi,eax
  40b4e2:	jne    0x4086ac
  40b4e8:	jmp    0x40a6fe
  40b4ed:	mov    rcx,QWORD PTR [rsp+0x40]
  40b4f2:	lea    r9,[rip+0x22393]        # 0x42d88c
  40b4f9:	xor    edx,edx
  40b4fb:	mov    DWORD PTR [rsp+0x28],0x0
  40b503:	mov    DWORD PTR [rsp+0x20],0xe1
  40b50b:	mov    r8,r13
  40b50e:	call   0x40e5e0
  40b513:	test   eax,eax
  40b515:	mov    esi,eax
  40b517:	jne    0x4086ac
  40b51d:	jmp    0x40a6f0
  40b522:	mov    rcx,QWORD PTR [rsp+0x40]
  40b527:	lea    r9,[rip+0x2234e]        # 0x42d87c
  40b52e:	xor    edx,edx
  40b530:	mov    DWORD PTR [rsp+0x28],0x1
  40b538:	mov    DWORD PTR [rsp+0x20],0xda
  40b540:	mov    r8,r13
  40b543:	call   0x40e5e0
  40b548:	test   eax,eax
  40b54a:	mov    esi,eax
  40b54c:	jne    0x4086ac
  40b552:	jmp    0x40a6e2
  40b557:	mov    rcx,QWORD PTR [rsp+0x40]
  40b55c:	lea    r9,[rip+0x222ed]        # 0x42d850
  40b563:	xor    edx,edx
  40b565:	mov    DWORD PTR [rsp+0x28],0x1
  40b56d:	mov    DWORD PTR [rsp+0x20],0x105
  40b575:	mov    r8,r13
  40b578:	call   0x40e5e0
  40b57d:	test   eax,eax
  40b57f:	mov    esi,eax
  40b581:	jne    0x4086ac
  40b587:	jmp    0x40a698
  40b58c:	mov    DWORD PTR [rsp+0x28],eax
  40b590:	mov    rax,QWORD PTR [rip+0x24c99]        # 0x430230
  40b597:	lea    r8,[rip+0x2229e]        # 0x42d83c
  40b59e:	mov    rcx,QWORD PTR [rsp+0x40]
  40b5a3:	mov    r9d,0xd8
  40b5a9:	mov    rdx,r13
  40b5ac:	mov    QWORD PTR [rsp+0x20],rax
  40b5b1:	call   0x40e000
  40b5b6:	test   eax,eax
  40b5b8:	mov    esi,eax
  40b5ba:	jne    0x4086ac
  40b5c0:	jmp    0x40a68a
  40b5c5:	mov    rcx,QWORD PTR [rsp+0x40]
  40b5ca:	lea    r9,[rip+0x22251]        # 0x42d822
  40b5d1:	mov    DWORD PTR [rsp+0x28],eax
  40b5d5:	mov    DWORD PTR [rsp+0x20],0xd2
  40b5dd:	mov    r8,r13
  40b5e0:	mov    edx,0x1
  40b5e5:	call   0x40e5e0
  40b5ea:	test   eax,eax
  40b5ec:	mov    esi,eax
  40b5ee:	jne    0x4086ac
  40b5f4:	jmp    0x40a66b
  40b5f9:	mov    BYTE PTR [rsp+0x120],0x0
  40b601:	jmp    0x40a3f5
  40b606:	mov    eax,DWORD PTR [r14+0x58]
  40b60a:	mov    rcx,QWORD PTR [rsp+0x40]
  40b60f:	lea    r8,[rip+0x22102]        # 0x42d718
  40b616:	mov    r9d,0xb6
  40b61c:	mov    rdx,r13
  40b61f:	mov    DWORD PTR [rsp+0x28],eax
  40b623:	mov    rax,QWORD PTR [rip+0x24be6]        # 0x430210
  40b62a:	mov    QWORD PTR [rsp+0x20],rax
  40b62f:	call   0x40de70
  40b634:	test   eax,eax
  40b636:	mov    esi,eax
  40b638:	jne    0x4086ac
  40b63e:	jmp    0x40a3d0
  40b643:	mov    eax,DWORD PTR [r14+0x50]
  40b647:	mov    rcx,QWORD PTR [rsp+0x40]
  40b64c:	lea    r8,[rip+0x220b3]        # 0x42d706
  40b653:	mov    r9d,0xb5
  40b659:	mov    rdx,r13
  40b65c:	mov    DWORD PTR [rsp+0x28],eax
  40b660:	mov    rax,QWORD PTR [rip+0x24ba9]        # 0x430210
  40b667:	mov    QWORD PTR [rsp+0x20],rax
  40b66c:	call   0x40de70
  40b671:	test   eax,eax
  40b673:	mov    esi,eax
  40b675:	jne    0x4086ac
  40b67b:	jmp    0x40a3c5
  40b680:	mov    rcx,QWORD PTR [rsp+0x40]
  40b685:	lea    r9,[rip+0x22065]        # 0x42d6f1
  40b68c:	xor    edx,edx
  40b68e:	mov    DWORD PTR [rsp+0x28],0x1
  40b696:	mov    DWORD PTR [rsp+0x20],0xbc
  40b69e:	mov    r8,r13
  40b6a1:	call   0x40e5e0
  40b6a6:	test   eax,eax
  40b6a8:	mov    esi,eax
  40b6aa:	jne    0x4086ac
  40b6b0:	jmp    0x40a3ba
  40b6b5:	mov    rcx,QWORD PTR [rsp+0x40]
  40b6ba:	lea    r9,[rip+0x21ff7]        # 0x42d6b8
  40b6c1:	xor    edx,edx
  40b6c3:	mov    DWORD PTR [rsp+0x28],eax
  40b6c7:	mov    DWORD PTR [rsp+0x20],0xb2
  40b6cf:	mov    r8,r13
  40b6d2:	call   0x40e5e0
  40b6d7:	test   eax,eax
  40b6d9:	mov    esi,eax
  40b6db:	jne    0x4086ac
  40b6e1:	jmp    0x40a33e
  40b6e6:	mov    rcx,QWORD PTR [rsp+0x40]
  40b6eb:	lea    r9,[rip+0x21f9b]        # 0x42d68d
  40b6f2:	xor    edx,edx
  40b6f4:	mov    DWORD PTR [rsp+0x28],eax
  40b6f8:	mov    DWORD PTR [rsp+0x20],0xd6
  40b700:	mov    r8,r13
  40b703:	call   0x40e5e0
  40b708:	test   eax,eax
  40b70a:	mov    esi,eax
  40b70c:	jne    0x4086ac
  40b712:	mov    eax,DWORD PTR [r14+0x380]
  40b719:	lea    r9,[rip+0x21f82]        # 0x42d6a2
  40b720:	mov    DWORD PTR [rsp+0x20],0xd7
  40b728:	mov    DWORD PTR [rsp+0x28],eax
  40b72c:	mov    rcx,QWORD PTR [rsp+0x40]
  40b731:	xor    edx,edx
  40b733:	mov    r8,r13
  40b736:	call   0x40e5e0
  40b73b:	test   eax,eax
  40b73d:	mov    esi,eax
  40b73f:	jne    0x4086ac
  40b745:	jmp    0x40a32f
  40b74a:	mov    DWORD PTR [rsp+0x28],0x0
  40b752:	mov    DWORD PTR [rsp+0x20],0xd5
  40b75a:	lea    r9,[rip+0x21f16]        # 0x42d677
  40b761:	jmp    0x40b72c
  40b763:	mov    rcx,QWORD PTR [rsp+0x40]
  40b768:	lea    r9,[rip+0x21ec6]        # 0x42d635
  40b76f:	xor    edx,edx
  40b771:	mov    DWORD PTR [rsp+0x28],0x0
  40b779:	mov    DWORD PTR [rsp+0x20],0x9e
  40b781:	mov    r8,r13
  40b784:	call   0x40e5e0
  40b789:	test   eax,eax
  40b78b:	mov    esi,eax
  40b78d:	jne    0x4086ac
  40b793:	mov    rcx,QWORD PTR [rsp+0x40]
  40b798:	lea    r9,[rip+0x21eb9]        # 0x42d658
  40b79f:	xor    edx,edx
  40b7a1:	mov    DWORD PTR [rsp+0x28],0x0
  40b7a9:	mov    DWORD PTR [rsp+0x20],0x9d
  40b7b1:	mov    r8,r13
  40b7b4:	call   0x40e5e0
  40b7b9:	test   eax,eax
  40b7bb:	mov    esi,eax
  40b7bd:	jne    0x4086ac
  40b7c3:	jmp    0x40a2e2
  40b7c8:	mov    rcx,QWORD PTR [rsp+0x40]
  40b7cd:	lea    r9,[rip+0x21e45]        # 0x42d619
  40b7d4:	xor    edx,edx
  40b7d6:	mov    DWORD PTR [rsp+0x28],0x0
  40b7de:	mov    DWORD PTR [rsp+0x20],0x96
  40b7e6:	mov    r8,r13
  40b7e9:	call   0x40e5e0
  40b7ee:	test   eax,eax
  40b7f0:	mov    esi,eax
  40b7f2:	jne    0x4086ac
  40b7f8:	jmp    0x40a2d4
  40b7fd:	mov    rcx,QWORD PTR [rsp+0x40]
  40b802:	lea    r9,[rip+0x21de7]        # 0x42d5f0
  40b809:	xor    edx,edx
  40b80b:	mov    DWORD PTR [rsp+0x28],eax
  40b80f:	mov    DWORD PTR [rsp+0x20],0x8b
  40b817:	mov    r8,r13
  40b81a:	call   0x40e5e0
  40b81f:	test   eax,eax
  40b821:	mov    esi,eax
  40b823:	jne    0x4086ac
  40b829:	mov    eax,DWORD PTR [r14+0xc4]
  40b830:	mov    rcx,QWORD PTR [rsp+0x40]
  40b835:	lea    r9,[rip+0x21dc6]        # 0x42d602
  40b83c:	mov    DWORD PTR [rsp+0x20],0x8c
  40b844:	mov    r8,r13
  40b847:	mov    edx,0x1
  40b84c:	mov    DWORD PTR [rsp+0x28],eax
  40b850:	call   0x40e5e0
  40b855:	test   eax,eax
  40b857:	mov    esi,eax
  40b859:	jne    0x4086ac
  40b85f:	jmp    0x40a28f
  40b864:	mov    rcx,QWORD PTR [rsp+0x40]
  40b869:	lea    r9,[rip+0x21cb0]        # 0x42d520
  40b870:	mov    DWORD PTR [rsp+0x28],eax
  40b874:	mov    DWORD PTR [rsp+0x20],0xb4
  40b87c:	mov    r8,r13
  40b87f:	mov    edx,0x1
  40b884:	call   0x40e5e0
  40b889:	test   eax,eax
  40b88b:	mov    esi,eax
  40b88d:	jne    0x4086ac
  40b893:	jmp    0x40a136
  40b898:	mov    eax,DWORD PTR [r14+0x324]
  40b89f:	mov    rcx,QWORD PTR [rsp+0x40]
  40b8a4:	lea    r8,[rip+0x21c61]        # 0x42d50c
  40b8ab:	mov    r9d,0x9a
  40b8b1:	mov    rdx,r13
  40b8b4:	mov    DWORD PTR [rsp+0x28],eax
  40b8b8:	mov    rax,QWORD PTR [rip+0x24941]        # 0x430200
  40b8bf:	mov    QWORD PTR [rsp+0x20],rax
  40b8c4:	call   0x40ddd0
  40b8c9:	test   eax,eax
  40b8cb:	mov    esi,eax
  40b8cd:	jne    0x4086ac
  40b8d3:	jmp    0x40a127
  40b8d8:	mov    DWORD PTR [rsp+0x28],0x2
  40b8e0:	mov    rax,QWORD PTR [rip+0x24959]        # 0x430240
  40b8e7:	mov    rcx,QWORD PTR [rsp+0x40]
  40b8ec:	lea    r8,[rip+0x21c09]        # 0x42d4fc
  40b8f3:	mov    r9d,0x77
  40b8f9:	mov    rdx,r13
  40b8fc:	mov    QWORD PTR [rsp+0x20],rax
  40b901:	call   0x40ddd0
  40b906:	test   eax,eax
  40b908:	mov    esi,eax
  40b90a:	jne    0x4086ac
  40b910:	jmp    0x40a119
  40b915:	mov    DWORD PTR [rsp+0x28],0x1
  40b91d:	jmp    0x40b8e0
  40b91f:	mov    DWORD PTR [rsp+0x28],0x3
  40b927:	jmp    0x40b8e0
  40b929:	mov    DWORD PTR [rsp+0x28],0x2
  40b931:	jmp    0x40a0c7
  40b936:	mov    DWORD PTR [rsp+0x28],0x1
  40b93e:	jmp    0x40a0c7
  40b943:	mov    rcx,QWORD PTR [rsp+0x40]
  40b948:	lea    r9,[rip+0x21b81]        # 0x42d4d0
  40b94f:	xor    edx,edx
  40b951:	mov    QWORD PTR [rsp+0x28],rax
  40b956:	mov    DWORD PTR [rsp+0x20],0x75a5
  40b95e:	mov    r8,r13
  40b961:	call   0x40e5e0
  40b966:	test   eax,eax
  40b968:	mov    esi,eax
  40b96a:	jne    0x4086ac
  40b970:	jmp    0x40a0a6
  40b975:	mov    rax,QWORD PTR [rip+0x24914]        # 0x430290
  40b97c:	mov    rcx,QWORD PTR [rsp+0x40]
  40b981:	lea    r9,[rip+0x21ade]        # 0x42d466
  40b988:	xor    edx,edx
  40b98a:	mov    DWORD PTR [rsp+0x20],0x4e7e
  40b992:	mov    r8,r13
  40b995:	mov    QWORD PTR [rsp+0x28],rax
  40b99a:	call   0x40e5e0
  40b99f:	test   eax,eax
  40b9a1:	mov    esi,eax
  40b9a3:	jne    0x4086ac
  40b9a9:	mov    rcx,QWORD PTR [rsp+0x40]
  40b9ae:	lea    r9,[rip+0x21ac7]        # 0x42d47c
  40b9b5:	xor    edx,edx
  40b9b7:	mov    QWORD PTR [rsp+0x28],r14
  40b9bc:	mov    DWORD PTR [rsp+0x20],0x276f
  40b9c4:	mov    r8,r13
  40b9c7:	call   0x40e5e0
  40b9cc:	test   eax,eax
  40b9ce:	mov    esi,eax
  40b9d0:	jne    0x4086ac
  40b9d6:	mov    rcx,QWORD PTR [rsp+0x40]
  40b9db:	lea    r9,[rip+0x21aac]        # 0x42d48e
  40b9e2:	xor    edx,edx
  40b9e4:	mov    DWORD PTR [rsp+0x28],0x1
  40b9ec:	mov    DWORD PTR [rsp+0x20],0x29
  40b9f4:	mov    r8,r13
  40b9f7:	call   0x40e5e0
  40b9fc:	test   eax,eax
  40b9fe:	mov    esi,eax
  40ba00:	jne    0x4086ac
  40ba06:	jmp    0x40a01f
  40ba0b:	mov    rcx,QWORD PTR [rsp+0x40]
  40ba10:	lea    r9,[rip+0x21a3a]        # 0x42d451
  40ba17:	xor    edx,edx
  40ba19:	mov    DWORD PTR [rsp+0x28],0x0
  40ba21:	mov    DWORD PTR [rsp+0x20],0x6a
  40ba29:	mov    r8,r13
  40ba2c:	call   0x40e5e0
  40ba31:	test   eax,eax
  40ba33:	mov    esi,eax
  40ba35:	jne    0x4086ac
  40ba3b:	jmp    0x40a012
  40ba40:	mov    rcx,QWORD PTR [rsp+0x40]
  40ba45:	lea    r9,[rip+0x219f0]        # 0x42d43c
  40ba4c:	xor    edx,edx
  40ba4e:	mov    DWORD PTR [rsp+0x28],0x0
  40ba56:	mov    DWORD PTR [rsp+0x20],0x55
  40ba5e:	mov    r8,r13
  40ba61:	call   0x40e5e0
  40ba66:	test   eax,eax
  40ba68:	mov    esi,eax
  40ba6a:	jne    0x4086ac
  40ba70:	jmp    0x40a007
  40ba75:	cmp    BYTE PTR [r13+0xd],0x0
  40ba7a:	jne    0x409dbf
  40ba80:	cmp    BYTE PTR [r13+0xc],0x0
  40ba85:	jne    0x409dbf
  40ba8b:	mov    rax,QWORD PTR [rip+0x2481e]        # 0x4302b0
  40ba92:	mov    rcx,QWORD PTR [rsp+0x40]
  40ba97:	lea    r9,[rip+0x2188e]        # 0x42d32c
  40ba9e:	xor    edx,edx
  40baa0:	mov    DWORD PTR [rsp+0x20],0x4efb
  40baa8:	mov    r8,r13
  40baab:	mov    QWORD PTR [rsp+0x28],rax
  40bab0:	call   0x40e5e0
  40bab5:	test   eax,eax
  40bab7:	mov    esi,eax
  40bab9:	jne    0x4086ac
  40babf:	mov    rcx,QWORD PTR [rsp+0x40]
  40bac4:	lea    r9,[rip+0x2187a]        # 0x42d345
  40bacb:	xor    edx,edx
  40bacd:	mov    QWORD PTR [rsp+0x28],rdi
  40bad2:	mov    DWORD PTR [rsp+0x20],0x2749
  40bada:	mov    r8,r13
  40badd:	call   0x40e5e0
  40bae2:	test   eax,eax
  40bae4:	mov    esi,eax
  40bae6:	jne    0x4086ac
  40baec:	jmp    0x409dbf
  40baf1:	mov    rcx,QWORD PTR [rsp+0x40]
  40baf6:	lea    r9,[rip+0x21733]        # 0x42d230
  40bafd:	xor    edx,edx
  40baff:	mov    DWORD PTR [rsp+0x28],0x1
  40bb07:	mov    DWORD PTR [rsp+0x20],0x45
  40bb0f:	mov    r8,r13
  40bb12:	call   0x40e5e0
  40bb17:	test   eax,eax
  40bb19:	mov    esi,eax
  40bb1b:	jne    0x4086ac
  40bb21:	jmp    0x409aa7
  40bb26:	mov    rcx,QWORD PTR [rsp+0x40]
  40bb2b:	lea    r9,[rip+0x216b0]        # 0x42d1e2
  40bb32:	xor    edx,edx
  40bb34:	mov    DWORD PTR [rsp+0x28],0x1
  40bb3c:	mov    DWORD PTR [rsp+0x20],0xea
  40bb44:	mov    r8,r13
  40bb47:	call   0x40e5e0
  40bb4c:	test   eax,eax
  40bb4e:	mov    esi,eax
  40bb50:	jne    0x4086ac
  40bb56:	jmp    0x409a7b
  40bb5b:	mov    rax,QWORD PTR [r14+0x1c0]
  40bb62:	mov    rcx,QWORD PTR [rsp+0x40]
  40bb67:	lea    r9,[rip+0x2150c]        # 0x42d07a
  40bb6e:	mov    DWORD PTR [rsp+0x20],0x2729
  40bb76:	mov    r8,r13
  40bb79:	mov    edx,0x1
  40bb7e:	mov    QWORD PTR [rsp+0x28],rax
  40bb83:	call   0x40e5e0
  40bb88:	test   eax,eax
  40bb8a:	mov    esi,eax
  40bb8c:	jne    0x4086ac
  40bb92:	mov    rax,QWORD PTR [r14+0x1c8]
  40bb99:	mov    rcx,QWORD PTR [rsp+0x40]
  40bb9e:	lea    r9,[rip+0x214e5]        # 0x42d08a
  40bba5:	mov    DWORD PTR [rsp+0x20],0x280e
  40bbad:	mov    r8,r13
  40bbb0:	mov    edx,0x1
  40bbb5:	mov    QWORD PTR [rsp+0x28],rax
  40bbba:	call   0x40e5e0
  40bbbf:	test   eax,eax
  40bbc1:	mov    esi,eax
  40bbc3:	jne    0x4086ac
  40bbc9:	mov    rax,QWORD PTR [r14+0x1d0]
  40bbd0:	mov    rcx,QWORD PTR [rsp+0x40]
  40bbd5:	lea    r9,[rip+0x214c4]        # 0x42d0a0
  40bbdc:	mov    DWORD PTR [rsp+0x20],0x2766
  40bbe4:	mov    r8,r13
  40bbe7:	mov    edx,0x1
  40bbec:	mov    QWORD PTR [rsp+0x28],rax
  40bbf1:	call   0x40e5e0
  40bbf6:	test   eax,eax
  40bbf8:	mov    esi,eax
  40bbfa:	jne    0x4086ac
  40bc00:	mov    rax,QWORD PTR [r14+0x1d8]
  40bc07:	mov    rcx,QWORD PTR [rsp+0x40]
  40bc0c:	lea    r9,[rip+0x214a1]        # 0x42d0b4
  40bc13:	mov    DWORD PTR [rsp+0x20],0x280f
  40bc1b:	mov    r8,r13
  40bc1e:	mov    edx,0x1
  40bc23:	mov    QWORD PTR [rsp+0x28],rax
  40bc28:	call   0x40e5e0
  40bc2d:	test   eax,eax
  40bc2f:	mov    esi,eax
  40bc31:	jne    0x4086ac
  40bc37:	mov    rax,QWORD PTR [r14+0x218]
  40bc3e:	mov    rcx,QWORD PTR [rsp+0x40]
  40bc43:	lea    r9,[rip+0x21484]        # 0x42d0ce
  40bc4a:	mov    DWORD PTR [rsp+0x20],0x2767
  40bc52:	mov    r8,r13
  40bc55:	mov    edx,0x1
  40bc5a:	mov    QWORD PTR [rsp+0x28],rax
  40bc5f:	call   0x40e5e0
  40bc64:	test   eax,eax
  40bc66:	mov    esi,eax
  40bc68:	jne    0x4086ac
  40bc6e:	mov    rax,QWORD PTR [r14+0x220]
  40bc75:	mov    rcx,QWORD PTR [rsp+0x40]
  40bc7a:	lea    r9,[rip+0x2145c]        # 0x42d0dd
  40bc81:	mov    DWORD PTR [rsp+0x20],0x2810
  40bc89:	mov    r8,r13
  40bc8c:	mov    edx,0x1
  40bc91:	mov    QWORD PTR [rsp+0x28],rax
  40bc96:	call   0x40e5e0
  40bc9b:	test   eax,eax
  40bc9d:	mov    esi,eax
  40bc9f:	jne    0x4086ac
  40bca5:	mov    rax,QWORD PTR [r14+0x228]
  40bcac:	mov    rcx,QWORD PTR [rsp+0x40]
  40bcb1:	lea    r9,[rip+0x2143a]        # 0x42d0f2
  40bcb8:	mov    DWORD PTR [rsp+0x20],0x2768
  40bcc0:	mov    r8,r13
  40bcc3:	mov    edx,0x1
  40bcc8:	mov    QWORD PTR [rsp+0x28],rax
  40bccd:	call   0x40e5e0
  40bcd2:	test   eax,eax
  40bcd4:	mov    esi,eax
  40bcd6:	jne    0x4086ac
  40bcdc:	mov    rax,QWORD PTR [r14+0x230]
  40bce3:	mov    rcx,QWORD PTR [rsp+0x40]
  40bce8:	lea    r9,[rip+0x21416]        # 0x42d105
  40bcef:	mov    DWORD PTR [rsp+0x20],0x2811
  40bcf7:	mov    r8,r13
  40bcfa:	mov    edx,0x1
  40bcff:	mov    QWORD PTR [rsp+0x28],rax
  40bd04:	call   0x40e5e0
  40bd09:	test   eax,eax
  40bd0b:	mov    esi,eax
  40bd0d:	jne    0x4086ac
  40bd13:	cmp    BYTE PTR [r14+0x280],0x0
  40bd1b:	je     0x40bf03
  40bd21:	mov    rcx,QWORD PTR [rsp+0x40]
  40bd26:	lea    r9,[rip+0x213f1]        # 0x42d11e
  40bd2d:	xor    edx,edx
  40bd2f:	mov    DWORD PTR [rsp+0x28],0x0
  40bd37:	mov    DWORD PTR [rsp+0x20],0x40
  40bd3f:	mov    r8,r13
  40bd42:	call   0x40e5e0
  40bd47:	test   eax,eax
  40bd49:	mov    esi,eax
  40bd4b:	jne    0x4086ac
  40bd51:	lea    r9,[rip+0x213dd]        # 0x42d135
  40bd58:	mov    DWORD PTR [rsp+0x28],0x0
  40bd60:	mov    DWORD PTR [rsp+0x20],0x51
  40bd68:	mov    rcx,QWORD PTR [rsp+0x40]
  40bd6d:	xor    edx,edx
  40bd6f:	mov    r8,r13
  40bd72:	call   0x40e5e0
  40bd77:	test   eax,eax
  40bd79:	mov    esi,eax
  40bd7b:	jne    0x4086ac
  40bd81:	cmp    BYTE PTR [r14+0x281],0x0
  40bd89:	je     0x40bee7
  40bd8f:	mov    rcx,QWORD PTR [rsp+0x40]
  40bd94:	lea    r9,[rip+0x213b1]        # 0x42d14c
  40bd9b:	xor    edx,edx
  40bd9d:	mov    DWORD PTR [rsp+0x28],0x0
  40bda5:	mov    DWORD PTR [rsp+0x20],0xf8
  40bdad:	mov    r8,r13
  40bdb0:	call   0x40e5e0
  40bdb5:	test   eax,eax
  40bdb7:	mov    esi,eax
  40bdb9:	jne    0x4086ac
  40bdbf:	lea    r9,[rip+0x213a3]        # 0x42d169
  40bdc6:	mov    DWORD PTR [rsp+0x28],0x0
  40bdce:	mov    DWORD PTR [rsp+0x20],0xf9
  40bdd6:	mov    rcx,QWORD PTR [rsp+0x40]
  40bddb:	xor    edx,edx
  40bddd:	mov    r8,r13
  40bde0:	call   0x40e5e0
  40bde5:	test   eax,eax
  40bde7:	mov    esi,eax
  40bde9:	jne    0x4086ac
  40bdef:	cmp    BYTE PTR [r14+0x282],0x0
  40bdf7:	jne    0x40beb2
  40bdfd:	cmp    BYTE PTR [r14+0x3c0],0x0
  40be05:	je     0x40be37
  40be07:	mov    rcx,QWORD PTR [rsp+0x40]
  40be0c:	lea    r9,[rip+0x2139f]        # 0x42d1b2
  40be13:	xor    edx,edx
  40be15:	mov    DWORD PTR [rsp+0x28],0x1
  40be1d:	mov    DWORD PTR [rsp+0x20],0xe9
  40be25:	mov    r8,r13
  40be28:	call   0x40e5e0
  40be2d:	test   eax,eax
  40be2f:	mov    esi,eax
  40be31:	jne    0x4086ac
  40be37:	mov    eax,DWORD PTR [r14+0x2b8]
  40be3e:	mov    rcx,QWORD PTR [rsp+0x40]
  40be43:	lea    r8,[rip+0x21355]        # 0x42d19f
  40be4a:	mov    r9d,0x20
  40be50:	mov    rdx,r13
  40be53:	mov    DWORD PTR [rsp+0x28],eax
  40be57:	mov    rax,QWORD PTR [rip+0x24412]        # 0x430270
  40be5e:	mov    QWORD PTR [rsp+0x20],rax
  40be63:	call   0x40ddd0
  40be68:	test   eax,eax
  40be6a:	mov    esi,eax
  40be6c:	jne    0x4086ac
  40be72:	mov    eax,DWORD PTR [r14+0x2bc]
  40be79:	mov    rcx,QWORD PTR [rsp+0x40]
  40be7e:	lea    r8,[rip+0x21344]        # 0x42d1c9
  40be85:	mov    r9d,0xfa
  40be8b:	mov    rdx,r13
  40be8e:	mov    DWORD PTR [rsp+0x28],eax
  40be92:	mov    rax,QWORD PTR [rip+0x243d7]        # 0x430270
  40be99:	mov    QWORD PTR [rsp+0x20],rax
  40be9e:	call   0x40ddd0
  40bea3:	test   eax,eax
  40bea5:	mov    esi,eax
  40bea7:	jne    0x4086ac
  40bead:	jmp    0x409a6d
  40beb2:	mov    rcx,QWORD PTR [rsp+0x40]
  40beb7:	lea    r9,[rip+0x212c8]        # 0x42d186
  40bebe:	xor    edx,edx
  40bec0:	mov    DWORD PTR [rsp+0x28],0x1
  40bec8:	mov    DWORD PTR [rsp+0x20],0xe8
  40bed0:	mov    r8,r13
  40bed3:	call   0x40e5e0
  40bed8:	test   eax,eax
  40beda:	mov    esi,eax
  40bedc:	jne    0x4086ac
  40bee2:	jmp    0x40bdfd
  40bee7:	mov    DWORD PTR [rsp+0x28],0x1
  40beef:	mov    DWORD PTR [rsp+0x20],0xf8
  40bef7:	lea    r9,[rip+0x2124e]        # 0x42d14c
  40befe:	jmp    0x40bdd6
  40bf03:	mov    DWORD PTR [rsp+0x28],0x1
  40bf0b:	mov    DWORD PTR [rsp+0x20],0x40
  40bf13:	lea    r9,[rip+0x21204]        # 0x42d11e
  40bf1a:	jmp    0x40bd68
  40bf1f:	mov    rax,QWORD PTR [r14+0x200]
  40bf26:	test   rax,rax
  40bf29:	jne    0x4099ed
  40bf2f:	jmp    0x409a1d
  40bf34:	call   0x407c50
  40bf39:	test   rax,rax
  40bf3c:	mov    rdi,rax
  40bf3f:	je     0x40c174
  40bf45:	lea    r8,[rip+0x212a9]        # 0x42d1f5
  40bf4c:	mov    rdx,rax
  40bf4f:	lea    rcx,[rip+0x212a1]        # 0x42d1f7
  40bf56:	call   QWORD PTR [rip+0x29684]        # 0x4355e0
  40bf5c:	test   rax,rax
  40bf5f:	je     0x40c162
  40bf65:	mov    rcx,QWORD PTR [rsp+0x40]
  40bf6a:	lea    r9,[rip+0x2129b]        # 0x42d20c
  40bf71:	mov    r8,r13
  40bf74:	mov    edx,0x1
  40bf79:	mov    QWORD PTR [rsp+0x28],rax
  40bf7e:	mov    DWORD PTR [rsp+0x20],0x27c7
  40bf86:	mov    QWORD PTR [rsp+0x60],rax
  40bf8b:	call   0x40e5e0
  40bf90:	mov    r10,QWORD PTR [rsp+0x60]
  40bf95:	mov    esi,eax
  40bf97:	mov    rcx,r10
  40bf9a:	call   QWORD PTR [rip+0x29618]        # 0x4355b8
  40bfa0:	cmp    esi,0x30
  40bfa3:	mov    rcx,rdi
  40bfa6:	je     0x40c158
  40bfac:	call   0x416220
  40bfb1:	test   esi,esi
  40bfb3:	jne    0x4086ac
  40bfb9:	jmp    0x409a8e
  40bfbe:	mov    rax,QWORD PTR [r14+0x208]
  40bfc5:	test   rax,rax
  40bfc8:	jne    0x4099ed
  40bfce:	jmp    0x409a1d
  40bfd3:	cmp    BYTE PTR [rsp+0x93],0x0
  40bfdb:	lea    rax,[rip+0x20950]        # 0x42c932
  40bfe2:	mov    rcx,QWORD PTR [r14+0x3d0]
  40bfe9:	lea    r8,[rip+0x20920]        # 0x42c910
  40bff0:	lea    rdx,[rip+0x21009]        # 0x42d000
  40bff7:	cmove  r8,rax
  40bffb:	call   0x408110
  40c000:	jmp    0x40995d
  40c005:	mov    rax,QWORD PTR [r14+0x1f8]
  40c00c:	test   rax,rax
  40c00f:	jne    0x40996d
  40c015:	jmp    0x40999d
  40c01a:	mov    rax,QWORD PTR [r14+0x218]
  40c021:	mov    rcx,QWORD PTR [rsp+0x40]
  40c026:	lea    r9,[rip+0x20f3f]        # 0x42cf6c
  40c02d:	mov    DWORD PTR [rsp+0x20],0x27a9
  40c035:	mov    r8,r13
  40c038:	mov    edx,0x1
  40c03d:	mov    QWORD PTR [rsp+0x28],rax
  40c042:	call   0x40e5e0
  40c047:	test   eax,eax
  40c049:	mov    esi,eax
  40c04b:	jne    0x4086ac
  40c051:	mov    rax,QWORD PTR [r14+0x248]
  40c058:	mov    rcx,QWORD PTR [rsp+0x40]
  40c05d:	lea    r9,[rip+0x20f24]        # 0x42cf88
  40c064:	mov    DWORD PTR [rsp+0x20],0x27a8
  40c06c:	mov    r8,r13
  40c06f:	mov    edx,0x1
  40c074:	mov    QWORD PTR [rsp+0x28],rax
  40c079:	call   0x40e5e0
  40c07e:	test   eax,eax
  40c080:	mov    esi,eax
  40c082:	jne    0x4086ac
  40c088:	mov    rax,QWORD PTR [r14+0x250]
  40c08f:	mov    rcx,QWORD PTR [rsp+0x40]
  40c094:	lea    r9,[rip+0x20f0d]        # 0x42cfa8
  40c09b:	mov    DWORD PTR [rsp+0x20],0x27b2
  40c0a3:	mov    r8,r13
  40c0a6:	mov    edx,0x1
  40c0ab:	mov    QWORD PTR [rsp+0x28],rax
  40c0b0:	call   0x40e5e0
  40c0b5:	test   eax,eax
  40c0b7:	mov    esi,eax
  40c0b9:	jne    0x4086ac
  40c0bf:	jmp    0x40989c
  40c0c4:	mov    QWORD PTR [rsp+0x28],0x0
  40c0cd:	jmp    0x4097fd
  40c0d2:	mov    rcx,QWORD PTR [rsp+0x40]
  40c0d7:	lea    r9,[rip+0x20dc7]        # 0x42cea5
  40c0de:	xor    edx,edx
  40c0e0:	mov    DWORD PTR [rsp+0x28],0x1
  40c0e8:	mov    DWORD PTR [rsp+0x20],0xcf
  40c0f0:	mov    r8,r13
  40c0f3:	call   0x40e5e0
  40c0f8:	test   eax,eax
  40c0fa:	mov    esi,eax
  40c0fc:	jne    0x4086ac
  40c102:	jmp    0x4096e4
  40c107:	lea    rax,[rip+0x20d96]        # 0x42cea4
  40c10e:	mov    rcx,QWORD PTR [rsp+0x40]
  40c113:	lea    r9,[rip+0x20d72]        # 0x42ce8c
  40c11a:	mov    DWORD PTR [rsp+0x20],0x2776
  40c122:	mov    r8,r13
  40c125:	mov    edx,0x1
  40c12a:	mov    QWORD PTR [rsp+0x28],rax
  40c12f:	call   0x40e5e0
  40c134:	test   eax,eax
  40c136:	mov    esi,eax
  40c138:	jne    0x4086ac
  40c13e:	jmp    0x4096d9
  40c143:	mov    rax,QWORD PTR [r14+0x1f0]
  40c14a:	test   rax,rax
  40c14d:	jne    0x40996d
  40c153:	jmp    0x40999d
  40c158:	call   0x416220
  40c15d:	jmp    0x409a8e
  40c162:	mov    rcx,rdi
  40c165:	mov    esi,0x1b
  40c16a:	call   0x416220
  40c16f:	jmp    0x4086ac
  40c174:	mov    esi,0x1b
  40c179:	jmp    0x4086ac
  40c17e:	mov    DWORD PTR [rsp+0x28],eax
  40c182:	mov    rax,QWORD PTR [rip+0x24067]        # 0x4301f0
  40c189:	lea    r8,[rip+0x20cd9]        # 0x42ce69
  40c190:	mov    rcx,QWORD PTR [rsp+0x40]
  40c195:	mov    r9d,0x6b
  40c19b:	mov    rdx,r13
  40c19e:	mov    QWORD PTR [rsp+0x20],rax
  40c1a3:	call   0x40e000
  40c1a8:	test   eax,eax
  40c1aa:	mov    esi,eax
  40c1ac:	jne    0x4086ac
  40c1b2:	jmp    0x40967a
  40c1b7:	mov    DWORD PTR [rsp+0x28],0x4
  40c1bf:	mov    rax,QWORD PTR [rip+0x2408a]        # 0x430250
  40c1c6:	mov    rcx,QWORD PTR [rsp+0x40]
  40c1cb:	lea    r8,[rip+0x20c82]        # 0x42ce54
  40c1d2:	mov    r9d,0x54
  40c1d8:	mov    rdx,r13
  40c1db:	mov    QWORD PTR [rsp+0x20],rax
  40c1e0:	call   0x40ddd0
  40c1e5:	test   eax,eax
  40c1e7:	mov    esi,eax
  40c1e9:	jne    0x4086ac
  40c1ef:	jmp    0x40966e
  40c1f4:	mov    DWORD PTR [rsp+0x28],eax
  40c1f8:	jmp    0x40c1bf
  40c1fa:	mov    rax,QWORD PTR [r14+0x2e0]
  40c201:	mov    rcx,QWORD PTR [rsp+0x40]
  40c206:	lea    r8,[rip+0x20bb5]        # 0x42cdc2
  40c20d:	mov    r9d,0x2728
  40c213:	mov    rdx,r13
  40c216:	mov    QWORD PTR [rsp+0x20],rax
  40c21b:	call   0x40e190
  40c220:	test   eax,eax
  40c222:	mov    esi,eax
  40c224:	jne    0x4086ac
  40c22a:	jmp    0x4094e4
  40c22f:	mov    DWORD PTR [rsp+0x28],0x1
  40c237:	jmp    0x40922e
  40c23c:	mov    DWORD PTR [rsp+0x28],0x1
  40c244:	mov    rax,QWORD PTR [rip+0x23fa5]        # 0x4301f0
  40c24b:	mov    rcx,QWORD PTR [rsp+0x40]
  40c250:	lea    r8,[rip+0x20a02]        # 0x42cc59
  40c257:	mov    r9d,0x6f
  40c25d:	mov    rdx,r13
  40c260:	mov    QWORD PTR [rsp+0x20],rax
  40c265:	call   0x40e000
  40c26a:	test   eax,eax
  40c26c:	mov    esi,eax
  40c26e:	jne    0x4086ac
  40c274:	jmp    0x4090f3
  40c279:	mov    DWORD PTR [rsp+0x28],0x2
  40c281:	jmp    0x40c244
  40c283:	mov    DWORD PTR [rsp+0x28],0x8
  40c28b:	jmp    0x40c244
  40c28d:	mov    DWORD PTR [rsp+0x28],0x4
  40c295:	jmp    0x40c244
  40c297:	mov    DWORD PTR [rsp+0x28],0xffffffef
  40c29f:	jmp    0x40c244
  40c2a1:	mov    rcx,QWORD PTR [rsp+0x40]
  40c2a6:	lea    r9,[rip+0x20918]        # 0x42cbc5
  40c2ad:	xor    edx,edx
  40c2af:	mov    DWORD PTR [rsp+0x28],0x1
  40c2b7:	mov    DWORD PTR [rsp+0x20],0x2c
  40c2bf:	mov    r8,r13
  40c2c2:	call   0x40e5e0
  40c2c7:	test   eax,eax
  40c2c9:	mov    esi,eax
  40c2cb:	jne    0x4086ac
  40c2d1:	mov    DWORD PTR [rsp+0x28],0x1
  40c2d9:	jmp    0x408f26
  40c2de:	mov    DWORD PTR [rsp+0x28],0x0
  40c2e6:	jmp    0x40922e
  40c2eb:	lea    rcx,[rip+0x2067a]        # 0x42c96c
  40c2f2:	call   rsi
  40c2f4:	test   rax,rax
  40c2f7:	mov    rbx,rax
  40c2fa:	je     0x40c38d
  40c300:	mov    rcx,rax
  40c303:	call   0x4160e8
  40c308:	test   rax,rax
  40c30b:	mov    QWORD PTR [r13+0x1f0],rax
  40c312:	mov    BYTE PTR [rsp+0x93],0x1
  40c31a:	jne    0x40b1fd
  40c320:	mov    rcx,rbx
  40c323:	mov    r15d,0x1b
  40c329:	call   QWORD PTR [rip+0x29289]        # 0x4355b8
  40c32f:	mov    rcx,QWORD PTR [r14+0x10]
  40c333:	lea    rdx,[rip+0x20623]        # 0x42c95d
  40c33a:	call   0x408150
  40c33f:	mov    QWORD PTR [rsp+0x58],0x0
  40c348:	jmp    0x408857
  40c34d:	mov    rcx,QWORD PTR [rsp+0x40]
  40c352:	lea    r9,[rip+0x20821]        # 0x42cb7a
  40c359:	xor    edx,edx
  40c35b:	mov    DWORD PTR [rsp+0x28],eax
  40c35f:	mov    DWORD PTR [rsp+0x20],0x62
  40c367:	mov    r8,r13
  40c36a:	call   0x40e5e0
  40c36f:	test   eax,eax
  40c371:	mov    esi,eax
  40c373:	jne    0x4086ac
  40c379:	jmp    0x408e5f
  40c37e:	mov    rcx,QWORD PTR [rsp+0x48]
  40c383:	call   0x416220
  40c388:	jmp    0x408857
  40c38d:	lea    rcx,[rip+0x205e5]        # 0x42c979
  40c394:	call   rsi
  40c396:	test   rax,rax
  40c399:	mov    rbx,rax
  40c39c:	jne    0x40b1dd
  40c3a2:	lea    rdx,[rip+0x21998]        # 0x42dd41
  40c3a9:	mov    rcx,r13
  40c3ac:	call   0x403550
  40c3b1:	test   eax,eax
  40c3b3:	mov    r15d,eax
  40c3b6:	mov    QWORD PTR [rsp+0x58],0x0
  40c3bf:	jne    0x408857
  40c3c5:	jmp    0x408290
  40c3ca:	nop    WORD PTR [rax+rax*1+0x0]
  40c3d0:	push   rbp
  40c3d1:	push   rdi
  40c3d2:	push   rsi
  40c3d3:	push   rbx
  40c3d4:	sub    rsp,0x28
  40c3d8:	mov    ebx,edx
  40c3da:	lea    rdx,[rip+0x20ac3]        # 0x42cea4
  40c3e1:	mov    rsi,rcx
  40c3e4:	xor    ecx,ecx
  40c3e6:	mov    rdi,r8
  40c3e9:	call   0x416190
  40c3ee:	cmp    ebx,0x1
  40c3f1:	je     0x40c460
  40c3f3:	mov    rcx,QWORD PTR [rdi+0x8]
  40c3f7:	lea    rdx,[rip+0x21964]        # 0x42dd62
  40c3fe:	mov    rbp,QWORD PTR [rip+0x29223]        # 0x435628
  40c405:	call   rbp
  40c407:	test   eax,eax
  40c409:	je     0x40c490
  40c40f:	mov    r8,rdi
  40c412:	mov    edx,ebx
  40c414:	mov    rcx,rsi
  40c417:	call   0x407440
  40c41c:	test   eax,eax
  40c41e:	je     0x40c4c0
  40c424:	cmp    eax,0x5
  40c427:	je     0x40c580
  40c42d:	cmp    eax,0x6
  40c430:	je     0x40c590
  40c436:	cmp    eax,0x7
  40c439:	je     0x40c59c
  40c43f:	xor    ebx,ebx
  40c441:	cmp    eax,0xd
  40c444:	setne  bl
  40c447:	add    ebx,0x1
  40c44a:	cmp    eax,0x8
  40c44d:	je     0x40c5a8
  40c453:	mov    eax,ebx
  40c455:	add    rsp,0x28
  40c459:	pop    rbx
  40c45a:	pop    rsi
  40c45b:	pop    rdi
  40c45c:	pop    rbp
  40c45d:	ret    
  40c45e:	xchg   ax,ax
  40c460:	mov    rdx,rsi
  40c463:	xor    ecx,ecx
  40c465:	call   0x40d320
  40c46a:	mov    rax,QWORD PTR [rsi+0x50]
  40c46e:	cmp    QWORD PTR [rax+0x190],0x0
  40c476:	jne    0x40c40f
  40c478:	mov    rcx,QWORD PTR [rsi+0x10]
  40c47c:	xor    edx,edx
  40c47e:	mov    ebx,0x2
  40c483:	call   0x408150
  40c488:	jmp    0x40c453
  40c48a:	nop    WORD PTR [rax+rax*1+0x0]
  40c490:	mov    rcx,QWORD PTR [rdi+0x8]
  40c494:	lea    rdx,[rip+0x218ca]        # 0x42dd65
  40c49b:	call   rbp
  40c49d:	test   eax,eax
  40c49f:	jne    0x40c40f
  40c4a5:	xor    ecx,ecx
  40c4a7:	mov    rdx,rsi
  40c4aa:	call   0x40d320
  40c4af:	cmp    ebx,0x1
  40c4b2:	jg     0x40c40f
  40c4b8:	jmp    0x40c46a
  40c4ba:	nop    WORD PTR [rax+rax*1+0x0]
  40c4c0:	cmp    QWORD PTR [rsi+0x40],0x0
  40c4c5:	je     0x40c4d6
  40c4c7:	call   0x403720
  40c4cc:	test   eax,eax
  40c4ce:	mov    ebx,eax
  40c4d0:	jne    0x40c564
  40c4d6:	mov    rbx,QWORD PTR [rsi+0x50]
  40c4da:	xor    edx,edx
  40c4dc:	test   rbx,rbx
  40c4df:	jne    0x40c4e8
  40c4e1:	jmp    0x40c54f
  40c4e3:	test   rbx,rbx
  40c4e6:	je     0x40c502
  40c4e8:	lea    rdi,[rdx+0x1]
  40c4ec:	mov    rcx,rbx
  40c4ef:	call   0x40d250
  40c4f4:	test   eax,eax
  40c4f6:	mov    rbx,QWORD PTR [rbx+0x3e0]
  40c4fd:	mov    rdx,rdi
  40c500:	je     0x40c4e3
  40c502:	mov    rdx,QWORD PTR [rsi+0x50]
  40c506:	test   eax,eax
  40c508:	mov    ebx,eax
  40c50a:	mov    QWORD PTR [rsi+0x58],rdx
  40c50e:	jne    0x40c532
  40c510:	test   rdx,rdx
  40c513:	je     0x40c560
  40c515:	mov    rcx,rsi
  40c518:	call   0x4081c0
  40c51d:	mov    ebx,eax
  40c51f:	mov    rax,QWORD PTR [rsi+0x58]
  40c523:	test   ebx,ebx
  40c525:	mov    rdx,QWORD PTR [rax+0x3e0]
  40c52c:	mov    QWORD PTR [rsi+0x58],rdx
  40c530:	je     0x40c510
  40c532:	cmp    QWORD PTR [rsi+0x40],0x0
  40c537:	je     0x40c453
  40c53d:	call   0x403880
  40c542:	mov    rcx,rsi
  40c545:	call   0x4038c0
  40c54a:	jmp    0x40c453
  40c54f:	mov    QWORD PTR [rsi+0x58],0x0
  40c557:	nop    WORD PTR [rax+rax*1+0x0]
  40c560:	xor    ebx,ebx
  40c562:	jmp    0x40c532
  40c564:	mov    rcx,QWORD PTR [rsi+0x10]
  40c568:	lea    rdx,[rip+0x203ee]        # 0x42c95d
  40c56f:	call   0x408150
  40c574:	jmp    0x40c453
  40c579:	nop    DWORD PTR [rax+0x0]
  40c580:	call   0x4077a0
  40c585:	xor    ebx,ebx
  40c587:	jmp    0x40c453
  40c58c:	nop    DWORD PTR [rax+0x0]
  40c590:	call   0x407cd0
  40c595:	xor    ebx,ebx
  40c597:	jmp    0x40c453
  40c59c:	call   0x4077d0
  40c5a1:	xor    ebx,ebx
  40c5a3:	jmp    0x40c453
  40c5a8:	mov    rcx,QWORD PTR [rsi]
  40c5ab:	xor    ebx,ebx
  40c5ad:	call   0x4078c0
  40c5b2:	jmp    0x40c453
  40c5b7:	nop
  40c5b8:	nop
  40c5b9:	nop
  40c5ba:	nop
  40c5bb:	nop
  40c5bc:	nop
  40c5bd:	nop
  40c5be:	nop
  40c5bf:	nop
  40c5c0:	push   rdi
  40c5c1:	push   rsi
  40c5c2:	push   rbx
  40c5c3:	sub    rsp,0x20
  40c5c7:	mov    rbx,QWORD PTR [rcx+0x190]
  40c5ce:	mov    rdi,rcx
  40c5d1:	test   rbx,rbx
  40c5d4:	je     0x40c61e
  40c5d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c5e0:	mov    rcx,QWORD PTR [rbx+0x8]
  40c5e4:	mov    rsi,QWORD PTR [rbx]
  40c5e7:	call   0x416220
  40c5ec:	mov    rcx,QWORD PTR [rbx+0x10]
  40c5f0:	mov    QWORD PTR [rbx+0x8],0x0
  40c5f8:	call   0x416220
  40c5fd:	mov    rcx,QWORD PTR [rbx+0x18]
  40c601:	mov    QWORD PTR [rbx+0x10],0x0
  40c609:	call   0x416220
  40c60e:	mov    rcx,rbx
  40c611:	mov    rbx,rsi
  40c614:	call   0x416220
  40c619:	test   rsi,rsi
  40c61c:	jne    0x40c5e0
  40c61e:	mov    QWORD PTR [rdi+0x190],0x0
  40c629:	add    rsp,0x20
  40c62d:	pop    rbx
  40c62e:	pop    rsi
  40c62f:	pop    rdi
  40c630:	ret    
  40c631:	nop    DWORD PTR [rax+rax*1+0x0]
  40c636:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c640:	push   rsi
  40c641:	push   rbx
  40c642:	sub    rsp,0x28
  40c646:	test   rdx,rdx
  40c649:	je     0x40c66b
  40c64b:	mov    rdx,rcx
  40c64e:	mov    rbx,rcx
  40c651:	mov    r8d,0x7
  40c657:	lea    rcx,[rip+0x21782]        # 0x42dde0
  40c65e:	mov    rsi,QWORD PTR [rip+0x28fcb]        # 0x435630
  40c665:	call   rsi
  40c667:	test   eax,eax
  40c669:	je     0x40c680
  40c66b:	mov    eax,0x1
  40c670:	add    rsp,0x28
  40c674:	pop    rbx
  40c675:	pop    rsi
  40c676:	ret    
  40c677:	nop    WORD PTR [rax+rax*1+0x0]
  40c680:	mov    r8d,0x8
  40c686:	mov    rdx,rbx
  40c689:	lea    rcx,[rip+0x21758]        # 0x42dde8
  40c690:	call   rsi
  40c692:	test   eax,eax
  40c694:	setne  al
  40c697:	add    rsp,0x28
  40c69b:	pop    rbx
  40c69c:	pop    rsi
  40c69d:	ret    
  40c69e:	xchg   ax,ax
  40c6a0:	push   rdi
  40c6a1:	push   rsi
  40c6a2:	lea    rdi,[rip+0x21748]        # 0x42ddf1
  40c6a9:	mov    eax,0x1
  40c6ae:	mov    rdx,rcx
  40c6b1:	mov    ecx,0x2
  40c6b6:	mov    rsi,rdx
  40c6b9:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40c6bb:	seta   r8b
  40c6bf:	setb   cl
  40c6c2:	cmp    r8b,cl
  40c6c5:	je     0x40c6db
  40c6c7:	lea    rdi,[rip+0x21725]        # 0x42ddf3
  40c6ce:	mov    ecx,0x2
  40c6d3:	mov    rsi,rdx
  40c6d6:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40c6d8:	sete   al
  40c6db:	pop    rsi
  40c6dc:	pop    rdi
  40c6dd:	ret    
  40c6de:	xchg   ax,ax
  40c6e0:	push   r12
  40c6e2:	push   rbp
  40c6e3:	push   rdi
  40c6e4:	push   rsi
  40c6e5:	push   rbx
  40c6e6:	sub    rsp,0x20
  40c6ea:	mov    rbx,rdx
  40c6ed:	lea    rdx,[rip+0x21701]        # 0x42ddf5
  40c6f4:	mov    rbp,rcx
  40c6f7:	mov    rcx,rbx
  40c6fa:	mov    rdi,r8
  40c6fd:	call   0x416128
  40c702:	lea    r9,[rax+0x3]
  40c706:	test   rax,rax
  40c709:	mov    edx,0x2f
  40c70e:	mov    rcx,r9
  40c711:	cmove  rcx,rbx
  40c715:	call   0x416130
  40c71a:	test   rax,rax
  40c71d:	mov    rsi,rax
  40c720:	je     0x40c72f
  40c722:	cmp    BYTE PTR [rsi+0x1],0x0
  40c726:	mov    rax,rbx
  40c729:	jne    0x40c7a4
  40c72b:	add    rsi,0x1
  40c72f:	mov    edx,0x2f
  40c734:	mov    rcx,rdi
  40c737:	call   0x416130
  40c73c:	test   rax,rax
  40c73f:	mov    r12,rax
  40c742:	je     0x40c7b0
  40c744:	mov    edx,0x5c
  40c749:	mov    rcx,rax
  40c74c:	call   0x416130
  40c751:	test   rax,rax
  40c754:	je     0x40c7e0
  40c75a:	lea    rdi,[rax+0x1]
  40c75e:	xor    r8d,r8d
  40c761:	mov    rdx,rdi
  40c764:	mov    rcx,rbp
  40c767:	call   QWORD PTR [rip+0x28e03]        # 0x435570
  40c76d:	test   rax,rax
  40c770:	mov    rdi,rax
  40c773:	je     0x40c7f0
  40c775:	test   rsi,rsi
  40c778:	mov    r8,rax
  40c77b:	mov    rdx,rbx
  40c77e:	je     0x40c7c4
  40c780:	lea    rcx,[rip+0x21672]        # 0x42ddf9
  40c787:	call   QWORD PTR [rip+0x28e53]        # 0x4355e0
  40c78d:	mov    rsi,rax
  40c790:	mov    rcx,rdi
  40c793:	call   QWORD PTR [rip+0x28e1f]        # 0x4355b8
  40c799:	mov    rcx,rbx
  40c79c:	call   0x416220
  40c7a1:	mov    rax,rsi
  40c7a4:	add    rsp,0x20
  40c7a8:	pop    rbx
  40c7a9:	pop    rsi
  40c7aa:	pop    rdi
  40c7ab:	pop    rbp
  40c7ac:	pop    r12
  40c7ae:	ret    
  40c7af:	nop
  40c7b0:	mov    edx,0x5c
  40c7b5:	mov    rcx,rdi
  40c7b8:	call   0x416130
  40c7bd:	test   rax,rax
  40c7c0:	jne    0x40c75a
  40c7c2:	jmp    0x40c75e
  40c7c4:	lea    rcx,[rip+0x21633]        # 0x42ddfe
  40c7cb:	call   QWORD PTR [rip+0x28e0f]        # 0x4355e0
  40c7d1:	mov    rsi,rax
  40c7d4:	jmp    0x40c790
  40c7d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c7e0:	lea    rdi,[r12+0x1]
  40c7e5:	jmp    0x40c75e
  40c7ea:	nop    WORD PTR [rax+rax*1+0x0]
  40c7f0:	mov    rcx,rbx
  40c7f3:	call   0x416220
  40c7f8:	xor    eax,eax
  40c7fa:	jmp    0x40c7a4
  40c7fc:	nop    DWORD PTR [rax+0x0]
  40c800:	push   rdi
  40c801:	push   rsi
  40c802:	push   rbx
  40c803:	sub    rsp,0x30
  40c807:	mov    rsi,rdx
  40c80a:	lea    rdx,[rip+0x215e4]        # 0x42ddf5
  40c811:	mov    QWORD PTR [rcx],0x0
  40c818:	mov    rdi,rcx
  40c81b:	mov    rcx,rsi
  40c81e:	call   0x416128
  40c823:	lea    rdx,[rax+0x3]
  40c827:	test   rax,rax
  40c82a:	cmovne rsi,rdx
  40c82e:	mov    edx,0x5c
  40c833:	mov    rcx,rsi
  40c836:	call   0x416130
  40c83b:	mov    edx,0x2f
  40c840:	mov    rbx,rax
  40c843:	mov    rcx,rsi
  40c846:	call   0x416130
  40c84b:	test   rbx,rbx
  40c84e:	je     0x40c85a
  40c850:	cmp    rax,rbx
  40c853:	jb     0x40c869
  40c855:	test   rax,rax
  40c858:	je     0x40c869
  40c85a:	test   rax,rax
  40c85d:	lea    rcx,[rip+0x215a0]        # 0x42de04
  40c864:	je     0x40c86d
  40c866:	mov    rbx,rax
  40c869:	lea    rcx,[rbx+0x1]
  40c86d:	call   0x4160e8
  40c872:	mov    rdx,rax
  40c875:	mov    QWORD PTR [rdi],rax
  40c878:	mov    eax,0x1b
  40c87d:	test   rdx,rdx
  40c880:	je     0x40c8a9
  40c882:	lea    rcx,[rsp+0x28]
  40c887:	xor    r8d,r8d
  40c88a:	call   0x4032d0
  40c88f:	mov    rcx,QWORD PTR [rdi]
  40c892:	mov    ebx,eax
  40c894:	call   0x416220
  40c899:	test   ebx,ebx
  40c89b:	mov    QWORD PTR [rdi],0x0
  40c8a2:	mov    eax,0x3
  40c8a7:	je     0x40c8b1
  40c8a9:	add    rsp,0x30
  40c8ad:	pop    rbx
  40c8ae:	pop    rsi
  40c8af:	pop    rdi
  40c8b0:	ret    
  40c8b1:	mov    rax,QWORD PTR [rsp+0x28]
  40c8b6:	mov    QWORD PTR [rdi],rax
  40c8b9:	xor    eax,eax
  40c8bb:	add    rsp,0x30
  40c8bf:	pop    rbx
  40c8c0:	pop    rsi
  40c8c1:	pop    rdi
  40c8c2:	ret    
  40c8c3:	nop
  40c8c4:	nop
  40c8c5:	nop
  40c8c6:	nop
  40c8c7:	nop
  40c8c8:	nop
  40c8c9:	nop
  40c8ca:	nop
  40c8cb:	nop
  40c8cc:	nop
  40c8cd:	nop
  40c8ce:	nop
  40c8cf:	nop
  40c8d0:	push   r15
  40c8d2:	push   r14
  40c8d4:	push   r13
  40c8d6:	push   r12
  40c8d8:	push   rbp
  40c8d9:	push   rdi
  40c8da:	push   rsi
  40c8db:	push   rbx
  40c8dc:	sub    rsp,0x238
  40c8e3:	mov    rbx,QWORD PTR [r9]
  40c8e6:	mov    r14,rcx
  40c8e9:	mov    r13,rdx
  40c8ec:	mov    r15d,r8d
  40c8ef:	mov    rsi,r9
  40c8f2:	test   rbx,rbx
  40c8f5:	je     0x40ca44
  40c8fb:	mov    edx,0x3a
  40c900:	mov    rcx,rbx
  40c903:	call   0x416178
  40c908:	mov    edx,0x3b
  40c90d:	mov    rbp,rax
  40c910:	mov    rcx,rbx
  40c913:	call   0x416178
  40c918:	mov    r12,rax
  40c91b:	xor    eax,eax
  40c91d:	test   rbp,rbp
  40c920:	je     0x40c940
  40c922:	add    rsp,0x238
  40c929:	pop    rbx
  40c92a:	pop    rsi
  40c92b:	pop    rdi
  40c92c:	pop    rbp
  40c92d:	pop    r12
  40c92f:	pop    r13
  40c931:	pop    r14
  40c933:	pop    r15
  40c935:	ret    
  40c936:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c940:	cmp    BYTE PTR [rbx],0x3b
  40c943:	je     0x40c922
  40c945:	lea    rdi,[rsp+0x38]
  40c94a:	mov    rax,rbp
  40c94d:	mov    ecx,0x1f
  40c952:	mov    QWORD PTR [rsp+0x30],0x0
  40c95b:	rep stos QWORD PTR es:[rdi],rax
  40c95e:	mov    rcx,rbx
  40c961:	call   0x416150
  40c966:	test   r12,r12
  40c969:	mov    rbp,rax
  40c96c:	je     0x40c976
  40c96e:	mov    BYTE PTR [r12],0x0
  40c973:	mov    rbx,QWORD PTR [rsi]
  40c976:	test   r13,r13
  40c979:	lea    rdi,[rsp+0x130]
  40c981:	jne    0x40ca50
  40c987:	test   r15b,r15b
  40c98a:	je     0x40ca50
  40c990:	mov    QWORD PTR [rsp+0x20],rbx
  40c995:	mov    r9,r14
  40c998:	lea    r8,[rip+0x214a1]        # 0x42de40
  40c99f:	mov    edx,0x100
  40c9a4:	mov    rcx,rdi
  40c9a7:	call   QWORD PTR [rip+0x28c4b]        # 0x4355f8
  40c9ad:	lea    r13,[rsp+0x30]
  40c9b2:	mov    r8d,0x100
  40c9b8:	mov    rcx,rdi
  40c9bb:	mov    rdx,r13
  40c9be:	mov    rbx,r13
  40c9c1:	call   0x4076b0
  40c9c6:	mov    eax,DWORD PTR [rbx]
  40c9c8:	add    rbx,0x4
  40c9cc:	lea    ecx,[rax-0x1010101]
  40c9d2:	not    eax
  40c9d4:	and    ecx,eax
  40c9d6:	and    ecx,0x80808080
  40c9dc:	je     0x40c9c6
  40c9de:	mov    eax,ecx
  40c9e0:	shr    eax,0x10
  40c9e3:	test   ecx,0x8080
  40c9e9:	cmove  ecx,eax
  40c9ec:	lea    rax,[rbx+0x2]
  40c9f0:	cmove  rbx,rax
  40c9f4:	add    cl,cl
  40c9f6:	sbb    rbx,0x3
  40c9fa:	sub    rbx,r13
  40c9fd:	test   r12,r12
  40ca00:	je     0x40ca07
  40ca02:	mov    BYTE PTR [r12],0x3b
  40ca07:	mov    rcx,QWORD PTR [rsi]
  40ca0a:	lea    rdx,[rbx+rbp*1+0x2]
  40ca0f:	call   0x416198
  40ca14:	mov    rdi,rax
  40ca17:	mov    eax,0x1b
  40ca1c:	test   rdi,rdi
  40ca1f:	je     0x40c922
  40ca25:	lea    rcx,[rdi+rbp*1+0x1]
  40ca2a:	lea    r8,[rbx+0x1]
  40ca2e:	mov    BYTE PTR [rdi+rbp*1],0x3a
  40ca32:	mov    rdx,r13
  40ca35:	call   0x4161b8
  40ca3a:	mov    QWORD PTR [rsi],rdi
  40ca3d:	xor    eax,eax
  40ca3f:	jmp    0x40c922
  40ca44:	xor    eax,eax
  40ca46:	jmp    0x40c922
  40ca4b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ca50:	add    r13,0x1
  40ca54:	mov    QWORD PTR [rsp+0x20],rbx
  40ca59:	mov    r9,r14
  40ca5c:	mov    QWORD PTR [rsp+0x28],r13
  40ca61:	lea    r8,[rip+0x21400]        # 0x42de68
  40ca68:	mov    edx,0x100
  40ca6d:	mov    rcx,rdi
  40ca70:	call   QWORD PTR [rip+0x28b82]        # 0x4355f8
  40ca76:	jmp    0x40c9ad
  40ca7b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ca80:	push   rbp
  40ca81:	push   rdi
  40ca82:	push   rsi
  40ca83:	push   rbx
  40ca84:	sub    rsp,0x38
  40ca88:	mov    r8d,0xa
  40ca8e:	mov    rbx,rdx
  40ca91:	lea    rdx,[rsp+0x28]
  40ca96:	mov    rdi,rcx
  40ca99:	mov    rcx,rbx
  40ca9c:	call   0x416118
  40caa1:	mov    rsi,QWORD PTR [rsp+0x28]
  40caa6:	mov    ebp,eax
  40caa8:	cmp    rbx,rsi
  40caab:	je     0x40cabd
  40caad:	mov    rcx,rbx
  40cab0:	call   0x416150
  40cab5:	add    rbx,rax
  40cab8:	cmp    rsi,rbx
  40cabb:	je     0x40cad0
  40cabd:	mov    eax,0xa
  40cac2:	add    rsp,0x38
  40cac6:	pop    rbx
  40cac7:	pop    rsi
  40cac8:	pop    rdi
  40cac9:	pop    rbp
  40caca:	ret    
  40cacb:	nop    DWORD PTR [rax+rax*1+0x0]
  40cad0:	mov    DWORD PTR [rdi],ebp
  40cad2:	xor    eax,eax
  40cad4:	jmp    0x40cac2
  40cad6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cae0:	push   rdi
  40cae1:	push   rsi
  40cae2:	push   rbx
  40cae3:	sub    rsp,0x40
  40cae7:	movaps XMMWORD PTR [rsp+0x30],xmm6
  40caec:	mov    rbx,rdx
  40caef:	lea    rdx,[rsp+0x28]
  40caf4:	mov    rdi,rcx
  40caf7:	mov    rcx,rbx
  40cafa:	call   0x4118e0
  40caff:	mov    rsi,QWORD PTR [rsp+0x28]
  40cb04:	movapd xmm6,xmm0
  40cb08:	cmp    rbx,rsi
  40cb0b:	je     0x40cb1d
  40cb0d:	mov    rcx,rbx
  40cb10:	call   0x416150
  40cb15:	add    rbx,rax
  40cb18:	cmp    rsi,rbx
  40cb1b:	je     0x40cb30
  40cb1d:	mov    eax,0xa
  40cb22:	movaps xmm6,XMMWORD PTR [rsp+0x30]
  40cb27:	add    rsp,0x40
  40cb2b:	pop    rbx
  40cb2c:	pop    rsi
  40cb2d:	pop    rdi
  40cb2e:	ret    
  40cb2f:	nop
  40cb30:	movsd  QWORD PTR [rdi],xmm6
  40cb34:	xor    eax,eax
  40cb36:	jmp    0x40cb22
  40cb38:	nop    DWORD PTR [rax+rax*1+0x0]
  40cb40:	push   rbx
  40cb41:	sub    rsp,0x20
  40cb45:	mov    edx,0x28
  40cb4a:	mov    rbx,rcx
  40cb4d:	mov    ecx,0x1
  40cb52:	call   0x416270
  40cb57:	test   rax,rax
  40cb5a:	mov    rdx,QWORD PTR [rbx+0x198]
  40cb61:	je     0x40cb7b
  40cb63:	test   rdx,rdx
  40cb66:	je     0x40cb81
  40cb68:	mov    QWORD PTR [rdx],rax
  40cb6b:	mov    edx,DWORD PTR [rbx+0x388]
  40cb71:	mov    QWORD PTR [rbx+0x198],rax
  40cb78:	mov    DWORD PTR [rax+0x20],edx
  40cb7b:	add    rsp,0x20
  40cb7f:	pop    rbx
  40cb80:	ret    
  40cb81:	mov    QWORD PTR [rbx+0x190],rax
  40cb88:	jmp    0x40cb6b
  40cb8a:	nop    WORD PTR [rax+rax*1+0x0]
  40cb90:	push   r14
  40cb92:	push   r13
  40cb94:	push   r12
  40cb96:	push   rbp
  40cb97:	push   rdi
  40cb98:	push   rsi
  40cb99:	push   rbx
  40cb9a:	sub    rsp,0x120
  40cba1:	xor    ebp,ebp
  40cba3:	test   rdx,rdx
  40cba6:	mov    r13,rcx
  40cba9:	mov    r12,rdx
  40cbac:	je     0x40cc66
  40cbb2:	xor    edi,edi
  40cbb4:	xor    ebp,ebp
  40cbb6:	lea    rsi,[rsp+0x20]
  40cbbb:	jmp    0x40cc4d
  40cbc0:	mov    edx,0xd
  40cbc5:	mov    rcx,rsi
  40cbc8:	call   0x416178
  40cbcd:	test   rax,rax
  40cbd0:	je     0x40cbd5
  40cbd2:	mov    BYTE PTR [rax],0x0
  40cbd5:	mov    edx,0xa
  40cbda:	mov    rcx,rsi
  40cbdd:	call   0x416178
  40cbe2:	test   rax,rax
  40cbe5:	je     0x40cbea
  40cbe7:	mov    BYTE PTR [rax],0x0
  40cbea:	mov    r9,rsi
  40cbed:	mov    edx,DWORD PTR [r9]
  40cbf0:	add    r9,0x4
  40cbf4:	lea    eax,[rdx-0x1010101]
  40cbfa:	not    edx
  40cbfc:	and    eax,edx
  40cbfe:	and    eax,0x80808080
  40cc03:	je     0x40cbed
  40cc05:	mov    edx,eax
  40cc07:	mov    rcx,rbp
  40cc0a:	shr    edx,0x10
  40cc0d:	test   eax,0x8080
  40cc12:	cmove  eax,edx
  40cc15:	lea    rdx,[r9+0x2]
  40cc19:	cmove  r9,rdx
  40cc1d:	add    al,al
  40cc1f:	sbb    r9,0x3
  40cc23:	sub    r9,rsi
  40cc26:	lea    rbx,[r9+rdi*1]
  40cc2a:	lea    rdx,[rbx+0x1]
  40cc2e:	call   0x416198
  40cc33:	test   rax,rax
  40cc36:	mov    r14,rax
  40cc39:	je     0x40cc80
  40cc3b:	lea    rcx,[rax+rdi*1]
  40cc3f:	mov    rdx,rsi
  40cc42:	mov    rdi,rbx
  40cc45:	mov    rbp,r14
  40cc48:	call   0x416168
  40cc4d:	mov    r8,r12
  40cc50:	mov    edx,0x100
  40cc55:	mov    rcx,rsi
  40cc58:	call   0x416250
  40cc5d:	test   rax,rax
  40cc60:	jne    0x40cbc0
  40cc66:	mov    QWORD PTR [r13+0x0],rbp
  40cc6a:	xor    eax,eax
  40cc6c:	add    rsp,0x120
  40cc73:	pop    rbx
  40cc74:	pop    rsi
  40cc75:	pop    rdi
  40cc76:	pop    rbp
  40cc77:	pop    r12
  40cc79:	pop    r13
  40cc7b:	pop    r14
  40cc7d:	ret    
  40cc7e:	xchg   ax,ax
  40cc80:	mov    rcx,rbp
  40cc83:	call   0x416220
  40cc88:	mov    eax,0xe
  40cc8d:	jmp    0x40cc6c
  40cc8f:	nop
  40cc90:	push   r13
  40cc92:	push   r12
  40cc94:	push   rbp
  40cc95:	push   rdi
  40cc96:	push   rsi
  40cc97:	push   rbx
  40cc98:	sub    rsp,0x28
  40cc9c:	xor    ebx,ebx
  40cc9e:	test   r8,r8
  40cca1:	mov    r12,rcx
  40cca4:	mov    r13,rdx
  40cca7:	mov    rbp,r8
  40ccaa:	je     0x40cd60
  40ccb0:	mov    esi,0x200
  40ccb5:	xor    edi,edi
  40ccb7:	nop    WORD PTR [rax+rax*1+0x0]
  40ccc0:	cmp    rsi,rbx
  40ccc3:	je     0x40ccca
  40ccc5:	test   rdi,rdi
  40ccc8:	jne    0x40ccea
  40ccca:	mov    rax,rsi
  40cccd:	add    rax,0x1
  40ccd1:	js     0x40cd42
  40ccd3:	add    rsi,rsi
  40ccd6:	mov    rcx,rdi
  40ccd9:	lea    rdx,[rsi+0x1]
  40ccdd:	call   0x416198
  40cce2:	test   rax,rax
  40cce5:	je     0x40cd42
  40cce7:	mov    rdi,rax
  40ccea:	lea    rcx,[rdi+rbx*1]
  40ccee:	mov    r8,rsi
  40ccf1:	mov    r9,rbp
  40ccf4:	sub    r8,rbx
  40ccf7:	mov    edx,0x1
  40ccfc:	call   0x416228
  40cd01:	add    rbx,rax
  40cd04:	test   rax,rax
  40cd07:	jne    0x40ccc0
  40cd09:	cmp    rbx,rsi
  40cd0c:	mov    rax,rdi
  40cd0f:	mov    BYTE PTR [rdi+rbx*1],0x0
  40cd13:	je     0x40cd26
  40cd15:	lea    rdx,[rbx+0x1]
  40cd19:	mov    rcx,rdi
  40cd1c:	call   0x416198
  40cd21:	test   rax,rax
  40cd24:	je     0x40cd42
  40cd26:	test   rbx,rbx
  40cd29:	je     0x40cd64
  40cd2b:	mov    QWORD PTR [r13+0x0],rbx
  40cd2f:	mov    QWORD PTR [r12],rax
  40cd33:	xor    eax,eax
  40cd35:	add    rsp,0x28
  40cd39:	pop    rbx
  40cd3a:	pop    rsi
  40cd3b:	pop    rdi
  40cd3c:	pop    rbp
  40cd3d:	pop    r12
  40cd3f:	pop    r13
  40cd41:	ret    
  40cd42:	mov    rcx,rdi
  40cd45:	call   0x416220
  40cd4a:	mov    eax,0xe
  40cd4f:	add    rsp,0x28
  40cd53:	pop    rbx
  40cd54:	pop    rsi
  40cd55:	pop    rdi
  40cd56:	pop    rbp
  40cd57:	pop    r12
  40cd59:	pop    r13
  40cd5b:	ret    
  40cd5c:	nop    DWORD PTR [rax+0x0]
  40cd60:	xor    eax,eax
  40cd62:	jmp    0x40cd2b
  40cd64:	mov    rcx,rax
  40cd67:	call   0x416220
  40cd6c:	xor    eax,eax
  40cd6e:	jmp    0x40cd2b
  40cd70:	ret    
  40cd71:	nop    DWORD PTR [rax+rax*1+0x0]
  40cd76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cd80:	test   rdx,rdx
  40cd83:	je     0x40cd90
  40cd85:	jmp    0x40ca80
  40cd8a:	nop    WORD PTR [rax+rax*1+0x0]
  40cd90:	mov    eax,0xa
  40cd95:	ret    
  40cd96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cda0:	push   rbx
  40cda1:	sub    rsp,0x20
  40cda5:	mov    eax,0xa
  40cdaa:	test   rdx,rdx
  40cdad:	je     0x40cdc7
  40cdaf:	mov    rbx,rcx
  40cdb2:	call   0x40ca80
  40cdb7:	test   eax,eax
  40cdb9:	jne    0x40cdc7
  40cdbb:	mov    edx,DWORD PTR [rbx]
  40cdbd:	test   edx,edx
  40cdbf:	mov    edx,0xb
  40cdc4:	cmovs  eax,edx
  40cdc7:	add    rsp,0x20
  40cdcb:	pop    rbx
  40cdcc:	ret    
  40cdcd:	nop    DWORD PTR [rax]
  40cdd0:	test   rdx,rdx
  40cdd3:	je     0x40cde0
  40cdd5:	jmp    0x40cae0
  40cdda:	nop    WORD PTR [rax+rax*1+0x0]
  40cde0:	mov    eax,0xa
  40cde5:	ret    
  40cde6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cdf0:	push   rbx
  40cdf1:	sub    rsp,0x20
  40cdf5:	mov    eax,0xa
  40cdfa:	test   rdx,rdx
  40cdfd:	je     0x40ce1b
  40cdff:	mov    rbx,rcx
  40ce02:	call   0x40cae0
  40ce07:	test   eax,eax
  40ce09:	jne    0x40ce1b
  40ce0b:	pxor   xmm0,xmm0
  40ce0f:	mov    edx,0xb
  40ce14:	ucomisd xmm0,QWORD PTR [rbx]
  40ce18:	cmova  eax,edx
  40ce1b:	add    rsp,0x20
  40ce1f:	pop    rbx
  40ce20:	ret    
  40ce21:	nop    DWORD PTR [rax+rax*1+0x0]
  40ce26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ce30:	push   r15
  40ce32:	push   r14
  40ce34:	push   r13
  40ce36:	push   r12
  40ce38:	push   rbp
  40ce39:	push   rdi
  40ce3a:	push   rsi
  40ce3b:	push   rbx
  40ce3c:	sub    rsp,0x28
  40ce40:	test   r8,r8
  40ce43:	je     0x40ceb1
  40ce45:	mov    r13,rcx
  40ce48:	mov    rcx,r8
  40ce4b:	mov    r12,rdx
  40ce4e:	call   0x4160e8
  40ce53:	test   rax,rax
  40ce56:	mov    rbp,rax
  40ce59:	je     0x40ceb1
  40ce5b:	lea    rdx,[rip+0x21039]        # 0x42de9b
  40ce62:	mov    rcx,rax
  40ce65:	call   0x416120
  40ce6a:	test   rax,rax
  40ce6d:	mov    rsi,rax
  40ce70:	mov    rdi,QWORD PTR [rip+0x28a39]        # 0x4358b0
  40ce77:	mov    r15,QWORD PTR [rip+0x287aa]        # 0x435628
  40ce7e:	je     0x40cf60
  40ce84:	xor    r14d,r14d
  40ce87:	movzx  ecx,BYTE PTR [rsi]
  40ce8a:	mov    ebx,ecx
  40ce8c:	call   rdi
  40ce8e:	test   eax,eax
  40ce90:	jne    0x40cee1
  40ce92:	add    rsi,0x1
  40ce96:	cmp    bl,0x2d
  40ce99:	je     0x40cf70
  40ce9f:	cmp    bl,0x3d
  40cea2:	je     0x40ced0
  40cea4:	cmp    bl,0x2b
  40cea7:	je     0x40ce84
  40cea9:	mov    rcx,rbp
  40ceac:	call   0x416220
  40ceb1:	mov    eax,0x1
  40ceb6:	add    rsp,0x28
  40ceba:	pop    rbx
  40cebb:	pop    rsi
  40cebc:	pop    rdi
  40cebd:	pop    rbp
  40cebe:	pop    r12
  40cec0:	pop    r13
  40cec2:	pop    r14
  40cec4:	pop    r15
  40cec6:	ret    
  40cec7:	nop    WORD PTR [rax+rax*1+0x0]
  40ced0:	movzx  ecx,BYTE PTR [rsi]
  40ced3:	mov    r14d,0x2
  40ced9:	mov    ebx,ecx
  40cedb:	call   rdi
  40cedd:	test   eax,eax
  40cedf:	je     0x40ce92
  40cee1:	lea    rdx,[rip+0x20faf]        # 0x42de97
  40cee8:	lea    rbx,[rip+0x21151]        # 0x42e040
  40ceef:	jmp    0x40cf01
  40cef1:	add    rbx,0x10
  40cef5:	mov    rdx,QWORD PTR [rbx]
  40cef8:	test   rdx,rdx
  40cefb:	je     0x40cf90
  40cf01:	mov    rcx,rsi
  40cf04:	call   r15
  40cf07:	test   eax,eax
  40cf09:	je     0x40cef1
  40cf0b:	cmp    r14d,0x1
  40cf0f:	je     0x40cf98
  40cf15:	cmp    r14d,0x2
  40cf19:	jne    0x40cf7b
  40cf1b:	cmp    QWORD PTR [rbx],0x0
  40cf1f:	mov    eax,DWORD PTR [rbx+0x8]
  40cf22:	mov    DWORD PTR [r12],eax
  40cf26:	jne    0x40cf46
  40cf28:	mov    DWORD PTR [r12],0x0
  40cf30:	mov    rcx,QWORD PTR [r13+0x3d0]
  40cf37:	lea    rdx,[rip+0x20f5f]        # 0x42de9d
  40cf3e:	mov    r8,rsi
  40cf41:	call   0x408110
  40cf46:	lea    rdx,[rip+0x20f4e]        # 0x42de9b
  40cf4d:	xor    ecx,ecx
  40cf4f:	call   0x416120
  40cf54:	test   rax,rax
  40cf57:	mov    rsi,rax
  40cf5a:	jne    0x40ce84
  40cf60:	mov    rcx,rbp
  40cf63:	call   0x416220
  40cf68:	xor    eax,eax
  40cf6a:	jmp    0x40ceb6
  40cf6f:	nop
  40cf70:	mov    r14d,0x1
  40cf76:	jmp    0x40ce87
  40cf7b:	mov    eax,DWORD PTR [rbx+0x8]
  40cf7e:	or     DWORD PTR [r12],eax
  40cf82:	cmp    QWORD PTR [rbx],0x0
  40cf86:	jne    0x40cf46
  40cf88:	nop    DWORD PTR [rax+rax*1+0x0]
  40cf90:	cmp    r14d,0x2
  40cf94:	jne    0x40cf30
  40cf96:	jmp    0x40cf28
  40cf98:	mov    eax,DWORD PTR [rbx+0x8]
  40cf9b:	not    eax
  40cf9d:	and    DWORD PTR [r12],eax
  40cfa1:	cmp    QWORD PTR [rbx],0x0
  40cfa5:	jne    0x40cf46
  40cfa7:	jmp    0x40cf30
  40cfa9:	nop    DWORD PTR [rax+0x0]
  40cfb0:	push   rdi
  40cfb1:	push   rsi
  40cfb2:	push   rbx
  40cfb3:	sub    rsp,0x20
  40cfb7:	mov    rsi,rcx
  40cfba:	mov    ecx,0x3
  40cfbf:	call   QWORD PTR [rip+0x2867b]        # 0x435640
  40cfc5:	test   rsi,rsi
  40cfc8:	mov    edx,0x3
  40cfcd:	je     0x40cffb
  40cfcf:	mov    rbx,QWORD PTR [rax+0x40]
  40cfd3:	mov    rdi,QWORD PTR [rip+0x2864e]        # 0x435628
  40cfda:	mov    rcx,QWORD PTR [rbx]
  40cfdd:	test   rcx,rcx
  40cfe0:	jne    0x40cff0
  40cfe2:	jmp    0x40d005
  40cfe4:	add    rbx,0x8
  40cfe8:	mov    rcx,QWORD PTR [rbx]
  40cfeb:	test   rcx,rcx
  40cfee:	je     0x40d005
  40cff0:	mov    rdx,rsi
  40cff3:	call   rdi
  40cff5:	test   eax,eax
  40cff7:	je     0x40cfe4
  40cff9:	xor    edx,edx
  40cffb:	mov    eax,edx
  40cffd:	add    rsp,0x20
  40d001:	pop    rbx
  40d002:	pop    rsi
  40d003:	pop    rdi
  40d004:	ret    
  40d005:	mov    edx,0xd
  40d00a:	mov    eax,edx
  40d00c:	add    rsp,0x20
  40d010:	pop    rbx
  40d011:	pop    rsi
  40d012:	pop    rdi
  40d013:	ret    
  40d014:	xchg   ax,ax
  40d016:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d020:	push   rsi
  40d021:	push   rbx
  40d022:	sub    rsp,0x38
  40d026:	cmp    BYTE PTR [rdx],0x2d
  40d029:	mov    eax,0xb
  40d02e:	jne    0x40d040
  40d030:	add    rsp,0x38
  40d034:	pop    rbx
  40d035:	pop    rsi
  40d036:	ret    
  40d037:	nop    WORD PTR [rax+rax*1+0x0]
  40d040:	mov    rbx,rdx
  40d043:	lea    rdx,[rsp+0x28]
  40d048:	mov    rsi,rcx
  40d04b:	xor    r8d,r8d
  40d04e:	mov    rcx,rbx
  40d051:	call   0x411c70
  40d056:	movabs rdx,0x7fffffffffffffff
  40d060:	mov    QWORD PTR [rsi],rax
  40d063:	add    rax,rdx
  40d066:	cmp    rax,0xfffffffffffffffd
  40d06a:	ja     0x40d0a0
  40d06c:	mov    rsi,QWORD PTR [rsp+0x28]
  40d071:	mov    eax,0xa
  40d076:	cmp    rsi,rbx
  40d079:	je     0x40d030
  40d07b:	mov    rcx,rbx
  40d07e:	call   0x416150
  40d083:	lea    rdx,[rbx+rax*1]
  40d087:	mov    eax,0xa
  40d08c:	cmp    rsi,rdx
  40d08f:	mov    edx,0x0
  40d094:	cmove  eax,edx
  40d097:	add    rsp,0x38
  40d09b:	pop    rbx
  40d09c:	pop    rsi
  40d09d:	ret    
  40d09e:	xchg   ax,ax
  40d0a0:	call   QWORD PTR [rip+0x2861a]        # 0x4356c0
  40d0a6:	mov    edx,eax
  40d0a8:	mov    eax,0xa
  40d0ad:	cmp    edx,0x22
  40d0b0:	jne    0x40d06c
  40d0b2:	jmp    0x40d030
  40d0b7:	nop    WORD PTR [rax+rax*1+0x0]
  40d0c0:	push   rbx
  40d0c1:	sub    rsp,0x20
  40d0c5:	mov    rbx,rcx
  40d0c8:	mov    rcx,QWORD PTR [rcx]
  40d0cb:	call   QWORD PTR [rip+0x28547]        # 0x435618
  40d0d1:	test   rax,rax
  40d0d4:	mov    edx,0xe
  40d0d9:	je     0x40d0e0
  40d0db:	mov    QWORD PTR [rbx],rax
  40d0de:	xor    dl,dl
  40d0e0:	mov    eax,edx
  40d0e2:	add    rsp,0x20
  40d0e6:	pop    rbx
  40d0e7:	ret    
  40d0e8:	nop    DWORD PTR [rax+rax*1+0x0]
  40d0f0:	push   rbp
  40d0f1:	push   rdi
  40d0f2:	push   rsi
  40d0f3:	push   rbx
  40d0f4:	sub    rsp,0x28
  40d0f8:	mov    rdi,QWORD PTR [rip+0x28529]        # 0x435628
  40d0ff:	mov    esi,0x3
  40d104:	mov    rbp,rcx
  40d107:	mov    rbx,rdx
  40d10a:	lea    rcx,[rip+0x20da8]        # 0x42deb9
  40d111:	call   rdi
  40d113:	test   eax,eax
  40d115:	je     0x40d122
  40d117:	mov    eax,esi
  40d119:	add    rsp,0x28
  40d11d:	pop    rbx
  40d11e:	pop    rsi
  40d11f:	pop    rdi
  40d120:	pop    rbp
  40d121:	ret    
  40d122:	mov    rdx,rbx
  40d125:	lea    rcx,[rip+0x20d97]        # 0x42dec3
  40d12c:	mov    sil,0x2
  40d12f:	call   rdi
  40d131:	test   eax,eax
  40d133:	jne    0x40d117
  40d135:	mov    rdx,rbx
  40d138:	lea    rcx,[rip+0x20d8a]        # 0x42dec9
  40d13f:	mov    sil,0x1
  40d142:	call   rdi
  40d144:	test   eax,eax
  40d146:	jne    0x40d117
  40d148:	mov    rcx,QWORD PTR [rbp+0x3d0]
  40d14f:	lea    rdx,[rip+0x20d82]        # 0x42ded8
  40d156:	mov    r8,rbx
  40d159:	call   0x408110
  40d15e:	jmp    0x40d117
  40d160:	push   rdi
  40d161:	push   rsi
  40d162:	push   rbx
  40d163:	sub    rsp,0x20
  40d167:	mov    rsi,QWORD PTR [rip+0x284ba]        # 0x435628
  40d16e:	mov    rdi,rcx
  40d171:	mov    rbx,rdx
  40d174:	lea    rcx,[rip+0x20d8f]        # 0x42df0a
  40d17b:	call   rsi
  40d17d:	test   eax,eax
  40d17f:	mov    r9d,0x1
  40d185:	je     0x40d192
  40d187:	mov    eax,r9d
  40d18a:	add    rsp,0x20
  40d18e:	pop    rbx
  40d18f:	pop    rsi
  40d190:	pop    rdi
  40d191:	ret    
  40d192:	mov    rdx,rbx
  40d195:	lea    rcx,[rip+0x20d76]        # 0x42df12
  40d19c:	call   rsi
  40d19e:	test   eax,eax
  40d1a0:	mov    r9d,0x2
  40d1a6:	jne    0x40d187
  40d1a8:	mov    rcx,QWORD PTR [rdi+0x3d0]
  40d1af:	lea    rdx,[rip+0x20d6a]        # 0x42df20
  40d1b6:	mov    r8,rbx
  40d1b9:	call   0x408110
  40d1be:	mov    r9d,0x1
  40d1c4:	jmp    0x40d187
  40d1c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d1d0:	push   rdi
  40d1d1:	push   rsi
  40d1d2:	push   rbx
  40d1d3:	sub    rsp,0x20
  40d1d7:	mov    rsi,QWORD PTR [rip+0x2844a]        # 0x435628
  40d1de:	mov    rdi,rcx
  40d1e1:	mov    rbx,rdx
  40d1e4:	lea    rcx,[rip+0x20d66]        # 0x42df51
  40d1eb:	call   rsi
  40d1ed:	xor    r9d,r9d
  40d1f0:	test   eax,eax
  40d1f2:	je     0x40d200
  40d1f4:	mov    eax,r9d
  40d1f7:	add    rsp,0x20
  40d1fb:	pop    rbx
  40d1fc:	pop    rsi
  40d1fd:	pop    rdi
  40d1fe:	ret    
  40d1ff:	nop
  40d200:	mov    rdx,rbx
  40d203:	lea    rcx,[rip+0x20d4c]        # 0x42df56
  40d20a:	call   rsi
  40d20c:	test   eax,eax
  40d20e:	mov    r9d,0x1
  40d214:	jne    0x40d1f4
  40d216:	mov    rdx,rbx
  40d219:	lea    rcx,[rip+0x20d3d]        # 0x42df5d
  40d220:	call   rsi
  40d222:	test   eax,eax
  40d224:	mov    r9d,0x2
  40d22a:	jne    0x40d1f4
  40d22c:	mov    rcx,QWORD PTR [rdi+0x3d0]
  40d233:	lea    rdx,[rip+0x20d2e]        # 0x42df68
  40d23a:	mov    r8,rbx
  40d23d:	call   0x408110
  40d242:	xor    r9d,r9d
  40d245:	jmp    0x40d1f4
  40d247:	nop    WORD PTR [rax+rax*1+0x0]
  40d250:	push   rdi
  40d251:	push   rsi
  40d252:	push   rbx
  40d253:	sub    rsp,0x20
  40d257:	cmp    QWORD PTR [rcx+0x3e0],0x0
  40d25f:	mov    rbx,rcx
  40d262:	mov    rsi,rdx
  40d265:	sete   dil
  40d269:	cmp    QWORD PTR [rcx+0x100],0x0
  40d271:	je     0x40d27d
  40d273:	cmp    QWORD PTR [rcx+0x3a8],0x0
  40d27b:	je     0x40d2c0
  40d27d:	cmp    QWORD PTR [rbx+0x140],0x0
  40d285:	je     0x40d2a8
  40d287:	lea    r9,[rbx+0x140]
  40d28e:	mov    r8d,edi
  40d291:	lea    rcx,[rip+0x20d06]        # 0x42df9e
  40d298:	and    r8d,0x1
  40d29c:	mov    rdx,rsi
  40d29f:	call   0x40c8d0
  40d2a4:	test   eax,eax
  40d2a6:	jne    0x40d2b1
  40d2a8:	cmp    QWORD PTR [rbx+0x20],0x0
  40d2ad:	je     0x40d2e0
  40d2af:	xor    eax,eax
  40d2b1:	add    rsp,0x20
  40d2b5:	pop    rbx
  40d2b6:	pop    rsi
  40d2b7:	pop    rdi
  40d2b8:	ret    
  40d2b9:	nop    DWORD PTR [rax+0x0]
  40d2c0:	lea    r9,[rcx+0x100]
  40d2c7:	mov    r8d,edi
  40d2ca:	lea    rcx,[rip+0x20cc8]        # 0x42df99
  40d2d1:	and    r8d,0x1
  40d2d5:	call   0x40c8d0
  40d2da:	test   eax,eax
  40d2dc:	je     0x40d27d
  40d2de:	jmp    0x40d2b1
  40d2e0:	lea    rcx,[rip+0x20cbd]        # 0x42dfa4
  40d2e7:	call   0x4160e8
  40d2ec:	test   rax,rax
  40d2ef:	mov    QWORD PTR [rbx+0x20],rax
  40d2f3:	jne    0x40d2af
  40d2f5:	mov    rax,QWORD PTR [rbx+0x3d0]
  40d2fc:	lea    rdx,[rip+0x20cad]        # 0x42dfb0
  40d303:	mov    rcx,QWORD PTR [rax+0x10]
  40d307:	call   0x408150
  40d30c:	mov    eax,0x1b
  40d311:	jmp    0x40d2b1
  40d313:	nop
  40d314:	nop
  40d315:	nop
  40d316:	nop
  40d317:	nop
  40d318:	nop
  40d319:	nop
  40d31a:	nop
  40d31b:	nop
  40d31c:	nop
  40d31d:	nop
  40d31e:	nop
  40d31f:	nop
  40d320:	push   r15
  40d322:	push   r14
  40d324:	mov    eax,0x1268
  40d329:	push   r13
  40d32b:	push   r12
  40d32d:	push   rbp
  40d32e:	push   rdi
  40d32f:	push   rsi
  40d330:	push   rbx
  40d331:	call   0x4118a0
  40d336:	sub    rsp,rax
  40d339:	mov    r15,QWORD PTR [rdx+0x50]
  40d33d:	test   rcx,rcx
  40d340:	mov    QWORD PTR [rsp+0x12b0],rcx
  40d348:	mov    QWORD PTR [rsp+0x12b8],rdx
  40d350:	je     0x40d4db
  40d356:	cmp    BYTE PTR [rcx],0x0
  40d359:	je     0x40d4db
  40d35f:	mov    rsi,QWORD PTR [rsp+0x12b0]
  40d367:	lea    rdi,[rip+0x20e73]        # 0x42e1e1
  40d36e:	mov    ecx,0x2
  40d373:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40d375:	jne    0x40d983
  40d37b:	call   QWORD PTR [rip+0x2841f]        # 0x4357a0
  40d381:	mov    r14,rax
  40d384:	test   r14,r14
  40d387:	je     0x40d9a3
  40d38d:	lea    rax,[rsp+0x5f]
  40d392:	mov    rbp,QWORD PTR [rip+0x28537]        # 0x4358d0
  40d399:	lea    r13,[rsp+0x260]
  40d3a1:	mov    DWORD PTR [rsp+0x40],0x0
  40d3a9:	mov    QWORD PTR [rsp+0x48],rax
  40d3ae:	xchg   ax,ax
  40d3b0:	xor    ebx,ebx
  40d3b2:	jmp    0x40d474
  40d3b7:	nop    WORD PTR [rax+rax*1+0x0]
  40d3c0:	mov    eax,DWORD PTR [rsi]
  40d3c2:	add    rsi,0x4
  40d3c6:	lea    r9d,[rax-0x1010101]
  40d3cd:	not    eax
  40d3cf:	and    r9d,eax
  40d3d2:	and    r9d,0x80808080
  40d3d9:	je     0x40d3c0
  40d3db:	mov    eax,r9d
  40d3de:	mov    rdx,r13
  40d3e1:	shr    eax,0x10
  40d3e4:	test   r9d,0x8080
  40d3eb:	cmove  r9d,eax
  40d3ef:	lea    rax,[rsi+0x2]
  40d3f3:	cmove  rsi,rax
  40d3f7:	add    r9b,r9b
  40d3fa:	sbb    rsi,0x3
  40d3fe:	sub    rsi,rbx
  40d401:	mov    ecx,DWORD PTR [rdx]
  40d403:	add    rdx,0x4
  40d407:	lea    eax,[rcx-0x1010101]
  40d40d:	not    ecx
  40d40f:	and    eax,ecx
  40d411:	and    eax,0x80808080
  40d416:	je     0x40d401
  40d418:	mov    ecx,eax
  40d41a:	shr    ecx,0x10
  40d41d:	test   eax,0x8080
  40d422:	cmove  eax,ecx
  40d425:	lea    rcx,[rdx+0x2]
  40d429:	cmove  rdx,rcx
  40d42d:	add    al,al
  40d42f:	mov    rcx,rbx
  40d432:	sbb    rdx,0x3
  40d436:	sub    rdx,r13
  40d439:	lea    rdx,[rsi+rdx*1+0x1]
  40d43e:	call   0x416198
  40d443:	test   rax,rax
  40d446:	mov    rdi,rax
  40d449:	je     0x40d7b8
  40d44f:	lea    rcx,[rax+rsi*1]
  40d453:	mov    rdx,r13
  40d456:	mov    rbx,rdi
  40d459:	call   0x416168
  40d45e:	mov    edx,0xa
  40d463:	mov    rcx,rbx
  40d466:	call   0x416178
  40d46b:	test   rax,rax
  40d46e:	jne    0x40d7b0
  40d474:	mov    r8,r14
  40d477:	mov    edx,0x1000
  40d47c:	mov    rcx,r13
  40d47f:	call   0x416250
  40d484:	test   rax,rax
  40d487:	je     0x40d520
  40d48d:	test   rbx,rbx
  40d490:	mov    rsi,rbx
  40d493:	jne    0x40d3c0
  40d499:	mov    rcx,r13
  40d49c:	call   0x4160e8
  40d4a1:	test   rax,rax
  40d4a4:	mov    rbx,rax
  40d4a7:	jne    0x40d45e
  40d4a9:	nop    DWORD PTR [rax+0x0]
  40d4b0:	xor    ebx,ebx
  40d4b2:	call   QWORD PTR [rip+0x282e8]        # 0x4357a0
  40d4b8:	cmp    rax,r14
  40d4bb:	je     0x40d4c5
  40d4bd:	mov    rcx,r14
  40d4c0:	call   0x416260
  40d4c5:	mov    eax,ebx
  40d4c7:	add    rsp,0x1268
  40d4ce:	pop    rbx
  40d4cf:	pop    rsi
  40d4d0:	pop    rdi
  40d4d1:	pop    rbp
  40d4d2:	pop    r12
  40d4d4:	pop    r13
  40d4d6:	pop    r14
  40d4d8:	pop    r15
  40d4da:	ret    
  40d4db:	call   0x407c50
  40d4e0:	test   rax,rax
  40d4e3:	mov    rsi,rax
  40d4e6:	je     0x40d974
  40d4ec:	mov    rcx,rax
  40d4ef:	call   0x416150
  40d4f4:	cmp    rax,0x1f8
  40d4fa:	jbe    0x40d9ad
  40d500:	lea    rax,[rip+0x20cb9]        # 0x42e1c0
  40d507:	mov    QWORD PTR [rsp+0x12b0],rax
  40d50f:	mov    rcx,rsi
  40d512:	call   0x416220
  40d517:	jmp    0x40d35f
  40d51c:	nop    DWORD PTR [rax+0x0]
  40d520:	test   rbx,rbx
  40d523:	je     0x40d4b2
  40d525:	movzx  edi,BYTE PTR [rbx]
  40d528:	add    DWORD PTR [rsp+0x40],0x1
  40d52d:	mov    rsi,rbx
  40d530:	test   dil,dil
  40d533:	jne    0x40d550
  40d535:	jmp    0x40d627
  40d53a:	nop    WORD PTR [rax+rax*1+0x0]
  40d540:	add    rsi,0x1
  40d544:	movzx  edi,BYTE PTR [rsi]
  40d547:	test   dil,dil
  40d54a:	je     0x40d627
  40d550:	movzx  ecx,dil
  40d554:	call   rbp
  40d556:	test   eax,eax
  40d558:	jne    0x40d540
  40d55a:	cmp    dil,0x2f
  40d55e:	mov    QWORD PTR [rsp+0x38],rsi
  40d563:	jbe    0x40dae0
  40d569:	movzx  r12d,BYTE PTR [rsi]
  40d56d:	cmp    dil,0x2d
  40d571:	sete   dil
  40d575:	test   r12b,r12b
  40d578:	jne    0x40d59e
  40d57a:	jmp    0x40d5e9
  40d57c:	nop    DWORD PTR [rax+0x0]
  40d580:	test   dil,dil
  40d583:	jne    0x40d591
  40d585:	cmp    r12b,0x3a
  40d589:	je     0x40d5a8
  40d58b:	cmp    r12b,0x3d
  40d58f:	je     0x40d5a8
  40d591:	add    rsi,0x1
  40d595:	movzx  r12d,BYTE PTR [rsi]
  40d599:	test   r12b,r12b
  40d59c:	je     0x40d5e9
  40d59e:	movzx  ecx,r12b
  40d5a2:	call   rbp
  40d5a4:	test   eax,eax
  40d5a6:	je     0x40d580
  40d5a8:	lea    r12,[rsi+0x1]
  40d5ac:	mov    BYTE PTR [rsi],0x0
  40d5af:	movzx  esi,BYTE PTR [rsi+0x1]
  40d5b3:	test   sil,sil
  40d5b6:	je     0x40d5e9
  40d5b8:	nop    DWORD PTR [rax+rax*1+0x0]
  40d5c0:	movzx  ecx,sil
  40d5c4:	call   rbp
  40d5c6:	test   eax,eax
  40d5c8:	jne    0x40d5db
  40d5ca:	test   dil,dil
  40d5cd:	jne    0x40d634
  40d5cf:	cmp    sil,0x3a
  40d5d3:	je     0x40d5db
  40d5d5:	cmp    sil,0x3d
  40d5d9:	jne    0x40d634
  40d5db:	add    r12,0x1
  40d5df:	movzx  esi,BYTE PTR [r12]
  40d5e4:	test   sil,sil
  40d5e7:	jne    0x40d5c0
  40d5e9:	mov    r9,QWORD PTR [rsp+0x12b8]
  40d5f1:	mov    r8,QWORD PTR [rsp+0x48]
  40d5f6:	xor    edx,edx
  40d5f8:	mov    rcx,QWORD PTR [rsp+0x38]
  40d5fd:	mov    QWORD PTR [rsp+0x20],r15
  40d602:	xor    r12d,r12d
  40d605:	call   0x404450
  40d60a:	xor    r10d,r10d
  40d60d:	cmp    eax,0xf
  40d610:	je     0x40d7c5
  40d616:	test   eax,eax
  40d618:	jne    0x40d850
  40d61e:	test   r10b,r10b
  40d621:	jne    0x40d7a0
  40d627:	mov    rcx,rbx
  40d62a:	call   0x416220
  40d62f:	jmp    0x40d3b0
  40d634:	cmp    sil,0x22
  40d638:	mov    rdi,r12
  40d63b:	je     0x40d890
  40d641:	movzx  ecx,BYTE PTR [r12]
  40d646:	test   cl,cl
  40d648:	je     0x40d5e9
  40d64a:	mov    rsi,r12
  40d64d:	jmp    0x40d65b
  40d64f:	nop
  40d650:	add    rsi,0x1
  40d654:	movzx  ecx,BYTE PTR [rsi]
  40d657:	test   cl,cl
  40d659:	je     0x40d6d0
  40d65b:	call   rbp
  40d65d:	test   eax,eax
  40d65f:	je     0x40d650
  40d661:	mov    BYTE PTR [rsi],0x0
  40d664:	lea    rdi,[rsi+0x1]
  40d668:	movzx  esi,BYTE PTR [rsi+0x1]
  40d66c:	test   sil,sil
  40d66f:	jne    0x40d67f
  40d671:	jmp    0x40d6bd
  40d673:	add    rdi,0x1
  40d677:	movzx  esi,BYTE PTR [rdi]
  40d67a:	test   sil,sil
  40d67d:	je     0x40d6bd
  40d67f:	movzx  ecx,sil
  40d683:	call   rbp
  40d685:	test   eax,eax
  40d687:	jne    0x40d673
  40d689:	cmp    sil,0x23
  40d68d:	jbe    0x40daf9
  40d693:	mov    rax,QWORD PTR [rsp+0x38]
  40d698:	mov    rcx,QWORD PTR [r15+0x3d0]
  40d69f:	lea    rdx,[rip+0x20b42]        # 0x42e1e8
  40d6a6:	mov    r9d,DWORD PTR [rsp+0x40]
  40d6ab:	mov    r8,QWORD PTR [rsp+0x12b0]
  40d6b3:	mov    QWORD PTR [rsp+0x20],rax
  40d6b8:	call   0x408110
  40d6bd:	cmp    BYTE PTR [r12],0x0
  40d6c2:	je     0x40d5e9
  40d6c8:	nop    DWORD PTR [rax+rax*1+0x0]
  40d6d0:	xor    r10d,r10d
  40d6d3:	mov    r9,QWORD PTR [rsp+0x12b8]
  40d6db:	mov    r8,QWORD PTR [rsp+0x48]
  40d6e0:	mov    rdx,r12
  40d6e3:	mov    rcx,QWORD PTR [rsp+0x38]
  40d6e8:	mov    QWORD PTR [rsp+0x20],r15
  40d6ed:	mov    BYTE PTR [rsp+0x47],r10b
  40d6f2:	call   0x404450
  40d6f7:	cmp    BYTE PTR [r12],0x0
  40d6fc:	movzx  r10d,BYTE PTR [rsp+0x47]
  40d702:	je     0x40d60d
  40d708:	cmp    BYTE PTR [rsp+0x5f],0x0
  40d70d:	jne    0x40d60d
  40d713:	mov    rsi,QWORD PTR [rsp+0x12b0]
  40d71b:	lea    rdi,[rip+0x20abf]        # 0x42e1e1
  40d722:	mov    ecx,0x2
  40d727:	mov    eax,0x9
  40d72c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40d72e:	setb   dl
  40d731:	seta   cl
  40d734:	cmp    cl,dl
  40d736:	lea    rdx,[rip+0x20a8b]        # 0x42e1c8
  40d73d:	cmovne rdx,QWORD PTR [rsp+0x12b0]
  40d746:	mov    QWORD PTR [rsp+0x12b0],rdx
  40d74e:	mov    ecx,eax
  40d750:	mov    BYTE PTR [rsp+0x47],r10b
  40d755:	call   0x407940
  40d75a:	mov    rcx,QWORD PTR [r15+0x3d0]
  40d761:	mov    QWORD PTR [rsp+0x28],rax
  40d766:	lea    rdx,[rip+0x20ad4]        # 0x42e241
  40d76d:	mov    rax,QWORD PTR [rsp+0x38]
  40d772:	mov    r9d,DWORD PTR [rsp+0x40]
  40d777:	mov    r8,QWORD PTR [rsp+0x12b0]
  40d77f:	mov    QWORD PTR [rsp+0x20],rax
  40d784:	call   0x408110
  40d789:	movzx  r10d,BYTE PTR [rsp+0x47]
  40d78f:	test   r10b,r10b
  40d792:	je     0x40d627
  40d798:	nop    DWORD PTR [rax+rax*1+0x0]
  40d7a0:	mov    rcx,r12
  40d7a3:	call   0x416220
  40d7a8:	jmp    0x40d627
  40d7ad:	nop    DWORD PTR [rax]
  40d7b0:	mov    BYTE PTR [rax],0x0
  40d7b3:	jmp    0x40d525
  40d7b8:	mov    rcx,rbx
  40d7bb:	call   0x416220
  40d7c0:	jmp    0x40d4b0
  40d7c5:	mov    rax,QWORD PTR [r15+0x190]
  40d7cc:	test   rax,rax
  40d7cf:	je     0x40d61e
  40d7d5:	cmp    QWORD PTR [rax+0x8],0x0
  40d7da:	je     0x40d61e
  40d7e0:	mov    ecx,0x3e8
  40d7e5:	mov    BYTE PTR [rsp+0x47],r10b
  40d7ea:	call   0x4161d0
  40d7ef:	test   rax,rax
  40d7f2:	mov    QWORD PTR [r15+0x3e0],rax
  40d7f9:	movzx  r10d,BYTE PTR [rsp+0x47]
  40d7ff:	je     0x40d934
  40d805:	mov    rcx,rax
  40d808:	mov    BYTE PTR [rsp+0x38],r10b
  40d80d:	call   0x402560
  40d812:	mov    rdx,QWORD PTR [rsp+0x12b8]
  40d81a:	mov    rax,QWORD PTR [r15+0x3e0]
  40d821:	movzx  r10d,BYTE PTR [rsp+0x38]
  40d827:	mov    rdx,QWORD PTR [rdx]
  40d82a:	mov    QWORD PTR [rax],rdx
  40d82d:	mov    rdx,QWORD PTR [rsp+0x12b8]
  40d835:	mov    QWORD PTR [rax+0x3d0],rdx
  40d83c:	mov    QWORD PTR [rdx+0x60],rax
  40d840:	mov    QWORD PTR [rax+0x3d8],r15
  40d847:	mov    r15,rax
  40d84a:	jmp    0x40d61e
  40d84f:	nop
  40d850:	mov    rsi,QWORD PTR [rsp+0x12b0]
  40d858:	lea    rdi,[rip+0x20982]        # 0x42e1e1
  40d85f:	mov    ecx,0x2
  40d864:	lea    edx,[rax-0x5]
  40d867:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40d869:	lea    rdi,[rip+0x20958]        # 0x42e1c8
  40d870:	cmovne rdi,QWORD PTR [rsp+0x12b0]
  40d879:	cmp    edx,0x3
  40d87c:	mov    QWORD PTR [rsp+0x12b0],rdi
  40d884:	jbe    0x40d61e
  40d88a:	jmp    0x40d74e
  40d88f:	nop
  40d890:	lea    rsi,[r12+0x1]
  40d895:	mov    rcx,rsi
  40d898:	call   0x416150
  40d89d:	lea    rcx,[rax+0x1]
  40d8a1:	call   0x4161d0
  40d8a6:	test   rax,rax
  40d8a9:	mov    r12,rax
  40d8ac:	je     0x40da0e
  40d8b2:	movzx  eax,BYTE PTR [rdi+0x1]
  40d8b6:	mov    rdx,r12
  40d8b9:	mov    r8d,0xb
  40d8bf:	mov    ecx,0xa
  40d8c4:	cmp    al,0x22
  40d8c6:	je     0x40d8e2
  40d8c8:	test   al,al
  40d8ca:	je     0x40d8e2
  40d8cc:	cmp    al,0x5c
  40d8ce:	je     0x40d8f0
  40d8d0:	mov    BYTE PTR [rdx],al
  40d8d2:	movzx  eax,BYTE PTR [rsi+0x1]
  40d8d6:	add    rdx,0x1
  40d8da:	add    rsi,0x1
  40d8de:	cmp    al,0x22
  40d8e0:	jne    0x40d8c8
  40d8e2:	mov    BYTE PTR [rdx],0x0
  40d8e5:	mov    r10d,0x1
  40d8eb:	jmp    0x40d6d3
  40d8f0:	movzx  eax,BYTE PTR [rsi+0x1]
  40d8f4:	cmp    al,0x72
  40d8f6:	je     0x40d91e
  40d8f8:	jg     0x40d912
  40d8fa:	test   al,al
  40d8fc:	je     0x40d925
  40d8fe:	cmp    al,0x6e
  40d900:	cmove  eax,ecx
  40d903:	mov    BYTE PTR [rdx],al
  40d905:	add    rsi,0x2
  40d909:	movzx  eax,BYTE PTR [rsi]
  40d90c:	add    rdx,0x1
  40d910:	jmp    0x40d8c4
  40d912:	cmp    al,0x74
  40d914:	je     0x40d92d
  40d916:	cmp    al,0x76
  40d918:	cmove  eax,r8d
  40d91c:	jmp    0x40d903
  40d91e:	mov    eax,0xd
  40d923:	jmp    0x40d903
  40d925:	add    rsi,0x1
  40d929:	xor    eax,eax
  40d92b:	jmp    0x40d8c4
  40d92d:	mov    eax,0x9
  40d932:	jmp    0x40d903
  40d934:	mov    rsi,QWORD PTR [rsp+0x12b0]
  40d93c:	lea    rdi,[rip+0x2089e]        # 0x42e1e1
  40d943:	mov    ecx,0x2
  40d948:	mov    eax,0xe
  40d94d:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40d94f:	setb   dl
  40d952:	seta   cl
  40d955:	cmp    cl,dl
  40d957:	lea    rdx,[rip+0x2086a]        # 0x42e1c8
  40d95e:	cmovne rdx,QWORD PTR [rsp+0x12b0]
  40d967:	mov    QWORD PTR [rsp+0x12b0],rdx
  40d96f:	jmp    0x40d74e
  40d974:	lea    rax,[rip+0x20845]        # 0x42e1c0
  40d97b:	mov    QWORD PTR [rsp+0x12b0],rax
  40d983:	mov    rcx,QWORD PTR [rsp+0x12b0]
  40d98b:	lea    rdx,[rip+0x20847]        # 0x42e1d9
  40d992:	call   0x416248
  40d997:	mov    r14,rax
  40d99a:	test   r14,r14
  40d99d:	jne    0x40d38d
  40d9a3:	mov    ebx,0x1
  40d9a8:	jmp    0x40d4c5
  40d9ad:	lea    rax,[rip+0x2080c]        # 0x42e1c0
  40d9b4:	lea    rbx,[rsp+0x60]
  40d9b9:	mov    r9,rsi
  40d9bc:	lea    r8,[rip+0x2080d]        # 0x42e1d0
  40d9c3:	mov    edx,0x200
  40d9c8:	mov    rdi,QWORD PTR [rip+0x27c29]        # 0x4355f8
  40d9cf:	mov    QWORD PTR [rsp+0x28],rax
  40d9d4:	lea    rax,[rip+0x207fc]        # 0x42e1d7
  40d9db:	mov    rcx,rbx
  40d9de:	mov    QWORD PTR [rsp+0x20],rax
  40d9e3:	call   rdi
  40d9e5:	lea    rdx,[rip+0x207ed]        # 0x42e1d9
  40d9ec:	mov    rcx,rbx
  40d9ef:	call   0x416248
  40d9f4:	test   rax,rax
  40d9f7:	je     0x40da20
  40d9f9:	mov    rcx,rax
  40d9fc:	call   0x416260
  40da01:	mov    QWORD PTR [rsp+0x12b0],rbx
  40da09:	jmp    0x40d50f
  40da0e:	mov    rcx,rbx
  40da11:	mov    ebx,0x1
  40da16:	call   0x416220
  40da1b:	jmp    0x40d4b2
  40da20:	xor    ecx,ecx
  40da22:	mov    r8d,0x200
  40da28:	mov    rdx,rbx
  40da2b:	call   QWORD PTR [rip+0x27c97]        # 0x4356c8
  40da31:	sub    eax,0x1
  40da34:	cmp    eax,0x1fe
  40da39:	ja     0x40d500
  40da3f:	mov    edx,0x5c
  40da44:	mov    rcx,rbx
  40da47:	call   0x416130
  40da4c:	test   rax,rax
  40da4f:	je     0x40d500
  40da55:	mov    BYTE PTR [rax],0x0
  40da58:	mov    r10,rbx
  40da5b:	mov    edx,DWORD PTR [r10]
  40da5e:	add    r10,0x4
  40da62:	lea    r8d,[rdx-0x1010101]
  40da69:	not    edx
  40da6b:	and    r8d,edx
  40da6e:	and    r8d,0x80808080
  40da75:	je     0x40da5b
  40da77:	mov    edx,r8d
  40da7a:	mov    ecx,0x1ff
  40da7f:	shr    edx,0x10
  40da82:	test   r8d,0x8080
  40da89:	cmove  r8d,edx
  40da8d:	lea    rdx,[r10+0x2]
  40da91:	cmove  r10,rdx
  40da95:	add    r8b,r8b
  40da98:	mov    edx,0x200
  40da9d:	sbb    r10,0x3
  40daa1:	sub    r10,rbx
  40daa4:	sub    rcx,r10
  40daa7:	sub    rdx,r10
  40daaa:	cmp    rcx,0x7
  40daae:	jbe    0x40d500
  40dab4:	lea    rcx,[rip+0x20705]        # 0x42e1c0
  40dabb:	lea    r9,[rip+0x20715]        # 0x42e1d7
  40dac2:	lea    r8,[rip+0x20713]        # 0x42e1dc
  40dac9:	mov    QWORD PTR [rsp+0x20],rcx
  40dace:	mov    rcx,rax
  40dad1:	call   rdi
  40dad3:	mov    QWORD PTR [rsp+0x12b0],rbx
  40dadb:	jmp    0x40d50f
  40dae0:	movabs rax,0x840800002401
  40daea:	bt     rax,rdi
  40daee:	jae    0x40d569
  40daf4:	jmp    0x40d627
  40daf9:	movabs rax,0x800002401
  40db03:	bt     rax,rsi
  40db07:	jae    0x40d693
  40db0d:	jmp    0x40d6bd
  40db12:	nop
  40db13:	nop
  40db14:	nop
  40db15:	nop
  40db16:	nop
  40db17:	nop
  40db18:	nop
  40db19:	nop
  40db1a:	nop
  40db1b:	nop
  40db1c:	nop
  40db1d:	nop
  40db1e:	nop
  40db1f:	nop
  40db20:	ret    
  40db21:	nop    DWORD PTR [rax+rax*1+0x0]
  40db26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40db30:	ret    
  40db31:	nop    DWORD PTR [rax+rax*1+0x0]
  40db36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40db40:	ret    
  40db41:	nop    DWORD PTR [rax+rax*1+0x0]
  40db46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40db50:	ret    
  40db51:	nop    DWORD PTR [rax+rax*1+0x0]
  40db56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40db60:	ret    
  40db61:	nop    DWORD PTR [rax+rax*1+0x0]
  40db66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40db70:	ret    
  40db71:	nop    DWORD PTR [rax+rax*1+0x0]
  40db76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40db80:	ret    
  40db81:	nop    DWORD PTR [rax+rax*1+0x0]
  40db86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40db90:	ret    
  40db91:	nop    DWORD PTR [rax+rax*1+0x0]
  40db96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dba0:	ret    
  40dba1:	nop    DWORD PTR [rax+rax*1+0x0]
  40dba6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dbb0:	ret    
  40dbb1:	nop    DWORD PTR [rax+rax*1+0x0]
  40dbb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dbc0:	ret    
  40dbc1:	nop    DWORD PTR [rax+rax*1+0x0]
  40dbc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dbd0:	ret    
  40dbd1:	nop    DWORD PTR [rax+rax*1+0x0]
  40dbd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dbe0:	ret    
  40dbe1:	nop    DWORD PTR [rax+rax*1+0x0]
  40dbe6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dbf0:	ret    
  40dbf1:	nop    DWORD PTR [rax+rax*1+0x0]
  40dbf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dc00:	ret    
  40dc01:	nop    DWORD PTR [rax+rax*1+0x0]
  40dc06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dc10:	ret    
  40dc11:	nop    DWORD PTR [rax+rax*1+0x0]
  40dc16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dc20:	ret    
  40dc21:	nop    DWORD PTR [rax+rax*1+0x0]
  40dc26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dc30:	ret    
  40dc31:	nop    DWORD PTR [rax+rax*1+0x0]
  40dc36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dc40:	ret    
  40dc41:	nop    DWORD PTR [rax+rax*1+0x0]
  40dc46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dc50:	ret    
  40dc51:	nop    DWORD PTR [rax+rax*1+0x0]
  40dc56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dc60:	push   r14
  40dc62:	push   r13
  40dc64:	push   r12
  40dc66:	push   rbp
  40dc67:	push   rdi
  40dc68:	push   rsi
  40dc69:	push   rbx
  40dc6a:	sub    rsp,0x20
  40dc6e:	mov    rdi,rcx
  40dc71:	call   0x416150
  40dc76:	lea    rcx,[rax*4+0x1]
  40dc7e:	call   0x4161d0
  40dc83:	test   rax,rax
  40dc86:	mov    r12,rax
  40dc89:	je     0x40ddc6
  40dc8f:	movzx  ebx,BYTE PTR [rdi]
  40dc92:	mov    rsi,rax
  40dc95:	test   bl,bl
  40dc97:	je     0x40dd20
  40dc9d:	mov    r13,QWORD PTR [rip+0x27c24]        # 0x4358c8
  40dca4:	mov    r14,QWORD PTR [rip+0x2794d]        # 0x4355f8
  40dcab:	jmp    0x40dcc1
  40dcad:	nop    DWORD PTR [rax]
  40dcb0:	mov    BYTE PTR [rsi],bl
  40dcb2:	add    rsi,0x1
  40dcb6:	add    rdi,0x1
  40dcba:	movzx  ebx,BYTE PTR [rdi]
  40dcbd:	test   bl,bl
  40dcbf:	je     0x40dd20
  40dcc1:	cmp    bl,0xa
  40dcc4:	je     0x40dd35
  40dcc6:	cmp    bl,0xd
  40dcc9:	je     0x40dd50
  40dccf:	cmp    bl,0x9
  40dcd2:	je     0x40dd70
  40dcd8:	cmp    bl,0x5c
  40dcdb:	je     0x40dd90
  40dce1:	cmp    bl,0x22
  40dce4:	je     0x40ddb0
  40dcea:	movzx  ebp,bl
  40dced:	mov    ecx,ebp
  40dcef:	call   r13
  40dcf2:	test   eax,eax
  40dcf4:	jne    0x40dcb0
  40dcf6:	add    rdi,0x1
  40dcfa:	mov    rcx,rsi
  40dcfd:	mov    r9d,ebp
  40dd00:	lea    r8,[rip+0x20579]        # 0x42e280
  40dd07:	mov    edx,0x5
  40dd0c:	add    rsi,0x4
  40dd10:	call   r14
  40dd13:	movzx  ebx,BYTE PTR [rdi]
  40dd16:	test   bl,bl
  40dd18:	jne    0x40dcc1
  40dd1a:	nop    WORD PTR [rax+rax*1+0x0]
  40dd20:	mov    BYTE PTR [rsi],0x0
  40dd23:	mov    rax,r12
  40dd26:	add    rsp,0x20
  40dd2a:	pop    rbx
  40dd2b:	pop    rsi
  40dd2c:	pop    rdi
  40dd2d:	pop    rbp
  40dd2e:	pop    r12
  40dd30:	pop    r13
  40dd32:	pop    r14
  40dd34:	ret    
  40dd35:	mov    r9d,0x6e5c
  40dd3b:	mov    BYTE PTR [rsi+0x2],0x0
  40dd3f:	add    rsi,0x2
  40dd43:	mov    WORD PTR [rsi-0x2],r9w
  40dd48:	jmp    0x40dcb6
  40dd4d:	nop    DWORD PTR [rax]
  40dd50:	mov    r8d,0x725c
  40dd56:	mov    BYTE PTR [rsi+0x2],0x0
  40dd5a:	add    rsi,0x2
  40dd5e:	mov    WORD PTR [rsi-0x2],r8w
  40dd63:	jmp    0x40dcb6
  40dd68:	nop    DWORD PTR [rax+rax*1+0x0]
  40dd70:	mov    ecx,0x745c
  40dd75:	mov    BYTE PTR [rsi+0x2],0x0
  40dd79:	add    rsi,0x2
  40dd7d:	mov    WORD PTR [rsi-0x2],cx
  40dd81:	jmp    0x40dcb6
  40dd86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dd90:	mov    edx,0x5c5c
  40dd95:	mov    BYTE PTR [rsi+0x2],0x0
  40dd99:	add    rsi,0x2
  40dd9d:	mov    WORD PTR [rsi-0x2],dx
  40dda1:	jmp    0x40dcb6
  40dda6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ddb0:	mov    eax,0x225c
  40ddb5:	mov    BYTE PTR [rsi+0x2],0x0
  40ddb9:	add    rsi,0x2
  40ddbd:	mov    WORD PTR [rsi-0x2],ax
  40ddc1:	jmp    0x40dcb6
  40ddc6:	xor    eax,eax
  40ddc8:	jmp    0x40dd26
  40ddcd:	nop    DWORD PTR [rax]
  40ddd0:	push   rbp
  40ddd1:	push   rdi
  40ddd2:	push   rsi
  40ddd3:	push   rbx
  40ddd4:	sub    rsp,0x28
  40ddd8:	mov    esi,DWORD PTR [rsp+0x78]
  40dddc:	mov    rbx,QWORD PTR [rsp+0x70]
  40dde1:	mov    rdi,rdx
  40dde4:	mov    rbp,r8
  40dde7:	mov    edx,r9d
  40ddea:	mov    r8d,esi
  40dded:	call   QWORD PTR [rip+0x277a5]        # 0x435598
  40ddf3:	test   esi,esi
  40ddf5:	jne    0x40de00
  40ddf7:	add    rsp,0x28
  40ddfb:	pop    rbx
  40ddfc:	pop    rsi
  40ddfd:	pop    rdi
  40ddfe:	pop    rbp
  40ddff:	ret    
  40de00:	cmp    QWORD PTR [rdi+0x40],0x0
  40de05:	je     0x40ddf7
  40de07:	test   eax,eax
  40de09:	jne    0x40ddf7
  40de0b:	mov    r9,QWORD PTR [rbx]
  40de0e:	test   r9,r9
  40de11:	jne    0x40de21
  40de13:	jmp    0x40de44
  40de15:	add    rbx,0x10
  40de19:	mov    r9,QWORD PTR [rbx]
  40de1c:	test   r9,r9
  40de1f:	je     0x40de44
  40de21:	cmp    DWORD PTR [rbx+0x8],esi
  40de24:	jne    0x40de15
  40de26:	mov    rcx,QWORD PTR [rip+0x22313]        # 0x430140
  40de2d:	lea    rdx,[rip+0x20454]        # 0x42e288
  40de34:	mov    r8,rbp
  40de37:	add    rsp,0x28
  40de3b:	pop    rbx
  40de3c:	pop    rsi
  40de3d:	pop    rdi
  40de3e:	pop    rbp
  40de3f:	jmp    0x4036c0
  40de44:	mov    rcx,QWORD PTR [rip+0x222f5]        # 0x430140
  40de4b:	lea    rdx,[rip+0x2045e]        # 0x42e2b0
  40de52:	mov    r9d,esi
  40de55:	mov    r8,rbp
  40de58:	add    rsp,0x28
  40de5c:	pop    rbx
  40de5d:	pop    rsi
  40de5e:	pop    rdi
  40de5f:	pop    rbp
  40de60:	jmp    0x4036c0
  40de65:	nop
  40de66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40de70:	push   r13
  40de72:	push   r12
  40de74:	push   rbp
  40de75:	push   rdi
  40de76:	push   rsi
  40de77:	push   rbx
  40de78:	sub    rsp,0x88
  40de7f:	mov    r12d,DWORD PTR [rsp+0xe8]
  40de87:	mov    rbx,QWORD PTR [rsp+0xe0]
  40de8f:	mov    rdi,rdx
  40de92:	mov    rbp,r8
  40de95:	mov    edx,r9d
  40de98:	mov    r8d,r12d
  40de9b:	call   QWORD PTR [rip+0x276f7]        # 0x435598
  40dea1:	test   r12d,r12d
  40dea4:	mov    esi,eax
  40dea6:	je     0x40deb3
  40dea8:	cmp    QWORD PTR [rdi+0x40],0x0
  40dead:	je     0x40deb3
  40deaf:	test   eax,eax
  40deb1:	je     0x40dec5
  40deb3:	mov    eax,esi
  40deb5:	add    rsp,0x88
  40debc:	pop    rbx
  40debd:	pop    rsi
  40debe:	pop    rdi
  40debf:	pop    rbp
  40dec0:	pop    r12
  40dec2:	pop    r13
  40dec4:	ret    
  40dec5:	lea    r13,[rsp+0x30]
  40deca:	mov    r9,rbp
  40decd:	lea    r8,[rip+0x203fd]        # 0x42e2d1
  40ded4:	mov    edx,0x50
  40ded9:	mov    rdi,QWORD PTR [rip+0x27718]        # 0x4355f8
  40dee0:	mov    rcx,r13
  40dee3:	call   rdi
  40dee5:	mov    r9,QWORD PTR [rbx]
  40dee8:	test   r9,r9
  40deeb:	je     0x40dfd0
  40def1:	mov    rbp,QWORD PTR [rip+0x22248]        # 0x430140
  40def8:	jmp    0x40df8a
  40defd:	nop    DWORD PTR [rax]
  40df00:	lea    rax,[rip+0x20400]        # 0x42e307
  40df07:	lea    rdx,[rip+0x203ec]        # 0x42e2fa
  40df0e:	mov    r8,r13
  40df11:	mov    rcx,rbp
  40df14:	mov    QWORD PTR [rsp+0x20],rax
  40df19:	call   0x4036c0
  40df1e:	test   eax,eax
  40df20:	jne    0x40dff3
  40df26:	mov    r9,r13
  40df29:	mov    eax,DWORD PTR [r9]
  40df2c:	add    r9,0x4
  40df30:	lea    edx,[rax-0x1010101]
  40df36:	not    eax
  40df38:	and    edx,eax
  40df3a:	and    edx,0x80808080
  40df40:	je     0x40df29
  40df42:	mov    eax,edx
  40df44:	lea    r8,[rip+0x203a1]        # 0x42e2ec
  40df4b:	mov    rcx,r13
  40df4e:	shr    eax,0x10
  40df51:	test   edx,0x8080
  40df57:	cmove  edx,eax
  40df5a:	lea    rax,[r9+0x2]
  40df5e:	cmove  r9,rax
  40df62:	add    dl,dl
  40df64:	lea    rax,[rip+0x20385]        # 0x42e2f0
  40df6b:	sbb    r9,0x3
  40df6f:	mov    edx,0x50
  40df74:	mov    QWORD PTR [rsp+0x20],rax
  40df79:	sub    r9,r13
  40df7c:	call   rdi
  40df7e:	add    rbx,0x10
  40df82:	mov    r9,QWORD PTR [rbx]
  40df85:	test   r9,r9
  40df88:	je     0x40dfd0
  40df8a:	mov    edx,DWORD PTR [rbx+0x8]
  40df8d:	mov    eax,r12d
  40df90:	not    eax
  40df92:	test   eax,edx
  40df94:	jne    0x40df7e
  40df96:	not    edx
  40df98:	and    r12d,edx
  40df9b:	jne    0x40df00
  40dfa1:	lea    rax,[rip+0x20362]        # 0x42e30a
  40dfa8:	mov    rcx,QWORD PTR [rip+0x22191]        # 0x430140
  40dfaf:	lea    rdx,[rip+0x20344]        # 0x42e2fa
  40dfb6:	mov    r8,r13
  40dfb9:	mov    QWORD PTR [rsp+0x20],rax
  40dfbe:	call   0x4036c0
  40dfc3:	test   eax,eax
  40dfc5:	cmovne esi,eax
  40dfc8:	jmp    0x40deb3
  40dfcd:	nop    DWORD PTR [rax]
  40dfd0:	mov    rcx,QWORD PTR [rip+0x22169]        # 0x430140
  40dfd7:	lea    rdx,[rip+0x20313]        # 0x42e2f1
  40dfde:	mov    r9d,r12d
  40dfe1:	mov    r8,r13
  40dfe4:	call   0x4036c0
  40dfe9:	test   eax,eax
  40dfeb:	cmovne esi,eax
  40dfee:	jmp    0x40deb3
  40dff3:	mov    esi,eax
  40dff5:	jmp    0x40deb3
  40dffa:	nop    WORD PTR [rax+rax*1+0x0]
  40e000:	push   r13
  40e002:	push   r12
  40e004:	push   rbp
  40e005:	push   rdi
  40e006:	push   rsi
  40e007:	push   rbx
  40e008:	sub    rsp,0x88
  40e00f:	mov    r12d,DWORD PTR [rsp+0xe8]
  40e017:	mov    rbx,QWORD PTR [rsp+0xe0]
  40e01f:	mov    rdi,rdx
  40e022:	mov    rbp,r8
  40e025:	mov    edx,r9d
  40e028:	mov    r8d,r12d
  40e02b:	call   QWORD PTR [rip+0x27567]        # 0x435598
  40e031:	test   r12d,r12d
  40e034:	mov    esi,eax
  40e036:	je     0x40e043
  40e038:	cmp    QWORD PTR [rdi+0x40],0x0
  40e03d:	je     0x40e043
  40e03f:	test   eax,eax
  40e041:	je     0x40e055
  40e043:	mov    eax,esi
  40e045:	add    rsp,0x88
  40e04c:	pop    rbx
  40e04d:	pop    rsi
  40e04e:	pop    rdi
  40e04f:	pop    rbp
  40e050:	pop    r12
  40e052:	pop    r13
  40e054:	ret    
  40e055:	lea    r13,[rsp+0x30]
  40e05a:	mov    r9,rbp
  40e05d:	lea    r8,[rip+0x2026d]        # 0x42e2d1
  40e064:	mov    edx,0x50
  40e069:	mov    rdi,QWORD PTR [rip+0x27588]        # 0x4355f8
  40e070:	mov    rcx,r13
  40e073:	call   rdi
  40e075:	mov    r9,QWORD PTR [rbx]
  40e078:	test   r9,r9
  40e07b:	je     0x40e162
  40e081:	mov    rbp,QWORD PTR [rip+0x220b8]        # 0x430140
  40e088:	jmp    0x40e11a
  40e08d:	nop    DWORD PTR [rax]
  40e090:	lea    rax,[rip+0x20270]        # 0x42e307
  40e097:	lea    rdx,[rip+0x2025c]        # 0x42e2fa
  40e09e:	mov    r8,r13
  40e0a1:	mov    rcx,rbp
  40e0a4:	mov    QWORD PTR [rsp+0x20],rax
  40e0a9:	call   0x4036c0
  40e0ae:	test   eax,eax
  40e0b0:	jne    0x40e15b
  40e0b6:	mov    r9,r13
  40e0b9:	mov    eax,DWORD PTR [r9]
  40e0bc:	add    r9,0x4
  40e0c0:	lea    edx,[rax-0x1010101]
  40e0c6:	not    eax
  40e0c8:	and    edx,eax
  40e0ca:	and    edx,0x80808080
  40e0d0:	je     0x40e0b9
  40e0d2:	mov    eax,edx
  40e0d4:	lea    r8,[rip+0x20211]        # 0x42e2ec
  40e0db:	mov    rcx,r13
  40e0de:	shr    eax,0x10
  40e0e1:	test   edx,0x8080
  40e0e7:	cmove  edx,eax
  40e0ea:	lea    rax,[r9+0x2]
  40e0ee:	cmove  r9,rax
  40e0f2:	add    dl,dl
  40e0f4:	lea    rax,[rip+0x201f5]        # 0x42e2f0
  40e0fb:	sbb    r9,0x3
  40e0ff:	mov    edx,0x50
  40e104:	mov    QWORD PTR [rsp+0x20],rax
  40e109:	sub    r9,r13
  40e10c:	call   rdi
  40e10e:	add    rbx,0x10
  40e112:	mov    r9,QWORD PTR [rbx]
  40e115:	test   r9,r9
  40e118:	je     0x40e162
  40e11a:	mov    edx,DWORD PTR [rbx+0x8]
  40e11d:	mov    eax,r12d
  40e120:	not    eax
  40e122:	test   eax,edx
  40e124:	jne    0x40e10e
  40e126:	not    edx
  40e128:	and    r12d,edx
  40e12b:	jne    0x40e090
  40e131:	lea    rax,[rip+0x201d2]        # 0x42e30a
  40e138:	mov    rcx,QWORD PTR [rip+0x22001]        # 0x430140
  40e13f:	lea    rdx,[rip+0x201b4]        # 0x42e2fa
  40e146:	mov    r8,r13
  40e149:	mov    QWORD PTR [rsp+0x20],rax
  40e14e:	call   0x4036c0
  40e153:	test   eax,eax
  40e155:	je     0x40e043
  40e15b:	mov    esi,eax
  40e15d:	jmp    0x40e043
  40e162:	mov    rcx,QWORD PTR [rip+0x21fd7]        # 0x430140
  40e169:	lea    rdx,[rip+0x2019d]        # 0x42e30d
  40e170:	mov    r9d,r12d
  40e173:	mov    r8,r13
  40e176:	call   0x4036c0
  40e17b:	test   eax,eax
  40e17d:	je     0x40e043
  40e183:	mov    esi,eax
  40e185:	jmp    0x40e043
  40e18a:	nop    WORD PTR [rax+rax*1+0x0]
  40e190:	push   r15
  40e192:	push   r14
  40e194:	push   r13
  40e196:	push   r12
  40e198:	push   rbp
  40e199:	push   rdi
  40e19a:	push   rsi
  40e19b:	push   rbx
  40e19c:	sub    rsp,0x38
  40e1a0:	mov    rsi,QWORD PTR [rsp+0xa0]
  40e1a8:	xor    ebx,ebx
  40e1aa:	mov    rdi,rdx
  40e1ad:	mov    rbp,r8
  40e1b0:	mov    edx,r9d
  40e1b3:	mov    r8,rsi
  40e1b6:	call   QWORD PTR [rip+0x273dc]        # 0x435598
  40e1bc:	test   rsi,rsi
  40e1bf:	je     0x40e1cc
  40e1c1:	cmp    QWORD PTR [rdi+0x40],0x0
  40e1c6:	je     0x40e1cc
  40e1c8:	test   eax,eax
  40e1ca:	je     0x40e1f0
  40e1cc:	mov    rcx,rbx
  40e1cf:	mov    DWORD PTR [rsp+0x2c],eax
  40e1d3:	call   0x416220
  40e1d8:	mov    eax,DWORD PTR [rsp+0x2c]
  40e1dc:	add    rsp,0x38
  40e1e0:	pop    rbx
  40e1e1:	pop    rsi
  40e1e2:	pop    rdi
  40e1e3:	pop    rbp
  40e1e4:	pop    r12
  40e1e6:	pop    r13
  40e1e8:	pop    r14
  40e1ea:	pop    r15
  40e1ec:	ret    
  40e1ed:	nop    DWORD PTR [rax]
  40e1f0:	mov    rax,QWORD PTR [rip+0x21f79]        # 0x430170
  40e1f7:	mov    rcx,QWORD PTR [rip+0x21f62]        # 0x430160
  40e1fe:	mov    edx,DWORD PTR [rax]
  40e200:	lea    edi,[rdx+0x1]
  40e203:	lea    rdx,[rip+0x2010d]        # 0x42e317
  40e20a:	mov    r8d,edi
  40e20d:	mov    DWORD PTR [rax],edi
  40e20f:	call   0x4036c0
  40e214:	test   eax,eax
  40e216:	jne    0x40e1cc
  40e218:	mov    rcx,QWORD PTR [rip+0x21f31]        # 0x430150
  40e21f:	lea    rdx,[rip+0x2010f]        # 0x42e335
  40e226:	mov    r8d,edi
  40e229:	call   0x4036c0
  40e22e:	test   eax,eax
  40e230:	jne    0x40e1cc
  40e232:	mov    rcx,QWORD PTR [rip+0x21ef7]        # 0x430130
  40e239:	lea    rdx,[rip+0x20104]        # 0x42e344
  40e240:	mov    r8d,edi
  40e243:	call   0x4036c0
  40e248:	test   eax,eax
  40e24a:	jne    0x40e1cc
  40e24c:	mov    rcx,QWORD PTR [rip+0x21edd]        # 0x430130
  40e253:	lea    rdx,[rip+0x200db]        # 0x42e335
  40e25a:	mov    r8d,edi
  40e25d:	call   0x4036c0
  40e262:	test   eax,eax
  40e264:	jne    0x40e1cc
  40e26a:	cmp    edi,0x1
  40e26d:	je     0x40e3fc
  40e273:	mov    rcx,QWORD PTR [rip+0x21ed6]        # 0x430150
  40e27a:	lea    rdx,[rip+0x20262]        # 0x42e4e3
  40e281:	xor    ebx,ebx
  40e283:	call   0x403690
  40e288:	test   eax,eax
  40e28a:	jne    0x40e1cc
  40e290:	mov    r13,QWORD PTR [rip+0x21eb9]        # 0x430150
  40e297:	mov    r14,r13
  40e29a:	mov    r15,r13
  40e29d:	mov    rcx,QWORD PTR [rip+0x21eac]        # 0x430150
  40e2a4:	lea    rdx,[rip+0x200d5]        # 0x42e380
  40e2ab:	mov    r8d,edi
  40e2ae:	call   0x4036c0
  40e2b3:	test   eax,eax
  40e2b5:	jne    0x40e1cc
  40e2bb:	mov    r8,QWORD PTR [rsi+0x8]
  40e2bf:	mov    rcx,QWORD PTR [rip+0x21e8a]        # 0x430150
  40e2c6:	lea    rdx,[rip+0x200d3]        # 0x42e3a0
  40e2cd:	call   0x4036c0
  40e2d2:	test   eax,eax
  40e2d4:	jne    0x40e1cc
  40e2da:	mov    r12,rsi
  40e2dd:	jmp    0x40e38f
  40e2e2:	lea    rdx,[rip+0x20107]        # 0x42e3f0
  40e2e9:	mov    rcx,r14
  40e2ec:	call   0x4036c0
  40e2f1:	test   eax,eax
  40e2f3:	jne    0x40e1cc
  40e2f9:	cmp    QWORD PTR [r12+0x58],0x0
  40e2ff:	je     0x40e33d
  40e301:	mov    rcx,rbx
  40e304:	call   0x416220
  40e309:	mov    rcx,QWORD PTR [r12+0x58]
  40e30e:	call   0x40dc60
  40e313:	test   rax,rax
  40e316:	mov    rbx,rax
  40e319:	je     0x40e41c
  40e31f:	mov    rcx,QWORD PTR [rip+0x21e2a]        # 0x430150
  40e326:	lea    rdx,[rip+0x20123]        # 0x42e450
  40e32d:	mov    r8,rax
  40e330:	call   0x4036c0
  40e335:	test   eax,eax
  40e337:	jne    0x40e1cc
  40e33d:	cmp    QWORD PTR [r12+0x38],0x0
  40e343:	je     0x40e381
  40e345:	mov    rcx,rbx
  40e348:	call   0x416220
  40e34d:	mov    rcx,QWORD PTR [r12+0x38]
  40e352:	call   0x40dc60
  40e357:	test   rax,rax
  40e35a:	mov    rbx,rax
  40e35d:	je     0x40e41c
  40e363:	mov    rcx,QWORD PTR [rip+0x21de6]        # 0x430150
  40e36a:	lea    rdx,[rip+0x20107]        # 0x42e478
  40e371:	mov    r8,rax
  40e374:	call   0x4036c0
  40e379:	test   eax,eax
  40e37b:	jne    0x40e1cc
  40e381:	mov    r12,QWORD PTR [r12+0x48]
  40e386:	test   r12,r12
  40e389:	je     0x40e428
  40e38f:	mov    rcx,rbx
  40e392:	call   0x416220
  40e397:	mov    rcx,QWORD PTR [r12+0x18]
  40e39c:	call   0x40dc60
  40e3a1:	test   rax,rax
  40e3a4:	mov    rbx,rax
  40e3a7:	je     0x40e41c
  40e3a9:	mov    eax,DWORD PTR [r12+0x50]
  40e3ae:	mov    r8,rbx
  40e3b1:	test   al,0x1
  40e3b3:	jne    0x40e3e0
  40e3b5:	test   al,0x2
  40e3b7:	jne    0x40e2e2
  40e3bd:	lea    rdx,[rip+0x2005c]        # 0x42e420
  40e3c4:	mov    rcx,r13
  40e3c7:	call   0x4036c0
  40e3cc:	test   eax,eax
  40e3ce:	je     0x40e2f9
  40e3d4:	jmp    0x40e1cc
  40e3d9:	nop    DWORD PTR [rax+0x0]
  40e3e0:	lea    rdx,[rip+0x1ffe1]        # 0x42e3c8
  40e3e7:	mov    rcx,r15
  40e3ea:	call   0x4036c0
  40e3ef:	test   eax,eax
  40e3f1:	je     0x40e2f9
  40e3f7:	jmp    0x40e1cc
  40e3fc:	mov    rcx,QWORD PTR [rip+0x21d5d]        # 0x430160
  40e403:	lea    rdx,[rip+0x1ff56]        # 0x42e360
  40e40a:	call   0x403690
  40e40f:	test   eax,eax
  40e411:	je     0x40e273
  40e417:	jmp    0x40e1cc
  40e41c:	xor    ebx,ebx
  40e41e:	mov    eax,0x1b
  40e423:	jmp    0x40e1cc
  40e428:	mov    rcx,QWORD PTR [rip+0x21d21]        # 0x430150
  40e42f:	lea    rdx,[rip+0x2006b]        # 0x42e4a1
  40e436:	call   0x403690
  40e43b:	test   eax,eax
  40e43d:	jne    0x40e1cc
  40e443:	mov    rsi,QWORD PTR [rsi]
  40e446:	test   rsi,rsi
  40e449:	jne    0x40e29d
  40e44f:	mov    rcx,QWORD PTR [rip+0x21cea]        # 0x430140
  40e456:	lea    rdx,[rip+0x20063]        # 0x42e4c0
  40e45d:	mov    r9d,edi
  40e460:	mov    r8,rbp
  40e463:	call   0x4036c0
  40e468:	jmp    0x40e1cc
  40e46d:	nop    DWORD PTR [rax]
  40e470:	push   r13
  40e472:	push   r12
  40e474:	push   rbp
  40e475:	push   rdi
  40e476:	push   rsi
  40e477:	sub    rsp,0x40
  40e47b:	mov    rsi,QWORD PTR [rsp+0x90]
  40e483:	mov    rdi,rdx
  40e486:	mov    r12,r8
  40e489:	mov    edx,r9d
  40e48c:	mov    r8,rsi
  40e48f:	call   QWORD PTR [rip+0x27103]        # 0x435598
  40e495:	test   rsi,rsi
  40e498:	je     0x40e5b0
  40e49e:	cmp    QWORD PTR [rdi+0x40],0x0
  40e4a3:	mov    edi,0x0
  40e4a8:	je     0x40e4ae
  40e4aa:	test   eax,eax
  40e4ac:	je     0x40e4d0
  40e4ae:	mov    rcx,rdi
  40e4b1:	mov    DWORD PTR [rsp+0x3c],eax
  40e4b5:	call   0x416220
  40e4ba:	mov    eax,DWORD PTR [rsp+0x3c]
  40e4be:	add    rsp,0x40
  40e4c2:	pop    rsi
  40e4c3:	pop    rdi
  40e4c4:	pop    rbp
  40e4c5:	pop    r12
  40e4c7:	pop    r13
  40e4c9:	ret    
  40e4ca:	nop    WORD PTR [rax+rax*1+0x0]
  40e4d0:	mov    rax,QWORD PTR [rip+0x21ca9]        # 0x430180
  40e4d7:	mov    rcx,QWORD PTR [rip+0x21c82]        # 0x430160
  40e4de:	mov    edx,DWORD PTR [rax]
  40e4e0:	lea    ebp,[rdx+0x1]
  40e4e3:	lea    rdx,[rip+0x20009]        # 0x42e4f3
  40e4ea:	mov    r8d,ebp
  40e4ed:	mov    DWORD PTR [rax],ebp
  40e4ef:	call   0x4036c0
  40e4f4:	test   eax,eax
  40e4f6:	jne    0x40e4ae
  40e4f8:	mov    rcx,QWORD PTR [rip+0x21c51]        # 0x430150
  40e4ff:	lea    rdx,[rip+0x20009]        # 0x42e50f
  40e506:	mov    r8d,ebp
  40e509:	call   0x4036c0
  40e50e:	test   eax,eax
  40e510:	jne    0x40e4ae
  40e512:	mov    rcx,QWORD PTR [rip+0x21c17]        # 0x430130
  40e519:	lea    rdx,[rip+0x1ffff]        # 0x42e51f
  40e520:	mov    r8d,ebp
  40e523:	call   0x4036c0
  40e528:	test   eax,eax
  40e52a:	jne    0x40e4ae
  40e530:	mov    rcx,QWORD PTR [rip+0x21bf9]        # 0x430130
  40e537:	lea    rdx,[rip+0x1ffd1]        # 0x42e50f
  40e53e:	mov    r8d,ebp
  40e541:	call   0x4036c0
  40e546:	test   eax,eax
  40e548:	jne    0x40e4ae
  40e54e:	mov    r13,QWORD PTR [rip+0x21bfb]        # 0x430150
  40e555:	jmp    0x40e58b
  40e557:	nop    WORD PTR [rax+rax*1+0x0]
  40e560:	lea    rdx,[rip+0x1ffd9]        # 0x42e540
  40e567:	mov    QWORD PTR [rsp+0x20],rax
  40e56c:	mov    r9d,ebp
  40e56f:	mov    r8d,ebp
  40e572:	mov    rcx,r13
  40e575:	call   0x4036c0
  40e57a:	test   eax,eax
  40e57c:	jne    0x40e4ae
  40e582:	mov    rsi,QWORD PTR [rsi+0x8]
  40e586:	test   rsi,rsi
  40e589:	je     0x40e5b7
  40e58b:	mov    rcx,rdi
  40e58e:	call   0x416220
  40e593:	mov    rcx,QWORD PTR [rsi]
  40e596:	call   0x40dc60
  40e59b:	test   rax,rax
  40e59e:	mov    rdi,rax
  40e5a1:	jne    0x40e560
  40e5a3:	mov    eax,0x1b
  40e5a8:	jmp    0x40e4ae
  40e5ad:	nop    DWORD PTR [rax]
  40e5b0:	xor    edi,edi
  40e5b2:	jmp    0x40e4ae
  40e5b7:	mov    rcx,QWORD PTR [rip+0x21b82]        # 0x430140
  40e5be:	lea    rdx,[rip+0x1ffab]        # 0x42e570
  40e5c5:	mov    r9d,ebp
  40e5c8:	mov    r8,r12
  40e5cb:	call   0x4036c0
  40e5d0:	jmp    0x40e4ae
  40e5d5:	nop
  40e5d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e5e0:	push   r15
  40e5e2:	push   r14
  40e5e4:	push   r13
  40e5e6:	push   r12
  40e5e8:	push   rbp
  40e5e9:	push   rdi
  40e5ea:	push   rsi
  40e5eb:	push   rbx
  40e5ec:	sub    rsp,0x148
  40e5f3:	mov    edi,DWORD PTR [rsp+0x1b0]
  40e5fa:	lea    rax,[rsp+0x1b8]
  40e602:	mov    r13,rcx
  40e605:	mov    rbp,r8
  40e608:	mov    rsi,r9
  40e60b:	cmp    edi,0x270f
  40e611:	mov    QWORD PTR [rsp+0x38],rax
  40e616:	ja     0x40e730
  40e61c:	lea    rax,[rsp+0x1c0]
  40e624:	mov    r12d,DWORD PTR [rsp+0x1b8]
  40e62c:	lea    rdx,[rip+0x1ff61]        # 0x42e594
  40e633:	lea    rbx,[rip+0x200c6]        # 0x42e700
  40e63a:	mov    QWORD PTR [rsp+0x38],rax
  40e63f:	jmp    0x40e651
  40e641:	add    rbx,0x10
  40e645:	mov    rdx,QWORD PTR [rbx]
  40e648:	test   rdx,rdx
  40e64b:	je     0x40e7a0
  40e651:	mov    rcx,rsi
  40e654:	call   0x416170
  40e659:	test   eax,eax
  40e65b:	jne    0x40e641
  40e65d:	mov    r14d,DWORD PTR [rbx+0x8]
  40e661:	lea    r11,[rsp+0x40]
  40e666:	mov    r9d,r12d
  40e669:	lea    r8,[rip+0x1ffc7]        # 0x42e637
  40e670:	mov    edx,0x100
  40e675:	mov    rcx,r11
  40e678:	mov    QWORD PTR [rsp+0x28],r11
  40e67d:	call   QWORD PTR [rip+0x26f75]        # 0x4355f8
  40e683:	mov    r8d,r12d
  40e686:	mov    edx,edi
  40e688:	mov    rcx,r13
  40e68b:	call   QWORD PTR [rip+0x26f07]        # 0x435598
  40e691:	cmp    r12d,r14d
  40e694:	mov    ebx,eax
  40e696:	je     0x40e793
  40e69c:	mov    r11,QWORD PTR [rsp+0x28]
  40e6a1:	xor    r10d,r10d
  40e6a4:	xor    r15d,r15d
  40e6a7:	xor    r14d,r14d
  40e6aa:	mov    r12,r11
  40e6ad:	cmp    QWORD PTR [rbp+0x40],0x0
  40e6b2:	je     0x40e793
  40e6b8:	test   ebx,ebx
  40e6ba:	sete   al
  40e6bd:	xor    edi,edi
  40e6bf:	cmp    r15b,al
  40e6c2:	jae    0x40e710
  40e6c4:	test   r14b,r14b
  40e6c7:	jne    0x40e854
  40e6cd:	test   r10b,r10b
  40e6d0:	je     0x40e7b0
  40e6d6:	mov    rcx,r12
  40e6d9:	mov    ebx,0x1b
  40e6de:	call   0x40dc60
  40e6e3:	test   rax,rax
  40e6e6:	mov    rdi,rax
  40e6e9:	je     0x40e710
  40e6eb:	mov    rcx,QWORD PTR [rip+0x21a4e]        # 0x430140
  40e6f2:	lea    rdx,[rip+0x1fef7]        # 0x42e5f0
  40e6f9:	mov    r9,rax
  40e6fc:	mov    r8,rsi
  40e6ff:	call   0x4036c0
  40e704:	mov    ebx,eax
  40e706:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e710:	mov    rcx,rdi
  40e713:	call   0x416220
  40e718:	mov    eax,ebx
  40e71a:	add    rsp,0x148
  40e721:	pop    rbx
  40e722:	pop    rsi
  40e723:	pop    rdi
  40e724:	pop    rbp
  40e725:	pop    r12
  40e727:	pop    r13
  40e729:	pop    r14
  40e72b:	pop    r15
  40e72d:	ret    
  40e72e:	xchg   ax,ax
  40e730:	cmp    edi,0x752f
  40e736:	ja     0x40e800
  40e73c:	cmp    edi,0x4e1f
  40e742:	mov    r8,QWORD PTR [rax]
  40e745:	ja     0x40e7d0
  40e74b:	test   r8,r8
  40e74e:	setne  al
  40e751:	test   dl,dl
  40e753:	je     0x40e874
  40e759:	test   al,al
  40e75b:	je     0x40e890
  40e761:	mov    r12,r8
  40e764:	mov    r10d,0x1
  40e76a:	xor    r15d,r15d
  40e76d:	xor    r14d,r14d
  40e770:	mov    BYTE PTR [rsp+0x28],r10b
  40e775:	mov    edx,edi
  40e777:	mov    rcx,r13
  40e77a:	call   QWORD PTR [rip+0x26e18]        # 0x435598
  40e780:	cmp    QWORD PTR [rbp+0x40],0x0
  40e785:	mov    ebx,eax
  40e787:	movzx  r10d,BYTE PTR [rsp+0x28]
  40e78d:	jne    0x40e6b8
  40e793:	xor    edi,edi
  40e795:	jmp    0x40e710
  40e79a:	nop    WORD PTR [rax+rax*1+0x0]
  40e7a0:	xor    r14d,r14d
  40e7a3:	jmp    0x40e661
  40e7a8:	nop    DWORD PTR [rax+rax*1+0x0]
  40e7b0:	mov    rcx,QWORD PTR [rip+0x21989]        # 0x430140
  40e7b7:	lea    rdx,[rip+0x1fe5a]        # 0x42e618
  40e7be:	mov    r9,r12
  40e7c1:	mov    r8,rsi
  40e7c4:	call   0x4036c0
  40e7c9:	mov    ebx,eax
  40e7cb:	jmp    0x40e710
  40e7d0:	lea    r12,[rip+0x1fdd4]        # 0x42e5ab
  40e7d7:	test   r8,r8
  40e7da:	mov    eax,0x0
  40e7df:	cmove  r12,rax
  40e7e3:	xor    r10d,r10d
  40e7e6:	cmp    r8,0x1
  40e7ea:	setb   r15b
  40e7ee:	sbb    r14d,r14d
  40e7f1:	add    r14d,0x1
  40e7f5:	jmp    0x40e770
  40e7fa:	nop    WORD PTR [rax+rax*1+0x0]
  40e800:	mov    r14,QWORD PTR [rax]
  40e803:	lea    rdx,[rsp+0x1c0]
  40e80b:	lea    r12,[rsp+0x40]
  40e810:	lea    r8,[rip+0x1fdb2]        # 0x42e5c9
  40e817:	mov    QWORD PTR [rsp+0x38],rdx
  40e81c:	mov    rcx,r12
  40e81f:	mov    edx,0x100
  40e824:	mov    r9,r14
  40e827:	call   QWORD PTR [rip+0x26dcb]        # 0x4355f8
  40e82d:	mov    r8,r14
  40e830:	mov    edx,edi
  40e832:	mov    rcx,r13
  40e835:	call   QWORD PTR [rip+0x26d5d]        # 0x435598
  40e83b:	test   r14,r14
  40e83e:	mov    ebx,eax
  40e840:	je     0x40e793
  40e846:	xor    r10d,r10d
  40e849:	xor    r15d,r15d
  40e84c:	xor    r14d,r14d
  40e84f:	jmp    0x40e6ad
  40e854:	mov    rcx,QWORD PTR [rip+0x21935]        # 0x430190
  40e85b:	lea    rdx,[rip+0x1fd79]        # 0x42e5db
  40e862:	mov    r9,r12
  40e865:	mov    r8,rsi
  40e868:	call   0x4036c0
  40e86d:	mov    ebx,eax
  40e86f:	jmp    0x40e710
  40e874:	test   al,al
  40e876:	je     0x40e890
  40e878:	xor    r10d,r10d
  40e87b:	xor    r15d,r15d
  40e87e:	mov    r14d,0x1
  40e884:	lea    r12,[rip+0x1fd30]        # 0x42e5bb
  40e88b:	jmp    0x40e770
  40e890:	xor    r10d,r10d
  40e893:	mov    r15d,0x1
  40e899:	xor    r14d,r14d
  40e89c:	xor    r12d,r12d
  40e89f:	jmp    0x40e770
  40e8a4:	nop
  40e8a5:	nop
  40e8a6:	nop
  40e8a7:	nop
  40e8a8:	nop
  40e8a9:	nop
  40e8aa:	nop
  40e8ab:	nop
  40e8ac:	nop
  40e8ad:	nop
  40e8ae:	nop
  40e8af:	nop
  40e8b0:	mov    rax,QWORD PTR [rip+0x26e91]        # 0x435748
  40e8b7:	rex.W jmp rax
  40e8ba:	nop
  40e8bb:	nop
  40e8bc:	nop
  40e8bd:	nop
  40e8be:	nop
  40e8bf:	nop
  40e8c0:	push   r12
  40e8c2:	push   rbp
  40e8c3:	push   rdi
  40e8c4:	push   rsi
  40e8c5:	push   rbx
  40e8c6:	sub    rsp,0x20
  40e8ca:	cmp    QWORD PTR [rcx+0xc80],0x0
  40e8d2:	mov    r12,rcx
  40e8d5:	je     0x40e951
  40e8d7:	lea    rsi,[rcx+0x8]
  40e8db:	xor    edi,edi
  40e8dd:	jmp    0x40e8f2
  40e8df:	nop
  40e8e0:	add    rdi,0x1
  40e8e4:	add    rsi,0x20
  40e8e8:	cmp    QWORD PTR [r12+0xc80],rdi
  40e8f0:	jbe    0x40e951
  40e8f2:	cmp    DWORD PTR [rsi-0x8],0x1
  40e8f6:	jne    0x40e8e0
  40e8f8:	mov    rax,QWORD PTR [rsi]
  40e8fb:	test   rax,rax
  40e8fe:	je     0x40e8e0
  40e900:	mov    edx,DWORD PTR [rsi+0x8]
  40e903:	sub    edx,0x1
  40e906:	js     0x40e940
  40e908:	movsxd rcx,edx
  40e90b:	mov    edx,edx
  40e90d:	lea    rbx,[rcx*8+0x0]
  40e915:	sub    rcx,rdx
  40e918:	lea    rbp,[rcx*8-0x8]
  40e920:	mov    rcx,QWORD PTR [rax+rbx*1]
  40e924:	call   0x416220
  40e929:	mov    rax,QWORD PTR [rsi]
  40e92c:	mov    QWORD PTR [rax+rbx*1],0x0
  40e934:	sub    rbx,0x8
  40e938:	mov    rax,QWORD PTR [rsi]
  40e93b:	cmp    rbx,rbp
  40e93e:	jne    0x40e920
  40e940:	mov    rcx,rax
  40e943:	call   0x416220
  40e948:	mov    QWORD PTR [rsi],0x0
  40e94f:	jmp    0x40e8e0
  40e951:	mov    rcx,QWORD PTR [r12+0xc90]
  40e959:	call   0x416220
  40e95e:	mov    rcx,r12
  40e961:	add    rsp,0x20
  40e965:	pop    rbx
  40e966:	pop    rsi
  40e967:	pop    rdi
  40e968:	pop    rbp
  40e969:	pop    r12
  40e96b:	jmp    0x416220
  40e970:	push   r15
  40e972:	push   r14
  40e974:	push   r13
  40e976:	push   r12
  40e978:	push   rbp
  40e979:	push   rdi
  40e97a:	push   rsi
  40e97b:	push   rbx
  40e97c:	sub    rsp,0xf8
  40e983:	mov    ebx,0x1b
  40e988:	mov    QWORD PTR [rsp+0x140],rcx
  40e990:	mov    QWORD PTR [rcx],0x0
  40e997:	mov    rcx,rdx
  40e99a:	mov    r15,rdx
  40e99d:	mov    QWORD PTR [rsp+0x150],r8
  40e9a5:	mov    QWORD PTR [rsp+0x158],r9
  40e9ad:	call   0x416150
  40e9b2:	lea    rcx,[rax+0x1]
  40e9b6:	mov    rdi,rax
  40e9b9:	call   0x4161d0
  40e9be:	test   rax,rax
  40e9c1:	mov    rsi,rax
  40e9c4:	je     0x40eae2
  40e9ca:	mov    BYTE PTR [rax],0x0
  40e9cd:	mov    edx,0xcb0
  40e9d2:	mov    ecx,0x1
  40e9d7:	call   0x416270
  40e9dc:	test   rax,rax
  40e9df:	mov    r13,rax
  40e9e2:	je     0x40ee4f
  40e9e8:	lea    rdx,[rsp+0x70]
  40e9ed:	mov    QWORD PTR [rax+0xc90],rsi
  40e9f4:	mov    rsi,QWORD PTR [rip+0x26eb5]        # 0x4358b0
  40e9fb:	mov    QWORD PTR [rax+0xc88],rdi
  40ea02:	mov    DWORD PTR [rsp+0x58],0x1
  40ea0a:	mov    edi,0x1
  40ea0f:	mov    QWORD PTR [rsp+0x40],rdx
  40ea14:	lea    rdx,[rsp+0x6e]
  40ea19:	mov    DWORD PTR [rsp+0x3c],0x0
  40ea21:	xor    eax,eax
  40ea23:	mov    QWORD PTR [rsp+0x48],rdx
  40ea28:	mov    rdx,QWORD PTR [rip+0x26da9]        # 0x4357d8
  40ea2f:	mov    QWORD PTR [rsp+0x50],rdx
  40ea34:	movzx  edx,BYTE PTR [r15]
  40ea38:	test   dl,dl
  40ea3a:	je     0x40eabf
  40ea40:	test   eax,eax
  40ea42:	jne    0x40eabf
  40ea44:	mov    rbp,QWORD PTR [r13+0xc90]
  40ea4b:	mov    QWORD PTR [rsp+0x30],r13
  40ea50:	xor    r12d,r12d
  40ea53:	mov    eax,edx
  40ea55:	mov    r13,r15
  40ea58:	jmp    0x40ea78
  40ea5a:	nop    WORD PTR [rax+rax*1+0x0]
  40ea60:	mov    BYTE PTR [rbp+0x0],al
  40ea63:	add    r13,0x1
  40ea67:	add    rdi,0x1
  40ea6b:	add    r12,0x1
  40ea6f:	add    rbp,0x1
  40ea73:	movzx  eax,BYTE PTR [r13+0x0]
  40ea78:	cmp    al,0x7b
  40ea7a:	je     0x40eb40
  40ea80:	test   al,al
  40ea82:	je     0x40eb40
  40ea88:	cmp    al,0x5b
  40ea8a:	je     0x40eb00
  40ea8c:	mov    edx,eax
  40ea8e:	and    edx,0xffffffdf
  40ea91:	cmp    dl,0x5d
  40ea94:	je     0x40edb0
  40ea9a:	cmp    al,0x5c
  40ea9c:	jne    0x40ea60
  40ea9e:	movzx  ecx,BYTE PTR [r13+0x1]
  40eaa3:	mov    edx,ecx
  40eaa5:	and    edx,0xffffffdf
  40eaa8:	sub    edx,0x5b
  40eaab:	and    edx,0xfd
  40eab1:	jne    0x40ea60
  40eab3:	add    r13,0x1
  40eab7:	add    rdi,0x1
  40eabb:	mov    eax,ecx
  40eabd:	jmp    0x40ea60
  40eabf:	test   eax,eax
  40eac1:	jne    0x40f315
  40eac7:	mov    rax,QWORD PTR [rsp+0x150]
  40eacf:	mov    esi,DWORD PTR [rsp+0x58]
  40ead3:	xor    ebx,ebx
  40ead5:	mov    DWORD PTR [rax],esi
  40ead7:	mov    rax,QWORD PTR [rsp+0x140]
  40eadf:	mov    QWORD PTR [rax],r13
  40eae2:	mov    eax,ebx
  40eae4:	add    rsp,0xf8
  40eaeb:	pop    rbx
  40eaec:	pop    rsi
  40eaed:	pop    rdi
  40eaee:	pop    rbp
  40eaef:	pop    r12
  40eaf1:	pop    r13
  40eaf3:	pop    r14
  40eaf5:	pop    r15
  40eaf7:	ret    
  40eaf8:	nop    DWORD PTR [rax+rax*1+0x0]
  40eb00:	xor    r15d,r15d
  40eb03:	mov    r14d,0x1
  40eb09:	nop    DWORD PTR [rax+0x0]
  40eb10:	add    r14,0x1
  40eb14:	movzx  ecx,BYTE PTR [r13+r14*1-0x1]
  40eb1a:	mov    ebx,ecx
  40eb1c:	call   rsi
  40eb1e:	test   eax,eax
  40eb20:	jne    0x40eb10
  40eb22:	cmp    bl,0x2e
  40eb25:	je     0x40eb10
  40eb27:	cmp    bl,0x25
  40eb2a:	je     0x40eb10
  40eb2c:	cmp    bl,0x3a
  40eb2f:	jne    0x40eb95
  40eb31:	add    r15,0x1
  40eb35:	jmp    0x40eb10
  40eb37:	nop    WORD PTR [rax+rax*1+0x0]
  40eb40:	test   r12,r12
  40eb43:	mov    r15,r13
  40eb46:	mov    r13,QWORD PTR [rsp+0x30]
  40eb4b:	jne    0x40ec22
  40eb51:	cmp    al,0x5b
  40eb53:	je     0x40ebab
  40eb55:	cmp    al,0x7b
  40eb57:	je     0x40ecd0
  40eb5d:	mov    rbx,QWORD PTR [r13+0xc80]
  40eb64:	xor    eax,eax
  40eb66:	lea    rdx,[rbx+0x1]
  40eb6a:	cmp    rdx,0x63
  40eb6e:	mov    QWORD PTR [r13+0xc80],rdx
  40eb75:	jbe    0x40ea34
  40eb7b:	lea    rax,[rip+0x20825]        # 0x42f3a7
  40eb82:	mov    QWORD PTR [r13+0xca8],rdi
  40eb89:	mov    QWORD PTR [r13+0xca0],rax
  40eb90:	jmp    0x40edca
  40eb95:	cmp    bl,0x5d
  40eb98:	je     0x40ee29
  40eb9e:	test   r12,r12
  40eba1:	mov    r15,r13
  40eba4:	mov    r13,QWORD PTR [rsp+0x30]
  40eba9:	jne    0x40ec22
  40ebab:	mov    rbx,QWORD PTR [r13+0xc80]
  40ebb2:	lea    rax,[r15+0x1]
  40ebb6:	add    rdi,0x1
  40ebba:	mov    QWORD PTR [rsp+0x30],rax
  40ebbf:	mov    eax,DWORD PTR [rsp+0x3c]
  40ebc3:	mov    r11,rbx
  40ebc6:	shl    r11,0x5
  40ebca:	lea    r14,[r13+r11*1+0x0]
  40ebcf:	lea    ebp,[rax+0x1]
  40ebd2:	mov    DWORD PTR [r14+0x4],eax
  40ebd6:	movzx  r12d,BYTE PTR [r15+0x1]
  40ebdb:	mov    ecx,r12d
  40ebde:	call   QWORD PTR [rip+0x26cd4]        # 0x4358b8
  40ebe4:	test   eax,eax
  40ebe6:	jne    0x40f041
  40ebec:	sub    r12d,0x30
  40ebf0:	cmp    r12d,0x9
  40ebf4:	jbe    0x40ef19
  40ebfa:	lea    rax,[rip+0x2078e]        # 0x42f38f
  40ec01:	mov    QWORD PTR [r13+0xca8],rdi
  40ec08:	mov    r15,QWORD PTR [rsp+0x30]
  40ec0d:	mov    DWORD PTR [rsp+0x3c],ebp
  40ec11:	mov    QWORD PTR [r13+0xca0],rax
  40ec18:	mov    eax,0x3
  40ec1d:	jmp    0x40eb66
  40ec22:	mov    BYTE PTR [rbp+0x0],0x0
  40ec26:	mov    rbx,QWORD PTR [r13+0xc80]
  40ec2d:	mov    ecx,0x8
  40ec32:	mov    rax,QWORD PTR [r13+0xc90]
  40ec39:	mov    rbp,rbx
  40ec3c:	shl    rbp,0x5
  40ec40:	mov    QWORD PTR [rsp+0x30],rax
  40ec45:	add    rbp,r13
  40ec48:	mov    DWORD PTR [rbp+0x0],0x1
  40ec4f:	mov    DWORD PTR [rbp+0x10],0x1
  40ec56:	mov    DWORD PTR [rbp+0x14],0x0
  40ec5d:	mov    DWORD PTR [rbp+0x4],0xffffffff
  40ec64:	call   0x4161d0
  40ec69:	test   rax,rax
  40ec6c:	mov    r14,rax
  40ec6f:	mov    QWORD PTR [rbp+0x8],rax
  40ec73:	je     0x40eca3
  40ec75:	lea    rcx,[r12+0x1]
  40ec7a:	call   0x4161d0
  40ec7f:	test   rax,rax
  40ec82:	mov    QWORD PTR [r14],rax
  40ec85:	je     0x40eca3
  40ec87:	mov    rdx,QWORD PTR [rsp+0x30]
  40ec8c:	mov    r8,r12
  40ec8f:	mov    rcx,rax
  40ec92:	call   0x4161b8
  40ec97:	mov    BYTE PTR [rax+r12*1],0x0
  40ec9c:	xor    eax,eax
  40ec9e:	jmp    0x40eb66
  40eca3:	lea    rax,[rip+0x20674]        # 0x42f31e
  40ecaa:	mov    QWORD PTR [r13+0xca8],0x0
  40ecb5:	mov    QWORD PTR [r13+0xca0],rax
  40ecbc:	mov    eax,0x1b
  40ecc1:	jmp    0x40eb66
  40ecc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ecd0:	mov    rbx,QWORD PTR [r13+0xc80]
  40ecd7:	mov    eax,DWORD PTR [rsp+0x3c]
  40ecdb:	add    r15,0x1
  40ecdf:	lea    r14,[rdi+0x1]
  40ece3:	mov    rcx,QWORD PTR [r13+0xc90]
  40ecea:	mov    r12,r15
  40eced:	shl    rbx,0x5
  40ecf1:	lea    ebp,[rax+0x1]
  40ecf4:	add    rbx,r13
  40ecf7:	mov    DWORD PTR [rbx],0x1
  40ecfd:	mov    DWORD PTR [rbx+0x10],0x0
  40ed04:	mov    DWORD PTR [rbx+0x14],0x0
  40ed0b:	mov    QWORD PTR [rbx+0x8],0x0
  40ed13:	mov    DWORD PTR [rbx+0x4],eax
  40ed16:	movzx  eax,BYTE PTR [r12]
  40ed1b:	cmp    al,0x5c
  40ed1d:	je     0x40ed91
  40ed1f:	jg     0x40ed62
  40ed21:	cmp    al,0x2c
  40ed23:	je     0x40ee8e
  40ed29:	cmp    al,0x5b
  40ed2b:	je     0x40f008
  40ed31:	test   al,al
  40ed33:	jne    0x40ed7a
  40ed35:	lea    rax,[rip+0x205f0]        # 0x42f32c
  40ed3c:	mov    QWORD PTR [r13+0xca8],rdi
  40ed43:	mov    rbx,QWORD PTR [r13+0xc80]
  40ed4a:	mov    rdi,r14
  40ed4d:	mov    DWORD PTR [rsp+0x3c],ebp
  40ed51:	mov    QWORD PTR [r13+0xca0],rax
  40ed58:	mov    eax,0x3
  40ed5d:	jmp    0x40eb66
  40ed62:	cmp    al,0x7b
  40ed64:	je     0x40f008
  40ed6a:	cmp    al,0x7d
  40ed6c:	je     0x40ee5c
  40ed72:	cmp    al,0x5d
  40ed74:	je     0x40f035
  40ed7a:	add    r12,0x1
  40ed7e:	mov    BYTE PTR [rcx],al
  40ed80:	add    r14,0x1
  40ed84:	movzx  eax,BYTE PTR [r12]
  40ed89:	add    rcx,0x1
  40ed8d:	cmp    al,0x5c
  40ed8f:	jne    0x40ed1f
  40ed91:	movzx  edx,BYTE PTR [r12+0x1]
  40ed97:	test   dl,dl
  40ed99:	je     0x40ed7a
  40ed9b:	add    r12,0x1
  40ed9f:	add    r14,0x1
  40eda3:	mov    eax,edx
  40eda5:	jmp    0x40ed7a
  40eda7:	nop    WORD PTR [rax+rax*1+0x0]
  40edb0:	mov    r13,QWORD PTR [rsp+0x30]
  40edb5:	lea    rax,[rip+0x20544]        # 0x42f300
  40edbc:	mov    QWORD PTR [r13+0xca8],rdi
  40edc3:	mov    QWORD PTR [r13+0xca0],rax
  40edca:	mov    ebx,0x3
  40edcf:	cmp    QWORD PTR [rsp+0x158],0x0
  40edd8:	je     0x40ee0e
  40edda:	mov    r9,QWORD PTR [r13+0xca0]
  40ede1:	test   r9,r9
  40ede4:	je     0x40ee0e
  40ede6:	mov    rax,QWORD PTR [r13+0xca8]
  40eded:	test   rax,rax
  40edf0:	jne    0x40f0bf
  40edf6:	mov    r8d,ebx
  40edf9:	lea    rdx,[rip+0x205c7]        # 0x42f3c7
  40ee00:	mov    rcx,QWORD PTR [rsp+0x158]
  40ee08:	call   QWORD PTR [rip+0x267da]        # 0x4355e8
  40ee0e:	mov    rcx,r13
  40ee11:	call   0x40e8c0
  40ee16:	mov    rax,QWORD PTR [rsp+0x150]
  40ee1e:	mov    DWORD PTR [rax],0x1
  40ee24:	jmp    0x40eae2
  40ee29:	cmp    r15,0x1
  40ee2d:	jbe    0x40eb9e
  40ee33:	mov    rdx,r13
  40ee36:	mov    rcx,rbp
  40ee39:	mov    r8,r14
  40ee3c:	call   0x4161b8
  40ee41:	add    rbp,r14
  40ee44:	add    r13,r14
  40ee47:	add    r12,r14
  40ee4a:	jmp    0x40ea73
  40ee4f:	mov    rcx,rsi
  40ee52:	call   0x416220
  40ee57:	jmp    0x40eae2
  40ee5c:	cmp    r15,r12
  40ee5f:	je     0x40f233
  40ee65:	mov    eax,DWORD PTR [rbx+0x10]
  40ee68:	mov    r10d,DWORD PTR [rsp+0x58]
  40ee6d:	xor    edx,edx
  40ee6f:	lea    r8d,[rax+0x1]
  40ee73:	mov    r9d,r10d
  40ee76:	imul   r9d,r8d
  40ee7a:	mov    eax,r9d
  40ee7d:	div    r8d
  40ee80:	cmp    eax,r10d
  40ee83:	jne    0x40f202
  40ee89:	mov    DWORD PTR [rsp+0x58],r9d
  40ee8e:	mov    BYTE PTR [rcx],0x0
  40ee91:	mov    rcx,QWORD PTR [rbx+0x8]
  40ee95:	test   rcx,rcx
  40ee98:	je     0x40f0ee
  40ee9e:	mov    eax,DWORD PTR [rbx+0x10]
  40eea1:	lea    edx,[rax+0x1]
  40eea4:	movsxd rdx,edx
  40eea7:	shl    rdx,0x3
  40eeab:	call   0x416198
  40eeb0:	test   rax,rax
  40eeb3:	je     0x40f105
  40eeb9:	mov    QWORD PTR [rbx+0x8],rax
  40eebd:	movsxd rdx,DWORD PTR [rbx+0x10]
  40eec1:	mov    rcx,QWORD PTR [r13+0xc90]
  40eec8:	lea    rdx,[rax+rdx*8]
  40eecc:	mov    QWORD PTR [rsp+0x30],rdx
  40eed1:	call   0x4160e8
  40eed6:	mov    rdx,QWORD PTR [rsp+0x30]
  40eedb:	mov    QWORD PTR [rdx],rax
  40eede:	movsxd rcx,DWORD PTR [rbx+0x10]
  40eee2:	mov    rdx,QWORD PTR [rbx+0x8]
  40eee6:	cmp    QWORD PTR [rdx+rcx*8],0x0
  40eeeb:	mov    rax,rcx
  40eeee:	je     0x40f105
  40eef4:	add    eax,0x1
  40eef7:	mov    DWORD PTR [rbx+0x10],eax
  40eefa:	cmp    BYTE PTR [r12],0x7d
  40eeff:	je     0x40f0a5
  40ef05:	mov    rcx,QWORD PTR [r13+0xc90]
  40ef0c:	add    r12,0x1
  40ef10:	add    r14,0x1
  40ef14:	jmp    0x40ed16
  40ef19:	mov    DWORD PTR [r14],0x3
  40ef20:	mov    DWORD PTR [r14+0x10],0x0
  40ef28:	cmp    BYTE PTR [r15+0x1],0x30
  40ef2d:	je     0x40f1dd
  40ef33:	call   QWORD PTR [rip+0x2689f]        # 0x4357d8
  40ef39:	mov    rcx,QWORD PTR [rsp+0x30]
  40ef3e:	mov    rdx,QWORD PTR [rsp+0x40]
  40ef43:	mov    r8d,0xa
  40ef49:	mov    DWORD PTR [rax],0x0
  40ef4f:	call   0x416110
  40ef54:	mov    r12d,eax
  40ef57:	call   QWORD PTR [rip+0x2687b]        # 0x4357d8
  40ef5d:	mov    ecx,DWORD PTR [rax]
  40ef5f:	test   ecx,ecx
  40ef61:	jne    0x40f0e6
  40ef67:	mov    rax,QWORD PTR [rsp+0x70]
  40ef6c:	xor    r15d,r15d
  40ef6f:	cmp    QWORD PTR [rsp+0x30],rax
  40ef74:	je     0x40f0e9
  40ef7a:	cmp    BYTE PTR [rax],0x2d
  40ef7d:	jne    0x40f0e9
  40ef83:	lea    r15,[rax+0x1]
  40ef87:	movzx  eax,BYTE PTR [rax+0x1]
  40ef8b:	test   al,al
  40ef8d:	jne    0x40ef9d
  40ef8f:	jmp    0x40effe
  40ef91:	add    r15,0x1
  40ef95:	movzx  eax,BYTE PTR [r15]
  40ef99:	test   al,al
  40ef9b:	je     0x40effe
  40ef9d:	cmp    al,0x9
  40ef9f:	je     0x40ef91
  40efa1:	cmp    al,0x20
  40efa3:	je     0x40ef91
  40efa5:	sub    eax,0x30
  40efa8:	cmp    eax,0x9
  40efab:	ja     0x40effe
  40efad:	call   QWORD PTR [rip+0x26825]        # 0x4357d8
  40efb3:	mov    rdx,QWORD PTR [rsp+0x40]
  40efb8:	mov    r8d,0xa
  40efbe:	mov    rcx,r15
  40efc1:	mov    DWORD PTR [rax],0x0
  40efc7:	call   0x416110
  40efcc:	mov    DWORD PTR [rsp+0x3c],eax
  40efd0:	call   QWORD PTR [rip+0x26802]        # 0x4357d8
  40efd6:	mov    edx,DWORD PTR [rax]
  40efd8:	mov    r10,QWORD PTR [rsp+0x70]
  40efdd:	test   edx,edx
  40efdf:	jne    0x40f260
  40efe5:	cmp    BYTE PTR [r10],0x3a
  40efe9:	mov    ecx,0x1
  40efee:	je     0x40f260
  40eff4:	cmp    BYTE PTR [r10],0x5d
  40eff8:	je     0x40f31c
  40effe:	sub    r15,QWORD PTR [rsp+0x30]
  40f003:	jmp    0x40f0e9
  40f008:	lea    rax,[rip+0x2032d]        # 0x42f33c
  40f00f:	mov    rdi,r14
  40f012:	mov    QWORD PTR [r13+0xca0],rax
  40f019:	mov    QWORD PTR [r13+0xca8],rdi
  40f020:	mov    eax,0x3
  40f025:	mov    rbx,QWORD PTR [r13+0xc80]
  40f02c:	mov    DWORD PTR [rsp+0x3c],ebp
  40f030:	jmp    0x40eb66
  40f035:	mov    rdi,r14
  40f038:	lea    rax,[rip+0x20325]        # 0x42f364
  40f03f:	jmp    0x40f012
  40f041:	lea    rax,[rsp+0x6f]
  40f046:	mov    r9,QWORD PTR [rsp+0x48]
  40f04b:	mov    rcx,QWORD PTR [rsp+0x30]
  40f050:	lea    r8,[rsp+0x6d]
  40f055:	lea    rdx,[rip+0x20321]        # 0x42f37d
  40f05c:	mov    DWORD PTR [r14],0x2
  40f063:	mov    QWORD PTR [rsp+0x20],rax
  40f068:	call   0x416180
  40f06d:	cmp    eax,0x3
  40f070:	je     0x40f136
  40f076:	lea    rax,[rip+0x20308]        # 0x42f385
  40f07d:	mov    QWORD PTR [r13+0xca8],rdi
  40f084:	mov    QWORD PTR [r13+0xca0],rax
  40f08b:	mov    rbx,QWORD PTR [r13+0xc80]
  40f092:	mov    r15,QWORD PTR [rsp+0x30]
  40f097:	mov    eax,0x3
  40f09c:	mov    DWORD PTR [rsp+0x3c],ebp
  40f0a0:	jmp    0x40eb66
  40f0a5:	lea    r15,[r12+0x1]
  40f0aa:	mov    rbx,QWORD PTR [r13+0xc80]
  40f0b1:	mov    rdi,r14
  40f0b4:	mov    DWORD PTR [rsp+0x3c],ebp
  40f0b8:	xor    eax,eax
  40f0ba:	jmp    0x40eb66
  40f0bf:	lea    rsi,[rsp+0x70]
  40f0c4:	mov    QWORD PTR [rsp+0x20],rax
  40f0c9:	lea    r8,[rip+0x202e6]        # 0x42f3b6
  40f0d0:	mov    edx,0x80
  40f0d5:	mov    rcx,rsi
  40f0d8:	call   QWORD PTR [rip+0x2651a]        # 0x4355f8
  40f0de:	mov    r9,rsi
  40f0e1:	jmp    0x40edf6
  40f0e6:	xor    r15d,r15d
  40f0e9:	add    rdi,r15
  40f0ec:	jmp    0x40f076
  40f0ee:	mov    ecx,0x8
  40f0f3:	call   0x4161d0
  40f0f8:	test   rax,rax
  40f0fb:	mov    QWORD PTR [rbx+0x8],rax
  40f0ff:	jne    0x40eebd
  40f105:	lea    rax,[rip+0x20212]        # 0x42f31e
  40f10c:	mov    QWORD PTR [r13+0xca8],0x0
  40f117:	mov    rbx,QWORD PTR [r13+0xc80]
  40f11e:	mov    rdi,r14
  40f121:	mov    DWORD PTR [rsp+0x3c],ebp
  40f125:	mov    QWORD PTR [r13+0xca0],rax
  40f12c:	mov    eax,0x1b
  40f131:	jmp    0x40eb66
  40f136:	movzx  eax,BYTE PTR [rsp+0x6f]
  40f13b:	cmp    al,0x3a
  40f13d:	je     0x40f2b0
  40f143:	cmp    al,0x5d
  40f145:	jne    0x40f076
  40f14b:	add    r15,0x5
  40f14f:	movsx  edx,BYTE PTR [rsp+0x6d]
  40f154:	movzx  r9d,BYTE PTR [rsp+0x6e]
  40f15a:	mov    rax,r15
  40f15d:	sub    rax,QWORD PTR [rsp+0x30]
  40f162:	mov    ecx,0x1
  40f167:	add    rdi,rax
  40f16a:	cmp    dl,r9b
  40f16d:	jge    0x40f076
  40f173:	movsx  eax,r9b
  40f177:	movsx  r8d,dl
  40f17b:	mov    ebx,eax
  40f17d:	sub    ebx,r8d
  40f180:	cmp    ebx,0x19
  40f183:	jg     0x40f076
  40f189:	test   ecx,ecx
  40f18b:	jle    0x40f076
  40f191:	sub    eax,edx
  40f193:	mov    BYTE PTR [r14+0x8],dl
  40f197:	mov    BYTE PTR [r14+0xa],dl
  40f19b:	cdq    
  40f19c:	mov    DWORD PTR [r14+0xc],ecx
  40f1a0:	mov    BYTE PTR [r14+0x9],r9b
  40f1a4:	idiv   ecx
  40f1a6:	mov    ebx,DWORD PTR [rsp+0x58]
  40f1aa:	lea    ecx,[rax+0x1]
  40f1ad:	xor    edx,edx
  40f1af:	mov    r8d,ebx
  40f1b2:	imul   r8d,ecx
  40f1b6:	mov    eax,r8d
  40f1b9:	div    ecx
  40f1bb:	cmp    eax,ebx
  40f1bd:	je     0x40f37c
  40f1c3:	lea    rax,[rip+0x20217]        # 0x42f3e1
  40f1ca:	mov    QWORD PTR [r13+0xca8],rdi
  40f1d1:	mov    QWORD PTR [r13+0xca0],rax
  40f1d8:	jmp    0x40f08b
  40f1dd:	mov    rcx,QWORD PTR [rsp+0x30]
  40f1e2:	mov    edx,0x1
  40f1e7:	add    rcx,0x1
  40f1eb:	mov    DWORD PTR [r14+0x10],edx
  40f1ef:	add    edx,0x1
  40f1f2:	movzx  eax,BYTE PTR [rcx]
  40f1f5:	sub    eax,0x30
  40f1f8:	cmp    eax,0x9
  40f1fb:	jbe    0x40f1e7
  40f1fd:	jmp    0x40ef33
  40f202:	lea    rax,[rip+0x201d8]        # 0x42f3e1
  40f209:	mov    QWORD PTR [r13+0xca8],0x0
  40f214:	mov    rbx,QWORD PTR [r13+0xc80]
  40f21b:	mov    rdi,r14
  40f21e:	mov    DWORD PTR [rsp+0x3c],ebp
  40f222:	mov    QWORD PTR [r13+0xca0],rax
  40f229:	mov    eax,0x3
  40f22e:	jmp    0x40eb66
  40f233:	lea    rax,[rip+0x2010f]        # 0x42f349
  40f23a:	mov    QWORD PTR [r13+0xca8],r14
  40f241:	mov    rbx,QWORD PTR [r13+0xc80]
  40f248:	mov    rdi,r14
  40f24b:	mov    DWORD PTR [rsp+0x3c],ebp
  40f24f:	mov    QWORD PTR [r13+0xca0],rax
  40f256:	mov    eax,0x3
  40f25b:	jmp    0x40eb66
  40f260:	lea    r15,[r10+0x1]
  40f264:	call   QWORD PTR [rip+0x2656e]        # 0x4357d8
  40f26a:	mov    rdx,QWORD PTR [rsp+0x40]
  40f26f:	mov    rcx,r15
  40f272:	mov    r8d,0xa
  40f278:	mov    DWORD PTR [rax],0x0
  40f27e:	call   0x416110
  40f283:	mov    DWORD PTR [rsp+0x5c],eax
  40f287:	call   QWORD PTR [rip+0x2654b]        # 0x4357d8
  40f28d:	mov    eax,DWORD PTR [rax]
  40f28f:	mov    ecx,DWORD PTR [rsp+0x5c]
  40f293:	test   eax,eax
  40f295:	jne    0x40effe
  40f29b:	mov    r10,QWORD PTR [rsp+0x70]
  40f2a0:	test   r10,r10
  40f2a3:	je     0x40effe
  40f2a9:	jmp    0x40eff4
  40f2ae:	xchg   ax,ax
  40f2b0:	mov    rax,QWORD PTR [rsp+0x50]
  40f2b5:	lea    rbx,[r15+0x5]
  40f2b9:	call   rax
  40f2bb:	mov    rdx,QWORD PTR [rsp+0x40]
  40f2c0:	mov    r8d,0xa
  40f2c6:	mov    rcx,rbx
  40f2c9:	mov    DWORD PTR [rax],0x0
  40f2cf:	call   0x416110
  40f2d4:	mov    r12d,eax
  40f2d7:	mov    rax,QWORD PTR [rsp+0x50]
  40f2dc:	call   rax
  40f2de:	mov    r8d,DWORD PTR [rax]
  40f2e1:	test   r8d,r8d
  40f2e4:	jne    0x40f2f9
  40f2e6:	mov    rax,QWORD PTR [rsp+0x70]
  40f2eb:	cmp    rbx,rax
  40f2ee:	je     0x40f2f9
  40f2f0:	cmp    BYTE PTR [rax],0x5d
  40f2f3:	je     0x40f393
  40f2f9:	movzx  r9d,BYTE PTR [rsp+0x6e]
  40f2ff:	movsx  edx,BYTE PTR [rsp+0x6d]
  40f304:	xor    eax,eax
  40f306:	mov    r15,QWORD PTR [rsp+0x30]
  40f30b:	mov    ecx,0xffffffff
  40f310:	jmp    0x40f167
  40f315:	mov    ebx,eax
  40f317:	jmp    0x40edcf
  40f31c:	lea    r15,[r10+0x1]
  40f320:	mov    rax,r15
  40f323:	sub    rax,QWORD PTR [rsp+0x30]
  40f328:	add    rdi,rax
  40f32b:	cmp    r12d,DWORD PTR [rsp+0x3c]
  40f330:	ja     0x40f076
  40f336:	test   ecx,ecx
  40f338:	je     0x40f076
  40f33e:	mov    eax,DWORD PTR [rsp+0x3c]
  40f342:	sub    eax,r12d
  40f345:	cmp    eax,ecx
  40f347:	jb     0x40f076
  40f34d:	mov    eax,DWORD PTR [rsp+0x3c]
  40f351:	mov    rdx,rbx
  40f354:	mov    DWORD PTR [r14+0x8],r12d
  40f358:	shl    rdx,0x5
  40f35c:	mov    DWORD PTR [r14+0x14],r12d
  40f360:	mov    DWORD PTR [r14+0xc],eax
  40f364:	mov    DWORD PTR [r13+rdx*1+0x18],ecx
  40f369:	mov    edx,DWORD PTR [r14+0xc]
  40f36d:	mov    eax,edx
  40f36f:	sub    eax,DWORD PTR [r14+0x8]
  40f373:	xor    edx,edx
  40f375:	div    ecx
  40f377:	jmp    0x40f1a6
  40f37c:	mov    rbx,QWORD PTR [r13+0xc80]
  40f383:	mov    DWORD PTR [rsp+0x58],r8d
  40f388:	xor    eax,eax
  40f38a:	mov    DWORD PTR [rsp+0x3c],ebp
  40f38e:	jmp    0x40eb66
  40f393:	lea    r15,[rax+0x1]
  40f397:	movsx  r8d,BYTE PTR [rsp+0x6e]
  40f39d:	movsx  eax,BYTE PTR [rsp+0x6d]
  40f3a2:	mov    ecx,r12d
  40f3a5:	mov    r9d,r8d
  40f3a8:	sub    r8d,eax
  40f3ab:	mov    edx,eax
  40f3ad:	mov    rax,r15
  40f3b0:	sub    rax,QWORD PTR [rsp+0x30]
  40f3b5:	cmp    r12d,r8d
  40f3b8:	mov    r8d,0xffffffff
  40f3be:	cmovg  ecx,r8d
  40f3c2:	jmp    0x40f167
  40f3c7:	nop    WORD PTR [rax+rax*1+0x0]
  40f3d0:	push   r15
  40f3d2:	push   r14
  40f3d4:	push   r13
  40f3d6:	push   r12
  40f3d8:	push   rbp
  40f3d9:	push   rdi
  40f3da:	push   rsi
  40f3db:	push   rbx
  40f3dc:	sub    rsp,0x38
  40f3e0:	mov    rdi,QWORD PTR [rdx+0xc88]
  40f3e7:	mov    rbp,QWORD PTR [rdx+0xc90]
  40f3ee:	mov    QWORD PTR [rcx],0x0
  40f3f5:	cmp    BYTE PTR [rdx+0xc98],0x0
  40f3fc:	mov    r12,rcx
  40f3ff:	mov    rbx,rdx
  40f402:	jne    0x40f471
  40f404:	mov    rcx,QWORD PTR [rdx+0xc80]
  40f40b:	mov    BYTE PTR [rdx+0xc98],0x1
  40f412:	mov    r13,QWORD PTR [rip+0x261df]        # 0x4355f8
  40f419:	add    rdi,0x1
  40f41d:	xor    r15d,r15d
  40f420:	test   rcx,rcx
  40f423:	lea    rsi,[rbx+0x14]
  40f427:	mov    r14,r13
  40f42a:	je     0x40f513
  40f430:	mov    edx,DWORD PTR [rsi-0x14]
  40f433:	cmp    edx,0x2
  40f436:	je     0x40f560
  40f43c:	cmp    edx,0x3
  40f43f:	je     0x40f531
  40f445:	cmp    edx,0x1
  40f448:	je     0x40f4d0
  40f44e:	lea    rcx,[rip+0x1ff9b]        # 0x42f3f0
  40f455:	call   QWORD PTR [rip+0x26195]        # 0x4355f0
  40f45b:	mov    eax,0x2
  40f460:	add    rsp,0x38
  40f464:	pop    rbx
  40f465:	pop    rsi
  40f466:	pop    rdi
  40f467:	pop    rbp
  40f468:	pop    r12
  40f46a:	pop    r13
  40f46c:	pop    r14
  40f46e:	pop    r15
  40f470:	ret    
  40f471:	mov    rcx,QWORD PTR [rdx+0xc80]
  40f478:	xor    r8d,r8d
  40f47b:	mov    rax,rcx
  40f47e:	shl    rax,0x5
  40f482:	lea    rax,[rdx+rax*1-0xc]
  40f487:	cmp    r8,rcx
  40f48a:	je     0x40f5d0
  40f490:	mov    edx,DWORD PTR [rax-0x14]
  40f493:	cmp    edx,0x2
  40f496:	je     0x40f5a0
  40f49c:	cmp    edx,0x3
  40f49f:	je     0x40f580
  40f4a5:	cmp    edx,0x1
  40f4a8:	jne    0x40f44e
  40f4aa:	cmp    QWORD PTR [rax-0xc],0x0
  40f4af:	je     0x40f412
  40f4b5:	mov    esi,DWORD PTR [rax]
  40f4b7:	lea    edx,[rsi+0x1]
  40f4ba:	cmp    edx,DWORD PTR [rax-0x4]
  40f4bd:	mov    DWORD PTR [rax],edx
  40f4bf:	jne    0x40f412
  40f4c5:	mov    DWORD PTR [rax],0x0
  40f4cb:	jmp    0x40f5ba
  40f4d0:	mov    rax,QWORD PTR [rsi-0xc]
  40f4d4:	test   rax,rax
  40f4d7:	je     0x40f4fe
  40f4d9:	movsxd rdx,DWORD PTR [rsi]
  40f4dc:	mov    rcx,rbp
  40f4df:	lea    r8,[rip+0x1ff35]        # 0x42f41b
  40f4e6:	mov    r9,QWORD PTR [rax+rdx*8]
  40f4ea:	mov    rdx,rdi
  40f4ed:	call   r14
  40f4f0:	mov    rcx,rbp
  40f4f3:	call   0x416150
  40f4f8:	add    rbp,rax
  40f4fb:	sub    rdi,rax
  40f4fe:	add    r15,0x1
  40f502:	add    rsi,0x20
  40f506:	cmp    QWORD PTR [rbx+0xc80],r15
  40f50d:	ja     0x40f430
  40f513:	mov    rcx,QWORD PTR [rbx+0xc90]
  40f51a:	call   0x4160e8
  40f51f:	cmp    rax,0x1
  40f523:	mov    QWORD PTR [r12],rax
  40f527:	sbb    eax,eax
  40f529:	and    eax,0x1b
  40f52c:	jmp    0x40f460
  40f531:	mov    eax,DWORD PTR [rsi]
  40f533:	mov    r9d,DWORD PTR [rsi-0x4]
  40f537:	mov    rdx,rdi
  40f53a:	mov    rcx,rbp
  40f53d:	lea    r8,[rip+0x1feda]        # 0x42f41e
  40f544:	mov    DWORD PTR [rsp+0x20],eax
  40f548:	call   r13
  40f54b:	mov    rcx,rbp
  40f54e:	call   0x416150
  40f553:	add    rbp,rax
  40f556:	sub    rdi,rax
  40f559:	jmp    0x40f4fe
  40f55b:	nop    DWORD PTR [rax+rax*1+0x0]
  40f560:	test   rdi,rdi
  40f563:	je     0x40f4fe
  40f565:	movzx  eax,BYTE PTR [rsi-0xa]
  40f569:	sub    rdi,0x1
  40f56d:	mov    BYTE PTR [rbp+0x1],0x0
  40f571:	add    rbp,0x1
  40f575:	mov    BYTE PTR [rbp-0x1],al
  40f578:	jmp    0x40f4fe
  40f57a:	nop    WORD PTR [rax+rax*1+0x0]
  40f580:	mov    edx,DWORD PTR [rax]
  40f582:	add    edx,DWORD PTR [rax+0x4]
  40f585:	cmp    edx,DWORD PTR [rax-0x8]
  40f588:	mov    DWORD PTR [rax],edx
  40f58a:	jbe    0x40f412
  40f590:	mov    edx,DWORD PTR [rax-0xc]
  40f593:	mov    DWORD PTR [rax],edx
  40f595:	jmp    0x40f5ba
  40f597:	nop    WORD PTR [rax+rax*1+0x0]
  40f5a0:	movzx  edx,BYTE PTR [rax-0xa]
  40f5a4:	add    dl,BYTE PTR [rax-0x8]
  40f5a7:	cmp    dl,BYTE PTR [rax-0xb]
  40f5aa:	mov    BYTE PTR [rax-0xa],dl
  40f5ad:	jle    0x40f412
  40f5b3:	movzx  edx,BYTE PTR [rax-0xc]
  40f5b7:	mov    BYTE PTR [rax-0xa],dl
  40f5ba:	add    r8,0x1
  40f5be:	sub    rax,0x20
  40f5c2:	jmp    0x40f487
  40f5c7:	nop    WORD PTR [rax+rax*1+0x0]
  40f5d0:	xor    eax,eax
  40f5d2:	jmp    0x40f460
  40f5d7:	nop    WORD PTR [rax+rax*1+0x0]
  40f5e0:	push   r15
  40f5e2:	push   r14
  40f5e4:	push   r13
  40f5e6:	push   r12
  40f5e8:	push   rbp
  40f5e9:	push   rdi
  40f5ea:	push   rsi
  40f5eb:	push   rbx
  40f5ec:	sub    rsp,0x78
  40f5f0:	mov    QWORD PTR [rsp+0xc0],rcx
  40f5f8:	mov    QWORD PTR [rcx],0x0
  40f5ff:	mov    rcx,rdx
  40f602:	mov    rsi,rdx
  40f605:	mov    QWORD PTR [rsp+0xc8],rdx
  40f60d:	mov    r14,r8
  40f610:	call   0x416150
  40f615:	lea    rbp,[rax+0x1]
  40f619:	mov    rcx,rbp
  40f61c:	call   0x4161d0
  40f621:	mov    r12,rax
  40f624:	mov    eax,0x1b
  40f629:	test   r12,r12
  40f62c:	je     0x40f780
  40f632:	movzx  eax,BYTE PTR [rsi]
  40f635:	test   al,al
  40f637:	je     0x40f791
  40f63d:	lea    rdx,[rsp+0xc8]
  40f645:	xor    ebx,ebx
  40f647:	xor    edi,edi
  40f649:	xor    r13d,r13d
  40f64c:	mov    QWORD PTR [rsp+0x38],rdx
  40f651:	jmp    0x40f6b1
  40f653:	lea    rax,[rsi+0x1]
  40f657:	mov    r13,rsi
  40f65a:	mov    edi,0x1
  40f65f:	mov    QWORD PTR [rsp+0xc8],rax
  40f667:	lea    r15,[rdi+rbx*1]
  40f66b:	cmp    r15,rbp
  40f66e:	jb     0x40f68c
  40f670:	lea    rbp,[r15+r15*1]
  40f674:	mov    rcx,r12
  40f677:	lea    rdx,[rbp+0x1]
  40f67b:	call   0x416198
  40f680:	test   rax,rax
  40f683:	je     0x40f880
  40f689:	mov    r12,rax
  40f68c:	lea    rcx,[r12+rbx*1]
  40f690:	mov    r8,rdi
  40f693:	mov    rdx,r13
  40f696:	call   0x4161b8
  40f69b:	mov    rsi,QWORD PTR [rsp+0xc8]
  40f6a3:	movzx  eax,BYTE PTR [rsi]
  40f6a6:	test   al,al
  40f6a8:	je     0x40f794
  40f6ae:	mov    rbx,r15
  40f6b1:	cmp    al,0x23
  40f6b3:	jne    0x40f653
  40f6b5:	movzx  eax,BYTE PTR [rsi+0x1]
  40f6b9:	sub    eax,0x30
  40f6bc:	cmp    eax,0x9
  40f6bf:	ja     0x40f653
  40f6c1:	mov    rdx,QWORD PTR [rsp+0x38]
  40f6c6:	lea    r15,[rsi+0x1]
  40f6ca:	mov    r8d,0xa
  40f6d0:	mov    rcx,r15
  40f6d3:	call   0x416110
  40f6d8:	mov    r10,QWORD PTR [r14+0xc80]
  40f6df:	mov    edx,eax
  40f6e1:	cmp    rdx,r10
  40f6e4:	jae    0x40f717
  40f6e6:	sub    eax,0x1
  40f6e9:	cmp    DWORD PTR [r14+0x4],eax
  40f6ed:	lea    r8,[r14+0x24]
  40f6f1:	mov    edx,0x1
  40f6f6:	jne    0x40f710
  40f6f8:	jmp    0x40f72c
  40f6fa:	nop    WORD PTR [rax+rax*1+0x0]
  40f700:	mov    r9d,DWORD PTR [r8]
  40f703:	add    rdx,0x1
  40f707:	add    r8,0x20
  40f70b:	cmp    r9d,eax
  40f70e:	je     0x40f730
  40f710:	cmp    rdx,r10
  40f713:	mov    ecx,edx
  40f715:	jne    0x40f700
  40f717:	mov    QWORD PTR [rsp+0xc8],r15
  40f71f:	mov    r13,rsi
  40f722:	mov    edi,0x1
  40f727:	jmp    0x40f667
  40f72c:	xor    ecx,ecx
  40f72e:	xchg   ax,ax
  40f730:	shl    rcx,0x5
  40f734:	lea    rax,[r14+rcx*1]
  40f738:	mov    esi,DWORD PTR [rax]
  40f73a:	cmp    esi,0x2
  40f73d:	je     0x40f7d3
  40f743:	cmp    esi,0x3
  40f746:	je     0x40f814
  40f74c:	cmp    esi,0x1
  40f74f:	je     0x40f7ef
  40f755:	call   QWORD PTR [rip+0x26045]        # 0x4357a0
  40f75b:	mov    r8d,esi
  40f75e:	lea    rcx,[rax+0x60]
  40f762:	lea    rdx,[rip+0x1fc87]        # 0x42f3f0
  40f769:	call   QWORD PTR [rip+0x25e79]        # 0x4355e8
  40f76f:	mov    rcx,r12
  40f772:	call   0x416220
  40f777:	mov    eax,0x2
  40f77c:	nop    DWORD PTR [rax+0x0]
  40f780:	add    rsp,0x78
  40f784:	pop    rbx
  40f785:	pop    rsi
  40f786:	pop    rdi
  40f787:	pop    rbp
  40f788:	pop    r12
  40f78a:	pop    r13
  40f78c:	pop    r14
  40f78e:	pop    r15
  40f790:	ret    
  40f791:	xor    r15d,r15d
  40f794:	lea    rcx,[rsp+0x48]
  40f799:	mov    r8d,0x6
  40f79f:	mov    rdx,r12
  40f7a2:	mov    BYTE PTR [r12+r15*1],0x0
  40f7a7:	call   0x4032d0
  40f7ac:	mov    rcx,r12
  40f7af:	mov    ebx,eax
  40f7b1:	call   0x416220
  40f7b6:	test   ebx,ebx
  40f7b8:	mov    eax,0x3
  40f7bd:	jne    0x40f780
  40f7bf:	mov    rax,QWORD PTR [rsp+0x48]
  40f7c4:	mov    rbx,QWORD PTR [rsp+0xc0]
  40f7cc:	mov    QWORD PTR [rbx],rax
  40f7cf:	xor    eax,eax
  40f7d1:	jmp    0x40f780
  40f7d3:	movzx  eax,BYTE PTR [rax+0xa]
  40f7d7:	mov    BYTE PTR [rsp+0x51],0x0
  40f7dc:	mov    edi,0x1
  40f7e1:	lea    r13,[rsp+0x50]
  40f7e6:	mov    BYTE PTR [rsp+0x50],al
  40f7ea:	jmp    0x40f667
  40f7ef:	mov    rdx,QWORD PTR [rax+0x8]
  40f7f3:	test   rdx,rdx
  40f7f6:	je     0x40f667
  40f7fc:	movsxd rax,DWORD PTR [rax+0x14]
  40f800:	mov    r13,QWORD PTR [rdx+rax*8]
  40f804:	mov    rcx,r13
  40f807:	call   0x416150
  40f80c:	mov    rdi,rax
  40f80f:	jmp    0x40f667
  40f814:	mov    r9d,DWORD PTR [rax+0x10]
  40f818:	lea    r13,[rsp+0x50]
  40f81d:	mov    eax,DWORD PTR [rax+0x14]
  40f820:	lea    r8,[rip+0x1fbfd]        # 0x42f424
  40f827:	mov    edx,0x12
  40f82c:	mov    rdi,r13
  40f82f:	mov    rcx,r13
  40f832:	mov    DWORD PTR [rsp+0x20],eax
  40f836:	call   QWORD PTR [rip+0x25dbc]        # 0x4355f8
  40f83c:	mov    edx,DWORD PTR [rdi]
  40f83e:	add    rdi,0x4
  40f842:	lea    eax,[rdx-0x1010101]
  40f848:	not    edx
  40f84a:	and    eax,edx
  40f84c:	and    eax,0x80808080
  40f851:	je     0x40f83c
  40f853:	mov    edx,eax
  40f855:	shr    edx,0x10
  40f858:	test   eax,0x8080
  40f85d:	cmove  eax,edx
  40f860:	lea    rdx,[rdi+0x2]
  40f864:	cmove  rdi,rdx
  40f868:	add    al,al
  40f86a:	sbb    rdi,0x3
  40f86e:	sub    rdi,r13
  40f871:	jmp    0x40f667
  40f876:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f880:	mov    rcx,r12
  40f883:	call   0x416220
  40f888:	mov    eax,0x1b
  40f88d:	jmp    0x40f780
  40f892:	nop
  40f893:	nop
  40f894:	nop
  40f895:	nop
  40f896:	nop
  40f897:	nop
  40f898:	nop
  40f899:	nop
  40f89a:	nop
  40f89b:	nop
  40f89c:	nop
  40f89d:	nop
  40f89e:	nop
  40f89f:	nop
  40f8a0:	sub    rsp,0x28
  40f8a4:	call   QWORD PTR [rip+0x25e36]        # 0x4356e0
  40f8aa:	mov    edx,0x10624dd3
  40f8af:	mov    ecx,eax
  40f8b1:	mul    edx
  40f8b3:	shr    edx,0x6
  40f8b6:	imul   eax,edx,0x3e8
  40f8bc:	sub    ecx,eax
  40f8be:	mov    eax,edx
  40f8c0:	imul   ecx,ecx,0x3e8
  40f8c6:	and    eax,0x7fffff
  40f8cb:	shl    rcx,0x20
  40f8cf:	or     rax,rcx
  40f8d2:	add    rsp,0x28
  40f8d6:	ret    
  40f8d7:	nop    WORD PTR [rax+rax*1+0x0]
  40f8e0:	mov    eax,ecx
  40f8e2:	sar    rcx,0x20
  40f8e6:	sub    eax,edx
  40f8e8:	sar    rdx,0x20
  40f8ec:	sub    ecx,edx
  40f8ee:	mov    edx,0x10624dd3
  40f8f3:	imul   r8d,eax,0x3e8
  40f8fa:	mov    eax,ecx
  40f8fc:	sar    ecx,0x1f
  40f8ff:	imul   edx
  40f901:	sar    edx,0x6
  40f904:	sub    edx,ecx
  40f906:	lea    eax,[r8+rdx*1]
  40f90a:	ret    
  40f90b:	nop    DWORD PTR [rax+rax*1+0x0]
  40f910:	mov    rax,rcx
  40f913:	mov    r8,rdx
  40f916:	sar    rax,0x20
  40f91a:	sar    r8,0x20
  40f91e:	cmp    ecx,edx
  40f920:	je     0x40f944
  40f922:	pxor   xmm0,xmm0
  40f926:	sub    eax,r8d
  40f929:	sub    ecx,edx
  40f92b:	pxor   xmm1,xmm1
  40f92f:	cvtsi2sd xmm0,eax
  40f933:	cvtsi2sd xmm1,ecx
  40f937:	divsd  xmm0,QWORD PTR [rip+0x1faf1]        # 0x42f430
  40f93f:	addsd  xmm0,xmm1
  40f943:	ret    
  40f944:	pxor   xmm0,xmm0
  40f948:	sub    eax,r8d
  40f94b:	cvtsi2sd xmm0,eax
  40f94f:	divsd  xmm0,QWORD PTR [rip+0x1fad9]        # 0x42f430
  40f957:	ret    
  40f958:	nop    DWORD PTR [rax+rax*1+0x0]
  40f960:	mov    eax,ecx
  40f962:	ret    
  40f963:	nop
  40f964:	nop
  40f965:	nop
  40f966:	nop
  40f967:	nop
  40f968:	nop
  40f969:	nop
  40f96a:	nop
  40f96b:	nop
  40f96c:	nop
  40f96d:	nop
  40f96e:	nop
  40f96f:	nop
  40f970:	push   r15
  40f972:	push   r14
  40f974:	push   r13
  40f976:	push   r12
  40f978:	push   rbp
  40f979:	push   rdi
  40f97a:	push   rsi
  40f97b:	push   rbx
  40f97c:	sub    rsp,0x68
  40f980:	mov    r13,QWORD PTR [rip+0x25e19]        # 0x4357a0
  40f987:	mov    r12,r8
  40f98a:	mov    QWORD PTR [rsp+0xb0],rcx
  40f992:	mov    QWORD PTR [rsp+0xb8],rdx
  40f99a:	call   r13
  40f99d:	test   r12,r12
  40f9a0:	lea    rsi,[rax+0x30]
  40f9a4:	mov    QWORD PTR [rsp+0x50],0x0
  40f9ad:	je     0x40fa60
  40f9b3:	movsx  ecx,BYTE PTR [r12]
  40f9b8:	test   cl,cl
  40f9ba:	je     0x40fa60
  40f9c0:	mov    rax,QWORD PTR [rip+0x25c21]        # 0x4355e8
  40f9c7:	mov    rdi,QWORD PTR [rip+0x25c5a]        # 0x435628
  40f9ce:	mov    QWORD PTR [rsp+0x28],rax
  40f9d3:	mov    rax,QWORD PTR [rip+0x25b9e]        # 0x435578
  40f9da:	mov    QWORD PTR [rsp+0x30],rax
  40f9df:	mov    rax,QWORD PTR [rip+0x25c02]        # 0x4355e8
  40f9e6:	mov    QWORD PTR [rsp+0x38],rax
  40f9eb:	jmp    0x40fa3b
  40f9ed:	nop    DWORD PTR [rax]
  40f9f0:	movzx  eax,BYTE PTR [r12+0x1]
  40f9f6:	cmp    al,0x72
  40f9f8:	je     0x40fba4
  40f9fe:	cmp    al,0x74
  40fa00:	je     0x40fb92
  40fa06:	cmp    al,0x6e
  40fa08:	mov    rdx,rsi
  40fa0b:	mov    ecx,0x5c
  40fa10:	je     0x40fb80
  40fa16:	call   0x416238
  40fa1b:	movsx  ecx,BYTE PTR [r12+0x1]
  40fa21:	mov    rdx,rsi
  40fa24:	call   0x416238
  40fa29:	add    r12,0x2
  40fa2d:	test   r12,r12
  40fa30:	je     0x40fa60
  40fa32:	movsx  ecx,BYTE PTR [r12]
  40fa37:	test   cl,cl
  40fa39:	je     0x40fa60
  40fa3b:	cmp    cl,0x25
  40fa3e:	je     0x40fa71
  40fa40:	cmp    cl,0x5c
  40fa43:	je     0x40f9f0
  40fa45:	mov    rdx,rsi
  40fa48:	add    r12,0x1
  40fa4c:	call   0x416238
  40fa51:	test   r12,r12
  40fa54:	jne    0x40fa32
  40fa56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fa60:	add    rsp,0x68
  40fa64:	pop    rbx
  40fa65:	pop    rsi
  40fa66:	pop    rdi
  40fa67:	pop    rbp
  40fa68:	pop    r12
  40fa6a:	pop    r13
  40fa6c:	pop    r14
  40fa6e:	pop    r15
  40fa70:	ret    
  40fa71:	movzx  eax,BYTE PTR [r12+0x1]
  40fa77:	cmp    al,0x25
  40fa79:	je     0x40fbe4
  40fa7f:	cmp    al,0x7b
  40fa81:	jne    0x40fb70
  40fa87:	mov    rcx,r12
  40fa8a:	mov    edx,0x7d
  40fa8f:	add    r12,0x2
  40fa93:	call   0x416178
  40fa98:	test   rax,rax
  40fa9b:	mov    rbp,rax
  40fa9e:	je     0x40fbfa
  40faa4:	movzx  r14d,BYTE PTR [rax]
  40faa8:	lea    r15,[rip+0x1fc61]        # 0x42f710
  40faaf:	mov    BYTE PTR [rax],0x0
  40fab2:	lea    rdx,[rip+0x1f987]        # 0x42f440
  40fab9:	xor    ebx,ebx
  40fabb:	jmp    0x40fad4
  40fabd:	nop    DWORD PTR [rax]
  40fac0:	add    r15,0x10
  40fac4:	mov    rdx,QWORD PTR [r15-0x10]
  40fac8:	add    ebx,0x1
  40facb:	test   rdx,rdx
  40face:	je     0x40fbc0
  40fad4:	mov    rcx,r12
  40fad7:	call   rdi
  40fad9:	test   eax,eax
  40fadb:	je     0x40fac0
  40fadd:	movsxd rbx,ebx
  40fae0:	lea    rax,[rip+0x1fc19]        # 0x42f700
  40fae7:	shl    rbx,0x4
  40faeb:	add    rax,rbx
  40faee:	cmp    DWORD PTR [rax+0x8],0x1e
  40faf2:	ja     0x40fb60
  40faf4:	mov    edx,DWORD PTR [rax+0x8]
  40faf7:	lea    rax,[rip+0x1f9ae]        # 0x42f4ac
  40fafe:	movsxd rdx,DWORD PTR [rax+rdx*4]
  40fb02:	add    rax,rdx
  40fb05:	jmp    rax
  40fb07:	lea    r8,[rsp+0x4c]
  40fb0c:	mov    edx,0x20002e
  40fb11:	mov    rcx,QWORD PTR [rsp+0xb0]
  40fb19:	mov    rax,QWORD PTR [rsp+0x30]
  40fb1e:	call   rax
  40fb20:	test   eax,eax
  40fb22:	jne    0x40fb60
  40fb24:	mov    eax,DWORD PTR [rsp+0x4c]
  40fb28:	lea    rdx,[rip+0x1f925]        # 0x42f454
  40fb2f:	cmp    eax,0x2
  40fb32:	je     0x40fb55
  40fb34:	cmp    eax,0x3
  40fb37:	lea    rdx,[rip+0x1f91a]        # 0x42f458
  40fb3e:	je     0x40fb55
  40fb40:	cmp    eax,0x1
  40fb43:	lea    rdx,[rip+0x1f904]        # 0x42f44e
  40fb4a:	lea    rax,[rip+0x1f8ff]        # 0x42f450
  40fb51:	cmove  rdx,rax
  40fb55:	mov    rcx,rsi
  40fb58:	mov    rax,QWORD PTR [rsp+0x38]
  40fb5d:	call   rax
  40fb5f:	nop
  40fb60:	lea    r12,[rbp+0x1]
  40fb64:	mov    BYTE PTR [rbp+0x0],r14b
  40fb68:	jmp    0x40fa2d
  40fb6d:	nop    DWORD PTR [rax]
  40fb70:	mov    rdx,rsi
  40fb73:	mov    ecx,0x25
  40fb78:	jmp    0x40fa16
  40fb7d:	nop    DWORD PTR [rax]
  40fb80:	mov    rdx,rsi
  40fb83:	mov    ecx,0xa
  40fb88:	call   0x416238
  40fb8d:	jmp    0x40fa29
  40fb92:	mov    rdx,rsi
  40fb95:	mov    ecx,0x9
  40fb9a:	call   0x416238
  40fb9f:	jmp    0x40fa29
  40fba4:	mov    rdx,rsi
  40fba7:	mov    ecx,0xd
  40fbac:	call   0x416238
  40fbb1:	jmp    0x40fa29
  40fbb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fbc0:	call   r13
  40fbc3:	mov    r8,r12
  40fbc6:	lea    rcx,[rax+0x60]
  40fbca:	lea    rdx,[rip+0x1f8af]        # 0x42f480
  40fbd1:	lea    r12,[rbp+0x1]
  40fbd5:	call   QWORD PTR [rip+0x25a0d]        # 0x4355e8
  40fbdb:	mov    BYTE PTR [rbp+0x0],r14b
  40fbdf:	jmp    0x40fa2d
  40fbe4:	mov    rdx,rsi
  40fbe7:	mov    ecx,0x25
  40fbec:	add    r12,0x2
  40fbf0:	call   0x416238
  40fbf5:	jmp    0x40fa2d
  40fbfa:	lea    rcx,[rip+0x1f859]        # 0x42f45a
  40fc01:	mov    r9,rsi
  40fc04:	mov    r8d,0x2
  40fc0a:	mov    edx,0x1
  40fc0f:	call   0x416210
  40fc14:	jmp    0x40fa2d
  40fc19:	lea    r8,[rsp+0x50]
  40fc1e:	mov    edx,0x100031
  40fc23:	mov    rcx,QWORD PTR [rsp+0xb0]
  40fc2b:	call   QWORD PTR [rip+0x25947]        # 0x435578
  40fc31:	test   eax,eax
  40fc33:	jne    0x40fb60
  40fc39:	mov    r8,QWORD PTR [rsp+0x50]
  40fc3e:	lea    rdx,[rip+0x1f831]        # 0x42f476
  40fc45:	mov    rcx,rsi
  40fc48:	mov    rax,QWORD PTR [rsp+0x28]
  40fc4d:	call   rax
  40fc4f:	jmp    0x40fb60
  40fc54:	lea    r8,[rsp+0x4c]
  40fc59:	mov    edx,0x20002a
  40fc5e:	mov    rcx,QWORD PTR [rsp+0xb0]
  40fc66:	call   QWORD PTR [rip+0x2590c]        # 0x435578
  40fc6c:	test   eax,eax
  40fc6e:	jne    0x40fb60
  40fc74:	mov    r8d,DWORD PTR [rsp+0x4c]
  40fc79:	lea    rdx,[rip+0x1f7e3]        # 0x42f463
  40fc80:	mov    rcx,rsi
  40fc83:	call   QWORD PTR [rip+0x2595f]        # 0x4355e8
  40fc89:	jmp    0x40fb60
  40fc8e:	lea    r8,[rsp+0x50]
  40fc93:	mov    edx,0x100029
  40fc98:	mov    rcx,QWORD PTR [rsp+0xb0]
  40fca0:	call   QWORD PTR [rip+0x258d2]        # 0x435578
  40fca6:	test   eax,eax
  40fca8:	jne    0x40fb60
  40fcae:	mov    r8,QWORD PTR [rsp+0x50]
  40fcb3:	lea    rdx,[rip+0x1f7bc]        # 0x42f476
  40fcba:	mov    rcx,rsi
  40fcbd:	call   QWORD PTR [rip+0x25925]        # 0x4355e8
  40fcc3:	jmp    0x40fb60
  40fcc8:	lea    r8,[rsp+0x4c]
  40fccd:	mov    edx,0x200028
  40fcd2:	mov    rcx,QWORD PTR [rsp+0xb0]
  40fcda:	call   QWORD PTR [rip+0x25898]        # 0x435578
  40fce0:	test   eax,eax
  40fce2:	jne    0x40fb60
  40fce8:	jmp    0x40fc74
  40fcea:	lea    r8,[rsp+0x50]
  40fcef:	mov    edx,0x100020
  40fcf4:	mov    rcx,QWORD PTR [rsp+0xb0]
  40fcfc:	call   QWORD PTR [rip+0x25876]        # 0x435578
  40fd02:	test   eax,eax
  40fd04:	jne    0x40fb60
  40fd0a:	jmp    0x40fcae
  40fd0c:	mov    rax,QWORD PTR [rsp+0xb8]
  40fd14:	mov    r8,QWORD PTR [rax]
  40fd17:	test   r8,r8
  40fd1a:	jne    0x40fcb3
  40fd1c:	jmp    0x40fb60
  40fd21:	lea    r8,[rsp+0x4c]
  40fd26:	mov    edx,0x20002f
  40fd2b:	mov    rcx,QWORD PTR [rsp+0xb0]
  40fd33:	call   QWORD PTR [rip+0x2583f]        # 0x435578
  40fd39:	test   eax,eax
  40fd3b:	jne    0x40fb60
  40fd41:	jmp    0x40fc74
  40fd46:	lea    r8,[rsp+0x4c]
  40fd4b:	mov    edx,0x20000d
  40fd50:	mov    rcx,QWORD PTR [rsp+0xb0]
  40fd58:	call   QWORD PTR [rip+0x2581a]        # 0x435578
  40fd5e:	test   eax,eax
  40fd60:	jne    0x40fb60
  40fd66:	jmp    0x40fc74
  40fd6b:	lea    r8,[rsp+0x50]
  40fd70:	mov    edx,0x10001f
  40fd75:	mov    rcx,QWORD PTR [rsp+0xb0]
  40fd7d:	call   QWORD PTR [rip+0x257f5]        # 0x435578
  40fd83:	test   eax,eax
  40fd85:	jne    0x40fb60
  40fd8b:	mov    rcx,QWORD PTR [rsp+0x50]
  40fd90:	test   rcx,rcx
  40fd93:	je     0x40fb60
  40fd99:	mov    rdx,rsi
  40fd9c:	call   0x416230
  40fda1:	jmp    0x40fb60
  40fda6:	lea    r8,[rsp+0x50]
  40fdab:	mov    edx,0x10001e
  40fdb0:	mov    rcx,QWORD PTR [rsp+0xb0]
  40fdb8:	call   QWORD PTR [rip+0x257ba]        # 0x435578
  40fdbe:	test   eax,eax
  40fdc0:	jne    0x40fb60
  40fdc6:	jmp    0x40fd8b
  40fdc8:	lea    r8,[rsp+0x4c]
  40fdcd:	mov    edx,0x200014
  40fdd2:	mov    rcx,QWORD PTR [rsp+0xb0]
  40fdda:	call   QWORD PTR [rip+0x25798]        # 0x435578
  40fde0:	test   eax,eax
  40fde2:	jne    0x40fb60
  40fde8:	jmp    0x40fc74
  40fded:	lea    r8,[rsp+0x58]
  40fdf2:	mov    edx,0x300013
  40fdf7:	mov    rcx,QWORD PTR [rsp+0xb0]
  40fdff:	call   QWORD PTR [rip+0x25773]        # 0x435578
  40fe05:	test   eax,eax
  40fe07:	jne    0x40fb60
  40fe0d:	movsd  xmm0,QWORD PTR [rsp+0x58]
  40fe13:	lea    rdx,[rip+0x1f64d]        # 0x42f467
  40fe1a:	mov    rcx,rsi
  40fe1d:	movapd xmm2,xmm0
  40fe21:	movq   r8,xmm0
  40fe26:	call   QWORD PTR [rip+0x257bc]        # 0x4355e8
  40fe2c:	jmp    0x40fb60
  40fe31:	lea    r8,[rsp+0x4c]
  40fe36:	mov    edx,0x20001a
  40fe3b:	mov    rcx,QWORD PTR [rsp+0xb0]
  40fe43:	call   QWORD PTR [rip+0x2572f]        # 0x435578
  40fe49:	test   eax,eax
  40fe4b:	jne    0x40fb60
  40fe51:	jmp    0x40fc74
  40fe56:	lea    r8,[rsp+0x50]
  40fe5b:	mov    edx,0x100012
  40fe60:	mov    rcx,QWORD PTR [rsp+0xb0]
  40fe68:	call   QWORD PTR [rip+0x2570a]        # 0x435578
  40fe6e:	test   eax,eax
  40fe70:	jne    0x40fb60
  40fe76:	jmp    0x40fd8b
  40fe7b:	lea    r8,[rsp+0x50]
  40fe80:	mov    edx,0x100001
  40fe85:	mov    rcx,QWORD PTR [rsp+0xb0]
  40fe8d:	call   QWORD PTR [rip+0x256e5]        # 0x435578
  40fe93:	test   eax,eax
  40fe95:	jne    0x40fb60
  40fe9b:	jmp    0x40fd8b
  40fea0:	lea    r8,[rsp+0x4c]
  40fea5:	mov    edx,0x20000c
  40feaa:	mov    rcx,QWORD PTR [rsp+0xb0]
  40feb2:	call   QWORD PTR [rip+0x256c0]        # 0x435578
  40feb8:	test   eax,eax
  40feba:	jne    0x40fb60
  40fec0:	jmp    0x40fc74
  40fec5:	lea    r8,[rsp+0x4c]
  40feca:	mov    edx,0x20000b
  40fecf:	mov    rcx,QWORD PTR [rsp+0xb0]
  40fed7:	call   QWORD PTR [rip+0x2569b]        # 0x435578
  40fedd:	test   eax,eax
  40fedf:	jne    0x40fb60
  40fee5:	jmp    0x40fc74
  40feea:	lea    r8,[rsp+0x4c]
  40feef:	mov    edx,0x200016
  40fef4:	mov    rcx,QWORD PTR [rsp+0xb0]
  40fefc:	call   QWORD PTR [rip+0x25676]        # 0x435578
  40ff02:	test   eax,eax
  40ff04:	jne    0x40fb60
  40ff0a:	mov    r8d,DWORD PTR [rsp+0x4c]
  40ff0f:	lea    rdx,[rip+0x1f547]        # 0x42f45d
  40ff16:	mov    rcx,rsi
  40ff19:	call   QWORD PTR [rip+0x256c9]        # 0x4355e8
  40ff1f:	jmp    0x40fb60
  40ff24:	lea    r8,[rsp+0x4c]
  40ff29:	mov    edx,0x200002
  40ff2e:	mov    rcx,QWORD PTR [rsp+0xb0]
  40ff36:	call   QWORD PTR [rip+0x2563c]        # 0x435578
  40ff3c:	test   eax,eax
  40ff3e:	jne    0x40fb60
  40ff44:	jmp    0x40ff0a
  40ff46:	lea    r8,[rsp+0x58]
  40ff4b:	mov    edx,0x30000a
  40ff50:	mov    rcx,QWORD PTR [rsp+0xb0]
  40ff58:	call   QWORD PTR [rip+0x2561a]        # 0x435578
  40ff5e:	test   eax,eax
  40ff60:	jne    0x40fb60
  40ff66:	movsd  xmm0,QWORD PTR [rsp+0x58]
  40ff6c:	lea    rdx,[rip+0x1f4fe]        # 0x42f471
  40ff73:	mov    rcx,rsi
  40ff76:	movapd xmm2,xmm0
  40ff7a:	movq   r8,xmm0
  40ff7f:	call   QWORD PTR [rip+0x25663]        # 0x4355e8
  40ff85:	jmp    0x40fb60
  40ff8a:	lea    r8,[rsp+0x58]
  40ff8f:	mov    edx,0x300009
  40ff94:	mov    rcx,QWORD PTR [rsp+0xb0]
  40ff9c:	call   QWORD PTR [rip+0x255d6]        # 0x435578
  40ffa2:	test   eax,eax
  40ffa4:	jne    0x40fb60
  40ffaa:	jmp    0x40ff66
  40ffac:	lea    r8,[rsp+0x58]
  40ffb1:	mov    edx,0x300007
  40ffb6:	mov    rcx,QWORD PTR [rsp+0xb0]
  40ffbe:	call   QWORD PTR [rip+0x255b4]        # 0x435578
  40ffc4:	test   eax,eax
  40ffc6:	jne    0x40fb60
  40ffcc:	movsd  xmm0,QWORD PTR [rsp+0x58]
  40ffd2:	lea    rdx,[rip+0x1f493]        # 0x42f46c
  40ffd9:	mov    rcx,rsi
  40ffdc:	movapd xmm2,xmm0
  40ffe0:	movq   r8,xmm0
  40ffe5:	call   QWORD PTR [rip+0x255fd]        # 0x4355e8
  40ffeb:	jmp    0x40fb60
  40fff0:	lea    r8,[rsp+0x58]
  40fff5:	mov    edx,0x300008
  40fffa:	mov    rcx,QWORD PTR [rsp+0xb0]
  410002:	call   QWORD PTR [rip+0x25570]        # 0x435578
  410008:	test   eax,eax
  41000a:	jne    0x40fb60
  410010:	jmp    0x40ffcc
  410012:	lea    r8,[rsp+0x58]
  410017:	mov    edx,0x300011
  41001c:	mov    rcx,QWORD PTR [rsp+0xb0]
  410024:	call   QWORD PTR [rip+0x2554e]        # 0x435578
  41002a:	test   eax,eax
  41002c:	jne    0x40fb60
  410032:	jmp    0x40fe0d
  410037:	lea    r8,[rsp+0x58]
  41003c:	mov    edx,0x300006
  410041:	mov    rcx,QWORD PTR [rsp+0xb0]
  410049:	call   QWORD PTR [rip+0x25529]        # 0x435578
  41004f:	test   eax,eax
  410051:	jne    0x40fb60
  410057:	jmp    0x40fe0d
  41005c:	lea    r8,[rsp+0x58]
  410061:	mov    edx,0x300021
  410066:	mov    rcx,QWORD PTR [rsp+0xb0]
  41006e:	call   QWORD PTR [rip+0x25504]        # 0x435578
  410074:	test   eax,eax
  410076:	jne    0x40fb60
  41007c:	jmp    0x40fe0d
  410081:	lea    r8,[rsp+0x58]
  410086:	mov    edx,0x300005
  41008b:	mov    rcx,QWORD PTR [rsp+0xb0]
  410093:	call   QWORD PTR [rip+0x254df]        # 0x435578
  410099:	test   eax,eax
  41009b:	jne    0x40fb60
  4100a1:	jmp    0x40fe0d
  4100a6:	lea    r8,[rsp+0x58]
  4100ab:	mov    edx,0x300004
  4100b0:	mov    rcx,QWORD PTR [rsp+0xb0]
  4100b8:	call   QWORD PTR [rip+0x254ba]        # 0x435578
  4100be:	test   eax,eax
  4100c0:	jne    0x40fb60
  4100c6:	jmp    0x40fe0d
  4100cb:	lea    r8,[rsp+0x58]
  4100d0:	mov    edx,0x300003
  4100d5:	mov    rcx,QWORD PTR [rsp+0xb0]
  4100dd:	call   QWORD PTR [rip+0x25495]        # 0x435578
  4100e3:	test   eax,eax
  4100e5:	jne    0x40fb60
  4100eb:	jmp    0x40fe0d
  4100f0:	xor    eax,eax
  4100f2:	ret    
  4100f3:	nop
  4100f4:	nop
  4100f5:	nop
  4100f6:	nop
  4100f7:	nop
  4100f8:	nop
  4100f9:	nop
  4100fa:	nop
  4100fb:	nop
  4100fc:	nop
  4100fd:	nop
  4100fe:	nop
  4100ff:	nop
  410100:	sub    rsp,0x38
  410104:	xor    eax,eax
  410106:	lea    r8,[rsp+0x2c]
  41010b:	test   edx,edx
  41010d:	mov    edx,0x8004667e
  410112:	setne  al
  410115:	mov    DWORD PTR [rsp+0x2c],eax
  410119:	call   QWORD PTR [rip+0x25909]        # 0x435a28
  41011f:	add    rsp,0x38
  410123:	ret    
  410124:	nop
  410125:	nop
  410126:	nop
  410127:	nop
  410128:	nop
  410129:	nop
  41012a:	nop
  41012b:	nop
  41012c:	nop
  41012d:	nop
  41012e:	nop
  41012f:	nop
  410130:	mov    eax,ecx
  410132:	ret    
  410133:	nop    DWORD PTR [rax]
  410136:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410140:	mov    eax,ecx
  410142:	ret    
  410143:	nop    DWORD PTR [rax]
  410146:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410150:	mov    eax,ecx
  410152:	and    eax,0x7fffffff
  410157:	ret    
  410158:	nop    DWORD PTR [rax+rax*1+0x0]
  410160:	movabs rax,0x7fffffffffffffff
  41016a:	and    rax,rcx
  41016d:	ret    
  41016e:	xchg   ax,ax
  410170:	mov    eax,ecx
  410172:	and    eax,0x7fffffff
  410177:	ret    
  410178:	nop    DWORD PTR [rax+rax*1+0x0]
  410180:	mov    eax,ecx
  410182:	ret    
  410183:	nop    DWORD PTR [rax]
  410186:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410190:	mov    eax,ecx
  410192:	ret    
  410193:	nop    DWORD PTR [rax]
  410196:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4101a0:	mov    eax,ecx
  4101a2:	and    eax,0x7fffffff
  4101a7:	ret    
  4101a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4101b0:	mov    eax,ecx
  4101b2:	ret    
  4101b3:	nop    DWORD PTR [rax]
  4101b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4101c0:	mov    eax,ecx
  4101c2:	ret    
  4101c3:	nop    DWORD PTR [rax]
  4101c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4101d0:	movabs rax,0x7fffffffffffffff
  4101da:	and    rax,rcx
  4101dd:	ret    
  4101de:	xchg   ax,ax
  4101e0:	mov    rax,rcx
  4101e3:	ret    
  4101e4:	xchg   ax,ax
  4101e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4101f0:	mov    eax,ecx
  4101f2:	and    eax,0x7fffffff
  4101f7:	ret    
  4101f8:	nop    DWORD PTR [rax+rax*1+0x0]
  410200:	mov    eax,ecx
  410202:	ret    
  410203:	nop    DWORD PTR [rax]
  410206:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410210:	mov    eax,ecx
  410212:	ret    
  410213:	nop    DWORD PTR [rax]
  410216:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410220:	mov    eax,ecx
  410222:	and    eax,0x7fffffff
  410227:	ret    
  410228:	nop    DWORD PTR [rax+rax*1+0x0]
  410230:	movsxd rax,ecx
  410233:	ret    
  410234:	xchg   ax,ax
  410236:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410240:	mov    eax,ecx
  410242:	ret    
  410243:	nop    DWORD PTR [rax]
  410246:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410250:	movsxd rax,ecx
  410253:	ret    
  410254:	xchg   ax,ax
  410256:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410260:	sub    rsp,0x28
  410264:	call   0x4160d8
  410269:	cdqe   
  41026b:	add    rsp,0x28
  41026f:	ret    
  410270:	sub    rsp,0x28
  410274:	call   0x4160f0
  410279:	cdqe   
  41027b:	add    rsp,0x28
  41027f:	ret    
  410280:	jmp    QWORD PTR [rip+0x253ba]        # 0x435640
  410286:	nop
  410287:	nop
  410288:	jmp    QWORD PTR [rip+0x253aa]        # 0x435638
  41028e:	nop
  41028f:	nop
  410290:	jmp    QWORD PTR [rip+0x2539a]        # 0x435630
  410296:	nop
  410297:	nop
  410298:	jmp    QWORD PTR [rip+0x2538a]        # 0x435628
  41029e:	nop
  41029f:	nop
  4102a0:	jmp    QWORD PTR [rip+0x2537a]        # 0x435620
  4102a6:	nop
  4102a7:	nop
  4102a8:	jmp    QWORD PTR [rip+0x2536a]        # 0x435618
  4102ae:	nop
  4102af:	nop
  4102b0:	jmp    QWORD PTR [rip+0x2535a]        # 0x435610
  4102b6:	nop
  4102b7:	nop
  4102b8:	jmp    QWORD PTR [rip+0x2534a]        # 0x435608
  4102be:	nop
  4102bf:	nop
  4102c0:	jmp    QWORD PTR [rip+0x2533a]        # 0x435600
  4102c6:	nop
  4102c7:	nop
  4102c8:	jmp    QWORD PTR [rip+0x2532a]        # 0x4355f8
  4102ce:	nop
  4102cf:	nop
  4102d0:	jmp    QWORD PTR [rip+0x2531a]        # 0x4355f0
  4102d6:	nop
  4102d7:	nop
  4102d8:	jmp    QWORD PTR [rip+0x2530a]        # 0x4355e8
  4102de:	nop
  4102df:	nop
  4102e0:	jmp    QWORD PTR [rip+0x252fa]        # 0x4355e0
  4102e6:	nop
  4102e7:	nop
  4102e8:	jmp    QWORD PTR [rip+0x252ea]        # 0x4355d8
  4102ee:	nop
  4102ef:	nop
  4102f0:	jmp    QWORD PTR [rip+0x252da]        # 0x4355d0
  4102f6:	nop
  4102f7:	nop
  4102f8:	jmp    QWORD PTR [rip+0x252ca]        # 0x4355c8
  4102fe:	nop
  4102ff:	nop
  410300:	jmp    QWORD PTR [rip+0x252ba]        # 0x4355c0
  410306:	nop
  410307:	nop
  410308:	jmp    QWORD PTR [rip+0x252aa]        # 0x4355b8
  41030e:	nop
  41030f:	nop
  410310:	jmp    QWORD PTR [rip+0x2529a]        # 0x4355b0
  410316:	nop
  410317:	nop
  410318:	jmp    QWORD PTR [rip+0x2528a]        # 0x4355a8
  41031e:	nop
  41031f:	nop
  410320:	jmp    QWORD PTR [rip+0x2527a]        # 0x4355a0
  410326:	nop
  410327:	nop
  410328:	jmp    QWORD PTR [rip+0x2526a]        # 0x435598
  41032e:	nop
  41032f:	nop
  410330:	jmp    QWORD PTR [rip+0x2525a]        # 0x435590
  410336:	nop
  410337:	nop
  410338:	jmp    QWORD PTR [rip+0x2524a]        # 0x435588
  41033e:	nop
  41033f:	nop
  410340:	jmp    QWORD PTR [rip+0x2523a]        # 0x435580
  410346:	nop
  410347:	nop
  410348:	jmp    QWORD PTR [rip+0x2522a]        # 0x435578
  41034e:	nop
  41034f:	nop
  410350:	jmp    QWORD PTR [rip+0x2521a]        # 0x435570
  410356:	nop
  410357:	nop
  410358:	jmp    QWORD PTR [rip+0x2520a]        # 0x435568
  41035e:	nop
  41035f:	nop
  410360:	jmp    QWORD PTR [rip+0x256e2]        # 0x435a48
  410366:	nop
  410367:	nop
  410368:	jmp    QWORD PTR [rip+0x256d2]        # 0x435a40
  41036e:	nop
  41036f:	nop
  410370:	jmp    QWORD PTR [rip+0x256c2]        # 0x435a38
  410376:	nop
  410377:	nop
  410378:	jmp    QWORD PTR [rip+0x256aa]        # 0x435a28
  41037e:	nop
  41037f:	nop
  410380:	push   rbx
  410381:	sub    rsp,0x30
  410385:	mov    rbx,rcx
  410388:	mov    rcx,QWORD PTR [rip+0x24111]        # 0x4344a0
  41038f:	call   0x410930
  410394:	cmp    rax,0xffffffffffffffff
  410398:	mov    QWORD PTR [rsp+0x20],rax
  41039d:	je     0x410415
  41039f:	mov    ecx,0x8
  4103a4:	call   0x4162b0
  4103a9:	mov    rcx,QWORD PTR [rip+0x240f0]        # 0x4344a0
  4103b0:	call   0x410930
  4103b5:	mov    rcx,QWORD PTR [rip+0x240ec]        # 0x4344a8
  4103bc:	mov    QWORD PTR [rsp+0x20],rax
  4103c1:	call   0x410930
  4103c6:	lea    rdx,[rsp+0x20]
  4103cb:	lea    r8,[rsp+0x28]
  4103d0:	mov    rcx,rbx
  4103d3:	mov    QWORD PTR [rsp+0x28],rax
  4103d8:	call   0x416318
  4103dd:	mov    rcx,QWORD PTR [rsp+0x20]
  4103e2:	mov    rbx,rax
  4103e5:	call   0x410940
  4103ea:	mov    rcx,QWORD PTR [rsp+0x28]
  4103ef:	mov    QWORD PTR [rip+0x240aa],rax        # 0x4344a0
  4103f6:	call   0x410940
  4103fb:	mov    ecx,0x8
  410400:	mov    QWORD PTR [rip+0x240a1],rax        # 0x4344a8
  410407:	call   0x416288
  41040c:	mov    rax,rbx
  41040f:	add    rsp,0x30
  410413:	pop    rbx
  410414:	ret    
  410415:	mov    rax,QWORD PTR [rip+0x1fbe4]        # 0x430000
  41041c:	mov    rcx,rbx
  41041f:	call   QWORD PTR [rax]
  410421:	add    rsp,0x30
  410425:	pop    rbx
  410426:	ret    
  410427:	nop    WORD PTR [rax+rax*1+0x0]
  410430:	sub    rsp,0x28
  410434:	call   0x410380
  410439:	test   rax,rax
  41043c:	sete   al
  41043f:	movzx  eax,al
  410442:	neg    eax
  410444:	add    rsp,0x28
  410448:	ret    
  410449:	nop
  41044a:	nop
  41044b:	nop
  41044c:	nop
  41044d:	nop
  41044e:	nop
  41044f:	nop
  410450:	sub    rsp,0x28
  410454:	mov    rax,QWORD PTR [rip+0x6bb5]        # 0x417010
  41045b:	mov    rax,QWORD PTR [rax]
  41045e:	test   rax,rax
  410461:	je     0x410480
  410463:	call   rax
  410465:	mov    rax,QWORD PTR [rip+0x6ba4]        # 0x417010
  41046c:	lea    rdx,[rax+0x8]
  410470:	mov    rax,QWORD PTR [rax+0x8]
  410474:	mov    QWORD PTR [rip+0x6b95],rdx        # 0x417010
  41047b:	test   rax,rax
  41047e:	jne    0x410463
  410480:	add    rsp,0x28
  410484:	ret    
  410485:	nop
  410486:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410490:	push   rsi
  410491:	push   rbx
  410492:	sub    rsp,0x28
  410496:	mov    rsi,QWORD PTR [rip+0x1fac3]        # 0x42ff60
  41049d:	mov    rax,QWORD PTR [rsi]
  4104a0:	cmp    eax,0xffffffff
  4104a3:	mov    ebx,eax
  4104a5:	je     0x4104d0
  4104a7:	test   ebx,ebx
  4104a9:	je     0x4104ba
  4104ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4104b0:	mov    eax,ebx
  4104b2:	call   QWORD PTR [rsi+rax*8]
  4104b5:	sub    ebx,0x1
  4104b8:	jne    0x4104b0
  4104ba:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x410450
  4104c1:	add    rsp,0x28
  4104c5:	pop    rbx
  4104c6:	pop    rsi
  4104c7:	jmp    0x410430
  4104cc:	nop    DWORD PTR [rax+0x0]
  4104d0:	xor    ebx,ebx
  4104d2:	jmp    0x4104d6
  4104d4:	mov    ebx,eax
  4104d6:	lea    edx,[rbx+0x1]
  4104d9:	cmp    QWORD PTR [rsi+rdx*8],0x0
  4104de:	mov    rax,rdx
  4104e1:	jne    0x4104d4
  4104e3:	jmp    0x4104a7
  4104e5:	nop
  4104e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4104f0:	mov    eax,DWORD PTR [rip+0x22b9a]        # 0x433090
  4104f6:	test   eax,eax
  4104f8:	je     0x410500
  4104fa:	repz ret 
  4104fc:	nop    DWORD PTR [rax+0x0]
  410500:	mov    DWORD PTR [rip+0x22b86],0x1        # 0x433090
  41050a:	jmp    0x410490
  41050c:	nop
  41050d:	nop
  41050e:	nop
  41050f:	nop
  410510:	mov    rax,QWORD PTR [rip+0x25291]        # 0x4357a8
  410517:	rex.W jmp rax
  41051a:	nop
  41051b:	nop
  41051c:	nop
  41051d:	nop
  41051e:	nop
  41051f:	nop
  410520:	xor    eax,eax
  410522:	ret    
  410523:	nop
  410524:	nop
  410525:	nop
  410526:	nop
  410527:	nop
  410528:	nop
  410529:	nop
  41052a:	nop
  41052b:	nop
  41052c:	nop
  41052d:	nop
  41052e:	nop
  41052f:	nop
  410530:	push   r12
  410532:	push   rbp
  410533:	push   rdi
  410534:	push   rsi
  410535:	push   rbx
  410536:	sub    rsp,0x40
  41053a:	mov    rbx,QWORD PTR [rip+0x6b5f]        # 0x4170a0
  410541:	movabs rax,0x2b992ddfa232
  41054b:	mov    QWORD PTR [rsp+0x20],0x0
  410554:	cmp    rbx,rax
  410557:	je     0x410570
  410559:	not    rbx
  41055c:	mov    QWORD PTR [rip+0x6b4d],rbx        # 0x4170b0
  410563:	add    rsp,0x40
  410567:	pop    rbx
  410568:	pop    rsi
  410569:	pop    rdi
  41056a:	pop    rbp
  41056b:	pop    r12
  41056d:	ret    
  41056e:	xchg   ax,ax
  410570:	lea    rcx,[rsp+0x20]
  410575:	call   QWORD PTR [rip+0x2515d]        # 0x4356d8
  41057b:	mov    r12,QWORD PTR [rsp+0x20]
  410580:	call   QWORD PTR [rip+0x25102]        # 0x435688
  410586:	mov    ebp,eax
  410588:	call   QWORD PTR [rip+0x25102]        # 0x435690
  41058e:	mov    edi,eax
  410590:	call   QWORD PTR [rip+0x2514a]        # 0x4356e0
  410596:	lea    rcx,[rsp+0x30]
  41059b:	mov    esi,eax
  41059d:	call   QWORD PTR [rip+0x2515d]        # 0x435700
  4105a3:	xor    r12,QWORD PTR [rsp+0x30]
  4105a8:	mov    edx,edi
  4105aa:	movabs rax,0xffffffffffff
  4105b4:	xor    rbp,r12
  4105b7:	mov    rdi,rbp
  4105ba:	xor    rdi,rdx
  4105bd:	mov    edx,esi
  4105bf:	xor    rdi,rdx
  4105c2:	mov    rsi,rdi
  4105c5:	and    rsi,rax
  4105c8:	cmp    rsi,rbx
  4105cb:	je     0x4105f0
  4105cd:	mov    rax,rsi
  4105d0:	not    rax
  4105d3:	mov    QWORD PTR [rip+0x6ac6],rsi        # 0x4170a0
  4105da:	mov    QWORD PTR [rip+0x6acf],rax        # 0x4170b0
  4105e1:	add    rsp,0x40
  4105e5:	pop    rbx
  4105e6:	pop    rsi
  4105e7:	pop    rdi
  4105e8:	pop    rbp
  4105e9:	pop    r12
  4105eb:	ret    
  4105ec:	nop    DWORD PTR [rax+0x0]
  4105f0:	movabs rax,0xffffd466d2205dcc
  4105fa:	movabs rsi,0x2b992ddfa233
  410604:	jmp    0x4105d3
  410606:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410610:	push   rbp
  410611:	push   rsi
  410612:	push   rbx
  410613:	mov    rbp,rsp
  410616:	sub    rsp,0x70
  41061a:	mov    rsi,rcx
  41061d:	lea    rcx,[rip+0x22a9c]        # 0x4330c0
  410624:	call   QWORD PTR [rip+0x250e6]        # 0x435710
  41062a:	mov    rbx,QWORD PTR [rip+0x22b87]        # 0x4331b8
  410631:	xor    r8d,r8d
  410634:	lea    rdx,[rbp-0x28]
  410638:	mov    rcx,rbx
  41063b:	call   QWORD PTR [rip+0x250d7]        # 0x435718
  410641:	test   rax,rax
  410644:	mov    r9,rax
  410647:	je     0x4106f0
  41064d:	lea    rax,[rbp-0x20]
  410651:	mov    QWORD PTR [rsp+0x38],0x0
  41065a:	mov    r8,rbx
  41065d:	mov    rdx,QWORD PTR [rbp-0x28]
  410661:	xor    ecx,ecx
  410663:	mov    QWORD PTR [rsp+0x30],rax
  410668:	lea    rax,[rbp-0x18]
  41066c:	mov    QWORD PTR [rsp+0x28],rax
  410671:	lea    rax,[rip+0x22a48]        # 0x4330c0
  410678:	mov    QWORD PTR [rsp+0x20],rax
  41067d:	call   QWORD PTR [rip+0x2509d]        # 0x435720
  410683:	mov    rax,QWORD PTR [rip+0x22b2e]        # 0x4331b8
  41068a:	xor    ecx,ecx
  41068c:	mov    QWORD PTR [rip+0x22aad],rsi        # 0x433140
  410693:	mov    DWORD PTR [rip+0x22f23],0xc0000409        # 0x4335c0
  41069d:	mov    DWORD PTR [rip+0x22f1d],0x1        # 0x4335c4
  4106a7:	mov    QWORD PTR [rip+0x22f22],rax        # 0x4335d0
  4106ae:	mov    rax,QWORD PTR [rip+0x69eb]        # 0x4170a0
  4106b5:	mov    QWORD PTR [rbp-0x10],rax
  4106b9:	mov    rax,QWORD PTR [rip+0x69f0]        # 0x4170b0
  4106c0:	mov    QWORD PTR [rbp-0x8],rax
  4106c4:	call   QWORD PTR [rip+0x25076]        # 0x435740
  4106ca:	lea    rcx,[rip+0x1f22f]        # 0x42f900
  4106d1:	call   QWORD PTR [rip+0x25089]        # 0x435760
  4106d7:	call   QWORD PTR [rip+0x24fa3]        # 0x435680
  4106dd:	mov    edx,0xc0000409
  4106e2:	mov    rcx,rax
  4106e5:	call   QWORD PTR [rip+0x25065]        # 0x435750
  4106eb:	call   0x416278
  4106f0:	mov    rax,QWORD PTR [rbp+0x18]
  4106f4:	mov    QWORD PTR [rip+0x22abd],rax        # 0x4331b8
  4106fb:	lea    rax,[rbp+0x8]
  4106ff:	mov    QWORD PTR [rip+0x22a52],rax        # 0x433158
  410706:	jmp    0x410683
  41070b:	nop
  41070c:	nop
  41070d:	nop
  41070e:	nop
  41070f:	nop
  410710:	sub    rsp,0x28
  410714:	test   edx,edx
  410716:	je     0x410730
  410718:	cmp    edx,0x3
  41071b:	je     0x410730
  41071d:	mov    eax,0x1
  410722:	add    rsp,0x28
  410726:	ret    
  410727:	nop    WORD PTR [rax+rax*1+0x0]
  410730:	call   0x411420
  410735:	mov    eax,0x1
  41073a:	add    rsp,0x28
  41073e:	ret    
  41073f:	nop
  410740:	push   rsi
  410741:	push   rbx
  410742:	sub    rsp,0x28
  410746:	mov    rax,QWORD PTR [rip+0x1f7f3]        # 0x42ff40
  41074d:	cmp    DWORD PTR [rax],0x2
  410750:	je     0x410758
  410752:	mov    DWORD PTR [rax],0x2
  410758:	cmp    edx,0x2
  41075b:	je     0x410770
  41075d:	cmp    edx,0x1
  410760:	je     0x4107a2
  410762:	mov    eax,0x1
  410767:	add    rsp,0x28
  41076b:	pop    rbx
  41076c:	pop    rsi
  41076d:	ret    
  41076e:	xchg   ax,ax
  410770:	lea    rbx,[rip+0x268e9]        # 0x437060
  410777:	lea    rsi,[rip+0x268e2]        # 0x437060
  41077e:	cmp    rbx,rsi
  410781:	je     0x410762
  410783:	mov    rax,QWORD PTR [rbx]
  410786:	test   rax,rax
  410789:	je     0x41078d
  41078b:	call   rax
  41078d:	add    rbx,0x8
  410791:	cmp    rbx,rsi
  410794:	jne    0x410783
  410796:	mov    eax,0x1
  41079b:	add    rsp,0x28
  41079f:	pop    rbx
  4107a0:	pop    rsi
  4107a1:	ret    
  4107a2:	call   0x411420
  4107a7:	jmp    0x410762
  4107a9:	nop    DWORD PTR [rax+0x0]
  4107b0:	xor    eax,eax
  4107b2:	ret    
  4107b3:	nop
  4107b4:	nop
  4107b5:	nop
  4107b6:	nop
  4107b7:	nop
  4107b8:	nop
  4107b9:	nop
  4107ba:	nop
  4107bb:	nop
  4107bc:	nop
  4107bd:	nop
  4107be:	nop
  4107bf:	nop
  4107c0:	sub    rsp,0x58
  4107c4:	mov    rax,QWORD PTR [rip+0x22ed5]        # 0x4336a0
  4107cb:	test   rax,rax
  4107ce:	je     0x4107fc
  4107d0:	movsd  xmm0,QWORD PTR [rsp+0x80]
  4107d9:	mov    DWORD PTR [rsp+0x20],ecx
  4107dd:	lea    rcx,[rsp+0x20]
  4107e2:	mov    QWORD PTR [rsp+0x28],rdx
  4107e7:	movsd  QWORD PTR [rsp+0x30],xmm2
  4107ed:	movsd  QWORD PTR [rsp+0x38],xmm3
  4107f3:	movsd  QWORD PTR [rsp+0x40],xmm0
  4107f9:	call   rax
  4107fb:	nop
  4107fc:	add    rsp,0x58
  410800:	ret    
  410801:	nop    DWORD PTR [rax+rax*1+0x0]
  410806:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410810:	mov    QWORD PTR [rip+0x22e89],rcx        # 0x4336a0
  410817:	jmp    0x4162f0
  41081c:	nop    DWORD PTR [rax+0x0]
  410820:	push   rsi
  410821:	push   rbx
  410822:	sub    rsp,0x78
  410826:	movaps XMMWORD PTR [rsp+0x40],xmm6
  41082b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  410830:	movaps XMMWORD PTR [rsp+0x60],xmm8
  410836:	cmp    DWORD PTR [rcx],0x6
  410839:	ja     0x410910
  41083f:	mov    edx,DWORD PTR [rcx]
  410841:	lea    rax,[rip+0x1f1fc]        # 0x42fa44
  410848:	movsxd rdx,DWORD PTR [rax+rdx*4]
  41084c:	add    rax,rdx
  41084f:	jmp    rax
  410851:	lea    rbx,[rip+0x1f0c8]        # 0x42f920
  410858:	nop    DWORD PTR [rax+rax*1+0x0]
  410860:	movsd  xmm8,QWORD PTR [rcx+0x20]
  410866:	mov    rsi,QWORD PTR [rcx+0x8]
  41086a:	movsd  xmm7,QWORD PTR [rcx+0x18]
  41086f:	movsd  xmm6,QWORD PTR [rcx+0x10]
  410874:	call   0x416308
  410879:	movsd  QWORD PTR [rsp+0x30],xmm8
  410880:	lea    rcx,[rax+0x60]
  410884:	lea    rdx,[rip+0x1f18d]        # 0x42fa18
  41088b:	movsd  QWORD PTR [rsp+0x28],xmm7
  410891:	mov    r9,rsi
  410894:	mov    r8,rbx
  410897:	movsd  QWORD PTR [rsp+0x20],xmm6
  41089d:	call   0x416240
  4108a2:	nop
  4108a3:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  4108a8:	xor    eax,eax
  4108aa:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  4108af:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  4108b5:	add    rsp,0x78
  4108b9:	pop    rbx
  4108ba:	pop    rsi
  4108bb:	ret    
  4108bc:	nop    DWORD PTR [rax+0x0]
  4108c0:	lea    rbx,[rip+0x1f078]        # 0x42f93f
  4108c7:	jmp    0x410860
  4108c9:	nop    DWORD PTR [rax+0x0]
  4108d0:	lea    rbx,[rip+0x1f089]        # 0x42f960
  4108d7:	jmp    0x410860
  4108d9:	nop    DWORD PTR [rax+0x0]
  4108e0:	lea    rbx,[rip+0x1f0e9]        # 0x42f9d0
  4108e7:	jmp    0x410860
  4108ec:	nop    DWORD PTR [rax+0x0]
  4108f0:	lea    rbx,[rip+0x1f0b1]        # 0x42f9a8
  4108f7:	jmp    0x410860
  4108fc:	nop    DWORD PTR [rax+0x0]
  410900:	lea    rbx,[rip+0x1f079]        # 0x42f980
  410907:	jmp    0x410860
  41090c:	nop    DWORD PTR [rax+0x0]
  410910:	lea    rbx,[rip+0x1f0ef]        # 0x42fa06
  410917:	jmp    0x410860
  41091c:	nop
  41091d:	nop
  41091e:	nop
  41091f:	nop
  410920:	fninit 
  410922:	ret    
  410923:	nop
  410924:	nop
  410925:	nop
  410926:	nop
  410927:	nop
  410928:	nop
  410929:	nop
  41092a:	nop
  41092b:	nop
  41092c:	nop
  41092d:	nop
  41092e:	nop
  41092f:	nop
  410930:	mov    rax,rcx
  410933:	ret    
  410934:	xchg   ax,ax
  410936:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410940:	mov    rax,rcx
  410943:	ret    
  410944:	nop
  410945:	nop
  410946:	nop
  410947:	nop
  410948:	nop
  410949:	nop
  41094a:	nop
  41094b:	nop
  41094c:	nop
  41094d:	nop
  41094e:	nop
  41094f:	nop
  410950:	push   rsi
  410951:	push   rbx
  410952:	sub    rsp,0x38
  410956:	lea    rax,[rsp+0x58]
  41095b:	mov    rbx,rcx
  41095e:	mov    QWORD PTR [rsp+0x58],rdx
  410963:	mov    QWORD PTR [rsp+0x60],r8
  410968:	mov    QWORD PTR [rsp+0x68],r9
  41096d:	mov    QWORD PTR [rsp+0x28],rax
  410972:	call   0x416308
  410977:	lea    rcx,[rip+0x1f0e2]        # 0x42fa60
  41097e:	lea    r9,[rax+0x60]
  410982:	mov    r8d,0x1b
  410988:	mov    edx,0x1
  41098d:	call   0x416210
  410992:	mov    rsi,QWORD PTR [rsp+0x28]
  410997:	call   0x416308
  41099c:	lea    rcx,[rax+0x60]
  4109a0:	mov    rdx,rbx
  4109a3:	mov    r8,rsi
  4109a6:	call   0x416108
  4109ab:	call   0x416278
  4109b0:	nop
  4109b1:	nop    DWORD PTR [rax+rax*1+0x0]
  4109b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4109c0:	push   r13
  4109c2:	push   r12
  4109c4:	push   rbp
  4109c5:	push   rdi
  4109c6:	push   rsi
  4109c7:	push   rbx
  4109c8:	sub    rsp,0x58
  4109cc:	movsxd rbp,DWORD PTR [rip+0x22cf1]        # 0x4336c4
  4109d3:	mov    rbx,rcx
  4109d6:	mov    rsi,rdx
  4109d9:	mov    rdi,r8
  4109dc:	test   ebp,ebp
  4109de:	jle    0x410ada
  4109e4:	mov    rax,QWORD PTR [rip+0x22cdd]        # 0x4336c8
  4109eb:	xor    r9d,r9d
  4109ee:	add    rax,0x8
  4109f2:	mov    r10,QWORD PTR [rax]
  4109f5:	cmp    rbx,r10
  4109f8:	jb     0x410a0e
  4109fa:	mov    rdx,QWORD PTR [rax+0x8]
  4109fe:	mov    r11d,DWORD PTR [rdx+0x8]
  410a02:	add    r10,r11
  410a05:	cmp    rbx,r10
  410a08:	jb     0x410ac0
  410a0e:	add    r9d,0x1
  410a12:	add    rax,0x18
  410a16:	cmp    r9d,ebp
  410a19:	jne    0x4109f2
  410a1b:	mov    rcx,rbx
  410a1e:	call   0x411630
  410a23:	test   rax,rax
  410a26:	mov    r12,rax
  410a29:	je     0x410b12
  410a2f:	lea    rbp,[rbp+rbp*2+0x0]
  410a34:	shl    rbp,0x3
  410a38:	mov    r13,rbp
  410a3b:	add    r13,QWORD PTR [rip+0x22c86]        # 0x4336c8
  410a42:	mov    QWORD PTR [r13+0x10],rax
  410a46:	mov    DWORD PTR [r13+0x0],0x0
  410a4e:	call   0x411750
  410a53:	mov    edx,DWORD PTR [r12+0xc]
  410a58:	mov    r8d,0x30
  410a5e:	add    rax,rdx
  410a61:	lea    rdx,[rsp+0x20]
  410a66:	mov    QWORD PTR [r13+0x8],rax
  410a6a:	mov    rax,QWORD PTR [rip+0x22c57]        # 0x4336c8
  410a71:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  410a76:	call   QWORD PTR [rip+0x24cf4]        # 0x435770
  410a7c:	test   rax,rax
  410a7f:	je     0x410af5
  410a81:	mov    eax,DWORD PTR [rsp+0x44]
  410a85:	lea    edx,[rax-0x4]
  410a88:	and    edx,0xfffffffb
  410a8b:	je     0x410ab9
  410a8d:	sub    eax,0x40
  410a90:	and    eax,0xffffffbf
  410a93:	je     0x410ab9
  410a95:	mov    r9,rbp
  410a98:	add    r9,QWORD PTR [rip+0x22c29]        # 0x4336c8
  410a9f:	mov    r8d,0x40
  410aa5:	mov    rdx,QWORD PTR [rsp+0x38]
  410aaa:	mov    rcx,QWORD PTR [rsp+0x20]
  410aaf:	call   QWORD PTR [rip+0x24cb3]        # 0x435768
  410ab5:	test   eax,eax
  410ab7:	je     0x410ae1
  410ab9:	add    DWORD PTR [rip+0x22c04],0x1        # 0x4336c4
  410ac0:	mov    r8,rdi
  410ac3:	mov    rdx,rsi
  410ac6:	mov    rcx,rbx
  410ac9:	add    rsp,0x58
  410acd:	pop    rbx
  410ace:	pop    rsi
  410acf:	pop    rdi
  410ad0:	pop    rbp
  410ad1:	pop    r12
  410ad3:	pop    r13
  410ad5:	jmp    0x4161b8
  410ada:	xor    ebp,ebp
  410adc:	jmp    0x410a1b
  410ae1:	call   QWORD PTR [rip+0x24bd9]        # 0x4356c0
  410ae7:	lea    rcx,[rip+0x1efea]        # 0x42fad8
  410aee:	mov    edx,eax
  410af0:	call   0x410950
  410af5:	mov    rax,QWORD PTR [rip+0x22bcc]        # 0x4336c8
  410afc:	mov    edx,DWORD PTR [r12+0x8]
  410b01:	lea    rcx,[rip+0x1ef98]        # 0x42faa0
  410b08:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  410b0d:	call   0x410950
  410b12:	lea    rcx,[rip+0x1ef67]        # 0x42fa80
  410b19:	mov    rdx,rbx
  410b1c:	call   0x410950
  410b21:	nop
  410b22:	nop    DWORD PTR [rax+0x0]
  410b26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410b30:	push   rbp
  410b31:	push   r14
  410b33:	push   r13
  410b35:	push   r12
  410b37:	push   rdi
  410b38:	push   rsi
  410b39:	push   rbx
  410b3a:	mov    rbp,rsp
  410b3d:	sub    rsp,0x60
  410b41:	mov    ebx,DWORD PTR [rip+0x22b79]        # 0x4336c0
  410b47:	test   ebx,ebx
  410b49:	je     0x410b60
  410b4b:	mov    rsp,rbp
  410b4e:	pop    rbx
  410b4f:	pop    rsi
  410b50:	pop    rdi
  410b51:	pop    r12
  410b53:	pop    r13
  410b55:	pop    r14
  410b57:	pop    rbp
  410b58:	ret    
  410b59:	nop    DWORD PTR [rax+0x0]
  410b60:	mov    DWORD PTR [rip+0x22b56],0x1        # 0x4336c0
  410b6a:	call   0x411680
  410b6f:	cdqe   
  410b71:	lea    rax,[rax+rax*2]
  410b75:	lea    rax,[rax*8+0x1e]
  410b7d:	and    rax,0xfffffffffffffff0
  410b81:	call   0x4118a0
  410b86:	mov    rsi,QWORD PTR [rip+0x1f3e3]        # 0x42ff70
  410b8d:	mov    rbx,QWORD PTR [rip+0x1f3ec]        # 0x42ff80
  410b94:	sub    rsp,rax
  410b97:	mov    DWORD PTR [rip+0x22b23],0x0        # 0x4336c4
  410ba1:	lea    rax,[rsp+0x20]
  410ba6:	mov    QWORD PTR [rip+0x22b1b],rax        # 0x4336c8
  410bad:	mov    rax,rsi
  410bb0:	sub    rax,rbx
  410bb3:	cmp    rax,0x7
  410bb7:	jle    0x410b4b
  410bb9:	cmp    rax,0xb
  410bbd:	jle    0x410be5
  410bbf:	mov    r11d,DWORD PTR [rbx]
  410bc2:	test   r11d,r11d
  410bc5:	jne    0x410d10
  410bcb:	mov    r10d,DWORD PTR [rbx+0x4]
  410bcf:	test   r10d,r10d
  410bd2:	jne    0x410d10
  410bd8:	mov    r9d,DWORD PTR [rbx+0x8]
  410bdc:	test   r9d,r9d
  410bdf:	jne    0x410bfc
  410be1:	add    rbx,0xc
  410be5:	mov    r8d,DWORD PTR [rbx]
  410be8:	test   r8d,r8d
  410beb:	jne    0x410d10
  410bf1:	mov    ecx,DWORD PTR [rbx+0x4]
  410bf4:	test   ecx,ecx
  410bf6:	jne    0x410d10
  410bfc:	mov    edx,DWORD PTR [rbx+0x8]
  410bff:	cmp    edx,0x1
  410c02:	jne    0x410e1c
  410c08:	add    rbx,0xc
  410c0c:	cmp    rbx,rsi
  410c0f:	jae    0x410b4b
  410c15:	mov    r12,QWORD PTR [rip+0x1f3a4]        # 0x42ffc0
  410c1c:	lea    r13,[rbp-0x30]
  410c20:	movabs r14,0xffffffff00000000
  410c2a:	mov    ecx,DWORD PTR [rbx+0x4]
  410c2d:	mov    eax,DWORD PTR [rbx]
  410c2f:	movzx  edx,BYTE PTR [rbx+0x8]
  410c33:	add    rax,r12
  410c36:	add    rcx,r12
  410c39:	cmp    edx,0x10
  410c3c:	mov    r8,QWORD PTR [rax]
  410c3f:	je     0x410d86
  410c45:	jbe    0x410d4d
  410c4b:	cmp    edx,0x20
  410c4e:	je     0x410dcf
  410c54:	cmp    edx,0x40
  410c57:	jne    0x410dbb
  410c5d:	sub    r8,rax
  410c60:	mov    rdx,r13
  410c63:	mov    rdi,r13
  410c66:	mov    rax,r8
  410c69:	add    rax,QWORD PTR [rcx]
  410c6c:	mov    r8d,0x8
  410c72:	mov    QWORD PTR [rbp-0x30],rax
  410c76:	call   0x4109c0
  410c7b:	add    rbx,0xc
  410c7f:	cmp    rbx,rsi
  410c82:	jb     0x410c2a
  410c84:	mov    eax,DWORD PTR [rip+0x22a3a]        # 0x4336c4
  410c8a:	xor    ebx,ebx
  410c8c:	xor    esi,esi
  410c8e:	test   eax,eax
  410c90:	jle    0x410b4b
  410c96:	mov    r14,QWORD PTR [rip+0x24ad3]        # 0x435770
  410c9d:	lea    r13,[rbp-0x34]
  410ca1:	mov    r12,QWORD PTR [rip+0x24ac0]        # 0x435768
  410ca8:	jmp    0x410cc3
  410caa:	nop    WORD PTR [rax+rax*1+0x0]
  410cb0:	add    esi,0x1
  410cb3:	add    rbx,0x18
  410cb7:	cmp    esi,DWORD PTR [rip+0x22a07]        # 0x4336c4
  410cbd:	jge    0x410b4b
  410cc3:	mov    rax,rbx
  410cc6:	add    rax,QWORD PTR [rip+0x229fb]        # 0x4336c8
  410ccd:	mov    edx,DWORD PTR [rax]
  410ccf:	test   edx,edx
  410cd1:	je     0x410cb0
  410cd3:	mov    rcx,QWORD PTR [rax+0x8]
  410cd7:	mov    r8d,0x30
  410cdd:	mov    rdx,rdi
  410ce0:	call   r14
  410ce3:	test   rax,rax
  410ce6:	je     0x410dfe
  410cec:	mov    rax,QWORD PTR [rip+0x229d5]        # 0x4336c8
  410cf3:	mov    r9,r13
  410cf6:	mov    rdx,QWORD PTR [rbp-0x18]
  410cfa:	mov    rcx,QWORD PTR [rbp-0x30]
  410cfe:	mov    r8d,DWORD PTR [rax+rbx*1]
  410d02:	call   r12
  410d05:	jmp    0x410cb0
  410d07:	nop    WORD PTR [rax+rax*1+0x0]
  410d10:	cmp    rbx,rsi
  410d13:	jae    0x410b4b
  410d19:	mov    r12,QWORD PTR [rip+0x1f2a0]        # 0x42ffc0
  410d20:	lea    rdi,[rbp-0x30]
  410d24:	mov    ecx,DWORD PTR [rbx+0x4]
  410d27:	mov    eax,DWORD PTR [rbx]
  410d29:	mov    r8d,0x4
  410d2f:	mov    rdx,rdi
  410d32:	add    rbx,0x8
  410d36:	add    rcx,r12
  410d39:	add    eax,DWORD PTR [rcx]
  410d3b:	mov    DWORD PTR [rbp-0x30],eax
  410d3e:	call   0x4109c0
  410d43:	cmp    rbx,rsi
  410d46:	jb     0x410d24
  410d48:	jmp    0x410c84
  410d4d:	cmp    edx,0x8
  410d50:	jne    0x410dbb
  410d52:	movzx  edx,BYTE PTR [rcx]
  410d55:	mov    rdi,r13
  410d58:	mov    r10,rdx
  410d5b:	or     r10,0xffffffffffffff00
  410d62:	test   dl,dl
  410d64:	cmovs  rdx,r10
  410d68:	sub    rdx,rax
  410d6b:	lea    rax,[r8+rdx*1]
  410d6f:	mov    r8d,0x1
  410d75:	mov    rdx,r13
  410d78:	mov    QWORD PTR [rbp-0x30],rax
  410d7c:	call   0x4109c0
  410d81:	jmp    0x410c7b
  410d86:	movzx  edx,WORD PTR [rcx]
  410d89:	mov    rdi,r13
  410d8c:	mov    r10,rdx
  410d8f:	or     r10,0xffffffffffff0000
  410d96:	test   dx,dx
  410d99:	cmovs  rdx,r10
  410d9d:	sub    rdx,rax
  410da0:	lea    rax,[r8+rdx*1]
  410da4:	mov    r8d,0x2
  410daa:	mov    rdx,r13
  410dad:	mov    QWORD PTR [rbp-0x30],rax
  410db1:	call   0x4109c0
  410db6:	jmp    0x410c7b
  410dbb:	lea    rcx,[rip+0x1ed76]        # 0x42fb38
  410dc2:	mov    QWORD PTR [rbp-0x30],0x0
  410dca:	call   0x410950
  410dcf:	mov    edx,DWORD PTR [rcx]
  410dd1:	mov    rdi,r13
  410dd4:	mov    r10,rdx
  410dd7:	or     r10,r14
  410dda:	test   edx,edx
  410ddc:	cmovs  rdx,r10
  410de0:	sub    rdx,rax
  410de3:	lea    rax,[r8+rdx*1]
  410de7:	mov    r8d,0x4
  410ded:	mov    rdx,r13
  410df0:	mov    QWORD PTR [rbp-0x30],rax
  410df4:	call   0x4109c0
  410df9:	jmp    0x410c7b
  410dfe:	add    rbx,QWORD PTR [rip+0x228c3]        # 0x4336c8
  410e05:	lea    rcx,[rip+0x1ec94]        # 0x42faa0
  410e0c:	mov    rax,QWORD PTR [rbx+0x10]
  410e10:	mov    r8,QWORD PTR [rbx+0x8]
  410e14:	mov    edx,DWORD PTR [rax+0x8]
  410e17:	call   0x410950
  410e1c:	lea    rcx,[rip+0x1ecdd]        # 0x42fb00
  410e23:	call   0x410950
  410e28:	nop
  410e29:	nop
  410e2a:	nop
  410e2b:	nop
  410e2c:	nop
  410e2d:	nop
  410e2e:	nop
  410e2f:	nop
  410e30:	sub    rsp,0x28
  410e34:	mov    eax,DWORD PTR [rcx]
  410e36:	cmp    eax,0xc0000091
  410e3b:	ja     0x410ea0
  410e3d:	cmp    eax,0xc000008d
  410e42:	jae    0x410ebf
  410e44:	cmp    eax,0xc0000008
  410e49:	je     0x410f60
  410e4f:	ja     0x410f30
  410e55:	cmp    eax,0x80000002
  410e5a:	je     0x410f60
  410e60:	cmp    eax,0xc0000005
  410e65:	jne    0x410f3e
  410e6b:	xor    edx,edx
  410e6d:	mov    ecx,0xb
  410e72:	call   0x416188
  410e77:	cmp    rax,0x1
  410e7b:	je     0x410fc0
  410e81:	test   rax,rax
  410e84:	je     0x410fa0
  410e8a:	mov    ecx,0xb
  410e8f:	call   rax
  410e91:	xor    eax,eax
  410e93:	add    rsp,0x28
  410e97:	ret    
  410e98:	nop    DWORD PTR [rax+rax*1+0x0]
  410ea0:	cmp    eax,0xc0000094
  410ea5:	je     0x410f70
  410eab:	ja     0x410ef0
  410ead:	cmp    eax,0xc0000092
  410eb2:	je     0x410f60
  410eb8:	cmp    eax,0xc0000093
  410ebd:	jne    0x410f3e
  410ebf:	xor    edx,edx
  410ec1:	mov    ecx,0x8
  410ec6:	call   0x416188
  410ecb:	cmp    rax,0x1
  410ecf:	mov    rdx,rax
  410ed2:	je     0x410f48
  410ed4:	test   rdx,rdx
  410ed7:	mov    eax,0x1
  410edc:	je     0x410e93
  410ede:	mov    ecx,0x8
  410ee3:	call   rdx
  410ee5:	xor    eax,eax
  410ee7:	add    rsp,0x28
  410eeb:	ret    
  410eec:	nop    DWORD PTR [rax+0x0]
  410ef0:	cmp    eax,0xc0000095
  410ef5:	je     0x410f60
  410ef7:	cmp    eax,0xc0000096
  410efc:	jne    0x410f3e
  410efe:	xor    edx,edx
  410f00:	mov    ecx,0x4
  410f05:	call   0x416188
  410f0a:	cmp    rax,0x1
  410f0e:	je     0x410faa
  410f14:	test   rax,rax
  410f17:	je     0x410fa0
  410f1d:	mov    ecx,0x4
  410f22:	call   rax
  410f24:	xor    eax,eax
  410f26:	jmp    0x410e93
  410f2b:	nop    DWORD PTR [rax+rax*1+0x0]
  410f30:	cmp    eax,0xc000001d
  410f35:	je     0x410efe
  410f37:	cmp    eax,0xc000008c
  410f3c:	je     0x410f60
  410f3e:	mov    eax,0x1
  410f43:	add    rsp,0x28
  410f47:	ret    
  410f48:	mov    edx,0x1
  410f4d:	mov    ecx,0x8
  410f52:	call   0x416188
  410f57:	call   0x410920
  410f5c:	nop    DWORD PTR [rax+0x0]
  410f60:	xor    eax,eax
  410f62:	add    rsp,0x28
  410f66:	ret    
  410f67:	nop    WORD PTR [rax+rax*1+0x0]
  410f70:	xor    edx,edx
  410f72:	mov    ecx,0x8
  410f77:	call   0x416188
  410f7c:	cmp    rax,0x1
  410f80:	mov    rdx,rax
  410f83:	jne    0x410ed4
  410f89:	mov    edx,0x1
  410f8e:	mov    ecx,0x8
  410f93:	call   0x416188
  410f98:	xor    eax,eax
  410f9a:	jmp    0x410e93
  410f9f:	nop
  410fa0:	mov    eax,0x4
  410fa5:	add    rsp,0x28
  410fa9:	ret    
  410faa:	mov    edx,0x1
  410faf:	mov    ecx,0x4
  410fb4:	call   0x416188
  410fb9:	xor    eax,eax
  410fbb:	jmp    0x410e93
  410fc0:	mov    edx,0x1
  410fc5:	mov    ecx,0xb
  410fca:	call   0x416188
  410fcf:	xor    eax,eax
  410fd1:	jmp    0x410e93
  410fd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410fe0:	push   r12
  410fe2:	push   rbp
  410fe3:	push   rdi
  410fe4:	push   rsi
  410fe5:	push   rbx
  410fe6:	sub    rsp,0x20
  410fea:	call   0x411750
  410fef:	mov    rbp,rax
  410ff2:	mov    eax,DWORD PTR [rip+0x22710]        # 0x433708
  410ff8:	test   eax,eax
  410ffa:	jne    0x411021
  410ffc:	test   rbp,rbp
  410fff:	je     0x411021
  411001:	lea    rcx,[rip+0x1eb68]        # 0x42fb70
  411008:	mov    DWORD PTR [rip+0x226f6],0x1        # 0x433708
  411012:	call   0x411590
  411017:	test   rax,rax
  41101a:	je     0x411030
  41101c:	mov    eax,0x1
  411021:	add    rsp,0x20
  411025:	pop    rbx
  411026:	pop    rsi
  411027:	pop    rdi
  411028:	pop    rbp
  411029:	pop    r12
  41102b:	ret    
  41102c:	nop    DWORD PTR [rax+0x0]
  411030:	lea    rbx,[rip+0x22809]        # 0x433840
  411037:	mov    ecx,0x30
  41103c:	lea    rdx,[rip+0x226fd]        # 0x433740
  411043:	lea    r12,[rip+0xfffffffffffffde6]        # 0x410e30
  41104a:	xor    esi,esi
  41104c:	mov    rdi,rbx
  41104f:	rep stos QWORD PTR es:[rdi],rax
  411052:	mov    rdi,rdx
  411055:	sub    r12,rbp
  411058:	mov    cl,0x20
  41105a:	rep stos QWORD PTR es:[rdi],rax
  41105d:	mov    rdi,rdx
  411060:	jmp    0x411090
  411062:	mov    BYTE PTR [rdi],0x9
  411065:	mov    DWORD PTR [rdi+0x4],r12d
  411069:	add    rsi,0x1
  41106d:	mov    edx,DWORD PTR [rax+0xc]
  411070:	add    rbx,0xc
  411074:	mov    DWORD PTR [rbx-0xc],edx
  411077:	add    edx,DWORD PTR [rax+0x8]
  41107a:	mov    rax,rdi
  41107d:	sub    rax,rbp
  411080:	add    rdi,0x8
  411084:	mov    DWORD PTR [rbx-0x4],eax
  411087:	mov    DWORD PTR [rbx-0x8],edx
  41108a:	cmp    rsi,0x20
  41108e:	je     0x4110c5
  411090:	mov    rcx,rsi
  411093:	call   0x4116c0
  411098:	test   rax,rax
  41109b:	jne    0x411062
  41109d:	test   rsi,rsi
  4110a0:	je     0x41101c
  4110a6:	mov    edx,esi
  4110a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4110b0:	mov    r8,rbp
  4110b3:	lea    rcx,[rip+0x22786]        # 0x433840
  4110ba:	call   QWORD PTR [rip+0x24648]        # 0x435708
  4110c0:	jmp    0x41101c
  4110c5:	mov    edx,0x20
  4110ca:	jmp    0x4110b0
  4110cc:	nop    DWORD PTR [rax+0x0]
  4110d0:	push   rbx
  4110d1:	sub    rsp,0x20
  4110d5:	mov    rdx,QWORD PTR [rcx]
  4110d8:	mov    eax,DWORD PTR [rdx]
  4110da:	mov    r8d,eax
  4110dd:	and    r8d,0x20ffffff
  4110e4:	cmp    r8d,0x20474343
  4110eb:	je     0x4111f0
  4110f1:	cmp    eax,0xc0000091
  4110f6:	mov    rbx,rcx
  4110f9:	ja     0x411180
  4110ff:	cmp    eax,0xc000008d
  411104:	jae    0x411197
  41110a:	cmp    eax,0xc0000008
  41110f:	je     0x411143
  411111:	ja     0x411150
  411113:	cmp    eax,0x80000002
  411118:	je     0x411143
  41111a:	cmp    eax,0xc0000005
  41111f:	jne    0x411162
  411121:	xor    edx,edx
  411123:	mov    ecx,0xb
  411128:	call   0x416188
  41112d:	cmp    rax,0x1
  411131:	je     0x411260
  411137:	test   rax,rax
  41113a:	je     0x411162
  41113c:	mov    ecx,0xb
  411141:	call   rax
  411143:	mov    eax,0xffffffff
  411148:	add    rsp,0x20
  41114c:	pop    rbx
  41114d:	ret    
  41114e:	xchg   ax,ax
  411150:	cmp    eax,0xc000001d
  411155:	je     0x411216
  41115b:	cmp    eax,0xc000008c
  411160:	je     0x411143
  411162:	mov    rax,QWORD PTR [rip+0x22597]        # 0x433700
  411169:	test   rax,rax
  41116c:	je     0x411148
  41116e:	mov    rcx,rbx
  411171:	add    rsp,0x20
  411175:	pop    rbx
  411176:	rex.W jmp rax
  411179:	nop    DWORD PTR [rax+0x0]
  411180:	cmp    eax,0xc0000094
  411185:	je     0x4111c2
  411187:	ja     0x411200
  411189:	cmp    eax,0xc0000092
  41118e:	je     0x411143
  411190:	cmp    eax,0xc0000093
  411195:	jne    0x411162
  411197:	xor    edx,edx
  411199:	mov    ecx,0x8
  41119e:	call   0x416188
  4111a3:	cmp    rax,0x1
  4111a7:	jne    0x4111d4
  4111a9:	mov    edx,0x1
  4111ae:	mov    ecx,0x8
  4111b3:	call   0x416188
  4111b8:	call   0x410920
  4111bd:	jmp    0x411143
  4111c2:	xor    edx,edx
  4111c4:	mov    ecx,0x8
  4111c9:	call   0x416188
  4111ce:	cmp    rax,0x1
  4111d2:	je     0x411242
  4111d4:	test   rax,rax
  4111d7:	je     0x411162
  4111d9:	mov    ecx,0x8
  4111de:	call   rax
  4111e0:	mov    eax,0xffffffff
  4111e5:	jmp    0x411148
  4111ea:	nop    WORD PTR [rax+rax*1+0x0]
  4111f0:	test   BYTE PTR [rdx+0x4],0x1
  4111f4:	jne    0x4110f1
  4111fa:	jmp    0x411143
  4111ff:	nop
  411200:	cmp    eax,0xc0000095
  411205:	je     0x411143
  41120b:	cmp    eax,0xc0000096
  411210:	jne    0x411162
  411216:	xor    edx,edx
  411218:	mov    ecx,0x4
  41121d:	call   0x416188
  411222:	cmp    rax,0x1
  411226:	je     0x411274
  411228:	test   rax,rax
  41122b:	je     0x411162
  411231:	mov    ecx,0x4
  411236:	call   rax
  411238:	mov    eax,0xffffffff
  41123d:	jmp    0x411148
  411242:	mov    edx,0x1
  411247:	mov    ecx,0x8
  41124c:	call   0x416188
  411251:	jmp    0x411143
  411256:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411260:	mov    edx,0x1
  411265:	mov    ecx,0xb
  41126a:	call   0x416188
  41126f:	jmp    0x411143
  411274:	mov    edx,0x1
  411279:	mov    ecx,0x4
  41127e:	call   0x416188
  411283:	jmp    0x411143
  411288:	nop
  411289:	nop
  41128a:	nop
  41128b:	nop
  41128c:	nop
  41128d:	nop
  41128e:	nop
  41128f:	nop
  411290:	push   rbp
  411291:	push   rdi
  411292:	push   rsi
  411293:	push   rbx
  411294:	sub    rsp,0x28
  411298:	lea    rcx,[rip+0x22741]        # 0x4339e0
  41129f:	call   QWORD PTR [rip+0x243b3]        # 0x435658
  4112a5:	mov    rbx,QWORD PTR [rip+0x22714]        # 0x4339c0
  4112ac:	test   rbx,rbx
  4112af:	je     0x4112e4
  4112b1:	mov    rbp,QWORD PTR [rip+0x244a0]        # 0x435758
  4112b8:	mov    rdi,QWORD PTR [rip+0x24401]        # 0x4356c0
  4112bf:	nop
  4112c0:	mov    ecx,DWORD PTR [rbx]
  4112c2:	call   rbp
  4112c4:	mov    rsi,rax
  4112c7:	call   rdi
  4112c9:	test   eax,eax
  4112cb:	jne    0x4112db
  4112cd:	test   rsi,rsi
  4112d0:	je     0x4112db
  4112d2:	mov    rax,QWORD PTR [rbx+0x8]
  4112d6:	mov    rcx,rsi
  4112d9:	call   rax
  4112db:	mov    rbx,QWORD PTR [rbx+0x10]
  4112df:	test   rbx,rbx
  4112e2:	jne    0x4112c0
  4112e4:	mov    rax,QWORD PTR [rip+0x2440d]        # 0x4356f8
  4112eb:	lea    rcx,[rip+0x226ee]        # 0x4339e0
  4112f2:	add    rsp,0x28
  4112f6:	pop    rbx
  4112f7:	pop    rsi
  4112f8:	pop    rdi
  4112f9:	pop    rbp
  4112fa:	rex.W jmp rax
  4112fd:	nop    DWORD PTR [rax]
  411300:	push   rdi
  411301:	push   rsi
  411302:	push   rbx
  411303:	sub    rsp,0x20
  411307:	mov    eax,DWORD PTR [rip+0x226bb]        # 0x4339c8
  41130d:	test   eax,eax
  41130f:	jne    0x411320
  411311:	add    rsp,0x20
  411315:	pop    rbx
  411316:	pop    rsi
  411317:	pop    rdi
  411318:	ret    
  411319:	nop    DWORD PTR [rax+0x0]
  411320:	mov    rsi,rdx
  411323:	mov    edi,ecx
  411325:	mov    edx,0x18
  41132a:	mov    ecx,0x1
  41132f:	call   0x416270
  411334:	test   rax,rax
  411337:	mov    rbx,rax
  41133a:	je     0x411378
  41133c:	mov    DWORD PTR [rax],edi
  41133e:	mov    QWORD PTR [rax+0x8],rsi
  411342:	lea    rcx,[rip+0x22697]        # 0x4339e0
  411349:	call   QWORD PTR [rip+0x24309]        # 0x435658
  41134f:	mov    rax,QWORD PTR [rip+0x2266a]        # 0x4339c0
  411356:	lea    rcx,[rip+0x22683]        # 0x4339e0
  41135d:	mov    QWORD PTR [rip+0x2265c],rbx        # 0x4339c0
  411364:	mov    QWORD PTR [rbx+0x10],rax
  411368:	call   QWORD PTR [rip+0x2438a]        # 0x4356f8
  41136e:	xor    eax,eax
  411370:	add    rsp,0x20
  411374:	pop    rbx
  411375:	pop    rsi
  411376:	pop    rdi
  411377:	ret    
  411378:	mov    eax,0xffffffff
  41137d:	jmp    0x411311
  41137f:	nop
  411380:	push   rbx
  411381:	sub    rsp,0x20
  411385:	mov    eax,DWORD PTR [rip+0x2263d]        # 0x4339c8
  41138b:	test   eax,eax
  41138d:	jne    0x4113a0
  41138f:	xor    eax,eax
  411391:	add    rsp,0x20
  411395:	pop    rbx
  411396:	ret    
  411397:	nop    WORD PTR [rax+rax*1+0x0]
  4113a0:	mov    ebx,ecx
  4113a2:	lea    rcx,[rip+0x22637]        # 0x4339e0
  4113a9:	call   QWORD PTR [rip+0x242a9]        # 0x435658
  4113af:	mov    rdx,QWORD PTR [rip+0x2260a]        # 0x4339c0
  4113b6:	test   rdx,rdx
  4113b9:	je     0x4113d7
  4113bb:	mov    eax,DWORD PTR [rdx]
  4113bd:	cmp    eax,ebx
  4113bf:	jne    0x4113ce
  4113c1:	jmp    0x41140f
  4113c3:	mov    r8d,DWORD PTR [rax]
  4113c6:	cmp    r8d,ebx
  4113c9:	je     0x4113f0
  4113cb:	mov    rdx,rax
  4113ce:	mov    rax,QWORD PTR [rdx+0x10]
  4113d2:	test   rax,rax
  4113d5:	jne    0x4113c3
  4113d7:	lea    rcx,[rip+0x22602]        # 0x4339e0
  4113de:	call   QWORD PTR [rip+0x24314]        # 0x4356f8
  4113e4:	xor    eax,eax
  4113e6:	add    rsp,0x20
  4113ea:	pop    rbx
  4113eb:	ret    
  4113ec:	nop    DWORD PTR [rax+0x0]
  4113f0:	mov    rcx,rax
  4113f3:	mov    rax,QWORD PTR [rax+0x10]
  4113f7:	mov    QWORD PTR [rdx+0x10],rax
  4113fb:	call   0x416220
  411400:	lea    rcx,[rip+0x225d9]        # 0x4339e0
  411407:	call   QWORD PTR [rip+0x242eb]        # 0x4356f8
  41140d:	jmp    0x4113e4
  41140f:	mov    rax,QWORD PTR [rdx+0x10]
  411413:	mov    rcx,rdx
  411416:	mov    QWORD PTR [rip+0x225a3],rax        # 0x4339c0
  41141d:	jmp    0x4113fb
  41141f:	nop
  411420:	push   rbx
  411421:	sub    rsp,0x20
  411425:	cmp    edx,0x1
  411428:	je     0x4114c0
  41142e:	jb     0x411460
  411430:	cmp    edx,0x2
  411433:	je     0x411450
  411435:	cmp    edx,0x3
  411438:	jne    0x411455
  41143a:	mov    eax,DWORD PTR [rip+0x22588]        # 0x4339c8
  411440:	test   eax,eax
  411442:	je     0x411455
  411444:	call   0x411290
  411449:	jmp    0x411455
  41144b:	nop    DWORD PTR [rax+rax*1+0x0]
  411450:	call   0x410920
  411455:	mov    eax,0x1
  41145a:	add    rsp,0x20
  41145e:	pop    rbx
  41145f:	ret    
  411460:	mov    eax,DWORD PTR [rip+0x22562]        # 0x4339c8
  411466:	test   eax,eax
  411468:	jne    0x4114f0
  41146e:	mov    eax,DWORD PTR [rip+0x22554]        # 0x4339c8
  411474:	cmp    eax,0x1
  411477:	jne    0x411455
  411479:	mov    rcx,QWORD PTR [rip+0x22540]        # 0x4339c0
  411480:	test   rcx,rcx
  411483:	je     0x411496
  411485:	mov    rbx,QWORD PTR [rcx+0x10]
  411489:	call   0x416220
  41148e:	test   rbx,rbx
  411491:	mov    rcx,rbx
  411494:	jne    0x411485
  411496:	lea    rcx,[rip+0x22543]        # 0x4339e0
  41149d:	mov    QWORD PTR [rip+0x22518],0x0        # 0x4339c0
  4114a8:	mov    DWORD PTR [rip+0x22516],0x0        # 0x4339c8
  4114b2:	call   QWORD PTR [rip+0x24198]        # 0x435650
  4114b8:	jmp    0x411455
  4114ba:	nop    WORD PTR [rax+rax*1+0x0]
  4114c0:	mov    eax,DWORD PTR [rip+0x22502]        # 0x4339c8
  4114c6:	test   eax,eax
  4114c8:	je     0x4114e0
  4114ca:	mov    eax,0x1
  4114cf:	mov    DWORD PTR [rip+0x224ef],0x1        # 0x4339c8
  4114d9:	add    rsp,0x20
  4114dd:	pop    rbx
  4114de:	ret    
  4114df:	nop
  4114e0:	lea    rcx,[rip+0x224f9]        # 0x4339e0
  4114e7:	call   QWORD PTR [rip+0x24203]        # 0x4356f0
  4114ed:	jmp    0x4114ca
  4114ef:	nop
  4114f0:	call   0x411290
  4114f5:	jmp    0x41146e
  4114fa:	nop
  4114fb:	nop
  4114fc:	nop
  4114fd:	nop
  4114fe:	nop
  4114ff:	nop
  411500:	movsxd rax,DWORD PTR [rcx+0x3c]
  411504:	add    rcx,rax
  411507:	xor    eax,eax
  411509:	cmp    DWORD PTR [rcx],0x4550
  41150f:	je     0x411513
  411511:	repz ret 
  411513:	xor    eax,eax
  411515:	cmp    WORD PTR [rcx+0x18],0x20b
  41151b:	sete   al
  41151e:	ret    
  41151f:	nop
  411520:	cmp    WORD PTR [rcx],0x5a4d
  411525:	je     0x411530
  411527:	xor    eax,eax
  411529:	ret    
  41152a:	nop    WORD PTR [rax+rax*1+0x0]
  411530:	jmp    0x411500
  411532:	nop    DWORD PTR [rax+0x0]
  411536:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411540:	movsxd rax,DWORD PTR [rcx+0x3c]
  411544:	add    rcx,rax
  411547:	movzx  eax,WORD PTR [rcx+0x14]
  41154b:	lea    rax,[rcx+rax*1+0x18]
  411550:	movzx  ecx,WORD PTR [rcx+0x6]
  411554:	test   ecx,ecx
  411556:	je     0x411581
  411558:	sub    ecx,0x1
  41155b:	lea    rcx,[rcx+rcx*4]
  41155f:	lea    r9,[rax+rcx*8+0x28]
  411564:	mov    r8d,DWORD PTR [rax+0xc]
  411568:	cmp    r8,rdx
  41156b:	mov    rcx,r8
  41156e:	ja     0x411578
  411570:	add    ecx,DWORD PTR [rax+0x8]
  411573:	cmp    rdx,rcx
  411576:	jb     0x411583
  411578:	add    rax,0x28
  41157c:	cmp    rax,r9
  41157f:	jne    0x411564
  411581:	xor    eax,eax
  411583:	repz ret 
  411585:	nop
  411586:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411590:	push   rdi
  411591:	push   rsi
  411592:	push   rbx
  411593:	sub    rsp,0x20
  411597:	mov    rsi,rcx
  41159a:	call   0x416150
  41159f:	cmp    rax,0x8
  4115a3:	ja     0x4115c0
  4115a5:	mov    rbx,QWORD PTR [rip+0x1ea14]        # 0x42ffc0
  4115ac:	xor    edi,edi
  4115ae:	cmp    WORD PTR [rbx],0x5a4d
  4115b3:	je     0x4115d0
  4115b5:	mov    rax,rdi
  4115b8:	add    rsp,0x20
  4115bc:	pop    rbx
  4115bd:	pop    rsi
  4115be:	pop    rdi
  4115bf:	ret    
  4115c0:	xor    edi,edi
  4115c2:	mov    rax,rdi
  4115c5:	add    rsp,0x20
  4115c9:	pop    rbx
  4115ca:	pop    rsi
  4115cb:	pop    rdi
  4115cc:	ret    
  4115cd:	nop    DWORD PTR [rax]
  4115d0:	mov    rcx,rbx
  4115d3:	call   0x411500
  4115d8:	test   eax,eax
  4115da:	je     0x4115b5
  4115dc:	movsxd rdx,DWORD PTR [rbx+0x3c]
  4115e0:	add    rdx,rbx
  4115e3:	movzx  eax,WORD PTR [rdx+0x14]
  4115e7:	lea    rbx,[rdx+rax*1+0x18]
  4115ec:	movzx  eax,WORD PTR [rdx+0x6]
  4115f0:	test   eax,eax
  4115f2:	je     0x4115b5
  4115f4:	sub    eax,0x1
  4115f7:	lea    rax,[rax+rax*4]
  4115fb:	lea    rdi,[rbx+rax*8+0x28]
  411600:	jmp    0x41160b
  411602:	add    rbx,0x28
  411606:	cmp    rbx,rdi
  411609:	je     0x4115c0
  41160b:	mov    r8d,0x8
  411611:	mov    rdx,rsi
  411614:	mov    rcx,rbx
  411617:	call   0x416148
  41161c:	test   eax,eax
  41161e:	jne    0x411602
  411620:	mov    rdi,rbx
  411623:	mov    rax,rdi
  411626:	add    rsp,0x20
  41162a:	pop    rbx
  41162b:	pop    rsi
  41162c:	pop    rdi
  41162d:	ret    
  41162e:	xchg   ax,ax
  411630:	push   rsi
  411631:	push   rbx
  411632:	sub    rsp,0x28
  411636:	mov    rbx,QWORD PTR [rip+0x1e983]        # 0x42ffc0
  41163d:	cmp    WORD PTR [rbx],0x5a4d
  411642:	je     0x411650
  411644:	xor    eax,eax
  411646:	add    rsp,0x28
  41164a:	pop    rbx
  41164b:	pop    rsi
  41164c:	ret    
  41164d:	nop    DWORD PTR [rax]
  411650:	mov    rsi,rcx
  411653:	mov    rcx,rbx
  411656:	call   0x411500
  41165b:	test   eax,eax
  41165d:	je     0x411644
  41165f:	sub    rsi,rbx
  411662:	mov    rcx,rbx
  411665:	mov    rdx,rsi
  411668:	add    rsp,0x28
  41166c:	pop    rbx
  41166d:	pop    rsi
  41166e:	jmp    0x411540
  411673:	nop    DWORD PTR [rax]
  411676:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411680:	push   rbx
  411681:	sub    rsp,0x20
  411685:	mov    rbx,QWORD PTR [rip+0x1e934]        # 0x42ffc0
  41168c:	xor    eax,eax
  41168e:	cmp    WORD PTR [rbx],0x5a4d
  411693:	je     0x4116a0
  411695:	add    rsp,0x20
  411699:	pop    rbx
  41169a:	ret    
  41169b:	nop    DWORD PTR [rax+rax*1+0x0]
  4116a0:	mov    rcx,rbx
  4116a3:	call   0x411500
  4116a8:	test   eax,eax
  4116aa:	je     0x411695
  4116ac:	movsxd rax,DWORD PTR [rbx+0x3c]
  4116b0:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  4116b5:	add    rsp,0x20
  4116b9:	pop    rbx
  4116ba:	ret    
  4116bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4116c0:	push   rdi
  4116c1:	push   rsi
  4116c2:	push   rbx
  4116c3:	sub    rsp,0x20
  4116c7:	mov    rsi,QWORD PTR [rip+0x1e8f2]        # 0x42ffc0
  4116ce:	xor    edi,edi
  4116d0:	mov    rbx,rcx
  4116d3:	cmp    WORD PTR [rsi],0x5a4d
  4116d8:	je     0x4116e5
  4116da:	mov    rax,rdi
  4116dd:	add    rsp,0x20
  4116e1:	pop    rbx
  4116e2:	pop    rsi
  4116e3:	pop    rdi
  4116e4:	ret    
  4116e5:	mov    rcx,rsi
  4116e8:	call   0x411500
  4116ed:	test   eax,eax
  4116ef:	je     0x4116da
  4116f1:	movsxd rax,DWORD PTR [rsi+0x3c]
  4116f5:	add    rsi,rax
  4116f8:	movzx  eax,WORD PTR [rsi+0x14]
  4116fc:	lea    rdx,[rsi+rax*1+0x18]
  411701:	movzx  eax,WORD PTR [rsi+0x6]
  411705:	test   eax,eax
  411707:	je     0x4116da
  411709:	sub    eax,0x1
  41170c:	lea    rax,[rax+rax*4]
  411710:	lea    rax,[rdx+rax*8+0x28]
  411715:	test   BYTE PTR [rdx+0x27],0x20
  411719:	je     0x411724
  41171b:	test   rbx,rbx
  41171e:	je     0x411740
  411720:	sub    rbx,0x1
  411724:	add    rdx,0x28
  411728:	cmp    rdx,rax
  41172b:	jne    0x411715
  41172d:	xor    edi,edi
  41172f:	mov    rax,rdi
  411732:	add    rsp,0x20
  411736:	pop    rbx
  411737:	pop    rsi
  411738:	pop    rdi
  411739:	ret    
  41173a:	nop    WORD PTR [rax+rax*1+0x0]
  411740:	mov    rdi,rdx
  411743:	mov    rax,rdi
  411746:	add    rsp,0x20
  41174a:	pop    rbx
  41174b:	pop    rsi
  41174c:	pop    rdi
  41174d:	ret    
  41174e:	xchg   ax,ax
  411750:	push   rsi
  411751:	push   rbx
  411752:	sub    rsp,0x28
  411756:	mov    rsi,QWORD PTR [rip+0x1e863]        # 0x42ffc0
  41175d:	xor    ebx,ebx
  41175f:	cmp    WORD PTR [rsi],0x5a4d
  411764:	je     0x411770
  411766:	mov    rax,rbx
  411769:	add    rsp,0x28
  41176d:	pop    rbx
  41176e:	pop    rsi
  41176f:	ret    
  411770:	mov    rcx,rsi
  411773:	call   0x411500
  411778:	test   eax,eax
  41177a:	cmovne rbx,rsi
  41177e:	mov    rax,rbx
  411781:	add    rsp,0x28
  411785:	pop    rbx
  411786:	pop    rsi
  411787:	ret    
  411788:	nop    DWORD PTR [rax+rax*1+0x0]
  411790:	push   rsi
  411791:	push   rbx
  411792:	sub    rsp,0x28
  411796:	mov    rbx,QWORD PTR [rip+0x1e823]        # 0x42ffc0
  41179d:	xor    eax,eax
  41179f:	cmp    WORD PTR [rbx],0x5a4d
  4117a4:	je     0x4117b0
  4117a6:	add    rsp,0x28
  4117aa:	pop    rbx
  4117ab:	pop    rsi
  4117ac:	ret    
  4117ad:	nop    DWORD PTR [rax]
  4117b0:	mov    rsi,rcx
  4117b3:	mov    rcx,rbx
  4117b6:	call   0x411500
  4117bb:	test   eax,eax
  4117bd:	je     0x4117a6
  4117bf:	sub    rsi,rbx
  4117c2:	mov    rcx,rbx
  4117c5:	mov    rdx,rsi
  4117c8:	call   0x411540
  4117cd:	test   rax,rax
  4117d0:	je     0x4117e1
  4117d2:	mov    eax,DWORD PTR [rax+0x24]
  4117d5:	not    eax
  4117d7:	shr    eax,0x1f
  4117da:	add    rsp,0x28
  4117de:	pop    rbx
  4117df:	pop    rsi
  4117e0:	ret    
  4117e1:	xor    eax,eax
  4117e3:	jmp    0x4117a6
  4117e5:	nop
  4117e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4117f0:	push   rbp
  4117f1:	push   rdi
  4117f2:	push   rsi
  4117f3:	push   rbx
  4117f4:	sub    rsp,0x28
  4117f8:	mov    rdi,QWORD PTR [rip+0x1e7c1]        # 0x42ffc0
  4117ff:	xor    ebp,ebp
  411801:	mov    esi,ecx
  411803:	cmp    WORD PTR [rdi],0x5a4d
  411808:	je     0x411820
  41180a:	mov    rax,rbp
  41180d:	add    rsp,0x28
  411811:	pop    rbx
  411812:	pop    rsi
  411813:	pop    rdi
  411814:	pop    rbp
  411815:	ret    
  411816:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411820:	mov    rcx,rdi
  411823:	call   0x411500
  411828:	test   eax,eax
  41182a:	je     0x41180a
  41182c:	movsxd rax,DWORD PTR [rdi+0x3c]
  411830:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  411837:	test   edx,edx
  411839:	je     0x41180a
  41183b:	mov    ebx,edx
  41183d:	mov    rcx,rdi
  411840:	mov    rdx,rbx
  411843:	call   0x411540
  411848:	test   rax,rax
  41184b:	je     0x41180a
  41184d:	add    rbx,rdi
  411850:	mov    rdx,rbx
  411853:	jne    0x411867
  411855:	jmp    0x41180a
  411857:	nop    WORD PTR [rax+rax*1+0x0]
  411860:	sub    esi,0x1
  411863:	add    rdx,0x14
  411867:	mov    ecx,DWORD PTR [rdx+0x4]
  41186a:	test   ecx,ecx
  41186c:	jne    0x411875
  41186e:	mov    eax,DWORD PTR [rdx+0xc]
  411871:	test   eax,eax
  411873:	je     0x411890
  411875:	test   esi,esi
  411877:	jg     0x411860
  411879:	mov    ebp,DWORD PTR [rdx+0xc]
  41187c:	add    rbp,rdi
  41187f:	mov    rax,rbp
  411882:	add    rsp,0x28
  411886:	pop    rbx
  411887:	pop    rsi
  411888:	pop    rdi
  411889:	pop    rbp
  41188a:	ret    
  41188b:	nop    DWORD PTR [rax+rax*1+0x0]
  411890:	xor    ebp,ebp
  411892:	mov    rax,rbp
  411895:	add    rsp,0x28
  411899:	pop    rbx
  41189a:	pop    rsi
  41189b:	pop    rdi
  41189c:	pop    rbp
  41189d:	ret    
  41189e:	nop
  41189f:	nop
  4118a0:	push   rcx
  4118a1:	push   rax
  4118a2:	cmp    rax,0x1000
  4118a8:	lea    rcx,[rsp+0x18]
  4118ad:	jb     0x4118c8
  4118af:	sub    rcx,0x1000
  4118b6:	or     QWORD PTR [rcx],0x0
  4118ba:	sub    rax,0x1000
  4118c0:	cmp    rax,0x1000
  4118c6:	ja     0x4118af
  4118c8:	sub    rcx,rax
  4118cb:	or     QWORD PTR [rcx],0x0
  4118cf:	pop    rax
  4118d0:	pop    rcx
  4118d1:	ret    
  4118d2:	nop
  4118d3:	nop
  4118d4:	nop
  4118d5:	nop
  4118d6:	nop
  4118d7:	nop
  4118d8:	nop
  4118d9:	nop
  4118da:	nop
  4118db:	nop
  4118dc:	nop
  4118dd:	nop
  4118de:	nop
  4118df:	nop
  4118e0:	push   rbx
  4118e1:	sub    rsp,0x60
  4118e5:	lea    r8,[rip+0x5764]        # 0x417050
  4118ec:	lea    rax,[rsp+0x50]
  4118f1:	lea    r9,[rsp+0x4c]
  4118f6:	mov    QWORD PTR [rsp+0x20],rax
  4118fb:	call   0x4126f0
  411900:	mov    edx,eax
  411902:	and    edx,0x7
  411905:	cmp    edx,0x6
  411908:	ja     0x411935
  41190a:	lea    rcx,[rip+0x1e26f]        # 0x42fb80
  411911:	movsxd rdx,DWORD PTR [rcx+rdx*4]
  411915:	add    rcx,rdx
  411918:	jmp    rcx
  41191a:	nop    WORD PTR [rax+rax*1+0x0]
  411920:	mov    ebx,DWORD PTR [rsp+0x54]
  411924:	mov    edx,DWORD PTR [rsp+0x50]
  411928:	or     ebx,0x7ff00000
  41192e:	shl    rbx,0x20
  411932:	or     rbx,rdx
  411935:	test   al,0x8
  411937:	je     0x41194e
  411939:	mov    rax,rbx
  41193c:	mov    ebx,ebx
  41193e:	shr    rax,0x20
  411942:	or     eax,0x80000000
  411947:	shl    rax,0x20
  41194b:	or     rbx,rax
  41194e:	mov    QWORD PTR [rsp+0x38],rbx
  411953:	movsd  xmm0,QWORD PTR [rsp+0x38]
  411959:	add    rsp,0x60
  41195d:	pop    rbx
  41195e:	ret    
  41195f:	nop
  411960:	movabs rbx,0x7ff8000000000000
  41196a:	jmp    0x411935
  41196c:	nop    DWORD PTR [rax+0x0]
  411970:	xor    ebx,ebx
  411972:	jmp    0x411935
  411974:	mov    ebx,DWORD PTR [rsp+0x4c]
  411978:	mov    edx,DWORD PTR [rsp+0x54]
  41197c:	add    ebx,0x433
  411982:	and    edx,0xffefffff
  411988:	shl    ebx,0x14
  41198b:	or     ebx,edx
  41198d:	mov    edx,DWORD PTR [rsp+0x50]
  411991:	shl    rbx,0x20
  411995:	or     rbx,rdx
  411998:	jmp    0x411935
  41199a:	nop    WORD PTR [rax+rax*1+0x0]
  4119a0:	mov    ebx,DWORD PTR [rsp+0x54]
  4119a4:	mov    edx,DWORD PTR [rsp+0x50]
  4119a8:	shl    rbx,0x20
  4119ac:	or     rbx,rdx
  4119af:	jmp    0x411935
  4119b1:	movabs rbx,0x7ff0000000000000
  4119bb:	jmp    0x411935
  4119c0:	push   rbp
  4119c1:	push   r13
  4119c3:	push   r12
  4119c5:	push   rdi
  4119c6:	push   rsi
  4119c7:	push   rbx
  4119c8:	sub    rsp,0x28
  4119cc:	lea    rbp,[rsp+0x80]
  4119d4:	xor    edx,edx
  4119d6:	mov    rbx,rcx
  4119d9:	mov    ecx,0x2
  4119de:	call   0x416190
  4119e3:	test   rax,rax
  4119e6:	mov    rsi,rax
  4119e9:	je     0x4119f6
  4119eb:	mov    rcx,rax
  4119ee:	call   0x4160e8
  4119f3:	mov    rsi,rax
  4119f6:	lea    rdx,[rip+0x1e1a3]        # 0x42fba0
  4119fd:	mov    ecx,0x2
  411a02:	call   0x416190
  411a07:	test   rbx,rbx
  411a0a:	je     0x411a11
  411a0c:	cmp    BYTE PTR [rbx],0x0
  411a0f:	jne    0x411a80
  411a11:	lea    rdx,[rip+0x1e18e]        # 0x42fba6
  411a18:	xor    r8d,r8d
  411a1b:	xor    ecx,ecx
  411a1d:	call   0x416100
  411a22:	mov    rcx,QWORD PTR [rip+0x22007]        # 0x433a30
  411a29:	lea    rbx,[rax+0x1]
  411a2d:	mov    rdx,rbx
  411a30:	call   0x416198
  411a35:	lea    rdx,[rip+0x1e16a]        # 0x42fba6
  411a3c:	mov    r8,rbx
  411a3f:	mov    rcx,rax
  411a42:	mov    QWORD PTR [rip+0x21fe7],rax        # 0x433a30
  411a49:	call   0x416100
  411a4e:	mov    rdx,rsi
  411a51:	mov    ecx,0x2
  411a56:	call   0x416190
  411a5b:	mov    rcx,rsi
  411a5e:	call   0x416220
  411a63:	mov    rax,QWORD PTR [rip+0x21fc6]        # 0x433a30
  411a6a:	lea    rsp,[rbp-0x58]
  411a6e:	pop    rbx
  411a6f:	pop    rsi
  411a70:	pop    rdi
  411a71:	pop    r12
  411a73:	pop    r13
  411a75:	pop    rbp
  411a76:	ret    
  411a77:	nop    WORD PTR [rax+rax*1+0x0]
  411a80:	xor    r8d,r8d
  411a83:	mov    rdx,rbx
  411a86:	xor    ecx,ecx
  411a88:	call   0x4161c8
  411a8d:	lea    rdx,[rax+rax*1+0x12]
  411a92:	mov    r8,rax
  411a95:	mov    rdi,rsp
  411a98:	mov    rax,rdx
  411a9b:	and    rax,0xfffffffffffffff0
  411a9f:	call   0x4118a0
  411aa4:	sub    rsp,rax
  411aa7:	mov    rdx,rbx
  411aaa:	lea    r12,[rsp+0x21]
  411aaf:	shr    r12,1
  411ab2:	lea    r13,[r12+r12*1]
  411ab6:	mov    rcx,r13
  411ab9:	call   0x4161c8
  411abe:	cmp    rax,0x1
  411ac2:	jbe    0x411b46
  411ac8:	cmp    WORD PTR [r12+r12*1+0x2],0x3a
  411acf:	lea    rdx,[r13+0x4]
  411ad3:	cmovne rdx,r13
  411ad7:	xor    r9d,r9d
  411ada:	mov    WORD PTR [r13+rax*2+0x0],r9w
  411ae0:	movzx  r11d,WORD PTR [rdx]
  411ae4:	mov    r12,rdx
  411ae7:	test   r11w,r11w
  411aeb:	je     0x411b5c
  411aed:	mov    r9,r12
  411af0:	jmp    0x411b0c
  411af2:	cmp    r11w,0x2f
  411af7:	je     0x411b24
  411af9:	movzx  r11d,WORD PTR [r9+0x2]
  411afe:	add    r9,0x2
  411b02:	test   r11w,r11w
  411b06:	je     0x411ba8
  411b0c:	cmp    r11w,0x5c
  411b11:	jne    0x411af2
  411b13:	movzx  r10d,WORD PTR [r9]
  411b17:	cmp    r10w,0x5c
  411b1c:	jne    0x411b2f
  411b1e:	xchg   ax,ax
  411b20:	add    r9,0x2
  411b24:	movzx  r10d,WORD PTR [r9]
  411b28:	cmp    r10w,0x5c
  411b2d:	je     0x411b20
  411b2f:	cmp    r10w,0x2f
  411b34:	je     0x411b20
  411b36:	test   r10w,r10w
  411b3a:	je     0x411b64
  411b3c:	movzx  r11d,WORD PTR [r9+0x2]
  411b41:	mov    r12,r9
  411b44:	jmp    0x411afe
  411b46:	xor    edx,edx
  411b48:	mov    WORD PTR [r13+rax*2+0x0],dx
  411b4e:	movzx  r11d,WORD PTR [r12+r12*1]
  411b53:	mov    r12,r13
  411b56:	test   r11w,r11w
  411b5a:	jne    0x411aed
  411b5c:	mov    rsp,rdi
  411b5f:	jmp    0x411a11
  411b64:	cmp    r9,r12
  411b67:	jbe    0x411af9
  411b69:	movzx  edx,WORD PTR [r9-0x2]
  411b6e:	lea    r10,[r9-0x2]
  411b72:	cmp    dx,0x2f
  411b76:	je     0x411b82
  411b78:	cmp    dx,0x5c
  411b7c:	jne    0x411c62
  411b82:	xor    r8d,r8d
  411b85:	cmp    r12,r10
  411b88:	mov    WORD PTR [r10],r8w
  411b8c:	jae    0x411c20
  411b92:	sub    r10,0x2
  411b96:	movzx  r9d,WORD PTR [r10]
  411b9a:	cmp    r9w,0x2f
  411b9f:	je     0x411b82
  411ba1:	cmp    r9w,0x5c
  411ba6:	je     0x411b82
  411ba8:	cmp    WORD PTR [r12],0x0
  411bae:	jne    0x411c28
  411bb0:	lea    rdx,[rip+0x1dfeb]        # 0x42fba2
  411bb7:	xor    r8d,r8d
  411bba:	xor    ecx,ecx
  411bbc:	call   0x416100
  411bc1:	mov    rcx,QWORD PTR [rip+0x21e68]        # 0x433a30
  411bc8:	lea    r12,[rax+0x1]
  411bcc:	mov    rdx,r12
  411bcf:	call   0x416198
  411bd4:	lea    rdx,[rip+0x1dfc7]        # 0x42fba2
  411bdb:	mov    r8,r12
  411bde:	mov    rcx,rax
  411be1:	mov    rbx,rax
  411be4:	mov    QWORD PTR [rip+0x21e45],rax        # 0x433a30
  411beb:	call   0x416100
  411bf0:	mov    rdx,rsi
  411bf3:	mov    ecx,0x2
  411bf8:	call   0x416190
  411bfd:	mov    rcx,rsi
  411c00:	call   0x416220
  411c05:	mov    rax,rbx
  411c08:	mov    rsp,rdi
  411c0b:	lea    rsp,[rbp-0x58]
  411c0f:	pop    rbx
  411c10:	pop    rsi
  411c11:	pop    rdi
  411c12:	pop    r12
  411c14:	pop    r13
  411c16:	pop    rbp
  411c17:	ret    
  411c18:	nop    DWORD PTR [rax+rax*1+0x0]
  411c20:	mov    r9,r10
  411c23:	jmp    0x411af9
  411c28:	mov    r8,rax
  411c2b:	mov    rdx,r13
  411c2e:	mov    rcx,rbx
  411c31:	call   0x416100
  411c36:	cmp    rax,0xffffffffffffffff
  411c3a:	je     0x411c40
  411c3c:	mov    BYTE PTR [rbx+rax*1],0x0
  411c40:	xor    ecx,ecx
  411c42:	xor    r8d,r8d
  411c45:	mov    rdx,r13
  411c48:	mov    WORD PTR [r12],cx
  411c4d:	xor    ecx,ecx
  411c4f:	call   0x416100
  411c54:	lea    rdx,[rbx+rax*1]
  411c58:	cmp    rax,0xffffffffffffffff
  411c5c:	cmovne rbx,rdx
  411c60:	jmp    0x411bf0
  411c62:	movzx  r11d,WORD PTR [r9]
  411c66:	mov    r9,r10
  411c69:	jmp    0x411afe
  411c6e:	nop
  411c6f:	nop
  411c70:	push   r15
  411c72:	push   r14
  411c74:	push   r13
  411c76:	push   r12
  411c78:	push   rbp
  411c79:	push   rdi
  411c7a:	push   rsi
  411c7b:	push   rbx
  411c7c:	sub    rsp,0x28
  411c80:	test   rdx,rdx
  411c83:	mov    rsi,rcx
  411c86:	mov    r12,rdx
  411c89:	mov    edi,r8d
  411c8c:	je     0x411c92
  411c8e:	mov    QWORD PTR [r12],rcx
  411c92:	cmp    edi,0x24
  411c95:	ja     0x411d73
  411c9b:	cmp    edi,0x1
  411c9e:	jne    0x411ca9
  411ca0:	jmp    0x411d73
  411ca5:	add    rsi,0x1
  411ca9:	movsx  ecx,BYTE PTR [rsi]
  411cac:	mov    ebx,ecx
  411cae:	call   0x4161e8
  411cb3:	test   eax,eax
  411cb5:	jne    0x411ca5
  411cb7:	lea    edx,[rbx-0x2b]
  411cba:	mov    rcx,rsi
  411cbd:	mov    eax,ebx
  411cbf:	and    edx,0xfd
  411cc5:	jne    0x411ccf
  411cc7:	movzx  eax,BYTE PTR [rcx+0x1]
  411ccb:	add    rsi,0x1
  411ccf:	test   edi,edi
  411cd1:	jne    0x411e11
  411cd7:	cmp    al,0x30
  411cd9:	mov    dil,0xa
  411cdc:	je     0x411e62
  411ce2:	movsx  r15d,al
  411ce6:	lea    edx,[r15-0x30]
  411cea:	cmp    edx,0x9
  411ced:	ja     0x411de0
  411cf3:	movsx  ecx,al
  411cf6:	sub    ecx,0x30
  411cf9:	cmp    edi,ecx
  411cfb:	jle    0x411e90
  411d01:	mov    eax,ecx
  411d03:	shr    eax,0x1f
  411d06:	test   al,al
  411d08:	jne    0x411e90
  411d0e:	lea    r14,[rsi+0x1]
  411d12:	movsxd r15,ecx
  411d15:	xor    r13d,r13d
  411d18:	movsxd rsi,edi
  411d1b:	nop    DWORD PTR [rax+rax*1+0x0]
  411d20:	movsx  ebp,BYTE PTR [r14]
  411d24:	lea    r9d,[rbp-0x30]
  411d28:	cmp    r9d,0x9
  411d2c:	mov    ecx,r9d
  411d2f:	jbe    0x411d94
  411d31:	mov    ecx,ebp
  411d33:	call   0x4161e0
  411d38:	test   eax,eax
  411d3a:	lea    ecx,[rbp-0x37]
  411d3d:	jne    0x411d94
  411d3f:	mov    ecx,ebp
  411d41:	call   0x4161f8
  411d46:	test   eax,eax
  411d48:	jne    0x411d91
  411d4a:	test   r12,r12
  411d4d:	je     0x411d53
  411d4f:	mov    QWORD PTR [r12],r14
  411d53:	cmp    bl,0x2d
  411d56:	je     0x411e40
  411d5c:	test   r15,r15
  411d5f:	js     0x411eb0
  411d65:	test   r13d,r13d
  411d68:	jne    0x411eb0
  411d6e:	mov    rax,r15
  411d71:	jmp    0x411d80
  411d73:	call   0x4162d8
  411d78:	mov    DWORD PTR [rax],0x21
  411d7e:	xor    eax,eax
  411d80:	add    rsp,0x28
  411d84:	pop    rbx
  411d85:	pop    rsi
  411d86:	pop    rdi
  411d87:	pop    rbp
  411d88:	pop    r12
  411d8a:	pop    r13
  411d8c:	pop    r14
  411d8e:	pop    r15
  411d90:	ret    
  411d91:	lea    ecx,[rbp-0x57]
  411d94:	cmp    edi,ecx
  411d96:	jle    0x411d4a
  411d98:	test   ecx,ecx
  411d9a:	js     0x411d4a
  411d9c:	movabs rax,0x7fffffffffffffff
  411da6:	cqo    
  411da8:	idiv   rsi
  411dab:	add    rax,0x2
  411daf:	cmp    r15,rax
  411db2:	ja     0x411dd0
  411db4:	imul   r15,rsi
  411db8:	movsxd rcx,ecx
  411dbb:	add    r15,rcx
  411dbe:	add    r14,0x1
  411dc2:	jmp    0x411d20
  411dc7:	nop    WORD PTR [rax+rax*1+0x0]
  411dd0:	mov    r13d,0x1
  411dd6:	jmp    0x411dbe
  411dd8:	nop    DWORD PTR [rax+rax*1+0x0]
  411de0:	mov    ecx,r15d
  411de3:	call   0x4161e0
  411de8:	test   eax,eax
  411dea:	lea    ecx,[r15-0x37]
  411dee:	jne    0x411cf9
  411df4:	mov    ecx,r15d
  411df7:	call   0x4161f8
  411dfc:	mov    edx,eax
  411dfe:	xor    eax,eax
  411e00:	test   edx,edx
  411e02:	je     0x411d80
  411e08:	lea    ecx,[r15-0x57]
  411e0c:	jmp    0x411cf9
  411e11:	cmp    edi,0x10
  411e14:	jne    0x411ce2
  411e1a:	cmp    al,0x30
  411e1c:	jne    0x411ce2
  411e22:	movzx  eax,BYTE PTR [rsi+0x1]
  411e26:	and    eax,0xffffffdf
  411e29:	cmp    al,0x58
  411e2b:	je     0x411e75
  411e2d:	mov    eax,0x30
  411e32:	jmp    0x411cf3
  411e37:	nop    WORD PTR [rax+rax*1+0x0]
  411e40:	movabs rbx,0x8000000000000000
  411e4a:	cmp    r15,rbx
  411e4d:	jbe    0x411ea0
  411e4f:	call   0x4162d8
  411e54:	mov    DWORD PTR [rax],0x22
  411e5a:	mov    rax,rbx
  411e5d:	jmp    0x411d80
  411e62:	movzx  edx,BYTE PTR [rsi+0x1]
  411e66:	mov    dil,0x8
  411e69:	and    edx,0xffffffdf
  411e6c:	cmp    dl,0x58
  411e6f:	jne    0x411ce2
  411e75:	movzx  eax,BYTE PTR [rsi+0x2]
  411e79:	mov    edi,0x10
  411e7e:	add    rsi,0x2
  411e82:	jmp    0x411ce2
  411e87:	nop    WORD PTR [rax+rax*1+0x0]
  411e90:	xor    eax,eax
  411e92:	jmp    0x411d80
  411e97:	nop    WORD PTR [rax+rax*1+0x0]
  411ea0:	test   r13d,r13d
  411ea3:	jne    0x411e4f
  411ea5:	mov    rax,r15
  411ea8:	neg    rax
  411eab:	jmp    0x411d80
  411eb0:	call   0x4162d8
  411eb5:	mov    DWORD PTR [rax],0x22
  411ebb:	movabs rax,0x7fffffffffffffff
  411ec5:	jmp    0x411d80
  411eca:	nop
  411ecb:	nop
  411ecc:	nop
  411ecd:	nop
  411ece:	nop
  411ecf:	nop
  411ed0:	push   r15
  411ed2:	push   r14
  411ed4:	push   r13
  411ed6:	push   r12
  411ed8:	push   rbp
  411ed9:	push   rdi
  411eda:	push   rsi
  411edb:	push   rbx
  411edc:	sub    rsp,0xd8
  411ee3:	mov    rax,rdx
  411ee6:	mov    ebp,ecx
  411ee8:	mov    rsi,rdx
  411eeb:	shr    rax,0x3f
  411eef:	test   al,al
  411ef1:	jne    0x412130
  411ef7:	cmp    ecx,0xffffffff
  411efa:	je     0x412130
  411f00:	call   0x4162c8
  411f05:	cmp    rax,0xffffffffffffffff
  411f09:	mov    rdi,rax
  411f0c:	je     0x412144
  411f12:	mov    rcx,rax
  411f15:	call   QWORD PTR [rip+0x2379d]        # 0x4356b8
  411f1b:	cmp    eax,0x1
  411f1e:	jne    0x412144
  411f24:	mov    ecx,ebp
  411f26:	call   0x416298
  411f2b:	cmp    rax,0xffffffffffffffff
  411f2f:	mov    QWORD PTR [rsp+0x58],rax
  411f34:	je     0x412130
  411f3a:	lea    rdx,[rsp+0x80]
  411f42:	mov    rcx,rdi
  411f45:	call   QWORD PTR [rip+0x23765]        # 0x4356b0
  411f4b:	test   eax,eax
  411f4d:	je     0x412178
  411f53:	cmp    rsi,QWORD PTR [rsp+0x80]
  411f5b:	lea    rax,[rsp+0x90]
  411f63:	mov    QWORD PTR [rsp+0x50],rax
  411f68:	ja     0x412000
  411f6e:	mov    rax,QWORD PTR [rsp+0x50]
  411f73:	xor    r9d,r9d
  411f76:	mov    QWORD PTR [rsp+0x90],rsi
  411f7e:	mov    edx,esi
  411f80:	mov    rcx,rdi
  411f83:	lea    r8,[rax+0x4]
  411f87:	call   QWORD PTR [rip+0x237ab]        # 0x435738
  411f8d:	cmp    eax,0xffffffff
  411f90:	mov    ebx,eax
  411f92:	je     0x411fd4
  411f94:	mov    rcx,rdi
  411f97:	call   QWORD PTR [rip+0x23793]        # 0x435730
  411f9d:	test   eax,eax
  411f9f:	je     0x412130
  411fa5:	mov    rdx,QWORD PTR [rsp+0x58]
  411faa:	xor    r8d,r8d
  411fad:	mov    ecx,ebp
  411faf:	call   0x4162a8
  411fb4:	cmp    rax,0xffffffffffffffff
  411fb8:	je     0x412130
  411fbe:	xor    eax,eax
  411fc0:	add    rsp,0xd8
  411fc7:	pop    rbx
  411fc8:	pop    rsi
  411fc9:	pop    rdi
  411fca:	pop    rbp
  411fcb:	pop    r12
  411fcd:	pop    r13
  411fcf:	pop    r14
  411fd1:	pop    r15
  411fd3:	ret    
  411fd4:	cmp    DWORD PTR [rsp+0x90],0xffffffff
  411fdc:	je     0x411f94
  411fde:	call   QWORD PTR [rip+0x236dc]        # 0x4356c0
  411fe4:	cmp    eax,0x83
  411fe9:	jne    0x412130
  411fef:	mov    ecx,0x1b
  411ff4:	call   0x4143a0
  411ff9:	mov    eax,ebx
  411ffb:	jmp    0x411fc0
  411ffd:	nop    DWORD PTR [rax]
  412000:	mov    rdx,rax
  412003:	mov    rcx,rdi
  412006:	call   QWORD PTR [rip+0x2369c]        # 0x4356a8
  41200c:	test   eax,eax
  41200e:	je     0x412184
  412014:	mov    edx,0x2
  412019:	mov    ecx,0x33
  41201e:	call   0x416270
  412023:	mov    edx,0x2
  412028:	mov    ecx,0x106
  41202d:	mov    rbx,rax
  412030:	call   0x416270
  412035:	test   rax,rax
  412038:	mov    r12,rax
  41203b:	je     0x412178
  412041:	test   rbx,rbx
  412044:	je     0x412178
  41204a:	mov    edx,0x32
  41204f:	mov    rcx,rbx
  412052:	call   QWORD PTR [rip+0x23610]        # 0x435668
  412058:	mov    r13,rax
  41205b:	lea    rax,[rsp+0x6c]
  412060:	mov    r14,QWORD PTR [rip+0x23681]        # 0x4356e8
  412067:	mov    r15,QWORD PTR [rip+0x23602]        # 0x435670
  41206e:	mov    QWORD PTR [rsp+0x48],rax
  412073:	jmp    0x41208c
  412075:	mov    r8d,0x32
  41207b:	mov    rdx,rbx
  41207e:	mov    rcx,r13
  412081:	call   r15
  412084:	test   eax,eax
  412086:	je     0x412160
  41208c:	mov    DWORD PTR [rsp+0x38],0x0
  412094:	mov    QWORD PTR [rsp+0x30],0x0
  41209d:	mov    r8d,0x105
  4120a3:	mov    QWORD PTR [rsp+0x28],0x0
  4120ac:	mov    QWORD PTR [rsp+0x20],0x0
  4120b5:	mov    rdx,r12
  4120b8:	mov    r9,QWORD PTR [rsp+0x48]
  4120bd:	mov    rcx,rbx
  4120c0:	call   r14
  4120c3:	mov    eax,DWORD PTR [rsp+0x6c]
  4120c7:	cmp    DWORD PTR [rsp+0xac],eax
  4120ce:	jne    0x412075
  4120d0:	mov    rcx,r13
  4120d3:	call   QWORD PTR [rip+0x2359f]        # 0x435678
  4120d9:	mov    rcx,r12
  4120dc:	call   0x416220
  4120e1:	xor    r9d,r9d
  4120e4:	xor    r8d,r8d
  4120e7:	lea    rdx,[rsp+0x70]
  4120ec:	mov    rcx,rbx
  4120ef:	call   QWORD PTR [rip+0x235a3]        # 0x435698
  4120f5:	mov    rcx,rbx
  4120f8:	mov    r12d,eax
  4120fb:	call   0x416220
  412100:	test   r12d,r12d
  412103:	je     0x41211b
  412105:	mov    rax,rsi
  412108:	sub    rax,QWORD PTR [rsp+0x80]
  412110:	cmp    rax,QWORD PTR [rsp+0x70]
  412115:	jbe    0x411f6e
  41211b:	mov    ecx,0x1b
  412120:	call   0x4143a0
  412125:	mov    eax,0xffffffff
  41212a:	jmp    0x411fc0
  41212f:	nop
  412130:	mov    ecx,0x16
  412135:	call   0x4143a0
  41213a:	mov    eax,0xffffffff
  41213f:	jmp    0x411fc0
  412144:	mov    ecx,0x9
  412149:	call   0x4143a0
  41214e:	mov    eax,0xffffffff
  412153:	jmp    0x411fc0
  412158:	nop    DWORD PTR [rax+rax*1+0x0]
  412160:	mov    rcx,r13
  412163:	call   QWORD PTR [rip+0x2350f]        # 0x435678
  412169:	mov    rcx,rbx
  41216c:	xor    ebx,ebx
  41216e:	call   0x416220
  412173:	jmp    0x4120d9
  412178:	mov    ecx,0x9
  41217d:	call   0x4143a0
  412182:	jmp    0x412125
  412184:	mov    ecx,0x16
  412189:	call   0x4143a0
  41218e:	jmp    0x412125
  412190:	push   rsi
  412191:	push   rbx
  412192:	sub    rsp,0x28
  412196:	movsxd rax,DWORD PTR [rcx+0x14]
  41219a:	lea    rdx,[rcx+0x18]
  41219e:	mov    rbx,rcx
  4121a1:	lea    r9,[rdx+rax*4]
  4121a5:	mov    rcx,rax
  4121a8:	jmp    0x4121c0
  4121aa:	nop    WORD PTR [rax+rax*1+0x0]
  4121b0:	add    rdx,0x4
  4121b4:	mov    DWORD PTR [rdx-0x4],0x0
  4121bb:	cmp    r9,rdx
  4121be:	jbe    0x4121e0
  4121c0:	mov    r8d,DWORD PTR [rdx]
  4121c3:	cmp    r8d,0xffffffff
  4121c7:	je     0x4121b0
  4121c9:	add    r8d,0x1
  4121cd:	mov    rax,rbx
  4121d0:	mov    DWORD PTR [rdx],r8d
  4121d3:	add    rsp,0x28
  4121d7:	pop    rbx
  4121d8:	pop    rsi
  4121d9:	ret    
  4121da:	nop    WORD PTR [rax+rax*1+0x0]
  4121e0:	cmp    ecx,DWORD PTR [rbx+0xc]
  4121e3:	jge    0x412200
  4121e5:	add    ecx,0x1
  4121e8:	mov    DWORD PTR [rbx+0x14],ecx
  4121eb:	mov    DWORD PTR [rbx+rax*4+0x18],0x1
  4121f3:	mov    rax,rbx
  4121f6:	add    rsp,0x28
  4121fa:	pop    rbx
  4121fb:	pop    rsi
  4121fc:	ret    
  4121fd:	nop    DWORD PTR [rax]
  412200:	mov    eax,DWORD PTR [rbx+0x8]
  412203:	lea    ecx,[rax+0x1]
  412206:	call   0x415370
  41220b:	mov    rsi,rax
  41220e:	lea    rcx,[rax+0x10]
  412212:	movsxd rax,DWORD PTR [rbx+0x14]
  412216:	lea    rdx,[rbx+0x10]
  41221a:	lea    r8,[rax*4+0x8]
  412222:	call   0x4161b8
  412227:	mov    rcx,rbx
  41222a:	mov    rbx,rsi
  41222d:	call   0x415480
  412232:	movsxd rax,DWORD PTR [rsi+0x14]
  412236:	mov    rcx,rax
  412239:	jmp    0x4121e5
  41223b:	nop    DWORD PTR [rax+rax*1+0x0]
  412240:	push   r15
  412242:	push   r14
  412244:	push   r13
  412246:	push   r12
  412248:	push   rbp
  412249:	push   rdi
  41224a:	push   rsi
  41224b:	push   rbx
  41224c:	sub    rsp,0x48
  412250:	mov    rdi,rdx
  412253:	mov    r12,r8
  412256:	lea    rdx,[rsp+0x3c]
  41225b:	lea    r8,[rsp+0x38]
  412260:	movsd  xmm0,QWORD PTR [rcx]
  412264:	mov    r13,r9
  412267:	call   0x415c50
  41226c:	mov    r10d,DWORD PTR [rsp+0x38]
  412271:	mov    esi,DWORD PTR [rdi]
  412273:	mov    rbx,rax
  412276:	mov    edx,DWORD PTR [rsp+0x3c]
  41227a:	sub    r10d,esi
  41227d:	add    edx,r10d
  412280:	test   r10d,r10d
  412283:	mov    DWORD PTR [rsp+0x38],r10d
  412288:	mov    DWORD PTR [rsp+0x3c],edx
  41228c:	jle    0x412450
  412292:	cmp    esi,0x35
  412295:	je     0x412480
  41229b:	cmp    DWORD PTR [rsp+0xb8],0x1
  4122a3:	je     0x412354
  4122a9:	cmp    DWORD PTR [rsp+0xb8],0x2
  4122b1:	je     0x4122e0
  4122b3:	mov    eax,r10d
  4122b6:	sub    eax,0x1
  4122b9:	jne    0x412550
  4122bf:	mov    ecx,DWORD PTR [rsp+0xb0]
  4122c6:	xor    r15d,r15d
  4122c9:	test   ecx,ecx
  4122cb:	je     0x4123d7
  4122d1:	test   BYTE PTR [rbx+0x18],0x2
  4122d5:	je     0x41249e
  4122db:	nop    DWORD PTR [rax+rax*1+0x0]
  4122e0:	mov    edx,r10d
  4122e3:	mov    rcx,rbx
  4122e6:	call   0x416010
  4122eb:	mov    edx,DWORD PTR [rsp+0x38]
  4122ef:	mov    rcx,rbx
  4122f2:	mov    r14d,eax
  4122f5:	call   0x414cc0
  4122fa:	mov    rcx,rbx
  4122fd:	call   0x412190
  412302:	mov    edx,esi
  412304:	mov    rbx,rax
  412307:	and    edx,0x1f
  41230a:	jne    0x412540
  412310:	mov    eax,DWORD PTR [rbx+0x14]
  412313:	sub    eax,0x1
  412316:	cdqe   
  412318:	bsr    eax,DWORD PTR [rbx+rax*4+0x18]
  41231d:	xor    eax,0x1f
  412320:	cmp    edx,eax
  412322:	je     0x4125d0
  412328:	test   r14d,r14d
  41232b:	jne    0x412335
  41232d:	mov    r14d,DWORD PTR [rbx+0x18]
  412331:	and    r14d,0x1
  412335:	mov    edx,0x1
  41233a:	mov    rcx,rbx
  41233d:	mov    ebp,0x20
  412342:	call   0x414cc0
  412347:	mov    eax,DWORD PTR [rsp+0x3c]
  41234b:	lea    edx,[rax+0x1]
  41234e:	mov    DWORD PTR [rsp+0x3c],edx
  412352:	jmp    0x41237f
  412354:	mov    edx,r10d
  412357:	mov    rcx,rax
  41235a:	call   0x416010
  41235f:	test   eax,eax
  412361:	mov    r14d,eax
  412364:	jne    0x4123f3
  41236a:	mov    edx,DWORD PTR [rsp+0x38]
  41236e:	mov    rcx,rbx
  412371:	xor    r14d,r14d
  412374:	xor    ebp,ebp
  412376:	call   0x414cc0
  41237b:	mov    edx,DWORD PTR [rsp+0x3c]
  41237f:	mov    eax,DWORD PTR [rdi+0x4]
  412382:	cmp    eax,edx
  412384:	jle    0x412410
  41238a:	mov    r8d,eax
  41238d:	mov    DWORD PTR [rsp+0x3c],eax
  412391:	sub    r8d,edx
  412394:	cmp    esi,r8d
  412397:	jge    0x4124d0
  41239d:	mov    rdi,QWORD PTR [rsp+0xc0]
  4123a5:	mov    DWORD PTR [rbx+0x14],0x0
  4123ac:	mov    edx,eax
  4123ae:	xor    ebp,ebp
  4123b0:	mov    DWORD PTR [rdi],0x50
  4123b6:	mov    DWORD PTR [r12],edx
  4123ba:	mov    r8,rbx
  4123bd:	mov    edx,esi
  4123bf:	mov    rcx,r13
  4123c2:	mov    r15d,0x1
  4123c8:	call   0x415fa0
  4123cd:	mov    rax,QWORD PTR [rsp+0xc0]
  4123d5:	or     DWORD PTR [rax],ebp
  4123d7:	mov    rcx,rbx
  4123da:	call   0x415480
  4123df:	mov    eax,r15d
  4123e2:	add    rsp,0x48
  4123e6:	pop    rbx
  4123e7:	pop    rsi
  4123e8:	pop    rdi
  4123e9:	pop    rbp
  4123ea:	pop    r12
  4123ec:	pop    r13
  4123ee:	pop    r14
  4123f0:	pop    r15
  4123f2:	ret    
  4123f3:	mov    edx,DWORD PTR [rsp+0x38]
  4123f7:	mov    rcx,rbx
  4123fa:	mov    ebp,0x10
  4123ff:	call   0x414cc0
  412404:	jmp    0x41237b
  412409:	nop    DWORD PTR [rax+0x0]
  412410:	mov    eax,DWORD PTR [rdi+0x8]
  412413:	cmp    eax,edx
  412415:	jge    0x4123b6
  412417:	add    eax,0x1
  41241a:	xor    ebp,ebp
  41241c:	mov    DWORD PTR [rsp+0x3c],eax
  412420:	mov    rax,QWORD PTR [rsp+0xc0]
  412428:	mov    DWORD PTR [rax],0xa3
  41242e:	call   0x4162d8
  412433:	mov    DWORD PTR [rax],0x22
  412439:	mov    DWORD PTR [rbx+0x14],0x0
  412440:	mov    edx,DWORD PTR [rsp+0x3c]
  412444:	jmp    0x4123b6
  412449:	nop    DWORD PTR [rax+0x0]
  412450:	mov    r9d,DWORD PTR [rsp+0xb0]
  412458:	xor    r15d,r15d
  41245b:	test   r9d,r9d
  41245e:	je     0x4123d7
  412464:	test   r10d,r10d
  412467:	jne    0x4125b0
  41246d:	xor    r14d,r14d
  412470:	xor    ebp,ebp
  412472:	jmp    0x41237f
  412477:	nop    WORD PTR [rax+rax*1+0x0]
  412480:	mov    r8d,DWORD PTR [rsp+0xb0]
  412488:	xor    r15d,r15d
  41248b:	test   r8d,r8d
  41248e:	je     0x4123d7
  412494:	cmp    DWORD PTR [rdi+0xc],0x1
  412498:	jne    0x4123d7
  41249e:	mov    edx,r10d
  4124a1:	mov    rcx,rbx
  4124a4:	call   0x416010
  4124a9:	test   eax,eax
  4124ab:	mov    r14d,eax
  4124ae:	je     0x41236a
  4124b4:	mov    edx,DWORD PTR [rsp+0x38]
  4124b8:	mov    rcx,rbx
  4124bb:	mov    ebp,0x10
  4124c0:	call   0x414cc0
  4124c5:	mov    edx,DWORD PTR [rsp+0x3c]
  4124c9:	jmp    0x41237f
  4124ce:	xchg   ax,ax
  4124d0:	mov    edx,DWORD PTR [rdi+0x10]
  4124d3:	test   edx,edx
  4124d5:	jne    0x41239d
  4124db:	lea    edi,[r8-0x1]
  4124df:	test   r14d,r14d
  4124e2:	sete   al
  4124e5:	test   edi,edi
  4124e7:	jle    0x41258c
  4124ed:	test   al,al
  4124ef:	jne    0x412570
  4124f1:	mov    ecx,edi
  4124f3:	sar    edi,0x5
  4124f6:	mov    eax,0x1
  4124fb:	movsxd rdi,edi
  4124fe:	shl    eax,cl
  412500:	mov    edx,r8d
  412503:	and    eax,DWORD PTR [rbx+rdi*4+0x18]
  412507:	mov    rcx,rbx
  41250a:	mov    edi,eax
  41250c:	call   0x414cc0
  412511:	mov    rax,QWORD PTR [rsp+0xc0]
  412519:	test   edi,edi
  41251b:	mov    DWORD PTR [rax],0x2
  412521:	jne    0x4125e0
  412527:	test   r14d,r14d
  41252a:	mov    edx,DWORD PTR [rsp+0x3c]
  41252e:	je     0x4123b6
  412534:	mov    ebp,0x50
  412539:	jmp    0x4123b6
  41253e:	xchg   ax,ax
  412540:	mov    eax,0x20
  412545:	sub    eax,edx
  412547:	mov    edx,eax
  412549:	jmp    0x412310
  41254e:	xchg   ax,ax
  412550:	mov    edx,eax
  412552:	sar    edx,0x5
  412555:	movsxd rdx,edx
  412558:	mov    edx,DWORD PTR [rbx+rdx*4+0x18]
  41255c:	bt     edx,eax
  41255f:	jb     0x4122e0
  412565:	jmp    0x41249e
  41256a:	nop    WORD PTR [rax+rax*1+0x0]
  412570:	mov    edx,edi
  412572:	mov    rcx,rbx
  412575:	mov    DWORD PTR [rsp+0x2c],r8d
  41257a:	call   0x416010
  41257f:	mov    r8d,DWORD PTR [rsp+0x2c]
  412584:	test   eax,eax
  412586:	mov    r14d,eax
  412589:	sete   al
  41258c:	test   al,al
  41258e:	je     0x4124f1
  412594:	mov    eax,DWORD PTR [rsp+0xb0]
  41259b:	xor    r15d,r15d
  41259e:	test   eax,eax
  4125a0:	je     0x4123d7
  4125a6:	jmp    0x4124f1
  4125ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4125b0:	mov    edx,r10d
  4125b3:	mov    rcx,rbx
  4125b6:	neg    edx
  4125b8:	call   0x415880
  4125bd:	mov    edx,DWORD PTR [rsp+0x3c]
  4125c1:	mov    rbx,rax
  4125c4:	jmp    0x41246d
  4125c9:	nop    DWORD PTR [rax+0x0]
  4125d0:	mov    edx,DWORD PTR [rsp+0x3c]
  4125d4:	mov    ebp,0x20
  4125d9:	jmp    0x41237f
  4125de:	xchg   ax,ax
  4125e0:	mov    rcx,rbx
  4125e3:	mov    ebp,0x60
  4125e8:	call   0x412190
  4125ed:	mov    edx,DWORD PTR [rsp+0x3c]
  4125f1:	mov    rbx,rax
  4125f4:	jmp    0x4123b6
  4125f9:	nop    DWORD PTR [rax+0x0]
  412600:	movsxd rdx,DWORD PTR [rcx+0x14]
  412604:	lea    rax,[rcx+0x18]
  412608:	lea    rcx,[rax+rdx*4]
  41260c:	jmp    0x412620
  41260e:	xchg   ax,ax
  412610:	add    rax,0x4
  412614:	mov    DWORD PTR [rax-0x4],0xffffffff
  41261b:	cmp    rcx,rax
  41261e:	jbe    0x412630
  412620:	mov    edx,DWORD PTR [rax]
  412622:	test   edx,edx
  412624:	je     0x412610
  412626:	sub    edx,0x1
  412629:	mov    DWORD PTR [rax],edx
  41262b:	ret    
  41262c:	nop    DWORD PTR [rax+0x0]
  412630:	repz ret 
  412632:	nop    DWORD PTR [rax+0x0]
  412636:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412640:	push   rbx
  412641:	sub    rsp,0x30
  412645:	lea    ebx,[rdx+0x1f]
  412648:	mov    rax,rcx
  41264b:	sar    ebx,0x5
  41264e:	cmp    ebx,DWORD PTR [rcx+0x8]
  412651:	jg     0x4126d0
  412653:	mov    r9d,edx
  412656:	sar    r9d,0x5
  41265a:	and    edx,0x1f
  41265d:	je     0x4126b0
  41265f:	add    r9d,0x1
  412663:	lea    r8,[rax+0x18]
  412667:	mov    DWORD PTR [rax+0x14],r9d
  41266b:	movsxd r9,r9d
  41266e:	lea    r9,[r8+r9*4]
  412672:	cmp    r8,r9
  412675:	jae    0x412695
  412677:	nop    WORD PTR [rax+rax*1+0x0]
  412680:	add    r8,0x4
  412684:	mov    DWORD PTR [r8-0x4],0xffffffff
  41268c:	cmp    r8,r9
  41268f:	jb     0x412680
  412691:	test   edx,edx
  412693:	je     0x4126a0
  412695:	mov    ecx,0x20
  41269a:	sub    ecx,edx
  41269c:	shr    DWORD PTR [r8-0x4],cl
  4126a0:	add    rsp,0x30
  4126a4:	pop    rbx
  4126a5:	ret    
  4126a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4126b0:	lea    r8,[rax+0x18]
  4126b4:	mov    DWORD PTR [rax+0x14],r9d
  4126b8:	movsxd r9,r9d
  4126bb:	lea    r9,[r8+r9*4]
  4126bf:	cmp    r8,r9
  4126c2:	jb     0x412680
  4126c4:	jmp    0x4126a0
  4126c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4126d0:	mov    DWORD PTR [rsp+0x2c],edx
  4126d4:	call   0x415480
  4126d9:	mov    ecx,ebx
  4126db:	call   0x415370
  4126e0:	mov    edx,DWORD PTR [rsp+0x2c]
  4126e4:	jmp    0x412653
  4126e9:	nop    DWORD PTR [rax+0x0]
  4126f0:	push   r15
  4126f2:	push   r14
  4126f4:	push   r13
  4126f6:	push   r12
  4126f8:	push   rbp
  4126f9:	push   rdi
  4126fa:	push   rsi
  4126fb:	push   rbx
  4126fc:	sub    rsp,0x138
  412703:	movaps XMMWORD PTR [rsp+0xd0],xmm6
  41270b:	movaps XMMWORD PTR [rsp+0xe0],xmm7
  412713:	movaps XMMWORD PTR [rsp+0xf0],xmm8
  41271c:	movaps XMMWORD PTR [rsp+0x100],xmm9
  412725:	movaps XMMWORD PTR [rsp+0x110],xmm10
  41272e:	movaps XMMWORD PTR [rsp+0x120],xmm11
  412737:	mov    rdi,rcx
  41273a:	mov    QWORD PTR [rsp+0x190],r8
  412742:	mov    QWORD PTR [rsp+0x188],rdx
  41274a:	mov    QWORD PTR [rsp+0x198],r9
  412752:	call   0x4161d8
  412757:	mov    rbp,QWORD PTR [rax]
  41275a:	mov    rcx,rbp
  41275d:	call   0x416150
  412762:	mov    r14,rax
  412765:	mov    rax,QWORD PTR [rsp+0x190]
  41276d:	mov    DWORD PTR [rsp+0xa4],0x0
  412778:	mov    QWORD PTR [rsp+0xb0],0x0
  412784:	mov    QWORD PTR [rsp+0xc8],0x0
  412790:	lea    rcx,[rip+0x1d435]        # 0x42fbcc
  412797:	mov    QWORD PTR [rsp+0xc0],rdi
  41279f:	mov    eax,DWORD PTR [rax]
  4127a1:	mov    DWORD PTR [rsp+0x40],eax
  4127a5:	mov    rax,rdi
  4127a8:	movzx  r8d,BYTE PTR [rax]
  4127ac:	cmp    r8b,0x2d
  4127b0:	ja     0x412960
  4127b6:	movzx  edx,r8b
  4127ba:	movsxd rdx,DWORD PTR [rcx+rdx*4]
  4127be:	add    rdx,rcx
  4127c1:	jmp    rdx
  4127c3:	mov    DWORD PTR [rsp+0xa4],0x6
  4127ce:	mov    QWORD PTR [rsp+0xc0],rdi
  4127d6:	xor    r8d,r8d
  4127d9:	mov    DWORD PTR [rsp+0x58],0x0
  4127e1:	cmp    QWORD PTR [rsp+0x188],0x0
  4127ea:	je     0x4127ff
  4127ec:	mov    rax,QWORD PTR [rsp+0xc0]
  4127f4:	mov    rsi,QWORD PTR [rsp+0x188]
  4127fc:	mov    QWORD PTR [rsi],rax
  4127ff:	mov    eax,DWORD PTR [rsp+0x58]
  412803:	test   eax,eax
  412805:	jne    0x412880
  412807:	test   r8,r8
  41280a:	je     0x41282a
  41280c:	mov    rcx,QWORD PTR [rsp+0x1a0]
  412814:	mov    edx,DWORD PTR [rsp+0x40]
  412818:	call   0x415fa0
  41281d:	mov    rcx,QWORD PTR [rsp+0xc8]
  412825:	call   0x415480
  41282a:	mov    eax,DWORD PTR [rsp+0xa4]
  412831:	movaps xmm6,XMMWORD PTR [rsp+0xd0]
  412839:	movaps xmm7,XMMWORD PTR [rsp+0xe0]
  412841:	movaps xmm8,XMMWORD PTR [rsp+0xf0]
  41284a:	movaps xmm9,XMMWORD PTR [rsp+0x100]
  412853:	movaps xmm10,XMMWORD PTR [rsp+0x110]
  41285c:	movaps xmm11,XMMWORD PTR [rsp+0x120]
  412865:	add    rsp,0x138
  41286c:	pop    rbx
  41286d:	pop    rsi
  41286e:	pop    rdi
  41286f:	pop    rbp
  412870:	pop    r12
  412872:	pop    r13
  412874:	pop    r14
  412876:	pop    r15
  412878:	ret    
  412879:	nop    DWORD PTR [rax+0x0]
  412880:	or     DWORD PTR [rsp+0xa4],0x8
  412888:	jmp    0x412807
  41288d:	nop    DWORD PTR [rax]
  412890:	mov    rdx,rax
  412893:	mov    DWORD PTR [rsp+0x58],0x0
  41289b:	add    rax,0x1
  41289f:	mov    QWORD PTR [rsp+0xc0],rax
  4128a7:	movzx  r8d,BYTE PTR [rdx+0x1]
  4128ac:	test   r8b,r8b
  4128af:	je     0x4127c3
  4128b5:	xor    r12d,r12d
  4128b8:	cmp    r8b,0x30
  4128bc:	mov    r15,rax
  4128bf:	je     0x412978
  4128c5:	mov    rax,QWORD PTR [rsp+0x190]
  4128cd:	mov    eax,DWORD PTR [rax+0x10]
  4128d0:	mov    DWORD PTR [rsp+0x84],eax
  4128d7:	movsx  eax,r8b
  4128db:	lea    edx,[rax-0x30]
  4128de:	cmp    edx,0x9
  4128e1:	ja     0x4129d3
  4128e7:	lea    rcx,[r15+0x1]
  4128eb:	xor    edx,edx
  4128ed:	xor    esi,esi
  4128ef:	xor    ebx,ebx
  4128f1:	jmp    0x412925
  4128f3:	lea    eax,[rsi+rsi*4]
  4128f6:	movsx  r8d,r8b
  4128fa:	lea    esi,[r8+rax*2-0x30]
  4128ff:	mov    QWORD PTR [rsp+0xc0],rcx
  412907:	movsx  eax,BYTE PTR [rcx]
  41290a:	add    ebx,0x1
  41290d:	mov    r9,rcx
  412910:	lea    rcx,[rcx+0x1]
  412914:	lea    r10d,[rax-0x30]
  412918:	mov    r8d,eax
  41291b:	cmp    r10d,0x9
  41291f:	ja     0x4129e0
  412925:	cmp    ebx,0x8
  412928:	jle    0x4128f3
  41292a:	cmp    ebx,0xf
  41292d:	jg     0x4128ff
  41292f:	lea    eax,[rdx+rdx*4]
  412932:	movsx  r8d,r8b
  412936:	lea    edx,[r8+rax*2-0x30]
  41293b:	jmp    0x4128ff
  41293d:	nop    DWORD PTR [rax]
  412940:	add    rax,0x1
  412944:	mov    QWORD PTR [rsp+0xc0],rax
  41294c:	movzx  r8d,BYTE PTR [rax]
  412950:	cmp    r8b,0x2d
  412954:	jbe    0x4127b6
  41295a:	nop    WORD PTR [rax+rax*1+0x0]
  412960:	xor    r12d,r12d
  412963:	cmp    r8b,0x30
  412967:	mov    DWORD PTR [rsp+0x58],0x0
  41296f:	mov    r15,rax
  412972:	jne    0x4128c5
  412978:	movzx  edx,BYTE PTR [rax+0x1]
  41297c:	cmp    dl,0x58
  41297f:	je     0x413b3f
  412985:	add    rax,0x1
  412989:	cmp    dl,0x78
  41298c:	je     0x413b3f
  412992:	mov    r15,rax
  412995:	mov    QWORD PTR [rsp+0xc0],rax
  41299d:	add    rax,0x1
  4129a1:	movzx  edx,BYTE PTR [rax-0x1]
  4129a5:	cmp    dl,0x30
  4129a8:	je     0x412992
  4129aa:	xor    r8d,r8d
  4129ad:	test   dl,dl
  4129af:	je     0x4127e1
  4129b5:	mov    r8d,edx
  4129b8:	mov    r12d,0x1
  4129be:	jmp    0x4128c5
  4129c3:	mov    rdx,rax
  4129c6:	mov    DWORD PTR [rsp+0x58],0x1
  4129ce:	jmp    0x41289b
  4129d3:	mov    r9,r15
  4129d6:	xor    edx,edx
  4129d8:	xor    esi,esi
  4129da:	xor    ebx,ebx
  4129dc:	nop    DWORD PTR [rax+0x0]
  4129e0:	movsx  ecx,BYTE PTR [rbp+0x0]
  4129e4:	cmp    ecx,eax
  4129e6:	je     0x412de4
  4129ec:	mov    ebp,ebx
  4129ee:	xor    ecx,ecx
  4129f0:	xor    r13d,r13d
  4129f3:	xor    r11d,r11d
  4129f6:	mov    r8d,eax
  4129f9:	and    r8d,0xffffffdf
  4129fd:	cmp    r8d,0x45
  412a01:	je     0x412b00
  412a07:	xor    r8d,r8d
  412a0a:	test   ebp,ebp
  412a0c:	jne    0x412c75
  412a12:	or     ecx,r12d
  412a15:	jne    0x412c68
  412a1b:	test   r11d,r11d
  412a1e:	jne    0x412c33
  412a24:	cmp    eax,0x4e
  412a27:	je     0x412a41
  412a29:	jle    0x412c2a
  412a2f:	cmp    eax,0x69
  412a32:	je     0x413dca
  412a38:	cmp    eax,0x6e
  412a3b:	jne    0x412c33
  412a41:	lea    rbx,[rsp+0xc0]
  412a49:	lea    rdx,[rip+0x1d179]        # 0x42fbc9
  412a50:	mov    rcx,rbx
  412a53:	call   0x415f50
  412a58:	test   eax,eax
  412a5a:	je     0x412c33
  412a60:	mov    rax,QWORD PTR [rsp+0x190]
  412a68:	mov    rsi,QWORD PTR [rsp+0x198]
  412a70:	xor    ebp,ebp
  412a72:	mov    rdx,QWORD PTR [rsp+0xc0]
  412a7a:	mov    DWORD PTR [rsp+0xa4],0x4
  412a85:	mov    eax,DWORD PTR [rax+0x8]
  412a88:	mov    DWORD PTR [rsp+0x44],eax
  412a8c:	add    eax,0x1
  412a8f:	mov    DWORD PTR [rsi],eax
  412a91:	cmp    BYTE PTR [rdx],0x28
  412a94:	je     0x4141a6
  412a9a:	nop    WORD PTR [rax+rax*1+0x0]
  412aa0:	mov    rsi,QWORD PTR [rsp+0x198]
  412aa8:	mov    DWORD PTR [rsi],eax
  412aaa:	mov    r8,QWORD PTR [rsp+0xc8]
  412ab2:	test   ebp,ebp
  412ab4:	je     0x4127e1
  412aba:	mov    r9d,DWORD PTR [rsp+0x84]
  412ac2:	test   r9d,r9d
  412ac5:	jne    0x4131f4
  412acb:	mov    eax,DWORD PTR [rsp+0xa4]
  412ad2:	mov    ecx,DWORD PTR [r8+0x14]
  412ad6:	xor    edx,edx
  412ad8:	and    eax,0xfffffff8
  412adb:	test   ecx,ecx
  412add:	setg   dl
  412ae0:	add    edx,edx
  412ae2:	or     eax,edx
  412ae4:	test   al,0x30
  412ae6:	jne    0x412c53
  412aec:	mov    DWORD PTR [rsp+0xa4],eax
  412af3:	jmp    0x4127e1
  412af8:	nop    DWORD PTR [rax+rax*1+0x0]
  412b00:	mov    eax,ebp
  412b02:	or     eax,ecx
  412b04:	or     eax,r12d
  412b07:	je     0x412c33
  412b0d:	mov    rdi,QWORD PTR [rsp+0xc0]
  412b15:	lea    rax,[rdi+0x1]
  412b19:	mov    QWORD PTR [rsp+0xc0],rax
  412b21:	movsx  eax,BYTE PTR [rdi+0x1]
  412b25:	cmp    al,0x2b
  412b27:	je     0x413ce8
  412b2d:	cmp    al,0x2d
  412b2f:	je     0x4130f1
  412b35:	mov    DWORD PTR [rsp+0x44],0x0
  412b3d:	lea    r8d,[rax-0x30]
  412b41:	cmp    r8d,0x9
  412b45:	ja     0x413220
  412b4b:	cmp    eax,0x30
  412b4e:	jne    0x412b75
  412b50:	mov    rax,QWORD PTR [rsp+0xc0]
  412b58:	lea    r8,[rax+0x1]
  412b5c:	nop    DWORD PTR [rax+0x0]
  412b60:	mov    QWORD PTR [rsp+0xc0],r8
  412b68:	movsx  eax,BYTE PTR [r8]
  412b6c:	add    r8,0x1
  412b70:	cmp    eax,0x30
  412b73:	je     0x412b60
  412b75:	lea    r9d,[rax-0x31]
  412b79:	xor    r8d,r8d
  412b7c:	cmp    r9d,0x8
  412b80:	ja     0x412a0a
  412b86:	lea    r9d,[rax-0x30]
  412b8a:	mov    rax,QWORD PTR [rsp+0xc0]
  412b92:	lea    r10,[rax+0x1]
  412b96:	mov    QWORD PTR [rsp+0x50],rax
  412b9b:	mov    QWORD PTR [rsp+0xc0],r10
  412ba3:	mov    QWORD PTR [rsp+0x48],r10
  412ba8:	mov    r10,rax
  412bab:	movsx  eax,BYTE PTR [rax+0x1]
  412baf:	lea    r8d,[rax-0x30]
  412bb3:	cmp    r8d,0x9
  412bb7:	ja     0x412bf3
  412bb9:	lea    r8,[r10+0x2]
  412bbd:	mov    DWORD PTR [rsp+0x5c],r11d
  412bc2:	lea    r9d,[r9+r9*4]
  412bc6:	mov    QWORD PTR [rsp+0xc0],r8
  412bce:	mov    r11,r8
  412bd1:	add    r8,0x1
  412bd5:	lea    r9d,[rax+r9*2-0x30]
  412bda:	movsx  eax,BYTE PTR [r8-0x1]
  412bdf:	lea    r10d,[rax-0x30]
  412be3:	cmp    r10d,0x9
  412be7:	jbe    0x412bc2
  412be9:	mov    QWORD PTR [rsp+0x48],r11
  412bee:	mov    r11d,DWORD PTR [rsp+0x5c]
  412bf3:	mov    r8,QWORD PTR [rsp+0x48]
  412bf8:	sub    r8,QWORD PTR [rsp+0x50]
  412bfd:	cmp    r8,0x8
  412c01:	jg     0x413dbf
  412c07:	cmp    r9d,0x4e1f
  412c0e:	jg     0x413dbf
  412c14:	mov    r10d,DWORD PTR [rsp+0x44]
  412c19:	mov    r8d,r10d
  412c1c:	neg    r8d
  412c1f:	xor    r8d,r9d
  412c22:	add    r8d,r10d
  412c25:	jmp    0x412a0a
  412c2a:	cmp    eax,0x49
  412c2d:	je     0x413dca
  412c33:	mov    DWORD PTR [rsp+0xa4],0x6
  412c3e:	mov    QWORD PTR [rsp+0xc0],rdi
  412c46:	mov    r8,QWORD PTR [rsp+0xc8]
  412c4e:	jmp    0x4127e1
  412c53:	or     eax,0x40
  412c56:	mov    DWORD PTR [rsp+0xa4],eax
  412c5d:	call   0x4162d8
  412c62:	mov    DWORD PTR [rax],0x22
  412c68:	mov    r8,QWORD PTR [rsp+0xc8]
  412c70:	jmp    0x4127e1
  412c75:	mov    rax,QWORD PTR [rsp+0x190]
  412c7d:	mov    ecx,DWORD PTR [rsp+0x58]
  412c81:	sub    r8d,r13d
  412c84:	mov    DWORD PTR [rsp+0xa4],0x1
  412c8f:	mov    DWORD PTR [rsp+0x68],r8d
  412c94:	mov    eax,DWORD PTR [rax+0xc]
  412c97:	mov    DWORD PTR [rsp+0x44],eax
  412c9b:	and    eax,0x3
  412c9e:	mov    edi,eax
  412ca0:	sub    edi,ecx
  412ca2:	cmp    eax,0x2
  412ca5:	mov    DWORD PTR [rsp+0x6c],edi
  412ca9:	je     0x412cc3
  412cab:	lea    edi,[rcx+0x1]
  412cae:	cmp    eax,0x3
  412cb1:	mov    DWORD PTR [rsp+0x6c],edi
  412cb5:	je     0x412cc3
  412cb7:	test   eax,eax
  412cb9:	sete   al
  412cbc:	movzx  eax,al
  412cbf:	mov    DWORD PTR [rsp+0x6c],eax
  412cc3:	pxor   xmm0,xmm0
  412cc7:	mov    eax,esi
  412cc9:	test   ebx,ebx
  412ccb:	cmove  ebx,ebp
  412cce:	mov    edi,0x10
  412cd3:	cmp    ebp,0x10
  412cd6:	cmovle edi,ebp
  412cd9:	cvtsi2sd xmm0,rax
  412cde:	cmp    edi,0x9
  412ce1:	movsd  QWORD PTR [rsp+0xb0],xmm0
  412cea:	jle    0x412d13
  412cec:	pxor   xmm1,xmm1
  412cf0:	lea    eax,[rdi-0x9]
  412cf3:	mov    rcx,QWORD PTR [rip+0x1d366]        # 0x430060
  412cfa:	cdqe   
  412cfc:	cvtsi2sd xmm1,rdx
  412d01:	mulsd  xmm0,QWORD PTR [rcx+rax*8]
  412d06:	addsd  xmm0,xmm1
  412d0a:	movsd  QWORD PTR [rsp+0xb0],xmm0
  412d13:	cmp    ebp,0xf
  412d16:	jg     0x412e85
  412d1c:	cmp    DWORD PTR [rsp+0x40],0x35
  412d21:	jg     0x412e85
  412d27:	cmp    DWORD PTR [rsp+0x68],0x0
  412d2c:	je     0x413d10
  412d32:	jle    0x413199
  412d38:	cmp    DWORD PTR [rsp+0x68],0x16
  412d3d:	jg     0x413d3a
  412d43:	movsxd rcx,DWORD PTR [rsp+0x68]
  412d48:	mov    edx,DWORD PTR [rsp+0xb0]
  412d4f:	lea    rax,[rip+0x1cf6a]        # 0x42fcc0
  412d56:	test   edx,edx
  412d58:	mov    r8d,DWORD PTR [rax+rcx*4]
  412d5c:	je     0x413e2e
  412d62:	tzcnt  edx,edx
  412d66:	mov    eax,0x35
  412d6b:	sub    eax,edx
  412d6d:	mov    rdx,QWORD PTR [rip+0x1d2ec]        # 0x430060
  412d74:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  412d7d:	add    eax,r8d
  412d80:	cmp    eax,0x35
  412d83:	mulsd  xmm0,QWORD PTR [rdx+rcx*8]
  412d88:	lea    rdx,[rsp+0xa4]
  412d90:	setle  al
  412d93:	movzx  eax,al
  412d96:	lea    rcx,[rsp+0xb0]
  412d9e:	mov    QWORD PTR [rsp+0x30],rdx
  412da3:	mov    edx,DWORD PTR [rsp+0x6c]
  412da7:	mov    DWORD PTR [rsp+0x20],eax
  412dab:	mov    DWORD PTR [rsp+0x28],edx
  412daf:	movsd  QWORD PTR [rsp+0xb0],xmm0
  412db8:	mov    r9,QWORD PTR [rsp+0x1a0]
  412dc0:	mov    r8,QWORD PTR [rsp+0x198]
  412dc8:	mov    rdx,QWORD PTR [rsp+0x190]
  412dd0:	call   0x412240
  412dd5:	test   eax,eax
  412dd7:	jne    0x412c68
  412ddd:	xor    eax,eax
  412ddf:	jmp    0x412e89
  412de4:	movzx  r8d,BYTE PTR [rbp+0x1]
  412de9:	test   r8b,r8b
  412dec:	je     0x41406d
  412df2:	cmp    r8b,BYTE PTR [r9+0x1]
  412df6:	jne    0x4129ec
  412dfc:	mov    eax,0x2
  412e01:	jmp    0x412e12
  412e03:	add    rax,0x1
  412e07:	cmp    r8b,BYTE PTR [r9+rax*1-0x1]
  412e0c:	jne    0x413010
  412e12:	movzx  r8d,BYTE PTR [rbp+rax*1+0x0]
  412e18:	test   r8b,r8b
  412e1b:	jne    0x412e03
  412e1d:	lea    r8,[r9+rax*1]
  412e21:	test   ebx,ebx
  412e23:	mov    QWORD PTR [rsp+0xc0],r8
  412e2b:	movsx  eax,BYTE PTR [r8]
  412e2f:	je     0x41310e
  412e35:	lea    r8d,[rax-0x30]
  412e39:	xor    ecx,ecx
  412e3b:	xor    r13d,r13d
  412e3e:	mov    ebp,ebx
  412e40:	cmp    r8d,0x9
  412e44:	ja     0x412e7a
  412e46:	test   r8d,r8d
  412e49:	lea    eax,[rcx+0x1]
  412e4c:	mov    r9d,r8d
  412e4f:	jne    0x413fed
  412e55:	mov    r8,QWORD PTR [rsp+0xc0]
  412e5d:	mov    ecx,eax
  412e5f:	lea    rax,[r8+0x1]
  412e63:	mov    QWORD PTR [rsp+0xc0],rax
  412e6b:	movsx  eax,BYTE PTR [r8+0x1]
  412e70:	lea    r8d,[rax-0x30]
  412e74:	cmp    r8d,0x9
  412e78:	jbe    0x412e46
  412e7a:	mov    r11d,0x1
  412e80:	jmp    0x4129f6
  412e85:	mov    eax,DWORD PTR [rsp+0x68]
  412e89:	mov    edx,ebp
  412e8b:	sub    edx,edi
  412e8d:	add    edx,eax
  412e8f:	cmp    edx,0x0
  412e92:	jle    0x413bca
  412e98:	mov    eax,edx
  412e9a:	and    eax,0xf
  412e9d:	je     0x412ebf
  412e9f:	mov    rcx,QWORD PTR [rip+0x1d1ba]        # 0x430060
  412ea6:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  412eaf:	cdqe   
  412eb1:	mulsd  xmm0,QWORD PTR [rcx+rax*8]
  412eb6:	movsd  QWORD PTR [rsp+0xb0],xmm0
  412ebf:	and    edx,0xfffffff0
  412ec2:	jne    0x413021
  412ec8:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  412ed1:	xor    edi,edi
  412ed3:	lea    rdx,[rsp+0xac]
  412edb:	lea    r8,[rsp+0xa8]
  412ee3:	call   0x415c50
  412ee8:	mov    edx,DWORD PTR [rsp+0xa8]
  412eef:	mov    r13d,DWORD PTR [rsp+0x40]
  412ef4:	add    edi,DWORD PTR [rsp+0xac]
  412efb:	mov    QWORD PTR [rsp+0xc8],rax
  412f03:	mov    r12d,edx
  412f06:	sub    r12d,r13d
  412f09:	test   r12d,r12d
  412f0c:	mov    DWORD PTR [rsp+0xac],edi
  412f13:	jle    0x412f3c
  412f15:	mov    edx,r12d
  412f18:	mov    rcx,rax
  412f1b:	call   0x414cc0
  412f20:	mov    edi,DWORD PTR [rsp+0xac]
  412f27:	mov    DWORD PTR [rsp+0xa8],r13d
  412f2f:	mov    edx,r13d
  412f32:	add    edi,r12d
  412f35:	mov    DWORD PTR [rsp+0xac],edi
  412f3c:	lea    eax,[rdi+rdx*1]
  412f3f:	sub    eax,DWORD PTR [rsp+0x40]
  412f43:	mov    ecx,eax
  412f45:	mov    DWORD PTR [rsp+0x8c],eax
  412f4c:	mov    rax,QWORD PTR [rsp+0x190]
  412f54:	mov    eax,DWORD PTR [rax+0x8]
  412f57:	mov    DWORD PTR [rsp+0x44],eax
  412f5b:	add    eax,0x1
  412f5e:	cmp    ecx,eax
  412f60:	jg     0x413b05
  412f66:	mov    rax,QWORD PTR [rsp+0x190]
  412f6e:	mov    eax,DWORD PTR [rax+0x4]
  412f71:	cmp    ecx,eax
  412f73:	mov    DWORD PTR [rsp+0x50],eax
  412f77:	jge    0x413d03
  412f7d:	sub    edi,eax
  412f7f:	cmp    edi,0x0
  412f82:	jle    0x41316c
  412f88:	mov    rcx,QWORD PTR [rsp+0xc8]
  412f90:	mov    edx,edi
  412f92:	call   0x415880
  412f97:	add    DWORD PTR [rsp+0xa8],edi
  412f9e:	mov    QWORD PTR [rsp+0xc8],rax
  412fa6:	mov    eax,DWORD PTR [rsp+0x50]
  412faa:	mov    DWORD PTR [rsp+0xac],eax
  412fb1:	mov    eax,DWORD PTR [rsp+0x84]
  412fb8:	test   eax,eax
  412fba:	je     0x413230
  412fc0:	mov    eax,DWORD PTR [rsp+0x8c]
  412fc7:	add    eax,0x1
  412fca:	cmp    DWORD PTR [rsp+0x50],eax
  412fce:	jle    0x413230
  412fd4:	mov    r8,QWORD PTR [rsp+0xc8]
  412fdc:	mov    rax,QWORD PTR [rsp+0x198]
  412fe4:	mov    esi,DWORD PTR [rsp+0x50]
  412fe8:	mov    DWORD PTR [rsp+0xa4],0x50
  412ff3:	mov    DWORD PTR [r8+0x14],0x0
  412ffb:	mov    DWORD PTR [r8+0x18],0x0
  413003:	mov    DWORD PTR [rax],esi
  413005:	jmp    0x412aba
  41300a:	nop    WORD PTR [rax+rax*1+0x0]
  413010:	mov    eax,ecx
  413012:	mov    ebp,ebx
  413014:	xor    ecx,ecx
  413016:	xor    r13d,r13d
  413019:	xor    r11d,r11d
  41301c:	jmp    0x4129f6
  413021:	sar    edx,0x4
  413024:	cmp    edx,0xf
  413027:	jle    0x4140f3
  41302d:	mov    rax,QWORD PTR [rip+0x1cf5c]        # 0x42ff90
  413034:	mov    ecx,edx
  413036:	xor    r8d,r8d
  413039:	movsd  xmm1,QWORD PTR [rax+0x20]
  41303e:	xchg   ax,ax
  413040:	mov    eax,DWORD PTR [rsp+0xb4]
  413047:	sub    ecx,0x10
  41304a:	mov    r9d,eax
  41304d:	and    eax,0x800fffff
  413052:	or     eax,0x3ff00000
  413057:	and    r9d,0x7ff00000
  41305e:	mov    DWORD PTR [rsp+0xb4],eax
  413065:	shr    r9d,0x14
  413069:	cmp    ecx,0xf
  41306c:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  413075:	lea    r8d,[r8+r9*1-0x3ff]
  41307d:	mulsd  xmm0,xmm1
  413081:	movsd  QWORD PTR [rsp+0xb0],xmm0
  41308a:	jg     0x413040
  41308c:	and    edx,0xf
  41308f:	mov    eax,DWORD PTR [rsp+0xb4]
  413096:	mov    ecx,eax
  413098:	and    eax,0x800fffff
  41309d:	or     eax,0x3ff00000
  4130a2:	and    ecx,0x7ff00000
  4130a8:	shr    ecx,0x14
  4130ab:	mov    DWORD PTR [rsp+0xb4],eax
  4130b2:	test   edx,edx
  4130b4:	lea    edi,[r8+rcx*1-0x3ff]
  4130bc:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  4130c5:	mov    rax,QWORD PTR [rip+0x1cec4]        # 0x42ff90
  4130cc:	je     0x412ed3
  4130d2:	test   dl,0x1
  4130d5:	je     0x4130db
  4130d7:	mulsd  xmm0,QWORD PTR [rax]
  4130db:	add    rax,0x8
  4130df:	sar    edx,1
  4130e1:	jne    0x4130d2
  4130e3:	movsd  QWORD PTR [rsp+0xb0],xmm0
  4130ec:	jmp    0x412ed3
  4130f1:	mov    DWORD PTR [rsp+0x44],0x1
  4130f9:	lea    rax,[rdi+0x2]
  4130fd:	mov    QWORD PTR [rsp+0xc0],rax
  413105:	movsx  eax,BYTE PTR [rdi+0x2]
  413109:	jmp    0x412b3d
  41310e:	cmp    eax,0x30
  413111:	jne    0x414155
  413117:	add    r8,0x1
  41311b:	xor    ecx,ecx
  41311d:	nop    DWORD PTR [rax]
  413120:	mov    QWORD PTR [rsp+0xc0],r8
  413128:	movsx  eax,BYTE PTR [r8]
  41312c:	add    ecx,0x1
  41312f:	add    r8,0x1
  413133:	cmp    eax,0x30
  413136:	je     0x413120
  413138:	lea    r8d,[rax-0x31]
  41313c:	cmp    r8d,0x8
  413140:	ja     0x413db5
  413146:	mov    r15,QWORD PTR [rsp+0xc0]
  41314e:	lea    r9d,[rax-0x30]
  413152:	lea    r13d,[rcx+0x1]
  413156:	mov    ebp,0x1
  41315b:	mov    r8,r15
  41315e:	lea    eax,[rsi+rsi*4]
  413161:	xor    ecx,ecx
  413163:	lea    esi,[r9+rax*2]
  413167:	jmp    0x412e5f
  41316c:	je     0x412fa6
  413172:	add    edx,edi
  413174:	test   edx,edx
  413176:	mov    DWORD PTR [rsp+0xa8],edx
  41317d:	jle    0x414116
  413183:	mov    rcx,QWORD PTR [rsp+0xc8]
  41318b:	neg    edi
  41318d:	mov    edx,edi
  41318f:	call   0x414cc0
  413194:	jmp    0x412fa6
  413199:	mov    edx,DWORD PTR [rsp+0x68]
  41319d:	cmp    edx,0xffffffea
  4131a0:	mov    eax,edx
  4131a2:	jl     0x412e89
  4131a8:	mov    rdx,QWORD PTR [rip+0x1ceb1]        # 0x430060
  4131af:	neg    eax
  4131b1:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  4131ba:	cdqe   
  4131bc:	divsd  xmm0,QWORD PTR [rdx+rax*8]
  4131c1:	lea    rax,[rsp+0xa4]
  4131c9:	movsd  QWORD PTR [rsp+0xb0],xmm0
  4131d2:	lea    rcx,[rsp+0xb0]
  4131da:	mov    DWORD PTR [rsp+0x20],0x0
  4131e2:	mov    QWORD PTR [rsp+0x30],rax
  4131e7:	mov    eax,DWORD PTR [rsp+0x6c]
  4131eb:	mov    DWORD PTR [rsp+0x28],eax
  4131ef:	jmp    0x412db8
  4131f4:	mov    DWORD PTR [r8+0x14],0x0
  4131fc:	mov    DWORD PTR [rsp+0xa4],0x50
  413207:	call   0x4162d8
  41320c:	mov    r8,QWORD PTR [rsp+0xc8]
  413214:	mov    DWORD PTR [rax],0x22
  41321a:	jmp    0x4127e1
  41321f:	nop
  413220:	mov    QWORD PTR [rsp+0xc0],rdi
  413228:	xor    r8d,r8d
  41322b:	jmp    0x412a0a
  413230:	mov    eax,DWORD PTR [rsp+0x50]
  413234:	mov    DWORD PTR [rsp+0x44],0x1
  41323c:	mov    DWORD PTR [rsp+0x8c],eax
  413243:	mov    r8d,ebp
  413246:	mov    edx,ebx
  413248:	mov    DWORD PTR [rsp+0x20],r14d
  41324d:	mov    r9d,esi
  413250:	mov    rcx,r15
  413253:	call   0x415d90
  413258:	mov    QWORD PTR [rsp+0x70],rax
  41325d:	add    rax,0x10
  413261:	mov    QWORD PTR [rsp+0x78],rax
  413266:	mov    eax,DWORD PTR [rsp+0x40]
  41326a:	movsd  xmm8,QWORD PTR [rip+0x1caad]        # 0x42fd20
  413273:	movsd  xmm9,QWORD PTR [rip+0x1cab4]        # 0x42fd30
  41327c:	add    eax,0x1
  41327f:	movapd xmm11,xmm8
  413284:	mov    DWORD PTR [rsp+0x80],eax
  41328b:	mov    eax,DWORD PTR [rsp+0x68]
  41328f:	movsd  xmm10,QWORD PTR [rip+0x1cab8]        # 0x42fd50
  413298:	mov    edx,eax
  41329a:	neg    edx
  41329c:	test   eax,eax
  41329e:	mov    eax,0x0
  4132a3:	cmovs  eax,edx
  4132a6:	xor    ebp,ebp
  4132a8:	mov    DWORD PTR [rsp+0x5c],eax
  4132ac:	jmp    0x4134f0
  4132b1:	mov    rcx,rsi
  4132b4:	call   0x415880
  4132b9:	mov    rsi,rax
  4132bc:	test   r15d,r15d
  4132bf:	je     0x4132cf
  4132c1:	mov    rcx,rdi
  4132c4:	mov    edx,r15d
  4132c7:	call   0x415710
  4132cc:	mov    rdi,rax
  4132cf:	test   r12d,r12d
  4132d2:	jle    0x4132e2
  4132d4:	mov    rcx,rdi
  4132d7:	mov    edx,r12d
  4132da:	call   0x415880
  4132df:	mov    rdi,rax
  4132e2:	test   r14d,r14d
  4132e5:	jle    0x4132f5
  4132e7:	mov    rcx,r13
  4132ea:	mov    edx,r14d
  4132ed:	call   0x415880
  4132f2:	mov    r13,rax
  4132f5:	mov    rdx,rdi
  4132f8:	mov    rcx,rsi
  4132fb:	call   0x4159f0
  413300:	cmp    DWORD PTR [rax+0x14],0x1
  413304:	mov    rbx,rax
  413307:	jle    0x4136a0
  41330d:	mov    ebp,DWORD PTR [rbx+0x10]
  413310:	mov    rdx,r13
  413313:	mov    DWORD PTR [rbx+0x10],0x0
  41331a:	mov    rcx,rbx
  41331d:	call   0x4159a0
  413322:	test   eax,eax
  413324:	jg     0x413630
  41332a:	mov    ecx,DWORD PTR [rsp+0x6c]
  41332e:	test   ecx,ecx
  413330:	je     0x413630
  413336:	mov    eax,ecx
  413338:	and    eax,0x1
  41333b:	xor    eax,ebp
  41333d:	mov    DWORD PTR [rsp+0x60],eax
  413341:	je     0x413e4b
  413347:	test   ebp,ebp
  413349:	je     0x4138a1
  41334f:	movsd  xmm6,QWORD PTR [rip+0x1c9c9]        # 0x42fd20
  413357:	mov    DWORD PTR [rsp+0xa4],0x21
  413362:	xor    r12d,r12d
  413365:	mov    DWORD PTR [rsp+0x88],0x20
  413370:	xor    r14d,r14d
  413373:	movapd xmm7,xmm6
  413377:	mov    eax,DWORD PTR [rsp+0xa8]
  41337e:	mov    edx,DWORD PTR [rsp+0xac]
  413385:	mov    r8d,DWORD PTR [rsp+0x44]
  41338a:	add    edx,eax
  41338c:	test   r8d,r8d
  41338f:	mov    DWORD PTR [rsp+0x48],edx
  413393:	jne    0x41339f
  413395:	cmp    DWORD PTR [rsp+0x40],eax
  413399:	jg     0x413a55
  41339f:	lea    rdx,[rsp+0x9c]
  4133a7:	lea    r8,[rsp+0xa0]
  4133af:	movapd xmm0,xmm6
  4133b3:	call   0x415c50
  4133b8:	mov    edx,DWORD PTR [rsp+0x9c]
  4133bf:	mov    r15,rax
  4133c2:	test   edx,edx
  4133c4:	js     0x413a90
  4133ca:	je     0x4133d7
  4133cc:	mov    rcx,rax
  4133cf:	call   0x415880
  4133d4:	mov    r15,rax
  4133d7:	mov    rbp,QWORD PTR [rsp+0xc8]
  4133df:	test   r14d,r14d
  4133e2:	mov    rdx,r15
  4133e5:	mov    rcx,rbp
  4133e8:	je     0x4137d0
  4133ee:	call   0x4159f0
  4133f3:	mov    ecx,DWORD PTR [rsp+0x44]
  4133f7:	mov    QWORD PTR [rsp+0xc8],rax
  4133ff:	mov    edx,DWORD PTR [rbp+0x14]
  413402:	test   ecx,ecx
  413404:	jne    0x413970
  41340a:	sub    edx,0x1
  41340d:	cmp    edx,DWORD PTR [rax+0x14]
  413410:	jge    0x41342d
  413412:	movsxd rdx,edx
  413415:	add    rdx,0x4
  413419:	bsr    ecx,DWORD PTR [rax+rdx*4+0x8]
  41341e:	bsr    edx,DWORD PTR [rbp+rdx*4+0x8]
  413423:	xor    ecx,0x1f
  413426:	xor    edx,0x1f
  413429:	cmp    ecx,edx
  41342b:	jle    0x413450
  41342d:	mov    ecx,DWORD PTR [rsp+0x50]
  413431:	cmp    DWORD PTR [rsp+0x8c],ecx
  413438:	jne    0x413850
  41343e:	sub    DWORD PTR [rsp+0xa8],0x1
  413446:	mov    DWORD PTR [rsp+0x44],0x1
  41344e:	xchg   ax,ax
  413450:	mov    rcx,r15
  413453:	call   0x415480
  413458:	mov    rcx,rbp
  41345b:	call   0x415480
  413460:	mov    r14d,DWORD PTR [rsp+0x60]
  413465:	test   r14d,r14d
  413468:	jne    0x4136b0
  41346e:	test   r12d,r12d
  413471:	je     0x4134b8
  413473:	mov    eax,DWORD PTR [rsp+0xa8]
  41347a:	add    eax,DWORD PTR [rsp+0xac]
  413481:	cmp    DWORD PTR [rsp+0x48],eax
  413485:	jne    0x4134b8
  413487:	mulsd  xmm6,QWORD PTR [rip+0x1c8b9]        # 0x42fd48
  41348f:	movapd xmm0,xmm7
  413493:	subsd  xmm0,QWORD PTR [rip+0x1c89d]        # 0x42fd38
  41349b:	movapd xmm1,xmm6
  41349f:	xorpd  xmm1,xmm10
  4134a4:	ucomisd xmm1,xmm0
  4134a8:	jbe    0x413a22
  4134ae:	ucomisd xmm7,xmm6
  4134b2:	ja     0x413a42
  4134b8:	mov    r12d,DWORD PTR [rsp+0x44]
  4134bd:	test   r12d,r12d
  4134c0:	je     0x413885
  4134c6:	mov    DWORD PTR [rsp+0x44],0x1
  4134ce:	xor    ebp,ebp
  4134d0:	mov    rcx,rsi
  4134d3:	call   0x415480
  4134d8:	mov    rcx,rdi
  4134db:	call   0x415480
  4134e0:	mov    rcx,r13
  4134e3:	call   0x415480
  4134e8:	mov    rcx,rbx
  4134eb:	call   0x415480
  4134f0:	mov    rsi,QWORD PTR [rsp+0x70]
  4134f5:	mov    r15d,0x0
  4134fb:	mov    ecx,DWORD PTR [rsi+0x8]
  4134fe:	call   0x415370
  413503:	lea    rcx,[rax+0x10]
  413507:	mov    rdi,rax
  41350a:	movsxd rax,DWORD PTR [rsi+0x14]
  41350e:	mov    rdx,QWORD PTR [rsp+0x78]
  413513:	lea    r8,[rax*4+0x8]
  41351b:	call   0x4161b8
  413520:	mov    rax,QWORD PTR [rsp+0xc8]
  413528:	mov    ecx,DWORD PTR [rax+0x8]
  41352b:	call   0x415370
  413530:	mov    rdx,QWORD PTR [rsp+0xc8]
  413538:	lea    rcx,[rax+0x10]
  41353c:	mov    rsi,rax
  41353f:	movsxd rax,DWORD PTR [rdx+0x14]
  413543:	add    rdx,0x10
  413547:	lea    r8,[rax*4+0x8]
  41354f:	call   0x4161b8
  413554:	mov    eax,DWORD PTR [rsp+0xa8]
  41355b:	mov    ecx,0x1
  413560:	mov    ebx,DWORD PTR [rsp+0xac]
  413567:	sub    eax,ebp
  413569:	add    ebx,ebp
  41356b:	mov    DWORD PTR [rsp+0x48],eax
  41356f:	call   0x4155b0
  413574:	mov    r13,rax
  413577:	mov    eax,DWORD PTR [rsp+0x68]
  41357b:	test   eax,eax
  41357d:	cmovg  r15d,eax
  413581:	test   ebx,ebx
  413583:	js     0x413840
  413589:	mov    eax,DWORD PTR [rsp+0x5c]
  41358d:	mov    edx,r15d
  413590:	lea    r14d,[rax+rbx*1]
  413594:	mov    ecx,DWORD PTR [rsp+0x48]
  413598:	mov    eax,DWORD PTR [rsp+0x80]
  41359f:	add    ebx,ecx
  4135a1:	sub    ebx,DWORD PTR [rsp+0x40]
  4135a5:	sub    eax,ecx
  4135a7:	cmp    DWORD PTR [rsp+0x50],ebx
  4135ab:	jle    0x4135b3
  4135ad:	sub    ebx,DWORD PTR [rsp+0x50]
  4135b1:	add    eax,ebx
  4135b3:	lea    ebx,[r14+rax*1]
  4135b7:	lea    r12d,[rdx+rax*1]
  4135bb:	cmp    ebx,r12d
  4135be:	mov    eax,r12d
  4135c1:	cmovle eax,ebx
  4135c4:	cmp    eax,r14d
  4135c7:	cmovg  eax,r14d
  4135cb:	test   eax,eax
  4135cd:	jle    0x4135d7
  4135cf:	sub    ebx,eax
  4135d1:	sub    r12d,eax
  4135d4:	sub    r14d,eax
  4135d7:	mov    eax,DWORD PTR [rsp+0x5c]
  4135db:	test   eax,eax
  4135dd:	je     0x41360c
  4135df:	mov    rcx,r13
  4135e2:	mov    edx,eax
  4135e4:	call   0x415710
  4135e9:	mov    rdx,rsi
  4135ec:	mov    rcx,rax
  4135ef:	mov    r13,rax
  4135f2:	call   0x4155e0
  4135f7:	mov    rcx,rsi
  4135fa:	mov    QWORD PTR [rsp+0x60],rax
  4135ff:	call   0x415480
  413604:	mov    rax,QWORD PTR [rsp+0x60]
  413609:	mov    rsi,rax
  41360c:	sub    ebx,ebp
  41360e:	cmp    ebx,0x0
  413611:	mov    edx,ebx
  413613:	jg     0x4132b1
  413619:	je     0x4132bc
  41361f:	neg    edx
  413621:	mov    rcx,rsi
  413624:	call   0x414cc0
  413629:	jmp    0x4132bc
  41362e:	xchg   ax,ax
  413630:	test   eax,eax
  413632:	js     0x413e62
  413638:	je     0x413f2e
  41363e:	mov    rdx,r13
  413641:	mov    rcx,rbx
  413644:	call   0x415e90
  413649:	ucomisd xmm9,xmm0
  41364e:	jb     0x413980
  413654:	test   ebp,ebp
  413656:	jne    0x413ab0
  41365c:	mov    DWORD PTR [rsp+0x60],0x0
  413664:	cmp    DWORD PTR [rsp+0x48],0x1
  413669:	jg     0x413679
  41366b:	mov    r9d,DWORD PTR [rsp+0x44]
  413670:	test   r9d,r9d
  413673:	jne    0x41403a
  413679:	movapd xmm6,xmm8
  41367e:	xor    r12d,r12d
  413681:	mov    DWORD PTR [rsp+0x88],0x10
  41368c:	movapd xmm7,xmm8
  413691:	mov    r14d,0x1
  413697:	jmp    0x413377
  41369c:	nop    DWORD PTR [rax+0x0]
  4136a0:	mov    r15d,DWORD PTR [rax+0x18]
  4136a4:	test   r15d,r15d
  4136a7:	jne    0x41330d
  4136ad:	nop    DWORD PTR [rax]
  4136b0:	mov    ebp,DWORD PTR [rsp+0x44]
  4136b4:	test   ebp,ebp
  4136b6:	je     0x413ba8
  4136bc:	mov    eax,DWORD PTR [rsp+0xac]
  4136c3:	mov    ebp,0x1
  4136c8:	mov    rdx,QWORD PTR [rsp+0x198]
  4136d0:	mov    rcx,rsi
  4136d3:	mov    DWORD PTR [rdx],eax
  4136d5:	call   0x415480
  4136da:	mov    rcx,rdi
  4136dd:	call   0x415480
  4136e2:	mov    rcx,r13
  4136e5:	call   0x415480
  4136ea:	mov    rcx,QWORD PTR [rsp+0x70]
  4136ef:	call   0x415480
  4136f4:	mov    rcx,rbx
  4136f7:	call   0x415480
  4136fc:	mov    rax,QWORD PTR [rsp+0x190]
  413704:	mov    esi,DWORD PTR [rsp+0xac]
  41370b:	cmp    DWORD PTR [rax+0x8],esi
  41370e:	jge    0x412aaa
  413714:	mov    rax,QWORD PTR [rsp+0x190]
  41371c:	mov    eax,DWORD PTR [rax+0xc]
  41371f:	mov    DWORD PTR [rsp+0x44],eax
  413723:	and    eax,0x3
  413726:	cmp    eax,0x2
  413729:	je     0x413f1b
  41372f:	cmp    eax,0x3
  413732:	je     0x413f08
  413738:	cmp    eax,0x1
  41373b:	je     0x413b07
  413741:	mov    rcx,QWORD PTR [rsp+0xc8]
  413749:	call   0x415480
  41374e:	mov    rax,QWORD PTR [rsp+0x190]
  413756:	mov    rsi,QWORD PTR [rsp+0x198]
  41375e:	mov    QWORD PTR [rsp+0xc8],0x0
  41376a:	mov    DWORD PTR [rsp+0xa4],0x11
  413775:	mov    eax,DWORD PTR [rax+0x8]
  413778:	mov    DWORD PTR [rsi],eax
  41377a:	mov    rax,QWORD PTR [rsp+0x190]
  413782:	mov    rsi,QWORD PTR [rsp+0x1a0]
  41378a:	mov    ecx,DWORD PTR [rax]
  41378c:	lea    eax,[rcx+0x1f]
  41378f:	sar    eax,0x5
  413792:	cdqe   
  413794:	lea    rdx,[rsi+rax*4]
  413798:	mov    rax,rsi
  41379b:	cmp    rsi,rdx
  41379e:	jae    0x4137b0
  4137a0:	add    rax,0x4
  4137a4:	mov    DWORD PTR [rax-0x4],0xffffffff
  4137ab:	cmp    rdx,rax
  4137ae:	ja     0x4137a0
  4137b0:	and    ecx,0x1f
  4137b3:	je     0x4137c1
  4137b5:	mov    eax,0x20
  4137ba:	sub    eax,ecx
  4137bc:	mov    ecx,eax
  4137be:	shr    DWORD PTR [rdx-0x4],cl
  4137c1:	xor    r8d,r8d
  4137c4:	jmp    0x412ab2
  4137c9:	nop    DWORD PTR [rax+0x0]
  4137d0:	call   0x414240
  4137d5:	mov    edx,DWORD PTR [rax+0x14]
  4137d8:	mov    QWORD PTR [rsp+0xc8],rax
  4137e0:	sub    edx,0x1
  4137e3:	cmp    edx,DWORD PTR [rbp+0x14]
  4137e6:	jge    0x413807
  4137e8:	movsxd rdx,edx
  4137eb:	add    rdx,0x4
  4137ef:	bsr    ecx,DWORD PTR [rax+rdx*4+0x8]
  4137f4:	bsr    edx,DWORD PTR [rbp+rdx*4+0x8]
  4137f9:	xor    ecx,0x1f
  4137fc:	xor    edx,0x1f
  4137ff:	cmp    ecx,edx
  413801:	jge    0x413450
  413807:	mov    edx,DWORD PTR [rsp+0x44]
  41380b:	test   edx,edx
  41380d:	je     0x413ae0
  413813:	mov    eax,DWORD PTR [rsp+0xa8]
  41381a:	add    eax,0x1
  41381d:	cmp    DWORD PTR [rsp+0x40],eax
  413821:	mov    DWORD PTR [rsp+0xa8],eax
  413828:	setne  al
  41382b:	movzx  eax,al
  41382e:	mov    DWORD PTR [rsp+0x44],eax
  413832:	jmp    0x413450
  413837:	nop    WORD PTR [rax+rax*1+0x0]
  413840:	mov    edx,r15d
  413843:	mov    r14d,DWORD PTR [rsp+0x5c]
  413848:	sub    edx,ebx
  41384a:	jmp    0x413594
  41384f:	nop
  413850:	mov    edx,0x1
  413855:	mov    rcx,rax
  413858:	call   0x415880
  41385d:	mov    rcx,r15
  413860:	mov    QWORD PTR [rsp+0xc8],rax
  413868:	sub    DWORD PTR [rsp+0xac],0x1
  413870:	sub    DWORD PTR [rsp+0x8c],0x1
  413878:	call   0x415480
  41387d:	mov    rcx,rbp
  413880:	call   0x415480
  413885:	mov    rcx,QWORD PTR [rsp+0xc8]
  41388d:	call   0x414dc0
  413892:	mov    DWORD PTR [rsp+0x44],0x0
  41389a:	mov    ebp,eax
  41389c:	jmp    0x4134d0
  4138a1:	mov    edx,DWORD PTR [rsp+0x50]
  4138a5:	cmp    DWORD PTR [rsp+0x8c],edx
  4138ac:	mov    DWORD PTR [rsp+0xa4],0x11
  4138b7:	je     0x413664
  4138bd:	xor    ecx,ecx
  4138bf:	cmp    DWORD PTR [rsp+0x40],0x1f
  4138c4:	mov    r9,QWORD PTR [rsp+0xc8]
  4138cc:	mov    eax,DWORD PTR [rsp+0x40]
  4138d0:	jle    0x41390c
  4138d2:	mov    r14d,DWORD PTR [r9+0x18]
  4138d6:	test   r14d,r14d
  4138d9:	jne    0x413664
  4138df:	lea    rdx,[r9+0x1c]
  4138e3:	mov    eax,DWORD PTR [rsp+0x40]
  4138e7:	xor    ecx,ecx
  4138e9:	jmp    0x413901
  4138eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4138f0:	add    rdx,0x4
  4138f4:	mov    r12d,DWORD PTR [rdx-0x4]
  4138f8:	test   r12d,r12d
  4138fb:	jne    0x413664
  413901:	sub    eax,0x20
  413904:	add    ecx,0x1
  413907:	cmp    eax,0x1f
  41390a:	jg     0x4138f0
  41390c:	cmp    eax,0x1
  41390f:	jle    0x413933
  413911:	movsxd rcx,ecx
  413914:	sub    eax,0x1
  413917:	lea    r8,[r9+rcx*4]
  41391b:	xor    ecx,ecx
  41391d:	mov    edx,DWORD PTR [r8+0x18]
  413921:	tzcnt  ecx,edx
  413925:	shr    edx,cl
  413927:	cmp    eax,ecx
  413929:	mov    DWORD PTR [r8+0x18],edx
  41392d:	jg     0x413664
  413933:	mov    eax,DWORD PTR [rsp+0x8c]
  41393a:	mov    rcx,r9
  41393d:	sub    eax,0x1
  413940:	mov    DWORD PTR [rsp+0xac],eax
  413947:	mov    eax,DWORD PTR [rsp+0x40]
  41394b:	mov    edx,eax
  41394d:	mov    DWORD PTR [rsp+0xa8],eax
  413954:	call   0x412640
  413959:	mov    QWORD PTR [rsp+0xc8],rax
  413961:	jmp    0x4136b0
  413966:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413970:	mov    DWORD PTR [rsp+0x44],0x1
  413978:	jmp    0x413450
  41397d:	nop    DWORD PTR [rax]
  413980:	movapd xmm7,xmm0
  413984:	cmp    ebp,0x1
  413987:	movsd  xmm1,QWORD PTR [rip+0x1c3a9]        # 0x42fd38
  41398f:	sbb    eax,eax
  413991:	and    eax,0x10
  413994:	movsd  xmm0,QWORD PTR [rip+0x1c3a4]        # 0x42fd40
  41399c:	mulsd  xmm7,xmm1
  4139a0:	add    eax,0x10
  4139a3:	xor    r14d,r14d
  4139a6:	cmp    ebp,0x1
  4139a9:	mov    DWORD PTR [rsp+0x88],eax
  4139b0:	setb   r14b
  4139b4:	ucomisd xmm0,xmm7
  4139b8:	jbe    0x413aa0
  4139be:	cvttsd2si r12d,xmm7
  4139c3:	pxor   xmm6,xmm6
  4139c7:	mov    eax,DWORD PTR [rsp+0x6c]
  4139cb:	cmp    eax,0x1
  4139ce:	cvtsi2sd xmm6,r12d
  4139d3:	subsd  xmm7,xmm6
  4139d7:	je     0x413cf5
  4139dd:	cmp    eax,0x2
  4139e0:	jne    0x413b99
  4139e6:	test   r14d,r14d
  4139e9:	jne    0x413a15
  4139eb:	ucomisd xmm7,QWORD PTR [rip+0x1c335]        # 0x42fd28
  4139f3:	jbe    0x413a15
  4139f5:	pxor   xmm6,xmm6
  4139f9:	add    r12d,0x1
  4139fd:	mov    eax,0x30
  413a02:	sub    eax,DWORD PTR [rsp+0x88]
  413a09:	cvtsi2sd xmm6,r12d
  413a0e:	mov    DWORD PTR [rsp+0x88],eax
  413a15:	mov    DWORD PTR [rsp+0x60],0x0
  413a1d:	jmp    0x413377
  413a22:	ucomisd xmm0,xmm6
  413a26:	jbe    0x4134b8
  413a2c:	movsd  xmm0,QWORD PTR [rip+0x1c2ec]        # 0x42fd20
  413a34:	subsd  xmm0,xmm6
  413a38:	ucomisd xmm0,xmm7
  413a3c:	jbe    0x4134b8
  413a42:	mov    eax,DWORD PTR [rsp+0x88]
  413a49:	or     DWORD PTR [rsp+0xa4],eax
  413a50:	jmp    0x4136b0
  413a55:	mov    r15d,DWORD PTR [rsp+0x40]
  413a5a:	mov    rcx,QWORD PTR [rsp+0xc8]
  413a62:	mov    ebp,r15d
  413a65:	sub    ebp,eax
  413a67:	mov    edx,ebp
  413a69:	call   0x415880
  413a6e:	sub    DWORD PTR [rsp+0xac],ebp
  413a75:	mov    QWORD PTR [rsp+0xc8],rax
  413a7d:	mov    DWORD PTR [rsp+0xa8],r15d
  413a85:	jmp    0x41339f
  413a8a:	nop    WORD PTR [rax+rax*1+0x0]
  413a90:	neg    edx
  413a92:	mov    rcx,rax
  413a95:	call   0x414cc0
  413a9a:	jmp    0x4133d7
  413a9f:	nop
  413aa0:	movapd xmm6,xmm7
  413aa4:	xor    r12d,r12d
  413aa7:	jmp    0x413a15
  413aac:	nop    DWORD PTR [rax+0x0]
  413ab0:	movapd xmm6,xmm11
  413ab5:	xor    r12d,r12d
  413ab8:	movapd xmm7,xmm11
  413abd:	mov    DWORD PTR [rsp+0x88],0x20
  413ac8:	mov    DWORD PTR [rsp+0x60],0x0
  413ad0:	xor    r14d,r14d
  413ad3:	jmp    0x413377
  413ad8:	nop    DWORD PTR [rax+rax*1+0x0]
  413ae0:	mov    edx,0x1
  413ae5:	mov    rcx,rax
  413ae8:	xor    r12d,r12d
  413aeb:	call   0x414cc0
  413af0:	add    DWORD PTR [rsp+0xac],0x1
  413af8:	add    DWORD PTR [rsp+0x8c],0x1
  413b00:	jmp    0x413450
  413b05:	xor    ebp,ebp
  413b07:	mov    rax,QWORD PTR [rsp+0xc8]
  413b0f:	mov    DWORD PTR [rsp+0xa4],0xa3
  413b1a:	mov    DWORD PTR [rax+0x14],0x0
  413b21:	call   0x4162d8
  413b26:	mov    DWORD PTR [rax],0x22
  413b2c:	mov    rax,QWORD PTR [rsp+0x190]
  413b34:	mov    eax,DWORD PTR [rax+0x8]
  413b37:	add    eax,0x1
  413b3a:	jmp    0x412aa0
  413b3f:	mov    eax,DWORD PTR [rsp+0x58]
  413b43:	mov    r8,QWORD PTR [rsp+0x198]
  413b4b:	lea    rcx,[rsp+0xc0]
  413b53:	mov    rdx,QWORD PTR [rsp+0x190]
  413b5b:	lea    r9,[rsp+0xc8]
  413b63:	mov    DWORD PTR [rsp+0x20],eax
  413b67:	call   0x4143f0
  413b6c:	cmp    eax,0x6
  413b6f:	mov    DWORD PTR [rsp+0xa4],eax
  413b76:	mov    r8,QWORD PTR [rsp+0xc8]
  413b7e:	jne    0x4127e1
  413b84:	mov    QWORD PTR [rsp+0xc0],rdi
  413b8c:	mov    DWORD PTR [rsp+0x58],0x0
  413b94:	jmp    0x4127e1
  413b99:	ucomisd xmm7,xmm1
  413b9d:	jae    0x4139f5
  413ba3:	jmp    0x413a15
  413ba8:	mov    eax,DWORD PTR [rsp+0xa8]
  413baf:	mov    ebp,DWORD PTR [rsp+0x40]
  413bb3:	sub    ebp,eax
  413bb5:	cmp    ebp,0x0
  413bb8:	jne    0x413d81
  413bbe:	mov    eax,DWORD PTR [rsp+0xac]
  413bc5:	jmp    0x4136c8
  413bca:	je     0x412ec8
  413bd0:	neg    edx
  413bd2:	mov    eax,edx
  413bd4:	and    eax,0xf
  413bd7:	je     0x413bf9
  413bd9:	mov    rcx,QWORD PTR [rip+0x1c480]        # 0x430060
  413be0:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  413be9:	cdqe   
  413beb:	divsd  xmm0,QWORD PTR [rcx+rax*8]
  413bf0:	movsd  QWORD PTR [rsp+0xb0],xmm0
  413bf9:	and    edx,0xfffffff0
  413bfc:	je     0x412ec8
  413c02:	mov    eax,edx
  413c04:	sar    eax,0x4
  413c07:	cmp    eax,0xf
  413c0a:	jle    0x4141d8
  413c10:	mov    rdx,QWORD PTR [rip+0x1c459]        # 0x430070
  413c17:	mov    ecx,eax
  413c19:	xor    r8d,r8d
  413c1c:	movsd  xmm1,QWORD PTR [rdx+0x20]
  413c21:	mov    edx,DWORD PTR [rsp+0xb4]
  413c28:	sub    ecx,0x10
  413c2b:	mov    r9d,edx
  413c2e:	and    edx,0x800fffff
  413c34:	or     edx,0x3ff00000
  413c3a:	and    r9d,0x7ff00000
  413c41:	mov    DWORD PTR [rsp+0xb4],edx
  413c48:	shr    r9d,0x14
  413c4c:	cmp    ecx,0xf
  413c4f:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  413c58:	lea    r8d,[r8+r9*1-0x3ff]
  413c60:	mulsd  xmm0,xmm1
  413c64:	movsd  QWORD PTR [rsp+0xb0],xmm0
  413c6d:	jg     0x413c21
  413c6f:	and    eax,0xf
  413c72:	mov    edx,DWORD PTR [rsp+0xb4]
  413c79:	mov    ecx,edx
  413c7b:	and    edx,0x800fffff
  413c81:	and    ecx,0x7ff00000
  413c87:	or     edx,0x3ff00000
  413c8d:	shr    ecx,0x14
  413c90:	mov    DWORD PTR [rsp+0xb4],edx
  413c97:	test   eax,eax
  413c99:	lea    edi,[r8+rcx*1-0x3ff]
  413ca1:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  413caa:	jle    0x412ed3
  413cb0:	movsd  xmm1,QWORD PTR [rsp+0xb0]
  413cb9:	mov    rdx,QWORD PTR [rip+0x1c3b0]        # 0x430070
  413cc0:	movapd xmm0,xmm1
  413cc4:	test   al,0x1
  413cc6:	je     0x413cd0
  413cc8:	mulsd  xmm1,QWORD PTR [rdx]
  413ccc:	movapd xmm0,xmm1
  413cd0:	sar    eax,1
  413cd2:	add    rdx,0x8
  413cd6:	test   eax,eax
  413cd8:	jg     0x413cc4
  413cda:	movsd  QWORD PTR [rsp+0xb0],xmm1
  413ce3:	jmp    0x412ed3
  413ce8:	mov    DWORD PTR [rsp+0x44],0x0
  413cf0:	jmp    0x4130f9
  413cf5:	test   r14d,r14d
  413cf8:	je     0x413a15
  413cfe:	jmp    0x4139eb
  413d03:	mov    DWORD PTR [rsp+0x44],0x0
  413d0b:	jmp    0x413243
  413d10:	lea    rax,[rsp+0xa4]
  413d18:	lea    rcx,[rsp+0xb0]
  413d20:	mov    DWORD PTR [rsp+0x20],0x1
  413d28:	mov    QWORD PTR [rsp+0x30],rax
  413d2d:	mov    eax,DWORD PTR [rsp+0x6c]
  413d31:	mov    DWORD PTR [rsp+0x28],eax
  413d35:	jmp    0x412db8
  413d3a:	mov    ecx,DWORD PTR [rsp+0x68]
  413d3e:	mov    edx,0x25
  413d43:	sub    edx,ebp
  413d45:	cmp    ecx,edx
  413d47:	mov    eax,ecx
  413d49:	jg     0x412e89
  413d4f:	mov    rdx,QWORD PTR [rip+0x1c30a]        # 0x430060
  413d56:	mov    eax,0xf
  413d5b:	sub    eax,ebp
  413d5d:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  413d66:	movsxd rcx,eax
  413d69:	mulsd  xmm0,QWORD PTR [rdx+rcx*8]
  413d6e:	mov    ecx,DWORD PTR [rsp+0x68]
  413d72:	sub    ecx,eax
  413d74:	movsxd rax,ecx
  413d77:	mulsd  xmm0,QWORD PTR [rdx+rax*8]
  413d7c:	jmp    0x4131c1
  413d81:	mov    edx,ebp
  413d83:	jle    0x4140df
  413d89:	mov    rcx,QWORD PTR [rsp+0xc8]
  413d91:	call   0x415880
  413d96:	mov    QWORD PTR [rsp+0xc8],rax
  413d9e:	mov    eax,DWORD PTR [rsp+0xac]
  413da5:	sub    eax,ebp
  413da7:	xor    ebp,ebp
  413da9:	mov    DWORD PTR [rsp+0xac],eax
  413db0:	jmp    0x4136c8
  413db5:	xor    ebp,ebp
  413db7:	xor    r13d,r13d
  413dba:	jmp    0x412e7a
  413dbf:	mov    r9d,0x4e1f
  413dc5:	jmp    0x412c14
  413dca:	lea    rbx,[rsp+0xc0]
  413dd2:	lea    rdx,[rip+0x1bde7]        # 0x42fbc0
  413dd9:	mov    rcx,rbx
  413ddc:	call   0x415f50
  413de1:	test   eax,eax
  413de3:	je     0x412c33
  413de9:	lea    rdx,[rip+0x1bdd3]        # 0x42fbc3
  413df0:	mov    rcx,rbx
  413df3:	sub    QWORD PTR [rsp+0xc0],0x1
  413dfc:	call   0x415f50
  413e01:	test   eax,eax
  413e03:	jne    0x413e0e
  413e05:	add    QWORD PTR [rsp+0xc0],0x1
  413e0e:	mov    rax,QWORD PTR [rsp+0x190]
  413e16:	mov    DWORD PTR [rsp+0xa4],0x3
  413e21:	xor    ebp,ebp
  413e23:	mov    eax,DWORD PTR [rax+0x8]
  413e26:	add    eax,0x1
  413e29:	jmp    0x412aa0
  413e2e:	mov    edx,DWORD PTR [rsp+0xb4]
  413e35:	mov    eax,0x15
  413e3a:	or     edx,0x100000
  413e40:	tzcnt  edx,edx
  413e44:	sub    eax,edx
  413e46:	jmp    0x412d6d
  413e4b:	cmp    ebp,0x1
  413e4e:	sbb    eax,eax
  413e50:	and    eax,0x10
  413e53:	add    eax,0x11
  413e56:	mov    DWORD PTR [rsp+0xa4],eax
  413e5d:	jmp    0x4136b0
  413e62:	cmp    ebp,0x1
  413e65:	sbb    eax,eax
  413e67:	and    eax,0x10
  413e6a:	add    eax,0x11
  413e6d:	test   ebp,ebp
  413e6f:	mov    DWORD PTR [rsp+0xa4],eax
  413e76:	jne    0x4136b0
  413e7c:	cmp    DWORD PTR [rsp+0x48],0x1
  413e81:	jg     0x4136b0
  413e87:	mov    ebp,DWORD PTR [rsp+0x44]
  413e8b:	test   ebp,ebp
  413e8d:	jne    0x4136b0
  413e93:	mov    edx,DWORD PTR [rsp+0x8c]
  413e9a:	cmp    DWORD PTR [rsp+0x50],edx
  413e9e:	je     0x4136b0
  413ea4:	mov    rcx,rbx
  413ea7:	mov    edx,0x1
  413eac:	call   0x415880
  413eb1:	mov    rdx,r13
  413eb4:	mov    rcx,rax
  413eb7:	mov    rbx,rax
  413eba:	call   0x4159a0
  413ebf:	test   eax,eax
  413ec1:	jle    0x413ba8
  413ec7:	mov    DWORD PTR [rsp+0xa4],0x11
  413ed2:	mov    DWORD PTR [rsp+0x44],0x0
  413eda:	mov    eax,DWORD PTR [rsp+0x40]
  413ede:	mov    rcx,QWORD PTR [rsp+0xc8]
  413ee6:	sub    DWORD PTR [rsp+0xac],eax
  413eed:	mov    edx,eax
  413eef:	mov    DWORD PTR [rsp+0xa8],eax
  413ef6:	call   0x412640
  413efb:	mov    QWORD PTR [rsp+0xc8],rax
  413f03:	jmp    0x4136b0
  413f08:	mov    r10d,DWORD PTR [rsp+0x58]
  413f0d:	test   r10d,r10d
  413f10:	jne    0x413b07
  413f16:	jmp    0x413741
  413f1b:	mov    r11d,DWORD PTR [rsp+0x58]
  413f20:	test   r11d,r11d
  413f23:	je     0x413b07
  413f29:	jmp    0x413741
  413f2e:	test   ebp,ebp
  413f30:	je     0x414077
  413f36:	mov    r11d,DWORD PTR [rsp+0x44]
  413f3b:	test   r11d,r11d
  413f3e:	je     0x414145
  413f44:	mov    ecx,DWORD PTR [rsp+0xa8]
  413f4b:	mov    r8,QWORD PTR [rsp+0xc8]
  413f53:	mov    edx,ecx
  413f55:	lea    rax,[r8+0x18]
  413f59:	sar    edx,0x5
  413f5c:	movsxd rdx,edx
  413f5f:	lea    rdx,[rax+rdx*4]
  413f63:	cmp    rax,rdx
  413f66:	jae    0x413f93
  413f68:	cmp    DWORD PTR [r8+0x18],0xffffffff
  413f6d:	lea    rax,[r8+0x1c]
  413f71:	je     0x413f8e
  413f73:	jmp    0x414145
  413f78:	nop    DWORD PTR [rax+rax*1+0x0]
  413f80:	add    rax,0x4
  413f84:	cmp    DWORD PTR [rax-0x4],0xffffffff
  413f88:	jne    0x414145
  413f8e:	cmp    rdx,rax
  413f91:	ja     0x413f80
  413f93:	and    ecx,0x1f
  413f96:	je     0x413faa
  413f98:	or     edx,0xffffffff
  413f9b:	shl    edx,cl
  413f9d:	or     edx,DWORD PTR [rax]
  413f9f:	mov    eax,edx
  413fa1:	add    eax,0x1
  413fa4:	jne    0x414145
  413faa:	mov    eax,DWORD PTR [rsp+0x40]
  413fae:	mov    edx,DWORD PTR [rsp+0x50]
  413fb2:	mov    DWORD PTR [r8+0x14],0x1
  413fba:	mov    DWORD PTR [r8+0x18],0x1
  413fc2:	mov    DWORD PTR [rsp+0xa8],0x1
  413fcd:	mov    DWORD PTR [rsp+0xa4],0x21
  413fd8:	lea    eax,[rax+rdx*1-0x1]
  413fdc:	mov    DWORD PTR [rsp+0xac],eax
  413fe3:	mov    eax,0x1
  413fe8:	jmp    0x413baf
  413fed:	add    r13d,eax
  413ff0:	cmp    eax,0x1
  413ff3:	je     0x41401c
  413ff5:	add    ecx,ebp
  413ff7:	mov    r10d,ecx
  413ffa:	jmp    0x414005
  413ffc:	lea    esi,[rsi+rsi*4]
  413fff:	add    esi,esi
  414001:	cmp    ebp,ecx
  414003:	je     0x41401f
  414005:	add    ebp,0x1
  414008:	lea    eax,[rbp-0x1]
  41400b:	cmp    eax,0x8
  41400e:	jle    0x413ffc
  414010:	cmp    ebp,0x10
  414013:	jg     0x414001
  414015:	lea    edx,[rdx+rdx*4]
  414018:	add    edx,edx
  41401a:	jmp    0x414001
  41401c:	mov    r10d,ebp
  41401f:	cmp    r10d,0x8
  414023:	lea    ebp,[r10+0x1]
  414027:	jg     0x4140fb
  41402d:	mov    r8,QWORD PTR [rsp+0xc0]
  414035:	jmp    0x41315e
  41403a:	mov    r9,QWORD PTR [rsp+0xc8]
  414042:	mov    DWORD PTR [rsp+0x44],0x1
  41404a:	mov    eax,DWORD PTR [rsp+0x50]
  41404e:	mov    DWORD PTR [r9+0x14],0x0
  414056:	mov    DWORD PTR [rsp+0xa4],0x50
  414061:	mov    DWORD PTR [rsp+0xac],eax
  414068:	jmp    0x4136b0
  41406d:	mov    eax,0x1
  414072:	jmp    0x412e1d
  414077:	cmp    DWORD PTR [rsp+0x48],0x1
  41407c:	je     0x41415c
  414082:	mov    DWORD PTR [rsp+0xa4],0x21
  41408d:	mov    r10d,DWORD PTR [rsp+0x44]
  414092:	test   r10d,r10d
  414095:	jne    0x4140a5
  414097:	mov    edx,DWORD PTR [rsp+0x40]
  41409b:	cmp    DWORD PTR [rsp+0x48],edx
  41409f:	jl     0x413ba8
  4140a5:	mov    r9,QWORD PTR [rsp+0xc8]
  4140ad:	mov    eax,DWORD PTR [r9+0x18]
  4140b1:	test   al,0x1
  4140b3:	je     0x4136b0
  4140b9:	test   ebp,ebp
  4140bb:	jne    0x4141e0
  4140c1:	cmp    DWORD PTR [rsp+0x48],0x1
  4140c6:	je     0x41404a
  4140c8:	sub    eax,0x1
  4140cb:	mov    DWORD PTR [rsp+0xa4],0x11
  4140d6:	mov    DWORD PTR [r9+0x18],eax
  4140da:	jmp    0x4136b0
  4140df:	mov    rcx,QWORD PTR [rsp+0xc8]
  4140e7:	neg    edx
  4140e9:	call   0x414cc0
  4140ee:	jmp    0x413d9e
  4140f3:	xor    r8d,r8d
  4140f6:	jmp    0x41308f
  4140fb:	cmp    ebp,0x10
  4140fe:	jg     0x414107
  414100:	lea    eax,[rdx+rdx*4]
  414103:	lea    edx,[r8+rax*2]
  414107:	mov    r8,QWORD PTR [rsp+0xc0]
  41410f:	xor    ecx,ecx
  414111:	jmp    0x412e5f
  414116:	cmp    edx,0xffffffff
  414119:	jl     0x412fd4
  41411f:	mov    rax,QWORD PTR [rsp+0xc8]
  414127:	mov    DWORD PTR [rsp+0xa8],0x1
  414132:	mov    DWORD PTR [rax+0x14],0x1
  414139:	mov    DWORD PTR [rax+0x18],0x1
  414140:	jmp    0x412fa6
  414145:	mov    DWORD PTR [rsp+0xa4],0x11
  414150:	jmp    0x41408d
  414155:	xor    ecx,ecx
  414157:	jmp    0x413138
  41415c:	mov    edx,DWORD PTR [rsp+0x8c]
  414163:	cmp    DWORD PTR [rsp+0x50],edx
  414167:	jne    0x41422d
  41416d:	mov    rax,QWORD PTR [rsp+0xc8]
  414175:	mov    DWORD PTR [rsp+0xa4],0x21
  414180:	cmp    DWORD PTR [rax+0x14],0x1
  414184:	jne    0x4136b0
  41418a:	cmp    DWORD PTR [rax+0x18],0x1
  41418e:	mov    eax,DWORD PTR [rsp+0x48]
  414192:	cmovne eax,DWORD PTR [rsp+0x84]
  41419a:	mov    DWORD PTR [rsp+0x84],eax
  4141a1:	jmp    0x4136b0
  4141a6:	mov    r8,QWORD PTR [rsp+0x1a0]
  4141ae:	mov    rdx,QWORD PTR [rsp+0x190]
  4141b6:	mov    rcx,rbx
  4141b9:	call   0x414e90
  4141be:	mov    DWORD PTR [rsp+0xa4],eax
  4141c5:	mov    rax,QWORD PTR [rsp+0x190]
  4141cd:	mov    eax,DWORD PTR [rax+0x8]
  4141d0:	add    eax,0x1
  4141d3:	jmp    0x412aa0
  4141d8:	xor    r8d,r8d
  4141db:	jmp    0x413c72
  4141e0:	mov    rcx,r9
  4141e3:	call   0x412190
  4141e8:	mov    edx,DWORD PTR [rax+0x14]
  4141eb:	mov    ecx,DWORD PTR [rsp+0xa8]
  4141f2:	mov    QWORD PTR [rsp+0xc8],rax
  4141fa:	sub    edx,0x1
  4141fd:	movsxd rdx,edx
  414200:	bsr    edx,DWORD PTR [rax+rdx*4+0x18]
  414205:	mov    eax,ecx
  414207:	neg    eax
  414209:	and    eax,0x1f
  41420c:	xor    edx,0x1f
  41420f:	cmp    edx,eax
  414211:	je     0x41421d
  414213:	add    ecx,0x1
  414216:	mov    DWORD PTR [rsp+0xa8],ecx
  41421d:	mov    DWORD PTR [rsp+0xa4],0x21
  414228:	jmp    0x4136b0
  41422d:	mov    DWORD PTR [rsp+0xa4],0x1
  414238:	jmp    0x413eda
  41423d:	nop
  41423e:	nop
  41423f:	nop
  414240:	push   r13
  414242:	push   r12
  414244:	push   rbp
  414245:	push   rdi
  414246:	push   rsi
  414247:	push   rbx
  414248:	sub    rsp,0x28
  41424c:	mov    eax,DWORD PTR [rdx+0x14]
  41424f:	cmp    DWORD PTR [rcx+0x14],eax
  414252:	mov    rsi,rcx
  414255:	mov    rdi,rdx
  414258:	jge    0x414260
  41425a:	mov    rsi,rdx
  41425d:	mov    rdi,rcx
  414260:	mov    ecx,DWORD PTR [rsi+0x8]
  414263:	xor    r12d,r12d
  414266:	call   0x415370
  41426b:	movsxd rcx,DWORD PTR [rsi+0x14]
  41426f:	mov    rbx,rax
  414272:	lea    r11,[rdi+0x18]
  414276:	lea    r8,[rbx+0x18]
  41427a:	mov    DWORD PTR [rax+0x14],ecx
  41427d:	movsxd rdx,DWORD PTR [rdi+0x14]
  414281:	lea    rax,[rsi+0x18]
  414285:	lea    rdi,[r8+rdx*4]
  414289:	mov    rbp,rdx
  41428c:	nop    DWORD PTR [rax+0x0]
  414290:	mov    r10d,DWORD PTR [rax]
  414293:	mov    r9d,DWORD PTR [r11]
  414296:	add    r8,0x4
  41429a:	add    rax,0x4
  41429e:	add    r11,0x4
  4142a2:	movzx  r13d,r9w
  4142a6:	movzx  edx,r10w
  4142aa:	shr    r9d,0x10
  4142ae:	add    edx,r13d
  4142b1:	shr    r10d,0x10
  4142b5:	add    edx,r12d
  4142b8:	add    r10d,r9d
  4142bb:	mov    r9d,edx
  4142be:	mov    WORD PTR [r8-0x4],dx
  4142c3:	and    r9d,0x10000
  4142ca:	shr    r9d,0x10
  4142ce:	add    r9d,r10d
  4142d1:	mov    r12d,r9d
  4142d4:	mov    WORD PTR [r8-0x2],r9w
  4142d9:	and    r12d,0x10000
  4142e0:	shr    r12d,0x10
  4142e4:	cmp    rdi,r8
  4142e7:	ja     0x414290
  4142e9:	mov    edx,DWORD PTR [rsi+0x14]
  4142ec:	sub    edx,ebp
  4142ee:	movsxd rdx,edx
  4142f1:	lea    r11,[rdi+rdx*4]
  4142f5:	cmp    r11,r8
  4142f8:	jbe    0x41433b
  4142fa:	nop    WORD PTR [rax+rax*1+0x0]
  414300:	mov    r9d,DWORD PTR [rax]
  414303:	add    r8,0x4
  414307:	add    rax,0x4
  41430b:	movzx  r10d,r9w
  41430f:	shr    r9d,0x10
  414313:	add    r10d,r12d
  414316:	mov    edx,r10d
  414319:	mov    WORD PTR [r8-0x4],r10w
  41431e:	and    edx,0x10000
  414324:	shr    edx,0x10
  414327:	add    edx,r9d
  41432a:	mov    WORD PTR [r8-0x2],dx
  41432f:	mov    r12d,edx
  414332:	shr    r12d,0x10
  414336:	cmp    r11,r8
  414339:	ja     0x414300
  41433b:	test   r12d,r12d
  41433e:	je     0x414353
  414340:	cmp    ecx,DWORD PTR [rbx+0xc]
  414343:	je     0x414363
  414345:	lea    eax,[rcx+0x1]
  414348:	mov    DWORD PTR [rbx+0x14],eax
  41434b:	mov    DWORD PTR [rbx+rcx*4+0x18],0x1
  414353:	mov    rax,rbx
  414356:	add    rsp,0x28
  41435a:	pop    rbx
  41435b:	pop    rsi
  41435c:	pop    rdi
  41435d:	pop    rbp
  41435e:	pop    r12
  414360:	pop    r13
  414362:	ret    
  414363:	mov    eax,DWORD PTR [rbx+0x8]
  414366:	lea    ecx,[rax+0x1]
  414369:	call   0x415370
  41436e:	mov    rsi,rax
  414371:	lea    rcx,[rax+0x10]
  414375:	movsxd rax,DWORD PTR [rbx+0x14]
  414379:	lea    rdx,[rbx+0x10]
  41437d:	lea    r8,[rax*4+0x8]
  414385:	call   0x4161b8
  41438a:	mov    rcx,rbx
  41438d:	mov    rbx,rsi
  414390:	call   0x415480
  414395:	movsxd rcx,DWORD PTR [rsi+0x14]
  414399:	jmp    0x414345
  41439b:	nop
  41439c:	nop
  41439d:	nop
  41439e:	nop
  41439f:	nop
  4143a0:	push   rbx
  4143a1:	sub    rsp,0x20
  4143a5:	mov    ebx,ecx
  4143a7:	call   0x4162d8
  4143ac:	mov    DWORD PTR [rax],ebx
  4143ae:	call   0x4162d8
  4143b3:	mov    eax,DWORD PTR [rax]
  4143b5:	add    rsp,0x20
  4143b9:	pop    rbx
  4143ba:	ret    
  4143bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4143c0:	push   rbx
  4143c1:	sub    rsp,0x20
  4143c5:	test   rcx,rcx
  4143c8:	mov    rbx,rcx
  4143cb:	je     0x4143d6
  4143cd:	call   0x4162d8
  4143d2:	mov    eax,DWORD PTR [rax]
  4143d4:	mov    DWORD PTR [rbx],eax
  4143d6:	call   0x4162d8
  4143db:	mov    eax,DWORD PTR [rax]
  4143dd:	add    rsp,0x20
  4143e1:	pop    rbx
  4143e2:	ret    
  4143e3:	nop
  4143e4:	nop
  4143e5:	nop
  4143e6:	nop
  4143e7:	nop
  4143e8:	nop
  4143e9:	nop
  4143ea:	nop
  4143eb:	nop
  4143ec:	nop
  4143ed:	nop
  4143ee:	nop
  4143ef:	nop
  4143f0:	push   r15
  4143f2:	push   r14
  4143f4:	push   r13
  4143f6:	push   r12
  4143f8:	push   rbp
  4143f9:	push   rdi
  4143fa:	push   rsi
  4143fb:	push   rbx
  4143fc:	sub    rsp,0x28
  414400:	mov    r14,rcx
  414403:	mov    r13,rdx
  414406:	mov    QWORD PTR [rsp+0x80],r8
  41440e:	mov    QWORD PTR [rsp+0x88],r9
  414416:	call   0x4161d8
  41441b:	mov    rdi,QWORD PTR [rip+0x1bb8e]        # 0x42ffb0
  414422:	mov    rsi,QWORD PTR [rax]
  414425:	cmp    BYTE PTR [rdi+0x30],0x0
  414429:	je     0x414850
  41442f:	mov    rax,QWORD PTR [rsp+0x88]
  414437:	xor    r8d,r8d
  41443a:	mov    QWORD PTR [rax],0x0
  414441:	mov    rbx,QWORD PTR [r14]
  414444:	movzx  edx,BYTE PTR [rbx+0x2]
  414448:	lea    rax,[rbx+0x3]
  41444c:	add    rbx,0x2
  414450:	cmp    dl,0x30
  414453:	jne    0x414469
  414455:	mov    rbx,rax
  414458:	add    rax,0x1
  41445c:	movzx  edx,BYTE PTR [rax-0x1]
  414460:	add    r8d,0x1
  414464:	cmp    dl,0x30
  414467:	je     0x414455
  414469:	cmp    BYTE PTR [rdi+rdx*1],0x0
  41446d:	jne    0x4145c0
  414473:	movzx  r9d,BYTE PTR [rsi]
  414477:	test   r9b,r9b
  41447a:	je     0x414aba
  414480:	movzx  edx,BYTE PTR [rbx]
  414483:	cmp    r9b,dl
  414486:	jne    0x414863
  41448c:	mov    eax,0x1
  414491:	jmp    0x4144a1
  414493:	add    rax,0x1
  414497:	cmp    dl,BYTE PTR [rbx+rax*1-0x1]
  41449b:	jne    0x414860
  4144a1:	movzx  edx,BYTE PTR [rsi+rax*1]
  4144a5:	test   dl,dl
  4144a7:	jne    0x414493
  4144a9:	add    rax,rbx
  4144ac:	movzx  ecx,BYTE PTR [rax]
  4144af:	movzx  r10d,BYTE PTR [rdi+rcx*1]
  4144b4:	mov    rdx,rcx
  4144b7:	test   r10b,r10b
  4144ba:	jne    0x414940
  4144c0:	cmp    dl,0x50
  4144c3:	je     0x414770
  4144c9:	cmp    dl,0x70
  4144cc:	je     0x414770
  4144d2:	mov    rbp,rax
  4144d5:	mov    r11d,0x1
  4144db:	xor    r12d,r12d
  4144de:	xor    r15d,r15d
  4144e1:	xor    r10d,r10d
  4144e4:	test   r8d,r8d
  4144e7:	jne    0x4144ed
  4144e9:	lea    rax,[rbx-0x1]
  4144ed:	test   r11d,r11d
  4144f0:	mov    QWORD PTR [r14],rax
  4144f3:	jne    0x414820
  4144f9:	test   r10d,r10d
  4144fc:	je     0x414630
  414502:	test   r15d,r15d
  414505:	mov    eax,DWORD PTR [r13+0xc]
  414509:	jne    0x4148b0
  41450f:	cmp    eax,0x2
  414512:	je     0x414b58
  414518:	cmp    eax,0x3
  41451b:	je     0x414b42
  414521:	cmp    eax,0x1
  414524:	je     0x414928
  41452a:	mov    esi,DWORD PTR [r13+0x0]
  41452e:	mov    ebx,esi
  414530:	and    esi,0x1f
  414533:	sar    ebx,0x5
  414536:	cmp    esi,0x1
  414539:	mov    edi,ebx
  41453b:	sbb    edi,0xffffffff
  41453e:	xor    ecx,ecx
  414540:	mov    eax,edi
  414542:	sar    eax,1
  414544:	je     0x414557
  414546:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414550:	add    ecx,0x1
  414553:	sar    eax,1
  414555:	jne    0x414550
  414557:	call   0x415370
  41455c:	mov    rcx,QWORD PTR [rsp+0x88]
  414564:	test   ebx,ebx
  414566:	mov    QWORD PTR [rcx],rax
  414569:	mov    DWORD PTR [rax+0x14],edi
  41456c:	jle    0x414c78
  414572:	lea    ecx,[rbx-0x1]
  414575:	lea    rdx,[rax+0x18]
  414579:	lea    rcx,[rax+rcx*4+0x1c]
  41457e:	xchg   ax,ax
  414580:	mov    DWORD PTR [rdx],0xffffffff
  414586:	add    rdx,0x4
  41458a:	cmp    rdx,rcx
  41458d:	jne    0x414580
  41458f:	mov    edx,ebx
  414591:	cmp    edi,ebx
  414593:	jle    0x4145a8
  414595:	movsxd r8,edx
  414598:	mov    edx,0x20
  41459d:	mov    ecx,edx
  41459f:	sub    ecx,esi
  4145a1:	sar    edx,cl
  4145a3:	mov    DWORD PTR [rax+r8*4+0x18],edx
  4145a8:	mov    eax,DWORD PTR [r13+0x4]
  4145ac:	mov    rdi,QWORD PTR [rsp+0x80]
  4145b4:	mov    DWORD PTR [rdi],eax
  4145b6:	mov    eax,0x11
  4145bb:	jmp    0x414822
  4145c0:	movzx  eax,BYTE PTR [rbx]
  4145c3:	movzx  r9d,BYTE PTR [rsi]
  4145c7:	add    r8d,0x1
  4145cb:	xor    r11d,r11d
  4145ce:	xor    r12d,r12d
  4145d1:	movzx  r10d,BYTE PTR [rdi+rax*1]
  4145d6:	mov    rdx,rax
  4145d9:	test   r10b,r10b
  4145dc:	mov    rax,rbx
  4145df:	je     0x4145f1
  4145e1:	add    rax,0x1
  4145e5:	movzx  ecx,BYTE PTR [rax]
  4145e8:	cmp    BYTE PTR [rdi+rcx*1],0x0
  4145ec:	mov    rdx,rcx
  4145ef:	jne    0x4145e1
  4145f1:	cmp    dl,r9b
  4145f4:	je     0x414870
  4145fa:	test   r12,r12
  4145fd:	movzx  edx,BYTE PTR [rax]
  414600:	je     0x414609
  414602:	sub    r12d,eax
  414605:	shl    r12d,0x2
  414609:	cmp    dl,0x50
  41460c:	je     0x414779
  414612:	cmp    dl,0x70
  414615:	je     0x414779
  41461b:	test   r11d,r11d
  41461e:	mov    QWORD PTR [r14],rax
  414621:	mov    rbp,rax
  414624:	jne    0x414820
  41462a:	nop    WORD PTR [rax+rax*1+0x0]
  414630:	mov    rax,rbp
  414633:	xor    ecx,ecx
  414635:	sub    rax,rbx
  414638:	sub    eax,0x1
  41463b:	cmp    eax,0x7
  41463e:	jle    0x41464a
  414640:	sar    eax,1
  414642:	add    ecx,0x1
  414645:	cmp    eax,0x7
  414648:	jg     0x414640
  41464a:	call   0x415370
  41464f:	cmp    BYTE PTR [rsi+0x1],0x0
  414653:	mov    r14,rax
  414656:	lea    r15,[rax+0x18]
  41465a:	je     0x414b6e
  414660:	mov    edx,0x1
  414665:	jmp    0x414673
  414667:	nop    WORD PTR [rax+rax*1+0x0]
  414670:	mov    rdx,rax
  414673:	cmp    BYTE PTR [rsi+rdx*1+0x1],0x0
  414678:	lea    rax,[rdx+0x1]
  41467c:	jne    0x414670
  41467e:	cmp    rbx,rbp
  414681:	jae    0x414b75
  414687:	add    rsi,rdx
  41468a:	mov    rax,r15
  41468d:	xor    r9d,r9d
  414690:	xor    r8d,r8d
  414693:	jmp    0x4146c1
  414695:	cmp    r8d,0x20
  414699:	je     0x414833
  41469f:	movzx  r10d,cl
  4146a3:	mov    ecx,r8d
  4146a6:	add    r8d,0x4
  4146aa:	movzx  r10d,BYTE PTR [rdi+r10*1]
  4146af:	mov    rbp,r11
  4146b2:	and    r10d,0xf
  4146b6:	shl    r10d,cl
  4146b9:	or     r9d,r10d
  4146bc:	cmp    rbx,rbp
  4146bf:	jae    0x4146d8
  4146c1:	movzx  ecx,BYTE PTR [rbp-0x1]
  4146c5:	lea    r11,[rbp-0x1]
  4146c9:	cmp    cl,BYTE PTR [rsi]
  4146cb:	jne    0x414695
  4146cd:	sub    r11,rdx
  4146d0:	mov    rbp,r11
  4146d3:	cmp    rbx,rbp
  4146d6:	jb     0x4146c1
  4146d8:	bsr    edx,r9d
  4146dc:	xor    edx,0x1f
  4146df:	mov    DWORD PTR [rax],r9d
  4146e2:	add    rax,0x4
  4146e6:	mov    esi,DWORD PTR [r13+0x0]
  4146ea:	sub    rax,r15
  4146ed:	sar    rax,0x2
  4146f1:	mov    DWORD PTR [r14+0x14],eax
  4146f5:	shl    eax,0x5
  4146f8:	sub    eax,edx
  4146fa:	cmp    eax,esi
  4146fc:	jg     0x4149a8
  414702:	mov    edi,0x0
  414707:	jl     0x41497e
  41470d:	cmp    r12d,DWORD PTR [r13+0x8]
  414711:	jg     0x414920
  414717:	mov    eax,DWORD PTR [r13+0x4]
  41471b:	cmp    r12d,eax
  41471e:	jge    0x414a09
  414724:	mov    ebx,eax
  414726:	sub    ebx,r12d
  414729:	cmp    esi,ebx
  41472b:	jg     0x414a67
  414731:	mov    edx,DWORD PTR [r13+0xc]
  414735:	cmp    edx,0x2
  414738:	je     0x414c42
  41473e:	cmp    edx,0x3
  414741:	je     0x414c1f
  414747:	cmp    edx,0x1
  41474a:	je     0x414c52
  414750:	mov    rcx,r14
  414753:	call   0x415480
  414758:	call   0x4162d8
  41475d:	mov    DWORD PTR [rax],0x22
  414763:	mov    eax,0x50
  414768:	jmp    0x414822
  41476d:	nop    DWORD PTR [rax]
  414770:	xor    r12d,r12d
  414773:	mov    r11d,0x1
  414779:	movzx  edx,BYTE PTR [rax+0x1]
  41477d:	cmp    dl,0x2b
  414780:	je     0x4149a0
  414786:	cmp    dl,0x2d
  414789:	je     0x414881
  41478f:	movzx  edx,BYTE PTR [rdi+rdx*1]
  414793:	xor    r15d,r15d
  414796:	lea    r9,[rax+0x1]
  41479a:	lea    ecx,[rdx-0x1]
  41479d:	cmp    cl,0x18
  4147a0:	ja     0x41489f
  4147a6:	lea    rcx,[r9+0x1]
  4147aa:	movzx  r9d,BYTE PTR [r9+0x1]
  4147af:	sub    edx,0x10
  4147b2:	xor    r10d,r10d
  4147b5:	movzx  ebp,BYTE PTR [rdi+r9*1]
  4147ba:	mov    r9d,ebp
  4147bd:	sub    r9d,0x1
  4147c1:	cmp    r9b,0x18
  4147c5:	ja     0x414801
  4147c7:	nop    WORD PTR [rax+rax*1+0x0]
  4147d0:	test   edx,0xf8000000
  4147d6:	mov    r9d,0x1
  4147dc:	lea    edx,[rdx+rdx*4]
  4147df:	cmovne r10d,r9d
  4147e3:	add    rcx,0x1
  4147e7:	movzx  r9d,BYTE PTR [rcx]
  4147eb:	lea    edx,[rbp+rdx*2-0x10]
  4147ef:	movzx  ebp,BYTE PTR [rdi+r9*1]
  4147f4:	mov    r9d,ebp
  4147f7:	sub    r9d,0x1
  4147fb:	cmp    r9b,0x18
  4147ff:	jbe    0x4147d0
  414801:	mov    r9d,r15d
  414804:	mov    rbp,rax
  414807:	mov    rax,rcx
  41480a:	neg    r9d
  41480d:	xor    edx,r9d
  414810:	add    edx,r15d
  414813:	add    r12d,edx
  414816:	jmp    0x4144e4
  41481b:	nop    DWORD PTR [rax+rax*1+0x0]
  414820:	xor    eax,eax
  414822:	add    rsp,0x28
  414826:	pop    rbx
  414827:	pop    rsi
  414828:	pop    rdi
  414829:	pop    rbp
  41482a:	pop    r12
  41482c:	pop    r13
  41482e:	pop    r14
  414830:	pop    r15
  414832:	ret    
  414833:	mov    DWORD PTR [rax],r9d
  414836:	mov    r8d,0x4
  41483c:	movzx  r10d,BYTE PTR [rbp-0x1]
  414841:	add    rax,0x4
  414845:	xor    r9d,r9d
  414848:	xor    ecx,ecx
  41484a:	jmp    0x4146aa
  41484f:	nop
  414850:	call   0x414e00
  414855:	jmp    0x41442f
  41485a:	nop    WORD PTR [rax+rax*1+0x0]
  414860:	mov    edx,r9d
  414863:	mov    rax,rbx
  414866:	jmp    0x4144c0
  41486b:	nop    DWORD PTR [rax+rax*1+0x0]
  414870:	test   r12,r12
  414873:	je     0x414b85
  414879:	movzx  edx,BYTE PTR [rax]
  41487c:	jmp    0x414602
  414881:	mov    r15d,0x1
  414887:	movzx  edx,BYTE PTR [rax+0x2]
  41488b:	lea    r9,[rax+0x2]
  41488f:	movzx  edx,BYTE PTR [rdi+rdx*1]
  414893:	lea    ecx,[rdx-0x1]
  414896:	cmp    cl,0x18
  414899:	jbe    0x4147a6
  41489f:	mov    rbp,rax
  4148a2:	xor    r10d,r10d
  4148a5:	jmp    0x4144e4
  4148aa:	nop    WORD PTR [rax+rax*1+0x0]
  4148b0:	cmp    eax,0x2
  4148b3:	je     0x414a51
  4148b9:	cmp    eax,0x3
  4148bc:	jne    0x414758
  4148c2:	mov    r10d,DWORD PTR [rsp+0x90]
  4148ca:	test   r10d,r10d
  4148cd:	je     0x414758
  4148d3:	xor    ecx,ecx
  4148d5:	call   0x415370
  4148da:	mov    r14,rax
  4148dd:	mov    DWORD PTR [rax+0x14],0x1
  4148e4:	mov    DWORD PTR [rax+0x18],0x1
  4148eb:	mov    eax,DWORD PTR [r13+0x4]
  4148ef:	mov    rdi,QWORD PTR [rsp+0x88]
  4148f7:	mov    QWORD PTR [rdi],r14
  4148fa:	mov    rdi,QWORD PTR [rsp+0x80]
  414902:	mov    DWORD PTR [rdi],eax
  414904:	call   0x4162d8
  414909:	mov    DWORD PTR [rax],0x22
  41490f:	mov    eax,0x62
  414914:	jmp    0x414822
  414919:	nop    DWORD PTR [rax+0x0]
  414920:	mov    rcx,r14
  414923:	call   0x415480
  414928:	call   0x4162d8
  41492d:	mov    DWORD PTR [rax],0x22
  414933:	mov    eax,0xa3
  414938:	jmp    0x414822
  41493d:	nop    DWORD PTR [rax]
  414940:	cmp    cl,0x30
  414943:	mov    rbx,rax
  414946:	jne    0x414966
  414948:	nop    DWORD PTR [rax+rax*1+0x0]
  414950:	add    rbx,0x1
  414954:	movzx  ecx,BYTE PTR [rbx]
  414957:	cmp    cl,0x30
  41495a:	je     0x414950
  41495c:	movzx  edx,cl
  41495f:	movzx  r10d,BYTE PTR [rdi+rdx*1]
  414964:	mov    edx,ecx
  414966:	xor    r11d,r11d
  414969:	test   r10b,r10b
  41496c:	mov    r12,rax
  41496f:	sete   r11b
  414973:	mov    r8d,0x1
  414979:	jmp    0x4145d9
  41497e:	mov    ebx,esi
  414980:	mov    rcx,r14
  414983:	sub    ebx,eax
  414985:	mov    edx,ebx
  414987:	sub    r12d,ebx
  41498a:	call   0x415880
  41498f:	mov    r14,rax
  414992:	lea    r15,[rax+0x18]
  414996:	jmp    0x41470d
  41499b:	nop    DWORD PTR [rax+rax*1+0x0]
  4149a0:	xor    r15d,r15d
  4149a3:	jmp    0x414887
  4149a8:	mov    ebx,eax
  4149aa:	mov    rcx,r14
  4149ad:	xor    edi,edi
  4149af:	sub    ebx,esi
  4149b1:	mov    edx,ebx
  4149b3:	call   0x416010
  4149b8:	test   eax,eax
  4149ba:	je     0x4149f7
  4149bc:	lea    ecx,[rbx-0x1]
  4149bf:	mov    r8d,0x1
  4149c5:	mov    dil,0x1
  4149c8:	mov    eax,ecx
  4149ca:	shl    r8d,cl
  4149cd:	sar    eax,0x5
  4149d0:	cdqe   
  4149d2:	test   DWORD PTR [r15+rax*4],r8d
  4149d6:	je     0x4149f7
  4149d8:	test   ecx,ecx
  4149da:	jle    0x414bef
  4149e0:	mov    edx,ecx
  4149e2:	mov    rcx,r14
  4149e5:	call   0x416010
  4149ea:	test   eax,eax
  4149ec:	je     0x414bef
  4149f2:	mov    edi,0x3
  4149f7:	mov    edx,ebx
  4149f9:	mov    rcx,r14
  4149fc:	add    r12d,ebx
  4149ff:	call   0x414cc0
  414a04:	jmp    0x41470d
  414a09:	mov    ebx,0x1
  414a0e:	test   edi,edi
  414a10:	je     0x414a34
  414a12:	mov    eax,DWORD PTR [r13+0xc]
  414a16:	cmp    eax,0x2
  414a19:	je     0x414ac1
  414a1f:	cmp    eax,0x3
  414a22:	je     0x414ad4
  414a28:	cmp    eax,0x1
  414a2b:	je     0x414bf9
  414a31:	or     ebx,0x10
  414a34:	mov    rax,QWORD PTR [rsp+0x88]
  414a3c:	mov    QWORD PTR [rax],r14
  414a3f:	mov    rax,QWORD PTR [rsp+0x80]
  414a47:	mov    DWORD PTR [rax],r12d
  414a4a:	mov    eax,ebx
  414a4c:	jmp    0x414822
  414a51:	mov    r11d,DWORD PTR [rsp+0x90]
  414a59:	test   r11d,r11d
  414a5c:	jne    0x414758
  414a62:	jmp    0x4148d3
  414a67:	test   edi,edi
  414a69:	lea    ebp,[rbx-0x1]
  414a6c:	jne    0x414be5
  414a72:	test   ebp,ebp
  414a74:	jle    0x414a82
  414a76:	mov    edx,ebp
  414a78:	mov    rcx,r14
  414a7b:	call   0x416010
  414a80:	mov    edi,eax
  414a82:	mov    eax,ebp
  414a84:	mov    ecx,ebp
  414a86:	mov    edx,edi
  414a88:	sar    eax,0x5
  414a8b:	mov    r8d,0x1
  414a91:	or     edx,0x2
  414a94:	cdqe   
  414a96:	shl    r8d,cl
  414a99:	mov    rcx,r14
  414a9c:	test   DWORD PTR [r15+rax*4],r8d
  414aa0:	cmovne edi,edx
  414aa3:	mov    edx,ebx
  414aa5:	sub    esi,ebx
  414aa7:	call   0x414cc0
  414aac:	mov    ebx,0x2
  414ab1:	mov    r12d,DWORD PTR [r13+0x4]
  414ab5:	jmp    0x414a0e
  414aba:	xor    eax,eax
  414abc:	jmp    0x4144a9
  414ac1:	mov    eax,0x1
  414ac6:	sub    eax,DWORD PTR [rsp+0x90]
  414acd:	mov    DWORD PTR [rsp+0x90],eax
  414ad4:	mov    eax,DWORD PTR [rsp+0x90]
  414adb:	test   eax,eax
  414add:	je     0x414a31
  414ae3:	mov    rcx,r14
  414ae6:	movsxd rdi,DWORD PTR [r14+0x14]
  414aea:	call   0x412190
  414aef:	cmp    ebx,0x2
  414af2:	mov    r14,rax
  414af5:	lea    r8,[rax+0x18]
  414af9:	je     0x414c7f
  414aff:	cmp    edi,DWORD PTR [rax+0x14]
  414b02:	jl     0x414b1d
  414b04:	and    esi,0x1f
  414b07:	je     0x414b38
  414b09:	bsr    eax,DWORD PTR [r8+rdi*4-0x4]
  414b0f:	mov    edx,0x20
  414b14:	sub    edx,esi
  414b16:	xor    eax,0x1f
  414b19:	cmp    edx,eax
  414b1b:	jle    0x414b38
  414b1d:	mov    edx,0x1
  414b22:	mov    rcx,r14
  414b25:	add    r12d,0x1
  414b29:	call   0x414cc0
  414b2e:	cmp    r12d,DWORD PTR [r13+0x8]
  414b32:	jg     0x414920
  414b38:	mov    ebx,0x21
  414b3d:	jmp    0x414a34
  414b42:	mov    r8d,DWORD PTR [rsp+0x90]
  414b4a:	test   r8d,r8d
  414b4d:	jne    0x414928
  414b53:	jmp    0x41452a
  414b58:	mov    r9d,DWORD PTR [rsp+0x90]
  414b60:	test   r9d,r9d
  414b63:	je     0x414928
  414b69:	jmp    0x41452a
  414b6e:	xor    edx,edx
  414b70:	jmp    0x41467e
  414b75:	mov    rax,r15
  414b78:	mov    edx,0x20
  414b7d:	xor    r9d,r9d
  414b80:	jmp    0x4146df
  414b85:	movzx  edx,BYTE PTR [rsi+0x1]
  414b89:	test   dl,dl
  414b8b:	je     0x414cb4
  414b91:	cmp    dl,BYTE PTR [rax+0x1]
  414b94:	jne    0x414c14
  414b96:	mov    r12d,0x2
  414b9c:	jmp    0x414bab
  414b9e:	xchg   ax,ax
  414ba0:	add    r12,0x1
  414ba4:	cmp    dl,BYTE PTR [rax+r12*1-0x1]
  414ba9:	jne    0x414c14
  414bab:	movzx  edx,BYTE PTR [rsi+r12*1]
  414bb0:	test   dl,dl
  414bb2:	jne    0x414ba0
  414bb4:	add    r12,rax
  414bb7:	movzx  eax,BYTE PTR [r12]
  414bbc:	cmp    BYTE PTR [rdi+rax*1],0x0
  414bc0:	mov    rdx,rax
  414bc3:	mov    rax,r12
  414bc6:	je     0x414602
  414bcc:	nop    DWORD PTR [rax+0x0]
  414bd0:	add    rax,0x1
  414bd4:	movzx  ecx,BYTE PTR [rax]
  414bd7:	cmp    BYTE PTR [rdi+rcx*1],0x0
  414bdb:	mov    rdx,rcx
  414bde:	jne    0x414bd0
  414be0:	jmp    0x414602
  414be5:	mov    edi,0x1
  414bea:	jmp    0x414a82
  414bef:	mov    edi,0x2
  414bf4:	jmp    0x4149f7
  414bf9:	test   dil,0x2
  414bfd:	je     0x414a31
  414c03:	or     edi,DWORD PTR [r15]
  414c06:	and    edi,0x1
  414c09:	jne    0x414ae3
  414c0f:	jmp    0x414a31
  414c14:	movzx  edx,BYTE PTR [rax]
  414c17:	xor    r12d,r12d
  414c1a:	jmp    0x414609
  414c1f:	mov    edx,DWORD PTR [rsp+0x90]
  414c26:	test   edx,edx
  414c28:	je     0x414750
  414c2e:	mov    DWORD PTR [r14+0x14],0x1
  414c36:	mov    DWORD PTR [r15],0x1
  414c3d:	jmp    0x4148ef
  414c42:	mov    ecx,DWORD PTR [rsp+0x90]
  414c49:	test   ecx,ecx
  414c4b:	je     0x414c2e
  414c4d:	jmp    0x414750
  414c52:	cmp    ebx,esi
  414c54:	jne    0x414750
  414c5a:	cmp    esi,0x1
  414c5d:	jle    0x414c2e
  414c5f:	lea    edx,[rsi-0x1]
  414c62:	mov    rcx,r14
  414c65:	call   0x416010
  414c6a:	test   eax,eax
  414c6c:	je     0x414750
  414c72:	mov    eax,DWORD PTR [r13+0x4]
  414c76:	jmp    0x414c2e
  414c78:	xor    edx,edx
  414c7a:	jmp    0x414591
  414c7f:	mov    eax,DWORD PTR [r13+0x0]
  414c83:	mov    bl,0x22
  414c85:	sub    eax,0x1
  414c88:	cmp    eax,esi
  414c8a:	jne    0x414a34
  414c90:	mov    edx,esi
  414c92:	mov    eax,0x1
  414c97:	mov    ecx,esi
  414c99:	sar    edx,0x5
  414c9c:	shl    eax,cl
  414c9e:	movsxd rdx,edx
  414ca1:	and    eax,DWORD PTR [r8+rdx*4]
  414ca5:	cmp    eax,0x1
  414ca8:	sbb    ebx,ebx
  414caa:	not    ebx
  414cac:	add    ebx,0x22
  414caf:	jmp    0x414a34
  414cb4:	mov    r12d,0x1
  414cba:	jmp    0x414bb4
  414cbf:	nop
  414cc0:	push   rbp
  414cc1:	push   rdi
  414cc2:	push   rsi
  414cc3:	push   rbx
  414cc4:	mov    rsi,rcx
  414cc7:	lea    r10,[rcx+0x18]
  414ccb:	movsxd rcx,DWORD PTR [rcx+0x14]
  414ccf:	mov    eax,edx
  414cd1:	sar    eax,0x5
  414cd4:	cmp    eax,ecx
  414cd6:	jge    0x414d60
  414cdc:	cdqe   
  414cde:	and    edx,0x1f
  414ce1:	lea    rbx,[r10+rcx*4]
  414ce5:	lea    rdi,[r10+rax*4]
  414ce9:	je     0x414d73
  414cef:	mov    r9d,DWORD PTR [rdi]
  414cf2:	lea    r8,[rdi+0x4]
  414cf6:	mov    ebp,0x20
  414cfb:	mov    ecx,edx
  414cfd:	sub    ebp,edx
  414cff:	shr    r9d,cl
  414d02:	cmp    rbx,r8
  414d05:	jbe    0x414db8
  414d0b:	mov    r11,r10
  414d0e:	xchg   ax,ax
  414d10:	mov    eax,DWORD PTR [r8]
  414d13:	mov    ecx,ebp
  414d15:	add    r11,0x4
  414d19:	add    r8,0x4
  414d1d:	shl    eax,cl
  414d1f:	mov    ecx,edx
  414d21:	or     eax,r9d
  414d24:	mov    DWORD PTR [r11-0x4],eax
  414d28:	mov    r9d,DWORD PTR [r8-0x4]
  414d2c:	shr    r9d,cl
  414d2f:	cmp    rbx,r8
  414d32:	ja     0x414d10
  414d34:	sub    rbx,rdi
  414d37:	lea    rax,[rbx-0x5]
  414d3b:	shr    rax,0x2
  414d3f:	lea    rax,[r10+rax*4+0x4]
  414d44:	test   r9d,r9d
  414d47:	mov    DWORD PTR [rax],r9d
  414d4a:	je     0x414d50
  414d4c:	add    rax,0x4
  414d50:	sub    rax,r10
  414d53:	shr    rax,0x2
  414d57:	jmp    0x414dac
  414d59:	nop    DWORD PTR [rax+0x0]
  414d60:	mov    DWORD PTR [rsi+0x14],0x0
  414d67:	mov    DWORD PTR [rsi+0x18],0x0
  414d6e:	pop    rbx
  414d6f:	pop    rsi
  414d70:	pop    rdi
  414d71:	pop    rbp
  414d72:	ret    
  414d73:	cmp    rbx,rdi
  414d76:	mov    rdx,r10
  414d79:	mov    rax,rdi
  414d7c:	jbe    0x414d60
  414d7e:	xchg   ax,ax
  414d80:	add    rax,0x4
  414d84:	mov    r8d,DWORD PTR [rax-0x4]
  414d88:	add    rdx,0x4
  414d8c:	cmp    rbx,rax
  414d8f:	mov    DWORD PTR [rdx-0x4],r8d
  414d93:	ja     0x414d80
  414d95:	not    rdi
  414d98:	lea    rax,[rdi+rbx*1]
  414d9c:	shr    rax,0x2
  414da0:	lea    rax,[rax*4+0x4]
  414da8:	shr    rax,0x2
  414dac:	test   eax,eax
  414dae:	mov    DWORD PTR [rsi+0x14],eax
  414db1:	je     0x414d67
  414db3:	pop    rbx
  414db4:	pop    rsi
  414db5:	pop    rdi
  414db6:	pop    rbp
  414db7:	ret    
  414db8:	mov    rax,r10
  414dbb:	jmp    0x414d44
  414dbd:	nop    DWORD PTR [rax]
  414dc0:	movsxd rax,DWORD PTR [rcx+0x14]
  414dc4:	lea    rdx,[rcx+0x18]
  414dc8:	lea    r8,[rdx+rax*4]
  414dcc:	cmp    rdx,r8
  414dcf:	jae    0x414dfb
  414dd1:	mov    ecx,DWORD PTR [rcx+0x18]
  414dd4:	xor    eax,eax
  414dd6:	test   ecx,ecx
  414dd8:	je     0x414de6
  414dda:	jmp    0x414df4
  414ddc:	nop    DWORD PTR [rax+0x0]
  414de0:	mov    ecx,DWORD PTR [rdx]
  414de2:	test   ecx,ecx
  414de4:	jne    0x414df4
  414de6:	add    rdx,0x4
  414dea:	add    eax,0x20
  414ded:	cmp    r8,rdx
  414df0:	ja     0x414de0
  414df2:	repz ret 
  414df4:	tzcnt  ecx,ecx
  414df8:	add    eax,ecx
  414dfa:	ret    
  414dfb:	xor    eax,eax
  414dfd:	ret    
  414dfe:	nop
  414dff:	nop
  414e00:	lea    r8,[rip+0x1af87]        # 0x42fd8e
  414e07:	lea    rdx,[rip+0x1f6f2]        # 0x434500
  414e0e:	mov    ecx,0x10
  414e13:	mov    eax,0x30
  414e18:	nop    DWORD PTR [rax+rax*1+0x0]
  414e20:	mov    BYTE PTR [rdx+rax*1],cl
  414e23:	movzx  eax,BYTE PTR [r8+0x1]
  414e28:	add    ecx,0x1
  414e2b:	add    r8,0x1
  414e2f:	test   al,al
  414e31:	jne    0x414e20
  414e33:	lea    r8,[rip+0x1af4d]        # 0x42fd87
  414e3a:	mov    ecx,0x1a
  414e3f:	mov    eax,0x61
  414e44:	mov    BYTE PTR [rdx+rax*1],cl
  414e47:	movzx  eax,BYTE PTR [r8+0x1]
  414e4c:	add    ecx,0x1
  414e4f:	add    r8,0x1
  414e53:	test   al,al
  414e55:	jne    0x414e44
  414e57:	lea    r8,[rip+0x1af22]        # 0x42fd80
  414e5e:	mov    ecx,0x1a
  414e63:	mov    eax,0x41
  414e68:	nop    DWORD PTR [rax+rax*1+0x0]
  414e70:	mov    BYTE PTR [rdx+rax*1],cl
  414e73:	movzx  eax,BYTE PTR [r8+0x1]
  414e78:	add    ecx,0x1
  414e7b:	add    r8,0x1
  414e7f:	test   al,al
  414e81:	jne    0x414e70
  414e83:	ret    
  414e84:	nop
  414e85:	nop
  414e86:	nop
  414e87:	nop
  414e88:	nop
  414e89:	nop
  414e8a:	nop
  414e8b:	nop
  414e8c:	nop
  414e8d:	nop
  414e8e:	nop
  414e8f:	nop
  414e90:	push   r15
  414e92:	push   r14
  414e94:	push   r13
  414e96:	push   r12
  414e98:	push   rbp
  414e99:	push   rdi
  414e9a:	push   rsi
  414e9b:	push   rbx
  414e9c:	sub    rsp,0x48
  414ea0:	mov    r14,QWORD PTR [rip+0x1b109]        # 0x42ffb0
  414ea7:	mov    QWORD PTR [rsp+0x90],rcx
  414eaf:	cmp    BYTE PTR [r14+0x30],0x0
  414eb4:	je     0x415186
  414eba:	mov    eax,DWORD PTR [rdx]
  414ebc:	mov    edx,eax
  414ebe:	sar    edx,0x5
  414ec1:	and    eax,0x1f
  414ec4:	movsxd rdx,edx
  414ec7:	mov    DWORD PTR [rsp+0x3c],eax
  414ecb:	mov    rax,QWORD PTR [rsp+0x90]
  414ed3:	lea    rdi,[r8+rdx*4]
  414ed7:	lea    rdx,[rdi+0x4]
  414edb:	mov    rax,QWORD PTR [rax]
  414ede:	cmove  rdx,rdi
  414ee2:	mov    QWORD PTR [rsp+0x30],rdx
  414ee7:	lea    rsi,[rdx-0x4]
  414eeb:	mov    DWORD PTR [rdx-0x4],0x0
  414ef2:	jmp    0x414ef8
  414ef4:	add    rax,0x1
  414ef8:	movzx  edx,BYTE PTR [rax+0x1]
  414efc:	mov    ecx,edx
  414efe:	sub    edx,0x1
  414f01:	cmp    edx,0x1f
  414f04:	jbe    0x414ef4
  414f06:	cmp    cl,0x30
  414f09:	je     0x4151a4
  414f0f:	movzx  edx,BYTE PTR [rax+0x1]
  414f13:	xor    r9d,r9d
  414f16:	xor    r15d,r15d
  414f19:	xor    r12d,r12d
  414f1c:	test   edx,edx
  414f1e:	mov    rbp,rsi
  414f21:	mov    r11,rsi
  414f24:	lea    rbx,[rax+0x1]
  414f28:	je     0x414fd0
  414f2e:	xchg   ax,ax
  414f30:	mov    ecx,edx
  414f32:	movzx  ecx,BYTE PTR [r14+rcx*1]
  414f37:	test   cl,cl
  414f39:	jne    0x4150a4
  414f3f:	cmp    edx,0x20
  414f42:	ja     0x415155
  414f48:	cmp    r12d,r15d
  414f4b:	jle    0x4150e5
  414f51:	cmp    r9d,0x7
  414f55:	jg     0x414faa
  414f57:	cmp    r11,rbp
  414f5a:	jae    0x414faa
  414f5c:	mov    edi,0x8
  414f61:	mov    edx,DWORD PTR [r11]
  414f64:	mov    r13d,0x20
  414f6a:	sub    edi,r9d
  414f6d:	mov    QWORD PTR [rsp+0x28],rax
  414f72:	mov    r9,r11
  414f75:	shl    edi,0x2
  414f78:	sub    r13d,edi
  414f7b:	nop    DWORD PTR [rax+rax*1+0x0]
  414f80:	mov    r10d,DWORD PTR [r9+0x4]
  414f84:	mov    ecx,r13d
  414f87:	add    r9,0x4
  414f8b:	mov    eax,r10d
  414f8e:	shl    eax,cl
  414f90:	mov    ecx,edi
  414f92:	or     edx,eax
  414f94:	mov    DWORD PTR [r9-0x4],edx
  414f98:	mov    edx,r10d
  414f9b:	shr    edx,cl
  414f9d:	mov    DWORD PTR [r9],edx
  414fa0:	cmp    rbp,r9
  414fa3:	ja     0x414f80
  414fa5:	mov    rax,QWORD PTR [rsp+0x28]
  414faa:	cmp    r11,r8
  414fad:	ja     0x4150d0
  414fb3:	mov    rax,rbx
  414fb6:	mov    r9d,0x8
  414fbc:	nop    DWORD PTR [rax+0x0]
  414fc0:	movzx  edx,BYTE PTR [rax+0x1]
  414fc4:	lea    rbx,[rax+0x1]
  414fc8:	test   edx,edx
  414fca:	jne    0x414f30
  414fd0:	test   r12d,r12d
  414fd3:	mov    eax,0x4
  414fd8:	je     0x415093
  414fde:	mov    r10,r11
  414fe1:	cmp    r9d,0x7
  414fe5:	jg     0x415033
  414fe7:	cmp    rbp,r11
  414fea:	jbe    0x415033
  414fec:	mov    edi,0x8
  414ff1:	mov    eax,DWORD PTR [r11]
  414ff4:	mov    r12d,0x20
  414ffa:	sub    edi,r9d
  414ffd:	mov    r9,r11
  415000:	shl    edi,0x2
  415003:	sub    r12d,edi
  415006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415010:	mov    ebx,DWORD PTR [r9+0x4]
  415014:	mov    ecx,r12d
  415017:	add    r9,0x4
  41501b:	mov    edx,ebx
  41501d:	shl    edx,cl
  41501f:	mov    ecx,edi
  415021:	or     eax,edx
  415023:	mov    DWORD PTR [r9-0x4],eax
  415027:	mov    eax,ebx
  415029:	shr    eax,cl
  41502b:	mov    DWORD PTR [r9],eax
  41502e:	cmp    rbp,r9
  415031:	ja     0x415010
  415033:	cmp    r8,r11
  415036:	jae    0x4151d4
  41503c:	mov    rax,r8
  41503f:	nop
  415040:	add    r10,0x4
  415044:	mov    edx,DWORD PTR [r10-0x4]
  415048:	add    rax,0x4
  41504c:	cmp    rsi,r10
  41504f:	mov    DWORD PTR [rax-0x4],edx
  415052:	jae    0x415040
  415054:	add    rax,0x4
  415058:	mov    DWORD PTR [rax-0x4],0x0
  41505f:	cmp    rsi,rax
  415062:	jae    0x415054
  415064:	mov    rax,QWORD PTR [rsp+0x30]
  415069:	mov    eax,DWORD PTR [rax-0x4]
  41506c:	test   eax,eax
  41506e:	je     0x415083
  415070:	jmp    0x4151ca
  415075:	sub    rsi,0x4
  415079:	mov    eax,DWORD PTR [rsi]
  41507b:	test   eax,eax
  41507d:	jne    0x4151ca
  415083:	cmp    r8,rsi
  415086:	jne    0x415075
  415088:	mov    DWORD PTR [rsi],0x1
  41508e:	mov    eax,0x5
  415093:	add    rsp,0x48
  415097:	pop    rbx
  415098:	pop    rsi
  415099:	pop    rdi
  41509a:	pop    rbp
  41509b:	pop    r12
  41509d:	pop    r13
  41509f:	pop    r14
  4150a1:	pop    r15
  4150a3:	ret    
  4150a4:	add    r9d,0x1
  4150a8:	add    r12d,0x1
  4150ac:	cmp    r9d,0x8
  4150b0:	jg     0x415130
  4150b2:	mov    eax,DWORD PTR [r11]
  4150b5:	shl    eax,0x4
  4150b8:	and    ecx,0xf
  4150bb:	or     ecx,eax
  4150bd:	mov    rax,rbx
  4150c0:	mov    DWORD PTR [r11],ecx
  4150c3:	jmp    0x414fc0
  4150c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4150d0:	lea    rbp,[r11-0x4]
  4150d4:	mov    DWORD PTR [r11-0x4],0x0
  4150dc:	mov    r15d,r12d
  4150df:	xor    r9d,r9d
  4150e2:	mov    r11,rbp
  4150e5:	movzx  edx,BYTE PTR [rax+0x2]
  4150e9:	mov    rax,rbx
  4150ec:	cmp    dl,0x20
  4150ef:	ja     0x4150fe
  4150f1:	add    rax,0x1
  4150f5:	movzx  edx,BYTE PTR [rax+0x1]
  4150f9:	cmp    dl,0x20
  4150fc:	jbe    0x4150f1
  4150fe:	cmp    dl,0x30
  415101:	jne    0x414fc0
  415107:	movzx  edx,BYTE PTR [rax+0x2]
  41510b:	and    edx,0xffffffdf
  41510e:	cmp    dl,0x58
  415111:	jne    0x414fc0
  415117:	cmp    BYTE PTR [rax+0x3],0x21
  41511b:	lea    rdx,[rax+0x2]
  41511f:	cmovae rax,rdx
  415123:	jmp    0x414fc0
  415128:	nop    DWORD PTR [rax+rax*1+0x0]
  415130:	cmp    r11,r8
  415133:	mov    rax,rbx
  415136:	jbe    0x414fc0
  41513c:	mov    DWORD PTR [r11-0x4],0x0
  415144:	xor    eax,eax
  415146:	sub    r11,0x4
  41514a:	mov    r9d,0x1
  415150:	jmp    0x4150b8
  415155:	cmp    edx,0x29
  415158:	mov    rcx,rbx
  41515b:	sete   dl
  41515e:	test   r12d,r12d
  415161:	je     0x415200
  415167:	test   dl,dl
  415169:	je     0x415204
  41516f:	mov    rbx,QWORD PTR [rsp+0x90]
  415177:	add    rax,0x2
  41517b:	mov    r10,r11
  41517e:	mov    QWORD PTR [rbx],rax
  415181:	jmp    0x414fe1
  415186:	mov    QWORD PTR [rsp+0x30],r8
  41518b:	mov    QWORD PTR [rsp+0x28],rdx
  415190:	call   0x414e00
  415195:	mov    r8,QWORD PTR [rsp+0x30]
  41519a:	mov    rdx,QWORD PTR [rsp+0x28]
  41519f:	jmp    0x414eba
  4151a4:	movzx  edx,BYTE PTR [rax+0x2]
  4151a8:	and    edx,0xffffffdf
  4151ab:	cmp    dl,0x58
  4151ae:	jne    0x414f0f
  4151b4:	movzx  edx,BYTE PTR [rax+0x3]
  4151b8:	cmp    dl,0x20
  4151bb:	jbe    0x414f0f
  4151c1:	add    rax,0x2
  4151c5:	jmp    0x414f13
  4151ca:	mov    eax,0x5
  4151cf:	jmp    0x415093
  4151d4:	mov    edx,DWORD PTR [rsp+0x3c]
  4151d8:	test   edx,edx
  4151da:	je     0x415064
  4151e0:	mov    ecx,0x20
  4151e5:	sub    ecx,DWORD PTR [rsp+0x3c]
  4151e9:	mov    rbx,QWORD PTR [rsp+0x30]
  4151ee:	mov    eax,0xffffffff
  4151f3:	shr    eax,cl
  4151f5:	and    eax,DWORD PTR [rbx-0x4]
  4151f8:	mov    DWORD PTR [rbx-0x4],eax
  4151fb:	jmp    0x41506c
  415200:	test   dl,dl
  415202:	jne    0x415222
  415204:	movsx  eax,BYTE PTR [rbx+0x1]
  415208:	lea    rcx,[rbx+0x1]
  41520c:	test   eax,eax
  41520e:	jne    0x41521d
  415210:	jmp    0x41523b
  415212:	add    rcx,0x1
  415216:	movsx  eax,BYTE PTR [rcx]
  415219:	test   eax,eax
  41521b:	je     0x41523b
  41521d:	cmp    eax,0x29
  415220:	jne    0x415212
  415222:	mov    rax,QWORD PTR [rsp+0x90]
  41522a:	add    rcx,0x1
  41522e:	mov    QWORD PTR [rax],rcx
  415231:	mov    eax,0x4
  415236:	jmp    0x415093
  41523b:	mov    al,0x4
  41523d:	jmp    0x415093
  415242:	nop
  415243:	nop
  415244:	nop
  415245:	nop
  415246:	nop
  415247:	nop
  415248:	nop
  415249:	nop
  41524a:	nop
  41524b:	nop
  41524c:	nop
  41524d:	nop
  41524e:	nop
  41524f:	nop
  415250:	push   rsi
  415251:	push   rbx
  415252:	sub    rsp,0x28
  415256:	mov    eax,DWORD PTR [rip+0x1f174]        # 0x4343d0
  41525c:	movsxd rsi,ecx
  41525f:	cmp    eax,0x2
  415262:	je     0x4152cd
  415264:	test   eax,eax
  415266:	je     0x415292
  415268:	cmp    eax,0x1
  41526b:	jne    0x41528b
  41526d:	mov    rbx,QWORD PTR [rip+0x204d4]        # 0x435748
  415274:	mov    ecx,0x1
  415279:	call   rbx
  41527b:	mov    eax,DWORD PTR [rip+0x1f14f]        # 0x4343d0
  415281:	cmp    eax,0x1
  415284:	je     0x415274
  415286:	cmp    eax,0x2
  415289:	je     0x4152cd
  41528b:	add    rsp,0x28
  41528f:	pop    rbx
  415290:	pop    rsi
  415291:	ret    
  415292:	mov    al,0x1
  415294:	xchg   DWORD PTR [rip+0x1f136],eax        # 0x4343d0
  41529a:	test   eax,eax
  41529c:	jne    0x4152f0
  41529e:	lea    rcx,[rip+0x1f15b]        # 0x434400
  4152a5:	mov    rbx,QWORD PTR [rip+0x20444]        # 0x4356f0
  4152ac:	call   rbx
  4152ae:	lea    rcx,[rip+0x1f173]        # 0x434428
  4152b5:	call   rbx
  4152b7:	lea    rcx,[rip+0x62]        # 0x415320
  4152be:	call   0x410430
  4152c3:	mov    DWORD PTR [rip+0x1f103],0x2        # 0x4343d0
  4152cd:	lea    rdx,[rsi+rsi*4]
  4152d1:	lea    rax,[rip+0x1f128]        # 0x434400
  4152d8:	lea    rcx,[rax+rdx*8]
  4152dc:	mov    rax,QWORD PTR [rip+0x20375]        # 0x435658
  4152e3:	add    rsp,0x28
  4152e7:	pop    rbx
  4152e8:	pop    rsi
  4152e9:	rex.W jmp rax
  4152ec:	nop    DWORD PTR [rax+0x0]
  4152f0:	cmp    eax,0x2
  4152f3:	je     0x415310
  4152f5:	mov    eax,DWORD PTR [rip+0x1f0d5]        # 0x4343d0
  4152fb:	cmp    eax,0x1
  4152fe:	je     0x41526d
  415304:	jmp    0x415286
  415306:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415310:	mov    DWORD PTR [rip+0x1f0b6],0x2        # 0x4343d0
  41531a:	jmp    0x4152cd
  41531c:	nop    DWORD PTR [rax+0x0]
  415320:	push   rbx
  415321:	sub    rsp,0x20
  415325:	mov    eax,0x3
  41532a:	xchg   DWORD PTR [rip+0x1f0a0],eax        # 0x4343d0
  415330:	cmp    eax,0x2
  415333:	je     0x415340
  415335:	add    rsp,0x20
  415339:	pop    rbx
  41533a:	ret    
  41533b:	nop    DWORD PTR [rax+rax*1+0x0]
  415340:	mov    rbx,QWORD PTR [rip+0x20309]        # 0x435650
  415347:	lea    rcx,[rip+0x1f0b2]        # 0x434400
  41534e:	call   rbx
  415350:	lea    rcx,[rip+0x1f0d1]        # 0x434428
  415357:	mov    rax,rbx
  41535a:	add    rsp,0x20
  41535e:	pop    rbx
  41535f:	rex.W jmp rax
  415362:	nop    DWORD PTR [rax+0x0]
  415366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415370:	push   rdi
  415371:	push   rsi
  415372:	push   rbx
  415373:	sub    rsp,0x20
  415377:	mov    ebx,ecx
  415379:	xor    ecx,ecx
  41537b:	call   0x415250
  415380:	cmp    ebx,0x9
  415383:	jg     0x4153c0
  415385:	lea    rdx,[rip+0x1eff4]        # 0x434380
  41538c:	movsxd rcx,ebx
  41538f:	mov    rdi,QWORD PTR [rdx+rcx*8]
  415393:	test   rdi,rdi
  415396:	je     0x415420
  41539c:	cmp    DWORD PTR [rip+0x1f02d],0x2        # 0x4343d0
  4153a3:	mov    r8,QWORD PTR [rdi]
  4153a6:	mov    QWORD PTR [rdx+rcx*8],r8
  4153aa:	jne    0x415406
  4153ac:	lea    rcx,[rip+0x1f04d]        # 0x434400
  4153b3:	call   QWORD PTR [rip+0x2033f]        # 0x4356f8
  4153b9:	jmp    0x415406
  4153bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4153c0:	mov    eax,0x1
  4153c5:	mov    ecx,ebx
  4153c7:	shl    eax,cl
  4153c9:	mov    esi,eax
  4153cb:	lea    eax,[rax-0x1]
  4153ce:	cdqe   
  4153d0:	lea    rdx,[rax*4+0x27]
  4153d8:	shr    rdx,0x3
  4153dc:	mov    edx,edx
  4153de:	lea    rcx,[rdx*8+0x0]
  4153e6:	call   0x4161d0
  4153eb:	test   rax,rax
  4153ee:	mov    rdi,rax
  4153f1:	je     0x41547a
  4153f7:	cmp    DWORD PTR [rip+0x1efd2],0x2        # 0x4343d0
  4153fe:	mov    DWORD PTR [rdi+0x8],ebx
  415401:	mov    DWORD PTR [rdi+0xc],esi
  415404:	je     0x4153ac
  415406:	mov    DWORD PTR [rdi+0x14],0x0
  41540d:	mov    DWORD PTR [rdi+0x10],0x0
  415414:	mov    rax,rdi
  415417:	add    rsp,0x20
  41541b:	pop    rbx
  41541c:	pop    rsi
  41541d:	pop    rdi
  41541e:	ret    
  41541f:	nop
  415420:	mov    ecx,ebx
  415422:	mov    eax,0x1
  415427:	mov    rdi,QWORD PTR [rip+0x1c52]        # 0x417080
  41542e:	shl    eax,cl
  415430:	lea    rcx,[rip+0x1e649]        # 0x433a80
  415437:	lea    edx,[rax-0x1]
  41543a:	mov    esi,eax
  41543c:	mov    rax,rdi
  41543f:	movsxd rdx,edx
  415442:	sub    rax,rcx
  415445:	lea    rdx,[rdx*4+0x27]
  41544d:	mov    rcx,rax
  415450:	sar    rcx,0x3
  415454:	shr    rdx,0x3
  415458:	mov    edx,edx
  41545a:	add    rcx,rdx
  41545d:	cmp    rcx,0x120
  415464:	ja     0x4153de
  41546a:	lea    rdx,[rdi+rdx*8]
  41546e:	mov    QWORD PTR [rip+0x1c0b],rdx        # 0x417080
  415475:	jmp    0x4153f7
  41547a:	xor    eax,eax
  41547c:	jmp    0x415417
  41547e:	xchg   ax,ax
  415480:	push   rbx
  415481:	sub    rsp,0x20
  415485:	test   rcx,rcx
  415488:	je     0x4154b9
  41548a:	cmp    DWORD PTR [rcx+0x8],0x9
  41548e:	jg     0x4154c0
  415490:	mov    rbx,rcx
  415493:	xor    ecx,ecx
  415495:	call   0x415250
  41549a:	movsxd rdx,DWORD PTR [rbx+0x8]
  41549e:	lea    rax,[rip+0x1eedb]        # 0x434380
  4154a5:	cmp    DWORD PTR [rip+0x1ef24],0x2        # 0x4343d0
  4154ac:	mov    rcx,QWORD PTR [rax+rdx*8]
  4154b0:	mov    QWORD PTR [rax+rdx*8],rbx
  4154b4:	mov    QWORD PTR [rbx],rcx
  4154b7:	je     0x4154d0
  4154b9:	add    rsp,0x20
  4154bd:	pop    rbx
  4154be:	ret    
  4154bf:	nop
  4154c0:	add    rsp,0x20
  4154c4:	pop    rbx
  4154c5:	jmp    0x416220
  4154ca:	nop    WORD PTR [rax+rax*1+0x0]
  4154d0:	mov    rax,QWORD PTR [rip+0x20221]        # 0x4356f8
  4154d7:	lea    rcx,[rip+0x1ef22]        # 0x434400
  4154de:	add    rsp,0x20
  4154e2:	pop    rbx
  4154e3:	rex.W jmp rax
  4154e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4154f0:	push   rbp
  4154f1:	push   rdi
  4154f2:	push   rsi
  4154f3:	push   rbx
  4154f4:	sub    rsp,0x28
  4154f8:	mov    esi,DWORD PTR [rcx+0x14]
  4154fb:	xor    r9d,r9d
  4154fe:	lea    r10,[rcx+0x18]
  415502:	mov    rdi,rcx
  415505:	movsxd rbx,r8d
  415508:	movsxd rdx,edx
  41550b:	nop    DWORD PTR [rax+rax*1+0x0]
  415510:	mov    eax,DWORD PTR [r10+r9*4]
  415514:	imul   rax,rdx
  415518:	add    rax,rbx
  41551b:	mov    rbx,rax
  41551e:	mov    DWORD PTR [r10+r9*4],eax
  415522:	add    r9,0x1
  415526:	shr    rbx,0x20
  41552a:	cmp    esi,r9d
  41552d:	jg     0x415510
  41552f:	test   rbx,rbx
  415532:	mov    rax,rdi
  415535:	je     0x41554c
  415537:	cmp    esi,DWORD PTR [rdi+0xc]
  41553a:	jge    0x415555
  41553c:	movsxd rax,esi
  41553f:	add    esi,0x1
  415542:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  415546:	mov    DWORD PTR [rdi+0x14],esi
  415549:	mov    rax,rdi
  41554c:	add    rsp,0x28
  415550:	pop    rbx
  415551:	pop    rsi
  415552:	pop    rdi
  415553:	pop    rbp
  415554:	ret    
  415555:	mov    eax,DWORD PTR [rdi+0x8]
  415558:	lea    ecx,[rax+0x1]
  41555b:	call   0x415370
  415560:	test   rax,rax
  415563:	mov    rbp,rax
  415566:	je     0x41559e
  415568:	lea    rcx,[rax+0x10]
  41556c:	movsxd rax,DWORD PTR [rdi+0x14]
  415570:	lea    rdx,[rdi+0x10]
  415574:	lea    r8,[rax*4+0x8]
  41557c:	call   0x4161b8
  415581:	mov    rcx,rdi
  415584:	mov    rdi,rbp
  415587:	call   0x415480
  41558c:	movsxd rax,esi
  41558f:	add    esi,0x1
  415592:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  415596:	mov    DWORD PTR [rdi+0x14],esi
  415599:	mov    rax,rdi
  41559c:	jmp    0x41554c
  41559e:	xor    eax,eax
  4155a0:	jmp    0x41554c
  4155a2:	nop    DWORD PTR [rax+0x0]
  4155a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4155b0:	push   rbx
  4155b1:	sub    rsp,0x20
  4155b5:	mov    ebx,ecx
  4155b7:	mov    ecx,0x1
  4155bc:	call   0x415370
  4155c1:	test   rax,rax
  4155c4:	je     0x4155d0
  4155c6:	mov    DWORD PTR [rax+0x18],ebx
  4155c9:	mov    DWORD PTR [rax+0x14],0x1
  4155d0:	add    rsp,0x20
  4155d4:	pop    rbx
  4155d5:	ret    
  4155d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4155e0:	push   r14
  4155e2:	push   r13
  4155e4:	push   r12
  4155e6:	push   rbp
  4155e7:	push   rdi
  4155e8:	push   rsi
  4155e9:	push   rbx
  4155ea:	sub    rsp,0x20
  4155ee:	movsxd r13,DWORD PTR [rcx+0x14]
  4155f2:	movsxd rbx,DWORD PTR [rdx+0x14]
  4155f6:	mov    r12,rcx
  4155f9:	mov    r14,rdx
  4155fc:	cmp    r13d,ebx
  4155ff:	jl     0x415701
  415605:	mov    eax,ebx
  415607:	movsxd rbx,r13d
  41560a:	movsxd r13,eax
  41560d:	xor    eax,eax
  41560f:	lea    esi,[rbx+r13*1]
  415613:	cmp    esi,DWORD PTR [r12+0xc]
  415618:	setg   al
  41561b:	add    eax,DWORD PTR [r12+0x8]
  415620:	mov    ecx,eax
  415622:	call   0x415370
  415627:	test   rax,rax
  41562a:	je     0x41570c
  415630:	lea    rdi,[rax+0x18]
  415634:	movsxd rdx,esi
  415637:	lea    rbp,[rdi+rdx*4]
  41563b:	mov    r8,rdi
  41563e:	cmp    rdi,rbp
  415641:	jae    0x415653
  415643:	mov    DWORD PTR [r8],0x0
  41564a:	add    r8,0x4
  41564e:	cmp    rbp,r8
  415651:	ja     0x415643
  415653:	lea    rdx,[r14+0x18]
  415657:	add    r12,0x18
  41565b:	lea    rbx,[r12+rbx*4]
  41565f:	lea    r13,[rdx+r13*4]
  415663:	cmp    rdx,r13
  415666:	jae    0x4156c9
  415668:	nop    DWORD PTR [rax+rax*1+0x0]
  415670:	add    rdx,0x4
  415674:	mov    r11d,DWORD PTR [rdx-0x4]
  415678:	test   r11d,r11d
  41567b:	je     0x4156c0
  41567d:	mov    r9,rdi
  415680:	mov    r8,r12
  415683:	xor    r10d,r10d
  415686:	jmp    0x415693
  415688:	nop    DWORD PTR [rax+rax*1+0x0]
  415690:	mov    r9,r14
  415693:	add    r8,0x4
  415697:	mov    ecx,DWORD PTR [r8-0x4]
  41569b:	mov    r14d,DWORD PTR [r9]
  41569e:	imul   rcx,r11
  4156a2:	add    rcx,r14
  4156a5:	lea    r14,[r9+0x4]
  4156a9:	add    rcx,r10
  4156ac:	mov    r10,rcx
  4156af:	mov    DWORD PTR [r14-0x4],ecx
  4156b3:	shr    r10,0x20
  4156b7:	cmp    rbx,r8
  4156ba:	ja     0x415690
  4156bc:	mov    DWORD PTR [r9+0x4],r10d
  4156c0:	add    rdi,0x4
  4156c4:	cmp    r13,rdx
  4156c7:	ja     0x415670
  4156c9:	test   esi,esi
  4156cb:	jle    0x4156ef
  4156cd:	mov    r8d,DWORD PTR [rbp-0x4]
  4156d1:	lea    rdx,[rbp-0x4]
  4156d5:	test   r8d,r8d
  4156d8:	je     0x4156ea
  4156da:	jmp    0x4156ef
  4156dc:	nop    DWORD PTR [rax+0x0]
  4156e0:	sub    rdx,0x4
  4156e4:	mov    ecx,DWORD PTR [rdx]
  4156e6:	test   ecx,ecx
  4156e8:	jne    0x4156ef
  4156ea:	sub    esi,0x1
  4156ed:	jne    0x4156e0
  4156ef:	mov    DWORD PTR [rax+0x14],esi
  4156f2:	add    rsp,0x20
  4156f6:	pop    rbx
  4156f7:	pop    rsi
  4156f8:	pop    rdi
  4156f9:	pop    rbp
  4156fa:	pop    r12
  4156fc:	pop    r13
  4156fe:	pop    r14
  415700:	ret    
  415701:	mov    r12,rdx
  415704:	mov    r14,rcx
  415707:	jmp    0x41560d
  41570c:	xor    eax,eax
  41570e:	jmp    0x4156f2
  415710:	push   rbp
  415711:	push   rdi
  415712:	push   rsi
  415713:	push   rbx
  415714:	sub    rsp,0x28
  415718:	mov    eax,edx
  41571a:	mov    rbp,rcx
  41571d:	mov    ebx,edx
  41571f:	and    eax,0x3
  415722:	jne    0x4157b0
  415728:	sar    ebx,0x2
  41572b:	mov    rax,rbp
  41572e:	test   ebx,ebx
  415730:	je     0x41577c
  415732:	mov    rdi,QWORD PTR [rip+0x1e307]        # 0x433a40
  415739:	test   rdi,rdi
  41573c:	jne    0x415752
  41573e:	jmp    0x4157fd
  415743:	sar    ebx,1
  415745:	je     0x415779
  415747:	mov    rsi,QWORD PTR [rdi]
  41574a:	test   rsi,rsi
  41574d:	je     0x415785
  41574f:	mov    rdi,rsi
  415752:	test   bl,0x1
  415755:	je     0x415743
  415757:	mov    rdx,rdi
  41575a:	mov    rcx,rbp
  41575d:	call   0x4155e0
  415762:	test   rax,rax
  415765:	mov    rsi,rax
  415768:	je     0x4157d3
  41576a:	mov    rcx,rbp
  41576d:	mov    rbp,rsi
  415770:	call   0x415480
  415775:	sar    ebx,1
  415777:	jne    0x415747
  415779:	mov    rax,rbp
  41577c:	add    rsp,0x28
  415780:	pop    rbx
  415781:	pop    rsi
  415782:	pop    rdi
  415783:	pop    rbp
  415784:	ret    
  415785:	mov    ecx,0x1
  41578a:	call   0x415250
  41578f:	mov    rsi,QWORD PTR [rdi]
  415792:	test   rsi,rsi
  415795:	je     0x4157de
  415797:	cmp    DWORD PTR [rip+0x1ec32],0x2        # 0x4343d0
  41579e:	jne    0x41574f
  4157a0:	lea    rcx,[rip+0x1ec81]        # 0x434428
  4157a7:	call   QWORD PTR [rip+0x1ff4b]        # 0x4356f8
  4157ad:	jmp    0x41574f
  4157af:	nop
  4157b0:	sub    eax,0x1
  4157b3:	lea    rdx,[rip+0x1a606]        # 0x42fdc0
  4157ba:	xor    r8d,r8d
  4157bd:	cdqe   
  4157bf:	mov    edx,DWORD PTR [rdx+rax*4]
  4157c2:	call   0x4154f0
  4157c7:	test   rax,rax
  4157ca:	mov    rbp,rax
  4157cd:	jne    0x415728
  4157d3:	xor    eax,eax
  4157d5:	add    rsp,0x28
  4157d9:	pop    rbx
  4157da:	pop    rsi
  4157db:	pop    rdi
  4157dc:	pop    rbp
  4157dd:	ret    
  4157de:	mov    rdx,rdi
  4157e1:	mov    rcx,rdi
  4157e4:	call   0x4155e0
  4157e9:	test   rax,rax
  4157ec:	mov    rsi,rax
  4157ef:	mov    QWORD PTR [rdi],rax
  4157f2:	je     0x4157d3
  4157f4:	mov    QWORD PTR [rax],0x0
  4157fb:	jmp    0x415797
  4157fd:	mov    ecx,0x1
  415802:	call   0x415250
  415807:	mov    rdi,QWORD PTR [rip+0x1e232]        # 0x433a40
  41580e:	test   rdi,rdi
  415811:	je     0x415832
  415813:	cmp    DWORD PTR [rip+0x1ebb6],0x2        # 0x4343d0
  41581a:	jne    0x415752
  415820:	lea    rcx,[rip+0x1ec01]        # 0x434428
  415827:	call   QWORD PTR [rip+0x1fecb]        # 0x4356f8
  41582d:	jmp    0x415752
  415832:	mov    ecx,0x1
  415837:	call   0x415370
  41583c:	test   rax,rax
  41583f:	mov    rdi,rax
  415842:	je     0x415862
  415844:	mov    DWORD PTR [rax+0x18],0x271
  41584b:	mov    DWORD PTR [rax+0x14],0x1
  415852:	mov    QWORD PTR [rip+0x1e1e7],rax        # 0x433a40
  415859:	mov    QWORD PTR [rax],0x0
  415860:	jmp    0x415813
  415862:	mov    QWORD PTR [rip+0x1e1d3],0x0        # 0x433a40
  41586d:	xor    eax,eax
  41586f:	jmp    0x4157d5
  415874:	xchg   ax,ax
  415876:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415880:	push   r13
  415882:	push   r12
  415884:	push   rbp
  415885:	push   rdi
  415886:	push   rsi
  415887:	push   rbx
  415888:	sub    rsp,0x28
  41588c:	mov    rdi,rcx
  41588f:	mov    ebp,edx
  415891:	mov    esi,edx
  415893:	mov    r12d,DWORD PTR [rdi+0x14]
  415897:	sar    ebp,0x5
  41589a:	mov    eax,DWORD PTR [rdi+0xc]
  41589d:	mov    ecx,DWORD PTR [rcx+0x8]
  4158a0:	add    r12d,ebp
  4158a3:	lea    ebx,[r12+0x1]
  4158a8:	cmp    ebx,eax
  4158aa:	jle    0x4158b9
  4158ac:	nop    DWORD PTR [rax+0x0]
  4158b0:	add    eax,eax
  4158b2:	add    ecx,0x1
  4158b5:	cmp    ebx,eax
  4158b7:	jg     0x4158b0
  4158b9:	call   0x415370
  4158be:	test   rax,rax
  4158c1:	mov    r13,rax
  4158c4:	je     0x41598f
  4158ca:	test   ebp,ebp
  4158cc:	lea    r8,[rax+0x18]
  4158d0:	jle    0x415987
  4158d6:	lea    eax,[rbp-0x1]
  4158d9:	lea    r9,[r8+rax*4+0x4]
  4158de:	xchg   ax,ax
  4158e0:	add    r8,0x4
  4158e4:	mov    DWORD PTR [r8-0x4],0x0
  4158ec:	cmp    r8,r9
  4158ef:	jne    0x4158e0
  4158f1:	movsxd rax,DWORD PTR [rdi+0x14]
  4158f5:	lea    r8,[rdi+0x18]
  4158f9:	mov    edx,esi
  4158fb:	and    edx,0x1f
  4158fe:	lea    rbp,[r8+rax*4]
  415902:	je     0x415970
  415904:	mov    eax,0x20
  415909:	xor    r11d,r11d
  41590c:	sub    eax,edx
  41590e:	jmp    0x415913
  415910:	mov    r9,rsi
  415913:	mov    r10d,DWORD PTR [r8]
  415916:	mov    ecx,edx
  415918:	lea    rsi,[r9+0x4]
  41591c:	add    r8,0x4
  415920:	shl    r10d,cl
  415923:	mov    ecx,eax
  415925:	or     r10d,r11d
  415928:	mov    DWORD PTR [rsi-0x4],r10d
  41592c:	mov    r11d,DWORD PTR [r8-0x4]
  415930:	shr    r11d,cl
  415933:	cmp    rbp,r8
  415936:	ja     0x415910
  415938:	add    r12d,0x2
  41593c:	test   r11d,r11d
  41593f:	mov    DWORD PTR [r9+0x4],r11d
  415943:	cmovne ebx,r12d
  415947:	sub    ebx,0x1
  41594a:	mov    rcx,rdi
  41594d:	mov    DWORD PTR [r13+0x14],ebx
  415951:	call   0x415480
  415956:	mov    rax,r13
  415959:	add    rsp,0x28
  41595d:	pop    rbx
  41595e:	pop    rsi
  41595f:	pop    rdi
  415960:	pop    rbp
  415961:	pop    r12
  415963:	pop    r13
  415965:	ret    
  415966:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415970:	add    r8,0x4
  415974:	mov    edx,DWORD PTR [r8-0x4]
  415978:	add    r9,0x4
  41597c:	cmp    rbp,r8
  41597f:	mov    DWORD PTR [r9-0x4],edx
  415983:	ja     0x415970
  415985:	jmp    0x415947
  415987:	mov    r9,r8
  41598a:	jmp    0x4158f1
  41598f:	xor    eax,eax
  415991:	jmp    0x415959
  415993:	nop    DWORD PTR [rax]
  415996:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4159a0:	movsxd r8,DWORD PTR [rdx+0x14]
  4159a4:	mov    eax,DWORD PTR [rcx+0x14]
  4159a7:	sub    eax,r8d
  4159aa:	test   eax,eax
  4159ac:	jne    0x4159e2
  4159ae:	shl    r8,0x2
  4159b2:	add    rcx,0x18
  4159b6:	lea    rax,[rcx+r8*1]
  4159ba:	lea    rdx,[rdx+r8*1+0x18]
  4159bf:	jmp    0x4159c6
  4159c1:	cmp    rcx,rax
  4159c4:	jae    0x4159e0
  4159c6:	sub    rdx,0x4
  4159ca:	sub    rax,0x4
  4159ce:	mov    r9d,DWORD PTR [rdx]
  4159d1:	cmp    DWORD PTR [rax],r9d
  4159d4:	je     0x4159c1
  4159d6:	sbb    eax,eax
  4159d8:	or     eax,0x1
  4159db:	ret    
  4159dc:	nop    DWORD PTR [rax+0x0]
  4159e0:	xor    eax,eax
  4159e2:	repz ret 
  4159e4:	xchg   ax,ax
  4159e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4159f0:	push   rdi
  4159f1:	push   rsi
  4159f2:	push   rbx
  4159f3:	sub    rsp,0x20
  4159f7:	mov    rsi,rcx
  4159fa:	mov    rdi,rdx
  4159fd:	call   0x4159a0
  415a02:	test   eax,eax
  415a04:	je     0x415af0
  415a0a:	mov    ebx,0x0
  415a0f:	js     0x415b12
  415a15:	mov    ecx,DWORD PTR [rsi+0x8]
  415a18:	call   0x415370
  415a1d:	test   rax,rax
  415a20:	je     0x415b22
  415a26:	movsxd rdx,DWORD PTR [rsi+0x14]
  415a2a:	lea    rcx,[rsi+0x18]
  415a2e:	mov    DWORD PTR [rax+0x10],ebx
  415a31:	lea    r10,[rdi+0x18]
  415a35:	xor    r9d,r9d
  415a38:	mov    rbx,rdx
  415a3b:	lea    rsi,[rcx+rdx*4]
  415a3f:	movsxd rdx,DWORD PTR [rdi+0x14]
  415a43:	lea    rdi,[r10+rdx*4]
  415a47:	lea    rdx,[rax+0x18]
  415a4b:	nop    DWORD PTR [rax+rax*1+0x0]
  415a50:	add    rcx,0x4
  415a54:	add    r10,0x4
  415a58:	mov    r11d,DWORD PTR [r10-0x4]
  415a5c:	mov    r8d,DWORD PTR [rcx-0x4]
  415a60:	add    rdx,0x4
  415a64:	sub    r8,r11
  415a67:	sub    r8,r9
  415a6a:	mov    r9,r8
  415a6d:	mov    r11d,r8d
  415a70:	mov    DWORD PTR [rdx-0x4],r8d
  415a74:	shr    r9,0x20
  415a78:	and    r9d,0x1
  415a7c:	cmp    rdi,r10
  415a7f:	ja     0x415a50
  415a81:	cmp    rsi,rcx
  415a84:	mov    rdi,rdx
  415a87:	mov    r10,rcx
  415a8a:	jbe    0x415ac6
  415a8c:	nop    DWORD PTR [rax+0x0]
  415a90:	add    rcx,0x4
  415a94:	mov    r8d,DWORD PTR [rcx-0x4]
  415a98:	add    rdx,0x4
  415a9c:	sub    r8,r9
  415a9f:	mov    r9,r8
  415aa2:	mov    r11d,r8d
  415aa5:	mov    DWORD PTR [rdx-0x4],r8d
  415aa9:	shr    r9,0x20
  415aad:	and    r9d,0x1
  415ab1:	cmp    rsi,rcx
  415ab4:	ja     0x415a90
  415ab6:	not    r10
  415ab9:	lea    rdx,[r10+rsi*1]
  415abd:	shr    rdx,0x2
  415ac1:	lea    rdx,[rdi+rdx*4+0x4]
  415ac6:	sub    rdx,0x4
  415aca:	test   r11d,r11d
  415acd:	jne    0x415add
  415acf:	nop
  415ad0:	sub    rdx,0x4
  415ad4:	mov    ecx,DWORD PTR [rdx]
  415ad6:	sub    ebx,0x1
  415ad9:	test   ecx,ecx
  415adb:	je     0x415ad0
  415add:	mov    DWORD PTR [rax+0x14],ebx
  415ae0:	add    rsp,0x20
  415ae4:	pop    rbx
  415ae5:	pop    rsi
  415ae6:	pop    rdi
  415ae7:	ret    
  415ae8:	nop    DWORD PTR [rax+rax*1+0x0]
  415af0:	xor    ecx,ecx
  415af2:	call   0x415370
  415af7:	test   rax,rax
  415afa:	je     0x415b22
  415afc:	mov    DWORD PTR [rax+0x14],0x1
  415b03:	mov    DWORD PTR [rax+0x18],0x0
  415b0a:	add    rsp,0x20
  415b0e:	pop    rbx
  415b0f:	pop    rsi
  415b10:	pop    rdi
  415b11:	ret    
  415b12:	mov    rax,rsi
  415b15:	mov    bl,0x1
  415b17:	mov    rsi,rdi
  415b1a:	mov    rdi,rax
  415b1d:	jmp    0x415a15
  415b22:	xor    eax,eax
  415b24:	jmp    0x415ae0
  415b26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415b30:	push   rsi
  415b31:	push   rbx
  415b32:	sub    rsp,0x18
  415b36:	movsxd rax,DWORD PTR [rcx+0x14]
  415b3a:	lea    r10,[rcx+0x18]
  415b3e:	mov    ecx,0x20
  415b43:	lea    r9,[r10+rax*4]
  415b47:	mov    eax,DWORD PTR [r9-0x4]
  415b4b:	lea    rbx,[r9-0x4]
  415b4f:	bsr    r8d,eax
  415b53:	xor    r8d,0x1f
  415b57:	sub    ecx,r8d
  415b5a:	cmp    r8d,0xa
  415b5e:	mov    DWORD PTR [rdx],ecx
  415b60:	jg     0x415bb0
  415b62:	mov    ecx,0xb
  415b67:	mov    r11d,eax
  415b6a:	xor    esi,esi
  415b6c:	sub    ecx,r8d
  415b6f:	shr    r11d,cl
  415b72:	or     r11d,0x3ff00000
  415b79:	shl    r11,0x20
  415b7d:	cmp    r10,rbx
  415b80:	jae    0x415b88
  415b82:	mov    esi,DWORD PTR [r9-0x8]
  415b86:	shr    esi,cl
  415b88:	lea    ecx,[r8+0x15]
  415b8c:	shl    eax,cl
  415b8e:	mov    edx,eax
  415b90:	mov    eax,esi
  415b92:	or     eax,edx
  415b94:	or     rax,r11
  415b97:	mov    QWORD PTR [rsp+0x8],rax
  415b9c:	movsd  xmm0,QWORD PTR [rsp+0x8]
  415ba2:	add    rsp,0x18
  415ba6:	pop    rbx
  415ba7:	pop    rsi
  415ba8:	ret    
  415ba9:	nop    DWORD PTR [rax+0x0]
  415bb0:	cmp    r10,rbx
  415bb3:	jae    0x415c10
  415bb5:	mov    r11d,r8d
  415bb8:	lea    rsi,[r9-0x8]
  415bbc:	mov    edx,DWORD PTR [r9-0x8]
  415bc0:	sub    r11d,0xb
  415bc4:	je     0x415c32
  415bc6:	mov    ebx,0x2b
  415bcb:	mov    ecx,r11d
  415bce:	sub    ebx,r8d
  415bd1:	shl    eax,cl
  415bd3:	mov    r8d,edx
  415bd6:	mov    ecx,ebx
  415bd8:	shr    r8d,cl
  415bdb:	or     eax,r8d
  415bde:	xor    r8d,r8d
  415be1:	or     eax,0x3ff00000
  415be6:	shl    rax,0x20
  415bea:	cmp    r10,rsi
  415bed:	jae    0x415bf6
  415bef:	mov    r8d,DWORD PTR [r9-0xc]
  415bf3:	shr    r8d,cl
  415bf6:	mov    ecx,r11d
  415bf9:	shl    edx,cl
  415bfb:	or     r8d,edx
  415bfe:	movabs rdx,0xffffffff00000000
  415c08:	and    rax,rdx
  415c0b:	or     rax,r8
  415c0e:	jmp    0x415b97
  415c10:	mov    r11d,r8d
  415c13:	sub    r11d,0xb
  415c17:	je     0x415c30
  415c19:	mov    ecx,r11d
  415c1c:	xor    r8d,r8d
  415c1f:	xor    edx,edx
  415c21:	shl    eax,cl
  415c23:	or     eax,0x3ff00000
  415c28:	shl    rax,0x20
  415c2c:	jmp    0x415bf6
  415c2e:	xchg   ax,ax
  415c30:	xor    edx,edx
  415c32:	or     eax,0x3ff00000
  415c37:	shl    rax,0x20
  415c3b:	or     rax,rdx
  415c3e:	jmp    0x415b97
  415c43:	nop    DWORD PTR [rax]
  415c46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415c50:	push   rdi
  415c51:	push   rsi
  415c52:	push   rbx
  415c53:	sub    rsp,0x20
  415c57:	mov    ecx,0x1
  415c5c:	movq   rbx,xmm0
  415c61:	mov    rdi,rdx
  415c64:	mov    rsi,r8
  415c67:	call   0x415370
  415c6c:	test   rax,rax
  415c6f:	je     0x415d55
  415c75:	mov    r9,rbx
  415c78:	shr    r9,0x20
  415c7c:	mov    r10d,r9d
  415c7f:	and    r9d,0x7fffffff
  415c86:	and    r10d,0xfffff
  415c8d:	shr    r9d,0x14
  415c91:	mov    edx,r10d
  415c94:	or     edx,0x100000
  415c9a:	test   r9d,r9d
  415c9d:	cmovne r10d,edx
  415ca1:	test   ebx,ebx
  415ca3:	jne    0x415ce4
  415ca5:	xor    ecx,ecx
  415ca7:	mov    DWORD PTR [rax+0x14],0x1
  415cae:	mov    edx,0x1
  415cb3:	tzcnt  ecx,r10d
  415cb8:	shr    r10d,cl
  415cbb:	test   r9d,r9d
  415cbe:	lea    r11d,[rcx+0x20]
  415cc2:	mov    DWORD PTR [rax+0x18],r10d
  415cc6:	je     0x415d23
  415cc8:	lea    edx,[r11+r9*1-0x433]
  415cd0:	mov    DWORD PTR [rdi],edx
  415cd2:	mov    edx,0x35
  415cd7:	sub    edx,r11d
  415cda:	mov    DWORD PTR [rsi],edx
  415cdc:	add    rsp,0x20
  415ce0:	pop    rbx
  415ce1:	pop    rsi
  415ce2:	pop    rdi
  415ce3:	ret    
  415ce4:	xor    r11d,r11d
  415ce7:	tzcnt  r11d,ebx
  415cec:	mov    ecx,r11d
  415cef:	shr    ebx,cl
  415cf1:	test   r11d,r11d
  415cf4:	je     0x415d50
  415cf6:	mov    ecx,0x20
  415cfb:	mov    edx,r10d
  415cfe:	sub    ecx,r11d
  415d01:	shl    edx,cl
  415d03:	mov    ecx,r11d
  415d06:	or     ebx,edx
  415d08:	shr    r10d,cl
  415d0b:	mov    DWORD PTR [rax+0x18],ebx
  415d0e:	cmp    r10d,0x1
  415d12:	mov    DWORD PTR [rax+0x1c],r10d
  415d16:	sbb    edx,edx
  415d18:	add    edx,0x2
  415d1b:	test   r9d,r9d
  415d1e:	mov    DWORD PTR [rax+0x14],edx
  415d21:	jne    0x415cc8
  415d23:	movsxd rcx,edx
  415d26:	shl    edx,0x5
  415d29:	sub    r11d,0x432
  415d30:	bsr    ecx,DWORD PTR [rax+rcx*4+0x14]
  415d35:	mov    DWORD PTR [rdi],r11d
  415d38:	xor    ecx,0x1f
  415d3b:	sub    edx,ecx
  415d3d:	mov    DWORD PTR [rsi],edx
  415d3f:	add    rsp,0x20
  415d43:	pop    rbx
  415d44:	pop    rsi
  415d45:	pop    rdi
  415d46:	ret    
  415d47:	nop    WORD PTR [rax+rax*1+0x0]
  415d50:	mov    DWORD PTR [rax+0x18],ebx
  415d53:	jmp    0x415d0e
  415d55:	xor    eax,eax
  415d57:	jmp    0x415cdc
  415d59:	nop    DWORD PTR [rax+0x0]
  415d60:	mov    rax,rcx
  415d63:	lea    rcx,[rdx+0x1]
  415d67:	movzx  edx,BYTE PTR [rdx]
  415d6a:	test   dl,dl
  415d6c:	mov    BYTE PTR [rax],dl
  415d6e:	je     0x415d82
  415d70:	add    rcx,0x1
  415d74:	movzx  edx,BYTE PTR [rcx-0x1]
  415d78:	add    rax,0x1
  415d7c:	test   dl,dl
  415d7e:	mov    BYTE PTR [rax],dl
  415d80:	jne    0x415d70
  415d82:	repz ret 
  415d84:	nop
  415d85:	nop
  415d86:	nop
  415d87:	nop
  415d88:	nop
  415d89:	nop
  415d8a:	nop
  415d8b:	nop
  415d8c:	nop
  415d8d:	nop
  415d8e:	nop
  415d8f:	nop
  415d90:	push   r13
  415d92:	push   r12
  415d94:	push   rbp
  415d95:	push   rdi
  415d96:	push   rsi
  415d97:	push   rbx
  415d98:	sub    rsp,0x28
  415d9c:	mov    rsi,rcx
  415d9f:	lea    ecx,[r8+0x8]
  415da3:	mov    ebp,edx
  415da5:	mov    edx,0x38e38e39
  415daa:	mov    edi,r8d
  415dad:	mov    ebx,r9d
  415db0:	mov    eax,ecx
  415db2:	sar    ecx,0x1f
  415db5:	imul   edx
  415db7:	sar    edx,1
  415db9:	sub    edx,ecx
  415dbb:	cmp    edx,0x1
  415dbe:	jle    0x415e84
  415dc4:	mov    eax,0x1
  415dc9:	xor    ecx,ecx
  415dcb:	nop    DWORD PTR [rax+rax*1+0x0]
  415dd0:	add    eax,eax
  415dd2:	add    ecx,0x1
  415dd5:	cmp    edx,eax
  415dd7:	jg     0x415dd0
  415dd9:	call   0x415370
  415dde:	cmp    ebp,0x9
  415de1:	mov    DWORD PTR [rax+0x18],ebx
  415de4:	mov    DWORD PTR [rax+0x14],0x1
  415deb:	jle    0x415e70
  415df1:	lea    rbx,[rsi+0x9]
  415df5:	lea    r12d,[rbp-0xa]
  415df9:	lea    r13,[rsi+r12*1+0xa]
  415dfe:	mov    rsi,rbx
  415e01:	add    rsi,0x1
  415e05:	movsx  r8d,BYTE PTR [rsi-0x1]
  415e0a:	mov    edx,0xa
  415e0f:	mov    rcx,rax
  415e12:	sub    r8d,0x30
  415e16:	call   0x4154f0
  415e1b:	cmp    rsi,r13
  415e1e:	jne    0x415e01
  415e20:	movsxd rdx,DWORD PTR [rsp+0x80]
  415e28:	lea    r9,[r12+rdx*1+0x1]
  415e2d:	add    rbx,r9
  415e30:	cmp    edi,ebp
  415e32:	jle    0x415e5f
  415e34:	sub    edi,0x1
  415e37:	sub    edi,ebp
  415e39:	lea    rsi,[rbx+rdi*1+0x1]
  415e3e:	xchg   ax,ax
  415e40:	add    rbx,0x1
  415e44:	movsx  r8d,BYTE PTR [rbx-0x1]
  415e49:	mov    edx,0xa
  415e4e:	mov    rcx,rax
  415e51:	sub    r8d,0x30
  415e55:	call   0x4154f0
  415e5a:	cmp    rbx,rsi
  415e5d:	jne    0x415e40
  415e5f:	add    rsp,0x28
  415e63:	pop    rbx
  415e64:	pop    rsi
  415e65:	pop    rdi
  415e66:	pop    rbp
  415e67:	pop    r12
  415e69:	pop    r13
  415e6b:	ret    
  415e6c:	nop    DWORD PTR [rax+0x0]
  415e70:	movsxd rdx,DWORD PTR [rsp+0x80]
  415e78:	mov    ebp,0x9
  415e7d:	lea    rbx,[rsi+rdx*1+0x9]
  415e82:	jmp    0x415e30
  415e84:	xor    ecx,ecx
  415e86:	jmp    0x415dd9
  415e8b:	nop    DWORD PTR [rax+rax*1+0x0]
  415e90:	push   rdi
  415e91:	push   rsi
  415e92:	push   rbx
  415e93:	sub    rsp,0x50
  415e97:	movaps XMMWORD PTR [rsp+0x40],xmm6
  415e9c:	mov    rsi,rdx
  415e9f:	lea    rdx,[rsp+0x38]
  415ea4:	mov    rdi,rcx
  415ea7:	call   0x415b30
  415eac:	lea    rdx,[rsp+0x3c]
  415eb1:	mov    rcx,rsi
  415eb4:	movq   rbx,xmm0
  415eb9:	movapd xmm6,xmm0
  415ebd:	call   0x415b30
  415ec2:	mov    eax,DWORD PTR [rsp+0x38]
  415ec6:	sub    eax,DWORD PTR [rsp+0x3c]
  415eca:	movq   rcx,xmm0
  415ecf:	mov    r8d,eax
  415ed2:	mov    eax,DWORD PTR [rdi+0x14]
  415ed5:	sub    eax,DWORD PTR [rsi+0x14]
  415ed8:	shl    eax,0x5
  415edb:	add    eax,r8d
  415ede:	test   eax,eax
  415ee0:	jle    0x415f20
  415ee2:	movq   rdx,xmm6
  415ee7:	shl    eax,0x14
  415eea:	shr    rdx,0x20
  415eee:	add    eax,edx
  415ef0:	shl    rax,0x20
  415ef4:	mov    rdx,rax
  415ef7:	mov    eax,ebx
  415ef9:	or     rax,rdx
  415efc:	mov    QWORD PTR [rsp+0x28],rax
  415f01:	movsd  xmm6,QWORD PTR [rsp+0x28]
  415f07:	divsd  xmm6,xmm0
  415f0b:	movapd xmm0,xmm6
  415f0f:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  415f14:	add    rsp,0x50
  415f18:	pop    rbx
  415f19:	pop    rsi
  415f1a:	pop    rdi
  415f1b:	ret    
  415f1c:	nop    DWORD PTR [rax+0x0]
  415f20:	movq   rdx,xmm0
  415f25:	shl    eax,0x14
  415f28:	shr    rdx,0x20
  415f2c:	mov    ebx,edx
  415f2e:	sub    ebx,eax
  415f30:	mov    rax,rbx
  415f33:	shl    rax,0x20
  415f37:	mov    rdx,rax
  415f3a:	mov    eax,ecx
  415f3c:	or     rax,rdx
  415f3f:	mov    QWORD PTR [rsp+0x28],rax
  415f44:	movsd  xmm0,QWORD PTR [rsp+0x28]
  415f4a:	jmp    0x415f07
  415f4c:	nop    DWORD PTR [rax+0x0]
  415f50:	mov    r8,QWORD PTR [rcx]
  415f53:	jmp    0x415f6e
  415f55:	movsx  eax,BYTE PTR [r8]
  415f59:	lea    r11d,[rax-0x41]
  415f5d:	lea    r10d,[rax+0x20]
  415f61:	cmp    r11d,0x19
  415f65:	cmovbe eax,r10d
  415f69:	cmp    eax,r9d
  415f6c:	jne    0x415f90
  415f6e:	add    rdx,0x1
  415f72:	movsx  r9d,BYTE PTR [rdx-0x1]
  415f77:	add    r8,0x1
  415f7b:	test   r9d,r9d
  415f7e:	jne    0x415f55
  415f80:	mov    QWORD PTR [rcx],r8
  415f83:	mov    eax,0x1
  415f88:	ret    
  415f89:	nop    DWORD PTR [rax+0x0]
  415f90:	xor    eax,eax
  415f92:	ret    
  415f93:	nop    DWORD PTR [rax]
  415f96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415fa0:	sub    edx,0x1
  415fa3:	lea    rax,[r8+0x18]
  415fa7:	sar    edx,0x5
  415faa:	movsxd rdx,edx
  415fad:	lea    r11,[rcx+rdx*4+0x4]
  415fb2:	movsxd rdx,DWORD PTR [r8+0x14]
  415fb6:	lea    r10,[rax+rdx*4]
  415fba:	cmp    rax,r10
  415fbd:	jae    0x415ffb
  415fbf:	mov    rdx,rcx
  415fc2:	add    rax,0x4
  415fc6:	mov    r9d,DWORD PTR [rax-0x4]
  415fca:	add    rdx,0x4
  415fce:	cmp    r10,rax
  415fd1:	mov    DWORD PTR [rdx-0x4],r9d
  415fd5:	ja     0x415fc2
  415fd7:	sub    r10,r8
  415fda:	lea    rax,[r10-0x19]
  415fde:	shr    rax,0x2
  415fe2:	lea    rcx,[rcx+rax*4+0x4]
  415fe7:	cmp    r11,rcx
  415fea:	jbe    0x416000
  415fec:	nop    DWORD PTR [rax+0x0]
  415ff0:	add    rcx,0x4
  415ff4:	mov    DWORD PTR [rcx-0x4],0x0
  415ffb:	cmp    r11,rcx
  415ffe:	ja     0x415ff0
  416000:	repz ret 
  416002:	nop    DWORD PTR [rax+0x0]
  416006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416010:	movsxd rax,DWORD PTR [rcx+0x14]
  416014:	mov    r9d,edx
  416017:	lea    r8,[rcx+0x18]
  41601b:	sar    r9d,0x5
  41601f:	cmp    eax,r9d
  416022:	jge    0x416051
  416024:	lea    r9,[r8+rax*4]
  416028:	cmp    r8,r9
  41602b:	jae    0x416096
  41602d:	mov    eax,DWORD PTR [r9-0x4]
  416031:	lea    rdx,[r9-0x4]
  416035:	test   eax,eax
  416037:	je     0x41604a
  416039:	jmp    0x416090
  41603b:	nop    DWORD PTR [rax+rax*1+0x0]
  416040:	sub    rdx,0x4
  416044:	mov    ecx,DWORD PTR [rdx]
  416046:	test   ecx,ecx
  416048:	jne    0x416090
  41604a:	cmp    r8,rdx
  41604d:	jb     0x416040
  41604f:	repz ret 
  416051:	jle    0x416080
  416053:	mov    ecx,edx
  416055:	movsxd r9,r9d
  416058:	and    ecx,0x1f
  41605b:	lea    r9,[r8+r9*4]
  41605f:	je     0x416028
  416061:	mov    r10d,DWORD PTR [r9]
  416064:	mov    eax,r10d
  416067:	shr    eax,cl
  416069:	shl    eax,cl
  41606b:	mov    edx,eax
  41606d:	mov    eax,0x1
  416072:	cmp    edx,r10d
  416075:	je     0x416028
  416077:	repz ret 
  416079:	nop    DWORD PTR [rax+0x0]
  416080:	movsxd r9,r9d
  416083:	lea    r9,[r8+r9*4]
  416087:	jmp    0x416028
  416089:	nop    DWORD PTR [rax+0x0]
  416090:	mov    eax,0x1
  416095:	ret    
  416096:	xor    eax,eax
  416098:	ret    
  416099:	nop
  41609a:	nop
  41609b:	nop
  41609c:	nop
  41609d:	nop
  41609e:	nop
  41609f:	nop
  4160a0:	jmp    QWORD PTR [rip+0x1f972]        # 0x435a18
  4160a6:	nop
  4160a7:	nop
  4160a8:	jmp    QWORD PTR [rip+0x1f962]        # 0x435a10
  4160ae:	nop
  4160af:	nop
  4160b0:	jmp    QWORD PTR [rip+0x1f952]        # 0x435a08
  4160b6:	nop
  4160b7:	nop
  4160b8:	jmp    QWORD PTR [rip+0x1f942]        # 0x435a00
  4160be:	nop
  4160bf:	nop
  4160c0:	jmp    QWORD PTR [rip+0x1f932]        # 0x4359f8
  4160c6:	nop
  4160c7:	nop
  4160c8:	jmp    QWORD PTR [rip+0x1f922]        # 0x4359f0
  4160ce:	nop
  4160cf:	nop
  4160d0:	jmp    QWORD PTR [rip+0x1f912]        # 0x4359e8
  4160d6:	nop
  4160d7:	nop
  4160d8:	jmp    QWORD PTR [rip+0x1f902]        # 0x4359e0
  4160de:	nop
  4160df:	nop
  4160e0:	jmp    QWORD PTR [rip+0x1f8f2]        # 0x4359d8
  4160e6:	nop
  4160e7:	nop
  4160e8:	jmp    QWORD PTR [rip+0x1f8e2]        # 0x4359d0
  4160ee:	nop
  4160ef:	nop
  4160f0:	jmp    QWORD PTR [rip+0x1f8d2]        # 0x4359c8
  4160f6:	nop
  4160f7:	nop
  4160f8:	jmp    QWORD PTR [rip+0x1f8c2]        # 0x4359c0
  4160fe:	nop
  4160ff:	nop
  416100:	jmp    QWORD PTR [rip+0x1f8b2]        # 0x4359b8
  416106:	nop
  416107:	nop
  416108:	jmp    QWORD PTR [rip+0x1f8a2]        # 0x4359b0
  41610e:	nop
  41610f:	nop
  416110:	jmp    QWORD PTR [rip+0x1f892]        # 0x4359a8
  416116:	nop
  416117:	nop
  416118:	jmp    QWORD PTR [rip+0x1f882]        # 0x4359a0
  41611e:	nop
  41611f:	nop
  416120:	jmp    QWORD PTR [rip+0x1f872]        # 0x435998
  416126:	nop
  416127:	nop
  416128:	jmp    QWORD PTR [rip+0x1f862]        # 0x435990
  41612e:	nop
  41612f:	nop
  416130:	jmp    QWORD PTR [rip+0x1f852]        # 0x435988
  416136:	nop
  416137:	nop
  416138:	jmp    QWORD PTR [rip+0x1f842]        # 0x435980
  41613e:	nop
  41613f:	nop
  416140:	jmp    QWORD PTR [rip+0x1f832]        # 0x435978
  416146:	nop
  416147:	nop
  416148:	jmp    QWORD PTR [rip+0x1f822]        # 0x435970
  41614e:	nop
  41614f:	nop
  416150:	jmp    QWORD PTR [rip+0x1f812]        # 0x435968
  416156:	nop
  416157:	nop
  416158:	jmp    QWORD PTR [rip+0x1f802]        # 0x435960
  41615e:	nop
  41615f:	nop
  416160:	jmp    QWORD PTR [rip+0x1f7f2]        # 0x435958
  416166:	nop
  416167:	nop
  416168:	jmp    QWORD PTR [rip+0x1f7e2]        # 0x435950
  41616e:	nop
  41616f:	nop
  416170:	jmp    QWORD PTR [rip+0x1f7d2]        # 0x435948
  416176:	nop
  416177:	nop
  416178:	jmp    QWORD PTR [rip+0x1f7c2]        # 0x435940
  41617e:	nop
  41617f:	nop
  416180:	jmp    QWORD PTR [rip+0x1f7b2]        # 0x435938
  416186:	nop
  416187:	nop
  416188:	jmp    QWORD PTR [rip+0x1f7a2]        # 0x435930
  41618e:	nop
  41618f:	nop
  416190:	jmp    QWORD PTR [rip+0x1f792]        # 0x435928
  416196:	nop
  416197:	nop
  416198:	jmp    QWORD PTR [rip+0x1f782]        # 0x435920
  41619e:	nop
  41619f:	nop
  4161a0:	jmp    QWORD PTR [rip+0x1f772]        # 0x435918
  4161a6:	nop
  4161a7:	nop
  4161a8:	jmp    QWORD PTR [rip+0x1f762]        # 0x435910
  4161ae:	nop
  4161af:	nop
  4161b0:	jmp    QWORD PTR [rip+0x1f752]        # 0x435908
  4161b6:	nop
  4161b7:	nop
  4161b8:	jmp    QWORD PTR [rip+0x1f742]        # 0x435900
  4161be:	nop
  4161bf:	nop
  4161c0:	jmp    QWORD PTR [rip+0x1f732]        # 0x4358f8
  4161c6:	nop
  4161c7:	nop
  4161c8:	jmp    QWORD PTR [rip+0x1f722]        # 0x4358f0
  4161ce:	nop
  4161cf:	nop
  4161d0:	jmp    QWORD PTR [rip+0x1f712]        # 0x4358e8
  4161d6:	nop
  4161d7:	nop
  4161d8:	jmp    QWORD PTR [rip+0x1f702]        # 0x4358e0
  4161de:	nop
  4161df:	nop
  4161e0:	jmp    QWORD PTR [rip+0x1f6f2]        # 0x4358d8
  4161e6:	nop
  4161e7:	nop
  4161e8:	jmp    QWORD PTR [rip+0x1f6e2]        # 0x4358d0
  4161ee:	nop
  4161ef:	nop
  4161f0:	jmp    QWORD PTR [rip+0x1f6d2]        # 0x4358c8
  4161f6:	nop
  4161f7:	nop
  4161f8:	jmp    QWORD PTR [rip+0x1f6c2]        # 0x4358c0
  4161fe:	nop
  4161ff:	nop
  416200:	jmp    QWORD PTR [rip+0x1f6b2]        # 0x4358b8
  416206:	nop
  416207:	nop
  416208:	jmp    QWORD PTR [rip+0x1f6a2]        # 0x4358b0
  41620e:	nop
  41620f:	nop
  416210:	jmp    QWORD PTR [rip+0x1f692]        # 0x4358a8
  416216:	nop
  416217:	nop
  416218:	jmp    QWORD PTR [rip+0x1f682]        # 0x4358a0
  41621e:	nop
  41621f:	nop
  416220:	jmp    QWORD PTR [rip+0x1f672]        # 0x435898
  416226:	nop
  416227:	nop
  416228:	jmp    QWORD PTR [rip+0x1f662]        # 0x435890
  41622e:	nop
  41622f:	nop
  416230:	jmp    QWORD PTR [rip+0x1f652]        # 0x435888
  416236:	nop
  416237:	nop
  416238:	jmp    QWORD PTR [rip+0x1f642]        # 0x435880
  41623e:	nop
  41623f:	nop
  416240:	jmp    QWORD PTR [rip+0x1f632]        # 0x435878
  416246:	nop
  416247:	nop
  416248:	jmp    QWORD PTR [rip+0x1f622]        # 0x435870
  41624e:	nop
  41624f:	nop
  416250:	jmp    QWORD PTR [rip+0x1f612]        # 0x435868
  416256:	nop
  416257:	nop
  416258:	jmp    QWORD PTR [rip+0x1f602]        # 0x435860
  41625e:	nop
  41625f:	nop
  416260:	jmp    QWORD PTR [rip+0x1f5f2]        # 0x435858
  416266:	nop
  416267:	nop
  416268:	jmp    QWORD PTR [rip+0x1f5e2]        # 0x435850
  41626e:	nop
  41626f:	nop
  416270:	jmp    QWORD PTR [rip+0x1f5d2]        # 0x435848
  416276:	nop
  416277:	nop
  416278:	jmp    QWORD PTR [rip+0x1f5c2]        # 0x435840
  41627e:	nop
  41627f:	nop
  416280:	jmp    QWORD PTR [rip+0x1f5b2]        # 0x435838
  416286:	nop
  416287:	nop
  416288:	jmp    QWORD PTR [rip+0x1f5a2]        # 0x435830
  41628e:	nop
  41628f:	nop
  416290:	jmp    QWORD PTR [rip+0x1f592]        # 0x435828
  416296:	nop
  416297:	nop
  416298:	jmp    QWORD PTR [rip+0x1f582]        # 0x435820
  41629e:	nop
  41629f:	nop
  4162a0:	jmp    QWORD PTR [rip+0x1f572]        # 0x435818
  4162a6:	nop
  4162a7:	nop
  4162a8:	jmp    QWORD PTR [rip+0x1f562]        # 0x435810
  4162ae:	nop
  4162af:	nop
  4162b0:	jmp    QWORD PTR [rip+0x1f552]        # 0x435808
  4162b6:	nop
  4162b7:	nop
  4162b8:	jmp    QWORD PTR [rip+0x1f542]        # 0x435800
  4162be:	nop
  4162bf:	nop
  4162c0:	jmp    QWORD PTR [rip+0x1f532]        # 0x4357f8
  4162c6:	nop
  4162c7:	nop
  4162c8:	jmp    QWORD PTR [rip+0x1f522]        # 0x4357f0
  4162ce:	nop
  4162cf:	nop
  4162d0:	jmp    QWORD PTR [rip+0x1f512]        # 0x4357e8
  4162d6:	nop
  4162d7:	nop
  4162d8:	jmp    QWORD PTR [rip+0x1f4fa]        # 0x4357d8
  4162de:	nop
  4162df:	nop
  4162e0:	jmp    QWORD PTR [rip+0x1f4ea]        # 0x4357d0
  4162e6:	nop
  4162e7:	nop
  4162e8:	jmp    QWORD PTR [rip+0x1f4da]        # 0x4357c8
  4162ee:	nop
  4162ef:	nop
  4162f0:	jmp    QWORD PTR [rip+0x1f4c2]        # 0x4357b8
  4162f6:	nop
  4162f7:	nop
  4162f8:	jmp    QWORD PTR [rip+0x1f4b2]        # 0x4357b0
  4162fe:	nop
  4162ff:	nop
  416300:	jmp    QWORD PTR [rip+0x1f4a2]        # 0x4357a8
  416306:	nop
  416307:	nop
  416308:	jmp    QWORD PTR [rip+0x1f492]        # 0x4357a0
  41630e:	nop
  41630f:	nop
  416310:	jmp    QWORD PTR [rip+0x1f47a]        # 0x435790
  416316:	nop
  416317:	nop
  416318:	jmp    QWORD PTR [rip+0x1f46a]        # 0x435788
  41631e:	nop
  41631f:	nop
  416320:	jmp    QWORD PTR [rip+0x1f45a]        # 0x435780
  416326:	nop
  416327:	nop
  416328:	nop    DWORD PTR [rax+rax*1+0x0]
  416330:	mov    rax,QWORD PTR [rip+0x1e149]        # 0x434480
  416337:	ret    
  416338:	nop    DWORD PTR [rax+rax*1+0x0]
  416340:	mov    rax,rcx
  416343:	xchg   QWORD PTR [rip+0x1e136],rax        # 0x434480
  41634a:	ret    
  41634b:	nop
  41634c:	nop
  41634d:	nop
  41634e:	nop
  41634f:	nop
  416350:	jmp    QWORD PTR [rip+0x1f41a]        # 0x435770
  416356:	nop
  416357:	nop
  416358:	jmp    QWORD PTR [rip+0x1f40a]        # 0x435768
  41635e:	nop
  41635f:	nop
  416360:	jmp    QWORD PTR [rip+0x1f3fa]        # 0x435760
  416366:	nop
  416367:	nop
  416368:	jmp    QWORD PTR [rip+0x1f3ea]        # 0x435758
  41636e:	nop
  41636f:	nop
  416370:	jmp    QWORD PTR [rip+0x1f3da]        # 0x435750
  416376:	nop
  416377:	nop
  416378:	jmp    QWORD PTR [rip+0x1f3ca]        # 0x435748
  41637e:	nop
  41637f:	nop
  416380:	jmp    QWORD PTR [rip+0x1f3ba]        # 0x435740
  416386:	nop
  416387:	nop
  416388:	jmp    QWORD PTR [rip+0x1f3aa]        # 0x435738
  41638e:	nop
  41638f:	nop
  416390:	jmp    QWORD PTR [rip+0x1f39a]        # 0x435730
  416396:	nop
  416397:	nop
  416398:	jmp    QWORD PTR [rip+0x1f38a]        # 0x435728
  41639e:	nop
  41639f:	nop
  4163a0:	jmp    QWORD PTR [rip+0x1f37a]        # 0x435720
  4163a6:	nop
  4163a7:	nop
  4163a8:	jmp    QWORD PTR [rip+0x1f36a]        # 0x435718
  4163ae:	nop
  4163af:	nop
  4163b0:	jmp    QWORD PTR [rip+0x1f35a]        # 0x435710
  4163b6:	nop
  4163b7:	nop
  4163b8:	jmp    QWORD PTR [rip+0x1f34a]        # 0x435708
  4163be:	nop
  4163bf:	nop
  4163c0:	jmp    QWORD PTR [rip+0x1f33a]        # 0x435700
  4163c6:	nop
  4163c7:	nop
  4163c8:	jmp    QWORD PTR [rip+0x1f32a]        # 0x4356f8
  4163ce:	nop
  4163cf:	nop
  4163d0:	jmp    QWORD PTR [rip+0x1f31a]        # 0x4356f0
  4163d6:	nop
  4163d7:	nop
  4163d8:	jmp    QWORD PTR [rip+0x1f30a]        # 0x4356e8
  4163de:	nop
  4163df:	nop
  4163e0:	jmp    QWORD PTR [rip+0x1f2fa]        # 0x4356e0
  4163e6:	nop
  4163e7:	nop
  4163e8:	jmp    QWORD PTR [rip+0x1f2ea]        # 0x4356d8
  4163ee:	nop
  4163ef:	nop
  4163f0:	jmp    QWORD PTR [rip+0x1f2da]        # 0x4356d0
  4163f6:	nop
  4163f7:	nop
  4163f8:	jmp    QWORD PTR [rip+0x1f2ca]        # 0x4356c8
  4163fe:	nop
  4163ff:	nop
  416400:	jmp    QWORD PTR [rip+0x1f2ba]        # 0x4356c0
  416406:	nop
  416407:	nop
  416408:	jmp    QWORD PTR [rip+0x1f2aa]        # 0x4356b8
  41640e:	nop
  41640f:	nop
  416410:	jmp    QWORD PTR [rip+0x1f29a]        # 0x4356b0
  416416:	nop
  416417:	nop
  416418:	jmp    QWORD PTR [rip+0x1f28a]        # 0x4356a8
  41641e:	nop
  41641f:	nop
  416420:	jmp    QWORD PTR [rip+0x1f27a]        # 0x4356a0
  416426:	nop
  416427:	nop
  416428:	jmp    QWORD PTR [rip+0x1f26a]        # 0x435698
  41642e:	nop
  41642f:	nop
  416430:	jmp    QWORD PTR [rip+0x1f25a]        # 0x435690
  416436:	nop
  416437:	nop
  416438:	jmp    QWORD PTR [rip+0x1f24a]        # 0x435688
  41643e:	nop
  41643f:	nop
  416440:	jmp    QWORD PTR [rip+0x1f23a]        # 0x435680
  416446:	nop
  416447:	nop
  416448:	jmp    QWORD PTR [rip+0x1f22a]        # 0x435678
  41644e:	nop
  41644f:	nop
  416450:	jmp    QWORD PTR [rip+0x1f21a]        # 0x435670
  416456:	nop
  416457:	nop
  416458:	jmp    QWORD PTR [rip+0x1f20a]        # 0x435668
  41645e:	nop
  41645f:	nop
  416460:	jmp    QWORD PTR [rip+0x1f1fa]        # 0x435660
  416466:	nop
  416467:	nop
  416468:	jmp    QWORD PTR [rip+0x1f1ea]        # 0x435658
  41646e:	nop
  41646f:	nop
  416470:	jmp    QWORD PTR [rip+0x1f1da]        # 0x435650
  416476:	nop
  416477:	nop
  416478:	nop    DWORD PTR [rax+rax*1+0x0]
  416480:	push   r15
  416482:	push   r14
  416484:	push   r13
  416486:	push   r12
  416488:	push   rbp
  416489:	push   rdi
  41648a:	push   rsi
  41648b:	push   rbx
  41648c:	sub    rsp,0x38
  416490:	xor    eax,eax
  416492:	mov    rsi,rcx
  416495:	or     rcx,0xffffffffffffffff
  416499:	mov    rbp,rdx
  41649c:	mov    rdi,rsi
  41649f:	mov    r13,r8
  4164a2:	repnz scas al,BYTE PTR es:[rdi]
  4164a4:	mov    rbx,rcx
  4164a7:	not    rbx
  4164aa:	cmp    rbx,0x1
  4164ae:	jne    0x4164ba
  4164b0:	xor    edi,edi
  4164b2:	xor    r12d,r12d
  4164b5:	jmp    0x4165ed
  4164ba:	lea    rdx,[rip+0x243f]        # 0x418900
  4164c1:	mov    r8d,0x7
  4164c7:	mov    rcx,rsi
  4164ca:	call   0x416148
  4164cf:	test   eax,eax
  4164d1:	je     0x4164e7
  4164d3:	lea    rdx,[rip+0x242e]        # 0x418908
  4164da:	mov    rcx,rsi
  4164dd:	call   0x416138
  4164e2:	test   rax,rax
  4164e5:	jne    0x4164f9
  4164e7:	mov    rcx,rsi
  4164ea:	xor    edi,edi
  4164ec:	call   0x4160e8
  4164f1:	mov    r12,rax
  4164f4:	jmp    0x4165ed
  4164f9:	mov    rcx,rbx
  4164fc:	call   0x4161d0
  416501:	test   rax,rax
  416504:	mov    r12,rax
  416507:	je     0x4164b0
  416509:	lea    rdi,[rsi+0x1]
  41650d:	mov    rbx,rax
  416510:	mov    r15,rsi
  416513:	cmp    BYTE PTR [r15],0x0
  416517:	je     0x4165e8
  41651d:	lea    rdx,[rip+0x23e4]        # 0x418908
  416524:	mov    rcx,r15
  416527:	call   0x416160
  41652c:	mov    r14,rax
  41652f:	mov    rdx,r15
  416532:	mov    rcx,rbx
  416535:	add    r15,r14
  416538:	mov    r8,rax
  41653b:	add    rbx,r14
  41653e:	call   0x416140
  416543:	mov    al,BYTE PTR [r15]
  416546:	cmp    al,0x3a
  416548:	je     0x416591
  41654a:	cmp    al,0x5c
  41654c:	jne    0x416513
  41654e:	mov    al,BYTE PTR [r15+0x1]
  416552:	cmp    al,0x3a
  416554:	je     0x416575
  416556:	cmp    al,0x5c
  416558:	je     0x416569
  41655a:	test   al,al
  41655c:	jne    0x416581
  41655e:	mov    BYTE PTR [rbx],0x5c
  416561:	inc    r15
  416564:	inc    rbx
  416567:	jmp    0x416513
  416569:	mov    BYTE PTR [rbx],0x5c
  41656c:	add    r15,0x2
  416570:	inc    rbx
  416573:	jmp    0x416513
  416575:	mov    BYTE PTR [rbx],0x3a
  416578:	add    r15,0x2
  41657c:	inc    rbx
  41657f:	jmp    0x416513
  416581:	mov    BYTE PTR [rbx],0x5c
  416584:	mov    BYTE PTR [rbx+0x1],al
  416587:	add    r15,0x2
  41658b:	add    rbx,0x2
  41658f:	jmp    0x416513
  416591:	cmp    rdi,r15
  416594:	mov    r14,rbx
  416597:	mov    QWORD PTR [rsp+0x28],rdi
  41659c:	jne    0x4165c6
  41659e:	mov    al,BYTE PTR [rsi+0x2]
  4165a1:	cmp    al,0x2f
  4165a3:	je     0x4165a9
  4165a5:	cmp    al,0x5c
  4165a7:	jne    0x4165cb
  4165a9:	movzx  ecx,BYTE PTR [rsi]
  4165ac:	call   QWORD PTR [rip+0x1f306]        # 0x4358b8
  4165b2:	test   eax,eax
  4165b4:	je     0x4165cb
  4165b6:	inc    rbx
  4165b9:	mov    BYTE PTR [r14],0x3a
  4165bd:	lea    r15,[rsi+0x2]
  4165c1:	jmp    0x416513
  4165c6:	mov    QWORD PTR [rsp+0x28],r15
  4165cb:	mov    rax,QWORD PTR [rsp+0x28]
  4165d0:	xor    edi,edi
  4165d2:	cmp    BYTE PTR [rax+0x1],0x0
  4165d6:	je     0x4165ea
  4165d8:	mov    rcx,rax
  4165db:	inc    rcx
  4165de:	call   0x4160e8
  4165e3:	mov    rdi,rax
  4165e6:	jmp    0x4165ea
  4165e8:	xor    edi,edi
  4165ea:	mov    BYTE PTR [rbx],0x0
  4165ed:	mov    rcx,QWORD PTR [rbp+0x0]
  4165f1:	call   0x416220
  4165f6:	test   rdi,rdi
  4165f9:	mov    QWORD PTR [rbp+0x0],r12
  4165fd:	je     0x41660c
  4165ff:	mov    rcx,QWORD PTR [r13+0x0]
  416603:	call   0x416220
  416608:	mov    QWORD PTR [r13+0x0],rdi
  41660c:	mov    rcx,rsi
  41660f:	add    rsp,0x38
  416613:	pop    rbx
  416614:	pop    rsi
  416615:	pop    rdi
  416616:	pop    rbp
  416617:	pop    r12
  416619:	pop    r13
  41661b:	pop    r14
  41661d:	pop    r15
  41661f:	jmp    0x40cd70
  416624:	nop
  416625:	nop
  416626:	nop
  416627:	nop
  416628:	nop
  416629:	nop
  41662a:	nop
  41662b:	nop
  41662c:	nop
  41662d:	nop
  41662e:	nop
  41662f:	nop
  416630:	push   r12
  416632:	push   rbp
  416633:	push   rdi
  416634:	push   rsi
  416635:	push   rbx
  416636:	sub    rsp,0x90
  41663d:	lea    rbx,[rsp+0x20]
  416642:	mov    rbp,rdx
  416645:	mov    esi,ecx
  416647:	call   0x4104f0
  41664c:	mov    rdi,rbx
  41664f:	xor    eax,eax
  416651:	mov    ecx,0xd
  416656:	rep stos QWORD PTR es:[rdi],rax
  416659:	mov    r12,QWORD PTR [rip+0x1f140]        # 0x4357a0
  416660:	mov    DWORD PTR [rsp+0x28],0xffffffff
  416668:	call   r12
  41666b:	mov    ecx,0x3e8
  416670:	add    rax,0x60
  416674:	mov    QWORD PTR [rsp+0x30],rax
  416679:	call   0x4161d0
  41667e:	test   rax,rax
  416681:	mov    QWORD PTR [rsp+0x80],rax
  416689:	mov    QWORD PTR [rsp+0x70],rax
  41668e:	je     0x4167b3
  416694:	mov    ecx,0x3
  416699:	call   QWORD PTR [rip+0x1ef39]        # 0x4355d8
  41669f:	test   eax,eax
  4166a1:	mov    edi,eax
  4166a3:	jne    0x416786
  4166a9:	call   0x407dc0
  4166ae:	test   eax,eax
  4166b0:	mov    edi,eax
  4166b2:	jne    0x4167cd
  4166b8:	call   QWORD PTR [rip+0x1eec2]        # 0x435580
  4166be:	test   rax,rax
  4166c1:	mov    QWORD PTR [rsp+0x20],rax
  4166c6:	je     0x4167ec
  4166cc:	mov    rcx,QWORD PTR [rsp+0x70]
  4166d1:	call   0x402560
  4166d6:	mov    rax,QWORD PTR [rsp+0x70]
  4166db:	mov    rdx,QWORD PTR [rsp+0x20]
  4166e0:	mov    r8,rbp
  4166e3:	mov    rcx,rbx
  4166e6:	mov    QWORD PTR [rax],rdx
  4166e9:	mov    QWORD PTR [rax+0x3d0],rbx
  4166f0:	mov    edx,esi
  4166f2:	call   0x40c3d0
  4166f7:	mov    rcx,QWORD PTR [rsp+0x20]
  4166fc:	mov    edi,eax
  4166fe:	call   QWORD PTR [rip+0x1ee64]        # 0x435568
  416704:	mov    QWORD PTR [rsp+0x20],0x0
  41670d:	call   QWORD PTR [rip+0x1eebd]        # 0x4355d0
  416713:	mov    rcx,QWORD PTR [rsp+0x40]
  416718:	call   0x416220
  41671d:	cmp    BYTE PTR [rsp+0x38],0x0
  416722:	mov    QWORD PTR [rsp+0x40],0x0
  41672b:	je     0x41673c
  41672d:	mov    rcx,QWORD PTR [rsp+0x30]
  416732:	test   rcx,rcx
  416735:	je     0x41673c
  416737:	call   0x416260
  41673c:	cmp    BYTE PTR [rsp+0x50],0x0
  416741:	mov    QWORD PTR [rsp+0x30],0x0
  41674a:	je     0x41675b
  41674c:	mov    rcx,QWORD PTR [rsp+0x48]
  416751:	test   rcx,rcx
  416754:	je     0x41675b
  416756:	call   0x416260
  41675b:	mov    rcx,QWORD PTR [rsp+0x60]
  416760:	mov    QWORD PTR [rsp+0x48],0x0
  416769:	call   0x416220
  41676e:	mov    rcx,QWORD PTR [rsp+0x80]
  416776:	mov    QWORD PTR [rsp+0x60],0x0
  41677f:	call   0x4025e0
  416784:	jmp    0x4167a3
  416786:	call   r12
  416789:	lea    rdx,[rip+0x160c8]        # 0x42c858
  416790:	lea    rcx,[rax+0x60]
  416794:	call   0x408150
  416799:	mov    rcx,QWORD PTR [rsp+0x70]
  41679e:	call   0x416220
  4167a3:	mov    eax,edi
  4167a5:	add    rsp,0x90
  4167ac:	pop    rbx
  4167ad:	pop    rsi
  4167ae:	pop    rdi
  4167af:	pop    rbp
  4167b0:	pop    r12
  4167b2:	ret    
  4167b3:	call   r12
  4167b6:	lea    rdx,[rip+0x160bc]        # 0x42c879
  4167bd:	lea    rcx,[rax+0x60]
  4167c1:	mov    edi,0x2
  4167c6:	call   0x408150
  4167cb:	jmp    0x4167a3
  4167cd:	call   r12
  4167d0:	lea    rdx,[rip+0x16051]        # 0x42c828
  4167d7:	lea    rcx,[rax+0x60]
  4167db:	call   0x408150
  4167e0:	mov    rcx,QWORD PTR [rsp+0x70]
  4167e5:	call   0x416220
  4167ea:	jmp    0x4167a3
  4167ec:	call   r12
  4167ef:	lea    rdx,[rip+0x1600a]        # 0x42c800
  4167f6:	lea    rcx,[rax+0x60]
  4167fa:	mov    edi,0x2
  4167ff:	call   0x408150
  416804:	mov    rcx,QWORD PTR [rsp+0x70]
  416809:	call   0x416220
  41680e:	jmp    0x4167a3
  416810:	(bad)  
  416811:	(bad)  
  416812:	(bad)  
  416813:	(bad)  
  416814:	(bad)  
  416815:	(bad)  
  416816:	(bad)  
  416817:	inc    DWORD PTR [rax]
  416819:	add    BYTE PTR [rax],al
  41681b:	add    BYTE PTR [rax],al
  41681d:	add    BYTE PTR [rax],al
  41681f:	add    bh,bh
  416821:	(bad)  
  416822:	(bad)  
  416823:	(bad)  
  416824:	(bad)  
  416825:	(bad)  
  416826:	(bad)  
  416827:	inc    DWORD PTR [rax]
  416829:	add    BYTE PTR [rax],al
  41682b:	add    BYTE PTR [rax],al
  41682d:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000417000 <.data>:
  417000:	or     al,BYTE PTR [rax]
	...
  41700e:	add    BYTE PTR [rax],al
  417010:	sub    BYTE PTR [rax+0x41],ch
	...
  41701f:	add    bh,bh
  417021:	(bad)  
  417022:	(bad)  
  417023:	(bad)  
  417024:	(bad)  
  417025:	(bad)  
  417026:	(bad)  
  417027:	inc    DWORD PTR [rax]
  417029:	add    BYTE PTR [rax],al
  41702b:	add    BYTE PTR [rax],al
  41702d:	add    BYTE PTR [rax],al
  41702f:	add    bh,bh
	...
  41703d:	add    BYTE PTR [rax],al
  41703f:	add    BYTE PTR [rdx],al
	...
  41704d:	add    BYTE PTR [rax],al
  41704f:	add    BYTE PTR [rip+0xffffffffce000000],dh        # 0xffffffffce417055
  417055:	sti    
  417056:	(bad)  
  417057:	dec    ebx
  417059:	add    eax,DWORD PTR [rax]
  41705b:	add    BYTE PTR [rcx],al
  41705d:	add    BYTE PTR [rax],al
  41705f:	add    BYTE PTR [rax],al
  417061:	add    BYTE PTR [rax],al
  417063:	add    BYTE PTR [rsi],cl
	...
  41706d:	add    BYTE PTR [rax],al
  41706f:	add    bh,bh
  417071:	(bad)  
  417072:	(bad)  
  417073:	inc    DWORD PTR [rax]
	...
  41707d:	add    BYTE PTR [rax],al
  41707f:	add    BYTE PTR [rax+0x433a],al
	...
  41708d:	add    BYTE PTR [rax],al
  41708f:	add    BYTE PTR [rax],dh
  417091:	movsxd eax,DWORD PTR [rcx+0x0]
  417094:	add    BYTE PTR [rax],al
  417096:	add    BYTE PTR [rax],al
  417098:	rex movsxd eax,DWORD PTR [rcx+0x0]
  41709c:	add    BYTE PTR [rax],al
  41709e:	add    BYTE PTR [rax],al
  4170a0:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
	...
  4170ae:	add    BYTE PTR [rax],al
  4170b0:	int    0x5d
  4170b2:	and    dl,dl
  4170b4:	data16 (bad) 
  4170b6:	(bad)  
  4170b7:	inc    DWORD PTR [rax]
  4170b9:	add    BYTE PTR [rax],al
  4170bb:	add    BYTE PTR [rax],al
  4170bd:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000000418000 <.rdata>:
  418000:	cmp    eax,0x6553203e
  418005:	outs   dx,BYTE PTR ds:[rsi]
  418006:	and    BYTE PTR fs:[rax+0x65],ch
  41800a:	(bad)  
  41800b:	fs gs jb 0x41800f
  41800f:	cmp    eax,0x6553203e
  418014:	outs   dx,BYTE PTR ds:[rsi]
  418015:	and    BYTE PTR fs:[rcx+riz*2+0x74],ah
  41801a:	(bad)  
  41801b:	add    BYTE PTR [rdi*1+0x63655220],bh
  418022:	jbe    0x418044
  418024:	push   0x65646165
  418029:	jb     0x41802b
  41802b:	cmp    al,0x3d
  41802d:	and    BYTE PTR [rdx+0x65],dl
  418030:	movsxd esi,DWORD PTR [rsi+0x20]
  418033:	fs (bad) 
  418035:	je     0x418098
  418037:	add    BYTE PTR [rdi*1+0x63655220],bh
  41803e:	jbe    0x418060
  418040:	push   rbx
  418041:	push   rbx
  418042:	rex.WR and BYTE PTR [rcx+riz*2+0x74],r12b
  418047:	(bad)  
  418048:	add    BYTE PTR [rip+0x6553203e],bh        # 0x6594a08c
  41804e:	outs   dx,BYTE PTR ds:[rsi]
  41804f:	and    BYTE PTR fs:[rbx+0x53],dl
  418053:	rex.WR and BYTE PTR [rcx+riz*2+0x74],r12b
  418058:	(bad)  
  418059:	add    BYTE PTR [rip+0x3a643230],ah        # 0x3aa5b28f
  41805f:	and    eax,0x3a643230
  418064:	and    eax,0x2e643230
  418069:	and    eax,0x646c3630
  41806e:	and    BYTE PTR [rax],al
  418070:	sub    eax,0x77002500
  418075:	je     0x418077
  418077:	rex.RX (bad) 
  418079:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  418081:	movsxd esi,DWORD PTR [rdx+0x65]
  418084:	(bad)  
  418085:	je     0x4180ec
  418087:	(bad)  
  418088:	outs   dx,DWORD PTR ds:[rsi]
  418089:	jo     0x4180f0
  41808b:	outs   dx,BYTE PTR ds:[rsi]
  41808c:	and    BYTE PTR [rdi+0x75],ch
  41808f:	je     0x418101
  418091:	jne    0x418107
  418093:	add    BYTE PTR [rsi],bh
  418095:	add    BYTE PTR [rip+0x20732573],ah        # 0x20b4a60e
  41809b:	add    BYTE PTR [rbx+0x25],bl
  41809e:	jp     0x418104
  4180a0:	and    BYTE PTR [rdx+0x79],ah
  4180a3:	je     0x41810a
  4180a5:	jae    0x4180c7
  4180a7:	fs (bad) 
  4180a9:	je     0x41810c
  4180ab:	pop    rbp
  4180ac:	or     al,BYTE PTR [rax]
  4180ae:	and    eax,0x203d3d73
  4180b3:	rex.WB outs dx,BYTE PTR ds:[rsi]
  4180b5:	outs   dx,WORD PTR ds:[rsi]
  4180b7:	cmp    ah,BYTE PTR [rax]
  4180b9:	and    eax,0x73250073
  4180be:	and    eax,0x25202c73
  4180c3:	jp     0x418129
  4180c5:	and    BYTE PTR [rdx+0x79],ah
  4180c8:	je     0x41812f
  4180ca:	jae    0x4180ec
  4180cc:	sub    BYTE PTR [rax],dh
  4180ce:	js     0x4180f5
  4180d0:	jp     0x41814a
  4180d2:	sub    DWORD PTR [rdx],ecx
  4180d4:	add    BYTE PTR [rip+0x787a3430],ah        # 0x78bbb50a
  4180da:	cmp    ah,BYTE PTR [rax]
  4180dc:	add    BYTE PTR [rip+0x20783230],ah        # 0x20b9b312
  4180e2:	add    BYTE PTR [rax],ah
  4180e4:	and    BYTE PTR [rax],ah
  4180e6:	add    BYTE PTR [rip+0x63],ah        # 0x41814f
  4180ec:	ret    
  4180ed:	xchg   edi,eax
  4180ee:	(bad)  
  4180ef:	jmp    rdi
  4180f1:	xchg   edi,eax
  4180f2:	(bad)  
  4180f3:	push   QWORD PTR [rbp-0x6a]
  4180f6:	(bad)  
  4180f7:	call   QWORD PTR [rbx-0x60000169]
  4180fd:	xchg   edi,eax
  4180fe:	(bad)  
  4180ff:	jmp    FWORD PTR [rbx-0x48000169]
  418105:	xchg   edi,eax
  418106:	(bad)  
  418107:	call   FWORD PTR [rsi-0x68]
  41810a:	(bad)  
  41810b:	call   FWORD PTR [rsi-0x68]
  41810e:	(bad)  
  41810f:	call   rdi
  418111:	xchg   edi,eax
  418112:	(bad)  
  418113:	dec    ebp
  418115:	cwde   
  418116:	(bad)  
  418117:	dec    ebp
  418119:	cwde   
  41811a:	(bad)  
  41811b:	dec    ebp
  41811d:	cwde   
  41811e:	(bad)  
  41811f:	dec    ebp
  418121:	cwde   
  418122:	(bad)  
  418123:	jmp    FWORD PTR [rdx]
  418125:	add    BYTE PTR [rax+rax*1],bh
  418128:	jnp    0x41812a
  41812a:	jge    0x41812c
	...
  418140:	and    al,0x81
  418142:	add    BYTE PTR [r8],al
  418145:	add    BYTE PTR [rax],al
  418147:	add    BYTE PTR [rsi],ah
  418149:	add    DWORD PTR [rcx+0x0],0x0
  418150:	xchg   esp,eax
  418151:	add    BYTE PTR [rcx+0x0],0x0
  418155:	add    BYTE PTR [rax],al
  418157:	add    BYTE PTR [rax],ch
  418159:	add    DWORD PTR [rcx+0x0],0x0
  418160:	sub    al,BYTE PTR [rcx+0x41]
  418166:	add    BYTE PTR [rax],al
  418168:	sub    BYTE PTR [rcx+0x41],al
  41816e:	add    BYTE PTR [rax],al
  418170:	sub    al,BYTE PTR [rcx+0x41]
	...
  41817e:	add    BYTE PTR [rax],al
  418180:	rex.XB outs dx,DWORD PTR ds:[rsi]
  418182:	outs   dx,BYTE PTR ds:[rsi]
  418183:	je     0x4181ea
  418185:	outs   dx,BYTE PTR ds:[rsi]
  418186:	je     0x4181b5
  418188:	imul   esi,DWORD PTR fs:[rbx+0x70],0x7469736f
  418190:	imul   ebp,DWORD PTR [rdi+0x6e],0x7468003a
  418197:	je     0x418209
  418199:	cmp    ch,BYTE PTR [rdi]
  41819b:	(bad)  
  41819c:	add    BYTE PTR [rax+0x74],ch
  41819f:	je     0x418211
  4181a1:	jae    0x4181dd
  4181a3:	(bad)  
  4181a4:	(bad)  
  4181a5:	add    BYTE PTR [rsi+0x69],ah
  4181a8:	ins    BYTE PTR es:[rdi],dx
  4181a9:	outs   dx,BYTE PTR gs:[rsi]
  4181ab:	(bad)  
  4181ac:	ins    DWORD PTR es:[rdi],dx
  4181ad:	gs cmp eax,0xd002300
  4181b3:	and    eax,0x64252d25
  4181b8:	jae    0x4181da
  4181ba:	and    eax,0x312e3525
  4181bf:	and    ax,0x2525
  4181c3:	and    eax,0x4c4f4300
  4181c8:	push   rbp
  4181c9:	rex.WRB
  4181ca:	rex.WRX push rbx
	...
  4181d4:	add    BYTE PTR [rax],al
  4181d6:	pop    rcx
  4181d7:	add    BYTE PTR [rax],al
  4181da:	add    BYTE PTR [rax],al
  4181dc:	add    BYTE PTR [rax],al
  4181de:	add    BYTE PTR [rax],al
  4181e0:	push   rdx
  4181e1:	gs ins DWORD PTR es:[rdi],dx
  4181e3:	outs   dx,DWORD PTR ds:[rsi]
  4181e4:	je     0x41824b
  4181e6:	and    BYTE PTR [rsi+0x69],ah
  4181e9:	ins    BYTE PTR es:[rdi],dx
  4181ea:	outs   dx,BYTE PTR gs:[rsi]
  4181ec:	(bad)  
  4181ed:	ins    DWORD PTR es:[rdi],dx
  4181ee:	and    BYTE PTR gs:[rax+0x61],ch
  4181f2:	jae    0x418214
  4181f4:	outs   dx,BYTE PTR ds:[rsi]
  4181f5:	outs   dx,DWORD PTR ds:[rsi]
  4181f6:	and    BYTE PTR [rbp+riz*2+0x6e],ch
  4181fa:	addr32 je 0x418265
  4181fd:	and    DWORD PTR [rdx],ecx
  4181ff:	add    BYTE PTR [rdx+0x62],dh
  418202:	add    BYTE PTR [rdx+0x65],dl
  418205:	data16 jne 0x41827b
  418208:	imul   ebp,DWORD PTR [rsi+0x67],0x206f7420
  41820f:	outs   dx,DWORD PTR ds:[rsi]
  418210:	jbe    0x418277
  418212:	jb     0x41828b
  418214:	jb     0x41827f
  418216:	je     0x41827d
  418218:	and    BYTE PTR [rip+0x25203a73],ah        # 0x2561bc91
  41821e:	jae    0x41822a
  418220:	add    BYTE PTR [rdi+0x62],dh
  418223:	add    BYTE PTR [rax],al
  418225:	add    BYTE PTR [rax],al
  418227:	add    BYTE PTR [rsi+0x61],al
  41822a:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  418232:	movsxd esi,DWORD PTR [rdx+0x65]
  418235:	(bad)  
  418236:	je     0x41829d
  418238:	and    BYTE PTR [rax+rbp*2+0x65],dh
  41823c:	and    BYTE PTR [rsi+0x69],ah
  41823f:	ins    BYTE PTR es:[rdi],dx
  418240:	and    BYTE PTR gs:[rip+0x25203a73],ah        # 0x2561bcba
  418247:	jae    0x418253
  418249:	add    BYTE PTR [rax],al
  41824b:	add    BYTE PTR [rax],al
  41824d:	add    BYTE PTR [rax],al
  41824f:	add    BYTE PTR [rdi+rbp*1+0x0],bl
  418253:	pop    rsp
  418254:	add    BYTE PTR [rip+0x732573],ah        # 0xb4a7cd
  41825a:	add    BYTE PTR [rax],al
  41825c:	add    BYTE PTR [rax],al
  41825e:	add    BYTE PTR [rax],al
  418260:	pop    rcx
  418261:	outs   dx,DWORD PTR ds:[rsi]
  418262:	jne    0x418284
  418264:	outs   dx,DWORD PTR fs:[rsi]
  418266:	outs   dx,BYTE PTR ds:[rsi]
  418267:	(bad)  
  418268:	je     0x41828a
  41826a:	push   0x20657661
  41826f:	jo     0x4182d6
  418271:	jb     0x4182e0
  418273:	imul   esi,DWORD PTR [rbx+0x73],0x206e6f69
  41827a:	je     0x4182eb
  41827c:	and    BYTE PTR [rbx+0x72],ah
  41827f:	gs (bad) 
  418281:	je     0x4182e8
  418283:	and    BYTE PTR [rip+0xa2e73],ah        # 0x4bb0fc
  418289:	add    BYTE PTR [rax],al
  41828b:	add    BYTE PTR [rax],al
  41828d:	add    BYTE PTR [rax],al
  41828f:	add    BYTE PTR [rax+rbp*2+0x65],dl
  418293:	and    BYTE PTR [rcx+rbp*2+0x72],ah
  418297:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
  41829c:	jns    0x4182be
  41829e:	outs   dx,BYTE PTR ds:[rsi]
  41829f:	(bad)  
  4182a0:	ins    DWORD PTR es:[rdi],dx
  4182a1:	and    BYTE PTR gs:[rip+0x73692073],ah        # 0x73aaa31b
  4182a8:	and    BYTE PTR [rdi+rbp*2+0x6f],dh
  4182ac:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  4182b0:	or     al,BYTE PTR cs:[eax]
  4182b4:	add    BYTE PTR [rax],al
  4182b6:	add    BYTE PTR [rax],al
  4182b8:	and    eax,0x65722073
  4182bd:	jae    0x418328
  4182bf:	fs gs jae 0x4182e3
  4182c3:	outs   dx,DWORD PTR ds:[rsi]
  4182c4:	outs   dx,BYTE PTR ds:[rsi]
  4182c5:	and    BYTE PTR [rcx+0x20],ah
  4182c8:	jb     0x41832f
  4182ca:	(bad)  
  4182cb:	fs sub eax,0x796c6e6f
  4182d1:	and    BYTE PTR [rsi+0x69],ah
  4182d4:	ins    BYTE PTR es:[rdi],dx
  4182d5:	and    BYTE PTR gs:[rbx+0x79],dh
  4182d9:	jae    0x41834f
  4182db:	gs ins DWORD PTR es:[rdi],dx
  4182dd:	or     al,BYTE PTR cs:[rax]
  4182e0:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  4182e2:	and    BYTE PTR [rbx+0x70],dh
  4182e5:	(bad)  
  4182e6:	movsxd esp,DWORD PTR [rbp+0x20]
  4182e9:	ins    BYTE PTR es:[rdi],dx
  4182ea:	gs data16 je 0x41830e
  4182ee:	outs   dx,DWORD PTR ds:[rsi]
  4182ef:	outs   dx,BYTE PTR ds:[rsi]
  4182f0:	and    BYTE PTR [rax+rbp*2+0x65],dh
  4182f4:	and    BYTE PTR [rsi+0x69],ah
  4182f7:	ins    BYTE PTR es:[rdi],dx
  4182f8:	and    BYTE PTR gs:[rbx+0x79],dh
  4182fc:	jae    0x418372
  4182fe:	gs ins DWORD PTR es:[rdi],dx
  418300:	and    BYTE PTR [rax+rbp*2+0x61],dh
  418304:	je     0x418326
  418306:	ja     0x418371
  418308:	ins    BYTE PTR es:[rdi],dx
  418309:	ins    BYTE PTR es:[rdi],dx
  41830a:	and    BYTE PTR [rbx+0x6f],ah
  41830d:	outs   dx,BYTE PTR ds:[rsi]
  41830e:	je     0x418371
  418310:	imul   ebp,DWORD PTR [rsi+0x20],0x20656874
  418317:	imul   esi,DWORD PTR fs:[rdx+0x65],0x726f7463
  41831f:	jns    0x418341
  418321:	and    eax,0xa2e73
  418326:	add    BYTE PTR [rax],al
  418328:	rex.XB (bad) 
  41832a:	outs   dx,BYTE PTR ds:[rsi]
  41832b:	outs   dx,BYTE PTR ds:[rsi]
  41832c:	outs   dx,DWORD PTR ds:[rsi]
  41832d:	je     0x41834f
  41832f:	movsxd esi,DWORD PTR [rdx+0x65]
  418332:	(bad)  
  418333:	je     0x41839a
  418335:	and    BYTE PTR [rcx+rbp*2+0x72],ah
  418339:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
  41833e:	jns    0x418360
  418340:	and    eax,0x65622073
  418345:	movsxd esp,DWORD PTR [rcx+0x75]
  418348:	jae    0x4183af
  41834a:	and    BYTE PTR [rcx+0x6f],bh
  41834d:	jne    0x41836f
  41834f:	gs js  0x4183b5
  418352:	gs gs fs gs and BYTE PTR fs:[rcx+0x6f],bh
  41835a:	jne    0x4183ce
  41835c:	and    BYTE PTR [rcx+0x75],dh
  41835f:	outs   dx,DWORD PTR ds:[rsi]
  418360:	je     0x4183c3
  418362:	or     al,BYTE PTR cs:[rax]
  418365:	rex.RB jb 0x4183da
  418368:	outs   dx,DWORD PTR ds:[rsi]
  418369:	jb     0x41838b
  41836b:	movsxd esi,DWORD PTR [rdx+0x65]
  41836e:	(bad)  
  41836f:	je     0x4183da
  418371:	outs   dx,BYTE PTR ds:[rsi]
  418372:	and    BYTE PTR [ecx+ebp*2+0x72],ah
  418377:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
  41837c:	jns    0x41839e
  41837e:	and    eax,0xa2e73
	...
  41838f:	add    BYTE PTR [rdi+rbp*1+0x3a],bl
  418393:	add    BYTE PTR [rbx+0x4f],al
  418396:	rex.WRX add BYTE PTR [rax+0x52],r10b
  41839a:	rex.WRX add BYTE PTR [rcx+0x55],r8b
  41839e:	pop    rax
  41839f:	add    BYTE PTR [rsi+0x55],cl
  4183a2:	rex.WR add BYTE PTR [rbx+0x4c],r8b
  4183a6:	rex.WRXB
  4183a7:	rex.XB
  4183a8:	rex.WXB and al,0x0
  4183ab:	rex.XB
  4183ac:	rex.WRXB
  4183ad:	rex.WRB add BYTE PTR [r8+rdx*2+0x54],r9b
  4183b2:	add    BYTE PTR [rsp+rdi*1+0x3e],bh
  4183b6:	and    bh,BYTE PTR [rdi]
  4183b8:	sub    al,BYTE PTR [rax]
  4183ba:	pop    rsp
  4183bb:	pop    rsp
  4183bc:	(bad)  
  4183bd:	pop    rsp
  4183be:	add    BYTE PTR [rax],al
  4183c0:	push   0x3d20646e
  4183c5:	and    BYTE PTR [rbx+0x75],ah
  4183c8:	jb     0x418436
  4183ca:	pop    rdi
  4183cb:	gs (bad) 
  4183cd:	jae    0x418448
  4183cf:	pop    rdi
  4183d0:	imul   ebp,DWORD PTR [rsi+0x69],0x3b292874
  4183d7:	add    BYTE PTR [rdi],ch
  4183d9:	sub    ah,BYTE PTR [rax]
  4183db:	rex.W
  4183dc:	gs jb  0x418444
  4183df:	and    BYTE PTR [rcx+0x73],ch
  4183e2:	and    BYTE PTR [rcx+0x20],ah
  4183e5:	ins    BYTE PTR es:[rdi],dx
  4183e6:	imul   esi,DWORD PTR [rbx+0x74],0x20666f20
  4183ed:	outs   dx,DWORD PTR ds:[rsi]
  4183ee:	jo     0x418464
  4183f0:	imul   ebp,DWORD PTR [rdi+0x6e],0x68742073
  4183f7:	and    BYTE PTR gs:[rbx+0x75],ah
  4183fb:	jb     0x418469
  4183fd:	and    BYTE PTR [rbx+0x6f],ah
  418400:	fs and BYTE PTR gs:[rbp+0x73],dh
  418405:	gs and BYTE PTR fs:[rax+rbp*2+0x61],dh
  41840b:	je     0x41842d
  41840d:	movsxd esp,DWORD PTR [rcx+0x6e]
  418410:	outs   dx,BYTE PTR ds:[rsi]
  418411:	outs   dx,DWORD PTR ds:[rsi]
  418412:	je     0x418434
  418414:	addr32 gs je 0x418438
  418418:	outs   dx,BYTE PTR gs:[esi]
  41841b:	gs jb  0x41847f
  41841e:	je     0x418485
  418420:	add    BYTE PTR fs:[rax],al
  418423:	sub    ch,BYTE PTR [rdi]
  418425:	add    BYTE PTR [rdx+0x65],dh
  418428:	je     0x41844a
  41842a:	cmp    eax,0x72756320
  41842f:	ins    BYTE PTR es:[rdi],dx
  418430:	pop    rdi
  418431:	gs (bad) 
  418433:	jae    0x4184ae
  418435:	pop    rdi
  418436:	jo     0x41849d
  418438:	jb     0x4184a0
  41843a:	outs   dx,DWORD PTR ds:[rsi]
  41843b:	jb     0x4184aa
  41843d:	sub    BYTE PTR [rax+0x6e],ch
  418440:	sub    DWORD PTR fs:[rbx],edi
  418443:	add    BYTE PTR [rbx+0x75],ah
  418446:	jb     0x4184b4
  418448:	pop    rdi
  418449:	gs (bad) 
  41844b:	jae    0x4184c6
  41844d:	pop    rdi
  41844e:	movsxd ebp,DWORD PTR [rbp+riz*2+0x61]
  418452:	outs   dx,BYTE PTR ds:[rsi]
  418453:	jne    0x4184c5
  418455:	sub    BYTE PTR [rax+0x6e],ch
  418458:	sub    DWORD PTR fs:[rbx],edi
  41845b:	add    BYTE PTR [rax+0x6e],ch
  41845e:	and    BYTE PTR fs:[rip+0x4c554e20],bh        # 0x4c96d285
  418465:	cmp    r8,QWORD PTR [rax]
  418468:	(bad)  
  418469:	sub    ch,BYTE PTR [rdx]
  41846b:	sub    ch,BYTE PTR [rdx]
  41846d:	sub    ch,BYTE PTR [rdx]
  41846f:	sub    ch,BYTE PTR [rdx]
  418471:	sub    ah,BYTE PTR [rax]
  418473:	push   rbx
  418474:	(bad)  
  418475:	ins    DWORD PTR es:[rdi],dx
  418476:	jo     0x4184e4
  418478:	and    BYTE PTR gs:[rbx+0x6f],ah
  41847c:	fs and BYTE PTR gs:[rdi+0x65],ah
  418481:	outs   dx,BYTE PTR ds:[rsi]
  418482:	gs jb  0x4184e6
  418485:	je     0x4184ec
  418487:	and    BYTE PTR fs:[rdx+0x79],ah
  41848b:	and    BYTE PTR [rax+rbp*2+0x65],dh
  41848f:	and    BYTE PTR [rbx+0x75],ah
  418492:	jb     0x418500
  418494:	and    BYTE PTR [rbx+0x6f],ah
  418497:	ins    DWORD PTR es:[rdi],dx
  418498:	ins    DWORD PTR es:[rdi],dx
  418499:	(bad)  
  41849a:	outs   dx,BYTE PTR ds:[rsi]
  41849b:	and    BYTE PTR fs:[rcx+rbp*2+0x6e],ch
  4184a0:	and    BYTE PTR gs:[rdi+rbp*2+0x6f],dh
  4184a5:	ins    BYTE PTR es:[rdi],dx
  4184a6:	and    BYTE PTR [rdx],ch
  4184a8:	sub    ch,BYTE PTR [rdx]
  4184aa:	sub    ch,BYTE PTR [rdx]
  4184ac:	sub    ch,BYTE PTR [rdx]
  4184ae:	sub    ch,BYTE PTR [rdx]
  4184b0:	sub    al,BYTE PTR [rax]
  4184b2:	sub    eax,0x747700
  4184b7:	add    BYTE PTR [rsi+0x61],al
  4184ba:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  4184c2:	outs   dx,DWORD PTR ds:[rsi]
  4184c3:	jo     0x41852a
  4184c5:	outs   dx,BYTE PTR ds:[rsi]
  4184c6:	and    BYTE PTR [rip+0x6f742073],ah        # 0x6fb5a53f
  4184cc:	and    BYTE PTR [rdi+0x72],dh
  4184cf:	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x6362696c
  4184d7:	jne    0x41854b
  4184d9:	ins    BYTE PTR es:[rdi],dx
  4184da:	and    BYTE PTR [rbx+0x6f],ah
  4184dd:	fs and DWORD PTR gs:[rdx],ecx
  4184e1:	add    BYTE PTR [rip+0x20000a73],ah        # 0x20418f5a
  4184e7:	and    BYTE PTR [rip+0xa000a73],ah        # 0xa418f60
  4184ed:	add    BYTE PTR [rax],ah
  4184ef:	and    BYTE PTR [rdx+0x65],dh
  4184f2:	je     0x418569
  4184f4:	jb     0x418564
  4184f6:	and    BYTE PTR [rax],ch
  4184f8:	imul   ebp,DWORD PTR [rsi+0x74],0x74657229
  4184ff:	cmp    eax,DWORD PTR [rax]
  418501:	jge    0x418503
  418503:	add    BYTE PTR [rax],al
  418505:	add    BYTE PTR [rax],al
  418507:	add    BYTE PTR [rdi],ch
  418509:	sub    ch,BYTE PTR [rdx]
  41850b:	sub    ch,BYTE PTR [rdx]
  41850d:	and    BYTE PTR [rbp+0x6e],al
  418510:	and    BYTE PTR fs:[rdi+0x66],ch
  418514:	and    BYTE PTR [rbx+0x61],dh
  418517:	ins    DWORD PTR es:[rdi],dx
  418518:	jo     0x418586
  41851a:	and    BYTE PTR gs:[rbx+0x6f],ah
  41851e:	fs and BYTE PTR gs:[rdx],ch
  418522:	sub    ch,BYTE PTR [rdx]
  418524:	sub    ch,BYTE PTR [rdi]
	...
  41853e:	add    BYTE PTR [rax],al
  418540:	and    al,BYTE PTR [rcx+rax*2+0x0]
  418547:	add    dh,ch
  418549:	test   BYTE PTR [rcx+0x0],al
  41854c:	add    BYTE PTR [rax],al
  41854e:	add    BYTE PTR [rax],al
  418550:	add    DWORD PTR [rbp+0x41],eax
  418556:	add    BYTE PTR [rax],al
  418558:	or     BYTE PTR [rbp+0x41],al
	...
  418566:	add    BYTE PTR [rax],al
  418568:	and    BYTE PTR [rax],ah
  41856a:	and    BYTE PTR [rcx+0x73],ah
  41856d:	and    BYTE PTR [rbx+0x6f],dh
  418570:	jne    0x4185e4
  418572:	movsxd esp,DWORD PTR [rbp+0x20]
  418575:	gs (bad) 
  418577:	jae    0x4185e2
  418579:	ins    BYTE PTR es:[rdi],dx
  41857a:	jns    0x4185aa
  41857c:	and    BYTE PTR [rcx+0x6f],bl
  41857f:	jne    0x4185a1
  418581:	ins    DWORD PTR es:[rdi],dx
  418582:	(bad)  
  418583:	jns    0x4185a5
  418585:	jae    0x4185ec
  418587:	ins    BYTE PTR es:[rdi],dx
  418588:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x74]
  41858d:	outs   dx,DWORD PTR ds:[rsi]
  41858e:	and    BYTE PTR [rbp+0x69],ah
  418591:	je     0x4185fb
  418593:	gs jb  0x4185b6
  418596:	outs   dx,BYTE PTR ds:[rsi]
  418597:	outs   dx,DWORD PTR ds:[rsi]
  418598:	je     0x4185ba
  41859a:	jne    0x41860f
  41859c:	and    BYTE PTR gs:[rax+rbp*2+0x65],dh
  4185a1:	ins    DWORD PTR es:[rdi],dx
  4185a2:	and    BYTE PTR [rdi+0x72],ch
  4185a5:	and    BYTE PTR [rcx+0x6d],ch
  4185a8:	jo     0x418616
  4185aa:	gs ins DWORD PTR es:[rdi],dx
  4185ac:	outs   dx,BYTE PTR gs:[rsi]
  4185ae:	je     0x4185b0
  4185b0:	and    BYTE PTR [rax],ah
  4185b2:	and    BYTE PTR [rax+rbp*2+0x65],dh
  4185b6:	ins    DWORD PTR es:[rdi],dx
  4185b7:	and    BYTE PTR [rcx+0x6f],bh
  4185ba:	jne    0x41862e
  4185bc:	jae    0x418623
  4185be:	ins    BYTE PTR es:[rdi],dx
  4185bf:	data16 add BYTE PTR cs:[rax],al
	...
  4185df:	add    al,bl
  4185e1:	add    DWORD PTR [rcx+0x0],0x0
  4185e5:	add    BYTE PTR [rax],al
  4185e7:	add    BYTE PTR [rax-0x7b],ch
  4185ea:	add    BYTE PTR [r8],al
  4185ed:	add    BYTE PTR [rax],al
  4185ef:	add    BYTE PTR [rax+0x4185],dh
  4185f5:	add    BYTE PTR [rax],al
  4185f7:	add    BYTE PTR [rdx],ah
  4185f9:	test   BYTE PTR [rcx+0x0],al
	...
  418608:	and    BYTE PTR [rdx],ch
  41860a:	and    BYTE PTR [rcx+0x6c],al
  41860d:	ins    BYTE PTR es:[rdi],dx
  41860e:	and    BYTE PTR [rbx+0x75],ah
  418611:	jb     0x41867f
  418613:	pop    rdi
  418614:	gs (bad) 
  418616:	jae    0x418691
  418618:	pop    rdi
  418619:	jae    0x418680
  41861b:	je     0x41868c
  41861d:	jo     0x418693
  41861f:	sub    BYTE PTR [rcx],ch
  418621:	and    BYTE PTR [rdi+0x70],ch
  418624:	je     0x41868f
  418626:	outs   dx,DWORD PTR ds:[rsi]
  418627:	outs   dx,BYTE PTR ds:[rsi]
  418628:	jae    0x41864a
  41862a:	(bad)  
  41862b:	jb     0x418692
  41862d:	and    BYTE PTR [rdi+rbp*2+0x63],ah
  418631:	jne    0x4186a0
  418633:	outs   dx,BYTE PTR gs:[rsi]
  418635:	je     0x41869c
  418637:	and    BYTE PTR fs:[rcx+0x74],ah
  41863b:	cmp    al,BYTE PTR [rax]
  41863d:	add    BYTE PTR [rax],al
  41863f:	add    BYTE PTR [rax],ah
  418641:	sub    ah,BYTE PTR [rax]
  418643:	push   0x73707474
  418648:	cmp    ch,BYTE PTR [rdi]
  41864a:	(bad)  
  41864b:	movsxd esi,DWORD PTR [rbp+0x72]
  41864e:	ins    BYTE PTR es:[rdi],dx
  41864f:	cs push 0x2e787861
  418655:	jae    0x4186bc
  418657:	(bad)  
  418658:	ins    BYTE PTR es:[rdi],dx
  418659:	imul   esp,DWORD PTR [rdx+0x63],0x2f6c7275
  418660:	movsxd ebp,DWORD PTR [rdi]
  418662:	movsxd esi,DWORD PTR [rbp+0x72]
  418665:	ins    BYTE PTR es:[rdi],dx
  418666:	pop    rdi
  418667:	gs (bad) 
  418669:	jae    0x4186e4
  41866b:	pop    rdi
  41866c:	jae    0x4186d3
  41866e:	je     0x4186df
  418670:	jo     0x4186e6
  418672:	cs push 0x6c6d74
  418678:	and    BYTE PTR [rdx],ch
  41867a:	sub    ch,BYTE PTR [rdx]
  41867c:	sub    ch,BYTE PTR [rdx]
  41867e:	sub    ch,BYTE PTR [rdx]
  418680:	sub    ch,BYTE PTR [rdx]
  418682:	sub    ch,BYTE PTR [rdx]
  418684:	sub    ch,BYTE PTR [rdx]
  418686:	sub    ch,BYTE PTR [rdx]
  418688:	sub    ch,BYTE PTR [rdx]
  41868a:	sub    ch,BYTE PTR [rdx]
  41868c:	sub    ch,BYTE PTR [rdx]
  41868e:	sub    ch,BYTE PTR [rdx]
  418690:	sub    ch,BYTE PTR [rdx]
  418692:	sub    ch,BYTE PTR [rdx]
  418694:	sub    ch,BYTE PTR [rdx]
  418696:	sub    ch,BYTE PTR [rdx]
  418698:	sub    ch,BYTE PTR [rdx]
  41869a:	sub    ch,BYTE PTR [rdx]
  41869c:	sub    ch,BYTE PTR [rdx]
  41869e:	sub    ch,BYTE PTR [rdx]
  4186a0:	sub    ch,BYTE PTR [rdx]
  4186a2:	sub    ch,BYTE PTR [rdx]
  4186a4:	sub    ch,BYTE PTR [rdx]
  4186a6:	sub    ch,BYTE PTR [rdx]
  4186a8:	sub    ch,BYTE PTR [rdx]
  4186aa:	sub    ch,BYTE PTR [rdx]
  4186ac:	sub    ch,BYTE PTR [rdx]
  4186ae:	sub    ch,BYTE PTR [rdx]
  4186b0:	sub    ch,BYTE PTR [rdx]
  4186b2:	sub    ch,BYTE PTR [rdx]
  4186b4:	sub    ch,BYTE PTR [rdx]
  4186b6:	sub    ch,BYTE PTR [rdx]
  4186b8:	sub    ch,BYTE PTR [rdx]
  4186ba:	sub    ch,BYTE PTR [rdx]
  4186bc:	sub    ch,BYTE PTR [rdx]
  4186be:	sub    ch,BYTE PTR [rdx]
  4186c0:	sub    ch,BYTE PTR [rdi]
  4186c2:	add    BYTE PTR [rbx],ah
  4186c4:	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  4186cb:	and    BYTE PTR [rbx+riz*2],bh
  4186ce:	jne    0x418742
  4186d0:	ins    BYTE PTR es:[rdi],dx
  4186d1:	(bad)  
  4186d2:	movsxd esi,DWORD PTR [rbp+0x72]
  4186d5:	ins    BYTE PTR es:[rdi],dx
  4186d6:	cs push 0x3e
  4186dc:	add    BYTE PTR [rax],al
  4186de:	add    BYTE PTR [rax],al
  4186e0:	imul   ebp,DWORD PTR [rsi+0x74],0x69616d20
  4186e7:	outs   dx,BYTE PTR ds:[rsi]
  4186e8:	sub    BYTE PTR [rcx+0x6e],ch
  4186eb:	je     0x41870d
  4186ed:	(bad)  
  4186ee:	jb     0x418757
  4186f0:	movsxd ebp,DWORD PTR [rax+riz*1]
  4186f3:	movsxd ebp,DWORD PTR [rax+0x61]
  4186f6:	jb     0x418718
  4186f8:	sub    ah,BYTE PTR [rcx+0x72]
  4186fb:	addr32 jbe 0x418759
  4186fe:	pop    rbp
  4186ff:	sub    DWORD PTR [rax],eax
  418701:	jnp    0x418703
  418703:	and    BYTE PTR [rax],ah
  418705:	rex.XB push r13
  418707:	push   rdx
  418708:	movsxd r13,DWORD PTR [rdi+0x64]
  41870c:	and    BYTE PTR gs:[rdx+0x65],dh
  418710:	je     0x41874d
  418712:	add    BYTE PTR [rax],ah
  418714:	and    BYTE PTR [rbx+0x55],al
  418717:	push   rdx
  418718:	rex.WR and BYTE PTR [rdx],r13b
  41871b:	push   0x3b646e
	...
  418740:	push   0x4184
  418745:	add    BYTE PTR [rax],al
  418747:	add    BYTE PTR [rax],cl
  418749:	xchg   BYTE PTR [rcx+0x0],al
  41874c:	add    BYTE PTR [rax],al
  41874e:	add    BYTE PTR [rax],al
  418750:	xchg   BYTE PTR [rcx+0x0],al
  418754:	add    BYTE PTR [rax],al
  418756:	add    BYTE PTR [rax],al
  418758:	js     0x4186e0
  41875a:	add    BYTE PTR [r8],al
  41875d:	add    BYTE PTR [rax],al
  41875f:	add    bl,al
  418761:	xchg   BYTE PTR [rcx+0x0],al
  418764:	add    BYTE PTR [rax],al
  418766:	add    BYTE PTR [rax],al
  418768:	and    al,BYTE PTR [rcx+rax*2+0x0]
  41876f:	add    al,ah
  418771:	xchg   BYTE PTR [rcx+0x0],al
  418774:	add    BYTE PTR [rax],al
  418776:	add    BYTE PTR [rax],al
  418778:	add    DWORD PTR [rdi+0x41],eax
  41877e:	add    BYTE PTR [rax],al
  418780:	add    eax,DWORD PTR [rdi+0x41]
  418786:	add    BYTE PTR [rax],al
  418788:	adc    eax,DWORD PTR [rdi+0x41]
	...
  4187be:	add    BYTE PTR [rax],al
  4187c0:	cmp    ebp,DWORD PTR [rax+rax*1]
  4187c3:	and    eax,0x5b353532
  4187c8:	pop    rsi
  4187c9:	cmp    eax,0x6f003d5d
  4187ce:	jne    0x418844
  4187d0:	and    BYTE PTR [rdi+0x66],ch
  4187d3:	and    BYTE PTR [rbp+0x65],ch
  4187d6:	ins    DWORD PTR es:[rdi],dx
  4187d7:	outs   dx,DWORD PTR ds:[rsi]
  4187d8:	jb     0x418853
  4187da:	or     al,BYTE PTR [rax]
  4187dc:	je     0x418857
  4187de:	jo     0x418845
  4187e0:	cmp    eax,0x32312500
  4187e5:	(bad)  
  4187e6:	pop    rbx
  4187e7:	pop    rsi
  4187e8:	(bad)  
  4187e9:	pop    rbp
  4187ea:	(bad)  
  4187eb:	and    eax,0x5b373231
  4187f0:	pop    rsi
  4187f1:	cmp    ebp,DWORD PTR [rdx+rcx*1]
  4187f4:	pop    rbp
  4187f5:	add    BYTE PTR [rax],al
  4187f7:	add    BYTE PTR [rcx+0x6c],cl
  4187fa:	ins    BYTE PTR es:[rdi],dx
  4187fb:	gs addr32 (bad) 
  4187fe:	ins    BYTE PTR es:[rdi],dx
  4187ff:	ins    BYTE PTR es:[rdi],dx
  418800:	jns    0x418822
  418802:	outs   dx,WORD PTR ds:[rsi]
  418804:	jb     0x418873
  418806:	(bad)  
  418807:	je     0x41887d
  418809:	gs and BYTE PTR fs:[rbx+0x6f],ah
  41880e:	outs   dx,BYTE PTR ds:[rsi]
  41880f:	je     0x418876
  418811:	outs   dx,BYTE PTR ds:[rsi]
  418812:	je     0x418841
  418814:	je     0x41888f
  418816:	jo     0x41887d
  418818:	and    BYTE PTR [rsi+0x69],ah
  41881b:	gs ins BYTE PTR es:[rdi],dx
  41881d:	and    DWORD PTR fs:[rdx],ecx
  418820:	add    BYTE PTR [rbx],bh
  418822:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6d61
  418829:	gs cmp eax,0x6c696600
  41882f:	outs   dx,BYTE PTR gs:[rsi]
  418831:	(bad)  
  418832:	ins    DWORD PTR es:[rdi],dx
  418833:	gs cmp eax,0x696b7300
  418839:	jo     0x41885b
  41883b:	jne    0x4188ab
  41883d:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  418841:	outs   dx,BYTE PTR ds:[rsi]
  418842:	and    BYTE PTR [rsi+0x6f],ah
  418845:	jb     0x4188b4
  418847:	and    BYTE PTR [rsi+0x69],ah
  41884a:	gs ins BYTE PTR es:[rdi],dx
  41884c:	cmp    ah,BYTE PTR fs:[rax]
  41884f:	and    eax,0x45000a73
  418854:	jb     0x4188c8
  418856:	outs   dx,DWORD PTR ds:[rsi]
  418857:	jb     0x418879
  418859:	(bad)  
  41885a:	jne    0x4188c5
  41885c:	ins    BYTE PTR es:[rdi],dx
  41885d:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x726f6620
  418865:	ins    DWORD PTR es:[rdi],dx
  418866:	and    BYTE PTR [rax+0x6f],dh
  418869:	jae    0x4188df
  41886b:	and    DWORD PTR [rdx],ecx
  41886d:	add    BYTE PTR [rbx+0x75],ah
  418870:	jb     0x4188de
  418872:	pop    rdi
  418873:	outs   dx,WORD PTR ds:[rsi]
  418875:	jb     0x4188e4
  418877:	(bad)  
  418878:	fs and BYTE PTR fs:[rsi+0x61],ah
  41887d:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x3b000a21
  418885:	je     0x418900
  418887:	jo     0x4188ee
  418889:	cmp    eax,0x0
  41888e:	add    BYTE PTR [rax],al
  418890:	movsxd esi,DWORD PTR [rbp+0x72]
  418893:	ins    BYTE PTR es:[rdi],dx
  418894:	pop    rdi
  418895:	outs   dx,WORD PTR ds:[rsi]
  418897:	jb     0x418906
  418899:	(bad)  
  41889a:	fs and BYTE PTR fs:[rsi+0x61],ah
  41889f:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x6f70202c
  4188a7:	jae    0x41891c
  4188a9:	imul   esp,DWORD PTR [rdx+0x6c],0x68742079
  4188b0:	and    BYTE PTR gs:[rsi+0x69],ah
  4188b4:	ins    BYTE PTR es:[rdi],dx
  4188b5:	and    BYTE PTR gs:[rip+0x73692073],ah        # 0x73aaa92f
  4188bc:	and    BYTE PTR [rdx+0x61],ah
  4188bf:	and    DWORD PTR fs:[rdx],ecx
  4188c2:	add    BYTE PTR [rax],al
  4188c4:	add    BYTE PTR [rax],al
  4188c6:	add    BYTE PTR [rax],al
  4188c8:	rex.WB ins BYTE PTR es:[rdi],dx
  4188ca:	ins    BYTE PTR es:[rdi],dx
  4188cb:	gs addr32 (bad) 
  4188ce:	ins    BYTE PTR es:[rdi],dx
  4188cf:	ins    BYTE PTR es:[rdi],dx
  4188d0:	jns    0x4188f2
  4188d2:	outs   dx,WORD PTR ds:[rsi]
  4188d4:	jb     0x418943
  4188d6:	(bad)  
  4188d7:	je     0x41894d
  4188d9:	gs and BYTE PTR fs:[rcx+0x6e],ch
  4188de:	jo     0x418955
  4188e0:	je     0x418902
  4188e2:	imul   sp,WORD PTR [rbp+0x6c],0x2164
  4188e8:	or     al,BYTE PTR [rax]
	...
  4188fe:	add    BYTE PTR [rax],al
  418900:	jo     0x41896d
  418902:	movsxd esi,DWORD PTR [rbx+0x31]
  418905:	xor    DWORD PTR [rdx],edi
  418907:	add    BYTE PTR [rdx],bh
  418909:	pop    rsp
  41890a:	add    BYTE PTR [rbx+rsi*2],bh
  41890d:	je     0x418973
  41890f:	imul   ebp,DWORD PTR [rsi+0x3e],0x2d6f6e00
  418916:	add    BYTE PTR [rax],al
  418918:	sub    eax,0x6172742d
  41891d:	movsxd esp,DWORD PTR [rbp+0x20]
  418920:	outs   dx,DWORD PTR ds:[rsi]
  418921:	jbe    0x418988
  418923:	jb     0x418997
  418925:	imul   esp,DWORD PTR [rbp+riz*2+0x73],0x206e6120
  41892d:	gs (bad) 
  41892f:	jb     0x41899d
  418931:	imul   esp,DWORD PTR [rbp+0x72],0x61727420
  418938:	movsxd esp,DWORD PTR [rbp+0x2f]
  41893b:	jbe    0x4189a2
  41893d:	jb     0x4189a1
  41893f:	outs   dx,DWORD PTR ds:[rsi]
  418940:	jae    0x4189a7
  418942:	and    BYTE PTR [rdi+0x70],ch
  418945:	je     0x4189b0
  418947:	outs   dx,DWORD PTR ds:[rsi]
  418948:	outs   dx,BYTE PTR ds:[rsi]
  418949:	or     al,BYTE PTR [rax]
  41894b:	add    BYTE PTR [rax],al
  41894d:	add    BYTE PTR [rax],al
  41894f:	add    BYTE PTR [rip+0x6172742d],ch        # 0x61b3fd82
  418955:	movsxd esp,DWORD PTR [rbp+0x2d]
  418958:	(bad)  
  418959:	jae    0x4189be
  41895b:	imul   ebp,DWORD PTR [rcx+0x20],0x7265766f
  418962:	jb     0x4189cd
  418964:	fs gs jae 0x418988
  418968:	(bad)  
  418969:	outs   dx,BYTE PTR ds:[rsi]
  41896a:	and    BYTE PTR [rbp+0x61],ah
  41896d:	jb     0x4189db
  41896f:	imul   esp,DWORD PTR [rbp+0x72],0x61727420
  418976:	movsxd esp,DWORD PTR [rbp+0x2f]
  418979:	jbe    0x4189e0
  41897b:	jb     0x4189df
  41897d:	outs   dx,DWORD PTR ds:[rsi]
  41897e:	jae    0x4189e5
  418980:	and    BYTE PTR [rdi+0x70],ch
  418983:	je     0x4189ee
  418985:	outs   dx,DWORD PTR ds:[rsi]
  418986:	outs   dx,BYTE PTR ds:[rsi]
  418987:	or     al,BYTE PTR [rax]
  418989:	ja     0x41898b
  41898b:	add    BYTE PTR [rax],al
  41898d:	add    BYTE PTR [rax],al
  41898f:	add    BYTE PTR [rbp+0x6e],dh
  418992:	jae    0x418a09
  418994:	jo     0x418a06
  418996:	outs   dx,DWORD PTR ds:[rsi]
  418997:	jb     0x418a0d
  418999:	gs and BYTE PTR fs:[rdx+0x61],dh
  41899e:	je     0x418a05
  4189a0:	and    BYTE PTR [rbp+0x6e],dh
  4189a3:	imul   esi,DWORD PTR [rsi+rbp*1+0x20],0x20657355
  4189ab:	rex.RXB sub al,0x20
  4189ae:	rex.WRB sub al,0x20
  4189b1:	rex.WXB and BYTE PTR [r15+0x72],bpl
  4189b5:	and    BYTE PTR [rdx+0x21],al
  4189b8:	or     al,BYTE PTR [rax]
  4189ba:	sub    eax,0x747700
  4189bf:	rex.RX (bad) 
  4189c1:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  4189c9:	outs   dx,DWORD PTR ds:[rsi]
  4189ca:	jo     0x418a31
  4189cc:	outs   dx,BYTE PTR ds:[rsi]
  4189cd:	and    BYTE PTR [rip+0xa2173],ah        # 0x4bab46
  4189d3:	and    eax,0x202d2064
  4189d8:	and    eax,0x61620064
  4189dd:	and    BYTE PTR fs:[rdx+0x61],dh
  4189e1:	outs   dx,BYTE PTR ds:[rsi]
  4189e2:	and    BYTE PTR gs:[ecx+0x6e],ch
  4189e7:	jo     0x418a5e
  4189e9:	je     0x4189f5
  4189eb:	add    BYTE PTR [rax],al
  4189ed:	add    BYTE PTR [rax],al
  4189ef:	add    BYTE PTR [rip+0x74656d2d],ch        # 0x74a6f722
  4189f5:	(bad)  
  4189f6:	ins    BYTE PTR es:[rdi],dx
  4189f7:	imul   ebp,DWORD PTR [rsi+0x6b],0x74706f20
  4189fe:	imul   ebp,DWORD PTR [rdi+0x6e],0x20736920
  418a05:	imul   esp,DWORD PTR [rdi+0x6e],0x6465726f
  418a0c:	and    BYTE PTR [rdx+0x65],ah
  418a0f:	movsxd esp,DWORD PTR [rcx+0x75]
  418a12:	jae    0x418a79
  418a14:	and    BYTE PTR [rax+rbp*2+0x65],dh
  418a18:	and    BYTE PTR [rdx+0x69],ah
  418a1b:	outs   dx,BYTE PTR ds:[rsi]
  418a1c:	(bad)  
  418a1d:	jb     0x418a98
  418a1f:	and    BYTE PTR [rcx+0x73],ch
  418a22:	and    BYTE PTR [rdx+0x75],ah
  418a25:	imul   ebp,DWORD PTR [rsp+rsi*2+0x20],0x68746977
  418a2d:	outs   dx,DWORD PTR ds:[rsi]
  418a2e:	jne    0x418aa4
  418a30:	and    BYTE PTR [rax+rbp*2+0x65],dh
  418a34:	and    BYTE PTR [rbp+0x65],cl
  418a37:	je     0x418a9a
  418a39:	ins    BYTE PTR es:[rdi],dx
  418a3a:	imul   ebp,DWORD PTR [rsi+0x6b],0x70757320
  418a41:	jo     0x418ab2
  418a43:	jb     0x418ab9
  418a45:	or     al,BYTE PTR cs:[rax]
  418a48:	sub    eax,0x7365742d
  418a4d:	je     0x418a7c
  418a4f:	gs jbe 0x418ab7
  418a52:	outs   dx,BYTE PTR ds:[rsi]
  418a53:	je     0x418a75
  418a55:	imul   esi,DWORD PTR [rbx+0x20],0x6f6e6769
  418a5c:	jb     0x418ac3
  418a5e:	and    BYTE PTR fs:[rbp+0x6e],dh
  418a62:	ins    BYTE PTR es:[rdi],dx
  418a63:	gs jae 0x418ad9
  418a66:	and    BYTE PTR [rcx+0x20],ah
  418a69:	fs gs (bad) 
  418a6c:	jne    0x418ad5
  418a6e:	and    BYTE PTR [rdx+0x75],ah
  418a71:	imul   ebp,DWORD PTR [rsp+riz*2+0x21],0x6272000a
  418a79:	add    BYTE PTR [rax],al
  418a7b:	add    BYTE PTR [rax],al
  418a7d:	add    BYTE PTR [rax],al
  418a7f:	add    BYTE PTR [rbx+0x6f],al
  418a82:	jne    0x418af0
  418a84:	outs   dx,BYTE PTR fs:[rsi]
  418a86:	(bad)  
  418a87:	je     0x418aa9
  418a89:	jb     0x418af0
  418a8b:	(bad)  
  418a8c:	and    BYTE PTR fs:[rcx+riz*2+0x74],ah
  418a91:	(bad)  
  418a92:	and    BYTE PTR [rsi+0x72],ah
  418a95:	outs   dx,DWORD PTR ds:[rsi]
  418a96:	ins    DWORD PTR es:[rdi],dx
  418a97:	and    BYTE PTR [rsi+0x69],ah
  418a9a:	ins    BYTE PTR es:[rdi],dx
  418a9b:	and    BYTE PTR gs:[rdx],ah
  418a9e:	and    eax,0x202c2273
  418aa3:	je     0x418b0d
  418aa5:	imul   esi,DWORD PTR [rbx+0x20],0x656b616d
  418aac:	jae    0x418ace
  418aae:	(bad)  
  418aaf:	outs   dx,BYTE PTR ds:[rsi]
  418ab0:	and    BYTE PTR [rbp+0x6d],ah
  418ab3:	jo     0x418b29
  418ab5:	jns    0x418ad7
  418ab7:	push   rax
  418ab8:	rex.WRXB push r11
  418aba:	push   rsp
  418abb:	or     al,BYTE PTR cs:[rax]
  418abe:	add    BYTE PTR [rip+0x3d732a2e],ah        # 0x3db4b4f2
  418ac4:	and    eax,0x613b0073
  418ac9:	jne    0x418b3f
  418acb:	outs   dx,DWORD PTR ds:[rsi]
  418acc:	add    BYTE PTR [rbx+0x52],dl
  418acf:	push   rax
	...
  418ad8:	sub    eax,0x636e692d
  418add:	ins    BYTE PTR es:[rdi],dx
  418ade:	jne    0x418b44
  418ae0:	and    BYTE PTR gs:[rcx+0x6e],ah
  418ae4:	and    BYTE PTR fs:[rip+0x6d65722d],ch        # 0x6da6fd18
  418aeb:	outs   dx,DWORD PTR ds:[rsi]
  418aec:	je     0x418b53
  418aee:	sub    eax,0x64616568
  418af3:	gs jb  0x418b23
  418af6:	outs   dx,BYTE PTR ds:[rsi]
  418af7:	(bad)  
  418af8:	ins    DWORD PTR es:[rdi],dx
  418af9:	and    BYTE PTR gs:[rbx+0x61],ah
  418afd:	outs   dx,BYTE PTR ds:[rsi]
  418afe:	outs   dx,BYTE PTR ds:[rsi]
  418aff:	outs   dx,DWORD PTR ds:[rsi]
  418b00:	je     0x418b22
  418b02:	(bad)  
  418b03:	and    BYTE PTR gs:[rbx+0x6f],ah
  418b07:	ins    DWORD PTR es:[rdi],dx
  418b08:	(bad)  
  418b09:	imul   ebp,DWORD PTR [rsi+0x65],0xa2e64
  418b10:	gs jb  0x418b85
  418b13:	outs   dx,DWORD PTR ds:[rsi]
  418b14:	jb     0x418b36
  418b16:	je     0x418b8a
  418b18:	jns    0x418b83
  418b1a:	outs   dx,BYTE PTR ds:[rsi]
  418b1b:	and    BYTE PTR [edx+0x65],dh
  418b1f:	(bad)  
  418b20:	and    BYTE PTR fs:[rbx+0x6f],ah
  418b24:	outs   dx,BYTE PTR ds:[rsi]
  418b25:	imul   sp,WORD PTR [rdi+0x20],0x7266
  418b2b:	outs   dx,DWORD PTR ds:[rsi]
  418b2c:	ins    DWORD PTR es:[rdi],dx
  418b2d:	and    BYTE PTR [rax+rbp*2+0x65],dh
  418b31:	and    BYTE PTR [rdi],ah
  418b33:	and    eax,0x66202773
  418b38:	imul   ebp,DWORD PTR [rbp+riz*2+0xa],0x0
  418b40:	and    BYTE PTR [r11+0x70],sil
  418b44:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  418b48:	imul   esp,DWORD PTR [rbp+0x64],0x6e617220
  418b4f:	and    BYTE PTR gs:[ebp+0x55],cl
  418b54:	push   rbx
  418b55:	push   rsp
  418b56:	and    BYTE PTR [rcx+0x6e],ch
  418b59:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
  418b5d:	and    BYTE PTR gs:[rcx+0x74],ah
  418b61:	and    BYTE PTR [rbp+riz*2+0x61],ch
  418b65:	jae    0x418bdb
  418b67:	and    BYTE PTR [rdi+0x6e],ch
  418b6a:	and    BYTE PTR gs:[rcx+riz*2+0x73],ah
  418b6f:	push   0x292d2820
  418b74:	and    BYTE PTR cs:[rcx+0x70],al
  418b78:	jo     0x418bdf
  418b7a:	outs   dx,BYTE PTR ds:[rsi]
  418b7b:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x656e6f20
  418b83:	and    BYTE PTR [rsi+0x6f],ah
  418b86:	jb     0x418ba8
  418b88:	jns    0x418bf9
  418b8a:	jne    0x418bad
  418b8c:	or     al,BYTE PTR [rax]
  418b8e:	and    eax,0x64343649
  418b93:	sub    eax,0x0
  418b98:	rex.WB outs dx,BYTE PTR ds:[rsi]
  418b9a:	jbe    0x418bfd
  418b9c:	ins    BYTE PTR es:[rdi],dx
  418b9d:	imul   esp,DWORD PTR [rax+riz*1+0x63],0x61726168
  418ba5:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  418ba9:	and    BYTE PTR [rcx+0x73],ch
  418bac:	and    BYTE PTR [rsi+0x6f],ah
  418baf:	jne    0x418c1f
  418bb1:	and    BYTE PTR fs:[rcx+0x6e],ch
  418bb5:	and    BYTE PTR [rdi+0x69],ah
  418bb8:	jbe    0x418c1f
  418bba:	outs   dx,BYTE PTR ds:[rsi]
  418bbb:	and    BYTE PTR [rdx+0x61],dh
  418bbe:	outs   dx,BYTE PTR ds:[rsi]
  418bbf:	gs and BYTE PTR cs:[ecx+0x20],al
  418bc5:	jae    0x418c37
  418bc7:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  418bcb:	imul   esp,DWORD PTR [rbp+0x64],0x6e617220
  418bd2:	and    BYTE PTR gs:[ebp+0x55],cl
  418bd7:	push   rbx
  418bd8:	push   rsp
  418bd9:	and    BYTE PTR [rax+0x61],ch
  418bdc:	jbe    0x418c43
  418bde:	and    BYTE PTR [rdi+0x6e],ch
  418be1:	ins    BYTE PTR es:[rdi],dx
  418be2:	jns    0x418c04
  418be4:	imul   esp,DWORD PTR fs:[rdi+0x69],0x69207374
  418bec:	outs   dx,BYTE PTR ds:[rsi]
  418bed:	and    BYTE PTR [rdi],ah
  418bef:	jae    0x418c65
  418bf1:	(bad)  
  418bf2:	jb     0x418c68
  418bf4:	(bad)  
  418bf5:	sub    eax,0x6f747327
  418bfa:	jo     0x418c23
  418bfc:	and    BYTE PTR cs:[rax+rbp*2+0x65],dl
  418c01:	and    BYTE PTR [rbx+0x65],dh
  418c04:	jb     0x418c7c
  418c06:	gs jb  0x418c30
  418c09:	jae    0x418c2b
  418c0b:	jb     0x418c72
  418c0d:	jae    0x418c7f
  418c0f:	outs   dx,DWORD PTR ds:[rsi]
  418c10:	outs   dx,BYTE PTR ds:[rsi]
  418c11:	jae    0x418c78
  418c13:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  418c17:	je     0x418c81
  418c19:	imul   esi,DWORD PTR [rbx+0x20],0x75716572
  418c20:	gs jae 0x418c97
  418c23:	and    BYTE PTR [rcx+0x73],ch
  418c26:	and    BYTE PTR [rbp+0x6e],dh
  418c29:	movsxd esp,DWORD PTR [rbp+0x72]
  418c2c:	je     0x418c8f
  418c2e:	imul   ebp,DWORD PTR [rsi+0x2e],0x25000a
  418c35:	add    BYTE PTR [rax],al
  418c37:	add    BYTE PTR [rip+0x2d202c76],ch        # 0x2d61b8b3
  418c3d:	sub    eax,0x62726576
  418c42:	outs   dx,DWORD PTR ds:[rsi]
  418c43:	jae    0x418caa
  418c45:	and    BYTE PTR [rdi+0x76],ch
  418c48:	gs jb  0x418cbd
  418c4b:	imul   esp,DWORD PTR [rbp+riz*2+0x73],0x206e6120
  418c53:	gs (bad) 
  418c55:	jb     0x418cc3
  418c57:	imul   esp,DWORD PTR [rbp+0x72],0x61727420
  418c5e:	movsxd esp,DWORD PTR [rbp+0x2f]
  418c61:	jbe    0x418cc8
  418c63:	jb     0x418cc7
  418c65:	outs   dx,DWORD PTR ds:[rsi]
  418c66:	jae    0x418ccd
  418c68:	and    BYTE PTR [rdi+0x70],ch
  418c6b:	je     0x418cd6
  418c6d:	outs   dx,DWORD PTR ds:[rsi]
  418c6e:	outs   dx,BYTE PTR ds:[rsi]
  418c6f:	or     al,BYTE PTR [rax]
  418c71:	jb     0x418ce7
  418c73:	add    BYTE PTR [rsi+0x61],al
  418c76:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  418c7e:	jb     0x418ce5
  418c80:	(bad)  
  418c81:	and    BYTE PTR fs:[rip+0x73],ah        # 0x418cfb
  418c88:	rex.WB ins BYTE PTR es:[rdi],dx
  418c8a:	ins    BYTE PTR es:[rdi],dx
  418c8b:	gs addr32 (bad) 
  418c8e:	ins    BYTE PTR es:[rdi],dx
  418c8f:	and    BYTE PTR [rcx+riz*2+0x74],ah
  418c93:	and    BYTE PTR gs:[rsi+0x6f],ah
  418c97:	jb     0x418d06
  418c99:	(bad)  
  418c9a:	je     0x418cbc
  418c9c:	outs   dx,WORD PTR ds:[rsi]
  418c9e:	jb     0x418cc0
  418ca0:	sub    eax,0x2d202c7a
  418ca5:	sub    eax,0x656d6974
  418caa:	movsxd ebp,DWORD PTR [rdi+0x6e]
  418cad:	and    BYTE PTR fs:[rax],ch
  418cb0:	(bad)  
  418cb1:	outs   dx,BYTE PTR ds:[rsi]
  418cb2:	and    BYTE PTR fs:[rsi+0x6f],ch
  418cb6:	je     0x418cd8
  418cb8:	(bad)  
  418cb9:	and    BYTE PTR [rsi+0x69],ah
  418cbc:	ins    BYTE PTR es:[rdi],dx
  418cbd:	and    BYTE PTR gs:[rsi+0x61],ch
  418cc1:	ins    DWORD PTR es:[rdi],dx
  418cc2:	sub    DWORD PTR gs:[rsi],ebp
  418cc5:	and    BYTE PTR [rcx+rbp*2+0x73],al
  418cc9:	(bad)  
  418cca:	(bad)  
  418ccb:	ins    BYTE PTR es:[rdi],dx
  418ccc:	imul   ebp,DWORD PTR [rsi+0x67],0x6d697420
  418cd3:	and    BYTE PTR gs:[rbx+0x6f],ah
  418cd7:	outs   dx,BYTE PTR ds:[rsi]
  418cd8:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x53202e6e
  418ce1:	gs and BYTE PTR gs:[rbx+0x75],ah
  418ce6:	jb     0x418d54
  418ce8:	pop    rdi
  418ce9:	addr32 gs je 0x418d51
  418ced:	(bad)  
  418cee:	je     0x418d55
  418cf0:	sub    BYTE PTR [rbx],dh
  418cf2:	sub    DWORD PTR [rax],esp
  418cf4:	outs   dx,WORD PTR ds:[rsi]
  418cf6:	jb     0x418d18
  418cf8:	jbe    0x418d5b
  418cfa:	ins    BYTE PTR es:[rdi],dx
  418cfb:	imul   esp,DWORD PTR [rax+riz*1+0x64],0x20657461
  418d03:	jae    0x418d7e
  418d05:	outs   dx,BYTE PTR ds:[rsi]
  418d06:	je     0x418d69
  418d08:	js     0x418d38
  418d0a:	or     al,BYTE PTR [rax]
  418d0c:	ins    BYTE PTR es:[rdi],dx
  418d0d:	imul   esi,DWORD PTR [rbx+0x74],0x0
  418d14:	jle    0x418cdb
  418d16:	(bad)  
  418d17:	call   FWORD PTR [rbp+rax*8-0x2]
  418d1b:	push   rsi
  418d1d:	mov    edx,0xbaf6fffe
  418d22:	(bad)  
  418d23:	push   rsi
  418d25:	mov    edx,0xbaf6fffe
  418d2a:	(bad)  
  418d2b:	push   rsi
  418d2d:	mov    edx,0xc53afffe
  418d32:	(bad)  
  418d33:	push   rsi
  418d35:	mov    edx,0xbaf6fffe
  418d3a:	(bad)  
  418d3b:	push   rsi
  418d3d:	mov    edx,0xbaf6fffe
  418d42:	(bad)  
  418d43:	push   rsi
  418d45:	mov    edx,0xc507fffe
  418d4a:	(bad)  
  418d4b:	call   rbp
  418d4d:	(bad)  
  418d4e:	(bad)  
  418d4f:	inc    esi
  418d51:	(bad)  
  418d52:	(bad)  
  418d53:	push   QWORD PTR [rdi-0x5700013c]
  418d59:	(bad)  
  418d5a:	(bad)  
  418d5b:	push   rsi
  418d5d:	mov    edx,0xc5e6fffe
  418d62:	(bad)  
  418d63:	push   rsi
  418d65:	mov    edx,0xbaf6fffe
  418d6a:	(bad)  
  418d6b:	push   rsi
  418d6d:	mov    edx,0xc5dcfffe
  418d72:	(bad)  
  418d73:	push   rsi
  418d75:	mov    edx,0xbaf6fffe
  418d7a:	(bad)  
  418d7b:	push   rsi
  418d7d:	mov    edx,0xbaf6fffe
  418d82:	(bad)  
  418d83:	push   rsi
  418d85:	mov    edx,0xbaf6fffe
  418d8a:	(bad)  
  418d8b:	jmp    QWORD PTR [rbp-0x6a00013b]
  418d91:	(bad)  
  418d94:	jl     0x418d5a
  418d96:	(bad)  
  418d97:	push   QWORD PTR [rsi]
  418d99:	(bad)  
  418d9a:	(bad)  
  418d9b:	call   FWORD PTR [rsp+rax*8]
  418d9e:	(bad)  
  418d9f:	dec    eax
  418da1:	ret    
  418da2:	(bad)  
  418da3:	(bad)  
  418da4:	mov    esp,0x8cfffec3
  418da9:	ret    
  418daa:	(bad)  
  418dab:	call   FWORD PTR [rbp-0x3d]
  418dae:	(bad)  
  418daf:	inc    DWORD PTR [rax-0x3d]
  418db2:	(bad)  
  418db3:	dec    DWORD PTR [rbx+rax*8]
  418db6:	(bad)  
  418db7:	(bad)  
  418db8:	in     al,dx
  418db9:	ret    0xfffe
  418dbc:	(bad)  
  418dbd:	ret    0xfffe
  418dc0:	scas   eax,DWORD PTR es:[rdi]
  418dc1:	ret    0xfffe
  418dc4:	push   rdi
  418dc5:	mov    ebx,0xc26dfffe
  418dca:	(bad)  
  418dcb:	inc    DWORD PTR [rcx-0x3e]
  418dce:	(bad)  
  418dcf:	push   QWORD PTR [rdx+rax*8]
  418dd2:	(bad)  
  418dd3:	call   FWORD PTR [rdi]
  418dd5:	ret    0xfffe
  418dd8:	mov    bl,0xc1
  418dda:	(bad)  
  418ddb:	jmp    FWORD PTR [rcx+rax*8-0x2]
  418ddf:	dec    DWORD PTR [rdi-0x3f]
  418de2:	(bad)  
  418de3:	push   rsi
  418de5:	mov    edx,0xc100fffe
  418dea:	(bad)  
  418deb:	dec    esp
  418ded:	sar    dh,0xff
  418df0:	idiv   BYTE PTR [rdx-0x45090002]
  418df6:	(bad)  
  418df7:	push   rsi
  418df9:	mov    edx,0xbaf6fffe
  418dfe:	(bad)  
  418dff:	push   rsi
  418e01:	mov    edx,0xbaf6fffe
  418e06:	(bad)  
  418e07:	push   rsi
  418e09:	mov    edx,0xc13ffffe
  418e0e:	(bad)  
  418e0f:	(bad)  
  418e10:	jl     0x418dd2
  418e12:	(bad)  
  418e13:	(bad)  
  418e14:	cmp    al,0xc0
  418e16:	(bad)  
  418e17:	(bad)  
  418e18:	cmp    bh,BYTE PTR [rcx-0x40210002]
  418e1e:	(bad)  
  418e1f:	(bad)  
  418e20:	mov    esi,0xaefffebf
  418e25:	mov    edi,0xbf99fffe
  418e2a:	(bad)  
  418e2b:	dec    DWORD PTR [rcx+0x7cfffebf]
  418e31:	mov    edi,0xbf6cfffe
  418e36:	(bad)  
  418e37:	call   FWORD PTR [rdi+rdi*4-0x2]
  418e3b:	push   QWORD PTR [rsi]
  418e3d:	mov    edi,0xbf12fffe
  418e42:	(bad)  
  418e43:	jmp    QWORD PTR [rcx-0x45]
  418e46:	(bad)  
  418e47:	(bad)  
  418e48:	fstp   TBYTE PTR [rbx-0x45630002]
  418e4e:	(bad)  
  418e4f:	jmp    QWORD PTR [rip+0xffffffffebfffebc]        # 0xffffffffec418d11
  418e55:	mov    ebx,0xbe66fffe
  418e5a:	(bad)  
  418e5b:	jmp    QWORD PTR [rax]
  418e5d:	mov    esi,0xbe01fffe
  418e62:	(bad)  
  418e63:	(bad)  
  418e64:	mov    esi,0xc0fffebd
  418e69:	mov    esi,0xbe8cfffe
  418e6e:	(bad)  
  418e6f:	(bad)  
  418e70:	cmp    al,0xbd
  418e72:	(bad)  
  418e73:	call   QWORD PTR [rsi-0x32]
  418e76:	(bad)  
  418e77:	call   QWORD PTR [rsi-0x69000147]
  418e7d:	mov    ecx,0xb996fffe
  418e82:	(bad)  
  418e83:	call   QWORD PTR [rsi-0x69000147]
  418e89:	mov    ecx,0xb996fffe
  418e8e:	(bad)  
  418e8f:	call   QWORD PTR [rsi-0x69000147]
  418e95:	mov    ecx,0xb996fffe
  418e9a:	(bad)  
  418e9b:	call   QWORD PTR [rsi-0x69000147]
  418ea1:	mov    ecx,0xb996fffe
  418ea6:	(bad)  
  418ea7:	call   QWORD PTR [rsi-0x69000147]
  418ead:	mov    ecx,0xb996fffe
  418eb2:	(bad)  
  418eb3:	call   QWORD PTR [rsi-0x69000147]
  418eb9:	mov    ecx,0xb996fffe
  418ebe:	(bad)  
  418ebf:	call   QWORD PTR [rsi-0x69000147]
  418ec5:	mov    ecx,0xb996fffe
  418eca:	(bad)  
  418ecb:	call   QWORD PTR [rsi-0x69000147]
  418ed1:	mov    ecx,0xb996fffe
  418ed6:	(bad)  
  418ed7:	call   QWORD PTR [rsi-0x69000147]
  418edd:	mov    ecx,0xb996fffe
  418ee2:	(bad)  
  418ee3:	call   QWORD PTR [rsi-0x69000147]
  418ee9:	mov    ecx,0xb996fffe
  418eee:	(bad)  
  418eef:	call   QWORD PTR [rsi-0x69000147]
  418ef5:	mov    ecx,0xb996fffe
  418efa:	(bad)  
  418efb:	call   QWORD PTR [rsi-0x69000147]
  418f01:	mov    ecx,0xb996fffe
  418f06:	(bad)  
  418f07:	call   QWORD PTR [rsi-0x69000147]
  418f0d:	mov    ecx,0xb996fffe
  418f12:	(bad)  
  418f13:	call   QWORD PTR [rsi-0x69000147]
  418f19:	mov    ecx,0xb996fffe
  418f1e:	(bad)  
  418f1f:	call   QWORD PTR [rsi-0x69000147]
  418f25:	mov    ecx,0xb996fffe
  418f2a:	(bad)  
  418f2b:	call   QWORD PTR [rsi-0x69000147]
  418f31:	mov    ecx,0xce14fffe
  418f36:	(bad)  
  418f37:	dec    esi
  418f39:	int    0xfe
  418f3b:	dec    DWORD PTR [rbp+rcx*8-0x32b50002]
  418f42:	(bad)  
  418f43:	jmp    QWORD PTR [rdx-0x67000134]
  418f49:	enter  0xfffe,0x8
  418f4d:	int    0xfe
  418f4f:	inc    esi
  418f51:	int3   
  418f52:	(bad)  
  418f53:	push   QWORD PTR [rsi-0x5800011b]
  418f59:	in     eax,0xfe
  418f5b:	call   QWORD PTR [rsi-0x69000147]
  418f61:	mov    ecx,0xb996fffe
  418f66:	(bad)  
  418f67:	call   QWORD PTR [rsi-0x69000147]
  418f6d:	mov    ecx,0xb996fffe
  418f72:	(bad)  
  418f73:	call   QWORD PTR [rsi-0x69000147]
  418f79:	mov    ecx,0xb996fffe
  418f7e:	(bad)  
  418f7f:	call   QWORD PTR [rsi-0x69000147]
  418f85:	mov    ecx,0xb996fffe
  418f8a:	(bad)  
  418f8b:	call   QWORD PTR [rsi-0x69000147]
  418f91:	mov    ecx,0xb996fffe
  418f96:	(bad)  
  418f97:	call   QWORD PTR [rsi-0x69000147]
  418f9d:	mov    ecx,0xb996fffe
  418fa2:	(bad)  
  418fa3:	call   QWORD PTR [rsi-0x69000147]
  418fa9:	mov    ecx,0xb996fffe
  418fae:	(bad)  
  418faf:	call   QWORD PTR [rsi-0x69000147]
  418fb5:	mov    ecx,0xb996fffe
  418fba:	(bad)  
  418fbb:	call   QWORD PTR [rsi-0x69000147]
  418fc1:	mov    ecx,0xb996fffe
  418fc6:	(bad)  
  418fc7:	call   QWORD PTR [rsi-0x69000147]
  418fcd:	mov    ecx,0xb996fffe
  418fd2:	(bad)  
  418fd3:	call   QWORD PTR [rsi-0x69000147]
  418fd9:	mov    ecx,0xb996fffe
  418fde:	(bad)  
  418fdf:	call   QWORD PTR [rsi-0x69000147]
  418fe5:	mov    ecx,0xb996fffe
  418fea:	(bad)  
  418feb:	call   QWORD PTR [rsi-0x69000147]
  418ff1:	mov    ecx,0xb996fffe
  418ff6:	(bad)  
  418ff7:	jmp    QWORD PTR [rbp-0x1b]
  418ffa:	(bad)  
  418ffb:	jmp    QWORD PTR [rbx]
  418ffd:	in     eax,0xfe
  418fff:	jmp    rcx
  419001:	in     al,0xfe
  419003:	call   FWORD PTR [rdi+0x59fffee4]
  419009:	in     al,0xfe
  41900b:	(bad)  
  41900c:	cli    
  41900d:	jrcxz  0x41900d
  41900f:	inc    DWORD PTR [rdx+riz*8-0x2]
  419013:	inc    DWORD PTR [rdx]
  419015:	loop   0x419015
  419017:	push   QWORD PTR [rbp-0x1f]
  41901a:	(bad)  
  41901b:	push   QWORD PTR [rbx]
  41901d:	loope  0x41901d
  41901f:	call   rcx
  419021:	loopne 0x419021
  419023:	(bad)  
  419024:	jnp    0x419006
  419026:	(bad)  
  419027:	jmp    QWORD PTR [rip+0x1fffee0]        # 0x2418f0d
  41902d:	loopne 0x41902d
  41902f:	call   FWORD PTR [rax+0x76fffec8]
  419035:	jrcxz  0x419035
  419037:	jmp    FWORD PTR [rdx-0x1d]
  41903a:	(bad)  
  41903b:	call   FWORD PTR [rsi-0x1d]
  41903e:	(bad)  
  41903f:	(bad)  
  419040:	ds jrcxz 0x419041
  419043:	push   QWORD PTR [rdx]
  419045:	jrcxz  0x419045
  419047:	(bad)  
  419048:	fsubr  st(2),st
  41904a:	(bad)  
  41904b:	inc    DWORD PTR [rsi-0x6400011e]
  419051:	(bad)  
  419052:	(bad)  
  419053:	inc    DWORD PTR [rax-0x1c000132]
  419059:	(bad)  
  41905a:	(bad)  
  41905b:	(bad)  
  41905c:	mov    eax,0x38fffee3
  419061:	int    0xfe
  419063:	call   QWORD PTR [rax-0x49]
  419066:	(bad)  
  419067:	push   QWORD PTR [rdx+rcx*8-0x2]
  41906b:	call   QWORD PTR [rax-0x49]
  41906e:	(bad)  
  41906f:	call   QWORD PTR [rax-0x49]
  419072:	(bad)  
  419073:	call   QWORD PTR [rax-0x49]
  419076:	(bad)  
  419077:	call   QWORD PTR [rax-0x49]
  41907a:	(bad)  
  41907b:	call   QWORD PTR [rax-0x49]
  41907e:	(bad)  
  41907f:	call   QWORD PTR [rax-0x49]
  419082:	(bad)  
  419083:	call   QWORD PTR [rax-0x49]
  419086:	(bad)  
  419087:	call   QWORD PTR [rax-0x49]
  41908a:	(bad)  
  41908b:	call   QWORD PTR [rax-0x49]
  41908e:	(bad)  
  41908f:	push   rcx
  419091:	fdivr  st,st(6)
  419093:	call   QWORD PTR [rax-0x49]
  419096:	(bad)  
  419097:	jmp    FWORD PTR [rdi+0x50fffed8]
  41909d:	mov    bh,0xfe
  41909f:	jmp    FWORD PTR [rbp-0x28]
  4190a2:	(bad)  
  4190a3:	jmp    QWORD PTR [rax-0x28]
  4190a6:	(bad)  
  4190a7:	jmp    FWORD PTR [rcx-0x26]
  4190aa:	(bad)  
  4190ab:	call   FWORD PTR [rcx-0x26]
  4190ae:	(bad)  
  4190af:	jmp    FWORD PTR [rbx+0x50fffeda]
  4190b5:	mov    bh,0xfe
  4190b7:	(bad)  
  4190b8:	in     eax,dx
  4190b9:	fsin   
  4190bb:	call   QWORD PTR [rax-0x49]
  4190be:	(bad)  
  4190bf:	call   QWORD PTR [rax-0x49]
  4190c2:	(bad)  
  4190c3:	inc    ebp
  4190c5:	fsin   
  4190c7:	call   QWORD PTR [rax-0x49]
  4190ca:	(bad)  
  4190cb:	call   QWORD PTR [rax-0x49]
  4190ce:	(bad)  
  4190cf:	call   QWORD PTR [rax-0x49]
  4190d2:	(bad)  
  4190d3:	call   QWORD PTR [rax-0x49]
  4190d6:	(bad)  
  4190d7:	call   QWORD PTR [rax-0x49]
  4190da:	(bad)  
  4190db:	call   QWORD PTR [rax-0x49]
  4190de:	(bad)  
  4190df:	call   QWORD PTR [rax-0x49]
  4190e2:	(bad)  
  4190e3:	call   QWORD PTR [rax-0x49]
  4190e6:	(bad)  
  4190e7:	call   QWORD PTR [rax-0x49]
  4190ea:	(bad)  
  4190eb:	call   QWORD PTR [rax-0x49]
  4190ee:	(bad)  
  4190ef:	call   QWORD PTR [rax-0x49]
  4190f2:	(bad)  
  4190f3:	call   QWORD PTR [rax-0x49]
  4190f6:	(bad)  
  4190f7:	(bad)  
  4190f8:	mov    eax,0x50fffed9
  4190fd:	mov    bh,0xfe
  4190ff:	call   QWORD PTR [rax-0x49]
  419102:	(bad)  
  419103:	call   QWORD PTR [rax-0x49]
  419106:	(bad)  
  419107:	call   QWORD PTR [rax-0x49]
  41910a:	(bad)  
  41910b:	call   QWORD PTR [rax-0x49]
  41910e:	(bad)  
  41910f:	call   QWORD PTR [rax-0x49]
  419112:	(bad)  
  419113:	(bad)  
  419114:	jg     0x4190ef
  419116:	(bad)  
  419117:	inc    DWORD PTR [rsi-0x27]
  41911a:	(bad)  
  41911b:	(bad)  
  41911c:	stc    
  41911d:	(bad)  
  41911f:	push   QWORD PTR [rdi-0x55000123]
  419125:	(bad)  
  419127:	call   QWORD PTR [rax-0x49]
  41912a:	(bad)  
  41912b:	jmp    FWORD PTR [rbx*8-0x23980002]
  419132:	(bad)  
  419133:	inc    DWORD PTR [rcx]
  419135:	fdiv   st(6),st
  419137:	call   rax
  419139:	(bad)  
  41913b:	inc    eax
  41913d:	(bad)  
  41913f:	inc    DWORD PTR [rcx+0x5dfffedb]
  419145:	(bad)  
  419147:	dec    DWORD PTR [rbp-0x25]
  41914a:	(bad)  
  41914b:	push   QWORD PTR [rsi]
  41914d:	(bad)  
  41914f:	call   QWORD PTR [rax-0x49]
  419152:	(bad)  
  419153:	jmp    QWORD PTR [rsi]
  419155:	(bad)  
  419157:	call   QWORD PTR [rsi]
  419159:	(bad)  
  41915b:	(bad)  
  41915c:	call   0xffffffffc541903b
  419161:	(bad)  
  419163:	dec    DWORD PTR [rax]
  419165:	fdivr  st,st(6)
  419167:	(bad)  
  419168:	jnp    0x419141
  41916a:	(bad)  
  41916b:	(bad)  
  41916c:	cmp    edi,edx
  41916e:	(bad)  
  41916f:	jmp    rbx
  419171:	(bad)  
  419172:	(bad)  
  419173:	inc    edi
  419175:	(bad)  
  419176:	(bad)  
  419177:	(bad)  
  419178:	mov    edx,0x50fffed6
  41917d:	mov    bh,0xfe
  41917f:	call   QWORD PTR [rax-0x49]
  419182:	(bad)  
  419183:	call   QWORD PTR [rax-0x49]
  419186:	(bad)  
  419187:	jmp    FWORD PTR [rdx+0x6efffed6]
  41918d:	(bad)  
  41918e:	(bad)  
  41918f:	jmp    QWORD PTR [rsi+rsi*4]
  419192:	(bad)  
  419193:	jmp    QWORD PTR [rsi+rsi*4]
  419196:	(bad)  
  419197:	jmp    QWORD PTR [rsi+rsi*4]
  41919a:	(bad)  
  41919b:	jmp    QWORD PTR [rsi+rsi*4]
  41919e:	(bad)  
  41919f:	jmp    QWORD PTR [rsi+rsi*4]
  4191a2:	(bad)  
  4191a3:	jmp    QWORD PTR [rsi+rsi*4]
  4191a6:	(bad)  
  4191a7:	jmp    QWORD PTR [rsi+rsi*4]
  4191aa:	(bad)  
  4191ab:	jmp    QWORD PTR [rsi+rsi*4]
  4191ae:	(bad)  
  4191af:	jmp    QWORD PTR [rsi+rsi*4]
  4191b2:	(bad)  
  4191b3:	jmp    QWORD PTR [rsi+rsi*4]
  4191b6:	(bad)  
  4191b7:	jmp    QWORD PTR [rsi+rsi*4]
  4191ba:	(bad)  
  4191bb:	jmp    QWORD PTR [rsi+rsi*4]
  4191be:	(bad)  
  4191bf:	call   FWORD PTR [rsi-0x2b]
  4191c2:	(bad)  
  4191c3:	dec    DWORD PTR [rsi-0x2b]
  4191c6:	(bad)  
  4191c7:	inc    DWORD PTR [rsi]
  4191c9:	(bad)  
  4191ca:	(bad)  
  4191cb:	(bad)  
  4191cc:	(bad)  
  4191cd:	(bad)  
  4191ce:	(bad)  
  4191cf:	(bad)  
  4191d0:	fcmovbe st,st(4)
  4191d2:	(bad)  
  4191d3:	call   FWORD PTR [rax+0x24fffed4]
  4191d9:	mov    dh,0xfe
  4191db:	dec    DWORD PTR [rax+0x40fffed4]
  4191e1:	(bad)  
  4191e2:	(bad)  
  4191e3:	call   FWORD PTR [rcx-0x2d]
  4191e6:	(bad)  
  4191e7:	jmp    QWORD PTR [rsi+rsi*4]
  4191ea:	(bad)  
  4191eb:	jmp    QWORD PTR [rsi+rsi*4]
  4191ee:	(bad)  
  4191ef:	jmp    QWORD PTR [rsi+rsi*4]
  4191f2:	(bad)  
  4191f3:	jmp    QWORD PTR [rsi+rsi*4]
  4191f6:	(bad)  
  4191f7:	jmp    QWORD PTR [rsi+rsi*4]
  4191fa:	(bad)  
  4191fb:	jmp    QWORD PTR [rsi+rsi*4]
  4191fe:	(bad)  
  4191ff:	jmp    QWORD PTR [rsi+rsi*4]
  419202:	(bad)  
  419203:	call   QWORD PTR [rdi]
  419205:	sar    esi,cl
  419207:	(bad)  
  419208:	sti    
  419209:	sar    dh,cl
  41920b:	(bad)  
  41920c:	out    dx,al
  41920d:	sar    dh,cl
  41920f:	push   QWORD PTR [rbp-0x2d]
  419212:	(bad)  
  419213:	dec    ecx
  419215:	sar    dh,cl
  419217:	jmp    FWORD PTR [rbp-0x6800012e]
  41921d:	sar    dh,cl
  41921f:	call   QWORD PTR [rbp-0x2e]
  419222:	(bad)  
  419223:	inc    DWORD PTR [rbp-0x2e]
  419226:	(bad)  
  419227:	jmp    FWORD PTR [rdx+rdx*8]
  41922a:	(bad)  
  41922b:	call   FWORD PTR [rdx+rdx*8]
  41922e:	(bad)  
  41922f:	inc    DWORD PTR [rbx]
  419231:	sar    dh,cl
  419233:	inc    ecx
  419235:	sar    esi,1
  419237:	push   QWORD PTR [rcx+0x6ffffed1]
  41923d:	sar    esi,1
  41923f:	jmp    QWORD PTR [rdi]
  419241:	sar    esi,1
  419243:	jmp    rdx
  419245:	sar    dh,1
  419247:	inc    esi
  419249:	sar    dh,1
  41924b:	push   QWORD PTR [rsi+0x6efffed0]
  419251:	sar    dh,1
  419253:	call   QWORD PTR [rdx-0x30]
  419256:	(bad)  
  419257:	inc    DWORD PTR [rdx-0x30]
  41925a:	(bad)  
  41925b:	jmp    QWORD PTR [rsi+rsi*4]
  41925e:	(bad)  
  41925f:	jmp    QWORD PTR [rsi+rsi*4]
  419262:	(bad)  
  419263:	jmp    QWORD PTR [rsi+rsi*4]
  419266:	(bad)  
  419267:	jmp    QWORD PTR [rsi+rsi*4]
  41926a:	(bad)  
  41926b:	jmp    QWORD PTR [rsi+rsi*4]
  41926e:	(bad)  
  41926f:	jmp    QWORD PTR [rsi+rsi*4]
  419272:	(bad)  
  419273:	jmp    QWORD PTR [rsi+rsi*4]
  419276:	(bad)  
  419277:	jmp    QWORD PTR [rsi+rsi*4]
  41927a:	(bad)  
  41927b:	jmp    QWORD PTR [rsi+rsi*4]
  41927e:	(bad)  
  41927f:	jmp    QWORD PTR [rsi+rsi*4]
  419282:	(bad)  
  419283:	call   QWORD PTR [rdi]
  419285:	sar    dh,1
  419287:	(bad)  
  419288:	sti    
  419289:	iret   
  41928a:	(bad)  
  41928b:	push   QWORD PTR [rbx-0x5c000131]
  419291:	iret   
  419292:	(bad)  
  419293:	call   QWORD PTR [rbx-0x7c000131]
  419299:	iret   
  41929a:	(bad)  
  41929b:	jmp    QWORD PTR [rdi-0x31]
  41929e:	(bad)  
  41929f:	dec    DWORD PTR [rbx-0x31]
  4192a2:	(bad)  
  4192a3:	jmp    FWORD PTR [rdi]
  4192a5:	iret   
  4192a6:	(bad)  
  4192a7:	dec    ebp
  4192a9:	(bad)  
  4192aa:	(bad)  
  4192ab:	jmp    FWORD PTR [rcx+0x24fffece]
  4192b1:	mov    dh,0xfe
  4192b3:	jmp    QWORD PTR [rdi-0x32]
  4192b6:	(bad)  
  4192b7:	call   QWORD PTR [rdi-0x32]
  4192ba:	(bad)  
  4192bb:	(bad)  
  4192bc:	cli    
  4192bd:	(bad)  
  4192be:	(bad)  
  4192bf:	(bad)  
  4192c0:	(bad)  
  4192c1:	(bad)  
  4192c2:	(bad)  
  4192c3:	call   QWORD PTR [rax]
  4192c5:	iret   
  4192c6:	(bad)  
  4192c7:	inc    DWORD PTR [rcx-0x32]
  4192ca:	(bad)  
  4192cb:	(bad)  
  4192cc:	fcmovne st,st(5)
  4192ce:	(bad)  
  4192cf:	call   QWORD PTR [rbx+0x51fffecd]
  4192d5:	int    0xfe
  4192d7:	jmp    QWORD PTR [rsi]
  4192d9:	int    0xfe
  4192db:	call   QWORD PTR [rsi]
  4192dd:	int    0xfe
  4192df:	(bad)  
  4192e0:	jmp    0x4192ae
  4192e2:	(bad)  
  4192e3:	inc    ecx
  4192e5:	int3   
  4192e6:	(bad)  
  4192e7:	push   QWORD PTR [rax-0x34]
  4192ea:	(bad)  
  4192eb:	inc    DWORD PTR [rcx-0x42000126]
  4192f1:	fsin   
  4192f3:	(bad)  
  4192f4:	mov    ebp,0xbdfffed9
  4192f9:	fsin   
  4192fb:	(bad)  
  4192fc:	mov    ebp,0x9afffed9
  419301:	(bad)  
  419303:	(bad)  
  419304:	mov    ebp,0xbdfffed9
  419309:	fsin   
  41930b:	(bad)  
  41930c:	mov    ebp,0x94fffed9
  419311:	(bad)  
  419313:	(bad)  
  419314:	mov    ebp,0x7dfffed9
  419319:	(bad)  
  41931b:	(bad)  
  41931c:	mov    ebp,0xbdfffed9
  419321:	fsin   
  419323:	(bad)  
  419324:	mov    ebp,0xbdfffed9
  419329:	fsin   
  41932b:	(bad)  
  41932c:	mov    ebp,0xbdfffed9
  419331:	fsin   
  419333:	(bad)  
  419334:	mov    ebp,0xbdfffed9
  419339:	fsin   
  41933b:	(bad)  
  41933c:	mov    ebp,0xbdfffed9
  419341:	fsin   
  419343:	(bad)  
  419344:	mov    ebp,0xbdfffed9
  419349:	fsin   
  41934b:	(bad)  
  41934c:	mov    ebp,0xbdfffed9
  419351:	fsin   
  419353:	(bad)  
  419354:	mov    ebp,0xbdfffed9
  419359:	fsin   
  41935b:	(bad)  
  41935c:	mov    ebp,0xbdfffed9
  419361:	fsin   
  419363:	(bad)  
  419364:	mov    ebp,0xbdfffed9
  419369:	fsin   
  41936b:	inc    DWORD PTR [rcx-0x42000126]
  419371:	fsin   
  419373:	(bad)  
  419374:	mov    ebp,0xbdfffed9
  419379:	fsin   
  41937b:	(bad)  
  41937c:	mov    ebp,0x9afffed9
  419381:	(bad)  
  419383:	(bad)  
  419384:	mov    ebp,0xbdfffed9
  419389:	fsin   
  41938b:	(bad)  
  41938c:	mov    ebp,0x94fffed9
  419391:	(bad)  
  419393:	(bad)  
  419394:	mov    ebp,0x7dfffed9
  419399:	(bad)  
  41939b:	jmp    FWORD PTR [rip+0x2d2d002d]        # 0x2d6e93ce
  4193a1:	jne    0x419415
  4193a3:	ins    BYTE PTR es:[rdi],dx
  4193a4:	add    BYTE PTR [rdx],bh
  4193a6:	add    BYTE PTR [rdi+0x70],ch
  4193a9:	je     0x419414
  4193ab:	outs   dx,DWORD PTR ds:[rsi]
  4193ac:	outs   dx,BYTE PTR ds:[rsi]
  4193ad:	and    BYTE PTR [rip+0x25203a73],ah        # 0x2561ce26
  4193b3:	jae    0x4193bf
  4193b5:	add    BYTE PTR [rip+0x2a000a73],ah        # 0x2a419e2e
  4193bb:	add    BYTE PTR [rbp+0x72],sil
  4193bf:	ins    BYTE PTR es:[rdi],dx
  4193c0:	add    BYTE PTR [rdx],ch
  4193c2:	xor    al,0x0
  4193c4:	outs   dx,BYTE PTR fs:[rsi]
  4193c6:	jae    0x4193f5
  4193c8:	imul   esi,DWORD PTR [rax+0x76],0x64612d34
  4193cf:	fs jb  0x4193d2
  4193d2:	sub    dh,BYTE PTR [rsi]
  4193d4:	add    BYTE PTR [rsi+rbp*2+0x73],ah
  4193d8:	sub    eax,0x36767069
  4193dd:	sub    eax,0x72646461
  4193e2:	add    BYTE PTR [rdx],ch
  4193e4:	(bad)  
  4193e5:	add    BYTE PTR [rdx+0x61],dh
  4193e8:	outs   dx,BYTE PTR ds:[rsi]
  4193e9:	outs   dx,DWORD PTR fs:[rsi]
  4193eb:	ins    DWORD PTR es:[rdi],dx
  4193ec:	sub    eax,0x656c6966
  4193f1:	add    BYTE PTR [rdx],ch
  4193f3:	(bad)  
  4193f4:	add    BYTE PTR [rbp+0x67],ah
  4193f7:	fs sub eax,0x656c6966
  4193fd:	add    BYTE PTR [rdx],ch
  4193ff:	rex.X add BYTE PTR [rdi+0x61],bpl
  419403:	jne    0x419479
  419405:	push   0x65622d32
  41940a:	(bad)  
  41940b:	jb     0x419472
  41940d:	jb     0x41940f
  41940f:	sub    ah,BYTE PTR [rbx+0x0]
  419412:	movsxd ebp,DWORD PTR [rdi+0x6e]
  419415:	outs   dx,BYTE PTR ds:[rsi]
  419416:	movsxd esi,DWORD PTR gs:[rbp+rbp*1+0x74]
  41941b:	imul   ebp,DWORD PTR [rbp+0x65],0x74756f
  419422:	sub    ah,BYTE PTR [rax+rax*1+0x63]
  419426:	imul   esi,DWORD PTR [rax+0x68],0x737265
  41942d:	sub    al,BYTE PTR [rax+rax*1+0x64]
  419431:	outs   dx,BYTE PTR ds:[rsi]
  419432:	jae    0x419461
  419434:	imul   ebp,DWORD PTR [rsi+0x74],0x61667265
  41943b:	movsxd esp,DWORD PTR [rbp+0x0]
  41943e:	sub    ah,BYTE PTR [rbp+0x0]
  419441:	imul   esi,DWORD PTR fs:[rbx+0x61],0x2d656c62
  419449:	gs jo  0x4194bf
  41944c:	jbe    0x41944e
  41944e:	sub    al,BYTE PTR [rbp+0x0]
  419451:	gs jo  0x4194c7
  419454:	jbe    0x419456
  419456:	sub    al,BYTE PTR [rsi+0x0]
  419459:	outs   dx,BYTE PTR fs:[rsi]
  41945b:	jae    0x41948a
  41945d:	jae    0x4194c4
  41945f:	jb     0x4194d7
  419461:	gs jb  0x4194d7
  419464:	add    BYTE PTR [rdx],ch
  419466:	add    BYTE PTR [edx+esi*2+0x61],dh
  41946b:	movsxd esp,DWORD PTR [rbp+0x0]
  41946e:	sub    al,BYTE PTR [rdi+0x0]
  419471:	outs   dx,BYTE PTR ds:[rsi]
  419472:	jo     0x4194e2
  419474:	add    BYTE PTR [rdx],ch
  419476:	push   0x61727400
  41947b:	movsxd esp,DWORD PTR [rbp+0x2d]
  41947e:	(bad)  
  41947f:	jae    0x4194e4
  419481:	imul   ebp,DWORD PTR [rcx+0x0],0x6100482a
  419488:	ins    BYTE PTR es:[rdi],dx
  419489:	jo     0x4194f9
  41948b:	add    BYTE PTR [rdx],ch
  41948d:	imul   eax,DWORD PTR [rax],0x696d696c
  419493:	je     0x4194c2
  419495:	jb     0x4194f8
  419497:	je     0x4194fe
  419499:	add    BYTE PTR [rdx],ch
  41949b:	push   0x0
  41949d:	movsxd ebp,DWORD PTR [rdi+0x6d]
  4194a0:	jo     0x419514
  4194a2:	gs jae 0x419518
  4194a5:	gs add BYTE PTR fs:[rdx],ch
  4194a9:	rex.WX add BYTE PTR [rdx+r14*2+0x2d],sil
  4194ae:	outs   dx,BYTE PTR gs:[rsi]
  4194b0:	movsxd ebp,DWORD PTR [rdi+0x64]
  4194b3:	imul   ebp,DWORD PTR [rsi+0x67],0x6b2a00
  4194ba:	imul   esp,DWORD PTR fs:[rdi+0x65],0x2a007473
  4194c2:	ins    BYTE PTR es:[rdi],dx
  4194c3:	add    BYTE PTR [rsi+0x65],ch
  4194c6:	outs   dx,DWORD PTR ds:[esi]
  4194c8:	je     0x419533
  4194ca:	(bad)  
  4194cb:	je     0x419532
  4194cd:	add    BYTE PTR [rdx],ch
  4194cf:	ins    DWORD PTR es:[rdi],dx
  4194d0:	add    BYTE PTR [rsi+0x74],ch
  4194d3:	ins    BYTE PTR es:[rdi],dx
  4194d4:	ins    DWORD PTR es:[rdi],dx
  4194d5:	add    BYTE PTR [rdx],ch
  4194d7:	rex.WRB add BYTE PTR [r14+0x74],r13b
  4194db:	ins    BYTE PTR es:[rdi],dx
  4194dc:	ins    DWORD PTR es:[rdi],dx
  4194dd:	sub    eax,0x2a006277
  4194e2:	outs   dx,BYTE PTR ds:[rsi]
  4194e3:	add    BYTE PTR [rdx+0x61],ah
  4194e6:	jae    0x419551
  4194e8:	movsxd eax,DWORD PTR [rax]
  4194ea:	sub    ch,BYTE PTR [rdi+0x0]
  4194ed:	(bad)  
  4194ee:	outs   dx,BYTE PTR ds:[rsi]
  4194ef:	jns    0x419552
  4194f1:	jne    0x419567
  4194f3:	push   0x712a00
  4194f8:	data16 je 0x41956b
  4194fb:	sub    eax,0x61657263
  419500:	je     0x419567
  419502:	sub    eax,0x73726964
  419507:	add    BYTE PTR [rdx],ch
  419509:	jb     0x41950b
  41950b:	movsxd esi,DWORD PTR [rdx+0x65]
  41950e:	(bad)  
  41950f:	je     0x419576
  419511:	sub    eax,0x73726964
  419516:	add    BYTE PTR [rdx],ch
  419518:	jae    0x41951a
  41951a:	ins    DWORD PTR es:[rdi],dx
  41951b:	(bad)  
  41951c:	js     0x41954b
  41951e:	jb     0x419585
  419520:	imul   esi,DWORD PTR fs:[rdx+0x73],0x742a00
  419528:	jo     0x41959c
  41952a:	outs   dx,DWORD PTR ds:[rsi]
  41952b:	js     0x4195a6
  41952d:	sub    eax,0x6d6c746e
  419532:	add    BYTE PTR [rdx],ch
  419534:	jne    0x419536
  419536:	movsxd esi,DWORD PTR [rdx+0x6c]
  419539:	data16 add BYTE PTR [rdx],ch
  41953c:	jbe    0x41953e
  41953e:	jae    0x4195b4
  419540:	fs gs jb 0x4195b6
  419544:	add    BYTE PTR [rdx],ch
  419546:	ja     0x419548
  419548:	imul   ebp,DWORD PTR [rsi+0x74],0x61667265
  41954f:	movsxd esp,DWORD PTR [rbp+0x0]
  419552:	sub    bh,BYTE PTR [rax+0x0]
  419555:	imul   esi,DWORD PTR [rdx+0x62],0x0
  419559:	imul   esi,DWORD PTR [rdx+0x62],0x34
  41955d:	add    BYTE PTR [rdx],ch
  41955f:	jns    0x419561
  419561:	ins    DWORD PTR es:[rdi],dx
  419562:	(bad)  
  419563:	js     0x419592
  419565:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x7a69
  41956c:	add    BYTE PTR gs:[rdx],ch
  41956f:	jp     0x419571
  419571:	imul   esi,DWORD PTR fs:[rbx+0x61],0x2d656c62
  419579:	gs jo  0x4195ee
  41957c:	je     0x41957e
  41957e:	sub    bl,BYTE PTR [rdx+0x0]
  419581:	gs jo  0x4195f6
  419584:	je     0x419586
  419586:	sub    bh,BYTE PTR [rsi+0x0]
  419589:	js     0x4195ec
  41958b:	je     0x419601
  41958d:	jb     0x41958f
  41958f:	and    al,0x61
  419591:	add    BYTE PTR [rsi+0x74],ah
  419594:	jo     0x4195c3
  419596:	jae    0x41960b
  419598:	ins    BYTE PTR es:[rdi],dx
  419599:	add    BYTE PTR [rbx+0x73],dh
  41959c:	ins    BYTE PTR es:[rdi],dx
  41959d:	add    BYTE PTR [rdx+riz*2],ah
  4195a0:	add    BYTE PTR [rsi+0x74],ah
  4195a3:	jo     0x4195d2
  4195a5:	jo     0x419608
  4195a7:	jae    0x41961f
  4195a9:	add    BYTE PTR [rbx+riz*2],ah
  4195ac:	add    BYTE PTR [rbx+0x6f],dh
  4195af:	movsxd ebp,DWORD PTR [rbx+0x73]
  4195b2:	xor    eax,0x642400
  4195b7:	je     0x41961c
  4195b9:	jo     0x4195e8
  4195bb:	outs   dx,BYTE PTR ds:[rsi]
  4195bc:	outs   dx,DWORD PTR ds:[rsi]
  4195bd:	fs gs ins BYTE PTR es:[rdi],dx
  4195c0:	(bad)  
  4195c1:	jns    0x4195c3
  4195c3:	and    al,0x65
  4195c5:	add    BYTE PTR [rax+0x72],dh
  4195c8:	outs   dx,DWORD PTR ds:[rsi]
  4195c9:	js     0x419644
  4195cb:	sub    eax,0x65676964
  4195d0:	jae    0x419646
  4195d2:	add    BYTE PTR [rsi+riz*2],ah
  4195d5:	add    BYTE PTR [rax+0x72],dh
  4195d8:	outs   dx,DWORD PTR ds:[rsi]
  4195d9:	js     0x419654
  4195db:	sub    eax,0x69736162
  4195e0:	movsxd eax,DWORD PTR [rax]
  4195e2:	and    al,0x67
  4195e4:	add    BYTE PTR [rdx+0x65],dh
  4195e7:	je     0x41965b
  4195e9:	jns    0x4195eb
  4195eb:	and    al,0x56
  4195ed:	add    BYTE PTR [rdx+0x65],dh
  4195f0:	je     0x419664
  4195f2:	jns    0x419621
  4195f4:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4195f7:	outs   dx,BYTE PTR ds:[rsi]
  4195f8:	jb     0x41965f
  4195fa:	data16 jne 0x419670
  4195fd:	gs add BYTE PTR fs:[rax+rbp*2],ah
  419602:	add    BYTE PTR [rdx+0x65],dh
  419605:	je     0x419679
  419607:	jns    0x419636
  419609:	fs gs ins BYTE PTR es:[rdi],dx
  41960c:	(bad)  
  41960d:	jns    0x41960f
  41960f:	and    al,0x69
  419611:	add    BYTE PTR [rdx+0x65],dh
  419614:	je     0x419688
  419616:	jns    0x419645
  419618:	ins    DWORD PTR es:[rdi],dx
  419619:	(bad)  
  41961a:	js     0x419649
  41961c:	je     0x419687
  41961e:	ins    DWORD PTR es:[rdi],dx
  41961f:	add    BYTE PTR gs:[rbx+rbp*2],ah
  419623:	add    BYTE PTR [rax+0x72],dh
  419626:	outs   dx,DWORD PTR ds:[rsi]
  419627:	js     0x4196a2
  419629:	sub    eax,0x6f67656e
  41962e:	je     0x419699
  419630:	(bad)  
  419631:	je     0x419698
  419633:	add    BYTE PTR [rbp*2+0x70746600],ah
  41963a:	sub    eax,0x6f636361
  41963f:	jne    0x4196af
  419641:	je     0x419643
  419643:	and    al,0x6e
  419645:	add    BYTE PTR [rax+0x72],dh
  419648:	outs   dx,DWORD PTR ds:[rsi]
  419649:	js     0x4196c4
  41964b:	sub    eax,0x61796e61
  419650:	jne    0x4196c6
  419652:	push   0x6f2400
  419657:	je     0x4196cb
  419659:	(bad)  
  41965a:	movsxd esp,DWORD PTR [rbp+0x2d]
  41965d:	je     0x4196c8
  41965f:	ins    DWORD PTR es:[rdi],dx
  419660:	add    BYTE PTR gs:[rax+rsi*2],ah
  419664:	add    BYTE PTR [rcx+0x67],ch
  419667:	outs   dx,BYTE PTR ds:[rsi]
  419668:	outs   dx,DWORD PTR ds:[rsi]
  419669:	jb     0x4196d0
  41966b:	sub    eax,0x746e6f63
  419670:	outs   dx,BYTE PTR gs:[rsi]
  419672:	je     0x4196a1
  419674:	ins    BYTE PTR es:[rdi],dx
  419675:	outs   dx,BYTE PTR gs:[rsi]
  419677:	addr32 je 0x4196e2
  41967a:	add    BYTE PTR [rcx+rsi*2],ah
  41967d:	add    BYTE PTR [rsi+0x74],ah
  419680:	jo     0x4196af
  419682:	jae    0x4196ef
  419684:	imul   esi,DWORD PTR [rax+0x2d],0x76736170
  41968b:	sub    eax,0x24007069
  419690:	jb     0x419692
  419692:	data16 je 0x419705
  419695:	sub    eax,0x6874656d
  41969a:	outs   dx,DWORD PTR ds:[rsi]
  41969b:	add    BYTE PTR fs:[rbx+rsi*2],ah
  41969f:	add    BYTE PTR [rdi+rbp*2+0x63],ch
  4196a3:	(bad)  
  4196a4:	ins    BYTE PTR es:[rdi],dx
  4196a5:	sub    eax,0x74726f70
  4196aa:	add    BYTE PTR [rsp+rsi*2],ah
  4196ad:	add    BYTE PTR [rbx+0x6f],dh
  4196b0:	movsxd ebp,DWORD PTR [rbx+0x73]
  4196b3:	xor    al,0x0
  4196b5:	and    al,0x54
  4196b7:	add    BYTE PTR [rbx+0x6f],dh
  4196ba:	movsxd ebp,DWORD PTR [rbx+0x73]
  4196bd:	xor    al,0x61
  4196bf:	add    BYTE PTR [rsi*2+0x70746600],ah
  4196c6:	sub    eax,0x65746c61
  4196cb:	jb     0x41973b
  4196cd:	(bad)  
  4196ce:	je     0x419739
  4196d0:	jbe    0x419737
  4196d2:	sub    eax,0x752d6f74
  4196d7:	jae    0x41973e
  4196d9:	jb     0x4196db
  4196db:	and    al,0x76
  4196dd:	add    BYTE PTR [rsi+0x74],ah
  4196e0:	jo     0x41970f
  4196e2:	jae    0x419757
  4196e4:	ins    BYTE PTR es:[rdi],dx
  4196e5:	sub    eax,0x64716572
  4196ea:	add    BYTE PTR [rbx+0x73],dh
  4196ed:	ins    BYTE PTR es:[rdi],dx
  4196ee:	sub    eax,0x64716572
  4196f3:	add    BYTE PTR [rdi+rsi*2],ah
  4196f6:	add    BYTE PTR [rbx+0x65],dh
  4196f9:	jae    0x41976e
  4196fb:	imul   ebp,DWORD PTR [rdi+0x6e],0x24006469
  419702:	js     0x419704
  419704:	data16 je 0x419777
  419707:	sub    eax,0x2d6c7373
  41970c:	movsxd ebp,DWORD PTR [rdi+0x6e]
  41970f:	je     0x419783
  419711:	outs   dx,DWORD PTR ds:[rsi]
  419712:	ins    BYTE PTR es:[rdi],dx
  419713:	add    BYTE PTR [rcx+rdi*2],ah
  419716:	add    BYTE PTR [rsi+0x74],ah
  419719:	jo     0x419748
  41971b:	jae    0x419790
  41971d:	ins    BYTE PTR es:[rdi],dx
  41971e:	sub    eax,0x636363
  419723:	and    al,0x6a
  419725:	add    BYTE PTR [rsi+0x74],ah
  419728:	jo     0x419757
  41972a:	jae    0x41979f
  41972c:	ins    BYTE PTR es:[rdi],dx
  41972d:	sub    eax,0x2d636363
  419732:	ins    DWORD PTR es:[rdi],dx
  419733:	outs   dx,DWORD PTR ds:[rsi]
  419734:	fs add BYTE PTR gs:[rdx+rdi*2],ah
  419739:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  41973d:	movsxd esi,DWORD PTR [rbp+0x72]
  419740:	ins    BYTE PTR es:[rdi],dx
  419741:	add    BYTE PTR [rbx+riz*1],ah
  419744:	add    BYTE PTR [rdx+0x61],dh
  419747:	ja     0x419749
  419749:	and    al,0x30
  41974b:	add    BYTE PTR [rax+0x6f],dh
  41974e:	jae    0x4197c4
  419750:	xor    esi,DWORD PTR [rax]
  419752:	xor    DWORD PTR [rax],eax
  419754:	and    al,0x31
  419756:	add    BYTE PTR [rbx+0x65],ch
  419759:	gs jo  0x4197bd
  41975c:	ins    BYTE PTR es:[rdi],dx
  41975d:	imul   esi,DWORD PTR [rsi+0x65],0x322400
  419764:	jae    0x4197d5
  419766:	movsxd ebp,DWORD PTR [rbx+0x73]
  419769:	xor    eax,0x736f682d
  41976e:	je     0x4197de
  419770:	(bad)  
  419771:	ins    DWORD PTR es:[rdi],dx
  419772:	add    BYTE PTR gs:[rbx+rsi*1],ah
  419776:	add    BYTE PTR [rbx+0x65],ch
  419779:	gs jo  0x4197dd
  41977c:	ins    BYTE PTR es:[rdi],dx
  41977d:	imul   esi,DWORD PTR [rsi+0x65],0x6d69742d
  419784:	add    BYTE PTR gs:[rsp+rsi*1],ah
  419788:	add    BYTE PTR [rax+0x6f],dh
  41978b:	jae    0x419801
  41978d:	xor    esi,DWORD PTR [rax]
  41978f:	xor    al,BYTE PTR [rax]
  419791:	and    al,0x35
  419793:	add    BYTE PTR [rsi+0x6f],ch
  419796:	jo     0x41980a
  419798:	outs   dx,DWORD PTR ds:[rsi]
  419799:	js     0x419814
  41979b:	add    BYTE PTR [rdi+rsi*1],ah
  41979e:	add    BYTE PTR [rbx+0x6f],dh
  4197a1:	movsxd ebp,DWORD PTR [rbx+0x73]
  4197a4:	xor    eax,0x7373672d
  4197a9:	(bad)  
  4197aa:	jo     0x419815
  4197ac:	sub    eax,0x63656e
  4197b1:	and    al,0x38
  4197b3:	add    BYTE PTR [rax+0x72],dh
  4197b6:	outs   dx,DWORD PTR ds:[rsi]
  4197b7:	js     0x419832
  4197b9:	xor    DWORD PTR [rsi],ebp
  4197bb:	xor    BYTE PTR [rax],al
  4197bd:	and    al,0x39
  4197bf:	add    BYTE PTR [rsi+riz*2+0x74],dh
  4197c3:	jo     0x4197f2
  4197c5:	(bad)  
  4197c6:	ins    BYTE PTR es:[rdi],dx
  4197c7:	imul   esi,DWORD PTR [rbx+0x69],0x7a
  4197cb:	add    BYTE PTR gs:[rcx+rax*2],ah
  4197cf:	add    BYTE PTR [rbp+0x61],ch
  4197d2:	imul   ebp,DWORD PTR [rbp+rbp*1+0x66],0x6d6f72
  4197da:	and    al,0x42
  4197dc:	add    BYTE PTR [rbp+0x61],ch
  4197df:	imul   ebp,DWORD PTR [rbp+rbp*1+0x72],0x747063
  4197e7:	and    al,0x43
  4197e9:	add    BYTE PTR [rsi+0x74],ah
  4197ec:	jo     0x41981b
  4197ee:	jo     0x419862
  4197f0:	gs je  0x4197f3
  4197f3:	and    al,0x44
  4197f5:	add    BYTE PTR [rax+0x72],dh
  4197f8:	outs   dx,DWORD PTR ds:[rsi]
  4197f9:	je     0x41986a
  4197fb:	add    BYTE PTR [rax*2+0x6f727000],ah
  419802:	je     0x419873
  419804:	sub    eax,0x69646572
  419809:	jb     0x41980b
  41980b:	and    al,0x46
  41980d:	add    BYTE PTR [rdx+0x65],dh
  419810:	jae    0x419881
  419812:	ins    BYTE PTR es:[rdi],dx
  419813:	jbe    0x41987a
  419815:	add    BYTE PTR [rdi+rax*2],ah
  419818:	add    BYTE PTR [rbp+riz*2+0x6c],ah
  41981c:	gs addr32 (bad) 
  41981f:	je     0x41988a
  419821:	outs   dx,DWORD PTR ds:[rsi]
  419822:	outs   dx,BYTE PTR ds:[rsi]
  419823:	add    BYTE PTR [rax+rcx*2],ah
  419826:	add    BYTE PTR [rbp+0x61],ch
  419829:	imul   ebp,DWORD PTR [rbp+rbp*1+0x61],0x687475
  419831:	and    al,0x49
  419833:	add    BYTE PTR [rax+0x6f],dh
  419836:	jae    0x4198ac
  419838:	xor    esi,DWORD PTR [rax]
  41983a:	xor    eax,DWORD PTR [rax]
  41983c:	and    al,0x4a
  41983e:	add    BYTE PTR [rbp+0x65],ch
  419841:	je     0x4198a4
  419843:	ins    BYTE PTR es:[rdi],dx
  419844:	imul   ebp,DWORD PTR [rsi+0x6b],0x4b2400
  41984b:	jae    0x4198ae
  41984d:	jae    0x4198bb
  41984f:	sub    eax,0x24007269
  419854:	rex.WR add BYTE PTR [rbp+riz*2+0x73],r14b
  419859:	je     0x419888
  41985b:	gs jbe 0x4198c3
  41985e:	outs   dx,BYTE PTR ds:[rsi]
  41985f:	je     0x419861
  419861:	and    al,0x4d
  419863:	add    BYTE PTR [rbp+0x6e],dh
  419866:	imul   edi,DWORD PTR [rax+0x2d],0x6b636f73
  41986d:	gs je  0x419870
  419870:	and    al,0x4e
  419872:	add    BYTE PTR [rax+0x61],dh
  419875:	je     0x4198df
  419877:	sub    eax,0x692d7361
  41987c:	jae    0x41987e
  41987e:	and    al,0x4f
  419880:	add    BYTE PTR [rbx+0x6f],dh
  419883:	movsxd ebp,DWORD PTR [rbx+0x73]
  419886:	xor    eax,0x7373672d
  41988b:	(bad)  
  41988c:	jo     0x4198f7
  41988e:	sub    eax,0x76726573
  419893:	imul   esp,DWORD PTR [rbx+0x65],0x6f727000
  41989a:	js     0x419915
  41989c:	sub    eax,0x76726573
  4198a1:	imul   esp,DWORD PTR [rbx+0x65],0x6d616e2d
  4198a8:	add    BYTE PTR gs:[rax+rdx*2],ah
  4198ac:	add    BYTE PTR [rbx+0x65],dh
  4198af:	jb     0x419927
  4198b1:	imul   esp,DWORD PTR [rbx+0x65],0x6d616e2d
  4198b8:	add    BYTE PTR gs:[rcx+rdx*2],ah
  4198bc:	add    BYTE PTR [rax+0x72],dh
  4198bf:	outs   dx,DWORD PTR ds:[rsi]
  4198c0:	je     0x419931
  4198c2:	sub    eax,0x61666564
  4198c7:	jne    0x419935
  4198c9:	je     0x4198cb
  4198cb:	and    al,0x52
  4198cd:	add    BYTE PTR [rbp+0x78],ah
  4198d0:	jo     0x419937
  4198d2:	movsxd esi,DWORD PTR [rcx+rsi*1+0x30]
  4198d6:	xor    BYTE PTR [rip+0x656d6974],ch        # 0x65af0250
  4198dc:	outs   dx,DWORD PTR ds:[rsi]
  4198dd:	jne    0x419953
  4198df:	add    BYTE PTR [rbx+rdx*2],ah
  4198e2:	add    BYTE PTR [rsi+riz*2+0x74],dh
  4198e6:	jo     0x419915
  4198e8:	outs   dx,BYTE PTR ds:[rsi]
  4198e9:	outs   dx,DWORD PTR ds:[rsi]
  4198ea:	sub    eax,0x6974706f
  4198ef:	outs   dx,DWORD PTR ds:[rsi]
  4198f0:	outs   dx,BYTE PTR ds:[rsi]
  4198f1:	jae    0x4198f3
  4198f3:	and    al,0x55
  4198f5:	add    BYTE PTR [rbx+0x6f],ah
  4198f8:	outs   dx,BYTE PTR ds:[rsi]
  4198f9:	outs   dx,BYTE PTR ds:[rsi]
  4198fa:	movsxd esi,DWORD PTR gs:[rbp+rbp*1+0x74]
  4198ff:	outs   dx,DWORD PTR ds:[rsi]
  419900:	add    BYTE PTR [rax],dh
  419902:	add    BYTE PTR [rax+0x74],ch
  419905:	je     0x419977
  419907:	xor    DWORD PTR [rsi],ebp
  419909:	xor    BYTE PTR [rax],al
  41990b:	xor    BYTE PTR [rcx],dh
  41990d:	add    BYTE PTR [rax+0x74],ch
  419910:	je     0x419982
  419912:	xor    DWORD PTR [rsi],ebp
  419914:	xor    DWORD PTR [rax],eax
  419916:	xor    BYTE PTR [rdx],dh
  419918:	add    BYTE PTR [rax+0x74],ch
  41991b:	je     0x41998d
  41991d:	xor    al,BYTE PTR [rax]
  41991f:	xor    BYTE PTR [rbx],dh
  419921:	add    BYTE PTR [rax+0x74],ch
  419924:	je     0x419996
  419926:	xor    ch,BYTE PTR [rip+0x6f697270]        # 0x6fab0b9c
  41992c:	jb     0x41995b
  41992e:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  419932:	ins    BYTE PTR es:[rdi],dx
  419933:	gs fs add BYTE PTR gs:[ecx],dh
  419939:	add    BYTE PTR [rsp+rbp*2+0x73],dh
  41993d:	jbe    0x419970
  41993f:	add    BYTE PTR [rcx],dh
  419941:	xor    BYTE PTR [rax],al
  419943:	je     0x4199b1
  419945:	jae    0x4199bd
  419947:	xor    DWORD PTR [rsi],ebp
  419949:	xor    BYTE PTR [rax],al
  41994b:	xor    DWORD PTR [rcx],esi
  41994d:	add    BYTE PTR [rsp+rbp*2+0x73],dh
  419951:	jbe    0x419984
  419953:	xor    DWORD PTR cs:[rax],eax
  419956:	xor    DWORD PTR [rdx],esi
  419958:	add    BYTE PTR [rsp+rbp*2+0x73],dh
  41995c:	jbe    0x41998f
  41995e:	xor    al,BYTE PTR cs:[rax]
  419961:	xor    DWORD PTR [rbx],esi
  419963:	add    BYTE PTR [rsp+rbp*2+0x73],dh
  419967:	jbe    0x41999a
  419969:	xor    eax,DWORD PTR cs:[rax]
  41996c:	xor    al,BYTE PTR [rax]
  41996e:	jae    0x4199e3
  419970:	ins    BYTE PTR es:[rdi],dx
  419971:	jbe    0x4199a5
  419973:	add    BYTE PTR [rbx],dh
  419975:	add    BYTE PTR [rbx+0x73],dh
  419978:	ins    BYTE PTR es:[rdi],dx
  419979:	jbe    0x4199ae
  41997b:	add    BYTE PTR [rax+rax*1],dh
  41997e:	imul   esi,DWORD PTR [rax+0x76],0x360034
  419985:	imul   esi,DWORD PTR [rax+0x76],0x610036
  41998c:	(bad)  
  41998d:	jo     0x4199ff
  41998f:	outs   dx,BYTE PTR gs:[rsi]
  419991:	add    BYTE PTR fs:[rcx+0x0],al
  419995:	jne    0x419a0a
  419997:	gs jb  0x4199c7
  41999a:	(bad)  
  41999b:	outs   dx,BYTE PTR gs:[esi]
  41999e:	je     0x4199a0
  4199a0:	(bad)  
  4199a1:	add    BYTE PTR [rbx+0x6f],ah
  4199a4:	outs   dx,DWORD PTR ds:[rsi]
  4199a5:	imul   ebp,DWORD PTR [rcx+0x65],0x0
  4199a9:	rex.X add BYTE PTR [rbp+0x73],sil
  4199ad:	gs sub eax,0x69637361
  4199b3:	imul   eax,DWORD PTR [rax],0x6f630063
  4199b9:	outs   dx,DWORD PTR ds:[rsi]
  4199ba:	imul   ebp,DWORD PTR [rcx+0x65],0x2d
  4199be:	push   0x61
  4199c0:	jb     0x4199c2
  4199c2:	rex.XB add BYTE PTR [r11+0x6f],spl
  4199c6:	outs   dx,BYTE PTR ds:[rsi]
  4199c7:	je     0x419a32
  4199c9:	outs   dx,BYTE PTR ds:[rsi]
  4199ca:	jne    0x419a31
  4199cc:	sub    eax,0x64007461
  4199d1:	add    BYTE PTR [rcx+riz*2+0x74],ah
  4199d5:	(bad)  
  4199d6:	add    BYTE PTR [rdx+rsi*2+0x0],ah
  4199da:	fs (bad) 
  4199dc:	je     0x419a3f
  4199de:	sub    eax,0x776172
  4199e3:	fs (bad) 
  4199e5:	add    BYTE PTR [rcx+riz*2+0x74],ah
  4199e9:	(bad)  
  4199ea:	sub    eax,0x69637361
  4199ef:	imul   eax,DWORD PTR [rax],0x64006264
  4199f5:	(bad)  
  4199f6:	je     0x419a59
  4199f8:	sub    eax,0x616e6962
  4199fd:	jb     0x419a78
  4199ff:	add    BYTE PTR [rbp+riz*2+0x0],ah
  419a03:	fs (bad) 
  419a05:	je     0x419a68
  419a07:	sub    eax,0x656c7275
  419a0c:	outs   dx,BYTE PTR ds:[rsi]
  419a0d:	movsxd ebp,DWORD PTR [rdi+0x64]
  419a10:	add    BYTE PTR gs:[rax+rax*1+0x64],al
  419a15:	jne    0x419a84
  419a17:	jo     0x419a46
  419a19:	push   0x65646165
  419a1e:	jb     0x419a20
  419a20:	add    BYTE PTR gs:[rdx+0x65],dh
  419a24:	data16 gs jb 0x419a8d
  419a28:	jb     0x419a2a
  419a2a:	add    BYTE PTR [r11+0x65],r12b
  419a2e:	jb     0x419aa4
  419a30:	add    BYTE PTR [rbp+0x61],al
  419a33:	add    BYTE PTR [rbx+0x61],ah
  419a36:	movsxd esp,DWORD PTR [rbp+0x72]
  419a39:	je     0x419a3b
  419a3b:	rex.RB (bad) 
  419a3d:	add    BYTE PTR [rbx+0x65],ah
  419a40:	jb     0x419ab6
  419a42:	sub    eax,0x65707974
  419a47:	add    BYTE PTR [rbp+0x63],al
  419a4a:	add    BYTE PTR [rbx+0x65],ch
  419a4d:	jns    0x419a4f
  419a4f:	rex.RB
  419a50:	add    BYTE PTR fs:[rbx+0x65],ch
  419a54:	jns    0x419a83
  419a56:	je     0x419ad1
  419a58:	jo     0x419abf
  419a5a:	add    BYTE PTR [rbp+0x65],al
  419a5d:	add    BYTE PTR [rax+0x61],dh
  419a60:	jae    0x419ad5
  419a62:	add    BYTE PTR [rbp+0x66],al
  419a65:	add    BYTE PTR [rbp+0x6e],ah
  419a68:	imul   ebp,DWORD PTR [esi+0x65],0x674500
  419a70:	movsxd esp,DWORD PTR [rcx+0x70]
  419a73:	(bad)  
  419a74:	je     0x419ade
  419a76:	add    BYTE PTR [rbp+0x68],al
  419a79:	add    BYTE PTR [rax+0x75],dh
  419a7c:	(bad)  
  419a7d:	imul   esp,DWORD PTR [rbp+0x79],0x0
  419a81:	imul   r8d,DWORD PTR [r8],0x74736f68
  419a88:	jo     0x419aff
  419a8a:	(bad)  
  419a8b:	ins    DWORD PTR es:[rdi],dx
  419a8c:	fs xor eax,0x6a4500
  419a92:	movsxd esi,DWORD PTR [rdx+0x6c]
  419a95:	imul   bp,WORD PTR [rbp+riz*2+0x0],0x6b45
  419a9c:	add    BYTE PTR [rsp+rbp*2+0x73],dh
  419aa0:	jne    0x419b15
  419aa2:	gs jb  0x419aa5
  419aa5:	rex.RB ins BYTE PTR es:[rdi],dx
  419aa7:	add    BYTE PTR [rsp+rbp*2+0x73],dh
  419aab:	jo     0x419b0e
  419aad:	jae    0x419b22
  419aaf:	ja     0x419b20
  419ab1:	jb     0x419b17
  419ab3:	add    BYTE PTR [rbp+0x6d],al
  419ab6:	add    BYTE PTR [rsp+rbp*2+0x73],dh
  419aba:	(bad)  
  419abb:	jne    0x419b31
  419abd:	push   0x65707974
  419ac2:	add    BYTE PTR [rbp+0x6e],al
  419ac5:	add    BYTE PTR [rbx+0x73],dh
  419ac8:	ins    BYTE PTR es:[rdi],dx
  419ac9:	sub    eax,0x6f6c6c61
  419ace:	ja     0x419afd
  419ad0:	(bad)  
  419ad1:	gs (bad) 
  419ad3:	jae    0x419b49
  419ad5:	add    BYTE PTR [rbp+0x6f],al
  419ad8:	add    BYTE PTR [rdi+rbp*2+0x67],ch
  419adc:	imul   ebp,DWORD PTR [rsi+0x2d],0x6974706f
  419ae3:	outs   dx,DWORD PTR ds:[rsi]
  419ae4:	outs   dx,BYTE PTR ds:[rsi]
  419ae5:	jae    0x419ae7
  419ae7:	rex.RB jo 0x419aea
  419aea:	jo     0x419b55
  419aec:	outs   dx,BYTE PTR ds:[rsi]
  419aed:	outs   dx,BYTE PTR ds:[rsi]
  419aee:	gs fs jo 0x419b67
  419af2:	(bad)  
  419af3:	imul   esp,DWORD PTR [rbp+0x79],0x0
  419af7:	rex.RB jno 0x419afa
  419afa:	movsxd esp,DWORD PTR [rbp+0x72]
  419afd:	je     0x419b2c
  419aff:	jae    0x419b75
  419b01:	(bad)  
  419b02:	je     0x419b79
  419b04:	jae    0x419b06
  419b06:	rex.RB jb 0x419b09
  419b09:	data16 (bad) 
  419b0b:	ins    BYTE PTR es:[rdi],dx
  419b0c:	jae    0x419b73
  419b0e:	sub    eax,0x72617473
  419b13:	je     0x419b15
  419b15:	rex.RB jae 0x419b18
  419b18:	jae    0x419b8d
  419b1a:	ins    BYTE PTR es:[rdi],dx
  419b1b:	sub    eax,0x722d6f6e
  419b20:	gs jbe 0x419b92
  419b23:	imul   esp,DWORD PTR [rbp+0x0],0x45
  419b27:	je     0x419b29
  419b29:	je     0x419b8e
  419b2b:	jo     0x419b5a
  419b2d:	data16 (bad) 
  419b2f:	jae    0x419ba5
  419b31:	outs   dx,DWORD PTR ds:[rsi]
  419b32:	jo     0x419b99
  419b34:	outs   dx,BYTE PTR ds:[rsi]
  419b35:	add    BYTE PTR [rbp+0x75],al
  419b38:	add    BYTE PTR [rax+0x72],dh
  419b3b:	outs   dx,DWORD PTR ds:[rsi]
  419b3c:	js     0x419bb7
  419b3e:	sub    eax,0x75736c74
  419b43:	jae    0x419baa
  419b45:	jb     0x419b47
  419b47:	rex.RB jbe 0x419b4a
  419b4a:	jo     0x419bbe
  419b4c:	outs   dx,DWORD PTR ds:[rsi]
  419b4d:	js     0x419bc8
  419b4f:	sub    eax,0x70736c74
  419b54:	(bad)  
  419b55:	jae    0x419bca
  419b57:	ja     0x419bc8
  419b59:	jb     0x419bbf
  419b5b:	add    BYTE PTR [rbp+0x77],al
  419b5e:	add    BYTE PTR [rax+0x72],dh
  419b61:	outs   dx,DWORD PTR ds:[rsi]
  419b62:	js     0x419bdd
  419b64:	sub    eax,0x61736c74
  419b69:	jne    0x419bdf
  419b6b:	push   0x65707974
  419b70:	add    BYTE PTR [rbp+0x78],al
  419b73:	add    BYTE PTR [rax+0x72],dh
  419b76:	outs   dx,DWORD PTR ds:[rsi]
  419b77:	js     0x419bf2
  419b79:	sub    eax,0x74726563
  419b7e:	add    BYTE PTR [rbp+0x79],al
  419b81:	add    BYTE PTR [rax+0x72],dh
  419b84:	outs   dx,DWORD PTR ds:[rsi]
  419b85:	js     0x419c00
  419b87:	sub    eax,0x74726563
  419b8c:	sub    eax,0x65707974
  419b91:	add    BYTE PTR [rbp+0x7a],al
  419b94:	add    BYTE PTR [rax+0x72],dh
  419b97:	outs   dx,DWORD PTR ds:[rsi]
  419b98:	js     0x419c13
  419b9a:	sub    eax,0x79656b
  419b9f:	xor    BYTE PTR [r8],r8b
  419ba2:	jo     0x419c16
  419ba4:	outs   dx,DWORD PTR ds:[rsi]
  419ba5:	js     0x419c20
  419ba7:	sub    eax,0x2d79656b
  419bac:	je     0x419c27
  419bae:	jo     0x419c15
  419bb0:	add    BYTE PTR [rbp+0x31],al
  419bb3:	add    BYTE PTR [rax+0x72],dh
  419bb6:	outs   dx,DWORD PTR ds:[rsi]
  419bb7:	js     0x419c32
  419bb9:	sub    eax,0x73736170
  419bbe:	add    BYTE PTR [rbp+0x32],al
  419bc1:	add    BYTE PTR [rax+0x72],dh
  419bc4:	outs   dx,DWORD PTR ds:[rsi]
  419bc5:	js     0x419c40
  419bc7:	sub    eax,0x68706963
  419bcc:	gs jb  0x419c42
  419bcf:	add    BYTE PTR [rbp+0x33],al
  419bd2:	add    BYTE PTR [rax+0x72],dh
  419bd5:	outs   dx,DWORD PTR ds:[rsi]
  419bd6:	js     0x419c51
  419bd8:	sub    eax,0x666c7263
  419bdd:	imul   ebp,DWORD PTR [rbp+riz*2+0x0],0x70003445
  419be5:	jb     0x419c56
  419be7:	js     0x419c62
  419be9:	sub    eax,0x2d6c7373
  419bee:	(bad)  
  419bef:	ins    BYTE PTR es:[rdi],dx
  419bf0:	ins    BYTE PTR es:[rdi],dx
  419bf1:	outs   dx,DWORD PTR ds:[rsi]
  419bf2:	ja     0x419c21
  419bf4:	(bad)  
  419bf5:	gs (bad) 
  419bf7:	jae    0x419c6d
  419bf9:	add    BYTE PTR [rbp+0x35],al
  419bfc:	add    BYTE PTR [rbp+0x36],al
  419bff:	add    BYTE PTR [rax+0x72],dh
  419c02:	outs   dx,DWORD PTR ds:[rsi]
  419c03:	js     0x419c7e
  419c05:	sub    eax,0x65636163
  419c0a:	jb     0x419c80
  419c0c:	add    BYTE PTR [rbp+0x37],al
  419c0f:	add    BYTE PTR [rax+0x72],dh
  419c12:	outs   dx,DWORD PTR ds:[rsi]
  419c13:	js     0x419c8e
  419c15:	sub    eax,0x61706163
  419c1a:	je     0x419c84
  419c1c:	add    BYTE PTR [rbp+0x38],al
  419c1f:	add    BYTE PTR [rax+0x72],dh
  419c22:	outs   dx,DWORD PTR ds:[rsi]
  419c23:	js     0x419c9e
  419c25:	sub    eax,0x65736e69
  419c2a:	movsxd esi,DWORD PTR [rbp+0x72]
  419c2d:	add    BYTE PTR gs:[rbp+0x39],al
  419c31:	add    BYTE PTR [rax+0x72],dh
  419c34:	outs   dx,DWORD PTR ds:[rsi]
  419c35:	js     0x419cb0
  419c37:	sub    eax,0x76736c74
  419c3c:	xor    DWORD PTR [rax],eax
  419c3e:	data16 add BYTE PTR [rsi+0x61],ah
  419c42:	imul   ebp,DWORD PTR [rax+rax*1+0x66],0x61660061
  419c4a:	imul   ebp,DWORD PTR [rbp+rbp*1+0x65],0x796c7261
  419c52:	add    BYTE PTR [rsi+0x0],al
  419c55:	outs   dx,WORD PTR ds:[rsi]
  419c57:	jb     0x419cc6
  419c59:	add    BYTE PTR [rsi+0x73],al
  419c5c:	add    BYTE PTR [rsi+0x6f],ah
  419c5f:	jb     0x419cce
  419c61:	sub    eax,0x69727473
  419c66:	outs   dx,BYTE PTR ds:[rsi]
  419c67:	add    BYTE PTR [edi+0x0],ah
  419c6b:	ins    BYTE PTR es:[edi],dx
  419c6d:	outs   dx,DWORD PTR ds:[rsi]
  419c6e:	(bad)  
  419c6f:	outs   dx,DWORD PTR ds:[rsi]
  419c70:	data16 data16 add BYTE PTR [rdi+0x0],al
  419c75:	addr32 gs je 0x419c79
  419c79:	push   0x6c656800
  419c7e:	jo     0x419c80
  419c80:	rex.W add BYTE PTR [rax+0x65],bpl
  419c84:	(bad)  
  419c85:	fs gs jb 0x419c89
  419c89:	rex.W jo 0x419c8c
  419c8c:	jo     0x419d00
  419c8e:	outs   dx,DWORD PTR ds:[rsi]
  419c8f:	js     0x419d0a
  419c91:	sub    eax,0x64616568
  419c96:	gs jb  0x419c99
  419c99:	imul   eax,DWORD PTR [rax],0x6c636e69
  419c9f:	jne    0x419d05
  419ca1:	add    BYTE PTR gs:[rcx+0x0],cl
  419ca5:	push   0x646165
  419caa:	push   0x0
  419cac:	push   0x75
  419cae:	outs   dx,BYTE PTR ds:[rsi]
  419caf:	imul   ebp,DWORD PTR [rip+0x73736573],0x69        # 0x73b50229
  419cb6:	outs   dx,DWORD PTR ds:[rsi]
  419cb7:	outs   dx,BYTE PTR ds:[rsi]
  419cb8:	sub    eax,0x6b6f6f63
  419cbd:	imul   esp,DWORD PTR [rbp+0x73],0x72004a00
  419cc4:	gs ins DWORD PTR es:[rdi],dx
  419cc6:	outs   dx,DWORD PTR ds:[rsi]
  419cc7:	je     0x419d2e
  419cc9:	sub    eax,0x64616568
  419cce:	gs jb  0x419cfe
  419cd1:	outs   dx,BYTE PTR ds:[rsi]
  419cd2:	(bad)  
  419cd3:	ins    DWORD PTR es:[rdi],dx
  419cd4:	add    BYTE PTR gs:[rbx+0x0],ch
  419cd8:	imul   ebp,DWORD PTR [rsi+0x73],0x72756365
  419cdf:	add    BYTE PTR gs:[rbx+0x0],cl
  419ce3:	movsxd ebp,DWORD PTR [rdi+0x6e]
  419ce6:	imul   sp,WORD PTR [rdi+0x0],0x6c
  419cec:	ins    BYTE PTR es:[rdi],dx
  419ced:	imul   esi,DWORD PTR [rbx+0x74],0x6c6e6f2d
  419cf4:	jns    0x419cf6
  419cf6:	rex.WR add BYTE PTR [rdi+rbp*2+0x63],r13b
  419cfb:	(bad)  
  419cfc:	je     0x419d67
  419cfe:	outs   dx,DWORD PTR ds:[rsi]
  419cff:	outs   dx,BYTE PTR ds:[rsi]
  419d00:	add    BYTE PTR [rsp+rsi*2+0x0],cl
  419d04:	ins    BYTE PTR es:[rdi],dx
  419d05:	outs   dx,DWORD PTR ds:[rsi]
  419d06:	movsxd esp,DWORD PTR [rcx+0x74]
  419d09:	imul   ebp,DWORD PTR [rdi+0x6e],0x7572742d
  419d10:	jae    0x419d86
  419d12:	gs add BYTE PTR fs:[rbp+0x0],ch
  419d17:	ins    DWORD PTR es:[rdi],dx
  419d18:	(bad)  
  419d19:	js     0x419d48
  419d1b:	je     0x419d86
  419d1d:	ins    DWORD PTR es:[rdi],dx
  419d1e:	add    BYTE PTR gs:[rbp+0x0],cl
  419d22:	ins    DWORD PTR es:[rdi],dx
  419d23:	(bad)  
  419d24:	outs   dx,BYTE PTR ds:[rsi]
  419d25:	jne    0x419d88
  419d27:	ins    BYTE PTR es:[rdi],dx
  419d28:	add    BYTE PTR [rsi+0x0],ch
  419d2b:	outs   dx,BYTE PTR ds:[rsi]
  419d2c:	gs je  0x419da1
  419d2f:	movsxd eax,DWORD PTR [rax]
  419d31:	outs   dx,BYTE PTR ds:[rsi]
  419d32:	outs   dx,DWORD PTR ds:[rsi]
  419d33:	add    BYTE PTR [rsi+0x65],ch
  419d36:	je     0x419daa
  419d38:	movsxd ebp,DWORD PTR [rip+0x6974706f]        # 0x69b60dad
  419d3e:	outs   dx,DWORD PTR ds:[rsi]
  419d3f:	outs   dx,BYTE PTR ds:[rsi]
  419d40:	(bad)  
  419d41:	ins    BYTE PTR es:[rdi],dx
  419d42:	add    BYTE PTR [rsi+0x65],ch
  419d45:	add    BYTE PTR [rsi+0x65],ch
  419d48:	je     0x419dbc
  419d4a:	movsxd ebp,DWORD PTR [rip+0x656c6966]        # 0x65ae06b6
  419d50:	add    BYTE PTR [rsi+0x0],cl
  419d53:	(bad)  
  419d54:	jne    0x419dbc
  419d56:	data16 gs jb 0x419d5a
  419d5a:	outs   dx,DWORD PTR ds:[rsi]
  419d5b:	add    BYTE PTR [rdi+0x75],ch
  419d5e:	je     0x419dd0
  419d60:	jne    0x419dd6
  419d62:	add    BYTE PTR [rdi+0x0],cl
  419d65:	jb     0x419dcc
  419d67:	ins    DWORD PTR es:[rdi],dx
  419d68:	outs   dx,DWORD PTR ds:[rsi]
  419d69:	je     0x419dd0
  419d6b:	sub    eax,0x656d616e
  419d70:	add    BYTE PTR [rdi+0x61],cl
  419d73:	add    BYTE PTR [rdx+0x65],dh
  419d76:	ins    DWORD PTR es:[rdi],dx
  419d77:	outs   dx,DWORD PTR ds:[rsi]
  419d78:	je     0x419ddf
  419d7a:	sub    eax,0x656d616e
  419d7f:	sub    eax,0x6c6c61
  419d84:	jo     0x419d86
  419d86:	jo     0x419dfa
  419d88:	outs   dx,DWORD PTR ds:[rsi]
  419d89:	js     0x419e04
  419d8b:	je     0x419e02
  419d8d:	outs   dx,BYTE PTR ds:[rsi]
  419d8e:	outs   dx,BYTE PTR ds:[rsi]
  419d8f:	gs ins BYTE PTR es:[rdi],dx
  419d91:	add    BYTE PTR [rax+0x0],dl
  419d94:	data16 je 0x419e07
  419d97:	sub    eax,0x74726f70
  419d9c:	add    BYTE PTR [rcx+0x0],dh
  419d9f:	imul   esi,DWORD PTR fs:[rbx+0x61],0x656c62
  419da7:	push   rcx
  419da8:	add    BYTE PTR [rcx+0x75],dh
  419dab:	outs   dx,DWORD PTR ds:[rsi]
  419dac:	je     0x419e13
  419dae:	add    BYTE PTR [rdx+0x0],dh
  419db1:	jb     0x419e14
  419db3:	outs   dx,BYTE PTR ds:[rsi]
  419db4:	add    BYTE PTR gs:[edx+0x0],dl
  419db9:	jb     0x419e20
  419dbb:	ins    DWORD PTR es:[rdi],dx
  419dbc:	outs   dx,DWORD PTR ds:[rsi]
  419dbd:	je     0x419e24
  419dbf:	sub    eax,0x656d6974
  419dc4:	add    BYTE PTR [rbx+0x0],dh
  419dc7:	jae    0x419e32
  419dc9:	ins    BYTE PTR es:[rdi],dx
  419dca:	outs   dx,BYTE PTR gs:[rsi]
  419dcc:	je     0x419dce
  419dce:	push   rbx
  419dcf:	add    BYTE PTR [rbx+0x68],dh
  419dd2:	outs   dx,DWORD PTR ds:[rsi]
  419dd3:	ja     0x419e02
  419dd5:	gs jb  0x419e4a
  419dd8:	outs   dx,DWORD PTR ds:[rsi]
  419dd9:	jb     0x419ddb
  419ddb:	je     0x419ddd
  419ddd:	je     0x419e44
  419ddf:	ins    BYTE PTR es:[rdi],dx
  419de0:	outs   dx,BYTE PTR ds:[rsi]
  419de1:	gs je  0x419e11
  419de4:	outs   dx,DWORD PTR ds:[rsi]
  419de5:	jo     0x419e5b
  419de7:	imul   ebp,DWORD PTR [rdi+0x6e],0x75005400
  419dee:	jo     0x419e5c
  419df0:	outs   dx,DWORD PTR ds:[rsi]
  419df1:	(bad)  
  419df2:	fs sub eax,0x656c6966
  419df8:	add    BYTE PTR [rbp+0x0],dh
  419dfb:	jne    0x419e70
  419dfd:	gs jb  0x419e00
  419e00:	push   rbp
  419e01:	add    BYTE PTR [rax+0x72],dh
  419e04:	outs   dx,DWORD PTR ds:[rsi]
  419e05:	js     0x419e80
  419e07:	sub    eax,0x72657375
  419e0c:	add    BYTE PTR [rsi+0x0],dh
  419e0f:	jbe    0x419e76
  419e11:	jb     0x419e75
  419e13:	outs   dx,DWORD PTR ds:[rsi]
  419e14:	jae    0x419e7b
  419e16:	add    BYTE PTR [rsi+0x0],dl
  419e19:	jbe    0x419e80
  419e1b:	jb     0x419e90
  419e1d:	imul   ebp,DWORD PTR [rdi+0x6e],0x69727700
  419e24:	je     0x419e8b
  419e26:	sub    eax,0x74756f
  419e2b:	js     0x419e2d
  419e2d:	jo     0x419ea1
  419e2f:	outs   dx,DWORD PTR ds:[rsi]
  419e30:	js     0x419eab
  419e32:	add    BYTE PTR [rax+0x61],bh
  419e35:	add    BYTE PTR [rax+0x72],dh
  419e38:	gs jo  0x419ead
  419e3b:	outs   dx,DWORD PTR ds:[rsi]
  419e3c:	js     0x419eb7
  419e3e:	add    BYTE PTR [rax+0x0],bl
  419e41:	jb     0x419ea8
  419e43:	jno    0x419eba
  419e45:	gs jae 0x419ebc
  419e48:	add    BYTE PTR [rcx+0x0],bl
  419e4b:	jae    0x419ebd
  419e4d:	gs gs fs sub eax,0x696d696c
  419e55:	je     0x419e57
  419e57:	jns    0x419e59
  419e59:	jae    0x419ecb
  419e5b:	gs gs fs sub eax,0x656d6974
  419e63:	add    BYTE PTR [rdx+0x0],bh
  419e66:	je     0x419ed1
  419e68:	ins    DWORD PTR es:[rdi],dx
  419e69:	gs sub eax,0x646e6f63
  419e6f:	add    BYTE PTR [rbx],ah
  419e71:	add    BYTE PTR [rax+0x72],dh
  419e74:	outs   dx,DWORD PTR ds:[rsi]
  419e75:	addr32 jb 0x419edd
  419e78:	jae    0x419eed
  419e7a:	sub    eax,0x726162
  419e7f:	outs   dx,BYTE PTR ds:[rsi]
  419e80:	gs js  0x419ef7
	...
  419ebf:	add    BYTE PTR [rdx+0x4193],bh
  419ec5:	add    BYTE PTR [rax],al
  419ec7:	add    BYTE PTR [rbp+0x4193],bh
  419ecd:	add    BYTE PTR [rax],al
  419ecf:	add    BYTE PTR [rcx],al
  419ed1:	add    BYTE PTR [rax],al
  419ed3:	add    BYTE PTR [rax],al
  419ed5:	add    BYTE PTR [rax],al
  419ed7:	add    cl,al
  419ed9:	xchg   ebx,eax
  419eda:	add    BYTE PTR [r8],al
  419edd:	add    BYTE PTR [rax],al
  419edf:	add    ah,al
  419ee1:	xchg   ebx,eax
  419ee2:	add    BYTE PTR [r8],al
  419ee5:	add    BYTE PTR [rax],al
  419ee7:	add    BYTE PTR [rcx],al
  419ee9:	add    BYTE PTR [rax],al
  419eeb:	add    BYTE PTR [rax],al
  419eed:	add    BYTE PTR [rax],al
  419eef:	add    dl,dl
  419ef1:	xchg   ebx,eax
  419ef2:	add    BYTE PTR [r8],al
  419ef5:	add    BYTE PTR [rax],al
  419ef7:	add    ch,dl
  419ef9:	xchg   ebx,eax
  419efa:	add    BYTE PTR [r8],al
  419efd:	add    BYTE PTR [rax],al
  419eff:	add    BYTE PTR [rcx],al
  419f01:	add    BYTE PTR [rax],al
  419f03:	add    BYTE PTR [rax],al
  419f05:	add    BYTE PTR [rax],al
  419f07:	add    bl,ah
  419f09:	xchg   ebx,eax
  419f0a:	add    BYTE PTR [r8],al
  419f0d:	add    BYTE PTR [rax],al
  419f0f:	add    dh,ah
  419f11:	xchg   ebx,eax
  419f12:	add    BYTE PTR [r8],al
  419f15:	add    BYTE PTR [rax],al
  419f17:	add    BYTE PTR [rcx],al
  419f19:	add    BYTE PTR [rax],al
  419f1b:	add    BYTE PTR [rax],al
  419f1d:	add    BYTE PTR [rax],al
  419f1f:	add    dl,dh
  419f21:	xchg   ebx,eax
  419f22:	add    BYTE PTR [r8],al
  419f25:	add    BYTE PTR [rax],al
  419f27:	add    ch,dh
  419f29:	xchg   ebx,eax
  419f2a:	add    BYTE PTR [r8],al
  419f2d:	add    BYTE PTR [rax],al
  419f2f:	add    BYTE PTR [rcx],al
  419f31:	add    BYTE PTR [rax],al
  419f33:	add    BYTE PTR [rax],al
  419f35:	add    BYTE PTR [rax],al
  419f37:	add    dh,bh
  419f39:	xchg   ebx,eax
  419f3a:	add    BYTE PTR [r8],al
  419f3d:	add    BYTE PTR [rax],al
  419f3f:	add    BYTE PTR [rcx],al
  419f41:	xchg   esp,eax
  419f42:	add    BYTE PTR [r8],al
  419f45:	add    BYTE PTR [rax],al
  419f47:	add    BYTE PTR [rcx],al
  419f49:	add    BYTE PTR [rax],al
  419f4b:	add    BYTE PTR [rax],al
  419f4d:	add    BYTE PTR [rax],al
  419f4f:	add    BYTE PTR [rdi],cl
  419f51:	xchg   esp,eax
  419f52:	add    BYTE PTR [r8],al
  419f55:	add    BYTE PTR [rax],al
  419f57:	add    BYTE PTR [rdx],dl
  419f59:	xchg   esp,eax
  419f5a:	add    BYTE PTR [r8],al
  419f5d:	add    BYTE PTR [rax],al
  419f5f:	add    BYTE PTR [rcx],al
  419f61:	add    BYTE PTR [rax],al
  419f63:	add    BYTE PTR [rax],al
  419f65:	add    BYTE PTR [rax],al
  419f67:	add    BYTE PTR [rdx],ah
  419f69:	xchg   esp,eax
  419f6a:	add    BYTE PTR [r8],al
  419f6d:	add    BYTE PTR [rax],al
  419f6f:	add    BYTE PTR [rip+0x4194],ah        # 0x41e109
  419f75:	add    BYTE PTR [rax],al
  419f77:	add    BYTE PTR [rcx],al
  419f79:	add    BYTE PTR [rax],al
  419f7b:	add    BYTE PTR [rax],al
  419f7d:	add    BYTE PTR [rax],al
  419f7f:	add    BYTE PTR [rip+0x4194],ch        # 0x41e119
  419f85:	add    BYTE PTR [rax],al
  419f87:	add    BYTE PTR [rax],dh
  419f89:	xchg   esp,eax
  419f8a:	add    BYTE PTR [r8],al
  419f8d:	add    BYTE PTR [rax],al
  419f8f:	add    BYTE PTR [rcx],al
  419f91:	add    BYTE PTR [rax],al
  419f93:	add    BYTE PTR [rax],al
  419f95:	add    BYTE PTR [rax],al
  419f97:	add    BYTE PTR [rsi],bh
  419f99:	xchg   esp,eax
  419f9a:	add    BYTE PTR [r8],al
  419f9d:	add    BYTE PTR [rax],al
  419f9f:	add    BYTE PTR [rcx-0x6c],al
  419fa2:	add    BYTE PTR [r8],al
	...
  419fad:	add    BYTE PTR [rax],al
  419faf:	add    BYTE PTR [rsi-0x6c],cl
  419fb2:	add    BYTE PTR [r8],al
  419fb5:	add    BYTE PTR [rax],al
  419fb7:	add    BYTE PTR [rcx-0x6c],dl
  419fba:	add    BYTE PTR [r8],al
	...
  419fc5:	add    BYTE PTR [rax],al
  419fc7:	add    BYTE PTR [rsi-0x6c],dl
  419fca:	add    BYTE PTR [r8],al
  419fcd:	add    BYTE PTR [rax],al
  419fcf:	add    BYTE PTR [rcx-0x6c],bl
  419fd2:	add    BYTE PTR [r8],al
  419fd5:	add    BYTE PTR [rax],al
  419fd7:	add    BYTE PTR [rcx],al
  419fd9:	add    BYTE PTR [rax],al
  419fdb:	add    BYTE PTR [rax],al
  419fdd:	add    BYTE PTR [rax],al
  419fdf:	add    BYTE PTR [rbp-0x6c],ah
  419fe2:	add    BYTE PTR [r8],al
  419fe5:	add    BYTE PTR [rax],al
  419fe7:	add    BYTE PTR [rax-0x6c],ch
  419fea:	add    BYTE PTR [r8],al
  419fed:	add    BYTE PTR [rax],al
  419fef:	add    BYTE PTR [rcx],al
  419ff1:	add    BYTE PTR [rax],al
  419ff3:	add    BYTE PTR [rax],al
  419ff5:	add    BYTE PTR [rax],al
  419ff7:	add    BYTE PTR [rsi-0x6c],ch
  419ffa:	add    BYTE PTR [r8],al
  419ffd:	add    BYTE PTR [rax],al
  419fff:	add    BYTE PTR [rcx-0x6c],dh
  41a002:	add    BYTE PTR [r8],al
	...
  41a00d:	add    BYTE PTR [rax],al
  41a00f:	add    BYTE PTR [rbp-0x6c],dh
  41a012:	add    BYTE PTR [r8],al
  41a015:	add    BYTE PTR [rax],al
  41a017:	add    BYTE PTR [rax-0x6c],bh
  41a01a:	add    BYTE PTR [r8],al
  41a01d:	add    BYTE PTR [rax],al
  41a01f:	add    BYTE PTR [rcx],al
  41a021:	add    BYTE PTR [rax],al
  41a023:	add    BYTE PTR [rax],al
  41a025:	add    BYTE PTR [rax],al
  41a027:	add    BYTE PTR [rsp+rdx*4+0x41],al
  41a02e:	add    BYTE PTR [rax],al
  41a030:	xchg   DWORD PTR [rcx+rax*2+0x0],edx
	...
  41a03f:	add    BYTE PTR [rsp+rdx*4+0x41],cl
  41a046:	add    BYTE PTR [rax],al
  41a048:	(bad)  
  41a049:	xchg   esp,eax
  41a04a:	add    BYTE PTR [r8],al
  41a04d:	add    BYTE PTR [rax],al
  41a04f:	add    BYTE PTR [rcx],al
  41a051:	add    BYTE PTR [rax],al
  41a053:	add    BYTE PTR [rax],al
  41a055:	add    BYTE PTR [rax],al
  41a057:	add    BYTE PTR [rdx+0x4194],bl
  41a05d:	add    BYTE PTR [rax],al
  41a05f:	add    BYTE PTR [rbp+0x4194],bl
	...
  41a06d:	add    BYTE PTR [rax],al
  41a06f:	add    BYTE PTR [rax+0x4194],ch
  41a075:	add    BYTE PTR [rax],al
  41a077:	add    BYTE PTR [rbx+0x4194],ch
	...
  41a085:	add    BYTE PTR [rax],al
  41a087:	add    BYTE PTR [rdi+0x4194],dh
  41a08d:	add    BYTE PTR [rax],al
  41a08f:	add    BYTE PTR [rdx+0x4194],bh
	...
  41a09d:	add    BYTE PTR [rax],al
  41a09f:	add    cl,al
  41a0a1:	xchg   esp,eax
  41a0a2:	add    BYTE PTR [r8],al
  41a0a5:	add    BYTE PTR [rax],al
  41a0a7:	add    ah,al
  41a0a9:	xchg   esp,eax
  41a0aa:	add    BYTE PTR [r8],al
	...
  41a0b5:	add    BYTE PTR [rax],al
  41a0b7:	add    dh,cl
  41a0b9:	xchg   esp,eax
  41a0ba:	add    BYTE PTR [r8],al
  41a0bd:	add    BYTE PTR [rax],al
  41a0bf:	add    cl,dl
  41a0c1:	xchg   esp,eax
  41a0c2:	add    BYTE PTR [r8],al
	...
  41a0cd:	add    BYTE PTR [rax],al
  41a0cf:	add    dh,dl
  41a0d1:	xchg   esp,eax
  41a0d2:	add    BYTE PTR [r8],al
  41a0d5:	add    BYTE PTR [rax],al
  41a0d7:	add    cl,bl
  41a0d9:	xchg   esp,eax
  41a0da:	add    BYTE PTR [r8],al
	...
  41a0e5:	add    BYTE PTR [rax],al
  41a0e7:	add    cl,ah
  41a0e9:	xchg   esp,eax
  41a0ea:	add    BYTE PTR [r8],al
  41a0ed:	add    BYTE PTR [rax],al
  41a0ef:	add    ah,ah
  41a0f1:	xchg   esp,eax
  41a0f2:	add    BYTE PTR [r8],al
	...
  41a0fd:	add    BYTE PTR [rax],al
  41a0ff:	add    dl,ch
  41a101:	xchg   esp,eax
  41a102:	add    BYTE PTR [r8],al
  41a105:	add    BYTE PTR [rax],al
  41a107:	add    ch,ch
  41a109:	xchg   esp,eax
  41a10a:	add    BYTE PTR [r8],al
	...
  41a115:	add    BYTE PTR [rax],al
  41a117:	add    ch,dh
  41a119:	xchg   esp,eax
  41a11a:	add    BYTE PTR [r8],al
  41a11d:	add    BYTE PTR [rax],al
  41a11f:	add    al,bh
  41a121:	xchg   esp,eax
  41a122:	add    BYTE PTR [r8],al
	...
  41a12d:	add    BYTE PTR [rax],al
  41a12f:	add    BYTE PTR [rax],cl
  41a131:	xchg   ebp,eax
  41a132:	add    BYTE PTR [r8],al
  41a135:	add    BYTE PTR [rax],al
  41a137:	add    BYTE PTR [rbx],cl
  41a139:	xchg   ebp,eax
  41a13a:	add    BYTE PTR [r8],al
	...
  41a145:	add    BYTE PTR [rax],al
  41a147:	add    BYTE PTR [rdi],dl
  41a149:	xchg   ebp,eax
  41a14a:	add    BYTE PTR [r8],al
  41a14d:	add    BYTE PTR [rax],al
  41a14f:	add    BYTE PTR [rdx],bl
  41a151:	xchg   ebp,eax
  41a152:	add    BYTE PTR [r8],al
  41a155:	add    BYTE PTR [rax],al
  41a157:	add    BYTE PTR [rcx],al
  41a159:	add    BYTE PTR [rax],al
  41a15b:	add    BYTE PTR [rax],al
  41a15d:	add    BYTE PTR [rax],al
  41a15f:	add    BYTE PTR [rip+0x4195],ah        # 0x41e2fa
  41a165:	add    BYTE PTR [rax],al
  41a167:	add    BYTE PTR [rax],ch
  41a169:	xchg   ebp,eax
  41a16a:	add    BYTE PTR [r8],al
	...
  41a175:	add    BYTE PTR [rax],al
  41a177:	add    BYTE PTR [rbx],dh
  41a179:	xchg   ebp,eax
  41a17a:	add    BYTE PTR [r8],al
  41a17d:	add    BYTE PTR [rax],al
  41a17f:	add    BYTE PTR [rsi],dh
  41a181:	xchg   ebp,eax
  41a182:	add    BYTE PTR [r8],al
	...
  41a18d:	add    BYTE PTR [rax],al
  41a18f:	add    BYTE PTR [rbx],bh
  41a191:	xchg   ebp,eax
  41a192:	add    BYTE PTR [r8],al
  41a195:	add    BYTE PTR [rax],al
  41a197:	add    BYTE PTR [rsi],bh
  41a199:	xchg   ebp,eax
  41a19a:	add    BYTE PTR [r8],al
  41a19d:	add    BYTE PTR [rax],al
  41a19f:	add    BYTE PTR [rcx],al
  41a1a1:	add    BYTE PTR [rax],al
  41a1a3:	add    BYTE PTR [rax],al
  41a1a5:	add    BYTE PTR [rax],al
  41a1a7:	add    BYTE PTR [rbp-0x6b],al
  41a1aa:	add    BYTE PTR [r8],al
  41a1ad:	add    BYTE PTR [rax],al
  41a1af:	add    BYTE PTR [rax-0x6b],cl
  41a1b2:	add    BYTE PTR [r8],al
  41a1b5:	add    BYTE PTR [rax],al
  41a1b7:	add    BYTE PTR [rcx],al
  41a1b9:	add    BYTE PTR [rax],al
  41a1bb:	add    BYTE PTR [rax],al
  41a1bd:	add    BYTE PTR [rax],al
  41a1bf:	add    BYTE PTR [rdx-0x6b],dl
  41a1c2:	add    BYTE PTR [r8],al
  41a1c5:	add    BYTE PTR [rax],al
  41a1c7:	add    BYTE PTR [rbp-0x6b],dl
  41a1ca:	add    BYTE PTR [r8],al
  41a1cd:	add    BYTE PTR [rax],al
  41a1cf:	add    BYTE PTR [rcx],al
  41a1d1:	add    BYTE PTR [rax],al
  41a1d3:	add    BYTE PTR [rax],al
  41a1d5:	add    BYTE PTR [rax],al
  41a1d7:	add    BYTE PTR [rdx-0x6b],dl
  41a1da:	add    BYTE PTR [r8],al
  41a1dd:	add    BYTE PTR [rax],al
  41a1df:	add    BYTE PTR [rcx-0x6b],bl
  41a1e2:	add    BYTE PTR [r8],al
  41a1e5:	add    BYTE PTR [rax],al
  41a1e7:	add    BYTE PTR [rcx],al
  41a1e9:	add    BYTE PTR [rax],al
  41a1eb:	add    BYTE PTR [rax],al
  41a1ed:	add    BYTE PTR [rax],al
  41a1ef:	add    BYTE PTR [rsi-0x6b],bl
  41a1f2:	add    BYTE PTR [r8],al
  41a1f5:	add    BYTE PTR [rax],al
  41a1f7:	add    BYTE PTR [rcx-0x6b],ah
  41a1fa:	add    BYTE PTR [r8],al
  41a1fd:	add    BYTE PTR [rax],al
  41a1ff:	add    BYTE PTR [rcx],al
  41a201:	add    BYTE PTR [rax],al
  41a203:	add    BYTE PTR [rax],al
  41a205:	add    BYTE PTR [rax],al
  41a207:	add    BYTE PTR [rsi-0x6b],ch
  41a20a:	add    BYTE PTR [r8],al
  41a20d:	add    BYTE PTR [rax],al
  41a20f:	add    BYTE PTR [rcx-0x6b],dh
  41a212:	add    BYTE PTR [r8],al
	...
  41a21d:	add    BYTE PTR [rax],al
  41a21f:	add    BYTE PTR [rsi-0x6b],bh
  41a222:	add    BYTE PTR [r8],al
  41a225:	add    BYTE PTR [rax],al
  41a227:	add    BYTE PTR [rcx+0x4195],al
	...
  41a235:	add    BYTE PTR [rax],al
  41a237:	add    BYTE PTR [rsi+0x4195],al
  41a23d:	add    BYTE PTR [rax],al
  41a23f:	add    BYTE PTR [rcx+0x4195],cl
	...
  41a24d:	add    BYTE PTR [rax],al
  41a24f:	add    BYTE PTR [rdi+0x4195],cl
  41a255:	add    BYTE PTR [rax],al
  41a257:	add    BYTE PTR [rdx+0x4195],dl
	...
  41a265:	add    BYTE PTR [rax],al
  41a267:	add    BYTE PTR [rdi+0x4195],cl
  41a26d:	add    BYTE PTR [rax],al
  41a26f:	add    BYTE PTR [rdx+0x4195],bl
	...
  41a27d:	add    BYTE PTR [rax],al
  41a27f:	add    BYTE PTR [rsi+0x4195],bl
  41a285:	add    BYTE PTR [rax],al
  41a287:	add    BYTE PTR [rcx+0x4195],ah
	...
  41a295:	add    BYTE PTR [rax],al
  41a297:	add    BYTE PTR [rdx+0x4195],ch
  41a29d:	add    BYTE PTR [rax],al
  41a29f:	add    BYTE PTR [rbp+0x4195],ch
  41a2a5:	add    BYTE PTR [rax],al
  41a2a7:	add    BYTE PTR [rcx],al
  41a2a9:	add    BYTE PTR [rax],al
  41a2ab:	add    BYTE PTR [rax],al
  41a2ad:	add    BYTE PTR [rax],al
  41a2af:	add    BYTE PTR [rbp+rdx*4+0x41],dh
  41a2b6:	add    BYTE PTR [rax],al
  41a2b8:	mov    bh,0x95
  41a2ba:	add    BYTE PTR [r8],al
	...
  41a2c5:	add    BYTE PTR [rax],al
  41a2c7:	add    bl,al
  41a2c9:	xchg   ebp,eax
  41a2ca:	add    BYTE PTR [r8],al
  41a2cd:	add    BYTE PTR [rax],al
  41a2cf:	add    dh,al
  41a2d1:	xchg   ebp,eax
  41a2d2:	add    BYTE PTR [r8],al
	...
  41a2dd:	add    BYTE PTR [rax],al
  41a2df:	add    bl,dl
  41a2e1:	xchg   ebp,eax
  41a2e2:	add    BYTE PTR [r8],al
  41a2e5:	add    BYTE PTR [rax],al
  41a2e7:	add    dh,dl
  41a2e9:	xchg   ebp,eax
  41a2ea:	add    BYTE PTR [r8],al
	...
  41a2f5:	add    BYTE PTR [rax],al
  41a2f7:	add    dl,ah
  41a2f9:	xchg   ebp,eax
  41a2fa:	add    BYTE PTR [r8],al
  41a2fd:	add    BYTE PTR [rax],al
  41a2ff:	add    ch,ah
  41a301:	xchg   ebp,eax
  41a302:	add    BYTE PTR [r8],al
  41a305:	add    BYTE PTR [rax],al
  41a307:	add    BYTE PTR [rcx],al
  41a309:	add    BYTE PTR [rax],al
  41a30b:	add    BYTE PTR [rax],al
  41a30d:	add    BYTE PTR [rax],al
  41a30f:	add    bl,ch
  41a311:	xchg   ebp,eax
  41a312:	add    BYTE PTR [r8],al
  41a315:	add    BYTE PTR [rax],al
  41a317:	add    dh,ch
  41a319:	xchg   ebp,eax
  41a31a:	add    BYTE PTR [r8],al
	...
  41a329:	xchg   esi,eax
  41a32a:	add    BYTE PTR [r8],al
  41a32d:	add    BYTE PTR [rax],al
  41a32f:	add    BYTE PTR [rbx],al
  41a331:	xchg   esi,eax
  41a332:	add    BYTE PTR [r8],al
  41a335:	add    BYTE PTR [rax],al
  41a337:	add    BYTE PTR [rcx],al
  41a339:	add    BYTE PTR [rax],al
  41a33b:	add    BYTE PTR [rax],al
  41a33d:	add    BYTE PTR [rax],al
  41a33f:	add    BYTE PTR [rdi],cl
  41a341:	xchg   esi,eax
  41a342:	add    BYTE PTR [r8],al
  41a345:	add    BYTE PTR [rax],al
  41a347:	add    BYTE PTR [rdx],dl
  41a349:	xchg   esi,eax
  41a34a:	add    BYTE PTR [r8],al
  41a34d:	add    BYTE PTR [rax],al
  41a34f:	add    BYTE PTR [rcx],al
  41a351:	add    BYTE PTR [rax],al
  41a353:	add    BYTE PTR [rax],al
  41a355:	add    BYTE PTR [rax],al
  41a357:	add    BYTE PTR [rcx],ah
  41a359:	xchg   esi,eax
  41a35a:	add    BYTE PTR [r8],al
  41a35d:	add    BYTE PTR [rax],al
  41a35f:	add    BYTE PTR [rsi+rdx*4],ah
  41a362:	add    BYTE PTR [r8],al
	...
  41a36d:	add    BYTE PTR [rax],al
  41a36f:	add    BYTE PTR [rsi+rdx*4],dh
  41a372:	add    BYTE PTR [r8],al
  41a375:	add    BYTE PTR [rax],al
  41a377:	add    BYTE PTR [rdi],dh
  41a379:	xchg   esi,eax
  41a37a:	add    BYTE PTR [r8],al
  41a37d:	add    BYTE PTR [rax],al
  41a37f:	add    BYTE PTR [rcx],al
  41a381:	add    BYTE PTR [rax],al
  41a383:	add    BYTE PTR [rax],al
  41a385:	add    BYTE PTR [rax],al
  41a387:	add    BYTE PTR [rbx-0x6a],al
  41a38a:	add    BYTE PTR [r8],al
  41a38d:	add    BYTE PTR [rax],al
  41a38f:	add    BYTE PTR [rsi-0x6a],al
  41a392:	add    BYTE PTR [r8],al
	...
  41a39d:	add    BYTE PTR [rax],al
  41a39f:	add    BYTE PTR [rsi+rdx*4+0x41],dl
  41a3a3:	add    BYTE PTR [rax],al
  41a3a5:	add    BYTE PTR [rax],al
  41a3a7:	add    BYTE PTR [rdi-0x6a],dl
  41a3aa:	add    BYTE PTR [r8],al
	...
  41a3b5:	add    BYTE PTR [rax],al
  41a3b7:	add    BYTE PTR [rdx-0x6a],ah
  41a3ba:	add    BYTE PTR [r8],al
  41a3bd:	add    BYTE PTR [rax],al
  41a3bf:	add    BYTE PTR [rbp-0x6a],ah
  41a3c2:	add    BYTE PTR [r8],al
	...
  41a3cd:	add    BYTE PTR [rax],al
  41a3cf:	add    BYTE PTR [rbx-0x6a],bh
  41a3d2:	add    BYTE PTR [r8],al
  41a3d5:	add    BYTE PTR [rax],al
  41a3d7:	add    BYTE PTR [rsi-0x6a],bh
  41a3da:	add    BYTE PTR [r8],al
	...
  41a3e5:	add    BYTE PTR [rax],al
  41a3e7:	add    BYTE PTR [rdi+0x4196],cl
  41a3ed:	add    BYTE PTR [rax],al
  41a3ef:	add    BYTE PTR [rdx+0x4196],dl
  41a3f5:	add    BYTE PTR [rax],al
  41a3f7:	add    BYTE PTR [rcx],al
  41a3f9:	add    BYTE PTR [rax],al
  41a3fb:	add    BYTE PTR [rax],al
  41a3fd:	add    BYTE PTR [rax],al
  41a3ff:	add    BYTE PTR [rbp+0x4196],bl
  41a405:	add    BYTE PTR [rax],al
  41a407:	add    BYTE PTR [rax+0x4196],ah
  41a40d:	add    BYTE PTR [rax],al
  41a40f:	add    BYTE PTR [rcx],al
  41a411:	add    BYTE PTR [rax],al
  41a413:	add    BYTE PTR [rax],al
  41a415:	add    BYTE PTR [rax],al
  41a417:	add    BYTE PTR [rbx+0x4196],ch
  41a41d:	add    BYTE PTR [rax],al
  41a41f:	add    BYTE PTR [rsi+0x4196],ch
  41a425:	add    BYTE PTR [rax],al
  41a427:	add    BYTE PTR [rcx],al
  41a429:	add    BYTE PTR [rax],al
  41a42b:	add    BYTE PTR [rax],al
  41a42d:	add    BYTE PTR [rax],al
  41a42f:	add    BYTE PTR [rbp+0x4196],dh
  41a435:	add    BYTE PTR [rax],al
  41a437:	add    BYTE PTR [rax+0x4196],bh
  41a43d:	add    BYTE PTR [rax],al
  41a43f:	add    BYTE PTR [rcx],al
  41a441:	add    BYTE PTR [rax],al
  41a443:	add    BYTE PTR [rax],al
  41a445:	add    BYTE PTR [rax],al
  41a447:	add    al,al
  41a449:	xchg   esi,eax
  41a44a:	add    BYTE PTR [r8],al
  41a44d:	add    BYTE PTR [rax],al
  41a44f:	add    bl,al
  41a451:	xchg   esi,eax
  41a452:	add    BYTE PTR [r8],al
  41a455:	add    BYTE PTR [rax],al
  41a457:	add    BYTE PTR [rcx],al
  41a459:	add    BYTE PTR [rax],al
  41a45b:	add    BYTE PTR [rax],al
  41a45d:	add    BYTE PTR [rax],al
  41a45f:	add    bl,bl
  41a461:	xchg   esi,eax
  41a462:	add    BYTE PTR [r8],al
  41a465:	add    BYTE PTR [rax],al
  41a467:	add    dh,bl
  41a469:	xchg   esi,eax
  41a46a:	add    BYTE PTR [r8],al
	...
  41a475:	add    BYTE PTR [rax],al
  41a477:	add    bl,bl
  41a479:	xchg   esi,eax
  41a47a:	add    BYTE PTR [r8],al
  41a47d:	add    BYTE PTR [rax],al
  41a47f:	add    bl,ch
  41a481:	xchg   esi,eax
  41a482:	add    BYTE PTR [r8],al
	...
  41a48d:	add    BYTE PTR [rax],al
  41a48f:	add    ah,dh
  41a491:	xchg   esi,eax
  41a492:	add    BYTE PTR [r8],al
  41a495:	add    BYTE PTR [rax],al
  41a497:	add    bh,dh
  41a499:	xchg   esi,eax
  41a49a:	add    BYTE PTR [r8],al
	...
  41a4a5:	add    BYTE PTR [rax],al
  41a4a7:	add    BYTE PTR [rcx],al
  41a4a9:	xchg   edi,eax
  41a4aa:	add    BYTE PTR [r8],al
  41a4ad:	add    BYTE PTR [rax],al
  41a4af:	add    BYTE PTR [rdi+rdx*4],al
  41a4b2:	add    BYTE PTR [r8],al
	...
  41a4bd:	add    BYTE PTR [rax],al
  41a4bf:	add    BYTE PTR [rdi+rdx*4],dl
  41a4c2:	add    BYTE PTR [r8],al
  41a4c5:	add    BYTE PTR [rax],al
  41a4c7:	add    BYTE PTR [rdi],dl
  41a4c9:	xchg   edi,eax
  41a4ca:	add    BYTE PTR [r8],al
	...
  41a4d5:	add    BYTE PTR [rax],al
  41a4d7:	add    BYTE PTR [rbx],ah
  41a4d9:	xchg   edi,eax
  41a4da:	add    BYTE PTR [r8],al
  41a4dd:	add    BYTE PTR [rax],al
  41a4df:	add    BYTE PTR [rsi],ah
  41a4e1:	xchg   edi,eax
  41a4e2:	add    BYTE PTR [r8],al
  41a4e5:	add    BYTE PTR [rax],al
  41a4e7:	add    BYTE PTR [rcx],al
  41a4e9:	add    BYTE PTR [rax],al
  41a4eb:	add    BYTE PTR [rax],al
  41a4ed:	add    BYTE PTR [rax],al
  41a4ef:	add    BYTE PTR [rdi],dh
  41a4f1:	xchg   edi,eax
  41a4f2:	add    BYTE PTR [r8],al
  41a4f5:	add    BYTE PTR [rax],al
  41a4f7:	add    BYTE PTR [rdx],bh
  41a4f9:	xchg   edi,eax
  41a4fa:	add    BYTE PTR [r8],al
  41a4fd:	add    BYTE PTR [rax],al
  41a4ff:	add    BYTE PTR [rcx],al
  41a501:	add    BYTE PTR [rax],al
  41a503:	add    BYTE PTR [rax],al
  41a505:	add    BYTE PTR [rax],al
  41a507:	add    BYTE PTR [rdx-0x69],al
  41a50a:	add    BYTE PTR [r8],al
  41a50d:	add    BYTE PTR [rax],al
  41a50f:	add    BYTE PTR [rbp-0x69],al
  41a512:	add    BYTE PTR [r8],al
	...
  41a51d:	add    BYTE PTR [rax],al
  41a51f:	add    BYTE PTR [rcx-0x69],cl
  41a522:	add    BYTE PTR [r8],al
  41a525:	add    BYTE PTR [rax],al
  41a527:	add    BYTE PTR [rdi+rdx*4+0x41],cl
	...
  41a537:	add    BYTE PTR [rdi+rdx*4+0x41],dl
  41a53b:	add    BYTE PTR [rax],al
  41a53d:	add    BYTE PTR [rax],al
  41a53f:	add    BYTE PTR [rdi-0x69],dl
  41a542:	add    BYTE PTR [r8],al
	...
  41a54d:	add    BYTE PTR [rax],al
  41a54f:	add    BYTE PTR [rcx-0x69],ah
  41a552:	add    BYTE PTR [r8],al
  41a555:	add    BYTE PTR [rax],al
  41a557:	add    BYTE PTR [rdi+rdx*4+0x41],ah
  41a55b:	add    BYTE PTR [rax],al
  41a55d:	add    BYTE PTR [rax],al
  41a55f:	add    BYTE PTR [rcx],al
  41a561:	add    BYTE PTR [rax],al
  41a563:	add    BYTE PTR [rax],al
  41a565:	add    BYTE PTR [rax],al
  41a567:	add    BYTE PTR [rdi+rdx*4+0x41],dh
  41a56b:	add    BYTE PTR [rax],al
  41a56d:	add    BYTE PTR [rax],al
  41a56f:	add    BYTE PTR [rdi-0x69],dh
  41a572:	add    BYTE PTR [r8],al
  41a575:	add    BYTE PTR [rax],al
  41a577:	add    BYTE PTR [rcx],al
  41a579:	add    BYTE PTR [rax],al
  41a57b:	add    BYTE PTR [rax],al
  41a57d:	add    BYTE PTR [rax],al
  41a57f:	add    BYTE PTR [rsi+0x4197],al
  41a585:	add    BYTE PTR [rax],al
  41a587:	add    BYTE PTR [rcx+0x4197],cl
	...
  41a595:	add    BYTE PTR [rax],al
  41a597:	add    BYTE PTR [rcx+0x4197],dl
  41a59d:	add    BYTE PTR [rax],al
  41a59f:	add    BYTE PTR [rdi+rdx*4+0x41],dl
  41a5a6:	add    BYTE PTR [rax],al
  41a5a8:	add    DWORD PTR [rax],eax
  41a5aa:	add    BYTE PTR [rax],al
  41a5ac:	add    BYTE PTR [rax],al
  41a5ae:	add    BYTE PTR [rax],al
  41a5b0:	pushf  
  41a5b1:	xchg   edi,eax
  41a5b2:	add    BYTE PTR [r8],al
  41a5b5:	add    BYTE PTR [rax],al
  41a5b7:	add    BYTE PTR [rdi+0x4197],bl
	...
  41a5c5:	add    BYTE PTR [rax],al
  41a5c7:	add    BYTE PTR [rcx+0x4197],dh
  41a5cd:	add    BYTE PTR [rax],al
  41a5cf:	add    BYTE PTR [rdi+rdx*4+0x41],dh
  41a5d6:	add    BYTE PTR [rax],al
  41a5d8:	add    DWORD PTR [rax],eax
  41a5da:	add    BYTE PTR [rax],al
  41a5dc:	add    BYTE PTR [rax],al
  41a5de:	add    BYTE PTR [rax],al
  41a5e0:	mov    ebp,0x4197
  41a5e5:	add    BYTE PTR [rax],al
  41a5e7:	add    al,al
  41a5e9:	xchg   edi,eax
  41a5ea:	add    BYTE PTR [r8],al
  41a5ed:	add    BYTE PTR [rax],al
  41a5ef:	add    BYTE PTR [rcx],al
  41a5f1:	add    BYTE PTR [rax],al
  41a5f3:	add    BYTE PTR [rax],al
  41a5f5:	add    BYTE PTR [rax],al
  41a5f7:	add    ch,cl
  41a5f9:	xchg   edi,eax
  41a5fa:	add    BYTE PTR [r8],al
  41a5fd:	add    BYTE PTR [rax],al
  41a5ff:	add    al,dl
  41a601:	xchg   edi,eax
  41a602:	add    BYTE PTR [r8],al
  41a605:	add    BYTE PTR [rax],al
  41a607:	add    BYTE PTR [rcx],al
  41a609:	add    BYTE PTR [rax],al
  41a60b:	add    BYTE PTR [rax],al
  41a60d:	add    BYTE PTR [rax],al
  41a60f:	add    dl,bl
  41a611:	xchg   edi,eax
  41a612:	add    BYTE PTR [r8],al
  41a615:	add    BYTE PTR [rax],al
  41a617:	add    ch,bl
  41a619:	xchg   edi,eax
  41a61a:	add    BYTE PTR [r8],al
  41a61d:	add    BYTE PTR [rax],al
  41a61f:	add    BYTE PTR [rcx],al
  41a621:	add    BYTE PTR [rax],al
  41a623:	add    BYTE PTR [rax],al
  41a625:	add    BYTE PTR [rax],al
  41a627:	add    bh,ah
  41a629:	xchg   edi,eax
  41a62a:	add    BYTE PTR [r8],al
  41a62d:	add    BYTE PTR [rax],al
  41a62f:	add    dl,ch
  41a631:	xchg   edi,eax
  41a632:	add    BYTE PTR [r8],al
	...
  41a63d:	add    BYTE PTR [rax],al
  41a63f:	add    bl,dh
  41a641:	xchg   edi,eax
  41a642:	add    BYTE PTR [r8],al
  41a645:	add    BYTE PTR [rax],al
  41a647:	add    dh,dh
  41a649:	xchg   edi,eax
  41a64a:	add    BYTE PTR [r8],al
  41a64d:	add    BYTE PTR [rax],al
  41a64f:	add    BYTE PTR [rcx],al
  41a651:	add    BYTE PTR [rax],al
  41a653:	add    BYTE PTR [rax],al
  41a655:	add    BYTE PTR [rax],al
  41a657:	add    ah,bh
  41a659:	xchg   edi,eax
  41a65a:	add    BYTE PTR [r8],al
  41a65d:	add    BYTE PTR [rax],al
  41a65f:	add    bh,bh
  41a661:	xchg   edi,eax
  41a662:	add    BYTE PTR [r8],al
  41a665:	add    BYTE PTR [rax],al
  41a667:	add    BYTE PTR [rcx],al
  41a669:	add    BYTE PTR [rax],al
  41a66b:	add    BYTE PTR [rax],al
  41a66d:	add    BYTE PTR [rax],al
  41a66f:	add    BYTE PTR [rbx],cl
  41a671:	cwde   
  41a672:	add    BYTE PTR [r8],al
  41a675:	add    BYTE PTR [rax],al
  41a677:	add    BYTE PTR [rsi],cl
  41a679:	cwde   
  41a67a:	add    BYTE PTR [r8],al
  41a67d:	add    BYTE PTR [rax],al
  41a67f:	add    BYTE PTR [rcx],al
  41a681:	add    BYTE PTR [rax],al
  41a683:	add    BYTE PTR [rax],al
  41a685:	add    BYTE PTR [rax],al
  41a687:	add    BYTE PTR [rsi],dl
  41a689:	cwde   
  41a68a:	add    BYTE PTR [r8],al
  41a68d:	add    BYTE PTR [rax],al
  41a68f:	add    BYTE PTR [rcx],bl
  41a691:	cwde   
  41a692:	add    BYTE PTR [r8],al
  41a695:	add    BYTE PTR [rax],al
  41a697:	add    BYTE PTR [rcx],al
  41a699:	add    BYTE PTR [rax],al
  41a69b:	add    BYTE PTR [rax],al
  41a69d:	add    BYTE PTR [rax],al
  41a69f:	add    BYTE PTR [rax+rbx*4],ah
  41a6a2:	add    BYTE PTR [r8],al
  41a6a5:	add    BYTE PTR [rax],al
  41a6a7:	add    BYTE PTR [rdi],ah
  41a6a9:	cwde   
  41a6aa:	add    BYTE PTR [r8],al
  41a6ad:	add    BYTE PTR [rax],al
  41a6af:	add    BYTE PTR [rcx],al
  41a6b1:	add    BYTE PTR [rax],al
  41a6b3:	add    BYTE PTR [rax],al
  41a6b5:	add    BYTE PTR [rax],al
  41a6b7:	add    BYTE PTR [rcx],dh
  41a6b9:	cwde   
  41a6ba:	add    BYTE PTR [r8],al
  41a6bd:	add    BYTE PTR [rax],al
  41a6bf:	add    BYTE PTR [rax+rbx*4],dh
  41a6c2:	add    BYTE PTR [r8],al
	...
  41a6cd:	add    BYTE PTR [rax],al
  41a6cf:	add    BYTE PTR [rax+rbx*4],bh
  41a6d2:	add    BYTE PTR [r8],al
  41a6d5:	add    BYTE PTR [rax],al
  41a6d7:	add    BYTE PTR [rdi],bh
  41a6d9:	cwde   
  41a6da:	add    BYTE PTR [r8],al
	...
  41a6e5:	add    BYTE PTR [rax],al
  41a6e7:	add    BYTE PTR [rax-0x68],cl
  41a6ea:	add    BYTE PTR [r8],al
  41a6ed:	add    BYTE PTR [rax],al
  41a6ef:	add    BYTE PTR [rbx-0x68],cl
  41a6f2:	add    BYTE PTR [r8],al
	...
  41a6fd:	add    BYTE PTR [rax],al
  41a6ff:	add    BYTE PTR [rbx-0x68],dl
  41a702:	add    BYTE PTR [r8],al
  41a705:	add    BYTE PTR [rax],al
  41a707:	add    BYTE PTR [rsi-0x68],dl
  41a70a:	add    BYTE PTR [r8],al
	...
  41a715:	add    BYTE PTR [rax],al
  41a717:	add    BYTE PTR [rcx-0x68],ah
  41a71a:	add    BYTE PTR [r8],al
  41a71d:	add    BYTE PTR [rax],al
  41a71f:	add    BYTE PTR [rax+rbx*4+0x41],ah
  41a723:	add    BYTE PTR [rax],al
  41a725:	add    BYTE PTR [rax],al
  41a727:	add    BYTE PTR [rcx],al
  41a729:	add    BYTE PTR [rax],al
  41a72b:	add    BYTE PTR [rax],al
  41a72d:	add    BYTE PTR [rax],al
  41a72f:	add    BYTE PTR [rax-0x68],dh
  41a732:	add    BYTE PTR [r8],al
  41a735:	add    BYTE PTR [rax],al
  41a737:	add    BYTE PTR [rbx-0x68],dh
  41a73a:	add    BYTE PTR [r8],al
	...
  41a745:	add    BYTE PTR [rax],al
  41a747:	add    BYTE PTR [rsi-0x68],bh
  41a74a:	add    BYTE PTR [r8],al
  41a74d:	add    BYTE PTR [rax],al
  41a74f:	add    BYTE PTR [rcx+0x4198],al
  41a755:	add    BYTE PTR [rax],al
  41a757:	add    BYTE PTR [rcx],al
  41a759:	add    BYTE PTR [rax],al
  41a75b:	add    BYTE PTR [rax],al
  41a75d:	add    BYTE PTR [rax],al
  41a75f:	add    BYTE PTR [rsi-0x68],bh
  41a762:	add    BYTE PTR [r8],al
  41a765:	add    BYTE PTR [rax],al
  41a767:	add    BYTE PTR [rdi+0x4198],dl
  41a76d:	add    BYTE PTR [rax],al
  41a76f:	add    BYTE PTR [rcx],al
  41a771:	add    BYTE PTR [rax],al
  41a773:	add    BYTE PTR [rax],al
  41a775:	add    BYTE PTR [rax],al
  41a777:	add    BYTE PTR [rdx+0x4198],ch
  41a77d:	add    BYTE PTR [rax],al
  41a77f:	add    BYTE PTR [rbp+0x4198],ch
  41a785:	add    BYTE PTR [rax],al
  41a787:	add    BYTE PTR [rcx],al
  41a789:	add    BYTE PTR [rax],al
  41a78b:	add    BYTE PTR [rax],al
  41a78d:	add    BYTE PTR [rax],al
  41a78f:	add    BYTE PTR [rdx+0x4198],bh
  41a795:	add    BYTE PTR [rax],al
  41a797:	add    BYTE PTR [rbp+0x4198],bh
  41a79d:	add    BYTE PTR [rax],al
  41a79f:	add    BYTE PTR [rcx],al
  41a7a1:	add    BYTE PTR [rax],al
  41a7a3:	add    BYTE PTR [rax],al
  41a7a5:	add    BYTE PTR [rax],al
  41a7a7:	add    bl,cl
  41a7a9:	cwde   
  41a7aa:	add    BYTE PTR [r8],al
  41a7ad:	add    BYTE PTR [rax],al
  41a7af:	add    dh,cl
  41a7b1:	cwde   
  41a7b2:	add    BYTE PTR [r8],al
  41a7b5:	add    BYTE PTR [rax],al
  41a7b7:	add    BYTE PTR [rcx],al
  41a7b9:	add    BYTE PTR [rax],al
  41a7bb:	add    BYTE PTR [rax],al
  41a7bd:	add    BYTE PTR [rax],al
  41a7bf:	add    al,ah
  41a7c1:	cwde   
  41a7c2:	add    BYTE PTR [r8],al
  41a7c5:	add    BYTE PTR [rax],al
  41a7c7:	add    bl,ah
  41a7c9:	cwde   
  41a7ca:	add    BYTE PTR [r8],al
	...
  41a7d5:	add    BYTE PTR [rax],al
  41a7d7:	add    bl,dh
  41a7d9:	cwde   
  41a7da:	add    BYTE PTR [r8],al
  41a7dd:	add    BYTE PTR [rax],al
  41a7df:	add    dh,dh
  41a7e1:	cwde   
  41a7e2:	add    BYTE PTR [r8],al
  41a7e5:	add    BYTE PTR [rax],al
  41a7e7:	add    BYTE PTR [rcx],al
  41a7e9:	add    BYTE PTR [rax],al
  41a7eb:	add    BYTE PTR [rax],al
  41a7ed:	add    BYTE PTR [rax],al
  41a7ef:	add    BYTE PTR [rcx],al
  41a7f1:	cdq    
  41a7f2:	add    BYTE PTR [r8],al
  41a7f5:	add    BYTE PTR [rax],al
  41a7f7:	add    BYTE PTR [rbx],al
  41a7f9:	cdq    
  41a7fa:	add    BYTE PTR [r8],al
	...
  41a805:	add    BYTE PTR [rax],al
  41a807:	add    BYTE PTR [rbx],cl
  41a809:	cdq    
  41a80a:	add    BYTE PTR [r8],al
  41a80d:	add    BYTE PTR [rax],al
  41a80f:	add    BYTE PTR [rsi],cl
  41a811:	cdq    
  41a812:	add    BYTE PTR [r8],al
	...
  41a81d:	add    BYTE PTR [rax],al
  41a81f:	add    BYTE PTR [rsi],dl
  41a821:	cdq    
  41a822:	add    BYTE PTR [r8],al
  41a825:	add    BYTE PTR [rax],al
  41a827:	add    BYTE PTR [rcx],bl
  41a829:	cdq    
  41a82a:	add    BYTE PTR [r8],al
	...
  41a835:	add    BYTE PTR [rax],al
  41a837:	add    BYTE PTR [rdi],bl
  41a839:	cdq    
  41a83a:	add    BYTE PTR [r8],al
  41a83d:	add    BYTE PTR [rax],al
  41a83f:	add    BYTE PTR [rdx],ah
  41a841:	cdq    
  41a842:	add    BYTE PTR [r8],al
	...
  41a84d:	add    BYTE PTR [rax],al
  41a84f:	add    BYTE PTR [rax],bh
  41a851:	cdq    
  41a852:	add    BYTE PTR [r8],al
  41a855:	add    BYTE PTR [rax],al
  41a857:	add    BYTE PTR [rdx],bh
  41a859:	cdq    
  41a85a:	add    BYTE PTR [r8],al
	...
  41a865:	add    BYTE PTR [rax],al
  41a867:	add    BYTE PTR [rax-0x67],al
  41a86a:	add    BYTE PTR [r8],al
  41a86d:	add    BYTE PTR [rax],al
  41a86f:	add    BYTE PTR [rbx-0x67],al
  41a872:	add    BYTE PTR [r8],al
	...
  41a87d:	add    BYTE PTR [rax],al
  41a87f:	add    BYTE PTR [rbx-0x67],cl
  41a882:	add    BYTE PTR [r8],al
  41a885:	add    BYTE PTR [rax],al
  41a887:	add    BYTE PTR [rsi-0x67],cl
  41a88a:	add    BYTE PTR [r8],al
	...
  41a895:	add    BYTE PTR [rax],al
  41a897:	add    BYTE PTR [rsi-0x67],dl
  41a89a:	add    BYTE PTR [r8],al
  41a89d:	add    BYTE PTR [rax],al
  41a89f:	add    BYTE PTR [rcx-0x67],bl
  41a8a2:	add    BYTE PTR [r8],al
	...
  41a8ad:	add    BYTE PTR [rax],al
  41a8af:	add    BYTE PTR [rcx-0x67],ah
  41a8b2:	add    BYTE PTR [r8],al
  41a8b5:	add    BYTE PTR [rax],al
  41a8b7:	add    BYTE PTR [rcx+rbx*4+0x41],ah
	...
  41a8c7:	add    BYTE PTR [rcx+rbx*4+0x41],ch
  41a8cb:	add    BYTE PTR [rax],al
  41a8cd:	add    BYTE PTR [rax],al
  41a8cf:	add    BYTE PTR [rsi-0x67],ch
  41a8d2:	add    BYTE PTR [r8],al
	...
  41a8dd:	add    BYTE PTR [rax],al
  41a8df:	add    BYTE PTR [rcx+rbx*4+0x41],dh
  41a8e3:	add    BYTE PTR [rax],al
  41a8e5:	add    BYTE PTR [rax],al
  41a8e7:	add    BYTE PTR [rsi-0x67],dh
  41a8ea:	add    BYTE PTR [r8],al
	...
  41a8f5:	add    BYTE PTR [rax],al
  41a8f7:	add    BYTE PTR [rcx+rbx*4+0x41],bh
  41a8fb:	add    BYTE PTR [rax],al
  41a8fd:	add    BYTE PTR [rax],al
  41a8ff:	add    BYTE PTR [rsi-0x67],bh
  41a902:	add    BYTE PTR [r8],al
	...
  41a90d:	add    BYTE PTR [rax],al
  41a90f:	add    BYTE PTR [rbx+0x4199],al
  41a915:	add    BYTE PTR [rax],al
  41a917:	add    BYTE PTR [rbp+0x4199],al
	...
  41a925:	add    BYTE PTR [rax],al
  41a927:	add    BYTE PTR [rdx+0x4199],cl
  41a92d:	add    BYTE PTR [rax],al
  41a92f:	add    BYTE PTR [rcx+rbx*4+0x41],cl
	...
  41a93e:	add    BYTE PTR [rax],al
  41a940:	xchg   ebx,eax
  41a941:	cdq    
  41a942:	add    BYTE PTR [r8],al
  41a945:	add    BYTE PTR [rax],al
  41a947:	add    BYTE PTR [rbp+0x4199],dl
  41a94d:	add    BYTE PTR [rax],al
  41a94f:	add    BYTE PTR [rcx],al
  41a951:	add    BYTE PTR [rax],al
  41a953:	add    BYTE PTR [rax],al
  41a955:	add    BYTE PTR [rax],al
  41a957:	add    BYTE PTR [rax+0x4199],ah
  41a95d:	add    BYTE PTR [rax],al
  41a95f:	add    BYTE PTR [rdx+0x4199],ah
  41a965:	add    BYTE PTR [rax],al
  41a967:	add    BYTE PTR [rcx],al
  41a969:	add    BYTE PTR [rax],al
  41a96b:	add    BYTE PTR [rax],al
  41a96d:	add    BYTE PTR [rax],al
  41a96f:	add    BYTE PTR [rcx+0x4199],ch
  41a975:	add    BYTE PTR [rax],al
  41a977:	add    BYTE PTR [rbx+0x4199],ch
	...
  41a985:	add    BYTE PTR [rax],al
  41a987:	add    BYTE PTR [rbp+0x4199],dh
  41a98d:	add    BYTE PTR [rax],al
  41a98f:	add    BYTE PTR [rdi+0x4199],dh
  41a995:	add    BYTE PTR [rax],al
  41a997:	add    BYTE PTR [rcx],al
  41a999:	add    BYTE PTR [rax],al
  41a99b:	add    BYTE PTR [rax],al
  41a99d:	add    BYTE PTR [rax],al
  41a99f:	add    dl,al
  41a9a1:	cdq    
  41a9a2:	add    BYTE PTR [r8],al
  41a9a5:	add    BYTE PTR [rax],al
  41a9a7:	add    ah,al
  41a9a9:	cdq    
  41a9aa:	add    BYTE PTR [r8],al
  41a9ad:	add    BYTE PTR [rax],al
  41a9af:	add    BYTE PTR [rcx],al
  41a9b1:	add    BYTE PTR [rax],al
  41a9b3:	add    BYTE PTR [rax],al
  41a9b5:	add    BYTE PTR [rax],al
  41a9b7:	add    al,dl
  41a9b9:	cdq    
  41a9ba:	add    BYTE PTR [r8],al
  41a9bd:	add    BYTE PTR [rax],al
  41a9bf:	add    dl,dl
  41a9c1:	cdq    
  41a9c2:	add    BYTE PTR [r8],al
  41a9c5:	add    BYTE PTR [rax],al
  41a9c7:	add    BYTE PTR [rcx],al
  41a9c9:	add    BYTE PTR [rax],al
  41a9cb:	add    BYTE PTR [rax],al
  41a9cd:	add    BYTE PTR [rax],al
  41a9cf:	add    bh,dl
  41a9d1:	cdq    
  41a9d2:	add    BYTE PTR [r8],al
  41a9d5:	add    BYTE PTR [rax],al
  41a9d7:	add    dl,bl
  41a9d9:	cdq    
  41a9da:	add    BYTE PTR [r8],al
  41a9dd:	add    BYTE PTR [rax],al
  41a9df:	add    BYTE PTR [rcx],al
  41a9e1:	add    BYTE PTR [rax],al
  41a9e3:	add    BYTE PTR [rax],al
  41a9e5:	add    BYTE PTR [rax],al
  41a9e7:	add    bl,ah
  41a9e9:	cdq    
  41a9ea:	add    BYTE PTR [r8],al
  41a9ed:	add    BYTE PTR [rax],al
  41a9ef:	add    dh,ah
  41a9f1:	cdq    
  41a9f2:	add    BYTE PTR [r8],al
  41a9f5:	add    BYTE PTR [rax],al
  41a9f7:	add    BYTE PTR [rcx],al
  41a9f9:	add    BYTE PTR [rax],al
  41a9fb:	add    BYTE PTR [rax],al
  41a9fd:	add    BYTE PTR [rax],al
  41a9ff:	add    cl,dh
  41aa01:	cdq    
  41aa02:	add    BYTE PTR [r8],al
  41aa05:	add    BYTE PTR [rax],al
  41aa07:	add    ah,dh
  41aa09:	cdq    
  41aa0a:	add    BYTE PTR [r8],al
  41aa0d:	add    BYTE PTR [rax],al
  41aa0f:	add    BYTE PTR [rcx],al
	...
  41aa19:	(bad)  
  41aa1a:	add    BYTE PTR [r8],al
  41aa1d:	add    BYTE PTR [rax],al
  41aa1f:	add    BYTE PTR [rbx],al
  41aa21:	(bad)  
  41aa22:	add    BYTE PTR [r8],al
  41aa25:	add    BYTE PTR [rax],al
  41aa27:	add    BYTE PTR [rcx],al
  41aa29:	add    BYTE PTR [rax],al
  41aa2b:	add    BYTE PTR [rax],al
  41aa2d:	add    BYTE PTR [rax],al
  41aa2f:	add    BYTE PTR [rdx],dl
  41aa31:	(bad)  
  41aa32:	add    BYTE PTR [r8],al
  41aa35:	add    BYTE PTR [rax],al
  41aa37:	add    BYTE PTR [rdx+rbx*4],dl
  41aa3a:	add    BYTE PTR [r8],al
  41aa3d:	add    BYTE PTR [rax],al
  41aa3f:	add    BYTE PTR [rcx],al
  41aa41:	add    BYTE PTR [rax],al
  41aa43:	add    BYTE PTR [rax],al
  41aa45:	add    BYTE PTR [rax],al
  41aa47:	add    BYTE PTR [rax],ah
  41aa49:	(bad)  
  41aa4a:	add    BYTE PTR [r8],al
  41aa4d:	add    BYTE PTR [rax],al
  41aa4f:	add    BYTE PTR [rdx],ah
  41aa51:	(bad)  
  41aa52:	add    BYTE PTR [r8],al
  41aa55:	add    BYTE PTR [rax],al
  41aa57:	add    BYTE PTR [rcx],al
  41aa59:	add    BYTE PTR [rax],al
  41aa5b:	add    BYTE PTR [rax],al
  41aa5d:	add    BYTE PTR [rax],al
  41aa5f:	add    BYTE PTR [rdx],ch
  41aa61:	(bad)  
  41aa62:	add    BYTE PTR [r8],al
  41aa65:	add    BYTE PTR [rax],al
  41aa67:	add    BYTE PTR [rdx+rbx*4],ch
  41aa6a:	add    BYTE PTR [r8],al
  41aa6d:	add    BYTE PTR [rax],al
  41aa6f:	add    BYTE PTR [rcx],al
  41aa71:	add    BYTE PTR [rax],al
  41aa73:	add    BYTE PTR [rax],al
  41aa75:	add    BYTE PTR [rax],al
  41aa77:	add    BYTE PTR [rcx],dh
  41aa79:	(bad)  
  41aa7a:	add    BYTE PTR [r8],al
  41aa7d:	add    BYTE PTR [rax],al
  41aa7f:	add    BYTE PTR [rdx+rbx*4],dh
  41aa82:	add    BYTE PTR [r8],al
  41aa85:	add    BYTE PTR [rax],al
  41aa87:	add    BYTE PTR [rcx],al
  41aa89:	add    BYTE PTR [rax],al
  41aa8b:	add    BYTE PTR [rax],al
  41aa8d:	add    BYTE PTR [rax],al
  41aa8f:	add    BYTE PTR [rbx],bh
  41aa91:	(bad)  
  41aa92:	add    BYTE PTR [r8],al
  41aa95:	add    BYTE PTR [rax],al
  41aa97:	add    BYTE PTR [rsi],bh
  41aa99:	(bad)  
  41aa9a:	add    BYTE PTR [r8],al
  41aa9d:	add    BYTE PTR [rax],al
  41aa9f:	add    BYTE PTR [rcx],al
  41aaa1:	add    BYTE PTR [rax],al
  41aaa3:	add    BYTE PTR [rax],al
  41aaa5:	add    BYTE PTR [rax],al
  41aaa7:	add    BYTE PTR [rax-0x66],cl
  41aaaa:	add    BYTE PTR [r8],al
  41aaad:	add    BYTE PTR [rax],al
  41aaaf:	add    BYTE PTR [rbx-0x66],cl
  41aab2:	add    BYTE PTR [r8],al
  41aab5:	add    BYTE PTR [rax],al
  41aab7:	add    BYTE PTR [rcx],al
  41aab9:	add    BYTE PTR [rax],al
  41aabb:	add    BYTE PTR [rax],al
  41aabd:	add    BYTE PTR [rax],al
  41aabf:	add    BYTE PTR [rdi-0x66],cl
  41aac2:	add    BYTE PTR [r8],al
  41aac5:	add    BYTE PTR [rax],al
  41aac7:	add    BYTE PTR [rdx-0x66],dl
  41aaca:	add    BYTE PTR [r8],al
  41aacd:	add    BYTE PTR [rax],al
  41aacf:	add    BYTE PTR [rcx],al
  41aad1:	add    BYTE PTR [rax],al
  41aad3:	add    BYTE PTR [rax],al
  41aad5:	add    BYTE PTR [rax],al
  41aad7:	add    BYTE PTR [rbx-0x66],bl
  41aada:	add    BYTE PTR [r8],al
  41aadd:	add    BYTE PTR [rax],al
  41aadf:	add    BYTE PTR [rsi-0x66],bl
  41aae2:	add    BYTE PTR [r8],al
  41aae5:	add    BYTE PTR [rax],al
  41aae7:	add    BYTE PTR [rcx],al
  41aae9:	add    BYTE PTR [rax],al
  41aaeb:	add    BYTE PTR [rax],al
  41aaed:	add    BYTE PTR [rax],al
  41aaef:	add    BYTE PTR [rbx-0x66],ah
  41aaf2:	add    BYTE PTR [r8],al
  41aaf5:	add    BYTE PTR [rax],al
  41aaf7:	add    BYTE PTR [rsi-0x66],ah
  41aafa:	add    BYTE PTR [r8],al
  41aafd:	add    BYTE PTR [rax],al
  41aaff:	add    BYTE PTR [rcx],al
  41ab01:	add    BYTE PTR [rax],al
  41ab03:	add    BYTE PTR [rax],al
  41ab05:	add    BYTE PTR [rax],al
  41ab07:	add    BYTE PTR [rbp-0x66],ch
  41ab0a:	add    BYTE PTR [r8],al
  41ab0d:	add    BYTE PTR [rax],al
  41ab0f:	add    BYTE PTR [rax-0x66],dh
  41ab12:	add    BYTE PTR [r8],al
  41ab15:	add    BYTE PTR [rax],al
  41ab17:	add    BYTE PTR [rcx],al
  41ab19:	add    BYTE PTR [rax],al
  41ab1b:	add    BYTE PTR [rax],al
  41ab1d:	add    BYTE PTR [rax],al
  41ab1f:	add    BYTE PTR [rdi-0x66],dh
  41ab22:	add    BYTE PTR [r8],al
  41ab25:	add    BYTE PTR [rax],al
  41ab27:	add    BYTE PTR [rdx-0x66],bh
  41ab2a:	add    BYTE PTR [r8],al
  41ab2d:	add    BYTE PTR [rax],al
  41ab2f:	add    BYTE PTR [rcx],al
  41ab31:	add    BYTE PTR [rax],al
  41ab33:	add    BYTE PTR [rax],al
  41ab35:	add    BYTE PTR [rax],al
  41ab37:	add    BYTE PTR [rcx+0x419a],al
  41ab3d:	add    BYTE PTR [rax],al
  41ab3f:	add    BYTE PTR [rdx+rbx*4+0x41],al
  41ab46:	add    BYTE PTR [rax],al
  41ab48:	add    DWORD PTR [rax],eax
  41ab4a:	add    BYTE PTR [rax],al
  41ab4c:	add    BYTE PTR [rax],al
  41ab4e:	add    BYTE PTR [rax],al
  41ab50:	(bad)  
  41ab51:	(bad)  
  41ab52:	add    BYTE PTR [r8],al
  41ab55:	add    BYTE PTR [rax],al
  41ab57:	add    BYTE PTR [rdx+0x419a],dl
  41ab5d:	add    BYTE PTR [rax],al
  41ab5f:	add    BYTE PTR [rcx],al
  41ab61:	add    BYTE PTR [rax],al
  41ab63:	add    BYTE PTR [rax],al
  41ab65:	add    BYTE PTR [rax],al
  41ab67:	add    BYTE PTR [rdx+0x419a],bl
  41ab6d:	add    BYTE PTR [rax],al
  41ab6f:	add    BYTE PTR [rbp+0x419a],bl
  41ab75:	add    BYTE PTR [rax],al
  41ab77:	add    BYTE PTR [rcx],al
  41ab79:	add    BYTE PTR [rax],al
  41ab7b:	add    BYTE PTR [rax],al
  41ab7d:	add    BYTE PTR [rax],al
  41ab7f:	add    BYTE PTR [rbp+0x419a],ah
  41ab85:	add    BYTE PTR [rax],al
  41ab87:	add    BYTE PTR [rax+0x419a],ch
  41ab8d:	add    BYTE PTR [rax],al
  41ab8f:	add    BYTE PTR [rcx],al
  41ab91:	add    BYTE PTR [rax],al
  41ab93:	add    BYTE PTR [rax],al
  41ab95:	add    BYTE PTR [rax],al
  41ab97:	add    BYTE PTR [rdx+rbx*4+0x41],dh
  41ab9e:	add    BYTE PTR [rax],al
  41aba0:	mov    bh,0x9a
  41aba2:	add    BYTE PTR [r8],al
  41aba5:	add    BYTE PTR [rax],al
  41aba7:	add    BYTE PTR [rcx],al
  41aba9:	add    BYTE PTR [rax],al
  41abab:	add    BYTE PTR [rax],al
  41abad:	add    BYTE PTR [rax],al
  41abaf:	add    bl,al
  41abb1:	(bad)  
  41abb2:	add    BYTE PTR [r8],al
  41abb5:	add    BYTE PTR [rax],al
  41abb7:	add    dh,al
  41abb9:	(bad)  
  41abba:	add    BYTE PTR [r8],al
	...
  41abc5:	add    BYTE PTR [rax],al
  41abc7:	add    dh,dl
  41abc9:	(bad)  
  41abca:	add    BYTE PTR [r8],al
  41abcd:	add    BYTE PTR [rax],al
  41abcf:	add    cl,bl
  41abd1:	(bad)  
  41abd2:	add    BYTE PTR [r8],al
  41abd5:	add    BYTE PTR [rax],al
  41abd7:	add    BYTE PTR [rcx],al
  41abd9:	add    BYTE PTR [rax],al
  41abdb:	add    BYTE PTR [rax],al
  41abdd:	add    BYTE PTR [rax],al
  41abdf:	add    bh,ah
  41abe1:	(bad)  
  41abe2:	add    BYTE PTR [r8],al
  41abe5:	add    BYTE PTR [rax],al
  41abe7:	add    dl,ch
  41abe9:	(bad)  
  41abea:	add    BYTE PTR [r8],al
  41abed:	add    BYTE PTR [rax],al
  41abef:	add    BYTE PTR [rcx],al
  41abf1:	add    BYTE PTR [rax],al
  41abf3:	add    BYTE PTR [rax],al
  41abf5:	add    BYTE PTR [rax],al
  41abf7:	add    bh,dh
  41abf9:	(bad)  
  41abfa:	add    BYTE PTR [r8],al
  41abfd:	add    BYTE PTR [rax],al
  41abff:	add    dl,bh
  41ac01:	(bad)  
  41ac02:	add    BYTE PTR [r8],al
	...
  41ac0d:	add    BYTE PTR [rax],al
  41ac0f:	add    BYTE PTR [rsi],al
  41ac11:	fwait
  41ac12:	add    BYTE PTR [r8],al
  41ac15:	add    BYTE PTR [rax],al
  41ac17:	add    BYTE PTR [rcx],cl
  41ac19:	fwait
  41ac1a:	add    BYTE PTR [r8],al
	...
  41ac25:	add    BYTE PTR [rax],al
  41ac27:	add    BYTE PTR [rip+0x419b],dl        # 0x41edc8
  41ac2d:	add    BYTE PTR [rax],al
  41ac2f:	add    BYTE PTR [rax],bl
  41ac31:	fwait
  41ac32:	add    BYTE PTR [r8],al
	...
  41ac3d:	add    BYTE PTR [rax],al
  41ac3f:	add    BYTE PTR [rsi],ah
  41ac41:	fwait
  41ac42:	add    BYTE PTR [r8],al
  41ac45:	add    BYTE PTR [rax],al
  41ac47:	add    BYTE PTR [rcx],ch
  41ac49:	fwait
  41ac4a:	add    BYTE PTR [r8],al
	...
  41ac55:	add    BYTE PTR [rax],al
  41ac57:	add    BYTE PTR [rsi],dh
  41ac59:	fwait
  41ac5a:	add    BYTE PTR [r8],al
  41ac5d:	add    BYTE PTR [rax],al
  41ac5f:	add    BYTE PTR [rcx],bh
  41ac61:	fwait
  41ac62:	add    BYTE PTR [r8],al
  41ac65:	add    BYTE PTR [rax],al
  41ac67:	add    BYTE PTR [rcx],al
  41ac69:	add    BYTE PTR [rax],al
  41ac6b:	add    BYTE PTR [rax],al
  41ac6d:	add    BYTE PTR [rax],al
  41ac6f:	add    BYTE PTR [rdi-0x65],al
  41ac72:	add    BYTE PTR [r8],al
  41ac75:	add    BYTE PTR [rax],al
  41ac77:	add    BYTE PTR [rdx-0x65],cl
  41ac7a:	add    BYTE PTR [r8],al
  41ac7d:	add    BYTE PTR [rax],al
  41ac7f:	add    BYTE PTR [rcx],al
  41ac81:	add    BYTE PTR [rax],al
  41ac83:	add    BYTE PTR [rax],al
  41ac85:	add    BYTE PTR [rax],al
  41ac87:	add    BYTE PTR [rbx+rbx*4+0x41],bl
  41ac8b:	add    BYTE PTR [rax],al
  41ac8d:	add    BYTE PTR [rax],al
  41ac8f:	add    BYTE PTR [rdi-0x65],bl
  41ac92:	add    BYTE PTR [r8],al
  41ac95:	add    BYTE PTR [rax],al
  41ac97:	add    BYTE PTR [rcx],al
  41ac99:	add    BYTE PTR [rax],al
  41ac9b:	add    BYTE PTR [rax],al
  41ac9d:	add    BYTE PTR [rax],al
  41ac9f:	add    BYTE PTR [rcx-0x65],dh
  41aca2:	add    BYTE PTR [r8],al
  41aca5:	add    BYTE PTR [rax],al
  41aca7:	add    BYTE PTR [rbx+rbx*4+0x41],dh
  41acab:	add    BYTE PTR [rax],al
  41acad:	add    BYTE PTR [rax],al
  41acaf:	add    BYTE PTR [rcx],al
  41acb1:	add    BYTE PTR [rax],al
  41acb3:	add    BYTE PTR [rax],al
  41acb5:	add    BYTE PTR [rax],al
  41acb7:	add    BYTE PTR [rdi-0x65],bh
  41acba:	add    BYTE PTR [r8],al
  41acbd:	add    BYTE PTR [rax],al
  41acbf:	add    BYTE PTR [rdx+0x419b],al
  41acc5:	add    BYTE PTR [rax],al
  41acc7:	add    BYTE PTR [rcx],al
  41acc9:	add    BYTE PTR [rax],al
  41accb:	add    BYTE PTR [rax],al
  41accd:	add    BYTE PTR [rax],al
  41accf:	add    BYTE PTR [rdx+0x419b],dl
  41acd5:	add    BYTE PTR [rax],al
  41acd7:	add    BYTE PTR [rbp+0x419b],dl
  41acdd:	add    BYTE PTR [rax],al
  41acdf:	add    BYTE PTR [rcx],al
  41ace1:	add    BYTE PTR [rax],al
  41ace3:	add    BYTE PTR [rax],al
  41ace5:	add    BYTE PTR [rax],al
  41ace7:	add    BYTE PTR [rdi+0x419b],bl
  41aced:	add    BYTE PTR [rax],al
  41acef:	add    BYTE PTR [rdx+0x419b],ah
  41acf5:	add    BYTE PTR [rax],al
  41acf7:	add    BYTE PTR [rcx],al
  41acf9:	add    BYTE PTR [rax],al
  41acfb:	add    BYTE PTR [rax],al
  41acfd:	add    BYTE PTR [rax],al
  41acff:	add    BYTE PTR [rcx+0x419b],dh
  41ad05:	add    BYTE PTR [rax],al
  41ad07:	add    BYTE PTR [rbx+rbx*4+0x41],dh
  41ad0e:	add    BYTE PTR [rax],al
  41ad10:	add    DWORD PTR [rax],eax
  41ad12:	add    BYTE PTR [rax],al
  41ad14:	add    BYTE PTR [rax],al
  41ad16:	add    BYTE PTR [rax],al
  41ad18:	mov    edi,0x419b
  41ad1d:	add    BYTE PTR [rax],al
  41ad1f:	add    dl,al
  41ad21:	fwait
  41ad22:	add    BYTE PTR [r8],al
  41ad25:	add    BYTE PTR [rax],al
  41ad27:	add    BYTE PTR [rcx],al
  41ad29:	add    BYTE PTR [rax],al
  41ad2b:	add    BYTE PTR [rax],al
  41ad2d:	add    BYTE PTR [rax],al
  41ad2f:	add    al,dl
  41ad31:	fwait
  41ad32:	add    BYTE PTR [r8],al
  41ad35:	add    BYTE PTR [rax],al
  41ad37:	add    bl,dl
  41ad39:	fwait
  41ad3a:	add    BYTE PTR [r8],al
  41ad3d:	add    BYTE PTR [rax],al
  41ad3f:	add    BYTE PTR [rcx],al
  41ad41:	add    BYTE PTR [rax],al
  41ad43:	add    BYTE PTR [rax],al
  41ad45:	add    BYTE PTR [rax],al
  41ad47:	add    cl,ah
  41ad49:	fwait
  41ad4a:	add    BYTE PTR [r8],al
  41ad4d:	add    BYTE PTR [rax],al
  41ad4f:	add    ah,ah
  41ad51:	fwait
  41ad52:	add    BYTE PTR [r8],al
	...
  41ad5d:	add    BYTE PTR [rax],al
  41ad5f:	add    dl,bh
  41ad61:	fwait
  41ad62:	add    BYTE PTR [r8],al
  41ad65:	add    BYTE PTR [rax],al
  41ad67:	add    cl,bl
  41ad69:	(bad)  
  41ad6a:	add    BYTE PTR [r8],al
  41ad6d:	add    BYTE PTR [rax],al
  41ad6f:	add    BYTE PTR [rcx],al
  41ad71:	add    BYTE PTR [rax],al
  41ad73:	add    BYTE PTR [rax],al
  41ad75:	add    BYTE PTR [rax],al
  41ad77:	add    ch,bh
  41ad79:	fwait
  41ad7a:	add    BYTE PTR [r8],al
  41ad7d:	add    BYTE PTR [rax],al
  41ad7f:	add    BYTE PTR [rax],al
  41ad81:	pushf  
  41ad82:	add    BYTE PTR [r8],al
  41ad85:	add    BYTE PTR [rax],al
  41ad87:	add    BYTE PTR [rcx],al
  41ad89:	add    BYTE PTR [rax],al
  41ad8b:	add    BYTE PTR [rax],al
  41ad8d:	add    BYTE PTR [rax],al
  41ad8f:	add    BYTE PTR [rip+0x419c],cl        # 0x41ef31
  41ad95:	add    BYTE PTR [rax],al
  41ad97:	add    BYTE PTR [rax],dl
  41ad99:	pushf  
  41ad9a:	add    BYTE PTR [r8],al
  41ad9d:	add    BYTE PTR [rax],al
  41ad9f:	add    BYTE PTR [rcx],al
  41ada1:	add    BYTE PTR [rax],al
  41ada3:	add    BYTE PTR [rax],al
  41ada5:	add    BYTE PTR [rax],al
  41ada7:	add    BYTE PTR [rip+0x419c],bl        # 0x41ef49
  41adad:	add    BYTE PTR [rax],al
  41adaf:	add    BYTE PTR [rax],ah
  41adb1:	pushf  
  41adb2:	add    BYTE PTR [r8],al
	...
  41adbd:	add    BYTE PTR [rax],al
  41adbf:	add    BYTE PTR [rdi],ch
  41adc1:	pushf  
  41adc2:	add    BYTE PTR [r8],al
  41adc5:	add    BYTE PTR [rax],al
  41adc7:	add    BYTE PTR [rdx],dh
  41adc9:	pushf  
  41adca:	add    BYTE PTR [r8],al
	...
  41add5:	add    BYTE PTR [rax],al
  41add7:	add    BYTE PTR [rsi],bh
  41add9:	pushf  
  41adda:	add    BYTE PTR [r8],al
  41addd:	add    BYTE PTR [rax],al
  41addf:	add    BYTE PTR [rax-0x64],al
  41ade2:	add    BYTE PTR [r8],al
	...
  41aded:	add    BYTE PTR [rax],al
  41adef:	add    BYTE PTR [rbp-0x64],al
  41adf2:	add    BYTE PTR [r8],al
  41adf5:	add    BYTE PTR [rax],al
  41adf7:	add    BYTE PTR [rax-0x64],cl
  41adfa:	add    BYTE PTR [r8],al
	...
  41ae05:	add    BYTE PTR [rax],al
  41ae07:	add    BYTE PTR [rbx-0x64],dl
  41ae0a:	add    BYTE PTR [r8],al
  41ae0d:	add    BYTE PTR [rax],al
  41ae0f:	add    BYTE PTR [rbp-0x64],dl
  41ae12:	add    BYTE PTR [r8],al
  41ae15:	add    BYTE PTR [rax],al
  41ae17:	add    BYTE PTR [rcx],al
  41ae19:	add    BYTE PTR [rax],al
  41ae1b:	add    BYTE PTR [rax],al
  41ae1d:	add    BYTE PTR [rax],al
  41ae1f:	add    BYTE PTR [rdx-0x64],bl
  41ae22:	add    BYTE PTR [r8],al
  41ae25:	add    BYTE PTR [rax],al
  41ae27:	add    BYTE PTR [rbp-0x64],bl
  41ae2a:	add    BYTE PTR [r8],al
  41ae2d:	add    BYTE PTR [rax],al
  41ae2f:	add    BYTE PTR [rcx],al
  41ae31:	add    BYTE PTR [rax],al
  41ae33:	add    BYTE PTR [rax],al
  41ae35:	add    BYTE PTR [rax],al
  41ae37:	add    BYTE PTR [rcx-0x64],ch
  41ae3a:	add    BYTE PTR [r8],al
  41ae3d:	add    BYTE PTR [rax],al
  41ae3f:	add    BYTE PTR [rbx-0x64],ch
  41ae42:	add    BYTE PTR [r8],al
	...
  41ae4d:	add    BYTE PTR [rax],al
  41ae4f:	add    BYTE PTR [rbx-0x64],dh
  41ae52:	add    BYTE PTR [r8],al
  41ae55:	add    BYTE PTR [rax],al
  41ae57:	add    BYTE PTR [rbp-0x64],dh
  41ae5a:	add    BYTE PTR [r8],al
	...
  41ae65:	add    BYTE PTR [rax],al
  41ae67:	add    BYTE PTR [rcx-0x64],bh
  41ae6a:	add    BYTE PTR [r8],al
  41ae6d:	add    BYTE PTR [rax],al
  41ae6f:	add    BYTE PTR [rbx-0x64],bh
  41ae72:	add    BYTE PTR [r8],al
	...
  41ae7d:	add    BYTE PTR [rax],al
  41ae7f:	add    BYTE PTR [rax+0x419c],al
  41ae85:	add    BYTE PTR [rax],al
  41ae87:	add    BYTE PTR [rdx+0x419c],al
  41ae8d:	add    BYTE PTR [rax],al
  41ae8f:	add    BYTE PTR [rcx],al
  41ae91:	add    BYTE PTR [rax],al
  41ae93:	add    BYTE PTR [rax],al
  41ae95:	add    BYTE PTR [rax],al
  41ae97:	add    BYTE PTR [rcx+0x419c],cl
  41ae9d:	add    BYTE PTR [rax],al
  41ae9f:	add    BYTE PTR [rsp+rbx*4+0x41],cl
  41aea6:	add    BYTE PTR [rax],al
  41aea8:	add    DWORD PTR [rax],eax
  41aeaa:	add    BYTE PTR [rax],al
  41aeac:	add    BYTE PTR [rax],al
  41aeae:	add    BYTE PTR [rax],al
  41aeb0:	cdq    
  41aeb1:	pushf  
  41aeb2:	add    BYTE PTR [r8],al
  41aeb5:	add    BYTE PTR [rax],al
  41aeb7:	add    BYTE PTR [rbx+0x419c],bl
	...
  41aec5:	add    BYTE PTR [rax],al
  41aec7:	add    BYTE PTR [rbx+0x419c],ah
  41aecd:	add    BYTE PTR [rax],al
  41aecf:	add    BYTE PTR [rbp+0x419c],ah
	...
  41aedd:	add    BYTE PTR [rax],al
  41aedf:	add    BYTE PTR [rdx+0x419c],ch
  41aee5:	add    BYTE PTR [rax],al
  41aee7:	add    BYTE PTR [rsp+rbx*4+0x41],ch
	...
  41aef6:	add    BYTE PTR [rax],al
  41aef8:	rcr    DWORD PTR [rcx+rax*2+0x0],0x0
  41af00:	ret    
  41af01:	pushf  
  41af02:	add    BYTE PTR [r8],al
	...
  41af0d:	add    BYTE PTR [rax],al
  41af0f:	add    dh,dl
  41af11:	pushf  
  41af12:	add    BYTE PTR [r8],al
  41af15:	add    BYTE PTR [rax],al
  41af17:	add    al,bl
  41af19:	pushf  
  41af1a:	add    BYTE PTR [r8],al
	...
  41af25:	add    BYTE PTR [rax],al
  41af27:	add    cl,ah
  41af29:	pushf  
  41af2a:	add    BYTE PTR [r8],al
  41af2d:	add    BYTE PTR [rax],al
  41af2f:	add    bl,ah
  41af31:	pushf  
  41af32:	add    BYTE PTR [r8],al
  41af35:	add    BYTE PTR [rax],al
  41af37:	add    BYTE PTR [rcx],al
  41af39:	add    BYTE PTR [rax],al
  41af3b:	add    BYTE PTR [rax],al
  41af3d:	add    BYTE PTR [rax],al
  41af3f:	add    dl,ch
  41af41:	pushf  
  41af42:	add    BYTE PTR [r8],al
  41af45:	add    BYTE PTR [rax],al
  41af47:	add    ah,ch
  41af49:	pushf  
  41af4a:	add    BYTE PTR [r8],al
	...
  41af55:	add    BYTE PTR [rax],al
  41af57:	add    dh,dh
  41af59:	pushf  
  41af5a:	add    BYTE PTR [r8],al
  41af5d:	add    BYTE PTR [rax],al
  41af5f:	add    al,bh
  41af61:	pushf  
  41af62:	add    BYTE PTR [r8],al
	...
  41af6d:	add    BYTE PTR [rax],al
  41af6f:	add    BYTE PTR [rcx],al
  41af71:	popf   
  41af72:	add    BYTE PTR [r8],al
  41af75:	add    BYTE PTR [rax],al
  41af77:	add    BYTE PTR [rbx*4+0x41],al
	...
  41af86:	add    BYTE PTR [rax],al
  41af88:	adc    eax,0x419d
  41af8d:	add    BYTE PTR [rax],al
  41af8f:	add    BYTE PTR [rdi],dl
  41af91:	popf   
  41af92:	add    BYTE PTR [r8],al
  41af95:	add    BYTE PTR [rax],al
  41af97:	add    BYTE PTR [rcx],al
  41af99:	add    BYTE PTR [rax],al
  41af9b:	add    BYTE PTR [rax],al
  41af9d:	add    BYTE PTR [rax],al
  41af9f:	add    BYTE PTR [rax],ah
  41afa1:	popf   
  41afa2:	add    BYTE PTR [r8],al
  41afa5:	add    BYTE PTR [rax],al
  41afa7:	add    BYTE PTR [rdx],ah
  41afa9:	popf   
  41afaa:	add    BYTE PTR [r8],al
	...
  41afb5:	add    BYTE PTR [rax],al
  41afb7:	add    BYTE PTR [rcx],ch
  41afb9:	popf   
  41afba:	add    BYTE PTR [r8],al
  41afbd:	add    BYTE PTR [rax],al
  41afbf:	add    BYTE PTR [rbx],ch
  41afc1:	popf   
  41afc2:	add    BYTE PTR [r8],al
	...
  41afcd:	add    BYTE PTR [rax],al
  41afcf:	add    BYTE PTR [rcx],dh
  41afd1:	popf   
  41afd2:	add    BYTE PTR [r8],al
  41afd5:	add    BYTE PTR [rax],al
  41afd7:	add    BYTE PTR [rbx*4+0x41],dh
	...
  41afe6:	add    BYTE PTR [rax],al
  41afe8:	rex.XB popf 
  41afea:	add    BYTE PTR [r8],al
  41afed:	add    BYTE PTR [rax],al
  41afef:	add    BYTE PTR [rsi-0x63],al
  41aff2:	add    BYTE PTR [r8],al
  41aff5:	add    BYTE PTR [rax],al
  41aff7:	add    BYTE PTR [rcx],al
  41aff9:	add    BYTE PTR [rax],al
  41affb:	add    BYTE PTR [rax],al
  41affd:	add    BYTE PTR [rax],al
  41afff:	add    BYTE PTR [rcx-0x63],dl
  41b002:	add    BYTE PTR [r8],al
  41b005:	add    BYTE PTR [rax],al
  41b007:	add    BYTE PTR [rbx-0x63],dl
  41b00a:	add    BYTE PTR [r8],al
	...
  41b015:	add    BYTE PTR [rax],al
  41b017:	add    BYTE PTR [rdx-0x63],bl
  41b01a:	add    BYTE PTR [r8],al
  41b01d:	add    BYTE PTR [rax],al
  41b01f:	add    BYTE PTR [rbp+rbx*4+0x41],bl
  41b023:	add    BYTE PTR [rax],al
  41b025:	add    BYTE PTR [rax],al
  41b027:	add    BYTE PTR [rcx],al
  41b029:	add    BYTE PTR [rax],al
  41b02b:	add    BYTE PTR [rax],al
  41b02d:	add    BYTE PTR [rax],al
  41b02f:	add    BYTE PTR [rbx-0x63],ah
  41b032:	add    BYTE PTR [r8],al
  41b035:	add    BYTE PTR [rax],al
  41b037:	add    BYTE PTR [rbp-0x63],ah
  41b03a:	add    BYTE PTR [r8],al
	...
  41b045:	add    BYTE PTR [rax],al
  41b047:	add    BYTE PTR [rcx-0x63],dh
  41b04a:	add    BYTE PTR [r8],al
  41b04d:	add    BYTE PTR [rax],al
  41b04f:	add    BYTE PTR [rbp+rbx*4+0x41],dh
	...
  41b05f:	add    BYTE PTR [rbp+rbx*4+0x41],al
  41b066:	add    BYTE PTR [rax],al
  41b068:	xchg   BYTE PTR [rbp+0x41],bl
	...
  41b076:	add    BYTE PTR [rax],al
  41b078:	xchg   edx,eax
  41b079:	popf   
  41b07a:	add    BYTE PTR [r8],al
  41b07d:	add    BYTE PTR [rax],al
  41b07f:	add    BYTE PTR [rbp+rbx*4+0x41],dl
  41b086:	add    BYTE PTR [rax],al
  41b088:	add    DWORD PTR [rax],eax
  41b08a:	add    BYTE PTR [rax],al
  41b08c:	add    BYTE PTR [rax],al
  41b08e:	add    BYTE PTR [rax],al
  41b090:	popf   
  41b091:	popf   
  41b092:	add    BYTE PTR [r8],al
  41b095:	add    BYTE PTR [rax],al
  41b097:	add    BYTE PTR [rdi+0x419d],bl
	...
  41b0a5:	add    BYTE PTR [rax],al
  41b0a7:	add    BYTE PTR [rdi+0x419d],ah
  41b0ad:	add    BYTE PTR [rax],al
  41b0af:	add    BYTE PTR [rcx+0x419d],ch
  41b0b5:	add    BYTE PTR [rax],al
  41b0b7:	add    BYTE PTR [rcx],al
  41b0b9:	add    BYTE PTR [rax],al
  41b0bb:	add    BYTE PTR [rax],al
  41b0bd:	add    BYTE PTR [rax],al
  41b0bf:	add    BYTE PTR [rdi+0x419d],ch
  41b0c5:	add    BYTE PTR [rax],al
  41b0c7:	add    BYTE PTR [rcx+0x419d],dh
  41b0cd:	add    BYTE PTR [rax],al
  41b0cf:	add    BYTE PTR [rcx],al
  41b0d1:	add    BYTE PTR [rax],al
  41b0d3:	add    BYTE PTR [rax],al
  41b0d5:	add    BYTE PTR [rax],al
  41b0d7:	add    BYTE PTR [rdi+0x419d],dh
  41b0dd:	add    BYTE PTR [rax],al
  41b0df:	add    BYTE PTR [rcx+0x419d],bh
	...
  41b0ed:	add    BYTE PTR [rax],al
  41b0ef:	add    ch,al
  41b0f1:	popf   
  41b0f2:	add    BYTE PTR [r8],al
  41b0f5:	add    BYTE PTR [rax],al
  41b0f7:	add    bh,al
  41b0f9:	popf   
  41b0fa:	add    BYTE PTR [r8],al
	...
  41b105:	add    BYTE PTR [rax],al
  41b107:	add    dh,cl
  41b109:	popf   
  41b10a:	add    BYTE PTR [r8],al
  41b10d:	add    BYTE PTR [rax],al
  41b10f:	add    al,dl
  41b111:	popf   
  41b112:	add    BYTE PTR [r8],al
	...
  41b11d:	add    BYTE PTR [rax],al
  41b11f:	add    bl,bl
  41b121:	popf   
  41b122:	add    BYTE PTR [r8],al
  41b125:	add    BYTE PTR [rax],al
  41b127:	add    ch,bl
  41b129:	popf   
  41b12a:	add    BYTE PTR [r8],al
  41b12d:	add    BYTE PTR [rax],al
  41b12f:	add    BYTE PTR [rcx],al
  41b131:	add    BYTE PTR [rax],al
  41b133:	add    BYTE PTR [rax],al
  41b135:	add    BYTE PTR [rax],al
  41b137:	add    bl,ch
  41b139:	popf   
  41b13a:	add    BYTE PTR [r8],al
  41b13d:	add    BYTE PTR [rax],al
  41b13f:	add    ch,ch
  41b141:	popf   
  41b142:	add    BYTE PTR [r8],al
  41b145:	add    BYTE PTR [rax],al
  41b147:	add    BYTE PTR [rcx],al
  41b149:	add    BYTE PTR [rax],al
  41b14b:	add    BYTE PTR [rax],al
  41b14d:	add    BYTE PTR [rax],al
  41b14f:	add    cl,bh
  41b151:	popf   
  41b152:	add    BYTE PTR [r8],al
  41b155:	add    BYTE PTR [rax],al
  41b157:	add    bl,bh
  41b159:	popf   
  41b15a:	add    BYTE PTR [r8],al
  41b15d:	add    BYTE PTR [rax],al
  41b15f:	add    BYTE PTR [rcx],al
	...
  41b169:	sahf   
  41b16a:	add    BYTE PTR [r8],al
  41b16d:	add    BYTE PTR [rax],al
  41b16f:	add    BYTE PTR [rdx],al
  41b171:	sahf   
  41b172:	add    BYTE PTR [r8],al
  41b175:	add    BYTE PTR [rax],al
  41b177:	add    BYTE PTR [rcx],al
  41b179:	add    BYTE PTR [rax],al
  41b17b:	add    BYTE PTR [rax],al
  41b17d:	add    BYTE PTR [rax],al
  41b17f:	add    BYTE PTR [rip+0x419e],cl        # 0x41f323
  41b185:	add    BYTE PTR [rax],al
  41b187:	add    BYTE PTR [rdi],cl
  41b189:	sahf   
  41b18a:	add    BYTE PTR [r8],al
	...
  41b195:	add    BYTE PTR [rax],al
  41b197:	add    BYTE PTR [rdi],dl
  41b199:	sahf   
  41b19a:	add    BYTE PTR [r8],al
  41b19d:	add    BYTE PTR [rax],al
  41b19f:	add    BYTE PTR [rcx],bl
  41b1a1:	sahf   
  41b1a2:	add    BYTE PTR [r8],al
	...
  41b1ad:	add    BYTE PTR [rax],al
  41b1af:	add    BYTE PTR [rcx+0x4189],cl
  41b1b5:	add    BYTE PTR [rax],al
  41b1b7:	add    BYTE PTR [rcx],ah
  41b1b9:	sahf   
  41b1ba:	add    BYTE PTR [r8],al
  41b1bd:	add    BYTE PTR [rax],al
  41b1bf:	add    BYTE PTR [rcx],al
  41b1c1:	add    BYTE PTR [rax],al
  41b1c3:	add    BYTE PTR [rax],al
  41b1c5:	add    BYTE PTR [rax],al
  41b1c7:	add    BYTE PTR [rbx],ch
  41b1c9:	sahf   
  41b1ca:	add    BYTE PTR [r8],al
  41b1cd:	add    BYTE PTR [rax],al
  41b1cf:	add    BYTE PTR [rip+0x419e],ch        # 0x41f373
  41b1d5:	add    BYTE PTR [rax],al
  41b1d7:	add    BYTE PTR [rcx],al
  41b1d9:	add    BYTE PTR [rax],al
  41b1db:	add    BYTE PTR [rax],al
  41b1dd:	add    BYTE PTR [rax],al
  41b1df:	add    BYTE PTR [rbx],dh
  41b1e1:	sahf   
  41b1e2:	add    BYTE PTR [r8],al
  41b1e5:	add    BYTE PTR [rax],al
  41b1e7:	add    BYTE PTR [rsi],dh
  41b1e9:	sahf   
  41b1ea:	add    BYTE PTR [r8],al
  41b1ed:	add    BYTE PTR [rax],al
  41b1ef:	add    BYTE PTR [rcx],al
  41b1f1:	add    BYTE PTR [rax],al
  41b1f3:	add    BYTE PTR [rax],al
  41b1f5:	add    BYTE PTR [rax],al
  41b1f7:	add    BYTE PTR [rdi],bh
  41b1f9:	sahf   
  41b1fa:	add    BYTE PTR [r8],al
  41b1fd:	add    BYTE PTR [rax],al
  41b1ff:	add    BYTE PTR [rcx-0x62],al
  41b202:	add    BYTE PTR [r8],al
  41b205:	add    BYTE PTR [rax],al
  41b207:	add    BYTE PTR [rcx],al
  41b209:	add    BYTE PTR [rax],al
  41b20b:	add    BYTE PTR [rax],al
  41b20d:	add    BYTE PTR [rax],al
  41b20f:	add    BYTE PTR [rcx-0x62],cl
  41b212:	add    BYTE PTR [r8],al
  41b215:	add    BYTE PTR [rax],al
  41b217:	add    BYTE PTR [rbx-0x62],cl
  41b21a:	add    BYTE PTR [r8],al
  41b21d:	add    BYTE PTR [rax],al
  41b21f:	add    BYTE PTR [rcx],al
  41b221:	add    BYTE PTR [rax],al
  41b223:	add    BYTE PTR [rax],al
  41b225:	add    BYTE PTR [rax],al
  41b227:	add    BYTE PTR [rdi-0x62],dl
  41b22a:	add    BYTE PTR [r8],al
  41b22d:	add    BYTE PTR [rax],al
  41b22f:	add    BYTE PTR [rcx-0x62],bl
  41b232:	add    BYTE PTR [r8],al
  41b235:	add    BYTE PTR [rax],al
  41b237:	add    BYTE PTR [rcx],al
  41b239:	add    BYTE PTR [rax],al
  41b23b:	add    BYTE PTR [rax],al
  41b23d:	add    BYTE PTR [rax],al
  41b23f:	add    BYTE PTR [rsi+rbx*4+0x41],ah
  41b243:	add    BYTE PTR [rax],al
  41b245:	add    BYTE PTR [rax],al
  41b247:	add    BYTE PTR [rsi-0x62],ah
  41b24a:	add    BYTE PTR [r8],al
  41b24d:	add    BYTE PTR [rax],al
  41b24f:	add    BYTE PTR [rcx],al
  41b251:	add    BYTE PTR [rax],al
  41b253:	add    BYTE PTR [rax],al
  41b255:	add    BYTE PTR [rax],al
  41b257:	add    BYTE PTR [rax-0x62],dh
  41b25a:	add    BYTE PTR [r8],al
  41b25d:	add    BYTE PTR [rax],al
  41b25f:	add    BYTE PTR [rdx-0x62],dh
  41b262:	add    BYTE PTR [r8],al
	...
  41b26d:	add    BYTE PTR [rax],al
  41b26f:	add    BYTE PTR [rbp+0x4193],ah
  41b275:	add    BYTE PTR [rax],al
  41b277:	add    BYTE PTR [rdi-0x62],bh
  41b27a:	add    BYTE PTR [r8],al
	...
  41b2bd:	add    BYTE PTR [rax],al
  41b2bf:	add    BYTE PTR [rbp+0x73],dl
  41b2c2:	(bad)  
  41b2c3:	cmp    ah,BYTE PTR gs:[eax]
  41b2c7:	movsxd esi,DWORD PTR [rbp+0x72]
  41b2ca:	ins    BYTE PTR es:[rdi],dx
  41b2cb:	and    BYTE PTR [rbx+0x6f],bl
  41b2ce:	jo     0x41b344
  41b2d0:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e2e2e73
  41b2d7:	pop    rbp
  41b2d8:	and    BYTE PTR [rsi*2+0x3e6c72],bh
  41b2df:	add    BYTE PTR [rbx+0x75],ah
  41b2e2:	jb     0x41b350
  41b2e4:	and    BYTE PTR [rdi],dh
  41b2e6:	cs xor eax,0x20312e32
  41b2ec:	sub    BYTE PTR [rax+0x38],bh
  41b2ef:	ss pop rdi
  41b2f1:	ss xor al,0x2d
  41b2f4:	ja     0x41b32c
  41b2f6:	xor    al,0x2d
  41b2f8:	ins    DWORD PTR es:[rdi],dx
  41b2f9:	imul   ebp,DWORD PTR [rsi+0x67],0x29323377
  41b300:	and    BYTE PTR [rip+0x50000a73],ah        # 0x5041bd79
  41b306:	jb     0x41b377
  41b308:	je     0x41b379
  41b30a:	movsxd ebp,DWORD PTR [rdi+0x6c]
  41b30d:	jae    0x41b349
  41b30f:	and    BYTE PTR [rax],al
  41b311:	add    BYTE PTR [rip+0x46002073],ah        # 0x4641d38a
  41b317:	gs (bad) 
  41b319:	je     0x41b390
  41b31b:	jb     0x41b382
  41b31d:	jae    0x41b359
  41b31f:	and    BYTE PTR [rax],al
  41b321:	rex.X jne 0x41b38d
  41b324:	ins    BYTE PTR es:[rdi],dx
  41b325:	fs sub eax,0x656d6974
  41b32b:	and    BYTE PTR [rbp+0x6e],ah
  41b32e:	imul   ebp,DWORD PTR [esi+0x65],0x20003a73
  41b336:	and    BYTE PTR [rip+0x20000a73],ah        # 0x2041bdaf
  41b33c:	and    BYTE PTR [rsi+rbp*2],bh
  41b33f:	outs   dx,DWORD PTR ds:[rsi]
  41b340:	outs   dx,BYTE PTR ds:[rsi]
  41b341:	gs add BYTE PTR ds:[rcx+0x73],al
  41b346:	jns    0x41b3b6
  41b348:	movsxd ebp,DWORD PTR [rax+0x44]
  41b34b:	rex.WRX push rbx
  41b34d:	add    BYTE PTR [rbp+riz*2+0x62],al
  41b351:	jne    0x41b3ba
  41b353:	add    BYTE PTR [rdx+rsi*2+0x61],dl
  41b357:	movsxd ebp,DWORD PTR [rbx+0x4d]
  41b35a:	gs ins DWORD PTR es:[rdi],dx
  41b35c:	outs   dx,DWORD PTR ds:[rsi]
  41b35d:	jb     0x41b3d8
  41b35f:	add    BYTE PTR [rcx+0x44],cl
  41b362:	rex.WRX add BYTE PTR [rcx+0x50],r9b
  41b366:	jbe    0x41b39e
  41b368:	add    BYTE PTR [rcx+riz*2+0x72],cl
  41b36c:	imul   bp,WORD PTR gs:[ebp+eiz*2+0x0],0x5353
  41b375:	push   rax
  41b376:	rex.WB add BYTE PTR [r15+0x53],al
  41b37a:	push   rbx
  41b37b:	sub    eax,0x495041
  41b380:	rex.WXB
  41b381:	gs jb  0x41b3e6
  41b384:	gs jb  0x41b3f6
  41b387:	jae    0x41b389
  41b389:	push   rbx
  41b38a:	push   rax
  41b38b:	rex.WRX
  41b38c:	rex.RB
  41b38d:	rex.RXB
  41b38e:	rex.WRXB add BYTE PTR [r14+0x54],r9b
  41b392:	rex.WR
  41b393:	rex.WRB add BYTE PTR [r14+0x54],r9b
  41b397:	rex.WR
  41b398:	rex.WRB pop r15
  41b39a:	push   rdi
  41b39b:	rex.X add BYTE PTR [rbx+0x53],dl
  41b39f:	rex.WR add BYTE PTR [rcx+rbp*2+0x62],r13b
  41b3a4:	jp     0x41b3a6
  41b3a6:	rex.XB push 0x6f437261
  41b3ac:	outs   dx,BYTE PTR ds:[rsi]
  41b3ad:	jbe    0x41b3af
  41b3af:	push   rsp
  41b3b0:	rex.WR push rbx
  41b3b2:	sub    eax,0x505253
  41b3b7:	rex.W push rsp
  41b3b9:	push   rsp
  41b3ba:	push   rax
  41b3bb:	xor    al,BYTE PTR [rax]
  41b3bd:	push   rbp
  41b3be:	outs   dx,BYTE PTR ds:[rsi]
  41b3bf:	imul   edi,DWORD PTR [rax+0x53],0x656b636f
  41b3c6:	je     0x41b43b
  41b3c8:	add    BYTE PTR [rax+0x54],cl
  41b3cb:	push   rsp
  41b3cc:	push   rax
  41b3cd:	push   rbx
  41b3ce:	sub    eax,0x786f7270
  41b3d3:	jns    0x41b3d5
	...
  41b3fd:	add    BYTE PTR [rax],al
  41b3ff:	add    BYTE PTR [rbx+rsi*4+0x41],al
  41b403:	add    BYTE PTR [rax],al
  41b405:	add    BYTE PTR [rax],al
  41b407:	add    BYTE PTR [rax+0x0],al
  41b40d:	add    BYTE PTR [rax],al
  41b40f:	add    BYTE PTR [rsi-0x4d],cl
  41b412:	add    BYTE PTR [r8],al
  41b415:	add    BYTE PTR [rax],al
  41b417:	add    BYTE PTR [rax+0x0],al
  41b41a:	add    BYTE PTR [rax],al
  41b41c:	add    BYTE PTR [rax],al
  41b41e:	add    BYTE PTR [rax],al
  41b420:	push   rsp
  41b421:	mov    bl,0x41
  41b423:	add    BYTE PTR [rax],al
  41b425:	add    BYTE PTR [rax],al
  41b427:	add    BYTE PTR [rax],al
  41b429:	and    BYTE PTR [rax],al
  41b42b:	add    BYTE PTR [rax],al
  41b42d:	add    BYTE PTR [rax],al
  41b42f:	add    BYTE PTR [rax-0x4d],ah
  41b432:	add    BYTE PTR [r8],al
  41b435:	add    BYTE PTR [rax],al
  41b437:	add    BYTE PTR [rax],al
  41b439:	add    al,0x0
  41b43b:	add    BYTE PTR [rax],al
  41b43d:	add    BYTE PTR [rax],al
  41b43f:	add    BYTE PTR [rbx+rsi*4+0x41],ah
  41b443:	add    BYTE PTR [rax],al
  41b445:	add    BYTE PTR [rax],al
  41b447:	add    BYTE PTR [rcx],al
  41b449:	add    BYTE PTR [rax],al
  41b44b:	add    BYTE PTR [rax],al
  41b44d:	add    BYTE PTR [rax],al
  41b44f:	add    BYTE PTR [rcx-0x4d],ch
  41b452:	add    BYTE PTR [r8],al
  41b455:	add    BYTE PTR [rax],al
  41b457:	add    BYTE PTR [rax],al
  41b459:	add    al,BYTE PTR [rax]
  41b45b:	add    BYTE PTR [rax],al
  41b45d:	add    BYTE PTR [rax],al
  41b45f:	add    BYTE PTR [rbx-0x4d],dh
  41b462:	add    BYTE PTR [r8],al
  41b465:	add    BYTE PTR [rax],al
  41b467:	add    BYTE PTR [rax],al
  41b469:	or     BYTE PTR [rax],al
  41b46b:	add    BYTE PTR [rax],al
  41b46d:	add    BYTE PTR [rax],al
  41b46f:	add    BYTE PTR [rax-0x4d],bh
  41b472:	add    BYTE PTR [r8],al
  41b475:	add    BYTE PTR [rax],al
  41b477:	add    BYTE PTR [rax],al
  41b479:	add    BYTE PTR [rdx],al
  41b47b:	add    BYTE PTR [rax],al
  41b47d:	add    BYTE PTR [rax],al
  41b47f:	add    BYTE PTR [rax+0x41b3],al
  41b485:	add    BYTE PTR [rax],al
  41b487:	add    BYTE PTR [rax],al
  41b489:	add    BYTE PTR [rax+rax*1],al
  41b48c:	add    BYTE PTR [rax],al
  41b48e:	add    BYTE PTR [rax],al
  41b490:	mov    DWORD PTR [rbx+0x41],esi
  41b496:	add    BYTE PTR [rax],al
  41b498:	add    BYTE PTR [rcx],al
  41b49a:	add    BYTE PTR [rax],al
  41b49c:	add    BYTE PTR [rax],al
  41b49e:	add    BYTE PTR [rax],al
  41b4a0:	nop
  41b4a1:	mov    bl,0x41
  41b4a3:	add    BYTE PTR [rax],al
  41b4a5:	add    BYTE PTR [rax],al
  41b4a7:	add    BYTE PTR [rax],dl
  41b4a9:	add    BYTE PTR [rax],al
  41b4ab:	add    BYTE PTR [rax],al
  41b4ad:	add    BYTE PTR [rax],al
  41b4af:	add    BYTE PTR [rbp+0x41b3],dl
  41b4b5:	add    BYTE PTR [rax],al
  41b4b7:	add    BYTE PTR [rax],al
  41b4b9:	add    BYTE PTR [rax],0x0
  41b4bc:	add    BYTE PTR [rax],al
  41b4be:	add    BYTE PTR [rax],al
  41b4c0:	popf   
  41b4c1:	mov    bl,0x41
  41b4c3:	add    BYTE PTR [rax],al
  41b4c5:	add    BYTE PTR [rax],al
  41b4c7:	add    BYTE PTR [rax+rax*1],al
  41b4ca:	add    BYTE PTR [rax],al
  41b4cc:	add    BYTE PTR [rax],al
  41b4ce:	add    BYTE PTR [rax],al
  41b4d0:	movabs eax,ds:0x8000000000041b3
  41b4d9:	add    BYTE PTR [rax],al
  41b4db:	add    BYTE PTR [rax],al
  41b4dd:	add    BYTE PTR [rax],al
  41b4df:	add    BYTE PTR [rsi+0x41b3],ah
  41b4e5:	add    BYTE PTR [rax],al
  41b4e7:	add    BYTE PTR [rax],al
  41b4e9:	adc    BYTE PTR [rax],al
  41b4eb:	add    BYTE PTR [rax],al
  41b4ed:	add    BYTE PTR [rax],al
  41b4ef:	add    BYTE PTR [rdi+0x41b3],ch
  41b4f5:	add    BYTE PTR [rax],al
  41b4f7:	add    BYTE PTR [rax],al
  41b4f9:	add    BYTE PTR [rax],al
  41b4fc:	add    BYTE PTR [rax],al
  41b4fe:	add    BYTE PTR [rax],al
  41b500:	mov    bh,0xb3
  41b502:	add    BYTE PTR [r8],al
  41b505:	add    BYTE PTR [rax],al
  41b507:	add    BYTE PTR [rax],al
  41b509:	add    BYTE PTR [rcx],al
  41b50b:	add    BYTE PTR [rax],al
  41b50d:	add    BYTE PTR [rax],al
  41b50f:	add    BYTE PTR [rbp+0x41b3],bh
  41b515:	add    BYTE PTR [rax],al
  41b517:	add    BYTE PTR [rax],al
  41b519:	add    BYTE PTR [rax],cl
  41b51b:	add    BYTE PTR [rax],al
  41b51d:	add    BYTE PTR [rax],al
  41b51f:	add    cl,cl
  41b521:	mov    bl,0x41
  41b523:	add    BYTE PTR [rax],al
  41b525:	add    BYTE PTR [rax],al
  41b527:	add    BYTE PTR [rax],al
  41b529:	add    BYTE PTR [rax],ah
  41b52b:	add    BYTE PTR [rax],al
  41b52d:	add    BYTE PTR [rax],al
  41b52f:	add    BYTE PTR [rdi+0x70],cl
  41b532:	je     0x41b59d
  41b534:	outs   dx,DWORD PTR ds:[rsi]
  41b535:	outs   dx,BYTE PTR ds:[rsi]
  41b536:	jae    0x41b572
  41b538:	and    BYTE PTR [rax],ch
  41b53a:	sub    QWORD PTR [rax],rsp
  41b53d:	ins    DWORD PTR es:[rdi],dx
  41b53e:	gs (bad) 
  41b540:	outs   dx,BYTE PTR ds:[rsi]
  41b541:	jae    0x41b563
  41b543:	rex.W push rsp
  41b545:	push   rsp
  41b546:	push   rax
  41b547:	(bad)  
  41b548:	rex.W push rsp
  41b54a:	push   rsp
  41b54b:	push   rax
  41b54c:	push   rbx
  41b54d:	and    BYTE PTR [rdi+0x6e],ch
  41b550:	ins    BYTE PTR es:[rdi],dx
  41b551:	jns    0x41b57f
  41b553:	and    BYTE PTR [rax],ch
  41b555:	rex.RX sub DWORD PTR [rax],r12d
  41b558:	ins    DWORD PTR es:[rdi],dx
  41b559:	gs (bad) 
  41b55b:	outs   dx,BYTE PTR ds:[rsi]
  41b55c:	jae    0x41b57e
  41b55e:	rex.RX push rsp
  41b560:	push   rax
  41b561:	and    BYTE PTR [rdi+0x6e],ch
  41b564:	ins    BYTE PTR es:[rdi],dx
  41b565:	jns    0x41b567
  41b567:	add    BYTE PTR [rax],ah
  41b569:	and    BYTE PTR [rax],ah
  41b56b:	and    BYTE PTR [rax],ah
  41b56d:	sub    eax,0x796e612d
  41b572:	(bad)  
  41b573:	jne    0x41b5e9
  41b575:	push   0x20202020
  41b57a:	and    BYTE PTR [rax],ah
  41b57c:	and    BYTE PTR [rax+0x69],dl
  41b57f:	movsxd ebp,DWORD PTR [rbx+0x20]
  41b582:	and    ah,BYTE PTR [rcx+0x6e]
  41b585:	jns    0x41b5a9
  41b587:	and    BYTE PTR [rcx+0x75],ah
  41b58a:	je     0x41b5f4
  41b58c:	outs   dx,BYTE PTR gs:[rsi]
  41b58e:	je     0x41b5f9
  41b590:	movsxd esp,DWORD PTR [rcx+0x74]
  41b593:	imul   ebp,DWORD PTR [rdi+0x6e],0x74656d20
  41b59a:	push   0x2820646f
  41b59f:	sub    QWORD PTR [rax],rax
  41b5a2:	add    BYTE PTR [rax],al
  41b5a4:	add    BYTE PTR [rax],al
  41b5a6:	add    BYTE PTR [rax],al
  41b5a8:	and    BYTE PTR [rip+0x2d202c61],ch        # 0x2d61e20f
  41b5ae:	sub    eax,0x65707061
  41b5b3:	outs   dx,BYTE PTR ds:[rsi]
  41b5b4:	and    BYTE PTR fs:[rax],ah
  41b5b7:	and    BYTE PTR [rax],ah
  41b5b9:	and    BYTE PTR [rax],ah
  41b5bb:	and    BYTE PTR [rax],ah
  41b5bd:	rex.B jo 0x41b630
  41b5c0:	outs   dx,BYTE PTR gs:[rsi]
  41b5c2:	and    BYTE PTR fs:[rdi+rbp*2+0x20],dh
  41b5c7:	je     0x41b62a
  41b5c9:	jb     0x41b632
  41b5cb:	gs je  0x41b5ee
  41b5ce:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6877
  41b5d5:	outs   dx,BYTE PTR gs:[rsi]
  41b5d7:	and    BYTE PTR [rbp+0x70],dh
  41b5da:	ins    BYTE PTR es:[rdi],dx
  41b5db:	outs   dx,DWORD PTR ds:[rsi]
  41b5dc:	(bad)  
  41b5dd:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x2f462820
  41b5e5:	push   rbx
  41b5e6:	rex.RX push rsp
  41b5e8:	push   rax
  41b5e9:	sub    DWORD PTR [rax],eax
  41b5eb:	add    BYTE PTR [rax],al
  41b5ed:	add    BYTE PTR [rax],al
  41b5ef:	add    BYTE PTR [rax],ah
  41b5f1:	and    BYTE PTR [rax],ah
  41b5f3:	and    BYTE PTR [rax],ah
  41b5f5:	sub    eax,0x7361622d
  41b5fa:	imul   esp,DWORD PTR [rbx+0x20],0x20202020
  41b601:	and    BYTE PTR [rax],ah
  41b603:	and    BYTE PTR [rax],ah
  41b605:	push   rbp
  41b606:	jae    0x41b66d
  41b608:	and    BYTE PTR [rax+0x54],cl
  41b60b:	push   rsp
  41b60c:	push   rax
  41b60d:	and    BYTE PTR [rdx+0x61],al
  41b610:	jae    0x41b67b
  41b612:	movsxd esp,DWORD PTR [rax]
  41b614:	rex.B jne 0x41b68b
  41b617:	push   0x69746e65
  41b61c:	movsxd esp,DWORD PTR [rcx+0x74]
  41b61f:	imul   ebp,DWORD PTR [rdi+0x6e],0x29482820
  41b626:	add    BYTE PTR [rax],al
  41b628:	and    BYTE PTR [rax],ah
  41b62a:	and    BYTE PTR [rax],ah
  41b62c:	and    BYTE PTR [rip+0x6361632d],ch        # 0x63a3195f
  41b632:	gs jb  0x41b6a9
  41b635:	and    BYTE PTR [rsi+0x49],al
  41b638:	rex.WR
  41b639:	and    BYTE PTR [r8],r12b
  41b63c:	and    BYTE PTR [rbx+0x41],al
  41b63f:	and    BYTE PTR [rbx+0x65],ah
  41b642:	jb     0x41b6b8
  41b644:	imul   esp,DWORD PTR [rsi+0x69],0x65746163
  41b64b:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  41b64f:	jbe    0x41b6b6
  41b651:	jb     0x41b6bc
  41b653:	data16 jns 0x41b676
  41b656:	jo     0x41b6bd
  41b658:	gs jb  0x41b67b
  41b65b:	(bad)  
  41b65c:	addr32 (bad) 
  41b65e:	imul   ebp,DWORD PTR [rsi+0x73],0x53282074
  41b665:	push   rbx
  41b666:	sub    QWORD PTR [rax],r8
  41b669:	add    BYTE PTR [rax],al
  41b66b:	add    BYTE PTR [rax],al
  41b66d:	add    BYTE PTR [rax],al
  41b66f:	add    BYTE PTR [rax],ah
  41b671:	and    BYTE PTR [rax],ah
  41b673:	and    BYTE PTR [rax],ah
  41b675:	sub    eax,0x7061632d
  41b67a:	(bad)  
  41b67b:	je     0x41b6e5
  41b67d:	and    BYTE PTR [rcx+rcx*2+0x52],al
  41b681:	and    BYTE PTR [rax],ah
  41b683:	and    BYTE PTR [rax],ah
  41b685:	rex.XB
  41b686:	and    BYTE PTR [r9+rbp*2+0x72],spl
  41b68b:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
  41b690:	jns    0x41b6b2
  41b692:	je     0x41b703
  41b694:	and    BYTE PTR [rsi+0x65],dh
  41b697:	jb     0x41b702
  41b699:	data16 jns 0x41b6bc
  41b69c:	jo     0x41b703
  41b69e:	gs jb  0x41b6c1
  41b6a1:	(bad)  
  41b6a2:	addr32 (bad) 
  41b6a4:	imul   ebp,DWORD PTR [rsi+0x73],0x53282074
  41b6ab:	push   rbx
  41b6ac:	sub    QWORD PTR [rax],r8
  41b6af:	add    BYTE PTR [rax],ah
  41b6b1:	sub    eax,0x2d202c45
  41b6b6:	sub    eax,0x74726563
  41b6bb:	and    BYTE PTR [rbx+0x45],al
  41b6be:	push   rdx
  41b6bf:	push   rsp
  41b6c0:	pop    rbx
  41b6c1:	cmp    dl,BYTE PTR [rax+0x41]
  41b6c4:	push   rbx
  41b6c5:	push   rbx
  41b6c6:	push   rdi
  41b6c7:	rex.R pop rbp
  41b6c9:	and    BYTE PTR [rax],ah
  41b6cb:	rex.XB ins BYTE PTR es:[rdi],dx
  41b6cd:	imul   esp,DWORD PTR [rbp+0x6e],0x65632074
  41b6d4:	jb     0x41b74a
  41b6d6:	imul   esp,DWORD PTR [rsi+0x69],0x65746163
  41b6dd:	and    BYTE PTR [rsi+0x69],ah
  41b6e0:	ins    BYTE PTR es:[rdi],dx
  41b6e1:	and    BYTE PTR gs:[rcx+0x6e],ah
  41b6e5:	and    BYTE PTR fs:[rax+0x61],dh
  41b6e9:	jae    0x41b75e
  41b6eb:	ja     0x41b75c
  41b6ed:	jb     0x41b753
  41b6ef:	and    BYTE PTR [rax],ch
  41b6f1:	push   rbx
  41b6f2:	push   rbx
  41b6f3:	sub    QWORD PTR [rax],r8
  41b6f6:	add    BYTE PTR [rax],al
  41b6f8:	and    BYTE PTR [rax],ah
  41b6fa:	and    BYTE PTR [rax],ah
  41b6fc:	and    BYTE PTR [rip+0x7265632d],ch        # 0x72a71a2f
  41b702:	je     0x41b731
  41b704:	jae    0x41b77a
  41b706:	(bad)  
  41b707:	je     0x41b77e
  41b709:	jae    0x41b72b
  41b70b:	and    BYTE PTR [rax],ah
  41b70d:	push   rsi
  41b70e:	gs jb  0x41b77a
  41b711:	data16 jns 0x41b734
  41b714:	je     0x41b77e
  41b716:	and    BYTE PTR gs:[rbx+0x74],dh
  41b71a:	(bad)  
  41b71b:	je     0x41b792
  41b71d:	jae    0x41b73f
  41b71f:	outs   dx,DWORD PTR ds:[rsi]
  41b720:	data16 and BYTE PTR [rax+rbp*2+0x65],dh
  41b725:	and    BYTE PTR [rbx+0x65],dh
  41b728:	jb     0x41b7a0
  41b72a:	gs jb  0x41b74d
  41b72d:	movsxd esp,DWORD PTR [rbp+0x72]
  41b730:	je     0x41b79b
  41b732:	imul   sp,WORD PTR [rbx+0x61],0x6574
  41b738:	and    BYTE PTR [rax],ch
  41b73a:	push   rbx
  41b73b:	push   rbx
  41b73c:	sub    QWORD PTR [rax],r8
  41b73f:	add    BYTE PTR [rax],ah
  41b741:	and    BYTE PTR [rax],ah
  41b743:	and    BYTE PTR [rax],ah
  41b745:	sub    eax,0x7265632d
  41b74a:	je     0x41b779
  41b74c:	je     0x41b7c7
  41b74e:	jo     0x41b7b5
  41b750:	and    BYTE PTR [rcx+rbx*2+0x50],dl
  41b754:	and    BYTE PTR [r8],r12b
  41b757:	rex.XB
  41b758:	gs jb  0x41b7cf
  41b75b:	imul   esp,DWORD PTR [rsi+0x69],0x65746163
  41b762:	and    BYTE PTR [rsi+0x69],ah
  41b765:	ins    BYTE PTR es:[rdi],dx
  41b766:	and    BYTE PTR gs:[rcx+rdi*2+0x70],dh
  41b76b:	and    BYTE PTR gs:[rax],ch
  41b76e:	rex.R
  41b76f:	rex.RB push r10
  41b771:	(bad)  
  41b772:	push   rax
  41b773:	rex.RB
  41b774:	rex.WRB (bad) 
  41b776:	rex.RB
  41b777:	rex.WRX
  41b778:	rex.RXB sub DWORD PTR [r8],r12d
  41b77b:	sub    BYTE PTR [rbx+0x53],dl
  41b77e:	sub    QWORD PTR [rax],r8
  41b781:	add    BYTE PTR [rax],al
  41b783:	add    BYTE PTR [rax],al
  41b785:	add    BYTE PTR [rax],al
  41b787:	add    BYTE PTR [rax],ah
  41b789:	and    BYTE PTR [rax],ah
  41b78b:	and    BYTE PTR [rax],ah
  41b78d:	sub    eax,0x7069632d
  41b792:	push   0x20737265
  41b797:	rex.WR
  41b798:	rex.WB push r11
  41b79a:	push   rsp
  41b79b:	and    BYTE PTR [rax],ah
  41b79d:	push   rbx
  41b79e:	push   rbx
  41b79f:	rex.WR and BYTE PTR [rbx+0x69],r12b
  41b7a3:	jo     0x41b80d
  41b7a5:	gs jb  0x41b81b
  41b7a8:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  41b7ac:	jne    0x41b821
  41b7ae:	and    BYTE PTR gs:[rax],ch
  41b7b1:	push   rbx
  41b7b2:	push   rbx
  41b7b3:	sub    QWORD PTR [rax],r8
  41b7b6:	add    BYTE PTR [rax],al
  41b7b8:	and    BYTE PTR [rax],ah
  41b7ba:	and    BYTE PTR [rax],ah
  41b7bc:	and    BYTE PTR [rip+0x6d6f632d],ch        # 0x6db11aef
  41b7c2:	jo     0x41b836
  41b7c4:	gs jae 0x41b83a
  41b7c7:	gs and BYTE PTR fs:[rax],ah
  41b7cb:	and    BYTE PTR [rax],ah
  41b7cd:	push   rdx
  41b7ce:	gs jno 0x41b846
  41b7d1:	gs jae 0x41b848
  41b7d4:	and    BYTE PTR [rbx+0x6f],ah
  41b7d7:	ins    DWORD PTR es:[rdi],dx
  41b7d8:	jo     0x41b84c
  41b7da:	gs jae 0x41b850
  41b7dd:	gs and BYTE PTR fs:[rdx+0x65],dh
  41b7e2:	jae    0x41b854
  41b7e4:	outs   dx,DWORD PTR ds:[rsi]
  41b7e5:	outs   dx,BYTE PTR ds:[rsi]
  41b7e6:	jae    0x41b84d
  41b7e8:	and    BYTE PTR [rax],ch
  41b7ea:	jne    0x41b85f
  41b7ec:	imul   ebp,DWORD PTR [rsi+0x67],0x66656420
  41b7f3:	ins    BYTE PTR es:[rdi],dx
  41b7f4:	(bad)  
  41b7f5:	je     0x41b85c
  41b7f7:	and    BYTE PTR [rdi+0x72],ch
  41b7fa:	and    BYTE PTR [rdi+0x7a],ah
  41b7fd:	imul   esi,DWORD PTR [rax+0x29],0x0
  41b804:	add    BYTE PTR [rax],al
  41b806:	add    BYTE PTR [rax],al
  41b808:	and    BYTE PTR [rip+0x2d202c4b],ch        # 0x2d61e459
  41b80e:	sub    eax,0x666e6f63
  41b813:	imul   esp,DWORD PTR [rdi+0x20],0x454c4946
  41b81a:	and    BYTE PTR [rax],ah
  41b81c:	and    BYTE PTR [rdx+0x65],dl
  41b81f:	(bad)  
  41b820:	and    BYTE PTR fs:[rbx+0x6f],ah
  41b824:	outs   dx,BYTE PTR ds:[rsi]
  41b825:	imul   sp,WORD PTR [rdi+0x20],0x7266
  41b82b:	outs   dx,DWORD PTR ds:[rsi]
  41b82c:	ins    DWORD PTR es:[rdi],dx
  41b82d:	and    BYTE PTR [rsi+0x49],al
  41b830:	rex.WR
  41b831:	add    BYTE PTR [r8],r8b
  41b834:	add    BYTE PTR [rax],al
  41b836:	add    BYTE PTR [rax],al
  41b838:	and    BYTE PTR [rax],ah
  41b83a:	and    BYTE PTR [rax],ah
  41b83c:	and    BYTE PTR [rip+0x6e6f632d],ch        # 0x6eb11b6f
  41b842:	outs   dx,BYTE PTR ds:[rsi]
  41b843:	movsxd esi,DWORD PTR gs:[rbp+rbp*1+0x74]
  41b848:	imul   ebp,DWORD PTR [rbp+0x65],0x2074756f
  41b84f:	push   rbx
  41b850:	rex.RB
  41b851:	rex.XB
  41b852:	rex.WRXB
  41b853:	rex.WRX
  41b854:	rex.R push rbx
  41b856:	and    BYTE PTR [rax],ah
  41b858:	rex.WRB (bad) 
  41b85a:	js     0x41b8c5
  41b85c:	ins    DWORD PTR es:[rdi],dx
  41b85d:	jne    0x41b8cc
  41b85f:	and    BYTE PTR [rcx+rbp*2+0x6d],dh
  41b863:	and    BYTE PTR gs:[rcx+0x6c],ah
  41b867:	ins    BYTE PTR es:[rdi],dx
  41b868:	outs   dx,DWORD PTR ds:[rsi]
  41b869:	ja     0x41b8d0
  41b86b:	and    BYTE PTR fs:[rsi+0x6f],ah
  41b86f:	jb     0x41b891
  41b871:	movsxd ebp,DWORD PTR [rdi+0x6e]
  41b874:	outs   dx,BYTE PTR ds:[rsi]
  41b875:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  41b87a:	outs   dx,BYTE PTR ds:[rsi]
  41b87b:	add    BYTE PTR [rax],al
  41b87d:	add    BYTE PTR [rax],al
  41b87f:	add    BYTE PTR [rax],ah
  41b881:	and    BYTE PTR [rax],ah
  41b883:	and    BYTE PTR [rax],ah
  41b885:	sub    eax,0x6e6f632d
  41b88a:	outs   dx,BYTE PTR ds:[rsi]
  41b88b:	movsxd esi,DWORD PTR gs:[rbp+rbp*1+0x74]
  41b890:	outs   dx,DWORD PTR ds:[rsi]
  41b891:	and    BYTE PTR [rax+0x4f],cl
  41b894:	push   rbx
  41b895:	push   rsp
  41b896:	xor    DWORD PTR [rdx],edi
  41b898:	push   rax
  41b899:	rex.WRXB push r10
  41b89b:	push   rsp
  41b89c:	xor    DWORD PTR [rdx],edi
  41b89e:	rex.W
  41b89f:	rex.WRXB push r11
  41b8a1:	push   rsp
  41b8a2:	xor    bh,BYTE PTR [rdx]
  41b8a4:	push   rax
  41b8a5:	rex.WRXB push r10
  41b8a7:	push   rsp
  41b8a8:	xor    ah,BYTE PTR [rax]
  41b8aa:	rex.XB outs dx,DWORD PTR ds:[rsi]
  41b8ac:	outs   dx,BYTE PTR ds:[rsi]
  41b8ad:	outs   dx,BYTE PTR ds:[rsi]
  41b8ae:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x74]
  41b8b3:	outs   dx,DWORD PTR ds:[rsi]
  41b8b4:	and    BYTE PTR [rax+0x6f],ch
  41b8b7:	jae    0x41b92d
  41b8b9:	and    BYTE PTR [rax],ch
  41b8bb:	outs   dx,BYTE PTR ds:[rsi]
  41b8bc:	gs je  0x41b936
  41b8bf:	outs   dx,DWORD PTR ds:[rsi]
  41b8c0:	jb     0x41b92d
  41b8c2:	and    BYTE PTR [rbp+riz*2+0x76],ch
  41b8c6:	gs ins BYTE PTR es:[rdi],dx
  41b8c8:	sub    DWORD PTR [rax],eax
  41b8ca:	add    BYTE PTR [rax],al
  41b8cc:	add    BYTE PTR [rax],al
  41b8ce:	add    BYTE PTR [rax],al
  41b8d0:	and    BYTE PTR [rip+0x2d202c43],ch        # 0x2d61e519
  41b8d6:	sub    eax,0x746e6f63
  41b8db:	imul   ebp,DWORD PTR [rsi+0x75],0x74612d65
  41b8e2:	and    BYTE PTR [rdi+0x46],cl
  41b8e5:	rex.RX push rbx
  41b8e7:	rex.RB push r12
  41b8e9:	and    BYTE PTR [rax],ah
  41b8eb:	push   rdx
  41b8ec:	gs jae 0x41b964
  41b8ef:	ins    DWORD PTR es:[rdi],dx
  41b8f0:	gs and BYTE PTR fs:[rdx+rsi*2+0x61],dh
  41b8f6:	outs   dx,BYTE PTR ds:[rsi]
  41b8f7:	jae    0x41b95f
  41b8f9:	gs jb  0x41b91c
  41b8fc:	rex.WRXB
  41b8fd:	rex.RX
  41b8fe:	rex.RX push rbx
  41b900:	rex.RB push r12
  41b902:	add    BYTE PTR [rax],al
  41b904:	add    BYTE PTR [rax],al
  41b906:	add    BYTE PTR [rax],al
  41b908:	and    BYTE PTR [rip+0x2d202c62],ch        # 0x2d61e570
  41b90e:	sub    eax,0x6b6f6f63
  41b913:	imul   esp,DWORD PTR [rbp+0x20],0x49525453
  41b91a:	rex.WRX
  41b91b:	rex.RXB (bad) 
  41b91d:	rex.RX
  41b91e:	rex.WB
  41b91f:	rex.WR
  41b920:	and    BYTE PTR [r8],r12b
  41b923:	push   rdx
  41b924:	gs (bad) 
  41b926:	and    BYTE PTR fs:[rbx+0x6f],ah
  41b92a:	outs   dx,DWORD PTR ds:[rsi]
  41b92b:	imul   ebp,DWORD PTR [rcx+0x65],0x73
  41b92f:	and    BYTE PTR [rsi+0x72],ah
  41b932:	outs   dx,DWORD PTR ds:[rsi]
  41b933:	ins    DWORD PTR es:[rdi],dx
  41b934:	and    BYTE PTR [rbx+0x54],dl
  41b937:	push   rdx
  41b938:	rex.WB
  41b939:	rex.WRX
  41b93a:	rex.RXB (bad) 
  41b93c:	rex.RX
  41b93d:	rex.WB
  41b93e:	rex.WR
  41b93f:	and    BYTE PTR [r8],r13b
  41b942:	sub    QWORD PTR [rax],rax
  41b945:	add    BYTE PTR [rax],al
  41b947:	add    BYTE PTR [rax],ah
  41b949:	sub    eax,0x2d202c63
  41b94e:	sub    eax,0x6b6f6f63
  41b953:	imul   esp,DWORD PTR [rbp+0x2d],0x2072616a
  41b95a:	rex.RX
  41b95b:	rex.WB
  41b95c:	rex.WR
  41b95d:	and    BYTE PTR [r8],r12b
  41b960:	push   rdi
  41b961:	jb     0x41b9cc
  41b963:	je     0x41b9ca
  41b965:	and    BYTE PTR [rbx+0x6f],ah
  41b968:	outs   dx,DWORD PTR ds:[rsi]
  41b969:	imul   ebp,DWORD PTR [rcx+0x65],0x73
  41b96d:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  41b971:	rex.RX
  41b972:	rex.WB
  41b973:	rex.WR
  41b974:	and    BYTE PTR [r9+0x66],r12b
  41b978:	je     0x41b9df
  41b97a:	jb     0x41b99c
  41b97c:	outs   dx,DWORD PTR ds:[rsi]
  41b97d:	jo     0x41b9e4
  41b97f:	jb     0x41b9e2
  41b981:	je     0x41b9ec
  41b983:	outs   dx,DWORD PTR ds:[rsi]
  41b984:	outs   dx,BYTE PTR ds:[rsi]
  41b985:	and    BYTE PTR [rax],ch
  41b987:	sub    QWORD PTR [rax],rax
  41b98a:	add    BYTE PTR [rax],al
  41b98c:	add    BYTE PTR [rax],al
  41b98e:	add    BYTE PTR [rax],al
  41b990:	and    BYTE PTR [rax],ah
  41b992:	and    BYTE PTR [rax],ah
  41b994:	and    BYTE PTR [rip+0x6572632d],ch        # 0x65b41cc7
  41b99a:	(bad)  
  41b99b:	je     0x41ba02
  41b99d:	sub    eax,0x73726964
  41b9a2:	and    BYTE PTR [rax],ah
  41b9a4:	and    BYTE PTR [rbx+0x72],al
  41b9a7:	gs (bad) 
  41b9a9:	je     0x41ba10
  41b9ab:	and    BYTE PTR [rsi+0x65],ch
  41b9ae:	movsxd esp,DWORD PTR [rbp+0x73]
  41b9b1:	jae    0x41ba14
  41b9b3:	jb     0x41ba2e
  41b9b5:	and    BYTE PTR [rdi+rbp*2+0x63],ch
  41b9b9:	(bad)  
  41b9ba:	ins    BYTE PTR es:[rdi],dx
  41b9bb:	and    BYTE PTR [rcx+rbp*2+0x72],ah
  41b9bf:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
  41b9c4:	jns    0x41b9e6
  41b9c6:	push   0x61726569
  41b9cb:	jb     0x41ba30
  41b9cd:	push   0x20200079
  41b9d2:	and    BYTE PTR [rax],ah
  41b9d4:	and    BYTE PTR [rip+0x6c72632d],ch        # 0x6cb41d07
  41b9da:	data16 and BYTE PTR [rax],ah
  41b9dd:	and    BYTE PTR [rax],ah
  41b9df:	and    BYTE PTR [rax],ah
  41b9e1:	and    BYTE PTR [rax],ah
  41b9e3:	and    BYTE PTR [rax],ah
  41b9e5:	rex.XB outs dx,DWORD PTR ds:[rsi]
  41b9e7:	outs   dx,BYTE PTR ds:[rsi]
  41b9e8:	jbe    0x41ba4f
  41b9ea:	jb     0x41ba60
  41b9ec:	and    BYTE PTR [rsi+rax*2+0x20],cl
  41b9f0:	je     0x41ba61
  41b9f2:	and    BYTE PTR [rbx+0x52],al
  41b9f5:	rex.WR
  41b9f6:	rex.RX and BYTE PTR [rcx+0x6e],r13b
  41b9fa:	and    BYTE PTR [rbp+0x70],dh
  41b9fd:	ins    BYTE PTR es:[rdi],dx
  41b9fe:	outs   dx,DWORD PTR ds:[rsi]
  41b9ff:	(bad)  
  41ba00:	add    BYTE PTR fs:[rax],al
  41ba03:	add    BYTE PTR [rax],al
  41ba05:	add    BYTE PTR [rax],al
  41ba07:	add    BYTE PTR [rax],ah
  41ba09:	and    BYTE PTR [rax],ah
  41ba0b:	and    BYTE PTR [rax],ah
  41ba0d:	sub    eax,0x6c72632d
  41ba12:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x4946
  41ba19:	rex.WR
  41ba1a:	and    BYTE PTR [r8],r12b
  41ba1d:	rex.RXB
  41ba1e:	gs je  0x41ba41
  41ba21:	(bad)  
  41ba22:	and    BYTE PTR [rbx+0x52],al
  41ba25:	rex.WR and BYTE PTR [rcx+rbp*2+0x73],r13b
  41ba2a:	je     0x41ba4c
  41ba2c:	imul   ebp,DWORD PTR [rsi+0x20],0x204d4550
  41ba33:	outs   dx,WORD PTR ds:[rsi]
  41ba35:	jb     0x41baa4
  41ba37:	(bad)  
  41ba38:	je     0x41ba5a
  41ba3a:	data16 jb 0x41baac
  41ba3d:	ins    DWORD PTR es:[rdi],dx
  41ba3e:	and    BYTE PTR [rax+rbp*2+0x65],dh
  41ba42:	and    BYTE PTR [rdi+0x69],ah
  41ba45:	jbe    0x41baac
  41ba47:	outs   dx,BYTE PTR ds:[rsi]
  41ba48:	and    BYTE PTR [rsi+0x69],ah
  41ba4b:	ins    BYTE PTR es:[rdi],dx
  41ba4c:	add    BYTE PTR gs:[rax],al
  41ba4f:	add    BYTE PTR [rax],ah
  41ba51:	sub    eax,0x2d202c64
  41ba56:	sub    eax,0x61746164
  41ba5b:	and    BYTE PTR [rcx+rax*2+0x54],al
  41ba5f:	and    BYTE PTR [r8],spl
  41ba62:	and    BYTE PTR [rax],ah
  41ba64:	and    BYTE PTR [rax+0x54],cl
  41ba67:	push   rsp
  41ba68:	push   rax
  41ba69:	and    BYTE PTR [rax+0x4f],dl
  41ba6c:	push   rbx
  41ba6d:	push   rsp
  41ba6e:	and    BYTE PTR [rcx+riz*2+0x74],ah
  41ba72:	(bad)  
  41ba73:	and    BYTE PTR [rax],ch
  41ba75:	sub    QWORD PTR [rax],rax
  41ba78:	and    BYTE PTR [rax],ah
  41ba7a:	and    BYTE PTR [rax],ah
  41ba7c:	and    BYTE PTR [rip+0x7461642d],ch        # 0x74a31eaf
  41ba82:	(bad)  
  41ba83:	sub    eax,0x20776172
  41ba88:	rex.R
  41ba89:	push   r12
  41ba8b:	and    BYTE PTR [r8],spl
  41ba8e:	rex.W push rsp
  41ba90:	push   rsp
  41ba91:	push   rax
  41ba92:	and    BYTE PTR [rax+0x4f],dl
  41ba95:	push   rbx
  41ba96:	push   rsp
  41ba97:	and    BYTE PTR [rcx+riz*2+0x74],ah
  41ba9b:	(bad)  
  41ba9c:	sub    al,0x20
  41ba9e:	(bad)  
  41ba9f:	rex (bad) 
  41baa1:	and    BYTE PTR [rcx+0x6c],ah
  41baa4:	ins    BYTE PTR es:[rdi],dx
  41baa5:	outs   dx,DWORD PTR ds:[rsi]
  41baa6:	ja     0x41bb0d
  41baa8:	and    BYTE PTR fs:[rax],ch
  41baab:	sub    QWORD PTR [rax],rax
  41baae:	add    BYTE PTR [rax],al
  41bab0:	and    BYTE PTR [rax],ah
  41bab2:	and    BYTE PTR [rax],ah
  41bab4:	and    BYTE PTR [rip+0x7461642d],ch        # 0x74a31ee7
  41baba:	(bad)  
  41babb:	sub    eax,0x69637361
  41bac0:	imul   esp,DWORD PTR [rax],0x41544144
  41bac6:	and    BYTE PTR [rax],ah
  41bac8:	rex.W push rsp
  41baca:	push   rsp
  41bacb:	push   rax
  41bacc:	and    BYTE PTR [rax+0x4f],dl
  41bacf:	push   rbx
  41bad0:	push   rsp
  41bad1:	and    BYTE PTR [rcx+0x53],al
  41bad4:	rex.XB
  41bad5:	rex.WB
  41bad6:	rex.WB and BYTE PTR [r9+riz*2+0x74],spl
  41badb:	(bad)  
  41badc:	and    BYTE PTR [rax],ch
  41bade:	sub    QWORD PTR [rax],rax
  41bae1:	add    BYTE PTR [rax],al
  41bae3:	add    BYTE PTR [rax],al
  41bae5:	add    BYTE PTR [rax],al
  41bae7:	add    BYTE PTR [rax],ah
  41bae9:	and    BYTE PTR [rax],ah
  41baeb:	and    BYTE PTR [rax],ah
  41baed:	sub    eax,0x7461642d
  41baf2:	(bad)  
  41baf3:	sub    eax,0x616e6962
  41baf8:	jb     0x41bb73
  41bafa:	and    BYTE PTR [rcx+rax*2+0x54],al
  41bafe:	and    BYTE PTR [r8],spl
  41bb01:	rex.W push rsp
  41bb03:	push   rsp
  41bb04:	push   rax
  41bb05:	and    BYTE PTR [rax+0x4f],dl
  41bb08:	push   rbx
  41bb09:	push   rsp
  41bb0a:	and    BYTE PTR [rdx+0x69],ah
  41bb0d:	outs   dx,BYTE PTR ds:[rsi]
  41bb0e:	(bad)  
  41bb0f:	jb     0x41bb8a
  41bb11:	and    BYTE PTR [rcx+riz*2+0x74],ah
  41bb15:	(bad)  
  41bb16:	and    BYTE PTR [rax],ch
  41bb18:	sub    QWORD PTR [rax],rax
  41bb1b:	add    BYTE PTR [rax],al
  41bb1d:	add    BYTE PTR [rax],al
  41bb1f:	add    BYTE PTR [rax],ah
  41bb21:	and    BYTE PTR [rax],ah
  41bb23:	and    BYTE PTR [rax],ah
  41bb25:	sub    eax,0x7461642d
  41bb2a:	(bad)  
  41bb2b:	sub    eax,0x656c7275
  41bb30:	outs   dx,BYTE PTR ds:[rsi]
  41bb31:	movsxd ebp,DWORD PTR [rdi+0x64]
  41bb34:	and    BYTE PTR gs:[rcx+rax*2+0x54],al
  41bb39:	and    BYTE PTR [r8],spl
  41bb3c:	rex.W push rsp
  41bb3e:	push   rsp
  41bb3f:	push   rax
  41bb40:	and    BYTE PTR [rax+0x4f],dl
  41bb43:	push   rbx
  41bb44:	push   rsp
  41bb45:	and    BYTE PTR [rcx+riz*2+0x74],ah
  41bb49:	(bad)  
  41bb4a:	and    BYTE PTR [rbp+0x72],dh
  41bb4d:	ins    BYTE PTR es:[rdi],dx
  41bb4e:	and    BYTE PTR [rbp+0x6e],ah
  41bb51:	movsxd ebp,DWORD PTR [rdi+0x64]
  41bb54:	gs and BYTE PTR fs:[rax],ch
  41bb58:	sub    QWORD PTR [rax],rax
  41bb5b:	add    BYTE PTR [rax],al
  41bb5d:	add    BYTE PTR [rax],al
  41bb5f:	add    BYTE PTR [rax],ah
  41bb61:	and    BYTE PTR [rax],ah
  41bb63:	and    BYTE PTR [rax],ah
  41bb65:	sub    eax,0x6c65642d
  41bb6a:	gs addr32 (bad) 
  41bb6d:	je     0x41bbd8
  41bb6f:	outs   dx,DWORD PTR ds:[rsi]
  41bb70:	outs   dx,BYTE PTR ds:[rsi]
  41bb71:	and    BYTE PTR [rbx+0x54],dl
  41bb74:	push   rdx
  41bb75:	rex.WB
  41bb76:	rex.WRX
  41bb77:	rex.RXB and BYTE PTR [r8],r12b
  41bb7a:	rex.RXB push r11
  41bb7c:	push   rbx
  41bb7d:	sub    eax,0x20495041
  41bb82:	fs gs ins BYTE PTR es:[rdi],dx
  41bb85:	gs addr32 (bad) 
  41bb88:	je     0x41bbf3
  41bb8a:	outs   dx,DWORD PTR ds:[rsi]
  41bb8b:	outs   dx,BYTE PTR ds:[rsi]
  41bb8c:	and    BYTE PTR [rax+0x65],dh
  41bb8f:	jb     0x41bbfe
  41bb91:	imul   esi,DWORD PTR [rbx+0x73],0x6e6f69
  41bb98:	and    BYTE PTR [rax],ah
  41bb9a:	and    BYTE PTR [rax],ah
  41bb9c:	and    BYTE PTR [rip+0x6769642d],ch        # 0x67ab1fcf
  41bba2:	gs jae 0x41bc19
  41bba5:	and    BYTE PTR [rax],ah
  41bba7:	and    BYTE PTR [rax],ah
  41bba9:	and    BYTE PTR [rax],ah
  41bbab:	and    BYTE PTR [rax],ah
  41bbad:	push   rbp
  41bbae:	jae    0x41bc15
  41bbb0:	and    BYTE PTR [rax+0x54],cl
  41bbb3:	push   rsp
  41bbb4:	push   rax
  41bbb5:	and    BYTE PTR [rcx+rbp*2+0x67],al
  41bbb9:	gs jae 0x41bc30
  41bbbc:	and    BYTE PTR [rcx+0x75],al
  41bbbf:	je     0x41bc29
  41bbc1:	outs   dx,BYTE PTR gs:[rsi]
  41bbc3:	je     0x41bc2e
  41bbc5:	movsxd esp,DWORD PTR [rcx+0x74]
  41bbc8:	imul   ebp,DWORD PTR [rdi+0x6e],0x29482820
  41bbcf:	add    BYTE PTR [rax],ah
  41bbd1:	and    BYTE PTR [rax],ah
  41bbd3:	and    BYTE PTR [rax],ah
  41bbd5:	sub    eax,0x7369642d
  41bbda:	(bad)  
  41bbdb:	(bad)  
  41bbdc:	ins    BYTE PTR es:[rdi],dx
  41bbdd:	gs sub eax,0x74727065
  41bbe3:	and    BYTE PTR [rax],ah
  41bbe5:	rex.WB outs dx,BYTE PTR ds:[rsi]
  41bbe7:	push   0x74696269
  41bbec:	and    BYTE PTR [rbp+0x73],dh
  41bbef:	imul   ebp,DWORD PTR [rsi+0x67],0x52504520
  41bbf6:	push   rsp
  41bbf7:	and    BYTE PTR [rdi+0x72],ch
  41bbfa:	and    BYTE PTR [rax+rdx*2+0x52],cl
  41bbfe:	push   rsp
  41bbff:	and    BYTE PTR [rax],ch
  41bc01:	rex.RX sub DWORD PTR [rax],r8d
  41bc04:	add    BYTE PTR [rax],al
  41bc06:	add    BYTE PTR [rax],al
  41bc08:	and    BYTE PTR [rax],ah
  41bc0a:	and    BYTE PTR [rax],ah
  41bc0c:	and    BYTE PTR [rip+0x7369642d],ch        # 0x73ab203f
  41bc12:	(bad)  
  41bc13:	(bad)  
  41bc14:	ins    BYTE PTR es:[rdi],dx
  41bc15:	gs sub eax,0x76737065
  41bc1b:	and    BYTE PTR [rax],ah
  41bc1d:	rex.WB outs dx,BYTE PTR ds:[rsi]
  41bc1f:	push   0x74696269
  41bc24:	and    BYTE PTR [rbp+0x73],dh
  41bc27:	imul   ebp,DWORD PTR [rsi+0x67],0x53504520
  41bc2e:	push   rsi
  41bc2f:	and    BYTE PTR [rax],ch
  41bc31:	rex.RX sub DWORD PTR [rax],r8d
  41bc34:	add    BYTE PTR [rax],al
  41bc36:	add    BYTE PTR [rax],al
  41bc38:	and    BYTE PTR [rax],ah
  41bc3a:	and    BYTE PTR [rax],ah
  41bc3c:	and    BYTE PTR [rip+0x736e642d],ch        # 0x73b0206f
  41bc42:	sub    eax,0x76726573
  41bc47:	gs jb  0x41bcbd
  41bc4a:	and    BYTE PTR [rax],ah
  41bc4c:	and    BYTE PTR [rsi+rcx*2+0x53],al
  41bc50:	and    BYTE PTR [rbx+0x65],dh
  41bc53:	jb     0x41bccb
  41bc55:	gs jb  0x41bc78
  41bc58:	(bad)  
  41bc59:	fs fs jb 0x41bcd0
  41bc5d:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  41bc61:	jne    0x41bcd6
  41bc63:	cmp    ah,BYTE PTR gs:[rax]
  41bc66:	xor    DWORD PTR [rsi],ebp
  41bc68:	xor    DWORD PTR [rsi],ebp
  41bc6a:	xor    DWORD PTR [rsi],ebp
  41bc6c:	xor    DWORD PTR [rbx],edi
  41bc6e:	xor    ch,BYTE PTR [rsi]
  41bc70:	xor    ch,BYTE PTR [rsi]
  41bc72:	xor    ch,BYTE PTR [rsi]
  41bc74:	xor    al,BYTE PTR [rax]
  41bc76:	add    BYTE PTR [rax],al
  41bc78:	and    BYTE PTR [rax],ah
  41bc7a:	and    BYTE PTR [rax],ah
  41bc7c:	and    BYTE PTR [rip+0x736e642d],ch        # 0x73b020af
  41bc82:	sub    eax,0x65746e69
  41bc87:	jb     0x41bcef
  41bc89:	(bad)  
  41bc8a:	movsxd esp,DWORD PTR [rbp+0x20]
  41bc8d:	and    BYTE PTR [rcx+0x6e],cl
  41bc90:	je     0x41bcf7
  41bc92:	jb     0x41bcfa
  41bc94:	(bad)  
  41bc95:	movsxd esp,DWORD PTR [rbp+0x20]
  41bc98:	je     0x41bd09
  41bc9a:	and    BYTE PTR [rbp+0x73],dh
  41bc9d:	and    BYTE PTR gs:[rsi+0x6f],ah
  41bca1:	jb     0x41bcc3
  41bca3:	rex.R
  41bca4:	rex.WRX push rbx
  41bca6:	and    BYTE PTR [rdx+0x65],dh
  41bca9:	jno    0x41bd20
  41bcab:	gs jae 0x41bd22
  41bcae:	jae    0x41bcb0
  41bcb0:	and    BYTE PTR [rax],ah
  41bcb2:	and    BYTE PTR [rax],ah
  41bcb4:	and    BYTE PTR [rip+0x736e642d],ch        # 0x73b020e7
  41bcba:	sub    eax,0x34767069
  41bcbf:	sub    eax,0x72646461
  41bcc4:	and    BYTE PTR [rax],ah
  41bcc6:	rex.WB push r8
  41bcc8:	jbe    0x41bcfe
  41bcca:	and    BYTE PTR [rcx+0x64],ah
  41bccd:	fs jb  0x41bd35
  41bcd0:	jae    0x41bd45
  41bcd2:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  41bcd6:	jne    0x41bd4b
  41bcd8:	and    BYTE PTR gs:[rsi+0x6f],ah
  41bcdc:	jb     0x41bcfe
  41bcde:	rex.R
  41bcdf:	rex.WRX push rbx
  41bce1:	and    BYTE PTR [rdx+0x65],dh
  41bce4:	jno    0x41bd5b
  41bce6:	gs jae 0x41bd5d
  41bce9:	jae    0x41bd17
  41bceb:	and    BYTE PTR [rdi+rbp*2+0x74],ah
  41bcef:	and    BYTE PTR [rsi+0x6f],ch
  41bcf2:	je     0x41bd55
  41bcf4:	je     0x41bd5f
  41bcf6:	outs   dx,DWORD PTR ds:[rsi]
  41bcf7:	outs   dx,BYTE PTR ds:[rsi]
	...
  41bd00:	and    BYTE PTR [rax],ah
  41bd02:	and    BYTE PTR [rax],ah
  41bd04:	and    BYTE PTR [rip+0x736e642d],ch        # 0x73b02137
  41bd0a:	sub    eax,0x36767069
  41bd0f:	sub    eax,0x72646461
  41bd14:	and    BYTE PTR [rax],ah
  41bd16:	rex.WB push r8
  41bd18:	jbe    0x41bd50
  41bd1a:	and    BYTE PTR [rcx+0x64],ah
  41bd1d:	fs jb  0x41bd85
  41bd20:	jae    0x41bd95
  41bd22:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  41bd26:	jne    0x41bd9b
  41bd28:	and    BYTE PTR gs:[rsi+0x6f],ah
  41bd2c:	jb     0x41bd4e
  41bd2e:	rex.R
  41bd2f:	rex.WRX push rbx
  41bd31:	and    BYTE PTR [rdx+0x65],dh
  41bd34:	jno    0x41bdab
  41bd36:	gs jae 0x41bdad
  41bd39:	jae    0x41bd67
  41bd3b:	and    BYTE PTR [rdi+rbp*2+0x74],ah
  41bd3f:	and    BYTE PTR [rsi+0x6f],ch
  41bd42:	je     0x41bda5
  41bd44:	je     0x41bdaf
  41bd46:	outs   dx,DWORD PTR ds:[rsi]
  41bd47:	outs   dx,BYTE PTR ds:[rsi]
	...
  41bd50:	and    BYTE PTR [rip+0x2d202c44],ch        # 0x2d61e99a
  41bd56:	sub    eax,0x706d7564
  41bd5b:	sub    eax,0x64616568
  41bd60:	gs jb  0x41bd83
  41bd63:	rex.RX
  41bd64:	rex.WB
  41bd65:	rex.WR
  41bd66:	and    BYTE PTR [r8],r12b
  41bd69:	push   rdi
  41bd6a:	jb     0x41bdd5
  41bd6c:	je     0x41bdd3
  41bd6e:	and    BYTE PTR [rax+rbp*2+0x65],dh
  41bd72:	and    BYTE PTR [rdx+0x65],dh
  41bd75:	movsxd esp,DWORD PTR [rbp+0x69]
  41bd78:	jbe    0x41bddf
  41bd7a:	and    BYTE PTR fs:[rax+0x65],ch
  41bd7e:	(bad)  
  41bd7f:	fs gs jb 0x41bdf6
  41bd83:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  41bd87:	rex.RX
  41bd88:	rex.WB
  41bd89:	rex.WR
  41bd8a:	add    BYTE PTR [r8],r8b
  41bd8d:	add    BYTE PTR [rax],al
  41bd8f:	add    BYTE PTR [rax],ah
  41bd91:	and    BYTE PTR [rax],ah
  41bd93:	and    BYTE PTR [rax],ah
  41bd95:	sub    eax,0x6467652d
  41bd9a:	sub    eax,0x656c6966
  41bd9f:	and    BYTE PTR [rsi+0x49],al
  41bda2:	rex.WR
  41bda3:	and    BYTE PTR [r8],r12b
  41bda6:	rex.RB
  41bda7:	rex.RXB
  41bda8:	and    BYTE PTR [rbx+0x6f],r14b
  41bdac:	movsxd ebp,DWORD PTR [rbx+0x65]
  41bdaf:	je     0x41bdd1
  41bdb1:	jo     0x41be14
  41bdb3:	je     0x41be1d
  41bdb5:	and    BYTE PTR [rsi+0x6f],ah
  41bdb8:	jb     0x41bdda
  41bdba:	jb     0x41be1d
  41bdbc:	outs   dx,BYTE PTR ds:[rsi]
  41bdbd:	outs   dx,DWORD PTR fs:[rsi]
  41bdbf:	ins    DWORD PTR es:[rdi],dx
  41bdc0:	and    BYTE PTR [rcx+riz*2+0x74],ah
  41bdc4:	(bad)  
  41bdc5:	and    BYTE PTR [rax],ch
  41bdc7:	push   rbx
  41bdc8:	push   rbx
  41bdc9:	sub    QWORD PTR [rax],r8
  41bdcc:	add    BYTE PTR [rax],al
  41bdce:	add    BYTE PTR [rax],al
  41bdd0:	and    BYTE PTR [rax],ah
  41bdd2:	and    BYTE PTR [rax],ah
  41bdd4:	and    BYTE PTR [rip+0x676e652d],ch        # 0x67b02307
  41bdda:	imul   ebp,DWORD PTR [rsi+0x65],0x474e4520
  41bde1:	rex.WB
  41bde2:	rex.WRX
  41bde3:	and    BYTE PTR [r8],r12b
  41bde6:	rex.XB jb 0x41be62
  41bde9:	jo     0x41be5f
  41bdeb:	outs   dx,DWORD PTR ds:[rsi]
  41bdec:	and    BYTE PTR [rbp+0x6e],ah
  41bdef:	imul   ebp,DWORD PTR [esi+0x65],0x73752820
  41bdf7:	and    BYTE PTR gs:[rdx],ah
  41bdfa:	sub    eax,0x676e652d
  41bdff:	imul   ebp,DWORD PTR [rsi+0x65],0x73696c20
  41be06:	je     0x41be2a
  41be08:	and    BYTE PTR [rsi+0x6f],ah
  41be0b:	jb     0x41be2d
  41be0d:	ins    BYTE PTR es:[rdi],dx
  41be0e:	imul   esi,DWORD PTR [rbx+0x74],0x53282029
  41be15:	push   rbx
  41be16:	sub    QWORD PTR [rax],r8
  41be19:	add    BYTE PTR [rax],al
  41be1b:	add    BYTE PTR [rax],al
  41be1d:	add    BYTE PTR [rax],al
  41be1f:	add    BYTE PTR [rax],ah
  41be21:	and    BYTE PTR [rax],ah
  41be23:	and    BYTE PTR [rax],ah
  41be25:	sub    eax,0x7078652d
  41be2a:	movsxd esi,DWORD PTR gs:[rcx+rsi*1+0x30]
  41be2f:	xor    BYTE PTR [rip+0x656d6974],ch        # 0x65af27a9
  41be35:	outs   dx,DWORD PTR ds:[rsi]
  41be36:	jne    0x41beac
  41be38:	and    BYTE PTR [rbx+0x45],dl
  41be3b:	rex.XB
  41be3c:	rex.WRXB
  41be3d:	rex.WRX
  41be3e:	rex.R push rbx
  41be40:	and    BYTE PTR [rax+0x6f],cl
  41be43:	ja     0x41be65
  41be45:	ins    BYTE PTR es:[rdi],dx
  41be46:	outs   dx,DWORD PTR ds:[rsi]
  41be47:	outs   dx,BYTE PTR ds:[rsi]
  41be48:	and    BYTE PTR [edi+ebp*2+0x20],dh
  41be4d:	ja     0x41beb0
  41be4f:	imul   esi,DWORD PTR [rax+riz*1+0x66],0x3120726f
  41be57:	xor    BYTE PTR [rax],dh
  41be59:	sub    eax,0x746e6f63
  41be5e:	imul   ebp,DWORD PTR [rsi+0x75],0x48282065
  41be65:	sub    DWORD PTR [rax],eax
  41be67:	add    BYTE PTR [rax],ah
  41be69:	sub    eax,0x2d202c66
  41be6e:	sub    eax,0x6c696166
  41be73:	and    BYTE PTR [rax],ah
  41be75:	and    BYTE PTR [rax],ah
  41be77:	and    BYTE PTR [rax],ah
  41be79:	and    BYTE PTR [rax],ah
  41be7b:	and    BYTE PTR [rax],ah
  41be7d:	rex.RX (bad) 
  41be7f:	imul   ebp,DWORD PTR [rax+riz*1+0x73],0x6e656c69
  41be87:	je     0x41bef5
  41be89:	jns    0x41beab
  41be8b:	sub    BYTE PTR [rsi+0x6f],ch
  41be8e:	and    BYTE PTR [rdi+0x75],ch
  41be91:	je     0x41bf03
  41be93:	jne    0x41bf09
  41be95:	and    BYTE PTR [rcx+0x74],ah
  41be98:	and    BYTE PTR [rcx+0x6c],ah
  41be9b:	ins    BYTE PTR es:[rdi],dx
  41be9c:	sub    DWORD PTR [rax],esp
  41be9e:	outs   dx,DWORD PTR ds:[rsi]
  41be9f:	outs   dx,BYTE PTR ds:[rsi]
  41bea0:	and    BYTE PTR [rax+0x54],cl
  41bea3:	push   rsp
  41bea4:	push   rax
  41bea5:	and    BYTE PTR [rbp+0x72],ah
  41bea8:	jb     0x41bf19
  41beaa:	jb     0x41bf1f
  41beac:	and    BYTE PTR [rax],ch
  41beae:	sub    QWORD PTR [rax],rax
  41beb1:	add    BYTE PTR [rax],al
  41beb3:	add    BYTE PTR [rax],al
  41beb5:	add    BYTE PTR [rax],al
  41beb7:	add    BYTE PTR [rax],ah
  41beb9:	and    BYTE PTR [rax],ah
  41bebb:	and    BYTE PTR [rax],ah
  41bebd:	sub    eax,0x6961662d
  41bec2:	ins    BYTE PTR es:[rdi],dx
  41bec3:	sub    eax,0x6c726165
  41bec8:	jns    0x41beea
  41beca:	and    BYTE PTR [rax],ah
  41becc:	and    BYTE PTR [rsi+0x61],al
  41becf:	imul   ebp,DWORD PTR [rax+riz*1+0x6f],0x6966206e
  41bed7:	jb     0x41bf4c
  41bed9:	je     0x41befb
  41bedb:	je     0x41bf4f
  41bedd:	(bad)  
  41bede:	outs   dx,BYTE PTR ds:[rsi]
  41bedf:	jae    0x41bf47
  41bee1:	gs jb  0x41bf04
  41bee4:	gs jb  0x41bf59
  41bee7:	outs   dx,DWORD PTR ds:[rsi]
  41bee8:	jb     0x41bf16
  41beea:	and    BYTE PTR [rdi+rbp*2+0x20],ah
  41beee:	outs   dx,BYTE PTR ds:[rsi]
  41beef:	outs   dx,DWORD PTR ds:[rsi]
  41bef0:	je     0x41bf12
  41bef2:	movsxd ebp,DWORD PTR [rdi+0x6e]
  41bef5:	je     0x41bf60
  41bef7:	outs   dx,BYTE PTR ds:[rsi]
  41bef8:	jne    0x41bf5f
  41befa:	add    BYTE PTR [rax],al
  41befc:	add    BYTE PTR [rax],al
  41befe:	add    BYTE PTR [rax],al
  41bf00:	and    BYTE PTR [rax],ah
  41bf02:	and    BYTE PTR [rax],ah
  41bf04:	and    BYTE PTR [rip+0x6c61662d],ch        # 0x6ca32537
  41bf0a:	jae    0x41bf71
  41bf0c:	sub    eax,0x72617473
  41bf11:	je     0x41bf33
  41bf13:	and    BYTE PTR [rax],ah
  41bf15:	rex.RB outs dx,BYTE PTR ds:[rsi]
  41bf17:	(bad)  
  41bf18:	(bad)  
  41bf19:	ins    BYTE PTR es:[rdi],dx
  41bf1a:	and    BYTE PTR gs:[rsp+rcx*2+0x53],dl
  41bf1f:	and    BYTE PTR [rsi+0x61],al
  41bf22:	ins    BYTE PTR es:[rdi],dx
  41bf23:	jae    0x41bf8a
  41bf25:	and    BYTE PTR [rbx+0x74],dl
  41bf28:	(bad)  
  41bf29:	jb     0x41bf9f
  41bf2b:	add    BYTE PTR cs:[rax],al
  41bf2e:	add    BYTE PTR [rax],al
  41bf30:	and    BYTE PTR [rip+0x2d202c46],ch        # 0x2d61eb7c
  41bf36:	sub    eax,0x6d726f66
  41bf3b:	and    BYTE PTR [rbx+0x4f],al
  41bf3e:	rex.WRX push rsp
  41bf40:	rex.RB
  41bf41:	rex.WRX push rsp
  41bf43:	and    BYTE PTR [rax],ah
  41bf45:	push   rbx
  41bf46:	jo     0x41bfad
  41bf48:	movsxd ebp,DWORD PTR [rcx+0x66]
  41bf4b:	jns    0x41bf6d
  41bf4d:	rex.W push rsp
  41bf4f:	push   rsp
  41bf50:	push   rax
  41bf51:	and    BYTE PTR [rbp+0x75],ch
  41bf54:	ins    BYTE PTR es:[rdi],dx
  41bf55:	je     0x41bfc0
  41bf57:	jo     0x41bfba
  41bf59:	jb     0x41bfcf
  41bf5b:	and    BYTE PTR [rax+0x4f],dl
  41bf5e:	push   rbx
  41bf5f:	push   rsp
  41bf60:	and    BYTE PTR [rcx+riz*2+0x74],ah
  41bf64:	(bad)  
  41bf65:	and    BYTE PTR [rax],ch
  41bf67:	sub    QWORD PTR [rax],rax
  41bf6a:	add    BYTE PTR [rax],al
  41bf6c:	add    BYTE PTR [rax],al
  41bf6e:	add    BYTE PTR [rax],al
  41bf70:	and    BYTE PTR [rax],ah
  41bf72:	and    BYTE PTR [rax],ah
  41bf74:	and    BYTE PTR [rip+0x726f662d],ch        # 0x72b125a7
  41bf7a:	ins    DWORD PTR es:[rdi],dx
  41bf7b:	sub    eax,0x69727473
  41bf80:	outs   dx,BYTE PTR ds:[rsi]
  41bf81:	and    BYTE PTR [ebx+0x54],dl
  41bf85:	push   rdx
  41bf86:	rex.WB
  41bf87:	rex.WRX
  41bf88:	rex.RXB and BYTE PTR [r8],r12b
  41bf8b:	push   rbx
  41bf8c:	jo     0x41bff3
  41bf8e:	movsxd ebp,DWORD PTR [rcx+0x66]
  41bf91:	jns    0x41bfb3
  41bf93:	rex.W push rsp
  41bf95:	push   rsp
  41bf96:	push   rax
  41bf97:	and    BYTE PTR [rbp+0x75],ch
  41bf9a:	ins    BYTE PTR es:[rdi],dx
  41bf9b:	je     0x41c006
  41bf9d:	jo     0x41c000
  41bf9f:	jb     0x41c015
  41bfa1:	and    BYTE PTR [rax+0x4f],dl
  41bfa4:	push   rbx
  41bfa5:	push   rsp
  41bfa6:	and    BYTE PTR [rcx+riz*2+0x74],ah
  41bfaa:	(bad)  
  41bfab:	and    BYTE PTR [rax],ch
  41bfad:	sub    QWORD PTR [rax],rax
  41bfb0:	and    BYTE PTR [rax],ah
  41bfb2:	and    BYTE PTR [rax],ah
  41bfb4:	and    BYTE PTR [rip+0x7074662d],ch        # 0x70b625e7
  41bfba:	sub    eax,0x6f636361
  41bfbf:	jne    0x41c02f
  41bfc1:	je     0x41bfe3
  41bfc3:	rex.R
  41bfc4:	push   r12
  41bfc6:	and    BYTE PTR [r8],spl
  41bfc9:	movsxd esp,DWORD PTR [r11+0x6f]
  41bfcd:	jne    0x41c03d
  41bfcf:	je     0x41bff1
  41bfd1:	fs (bad) 
  41bfd3:	je     0x41c036
  41bfd5:	and    BYTE PTR [rbx+0x74],dh
  41bfd8:	jb     0x41c043
  41bfda:	outs   dx,BYTE PTR ds:[rsi]
  41bfdb:	and    BYTE PTR [eax],ch
  41bfde:	rex.RX sub DWORD PTR [rax],r8d
  41bfe1:	add    BYTE PTR [rax],al
  41bfe3:	add    BYTE PTR [rax],al
  41bfe5:	add    BYTE PTR [rax],al
  41bfe7:	add    BYTE PTR [rax],ah
  41bfe9:	and    BYTE PTR [rax],ah
  41bfeb:	and    BYTE PTR [rax],ah
  41bfed:	sub    eax,0x7074662d
  41bff2:	sub    eax,0x65746c61
  41bff7:	jb     0x41c067
  41bff9:	(bad)  
  41bffa:	je     0x41c065
  41bffc:	jbe    0x41c063
  41bffe:	sub    eax,0x752d6f74
  41c003:	jae    0x41c06a
  41c005:	jb     0x41c027
  41c007:	rex.XB
  41c008:	rex.WRXB
  41c009:	rex.WRB
  41c00a:	rex.WRB
  41c00b:	rex.B
  41c00c:	rex.WRX
  41c00d:	and    BYTE PTR [rax],r12b
  41c010:	push   rbx
  41c011:	je     0x41c085
  41c013:	imul   ebp,DWORD PTR [rsi+0x67],0x206f7420
  41c01a:	jb     0x41c081
  41c01c:	jo     0x41c08a
  41c01e:	(bad)  
  41c01f:	movsxd esp,DWORD PTR [rbp+0x20]
  41c022:	and    dl,BYTE PTR [rbp+0x53]
  41c025:	rex.RB push r10
  41c027:	and    BYTE PTR [rbx+0x6e],bl
  41c02a:	(bad)  
  41c02b:	ins    DWORD PTR es:[rdi],dx
  41c02c:	gs pop rbp
  41c02e:	and    ah,BYTE PTR [rax]
  41c030:	sub    BYTE PTR [rsi+0x29],al
  41c033:	add    BYTE PTR [rax],al
  41c035:	add    BYTE PTR [rax],al
  41c037:	add    BYTE PTR [rax],ah
  41c039:	and    BYTE PTR [rax],ah
  41c03b:	and    BYTE PTR [rax],ah
  41c03d:	sub    eax,0x7074662d
  41c042:	sub    eax,0x61657263
  41c047:	je     0x41c0ae
  41c049:	sub    eax,0x73726964
  41c04e:	and    BYTE PTR [rax],ah
  41c050:	rex.XB jb 0x41c0b8
  41c053:	(bad)  
  41c054:	je     0x41c0bb
  41c056:	and    BYTE PTR [rax+rbp*2+0x65],dh
  41c05a:	and    BYTE PTR [rdx+0x65],dh
  41c05d:	ins    DWORD PTR es:[rdi],dx
  41c05e:	outs   dx,DWORD PTR ds:[rsi]
  41c05f:	je     0x41c0c6
  41c061:	and    BYTE PTR [rcx+rbp*2+0x72],ah
  41c065:	jae    0x41c087
  41c067:	imul   esp,DWORD PTR [rsi+0x20],0x20746f6e
  41c06e:	jo     0x41c0e2
  41c070:	gs jae 0x41c0d8
  41c073:	outs   dx,BYTE PTR ds:[rsi]
  41c074:	je     0x41c096
  41c076:	sub    BYTE PTR [rsi+0x29],al
  41c079:	add    BYTE PTR [rax],al
  41c07b:	add    BYTE PTR [rax],al
  41c07d:	add    BYTE PTR [rax],al
  41c07f:	add    BYTE PTR [rax],ah
  41c081:	and    BYTE PTR [rax],ah
  41c083:	and    BYTE PTR [rax],ah
  41c085:	sub    eax,0x7074662d
  41c08a:	sub    eax,0x6874656d
  41c08f:	outs   dx,DWORD PTR ds:[rsi]
  41c090:	and    BYTE PTR fs:[rbx+0x4d],bl
  41c094:	push   rbp
  41c095:	rex.WR push rsp
  41c097:	rex.WB
  41c098:	rex.XB push r15
  41c09a:	rex.R (bad) 
  41c09c:	rex.WRX
  41c09d:	rex.WRXB
  41c09e:	rex.XB push r15
  41c0a0:	rex.R (bad) 
  41c0a2:	push   rbx
  41c0a3:	rex.WB
  41c0a4:	rex.WRX
  41c0a5:	rex.RXB
  41c0a6:	rex.WR
  41c0a7:	rex.RB
  41c0a8:	rex.XB push r15
  41c0aa:	rex.R pop rbp
  41c0ac:	and    BYTE PTR [rax],ah
  41c0ae:	rex.XB outs dx,DWORD PTR ds:[rsi]
  41c0b0:	outs   dx,BYTE PTR ds:[rsi]
  41c0b1:	je     0x41c125
  41c0b3:	outs   dx,DWORD PTR ds:[rsi]
  41c0b4:	ins    BYTE PTR es:[rdi],dx
  41c0b5:	and    BYTE PTR [rbx+0x57],al
  41c0b8:	and    BYTE PTR [rbp+0x73],r14b
  41c0bc:	(bad)  
  41c0bd:	and    BYTE PTR gs:[eax],ch
  41c0c1:	rex.RX sub DWORD PTR [rax],r8d
  41c0c4:	add    BYTE PTR [rax],al
  41c0c6:	add    BYTE PTR [rax],al
  41c0c8:	and    BYTE PTR [rax],ah
  41c0ca:	and    BYTE PTR [rax],ah
  41c0cc:	and    BYTE PTR [rip+0x7074662d],ch        # 0x70b626ff
  41c0d2:	sub    eax,0x76736170
  41c0d7:	and    BYTE PTR [rax],ah
  41c0d9:	and    BYTE PTR [rax],ah
  41c0db:	and    BYTE PTR [rax],ah
  41c0dd:	push   rbp
  41c0de:	jae    0x41c145
  41c0e0:	and    BYTE PTR [rax+0x41],dl
  41c0e3:	push   rbx
  41c0e4:	push   rsi
  41c0e5:	(bad)  
  41c0e6:	rex.RB push r8
  41c0e8:	push   rbx
  41c0e9:	push   rsi
  41c0ea:	and    BYTE PTR [rcx+0x6e],ch
  41c0ed:	jae    0x41c163
  41c0ef:	gs (bad) 
  41c0f1:	and    BYTE PTR fs:[rdi+0x66],ch
  41c0f5:	and    BYTE PTR [rax+0x4f],dl
  41c0f8:	push   rdx
  41c0f9:	push   rsp
  41c0fa:	and    BYTE PTR [rax],ch
  41c0fc:	rex.RX sub DWORD PTR [rax],r8d
  41c0ff:	add    BYTE PTR [rax],ah
  41c101:	sub    eax,0x2d202c50
  41c106:	sub    eax,0x2d707466
  41c10b:	jo     0x41c17c
  41c10d:	jb     0x41c183
  41c10f:	and    BYTE PTR [rcx+0x44],al
  41c112:	push   rdx
  41c113:	and    BYTE PTR [rax],ah
  41c115:	push   rbp
  41c116:	jae    0x41c17d
  41c118:	and    BYTE PTR [rax+0x4f],dl
  41c11b:	push   rdx
  41c11c:	push   rsp
  41c11d:	and    BYTE PTR [rdi+0x69],dh
  41c120:	je     0x41c18a
  41c122:	and    BYTE PTR [rdi+0x69],ah
  41c125:	jbe    0x41c18c
  41c127:	outs   dx,BYTE PTR ds:[rsi]
  41c128:	and    BYTE PTR [rcx+0x64],ah
  41c12b:	fs jb  0x41c193
  41c12e:	jae    0x41c1a3
  41c130:	and    BYTE PTR [rcx+0x6e],ch
  41c133:	jae    0x41c1a9
  41c135:	gs (bad) 
  41c137:	and    BYTE PTR fs:[rdi+0x66],ch
  41c13b:	and    BYTE PTR [rax+0x41],dl
  41c13e:	push   rbx
  41c13f:	push   rsi
  41c140:	and    BYTE PTR [rax],ch
  41c142:	rex.RX sub DWORD PTR [rax],r8d
  41c145:	add    BYTE PTR [rax],al
  41c147:	add    BYTE PTR [rax],ah
  41c149:	and    BYTE PTR [rax],ah
  41c14b:	and    BYTE PTR [rax],ah
  41c14d:	sub    eax,0x7074662d
  41c152:	sub    eax,0x70696b73
  41c157:	sub    eax,0x76736170
  41c15c:	sub    eax,0x20207069
  41c161:	push   rbx
  41c162:	imul   ebp,DWORD PTR [rcx+0x70],0x20
  41c166:	je     0x41c1d0
  41c168:	and    BYTE PTR gs:[rcx+0x50],cl
  41c16c:	and    BYTE PTR [rcx+0x64],ah
  41c16f:	fs jb  0x41c1d7
  41c172:	jae    0x41c1e7
  41c174:	and    BYTE PTR [rsi+0x6f],ah
  41c177:	jb     0x41c199
  41c179:	push   rax
  41c17a:	push   r11
  41c17c:	push   rsi
  41c17d:	and    BYTE PTR [rax],ch
  41c17f:	rex.RX sub DWORD PTR [rdx],r9d
  41c182:	and    BYTE PTR [rax],ah
  41c184:	and    BYTE PTR [rax],ah
  41c186:	and    BYTE PTR [rip+0x7074662d],ch        # 0x70b627b9
  41c18c:	sub    eax,0x74657270
  41c191:	and    BYTE PTR [rax],ah
  41c193:	and    BYTE PTR [rax],ah
  41c195:	and    BYTE PTR [rax],ah
  41c197:	push   rbx
  41c198:	outs   dx,BYTE PTR gs:[rsi]
  41c19a:	and    BYTE PTR fs:[rax+0x52],dl
  41c19e:	rex.RB push r12
  41c1a0:	and    BYTE PTR [rdx+0x65],ah
  41c1a3:	outs   dx,WORD PTR ds:[rsi]
  41c1a5:	jb     0x41c20c
  41c1a7:	and    BYTE PTR [rax+0x41],dl
  41c1aa:	push   rbx
  41c1ab:	push   rsi
  41c1ac:	and    BYTE PTR [rax],ch
  41c1ae:	outs   dx,WORD PTR ds:[rsi]
  41c1b0:	jb     0x41c1d2
  41c1b2:	fs jb  0x41c21b
  41c1b5:	je     0x41c227
  41c1b7:	sub    DWORD PTR fs:[rax],esp
  41c1ba:	sub    BYTE PTR [rsi+0x29],al
  41c1bd:	add    BYTE PTR [rax],al
  41c1bf:	add    BYTE PTR [rax],ah
  41c1c1:	and    BYTE PTR [rax],ah
  41c1c3:	and    BYTE PTR [rax],ah
  41c1c5:	sub    eax,0x7074662d
  41c1ca:	sub    eax,0x2d6c7373
  41c1cf:	movsxd esp,DWORD PTR [rbx+0x63]
  41c1d2:	and    BYTE PTR [rax],ah
  41c1d4:	and    BYTE PTR [rbx+0x65],dl
  41c1d7:	outs   dx,BYTE PTR ds:[rsi]
  41c1d8:	and    BYTE PTR fs:[rbx+0x43],al
  41c1dc:	rex.XB and BYTE PTR [r9+0x66],spl
  41c1e0:	je     0x41c247
  41c1e2:	jb     0x41c204
  41c1e4:	(bad)  
  41c1e5:	jne    0x41c25b
  41c1e7:	push   0x69746e65
  41c1ec:	movsxd esp,DWORD PTR [rcx+0x74]
  41c1ef:	imul   ebp,DWORD PTR [rsi+0x67],0x29462820
  41c1f6:	add    BYTE PTR [rax],al
  41c1f8:	and    BYTE PTR [rax],ah
  41c1fa:	and    BYTE PTR [rax],ah
  41c1fc:	and    BYTE PTR [rip+0x7074662d],ch        # 0x70b6282f
  41c202:	sub    eax,0x2d6c7373
  41c207:	movsxd esp,DWORD PTR [rbx+0x63]
  41c20a:	sub    eax,0x65646f6d
  41c20f:	and    BYTE PTR [rcx+0x43],al
  41c212:	push   rsp
  41c213:	rex.WB push r14
  41c215:	rex.RB (bad) 
  41c217:	push   rax
  41c218:	push   r11
  41c21a:	push   rbx
  41c21b:	rex.WB push r14
  41c21d:	and    BYTE PTR [r8],r12b
  41c220:	push   rbx
  41c221:	gs je  0x41c244
  41c224:	rex.XB
  41c225:	rex.XB
  41c226:	rex.XB and BYTE PTR [r13+0x6f],bpl
  41c22a:	fs and BYTE PTR gs:[rax],ch
  41c22e:	rex.RX sub DWORD PTR [rax],r8d
  41c231:	add    BYTE PTR [rax],al
  41c233:	add    BYTE PTR [rax],al
  41c235:	add    BYTE PTR [rax],al
  41c237:	add    BYTE PTR [rax],ah
  41c239:	and    BYTE PTR [rax],ah
  41c23b:	and    BYTE PTR [rax],ah
  41c23d:	sub    eax,0x7074662d
  41c242:	sub    eax,0x2d6c7373
  41c247:	movsxd ebp,DWORD PTR [rdi+0x6e]
  41c24a:	je     0x41c2be
  41c24c:	outs   dx,DWORD PTR ds:[rsi]
  41c24d:	ins    BYTE PTR es:[rdi],dx
  41c24e:	and    BYTE PTR [rax],ah
  41c250:	push   rdx
  41c251:	gs jno 0x41c2c9
  41c254:	imul   esi,DWORD PTR [rdx+0x65],0x4c535320
  41c25b:	(bad)  
  41c25c:	push   rsp
  41c25d:	rex.WR push rbx
  41c25f:	and    BYTE PTR [rsi+0x6f],ah
  41c262:	jb     0x41c284
  41c264:	rex.RX push rsp
  41c266:	push   rax
  41c267:	and    BYTE PTR [rdi+rbp*2+0x67],ch
  41c26b:	imul   ebp,DWORD PTR [rsi+0x2c],0x656c6320
  41c272:	(bad)  
  41c273:	jb     0x41c295
  41c275:	outs   dx,WORD PTR ds:[rsi]
  41c277:	jb     0x41c299
  41c279:	je     0x41c2ed
  41c27b:	(bad)  
  41c27c:	outs   dx,BYTE PTR ds:[rsi]
  41c27d:	jae    0x41c2e5
  41c27f:	gs jb  0x41c2a2
  41c282:	sub    BYTE PTR [rsi+0x29],al
  41c285:	add    BYTE PTR [rax],al
  41c287:	add    BYTE PTR [rax],ah
  41c289:	sub    eax,0x2d202c47
  41c28e:	sub    eax,0x20746567
  41c293:	and    BYTE PTR [rax],ah
  41c295:	and    BYTE PTR [rax],ah
  41c297:	and    BYTE PTR [rax],ah
  41c299:	and    BYTE PTR [rax],ah
  41c29b:	and    BYTE PTR [rax],ah
  41c29d:	push   rbx
  41c29e:	outs   dx,BYTE PTR gs:[rsi]
  41c2a0:	and    BYTE PTR fs:[rax+rbp*2+0x65],dh
  41c2a5:	and    BYTE PTR [rip+0x61642064],ch        # 0x61a5e30f
  41c2ab:	je     0x41c30e
  41c2ad:	and    BYTE PTR [rdi+0x69],dh
  41c2b0:	je     0x41c31a
  41c2b2:	and    BYTE PTR [rcx+0x20],ah
  41c2b5:	rex.W push rsp
  41c2b7:	push   rsp
  41c2b8:	push   rax
  41c2b9:	and    BYTE PTR [rdi+0x45],al
  41c2bc:	push   rsp
  41c2bd:	and    BYTE PTR [rax],ch
  41c2bf:	sub    QWORD PTR [rax],rax
  41c2c2:	add    BYTE PTR [rax],al
  41c2c4:	add    BYTE PTR [rax],al
  41c2c6:	add    BYTE PTR [rax],al
  41c2c8:	and    BYTE PTR [rip+0x2d202c67],ch        # 0x2d61ef35
  41c2ce:	sub    eax,0x626f6c67
  41c2d3:	outs   dx,DWORD PTR ds:[rsi]
  41c2d4:	data16 data16 and BYTE PTR [rax],ah
  41c2d8:	and    BYTE PTR [rax],ah
  41c2da:	and    BYTE PTR [rax],ah
  41c2dc:	and    BYTE PTR [rcx+rbp*2+0x73],al
  41c2e0:	(bad)  
  41c2e1:	(bad)  
  41c2e2:	ins    BYTE PTR es:[rdi],dx
  41c2e3:	and    BYTE PTR gs:[rbp+0x52],dl
  41c2e7:	rex.WR and BYTE PTR [rbx+0x65],r14b
  41c2eb:	jno    0x41c362
  41c2ed:	outs   dx,BYTE PTR gs:[rsi]
  41c2ef:	movsxd esp,DWORD PTR [rbp+0x73]
  41c2f2:	and    BYTE PTR [rcx+0x6e],ah
  41c2f5:	and    BYTE PTR fs:[rdx+0x61],dh
  41c2f9:	outs   dx,BYTE PTR ds:[rsi]
  41c2fa:	addr32 gs jae 0x41c31e
  41c2fe:	jne    0x41c373
  41c300:	imul   ebp,DWORD PTR [rsi+0x67],0x207d7b20
  41c307:	(bad)  
  41c308:	outs   dx,BYTE PTR ds:[rsi]
  41c309:	and    BYTE PTR fs:[rbx+0x5d],bl
  41c30d:	add    BYTE PTR [rax],al
  41c30f:	add    BYTE PTR [rax],ah
  41c311:	sub    eax,0x2d202c48
  41c316:	sub    eax,0x64616568
  41c31b:	gs jb  0x41c33e
  41c31e:	rex.WR
  41c31f:	rex.WB
  41c320:	rex.WRX
  41c321:	and    BYTE PTR [r8],r12b
  41c324:	and    BYTE PTR [rax+0x61],dl
  41c327:	jae    0x41c39c
  41c329:	and    BYTE PTR [rbx+0x75],ah
  41c32c:	jae    0x41c3a2
  41c32e:	outs   dx,DWORD PTR ds:[rsi]
  41c32f:	ins    DWORD PTR es:[rdi],dx
  41c330:	and    BYTE PTR [rax+0x65],ch
  41c333:	(bad)  
  41c334:	fs gs jb 0x41c358
  41c338:	rex.WR
  41c339:	rex.WB
  41c33a:	rex.WRX
  41c33b:	and    BYTE PTR [r15+rbp*2+0x20],r14b
  41c340:	jae    0x41c3a7
  41c342:	jb     0x41c3ba
  41c344:	gs jb  0x41c367
  41c347:	sub    BYTE PTR [rax+0x29],cl
  41c34a:	add    BYTE PTR [rax],al
  41c34c:	add    BYTE PTR [rax],al
  41c34e:	add    BYTE PTR [rax],al
  41c350:	and    BYTE PTR [rip+0x2d202c49],ch        # 0x2d61ef9f
  41c356:	sub    eax,0x64616568
  41c35b:	and    BYTE PTR [rax],ah
  41c35d:	and    BYTE PTR [rax],ah
  41c35f:	and    BYTE PTR [rax],ah
  41c361:	and    BYTE PTR [rax],ah
  41c363:	and    BYTE PTR [rax],ah
  41c365:	push   rbx
  41c366:	push   0x6420776f
  41c36b:	outs   dx,DWORD PTR ds:[rsi]
  41c36c:	movsxd esi,DWORD PTR [rbp+0x6d]
  41c36f:	outs   dx,BYTE PTR gs:[rsi]
  41c371:	je     0x41c393
  41c373:	imul   ebp,DWORD PTR [rsi+0x66],0x6e6f206f
  41c37a:	ins    BYTE PTR es:[rdi],dx
  41c37b:	jns    0x41c37d
  41c37d:	add    BYTE PTR [rax],al
  41c37f:	add    BYTE PTR [rax],ah
  41c381:	sub    eax,0x2d202c68
  41c386:	sub    eax,0x706c6568
  41c38b:	and    BYTE PTR [rax],ah
  41c38d:	and    BYTE PTR [rax],ah
  41c38f:	and    BYTE PTR [rax],ah
  41c391:	and    BYTE PTR [rax],ah
  41c393:	and    BYTE PTR [rax],ah
  41c395:	push   rsp
  41c396:	push   0x68207369
  41c39b:	gs ins BYTE PTR es:[rdi],dx
  41c39d:	jo     0x41c3bf
  41c39f:	je     0x41c406
  41c3a1:	js     0x41c417
  41c3a3:	add    BYTE PTR [rax],al
  41c3a5:	add    BYTE PTR [rax],al
  41c3a7:	add    BYTE PTR [rax],ah
  41c3a9:	and    BYTE PTR [rax],ah
  41c3ab:	and    BYTE PTR [rax],ah
  41c3ad:	sub    eax,0x736f682d
  41c3b2:	je     0x41c424
  41c3b4:	jne    0x41c418
  41c3b6:	ins    DWORD PTR es:[rdi],dx
  41c3b7:	fs xor eax,0x35444d20
  41c3bd:	and    BYTE PTR [rax],ah
  41c3bf:	rex.W
  41c3c0:	gs js  0x41c3f0
  41c3c3:	outs   dx,BYTE PTR gs:[rsi]
  41c3c5:	movsxd ebp,DWORD PTR [rdi+0x64]
  41c3c8:	gs and BYTE PTR fs:[rbp+0x44],cl
  41c3cd:	xor    eax,0x72747320
  41c3d2:	imul   ebp,DWORD PTR [rsi+0x67],0x20666f20
  41c3d9:	je     0x41c443
  41c3db:	and    BYTE PTR gs:[rax+0x6f],ch
  41c3df:	jae    0x41c455
  41c3e1:	and    BYTE PTR [rax+0x75],dh
  41c3e4:	(bad)  
  41c3e5:	ins    BYTE PTR es:[rdi],dx
  41c3e6:	imul   esp,DWORD PTR [rbx+0x20],0x2e79656b
  41c3ed:	and    BYTE PTR [rax],ch
  41c3ef:	push   rbx
  41c3f0:	push   rbx
  41c3f1:	sub    QWORD PTR [rax],rax
  41c3f4:	add    BYTE PTR [rax],al
  41c3f6:	add    BYTE PTR [rax],al
  41c3f8:	and    BYTE PTR [rip+0x2d202c30],ch        # 0x2d61f02e
  41c3fe:	sub    eax,0x70747468
  41c403:	xor    DWORD PTR [rsi],ebp
  41c405:	xor    BYTE PTR [rax],ah
  41c407:	and    BYTE PTR [rax],ah
  41c409:	and    BYTE PTR [rax],ah
  41c40b:	and    BYTE PTR [rax],ah
  41c40d:	push   rbp
  41c40e:	jae    0x41c475
  41c410:	and    BYTE PTR [rax+0x54],cl
  41c413:	push   rsp
  41c414:	push   rax
  41c415:	and    BYTE PTR [rcx],dh
  41c417:	xor    BYTE PTR cs:[rax],ah
  41c41a:	sub    BYTE PTR [rax+0x29],cl
  41c41d:	add    BYTE PTR [rax],al
  41c41f:	add    BYTE PTR [rax],ah
  41c421:	and    BYTE PTR [rax],ah
  41c423:	and    BYTE PTR [rax],ah
  41c425:	sub    eax,0x7474682d
  41c42a:	jo     0x41c45d
  41c42c:	xor    DWORD PTR cs:[rax],esp
  41c42f:	and    BYTE PTR [rax],ah
  41c431:	and    BYTE PTR [rax],ah
  41c433:	and    BYTE PTR [rax],ah
  41c435:	push   rbp
  41c436:	jae    0x41c49d
  41c438:	and    BYTE PTR [rax+0x54],cl
  41c43b:	push   rsp
  41c43c:	push   rax
  41c43d:	and    BYTE PTR [rcx],dh
  41c43f:	xor    DWORD PTR cs:[rax],esp
  41c442:	sub    BYTE PTR [rax+0x29],cl
  41c445:	add    BYTE PTR [rax],al
  41c447:	add    BYTE PTR [rax],ah
  41c449:	and    BYTE PTR [rax],ah
  41c44b:	and    BYTE PTR [rax],ah
  41c44d:	sub    eax,0x7474682d
  41c452:	jo     0x41c486
  41c454:	and    BYTE PTR [rax],ah
  41c456:	and    BYTE PTR [rax],ah
  41c458:	and    BYTE PTR [rax],ah
  41c45a:	and    BYTE PTR [rax],ah
  41c45c:	and    BYTE PTR [rbp+0x73],dl
  41c45f:	and    BYTE PTR gs:[rax+0x54],cl
  41c463:	push   rsp
  41c464:	push   rax
  41c465:	and    BYTE PTR [rdx],dh
  41c467:	and    BYTE PTR [rax],ch
  41c469:	sub    QWORD PTR [rax],rax
  41c46c:	add    BYTE PTR [rax],al
  41c46e:	add    BYTE PTR [rax],al
  41c470:	and    BYTE PTR [rax],ah
  41c472:	and    BYTE PTR [rax],ah
  41c474:	and    BYTE PTR [rip+0x7474682d],ch        # 0x74b62ca7
  41c47a:	jo     0x41c4ae
  41c47c:	sub    eax,0x6f697270
  41c481:	jb     0x41c4b0
  41c483:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  41c487:	ins    BYTE PTR es:[rdi],dx
  41c488:	gs fs and BYTE PTR gs:[eax],ah
  41c48e:	push   rbp
  41c48f:	jae    0x41c4f6
  41c491:	and    BYTE PTR [rax+0x54],cl
  41c494:	push   rsp
  41c495:	push   rax
  41c496:	and    BYTE PTR [rdx],dh
  41c498:	and    BYTE PTR [rdi+0x69],dh
  41c49b:	je     0x41c505
  41c49d:	outs   dx,DWORD PTR ds:[rsi]
  41c49e:	jne    0x41c514
  41c4a0:	and    BYTE PTR [rax+0x54],cl
  41c4a3:	push   rsp
  41c4a4:	push   rax
  41c4a5:	(bad)  
  41c4a6:	xor    DWORD PTR [rsi],ebp
  41c4a8:	xor    DWORD PTR [rax],esp
  41c4aa:	push   rbp
  41c4ab:	jo     0x41c514
  41c4ad:	jb     0x41c510
  41c4af:	fs and BYTE PTR gs:[rax],ch
  41c4b3:	sub    QWORD PTR [rax],rax
  41c4b6:	add    BYTE PTR [rax],al
  41c4b8:	and    BYTE PTR [rax],ah
  41c4ba:	and    BYTE PTR [rax],ah
  41c4bc:	and    BYTE PTR [rip+0x6e67692d],ch        # 0x6ea92def
  41c4c2:	outs   dx,DWORD PTR ds:[rsi]
  41c4c3:	jb     0x41c52a
  41c4c5:	sub    eax,0x746e6f63
  41c4ca:	outs   dx,BYTE PTR gs:[rsi]
  41c4cc:	je     0x41c4fb
  41c4ce:	ins    BYTE PTR es:[rdi],dx
  41c4cf:	outs   dx,BYTE PTR gs:[rsi]
  41c4d1:	addr32 je 0x41c53c
  41c4d4:	and    BYTE PTR [rax],ah
  41c4d6:	rex.WB
  41c4d7:	outs   dx,BYTE PTR ds:[esi]
  41c4d9:	outs   dx,DWORD PTR ds:[rsi]
  41c4da:	jb     0x41c541
  41c4dc:	and    BYTE PTR [rax+rbp*2+0x65],dh
  41c4e0:	and    BYTE PTR [rax+0x54],cl
  41c4e3:	push   rsp
  41c4e4:	push   rax
  41c4e5:	and    BYTE PTR [rbx+0x6f],al
  41c4e8:	outs   dx,BYTE PTR ds:[rsi]
  41c4e9:	je     0x41c550
  41c4eb:	outs   dx,BYTE PTR ds:[rsi]
  41c4ec:	je     0x41c51b
  41c4ee:	rex.WR
  41c4ef:	outs   dx,BYTE PTR gs:[rsi]
  41c4f1:	addr32 je 0x41c55c
  41c4f4:	and    BYTE PTR [rax+0x65],ch
  41c4f7:	(bad)  
  41c4f8:	fs gs jb 0x41c4fc
  41c4fc:	add    BYTE PTR [rax],al
  41c4fe:	add    BYTE PTR [rax],al
  41c500:	and    BYTE PTR [rip+0x2d202c69],ch        # 0x2d61f16f
  41c506:	sub    eax,0x6c636e69
  41c50b:	jne    0x41c571
  41c50d:	and    BYTE PTR gs:[rax],ah
  41c510:	and    BYTE PTR [rax],ah
  41c512:	and    BYTE PTR [rax],ah
  41c514:	and    BYTE PTR [rcx+0x6e],cl
  41c517:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
  41c51b:	and    BYTE PTR gs:[rax+0x72],dh
  41c51f:	outs   dx,DWORD PTR ds:[rsi]
  41c520:	je     0x41c591
  41c522:	movsxd ebp,DWORD PTR [rdi+0x6c]
  41c525:	and    BYTE PTR [rax+0x65],ch
  41c528:	(bad)  
  41c529:	fs gs jb 0x41c5a0
  41c52d:	and    BYTE PTR [rcx+0x6e],ch
  41c530:	and    BYTE PTR [rax+rbp*2+0x65],dh
  41c534:	and    BYTE PTR [rdi+0x75],ch
  41c537:	je     0x41c5a9
  41c539:	jne    0x41c5af
  41c53b:	and    BYTE PTR [rax],ch
  41c53d:	rex.W (bad) 
  41c53f:	rex.RX sub DWORD PTR [rax],r8d
  41c542:	add    BYTE PTR [rax],al
  41c544:	add    BYTE PTR [rax],al
  41c546:	add    BYTE PTR [rax],al
  41c548:	and    BYTE PTR [rip+0x2d202c6b],ch        # 0x2d61f1b9
  41c54e:	sub    eax,0x65736e69
  41c553:	movsxd esi,DWORD PTR [rbp+0x72]
  41c556:	and    BYTE PTR gs:[rax],ah
  41c559:	and    BYTE PTR [rax],ah
  41c55b:	and    BYTE PTR [rax],ah
  41c55d:	rex.B ins BYTE PTR es:[rdi],dx
  41c55f:	ins    BYTE PTR es:[rdi],dx
  41c560:	outs   dx,DWORD PTR ds:[rsi]
  41c561:	ja     0x41c583
  41c563:	movsxd ebp,DWORD PTR [rdi+0x6e]
  41c566:	outs   dx,BYTE PTR ds:[rsi]
  41c567:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  41c56c:	outs   dx,BYTE PTR ds:[rsi]
  41c56d:	jae    0x41c58f
  41c56f:	je     0x41c5e0
  41c571:	and    BYTE PTR [rbx+0x53],dl
  41c574:	rex.WR and BYTE PTR [rbx+0x69],r14b
  41c578:	je     0x41c5df
  41c57a:	jae    0x41c59c
  41c57c:	ja     0x41c5e7
  41c57e:	je     0x41c5e8
  41c580:	outs   dx,DWORD PTR ds:[rsi]
  41c581:	jne    0x41c5f7
  41c583:	and    BYTE PTR [rbx+0x65],ah
  41c586:	jb     0x41c5fc
  41c588:	jae    0x41c5aa
  41c58a:	sub    BYTE PTR [rax+0x29],cl
  41c58d:	add    BYTE PTR [rax],al
  41c58f:	add    BYTE PTR [rax],ah
  41c591:	and    BYTE PTR [rax],ah
  41c593:	and    BYTE PTR [rax],ah
  41c595:	sub    eax,0x746e692d
  41c59a:	gs jb  0x41c603
  41c59d:	(bad)  
  41c59e:	movsxd esp,DWORD PTR [rbp+0x20]
  41c5a1:	rex.WB
  41c5a2:	rex.WRX push rsp
  41c5a4:	rex.RB push r10
  41c5a6:	rex.RX
  41c5a7:	rex.B
  41c5a8:	rex.XB
  41c5a9:	and    BYTE PTR [r8],r12b
  41c5ac:	push   rbp
  41c5ad:	jae    0x41c614
  41c5af:	and    BYTE PTR [rsi+0x65],ch
  41c5b2:	je     0x41c62b
  41c5b4:	outs   dx,DWORD PTR ds:[rsi]
  41c5b5:	jb     0x41c622
  41c5b7:	and    BYTE PTR [rcx+0x4e],cl
  41c5ba:	push   rsp
  41c5bb:	rex.RB push r10
  41c5bd:	rex.RX
  41c5be:	rex.B
  41c5bf:	rex.XB
  41c5c0:	and    BYTE PTR [r8],r13b
  41c5c3:	outs   dx,DWORD PTR ds:[rsi]
  41c5c4:	jb     0x41c5e6
  41c5c6:	(bad)  
  41c5c7:	fs fs jb 0x41c630
  41c5cb:	jae    0x41c640
  41c5cd:	sub    DWORD PTR [rax],eax
  41c5cf:	add    BYTE PTR [rax],ah
  41c5d1:	sub    eax,0x2d202c34
  41c5d6:	sub    eax,0x34767069
  41c5db:	and    BYTE PTR [rax],ah
  41c5dd:	and    BYTE PTR [rax],ah
  41c5df:	and    BYTE PTR [rax],ah
  41c5e1:	and    BYTE PTR [rax],ah
  41c5e3:	and    BYTE PTR [rax],ah
  41c5e5:	push   rdx
  41c5e6:	gs jae 0x41c658
  41c5e9:	ins    BYTE PTR es:[rdi],dx
  41c5ea:	jbe    0x41c651
  41c5ec:	and    BYTE PTR [rsi+0x61],ch
  41c5ef:	ins    DWORD PTR es:[rdi],dx
  41c5f0:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  41c5f5:	rex.WB push r8
  41c5f7:	jbe    0x41c62d
  41c5f9:	and    BYTE PTR [rcx+0x64],ah
  41c5fc:	fs jb  0x41c664
  41c5ff:	jae    0x41c674
  41c601:	add    BYTE PTR [rax],al
  41c603:	add    BYTE PTR [rax],al
  41c605:	add    BYTE PTR [rax],al
  41c607:	add    BYTE PTR [rax],ah
  41c609:	sub    eax,0x2d202c36
  41c60e:	sub    eax,0x36767069
  41c613:	and    BYTE PTR [rax],ah
  41c615:	and    BYTE PTR [rax],ah
  41c617:	and    BYTE PTR [rax],ah
  41c619:	and    BYTE PTR [rax],ah
  41c61b:	and    BYTE PTR [rax],ah
  41c61d:	push   rdx
  41c61e:	gs jae 0x41c690
  41c621:	ins    BYTE PTR es:[rdi],dx
  41c622:	jbe    0x41c689
  41c624:	and    BYTE PTR [rsi+0x61],ch
  41c627:	ins    DWORD PTR es:[rdi],dx
  41c628:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  41c62d:	rex.WB push r8
  41c62f:	jbe    0x41c667
  41c631:	and    BYTE PTR [rcx+0x64],ah
  41c634:	fs jb  0x41c69c
  41c637:	jae    0x41c6ac
  41c639:	add    BYTE PTR [rax],al
  41c63b:	add    BYTE PTR [rax],al
  41c63d:	add    BYTE PTR [rax],al
  41c63f:	add    BYTE PTR [rax],ah
  41c641:	sub    eax,0x2d202c6a
  41c646:	sub    eax,0x6b6e756a
  41c64b:	sub    eax,0x73736573
  41c650:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f6f632d
  41c657:	imul   ebp,DWORD PTR [rcx+0x65],0x73
  41c65b:	and    BYTE PTR [rax],ah
  41c65d:	rex.WB
  41c65e:	outs   dx,BYTE PTR ds:[esi]
  41c660:	outs   dx,DWORD PTR ds:[rsi]
  41c661:	jb     0x41c6c8
  41c663:	and    BYTE PTR [rbx+0x65],dh
  41c666:	jae    0x41c6db
  41c668:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f6f6320
  41c66f:	imul   ebp,DWORD PTR [rcx+0x65],0x73
  41c673:	and    BYTE PTR [rdx+0x65],dh
  41c676:	(bad)  
  41c677:	and    BYTE PTR fs:[rsi+0x72],ah
  41c67b:	outs   dx,DWORD PTR ds:[rsi]
  41c67c:	ins    DWORD PTR es:[rdi],dx
  41c67d:	and    BYTE PTR [rsi+0x69],ah
  41c680:	ins    BYTE PTR es:[rdi],dx
  41c681:	and    BYTE PTR gs:[rax],ch
  41c684:	sub    QWORD PTR [rax],rax
  41c687:	add    BYTE PTR [rax],ah
  41c689:	and    BYTE PTR [rax],ah
  41c68b:	and    BYTE PTR [rax],ah
  41c68d:	sub    eax,0x65656b2d
  41c692:	jo     0x41c6f5
  41c694:	ins    BYTE PTR es:[rdi],dx
  41c695:	imul   esi,DWORD PTR [rsi+0x65],0x6d69742d
  41c69c:	and    BYTE PTR gs:[rbx+0x45],dl
  41c6a0:	rex.XB
  41c6a1:	rex.WRXB
  41c6a2:	rex.WRX
  41c6a3:	rex.R push rbx
  41c6a5:	and    BYTE PTR [rax],ah
  41c6a7:	push   rdi
  41c6a8:	(bad)  
  41c6a9:	imul   esi,DWORD PTR [rax+riz*1+0x53],0x4e4f4345
  41c6b1:	rex.R push rbx
  41c6b3:	and    BYTE PTR [rdx+0x65],ah
  41c6b6:	je     0x41c72f
  41c6b8:	gs outs dx,BYTE PTR gs:[rsi]
  41c6bb:	and    BYTE PTR [rbx+0x65],ch
  41c6be:	gs jo  0x41c722
  41c6c1:	ins    BYTE PTR es:[rdi],dx
  41c6c2:	imul   esi,DWORD PTR [rsi+0x65],0x6f727020
  41c6c9:	(bad)  
  41c6ca:	gs jae 0x41c6cd
  41c6cd:	add    BYTE PTR [rax],al
  41c6cf:	add    BYTE PTR [rax],ah
  41c6d1:	and    BYTE PTR [rax],ah
  41c6d3:	and    BYTE PTR [rax],ah
  41c6d5:	sub    eax,0x79656b2d
  41c6da:	and    BYTE PTR [rbx+0x45],cl
  41c6dd:	pop    rcx
  41c6de:	and    BYTE PTR [rax],ah
  41c6e0:	and    BYTE PTR [rax],ah
  41c6e2:	and    BYTE PTR [rax],ah
  41c6e4:	and    BYTE PTR [rax+0x72],dl
  41c6e7:	imul   esi,DWORD PTR [rsi+0x61],0x6b206574
  41c6ee:	gs jns 0x41c711
  41c6f1:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x616e
  41c6f8:	ins    DWORD PTR es:[rdi],dx
  41c6f9:	and    BYTE PTR gs:[rax],ch
  41c6fc:	push   rbx
  41c6fd:	push   rbx
  41c6fe:	rex.WR (bad) 
  41c700:	push   rbx
  41c701:	push   rbx
  41c702:	sub    QWORD PTR [rax],rax
  41c705:	add    BYTE PTR [rax],al
  41c707:	add    BYTE PTR [rax],ah
  41c709:	and    BYTE PTR [rax],ah
  41c70b:	and    BYTE PTR [rax],ah
  41c70d:	sub    eax,0x79656b2d
  41c712:	sub    eax,0x65707974
  41c717:	and    BYTE PTR [rcx+rbx*2+0x50],dl
  41c71b:	and    BYTE PTR [r8],r12b
  41c71e:	push   rax
  41c71f:	jb     0x41c78a
  41c721:	jbe    0x41c784
  41c723:	je     0x41c78a
  41c725:	and    BYTE PTR [rbx+0x65],ch
  41c728:	jns    0x41c74a
  41c72a:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x7974
  41c731:	jo     0x41c798
  41c733:	and    BYTE PTR [rax],ch
  41c735:	rex.R
  41c736:	rex.RB push r10
  41c738:	(bad)  
  41c739:	push   rax
  41c73a:	rex.RB
  41c73b:	rex.WRB (bad) 
  41c73d:	rex.RB
  41c73e:	rex.WRX
  41c73f:	rex.RXB sub DWORD PTR [r8],r12d
  41c742:	sub    BYTE PTR [rbx+0x53],dl
  41c745:	sub    QWORD PTR [rax],r8
  41c748:	and    BYTE PTR [rax],ah
  41c74a:	and    BYTE PTR [rax],ah
  41c74c:	and    BYTE PTR [rip+0x62726b2d],ch        # 0x62b4327f
  41c752:	and    BYTE PTR [rbp+rax*2+0x56],cl
  41c756:	rex.RB
  41c757:	rex.WR and BYTE PTR [rax],r12b
  41c75a:	and    BYTE PTR [rax],ah
  41c75c:	and    BYTE PTR [rbp+0x6e],al
  41c75f:	(bad)  
  41c760:	(bad)  
  41c761:	ins    BYTE PTR es:[rdi],dx
  41c762:	and    BYTE PTR gs:[rbx+0x65],cl
  41c766:	jb     0x41c7ca
  41c768:	gs jb  0x41c7da
  41c76b:	jae    0x41c78d
  41c76d:	ja     0x41c7d8
  41c76f:	je     0x41c7d9
  41c771:	and    BYTE PTR [rbx+0x65],dh
  41c774:	movsxd esi,DWORD PTR [rbp+0x72]
  41c777:	imul   esi,DWORD PTR [rcx+rdi*2+0x20],0x4556454c
  41c77f:	rex.WR and BYTE PTR [rax],r13b
  41c782:	rex.RX sub DWORD PTR [rax],r8d
  41c785:	add    BYTE PTR [rax],al
  41c787:	add    BYTE PTR [rax],ah
  41c789:	and    BYTE PTR [rax],ah
  41c78b:	and    BYTE PTR [rax],ah
  41c78d:	sub    eax,0x62696c2d
  41c792:	movsxd esi,DWORD PTR [rbp+0x72]
  41c795:	ins    BYTE PTR es:[rdi],dx
  41c796:	and    BYTE PTR [rsi+0x49],al
  41c799:	rex.WR
  41c79a:	and    BYTE PTR [r8],r12b
  41c79d:	rex.R jne 0x41c80d
  41c7a0:	jo     0x41c7c2
  41c7a2:	ins    BYTE PTR es:[rdi],dx
  41c7a3:	imul   esp,DWORD PTR [rdx+0x63],0x206c7275
  41c7aa:	gs jno 0x41c822
  41c7ad:	imul   esi,DWORD PTR [rsi+0x61],0x746e656c
  41c7b4:	and    BYTE PTR [rbx+0x6f],ah
  41c7b7:	fs and BYTE PTR gs:[rdi+0x66],ch
  41c7bc:	and    BYTE PTR [rax+rbp*2+0x69],dh
  41c7c0:	jae    0x41c7e2
  41c7c2:	movsxd ebp,DWORD PTR [rdi+0x6d]
  41c7c5:	ins    DWORD PTR es:[rdi],dx
  41c7c6:	(bad)  
  41c7c7:	outs   dx,BYTE PTR ds:[rsi]
  41c7c8:	and    BYTE PTR fs:[rcx+rbp*2+0x6e],ch
  41c7cd:	add    BYTE PTR gs:[rax],al
  41c7d0:	and    BYTE PTR [rax],ah
  41c7d2:	and    BYTE PTR [rax],ah
  41c7d4:	and    BYTE PTR [rip+0x6d696c2d],ch        # 0x6dab3407
  41c7da:	imul   esi,DWORD PTR [rbp+rbp*1+0x72],0x20657461
  41c7e2:	push   rdx
  41c7e3:	push   r12
  41c7e5:	and    BYTE PTR [r8],r12b
  41c7e8:	imul   r13,QWORD PTR [rbp+0x69],0x72742074
  41c7f0:	(bad)  
  41c7f1:	outs   dx,BYTE PTR ds:[rsi]
  41c7f2:	jae    0x41c85a
  41c7f4:	gs jb  0x41c817
  41c7f7:	jae    0x41c869
  41c7f9:	gs gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
  41c800:	push   rdx
  41c801:	push   r12
  41c803:	add    BYTE PTR [r8],r8b
  41c806:	add    BYTE PTR [rax],al
  41c808:	and    BYTE PTR [rip+0x2d202c6c],ch        # 0x2d61f47a
  41c80e:	sub    eax,0x7473696c
  41c813:	sub    eax,0x796c6e6f
  41c818:	and    BYTE PTR [rax],ah
  41c81a:	and    BYTE PTR [rax],ah
  41c81c:	and    BYTE PTR [rcx+rbp*2+0x73],cl
  41c820:	je     0x41c842
  41c822:	outs   dx,DWORD PTR ds:[rsi]
  41c823:	outs   dx,BYTE PTR ds:[rsi]
  41c824:	ins    BYTE PTR es:[rdi],dx
  41c825:	jns    0x41c847
  41c827:	ins    DWORD PTR es:[rdi],dx
  41c828:	outs   dx,DWORD PTR ds:[rsi]
  41c829:	fs and BYTE PTR gs:[rax],ch
  41c82d:	rex.RX (bad) 
  41c82f:	push   rax
  41c830:	rex.WRXB push r8
  41c832:	xor    ebp,DWORD PTR [rcx]
  41c834:	add    BYTE PTR [rax],al
  41c836:	add    BYTE PTR [rax],al
  41c838:	and    BYTE PTR [rax],ah
  41c83a:	and    BYTE PTR [rax],ah
  41c83c:	and    BYTE PTR [rip+0x636f6c2d],ch        # 0x63b1346f
  41c842:	(bad)  
  41c843:	ins    BYTE PTR es:[rdi],dx
  41c844:	sub    eax,0x74726f70
  41c849:	and    BYTE PTR [rdx+0x41],dl
  41c84c:	rex.WRX
  41c84d:	rex.RXB
  41c84e:	and    BYTE PTR [r8],r12b
  41c851:	rex.RX outs dx,DWORD PTR ds:[rsi]
  41c853:	jb     0x41c8b8
  41c855:	and    BYTE PTR gs:[rbp+0x73],dh
  41c859:	and    BYTE PTR gs:[rdi+0x66],ch
  41c85d:	and    BYTE PTR [rdx+0x41],dl
  41c860:	rex.WRX
  41c861:	rex.RXB
  41c862:	and    BYTE PTR [r14+0x6f],r12b
  41c866:	jb     0x41c888
  41c868:	ins    BYTE PTR es:[rdi],dx
  41c869:	outs   dx,DWORD PTR ds:[rsi]
  41c86a:	movsxd esp,DWORD PTR [rcx+0x6c]
  41c86d:	and    BYTE PTR [rax+0x6f],dh
  41c870:	jb     0x41c8e6
  41c872:	and    BYTE PTR [rsi+0x75],ch
  41c875:	ins    DWORD PTR es:[rdi],dx
  41c876:	(bad)  
  41c877:	gs jb  0x41c8ed
  41c87a:	add    BYTE PTR [rax],al
  41c87c:	add    BYTE PTR [rax],al
  41c87e:	add    BYTE PTR [rax],al
  41c880:	and    BYTE PTR [rip+0x2d202c4c],ch        # 0x2d61f4d2
  41c886:	sub    eax,0x61636f6c
  41c88b:	je     0x41c8f6
  41c88d:	outs   dx,DWORD PTR ds:[rsi]
  41c88e:	outs   dx,BYTE PTR ds:[rsi]
  41c88f:	and    BYTE PTR [rax],ah
  41c891:	and    BYTE PTR [rax],ah
  41c893:	and    BYTE PTR [rax],ah
  41c895:	rex.RX outs dx,DWORD PTR ds:[rsi]
  41c897:	ins    BYTE PTR es:[rdi],dx
  41c898:	ins    BYTE PTR es:[rdi],dx
  41c899:	outs   dx,DWORD PTR ds:[rsi]
  41c89a:	ja     0x41c8bc
  41c89c:	jb     0x41c903
  41c89e:	imul   esi,DWORD PTR fs:[rdx+0x65],0x20737463
  41c8a6:	sub    BYTE PTR [rax+0x29],cl
  41c8a9:	add    BYTE PTR [rax],al
  41c8ab:	add    BYTE PTR [rax],al
  41c8ad:	add    BYTE PTR [rax],al
  41c8af:	add    BYTE PTR [rax],ah
  41c8b1:	and    BYTE PTR [rax],ah
  41c8b3:	and    BYTE PTR [rax],ah
  41c8b5:	sub    eax,0x636f6c2d
  41c8ba:	(bad)  
  41c8bb:	je     0x41c926
  41c8bd:	outs   dx,DWORD PTR ds:[rsi]
  41c8be:	outs   dx,BYTE PTR ds:[rsi]
  41c8bf:	sub    eax,0x73757274
  41c8c4:	je     0x41c92b
  41c8c6:	and    BYTE PTR fs:[rax],ah
  41c8c9:	imul   r13,QWORD PTR [rbx+0x65],0x2d2d2720
  41c8d1:	ins    BYTE PTR es:[rdi],dx
  41c8d2:	outs   dx,DWORD PTR ds:[rsi]
  41c8d3:	movsxd esp,DWORD PTR [rcx+0x74]
  41c8d6:	imul   ebp,DWORD PTR [rdi+0x6e],0x61202c27
  41c8dd:	outs   dx,BYTE PTR ds:[rsi]
  41c8de:	and    BYTE PTR fs:[rbx+0x65],dh
  41c8e2:	outs   dx,BYTE PTR ds:[rsi]
  41c8e3:	and    BYTE PTR fs:[rcx+0x75],ah
  41c8e7:	je     0x41c951
  41c8e9:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  41c8ed:	outs   dx,DWORD PTR ds:[rsi]
  41c8ee:	je     0x41c958
  41c8f0:	gs jb  0x41c913
  41c8f3:	push   0x7374736f
  41c8f8:	and    BYTE PTR [rax],ch
  41c8fa:	sub    QWORD PTR [rax],rax
  41c8fd:	add    BYTE PTR [rax],al
  41c8ff:	add    BYTE PTR [rax],ah
  41c901:	and    BYTE PTR [rax],ah
  41c903:	and    BYTE PTR [rax],ah
  41c905:	sub    eax,0x676f6c2d
  41c90a:	imul   ebp,DWORD PTR [rsi+0x2d],0x6974706f
  41c911:	outs   dx,DWORD PTR ds:[rsi]
  41c912:	outs   dx,BYTE PTR ds:[rsi]
  41c913:	jae    0x41c935
  41c915:	rex.WRXB push r8
  41c917:	push   rsp
  41c918:	rex.WB
  41c919:	rex.WRXB
  41c91a:	rex.WRX push rbx
  41c91c:	and    BYTE PTR [rax],ah
  41c91e:	push   rbx
  41c91f:	gs jb  0x41c998
  41c922:	gs jb  0x41c945
  41c925:	ins    BYTE PTR es:[rdi],dx
  41c926:	outs   dx,DWORD PTR ds:[rsi]
  41c927:	imul   ebp,DWORD PTR [esi+0x20],0x6974706f
  41c92f:	outs   dx,DWORD PTR ds:[rsi]
  41c930:	outs   dx,BYTE PTR ds:[rsi]
  41c931:	jae    0x41c953
  41c933:	sub    BYTE PTR [rcx+0x4d],cl
  41c936:	push   r8
  41c938:	sub    al,0x20
  41c93a:	push   rax
  41c93b:	rex.WRXB push r8
  41c93d:	xor    ebp,DWORD PTR [rax+riz*1]
  41c940:	push   rbx
  41c941:	rex.WRB push r12
  41c943:	push   rax
  41c944:	sub    DWORD PTR [rax],eax
  41c946:	add    BYTE PTR [rax],al
  41c948:	and    BYTE PTR [rip+0x2d202c4d],ch        # 0x2d61f59b
  41c94e:	sub    eax,0x756e616d
  41c953:	(bad)  
  41c954:	ins    BYTE PTR es:[rdi],dx
  41c955:	and    BYTE PTR [rax],ah
  41c957:	and    BYTE PTR [rax],ah
  41c959:	and    BYTE PTR [rax],ah
  41c95b:	and    BYTE PTR [rax],ah
  41c95d:	imul   r14d,DWORD PTR [rbx+0x70],0x2079616c
  41c965:	je     0x41c9cf
  41c967:	and    BYTE PTR gs:[rsi+0x75],ah
  41c96b:	ins    BYTE PTR es:[rdi],dx
  41c96c:	ins    BYTE PTR es:[rdi],dx
  41c96d:	and    BYTE PTR [rbp+0x61],ch
  41c970:	outs   dx,BYTE PTR ds:[rsi]
  41c971:	jne    0x41c9d4
  41c973:	ins    BYTE PTR es:[rdi],dx
  41c974:	add    BYTE PTR [rax],al
  41c976:	add    BYTE PTR [rax],al
  41c978:	and    BYTE PTR [rax],ah
  41c97a:	and    BYTE PTR [rax],ah
  41c97c:	and    BYTE PTR [rip+0x69616d2d],ch        # 0x69a336af
  41c982:	ins    BYTE PTR es:[rdi],dx
  41c983:	sub    eax,0x6d6f7266
  41c988:	and    BYTE PTR [rsi+0x52],al
  41c98b:	rex.WRXB
  41c98c:	rex.WRB and BYTE PTR [r8],r12b
  41c98f:	rex.WRB (bad) 
  41c991:	imul   ebp,DWORD PTR [rax+riz*1+0x66],0x206d6f72
  41c999:	je     0x41ca03
  41c99b:	imul   esi,DWORD PTR [rbx+0x20],0x72646461
  41c9a2:	gs jae 0x41ca18
  41c9a5:	and    BYTE PTR [rax],ch
  41c9a7:	push   rbx
  41c9a8:	rex.WRB push r12
  41c9aa:	push   rax
  41c9ab:	sub    DWORD PTR [rax],eax
  41c9ad:	add    BYTE PTR [rax],al
  41c9af:	add    BYTE PTR [rax],ah
  41c9b1:	and    BYTE PTR [rax],ah
  41c9b3:	and    BYTE PTR [rax],ah
  41c9b5:	sub    eax,0x69616d2d
  41c9ba:	ins    BYTE PTR es:[rdi],dx
  41c9bb:	sub    eax,0x74706372
  41c9c0:	and    BYTE PTR [rdi+rcx*2+0x20],dl
  41c9c4:	and    BYTE PTR [rbp+0x61],cl
  41c9c7:	imul   ebp,DWORD PTR [rax+riz*1+0x74],0x6874206f
  41c9cf:	imul   esi,DWORD PTR [rbx+0x2f],0x73656874
  41c9d6:	and    BYTE PTR gs:[rcx+0x64],ah
  41c9da:	fs jb  0x41ca42
  41c9dd:	jae    0x41ca52
  41c9df:	gs jae 0x41ca02
  41c9e2:	sub    BYTE PTR [rbx+0x4d],dl
  41c9e5:	push   rsp
  41c9e6:	push   rax
  41c9e7:	sub    DWORD PTR [rax],eax
  41c9e9:	add    BYTE PTR [rax],al
  41c9eb:	add    BYTE PTR [rax],al
  41c9ed:	add    BYTE PTR [rax],al
  41c9ef:	add    BYTE PTR [rax],ah
  41c9f1:	and    BYTE PTR [rax],ah
  41c9f3:	and    BYTE PTR [rax],ah
  41c9f5:	sub    eax,0x69616d2d
  41c9fa:	ins    BYTE PTR es:[rdi],dx
  41c9fb:	sub    eax,0x68747561
  41ca00:	and    BYTE PTR [rcx+0x55],al
  41ca03:	push   rsp
  41ca04:	rex.W and BYTE PTR [rax],spl
  41ca07:	rex.WRXB jb 0x41ca73
  41ca0a:	imul   ebp,DWORD PTR [esi+0x61],0x20726f74
  41ca12:	(bad)  
  41ca13:	fs fs jb 0x41ca7c
  41ca17:	jae    0x41ca8c
  41ca19:	and    BYTE PTR [rdi+0x66],ch
  41ca1c:	and    BYTE PTR [rax+rbp*2+0x65],dh
  41ca20:	and    BYTE PTR [rdi+0x72],ch
  41ca23:	imul   esp,DWORD PTR [rdi+0x69],0x206c616e
  41ca2a:	gs ins DWORD PTR es:[rdi],dx
  41ca2c:	(bad)  
  41ca2d:	imul   ebp,DWORD PTR [rax+riz*1+0x28],0x50544d53
  41ca35:	sub    DWORD PTR [rax],eax
  41ca37:	add    BYTE PTR [rax],ah
  41ca39:	and    BYTE PTR [rax],ah
  41ca3b:	and    BYTE PTR [rax],ah
  41ca3d:	sub    eax,0x78616d2d
  41ca42:	sub    eax,0x656c6966
  41ca47:	jae    0x41cab2
  41ca49:	jp     0x41cab0
  41ca4b:	and    BYTE PTR [rdx+0x59],al
  41ca4e:	push   rsp
  41ca4f:	rex.RB push r11
  41ca51:	and    BYTE PTR [rax],ah
  41ca53:	rex.WRB (bad) 
  41ca55:	js     0x41cac0
  41ca57:	ins    DWORD PTR es:[rdi],dx
  41ca58:	jne    0x41cac7
  41ca5a:	and    BYTE PTR [rsi+0x69],ah
  41ca5d:	ins    BYTE PTR es:[rdi],dx
  41ca5e:	and    BYTE PTR gs:[rbx+0x69],dh
  41ca62:	jp     0x41cac9
  41ca64:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  41ca68:	outs   dx,DWORD PTR fs:[rsi]
  41ca6a:	ja     0x41cada
  41ca6c:	ins    BYTE PTR es:[rdi],dx
  41ca6d:	outs   dx,DWORD PTR ds:[rsi]
  41ca6e:	(bad)  
  41ca6f:	and    BYTE PTR fs:[rax],ch
  41ca72:	rex.W (bad) 
  41ca74:	rex.RX sub DWORD PTR [rax],r8d
  41ca77:	add    BYTE PTR [rax],ah
  41ca79:	and    BYTE PTR [rax],ah
  41ca7b:	and    BYTE PTR [rax],ah
  41ca7d:	sub    eax,0x78616d2d
  41ca82:	sub    eax,0x69646572
  41ca87:	jb     0x41cafc
  41ca89:	and    BYTE PTR [rsi+0x55],cl
  41ca8c:	rex.WRB and BYTE PTR [r8],r12b
  41ca8f:	rex.WRB (bad) 
  41ca91:	js     0x41cafc
  41ca93:	ins    DWORD PTR es:[rdi],dx
  41ca94:	jne    0x41cb03
  41ca96:	and    BYTE PTR [rsi+0x75],ch
  41ca99:	ins    DWORD PTR es:[rdi],dx
  41ca9a:	(bad)  
  41ca9b:	gs jb  0x41cabe
  41ca9e:	outs   dx,DWORD PTR ds:[rsi]
  41ca9f:	data16 and BYTE PTR [rdx+0x65],dh
  41caa3:	imul   esi,DWORD PTR fs:[rdx+0x65],0x20737463
  41caab:	(bad)  
  41caac:	ins    BYTE PTR es:[rdi],dx
  41caad:	ins    BYTE PTR es:[rdi],dx
  41caae:	outs   dx,DWORD PTR ds:[rsi]
  41caaf:	ja     0x41cb16
  41cab1:	and    BYTE PTR fs:[rax],ch
  41cab4:	sub    QWORD PTR [rax],rax
  41cab7:	add    BYTE PTR [rax],ah
  41cab9:	sub    eax,0x2d202c6d
  41cabe:	sub    eax,0x2d78616d
  41cac3:	je     0x41cb2e
  41cac5:	ins    DWORD PTR es:[rdi],dx
  41cac6:	and    BYTE PTR gs:[rbx+0x45],dl
  41caca:	rex.XB
  41cacb:	rex.WRXB
  41cacc:	rex.WRX
  41cacd:	rex.R push rbx
  41cacf:	and    BYTE PTR [rax],ah
  41cad1:	rex.WRB (bad) 
  41cad3:	js     0x41cb3e
  41cad5:	ins    DWORD PTR es:[rdi],dx
  41cad6:	jne    0x41cb45
  41cad8:	and    BYTE PTR [rcx+rbp*2+0x6d],dh
  41cadc:	and    BYTE PTR gs:[rcx+0x6c],ah
  41cae0:	ins    BYTE PTR es:[rdi],dx
  41cae1:	outs   dx,DWORD PTR ds:[rsi]
  41cae2:	ja     0x41cb49
  41cae4:	and    BYTE PTR fs:[rsi+0x6f],ah
  41cae8:	jb     0x41cb0a
  41caea:	je     0x41cb54
  41caec:	and    BYTE PTR gs:[rdx+rsi*2+0x61],dh
  41caf1:	outs   dx,BYTE PTR ds:[rsi]
  41caf2:	jae    0x41cb5a
  41caf4:	gs jb  0x41caf7
  41caf7:	add    BYTE PTR [rax],ah
  41caf9:	and    BYTE PTR [rax],ah
  41cafb:	and    BYTE PTR [rax],ah
  41cafd:	sub    eax,0x74656d2d
  41cb02:	(bad)  
  41cb03:	ins    BYTE PTR es:[rdi],dx
  41cb04:	imul   ebp,DWORD PTR [rsi+0x6b],0x20202020
  41cb0b:	and    BYTE PTR [rax],ah
  41cb0d:	push   rax
  41cb0e:	jb     0x41cb7f
  41cb10:	movsxd esp,DWORD PTR [rbp+0x73]
  41cb13:	jae    0x41cb35
  41cb15:	imul   esi,DWORD PTR [esi+0x65],0x5255206e
  41cb1d:	rex.WR jae 0x41cb40
  41cb20:	(bad)  
  41cb21:	jae    0x41cb43
  41cb23:	ins    DWORD PTR es:[rdi],dx
  41cb24:	gs je  0x41cb88
  41cb27:	ins    BYTE PTR es:[rdi],dx
  41cb28:	imul   ebp,DWORD PTR [rsi+0x6b],0x4c4d5820
  41cb2f:	and    BYTE PTR [rsi+0x69],ah
  41cb32:	ins    BYTE PTR es:[rdi],dx
  41cb33:	add    BYTE PTR gs:[rax],al
  41cb36:	add    BYTE PTR [rax],al
  41cb38:	and    BYTE PTR [rax],ah
  41cb3a:	and    BYTE PTR [rax],ah
  41cb3c:	and    BYTE PTR [rip+0x67656e2d],ch        # 0x67a7396f
  41cb42:	outs   dx,DWORD PTR ds:[rsi]
  41cb43:	je     0x41cbae
  41cb45:	(bad)  
  41cb46:	je     0x41cbad
  41cb48:	and    BYTE PTR [rax],ah
  41cb4a:	and    BYTE PTR [rax],ah
  41cb4c:	and    BYTE PTR [rbp+0x73],dl
  41cb4f:	and    BYTE PTR gs:[rax+0x54],cl
  41cb53:	push   rsp
  41cb54:	push   rax
  41cb55:	and    BYTE PTR [rsi+0x65],cl
  41cb58:	outs   dx,DWORD PTR ds:[esi]
  41cb5a:	je     0x41cbc5
  41cb5c:	(bad)  
  41cb5d:	je     0x41cbc4
  41cb5f:	and    BYTE PTR [rax],ch
  41cb61:	push   rbx
  41cb62:	push   rax
  41cb63:	rex.WRX
  41cb64:	rex.RB
  41cb65:	rex.RXB
  41cb66:	rex.WRXB sub QWORD PTR [r8],r12
  41cb69:	(bad)  
  41cb6a:	jne    0x41cbe0
  41cb6c:	push   0x69746e65
  41cb71:	movsxd esp,DWORD PTR [rcx+0x74]
  41cb74:	imul   ebp,DWORD PTR [rdi+0x6e],0x29482820
  41cb7b:	add    BYTE PTR [rax],al
  41cb7d:	add    BYTE PTR [rax],al
  41cb7f:	add    BYTE PTR [rax],ah
  41cb81:	sub    eax,0x2d202c6e
  41cb86:	sub    eax,0x7274656e
  41cb8b:	movsxd esp,DWORD PTR [rax]
  41cb8d:	and    BYTE PTR [rax],ah
  41cb8f:	and    BYTE PTR [rax],ah
  41cb91:	and    BYTE PTR [rax],ah
  41cb93:	and    BYTE PTR [rax],ah
  41cb95:	rex.WRB jne 0x41cc0b
  41cb98:	je     0x41cbba
  41cb9a:	jb     0x41cc01
  41cb9c:	(bad)  
  41cb9d:	and    BYTE PTR fs:[rsi],ch
  41cba0:	outs   dx,BYTE PTR ds:[rsi]
  41cba1:	gs je  0x41cc16
  41cba4:	movsxd esp,DWORD PTR [rax]
  41cba6:	outs   dx,WORD PTR ds:[rsi]
  41cba8:	jb     0x41cbca
  41cbaa:	jne    0x41cc1f
  41cbac:	gs jb  0x41cbcf
  41cbaf:	outs   dx,BYTE PTR ds:[rsi]
  41cbb0:	(bad)  
  41cbb1:	ins    DWORD PTR es:[rdi],dx
  41cbb2:	and    BYTE PTR gs:[rcx+0x6e],ah
  41cbb6:	and    BYTE PTR fs:[rax+0x61],dh
  41cbba:	jae    0x41cc2f
  41cbbc:	ja     0x41cc2d
  41cbbe:	jb     0x41cc24
	...
  41cbc8:	and    BYTE PTR [rax],ah
  41cbca:	and    BYTE PTR [rax],ah
  41cbcc:	and    BYTE PTR [rip+0x74656e2d],ch        # 0x74a739ff
  41cbd2:	jb     0x41cc37
  41cbd4:	sub    eax,0x6974706f
  41cbd9:	outs   dx,DWORD PTR ds:[rsi]
  41cbda:	outs   dx,BYTE PTR ds:[rsi]
  41cbdb:	(bad)  
  41cbdc:	ins    BYTE PTR es:[rdi],dx
  41cbdd:	and    BYTE PTR [rax],ah
  41cbdf:	push   rbp
  41cbe0:	jae    0x41cc47
  41cbe2:	and    BYTE PTR [rbp+0x69],ah
  41cbe5:	je     0x41cc4f
  41cbe7:	gs jb  0x41cc0a
  41cbea:	outs   dx,BYTE PTR cs:[rsi]
  41cbec:	gs je  0x41cc61
  41cbef:	movsxd esp,DWORD PTR [rax]
  41cbf1:	outs   dx,DWORD PTR ds:[rsi]
  41cbf2:	jb     0x41cc14
  41cbf4:	push   rbp
  41cbf5:	push   rdx
  41cbf6:	cmp    r12,QWORD PTR [rax]
  41cbf9:	outs   dx,DWORD PTR ds:[rsi]
  41cbfa:	jbe    0x41cc61
  41cbfc:	jb     0x41cc70
  41cbfe:	imul   esp,DWORD PTR [rbp+riz*2+0x73],0x6e2d20
  41cc06:	add    BYTE PTR [rax],al
  41cc08:	and    BYTE PTR [rax],ah
  41cc0a:	and    BYTE PTR [rax],ah
  41cc0c:	and    BYTE PTR [rip+0x74656e2d],ch        # 0x74a73a3f
  41cc12:	jb     0x41cc77
  41cc14:	sub    eax,0x656c6966
  41cc19:	and    BYTE PTR [rsi+0x49],al
  41cc1c:	rex.WR
  41cc1d:	and    BYTE PTR [r8],r12b
  41cc20:	push   rbx
  41cc21:	jo     0x41cc88
  41cc23:	movsxd ebp,DWORD PTR [rcx+0x66]
  41cc26:	jns    0x41cc48
  41cc28:	rex.RX
  41cc29:	rex.WB
  41cc2a:	rex.WR
  41cc2b:	and    BYTE PTR [r14+0x6f],r12b
  41cc2f:	jb     0x41cc51
  41cc31:	outs   dx,BYTE PTR ds:[rsi]
  41cc32:	gs je  0x41cca7
  41cc35:	movsxd eax,DWORD PTR [rax]
  41cc37:	add    BYTE PTR [rax],ah
  41cc39:	sub    eax,0x2d202c3a
  41cc3e:	sub    eax,0x7478656e
  41cc43:	and    BYTE PTR [rax],ah
  41cc45:	and    BYTE PTR [rax],ah
  41cc47:	and    BYTE PTR [rax],ah
  41cc49:	and    BYTE PTR [rax],ah
  41cc4b:	and    BYTE PTR [rax],ah
  41cc4d:	rex.B ins BYTE PTR es:[rdi],dx
  41cc4f:	ins    BYTE PTR es:[rdi],dx
  41cc50:	outs   dx,DWORD PTR ds:[rsi]
  41cc51:	ja     0x41ccc6
  41cc53:	and    BYTE PTR [rax+rbp*2+0x65],dh
  41cc57:	and    BYTE PTR [rsi+0x6f],ah
  41cc5a:	ins    BYTE PTR es:[rdi],dx
  41cc5b:	ins    BYTE PTR es:[rdi],dx
  41cc5c:	outs   dx,DWORD PTR ds:[rsi]
  41cc5d:	ja     0x41ccc8
  41cc5f:	outs   dx,BYTE PTR ds:[rsi]
  41cc60:	and    BYTE PTR [ebp+0x52],dl
  41cc64:	rex.WR and BYTE PTR [rdi+rbp*2+0x20],r14b
  41cc69:	jne    0x41ccde
  41cc6b:	and    BYTE PTR gs:[rcx+0x20],ah
  41cc6f:	jae    0x41ccd6
  41cc71:	jo     0x41ccd4
  41cc73:	jb     0x41ccd6
  41cc75:	je     0x41ccdc
  41cc77:	and    BYTE PTR [rbx+0x65],dh
  41cc7a:	je     0x41cc9c
  41cc7c:	outs   dx,DWORD PTR ds:[rsi]
  41cc7d:	data16 and BYTE PTR [rdi+0x70],ch
  41cc81:	je     0x41ccec
  41cc83:	outs   dx,DWORD PTR ds:[rsi]
  41cc84:	outs   dx,BYTE PTR ds:[rsi]
  41cc85:	jae    0x41cc87
  41cc87:	add    BYTE PTR [rax],ah
  41cc89:	and    BYTE PTR [rax],ah
  41cc8b:	and    BYTE PTR [rax],ah
  41cc8d:	sub    eax,0x2d6f6e2d
  41cc92:	(bad)  
  41cc93:	ins    BYTE PTR es:[rdi],dx
  41cc94:	jo     0x41cd04
  41cc96:	and    BYTE PTR [rax],ah
  41cc98:	and    BYTE PTR [rax],ah
  41cc9a:	and    BYTE PTR [rax],ah
  41cc9c:	and    BYTE PTR [rcx+rbp*2+0x73],al
  41cca0:	(bad)  
  41cca1:	(bad)  
  41cca2:	ins    BYTE PTR es:[rdi],dx
  41cca3:	and    BYTE PTR gs:[rax+rbp*2+0x65],dh
  41cca8:	and    BYTE PTR [rcx+0x4c],al
  41ccab:	push   rax
  41ccac:	rex.WRX and BYTE PTR [rsp+r9*2+0x53],r10b
  41ccb1:	and    BYTE PTR [rbp+0x78],ah
  41ccb4:	je     0x41cd1b
  41ccb6:	outs   dx,BYTE PTR ds:[rsi]
  41ccb7:	jae    0x41cd22
  41ccb9:	outs   dx,DWORD PTR ds:[rsi]
  41ccba:	outs   dx,BYTE PTR ds:[rsi]
  41ccbb:	and    BYTE PTR [rax],ch
  41ccbd:	sub    QWORD PTR [rax],rax
  41ccc0:	and    BYTE PTR [rip+0x2d202c4e],ch        # 0x2d61f914
  41ccc6:	sub    eax,0x622d6f6e
  41cccb:	jne    0x41cd33
  41cccd:	data16 gs jb 0x41ccf1
  41ccd1:	and    BYTE PTR [rax],ah
  41ccd3:	and    BYTE PTR [rax],ah
  41ccd5:	imul   r14d,DWORD PTR [rbx+0x61],0x20656c62
  41ccdd:	(bad)  
  41ccde:	jne    0x41cd46
  41cce0:	data16 gs jb 0x41cd4d
  41cce4:	outs   dx,BYTE PTR ds:[rsi]
  41cce5:	and    BYTE PTR [edi+0x66],ch
  41cce9:	and    BYTE PTR [rax+rbp*2+0x65],dh
  41cced:	and    BYTE PTR [rdi+0x75],ch
  41ccf0:	je     0x41cd62
  41ccf2:	jne    0x41cd68
  41ccf4:	and    BYTE PTR [rbx+0x74],dh
  41ccf7:	jb     0x41cd5e
  41ccf9:	(bad)  
  41ccfa:	ins    DWORD PTR es:[rdi],dx
  41ccfb:	add    BYTE PTR [rax],al
  41ccfd:	add    BYTE PTR [rax],al
  41ccff:	add    BYTE PTR [rax],ah
  41cd01:	and    BYTE PTR [rax],ah
  41cd03:	and    BYTE PTR [rax],ah
  41cd05:	sub    eax,0x2d6f6e2d
  41cd0a:	imul   esp,DWORD PTR [rbp+0x65],0x70
  41cd0e:	(bad)  
  41cd0f:	ins    BYTE PTR es:[rdi],dx
  41cd10:	imul   esi,DWORD PTR [rsi+0x65],0x69442020
  41cd17:	jae    0x41cd7a
  41cd19:	(bad)  
  41cd1a:	ins    BYTE PTR es:[rdi],dx
  41cd1b:	and    BYTE PTR gs:[rbx+0x65],ch
  41cd1f:	gs jo  0x41cd83
  41cd22:	ins    BYTE PTR es:[rdi],dx
  41cd23:	imul   esi,DWORD PTR [rsi+0x65],0x65737520
  41cd2a:	and    BYTE PTR [rdi+0x6e],ch
  41cd2d:	and    BYTE PTR [rax+rbp*2+0x65],dh
  41cd31:	and    BYTE PTR [rbx+0x6f],ah
  41cd34:	outs   dx,BYTE PTR ds:[rsi]
  41cd35:	outs   dx,BYTE PTR ds:[rsi]
  41cd36:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  41cd3b:	outs   dx,BYTE PTR ds:[rsi]
  41cd3c:	add    BYTE PTR [rax],al
  41cd3e:	add    BYTE PTR [rax],al
  41cd40:	and    BYTE PTR [rax],ah
  41cd42:	and    BYTE PTR [rax],ah
  41cd44:	and    BYTE PTR [rip+0x2d6f6e2d],ch        # 0x2db13b77
  41cd4a:	outs   dx,BYTE PTR ds:[rsi]
  41cd4b:	jo     0x41cdbb
  41cd4d:	and    BYTE PTR [rax],ah
  41cd4f:	and    BYTE PTR [rax],ah
  41cd51:	and    BYTE PTR [rax],ah
  41cd53:	and    BYTE PTR [rax],ah
  41cd55:	imul   r14d,DWORD PTR [rbx+0x61],0x20656c62
  41cd5d:	je     0x41cdc7
  41cd5f:	and    BYTE PTR gs:[rsi+0x50],cl
  41cd63:	rex.WRX and BYTE PTR [rsp+r9*2+0x53],r10b
  41cd68:	and    BYTE PTR [rbp+0x78],ah
  41cd6b:	je     0x41cdd2
  41cd6d:	outs   dx,BYTE PTR ds:[rsi]
  41cd6e:	jae    0x41cdd9
  41cd70:	outs   dx,DWORD PTR ds:[rsi]
  41cd71:	outs   dx,BYTE PTR ds:[rsi]
  41cd72:	and    BYTE PTR [rax],ch
  41cd74:	sub    QWORD PTR [rax],rax
  41cd77:	add    BYTE PTR [rax],ah
  41cd79:	and    BYTE PTR [rax],ah
  41cd7b:	and    BYTE PTR [rax],ah
  41cd7d:	sub    eax,0x2d6f6e2d
  41cd82:	jae    0x41cde9
  41cd84:	jae    0x41cdf9
  41cd86:	imul   ebp,DWORD PTR [rdi+0x6e],0x20206469
  41cd8d:	imul   r14d,DWORD PTR [rbx+0x61],0x20656c62
  41cd95:	push   rbx
  41cd96:	push   rbx
  41cd97:	rex.WR and BYTE PTR [rbx+0x65],r14b
  41cd9b:	jae    0x41ce10
  41cd9d:	imul   ebp,DWORD PTR [rdi+0x6e],0x2044492d
  41cda4:	jb     0x41ce0b
  41cda6:	jne    0x41ce1b
  41cda8:	imul   ebp,DWORD PTR [rsi+0x67],0x53532820
  41cdaf:	sub    QWORD PTR [rax],r8
  41cdb2:	add    BYTE PTR [rax],al
  41cdb4:	add    BYTE PTR [rax],al
  41cdb6:	add    BYTE PTR [rax],al
  41cdb8:	and    BYTE PTR [rax],ah
  41cdba:	and    BYTE PTR [rax],ah
  41cdbc:	and    BYTE PTR [rip+0x706f6e2d],ch        # 0x70b13bef
  41cdc2:	jb     0x41ce33
  41cdc4:	js     0x41ce3f
  41cdc6:	and    BYTE PTR [rax],ah
  41cdc8:	and    BYTE PTR [rax],ah
  41cdca:	and    BYTE PTR [rax],ah
  41cdcc:	and    BYTE PTR [rcx+rbp*2+0x73],cl
  41cdd0:	je     0x41cdf2
  41cdd2:	outs   dx,DWORD PTR ds:[rsi]
  41cdd3:	data16 and BYTE PTR [rax+0x6f],ch
  41cdd7:	jae    0x41ce4d
  41cdd9:	jae    0x41cdfb
  41cddb:	ja     0x41ce45
  41cddd:	imul   esp,DWORD PTR [rbx+0x68],0x206f6420
  41cde4:	outs   dx,BYTE PTR ds:[rsi]
  41cde5:	outs   dx,DWORD PTR ds:[rsi]
  41cde6:	je     0x41ce08
  41cde8:	jne    0x41ce5d
  41cdea:	and    BYTE PTR gs:[rax+0x72],dh
  41cdee:	outs   dx,DWORD PTR ds:[rsi]
  41cdef:	js     0x41ce6a
  41cdf1:	add    BYTE PTR [rax],al
  41cdf3:	add    BYTE PTR [rax],al
  41cdf5:	add    BYTE PTR [rax],al
  41cdf7:	add    BYTE PTR [rax],ah
  41cdf9:	and    BYTE PTR [rax],ah
  41cdfb:	and    BYTE PTR [rax],ah
  41cdfd:	sub    eax,0x6c746e2d
  41ce02:	ins    DWORD PTR es:[rdi],dx
  41ce03:	and    BYTE PTR [rax],ah
  41ce05:	and    BYTE PTR [rax],ah
  41ce07:	and    BYTE PTR [rax],ah
  41ce09:	and    BYTE PTR [rax],ah
  41ce0b:	and    BYTE PTR [rax],ah
  41ce0d:	push   rbp
  41ce0e:	jae    0x41ce75
  41ce10:	and    BYTE PTR [rax+0x54],cl
  41ce13:	push   rsp
  41ce14:	push   rax
  41ce15:	and    BYTE PTR [rsi+0x54],cl
  41ce18:	rex.WR
  41ce19:	rex.WRB and BYTE PTR [r9+0x75],r12b
  41ce1d:	je     0x41ce87
  41ce1f:	outs   dx,BYTE PTR gs:[rsi]
  41ce21:	je     0x41ce8c
  41ce23:	movsxd esp,DWORD PTR [rcx+0x74]
  41ce26:	imul   ebp,DWORD PTR [rdi+0x6e],0x29482820
  41ce2d:	add    BYTE PTR [rax],al
  41ce2f:	add    BYTE PTR [rax],ah
  41ce31:	and    BYTE PTR [rax],ah
  41ce33:	and    BYTE PTR [rax],ah
  41ce35:	sub    eax,0x6c746e2d
  41ce3a:	ins    DWORD PTR es:[rdi],dx
  41ce3b:	sub    eax,0x20206277
  41ce40:	and    BYTE PTR [rax],ah
  41ce42:	and    BYTE PTR [rax],ah
  41ce44:	and    BYTE PTR [rbp+0x73],dl
  41ce47:	and    BYTE PTR gs:[rax+0x54],cl
  41ce4b:	push   rsp
  41ce4c:	push   rax
  41ce4d:	and    BYTE PTR [rsi+0x54],cl
  41ce50:	rex.WR
  41ce51:	rex.WRB and BYTE PTR [r9+0x75],r12b
  41ce55:	je     0x41cebf
  41ce57:	outs   dx,BYTE PTR gs:[rsi]
  41ce59:	je     0x41cec4
  41ce5b:	movsxd esp,DWORD PTR [rcx+0x74]
  41ce5e:	imul   ebp,DWORD PTR [rdi+0x6e],0x74697720
  41ce65:	push   0x6e697720
  41ce6a:	(bad)  
  41ce6b:	imul   ebp,DWORD PTR [rsi+0x64],0x29482820
  41ce72:	add    BYTE PTR [rax],al
  41ce74:	add    BYTE PTR [rax],al
  41ce76:	add    BYTE PTR [rax],al
  41ce78:	and    BYTE PTR [rax],ah
  41ce7a:	and    BYTE PTR [rax],ah
  41ce7c:	and    BYTE PTR [rip+0x75616f2d],ch        # 0x75a33daf
  41ce82:	je     0x41ceec
  41ce84:	xor    ch,BYTE PTR [rip+0x72616562]        # 0x72a333ec
  41ce8a:	gs jb  0x41cead
  41ce8d:	push   rsp
  41ce8e:	rex.WRXB
  41ce8f:	rex.WXB
  41ce90:	rex.RB
  41ce91:	rex.WRX and BYTE PTR [rax],r12b
  41ce94:	rex.WRXB
  41ce95:	rex.B jne 0x41cf0c
  41ce98:	push   0x42203220
  41ce9d:	gs (bad) 
  41ce9f:	jb     0x41cf06
  41cea1:	jb     0x41cec3
  41cea3:	push   rsp
  41cea4:	outs   dx,DWORD PTR ds:[rsi]
  41cea5:	imul   esp,DWORD PTR [rbp+0x6e],0x20
  41cea9:	sub    BYTE PTR [rcx+0x4d],cl
  41ceac:	push   r8
  41ceae:	sub    al,0x20
  41ceb0:	push   rax
  41ceb1:	rex.WRXB push r8
  41ceb3:	xor    ebp,DWORD PTR [rax+riz*1]
  41ceb6:	push   rbx
  41ceb7:	rex.WRB push r12
  41ceb9:	push   rax
  41ceba:	sub    DWORD PTR [rax],eax
  41cebc:	add    BYTE PTR [rax],al
  41cebe:	add    BYTE PTR [rax],al
  41cec0:	and    BYTE PTR [rip+0x2d202c6f],ch        # 0x2d61fb35
  41cec6:	sub    eax,0x7074756f
  41cecb:	jne    0x41cf41
  41cecd:	and    BYTE PTR [rsi+0x49],al
  41ced0:	rex.WR
  41ced1:	and    BYTE PTR [r8],r12b
  41ced4:	and    BYTE PTR [rdi+0x72],dl
  41ced7:	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x46206f74
  41cedf:	rex.WB
  41cee0:	rex.WR
  41cee1:	and    BYTE PTR [r9+0x6e],r13b
  41cee5:	jae    0x41cf5b
  41cee7:	gs (bad) 
  41cee9:	and    BYTE PTR fs:[rdi+0x66],ch
  41ceed:	and    BYTE PTR [rbx+0x74],dh
  41cef0:	outs   dx,DWORD PTR fs:[rsi]
  41cef2:	jne    0x41cf68
  41cef4:	add    BYTE PTR [rax],al
  41cef6:	add    BYTE PTR [rax],al
  41cef8:	and    BYTE PTR [rax],ah
  41cefa:	and    BYTE PTR [rax],ah
  41cefc:	and    BYTE PTR [rip+0x7361702d],ch        # 0x73a33f2f
  41cf02:	jae    0x41cf24
  41cf04:	push   rax
  41cf05:	push   r11
  41cf07:	push   rbx
  41cf08:	and    BYTE PTR [rax],ah
  41cf0a:	and    BYTE PTR [rax],ah
  41cf0c:	and    BYTE PTR [rax+0x61],dl
  41cf0f:	jae    0x41cf84
  41cf11:	and    BYTE PTR [rax+0x68],dh
  41cf14:	jb     0x41cf77
  41cf16:	jae    0x41cf7d
  41cf18:	and    BYTE PTR [rsi+0x6f],ah
  41cf1b:	jb     0x41cf3d
  41cf1d:	je     0x41cf87
  41cf1f:	and    BYTE PTR gs:[rax+0x72],dh
  41cf23:	imul   esi,DWORD PTR [rsi+0x61],0x6b206574
  41cf2a:	gs jns 0x41cf4d
  41cf2d:	sub    BYTE PTR [rbx+0x53],dl
  41cf30:	rex.WR (bad) 
  41cf32:	push   rbx
  41cf33:	push   rbx
  41cf34:	sub    QWORD PTR [rax],rax
  41cf37:	add    BYTE PTR [rax],ah
  41cf39:	and    BYTE PTR [rax],ah
  41cf3b:	and    BYTE PTR [rax],ah
  41cf3d:	sub    eax,0x7461702d
  41cf42:	push   0x2d73612d
  41cf47:	imul   esi,DWORD PTR [rbx+0x20],0x44202020
  41cf4e:	outs   dx,DWORD PTR ds:[rsi]
  41cf4f:	and    BYTE PTR [rsi+0x6f],ch
  41cf52:	je     0x41cf74
  41cf54:	jae    0x41cfc7
  41cf56:	jne    0x41cfb9
  41cf58:	jae    0x41cfc2
  41cf5a:	and    BYTE PTR [rsi],ch
  41cf5c:	and    BYTE PTR cs:[rbx+0x65],dh
  41cf60:	jno    0x41cfd7
  41cf62:	outs   dx,BYTE PTR gs:[rsi]
  41cf64:	movsxd esp,DWORD PTR [rbp+0x73]
  41cf67:	and    BYTE PTR [rcx+0x6e],ch
  41cf6a:	and    BYTE PTR [rbp+0x52],dl
  41cf6d:	rex.WR and BYTE PTR [rax+0x61],r14b
  41cf71:	je     0x41cfdb
  41cf73:	add    BYTE PTR [rax],al
  41cf75:	add    BYTE PTR [rax],al
  41cf77:	add    BYTE PTR [rax],ah
  41cf79:	and    BYTE PTR [rax],ah
  41cf7b:	and    BYTE PTR [rax],ah
  41cf7d:	sub    eax,0x6e69702d
  41cf82:	outs   dx,BYTE PTR ds:[rsi]
  41cf83:	gs fs jo 0x41cffc
  41cf87:	(bad)  
  41cf88:	imul   esp,DWORD PTR [rbp+0x79],0x20
  41cf8c:	rex.RX
  41cf8d:	rex.WB
  41cf8e:	rex.WR
  41cf8f:	rex.RB (bad) 
  41cf91:	rex.W
  41cf92:	push   r11
  41cf94:	rex.W
  41cf95:	rex.RB push r11
  41cf97:	and    BYTE PTR [rax+0x75],dl
  41cf9a:	(bad)  
  41cf9b:	ins    BYTE PTR es:[rdi],dx
  41cf9c:	imul   esp,DWORD PTR [rbx+0x20],0x2079656b
  41cfa3:	je     0x41d014
  41cfa5:	and    BYTE PTR [rsi+0x65],dh
  41cfa8:	jb     0x41d013
  41cfaa:	data16 jns 0x41cfcd
  41cfad:	jo     0x41d014
  41cfaf:	gs jb  0x41cfd2
  41cfb2:	(bad)  
  41cfb3:	addr32 (bad) 
  41cfb5:	imul   ebp,DWORD PTR [rsi+0x73],0x53282074
  41cfbc:	push   rbx
  41cfbd:	sub    QWORD PTR [rax],r8
  41cfc0:	and    BYTE PTR [rax],ah
  41cfc2:	and    BYTE PTR [rax],ah
  41cfc4:	and    BYTE PTR [rip+0x736f702d],ch        # 0x73b13ff7
  41cfca:	je     0x41cfff
  41cfcc:	xor    BYTE PTR [rcx],dh
  41cfce:	and    BYTE PTR [rax],ah
  41cfd0:	and    BYTE PTR [rax],ah
  41cfd2:	and    BYTE PTR [rax],ah
  41cfd4:	and    BYTE PTR [rdi+rbp*2+0x20],al
  41cfd8:	outs   dx,BYTE PTR ds:[rsi]
  41cfd9:	outs   dx,DWORD PTR ds:[rsi]
  41cfda:	je     0x41cffc
  41cfdc:	jae    0x41d055
  41cfde:	imul   esi,DWORD PTR [rbx+riz*2+0x68],0x206f7420
  41cfe6:	rex.RXB
  41cfe7:	rex.RB push r12
  41cfe9:	and    BYTE PTR [rcx+0x66],ah
  41cfec:	je     0x41d053
  41cfee:	jb     0x41d010
  41cff0:	outs   dx,WORD PTR ds:[rsi]
  41cff2:	ins    BYTE PTR es:[rdi],dx
  41cff3:	ins    BYTE PTR es:[rdi],dx
  41cff4:	outs   dx,DWORD PTR ds:[rsi]
  41cff5:	ja     0x41d060
  41cff7:	outs   dx,BYTE PTR ds:[rsi]
  41cff8:	and    BYTE PTR [ecx+0x20],ah
  41cffc:	xor    esi,DWORD PTR [rax]
  41cffe:	xor    DWORD PTR [rax],esp
  41d000:	jb     0x41d067
  41d002:	imul   esi,DWORD PTR fs:[rdx+0x65],0x28207463
  41d00a:	sub    QWORD PTR [rax],rax
  41d00d:	add    BYTE PTR [rax],al
  41d00f:	add    BYTE PTR [rax],ah
  41d011:	and    BYTE PTR [rax],ah
  41d013:	and    BYTE PTR [rax],ah
  41d015:	sub    eax,0x736f702d
  41d01a:	je     0x41d04f
  41d01c:	xor    BYTE PTR [rdx],dh
  41d01e:	and    BYTE PTR [rax],ah
  41d020:	and    BYTE PTR [rax],ah
  41d022:	and    BYTE PTR [rax],ah
  41d024:	and    BYTE PTR [rdi+rbp*2+0x20],al
  41d028:	outs   dx,BYTE PTR ds:[rsi]
  41d029:	outs   dx,DWORD PTR ds:[rsi]
  41d02a:	je     0x41d04c
  41d02c:	jae    0x41d0a5
  41d02e:	imul   esi,DWORD PTR [rbx+riz*2+0x68],0x206f7420
  41d036:	rex.RXB
  41d037:	rex.RB push r12
  41d039:	and    BYTE PTR [rcx+0x66],ah
  41d03c:	je     0x41d0a3
  41d03e:	jb     0x41d060
  41d040:	outs   dx,WORD PTR ds:[rsi]
  41d042:	ins    BYTE PTR es:[rdi],dx
  41d043:	ins    BYTE PTR es:[rdi],dx
  41d044:	outs   dx,DWORD PTR ds:[rsi]
  41d045:	ja     0x41d0b0
  41d047:	outs   dx,BYTE PTR ds:[rsi]
  41d048:	and    BYTE PTR [ecx+0x20],ah
  41d04c:	xor    esi,DWORD PTR [rax]
  41d04e:	xor    ah,BYTE PTR [rax]
  41d050:	jb     0x41d0b7
  41d052:	imul   esi,DWORD PTR fs:[rdx+0x65],0x28207463
  41d05a:	sub    QWORD PTR [rax],rax
  41d05d:	add    BYTE PTR [rax],al
  41d05f:	add    BYTE PTR [rax],ah
  41d061:	and    BYTE PTR [rax],ah
  41d063:	and    BYTE PTR [rax],ah
  41d065:	sub    eax,0x736f702d
  41d06a:	je     0x41d09f
  41d06c:	xor    BYTE PTR [rbx],dh
  41d06e:	and    BYTE PTR [rax],ah
  41d070:	and    BYTE PTR [rax],ah
  41d072:	and    BYTE PTR [rax],ah
  41d074:	and    BYTE PTR [rdi+rbp*2+0x20],al
  41d078:	outs   dx,BYTE PTR ds:[rsi]
  41d079:	outs   dx,DWORD PTR ds:[rsi]
  41d07a:	je     0x41d09c
  41d07c:	jae    0x41d0f5
  41d07e:	imul   esi,DWORD PTR [rbx+riz*2+0x68],0x206f7420
  41d086:	rex.RXB
  41d087:	rex.RB push r12
  41d089:	and    BYTE PTR [rcx+0x66],ah
  41d08c:	je     0x41d0f3
  41d08e:	jb     0x41d0b0
  41d090:	outs   dx,WORD PTR ds:[rsi]
  41d092:	ins    BYTE PTR es:[rdi],dx
  41d093:	ins    BYTE PTR es:[rdi],dx
  41d094:	outs   dx,DWORD PTR ds:[rsi]
  41d095:	ja     0x41d100
  41d097:	outs   dx,BYTE PTR ds:[rsi]
  41d098:	and    BYTE PTR [ecx+0x20],ah
  41d09c:	xor    esi,DWORD PTR [rax]
  41d09e:	xor    esp,DWORD PTR [rax]
  41d0a0:	jb     0x41d107
  41d0a2:	imul   esi,DWORD PTR fs:[rdx+0x65],0x28207463
  41d0aa:	sub    QWORD PTR [rax],rax
  41d0ad:	add    BYTE PTR [rax],al
  41d0af:	add    BYTE PTR [rax],ah
  41d0b1:	and    BYTE PTR [rax],ah
  41d0b3:	and    BYTE PTR [rax],ah
  41d0b5:	sub    eax,0x6572702d
  41d0ba:	jo     0x41d12e
  41d0bc:	outs   dx,DWORD PTR ds:[rsi]
  41d0bd:	js     0x41d138
  41d0bf:	and    BYTE PTR [rbx+0x50],bl
  41d0c2:	push   rdx
  41d0c3:	rex.WRXB push r12
  41d0c5:	rex.WRXB
  41d0c6:	rex.XB
  41d0c7:	rex.WRXB
  41d0c8:	rex.WR cmp r13b,BYTE PTR [rdi]
  41d0cb:	(bad)  
  41d0cc:	pop    rbp
  41d0cd:	rex.W
  41d0ce:	rex.WRXB push r11
  41d0d0:	push   rsp
  41d0d1:	pop    rbx
  41d0d2:	cmp    dl,BYTE PTR [rax+0x4f]
  41d0d5:	push   rdx
  41d0d6:	push   rsp
  41d0d7:	pop    rbp
  41d0d8:	and    BYTE PTR [rax+0x72],dl
  41d0db:	outs   dx,DWORD PTR ds:[rsi]
  41d0dc:	js     0x41d157
  41d0de:	and    BYTE PTR [rdx+0x65],ah
  41d0e1:	outs   dx,WORD PTR ds:[rsi]
  41d0e3:	jb     0x41d14a
  41d0e5:	and    BYTE PTR [rax+0x54],cl
  41d0e8:	push   rsp
  41d0e9:	push   rax
  41d0ea:	sub    BYTE PTR [rbx+0x29],dl
  41d0ed:	and    BYTE PTR [rax+0x72],dh
  41d0f0:	outs   dx,DWORD PTR ds:[rsi]
  41d0f1:	js     0x41d16c
  41d0f3:	add    BYTE PTR [rax],al
  41d0f5:	add    BYTE PTR [rax],al
  41d0f7:	add    BYTE PTR [rax],ah
  41d0f9:	sub    eax,0x2d202c23
  41d0fe:	sub    eax,0x676f7270
  41d103:	jb     0x41d16a
  41d105:	jae    0x41d17a
  41d107:	sub    eax,0x20726162
  41d10c:	and    BYTE PTR [rcx+rbp*2+0x73],al
  41d110:	jo     0x41d17e
  41d112:	(bad)  
  41d113:	jns    0x41d135
  41d115:	je     0x41d189
  41d117:	(bad)  
  41d118:	outs   dx,BYTE PTR ds:[rsi]
  41d119:	jae    0x41d181
  41d11b:	gs jb  0x41d13e
  41d11e:	jo     0x41d192
  41d120:	outs   dx,DWORD PTR ds:[rsi]
  41d121:	addr32 jb 0x41d189
  41d124:	jae    0x41d199
  41d126:	and    BYTE PTR [rcx+0x73],ah
  41d129:	and    BYTE PTR [rcx+0x20],ah
  41d12c:	jo     0x41d1a0
  41d12e:	outs   dx,DWORD PTR ds:[rsi]
  41d12f:	addr32 jb 0x41d197
  41d132:	jae    0x41d1a7
  41d134:	and    BYTE PTR [rdx+0x61],ah
  41d137:	jb     0x41d139
  41d139:	add    BYTE PTR [rax],al
  41d13b:	add    BYTE PTR [rax],al
  41d13d:	add    BYTE PTR [rax],al
  41d13f:	add    BYTE PTR [rax],ah
  41d141:	and    BYTE PTR [rax],ah
  41d143:	and    BYTE PTR [rax],ah
  41d145:	sub    eax,0x6f72702d
  41d14a:	je     0x41d1bb
  41d14c:	and    BYTE PTR [rax+0x52],dl
  41d14f:	rex.WRXB push r12
  41d151:	rex.WRXB
  41d152:	rex.XB
  41d153:	rex.WRXB
  41d154:	rex.WR push rbx
  41d156:	and    BYTE PTR [rax],ah
  41d158:	rex.RB outs dx,BYTE PTR ds:[rsi]
  41d15a:	(bad)  
  41d15b:	(bad)  
  41d15c:	ins    BYTE PTR es:[rdi],dx
  41d15d:	gs (bad) 
  41d15f:	imul   esi,DWORD PTR fs:[rbx+0x61],0x20656c62
  41d167:	push   rax
  41d168:	push   rdx
  41d169:	rex.WRXB push r12
  41d16b:	rex.WRXB
  41d16c:	rex.XB
  41d16d:	rex.WRXB
  41d16e:	rex.WR push rbx
	...
  41d178:	and    BYTE PTR [rax],ah
  41d17a:	and    BYTE PTR [rax],ah
  41d17c:	and    BYTE PTR [rip+0x6f72702d],ch        # 0x6fb441af
  41d182:	je     0x41d1f3
  41d184:	sub    eax,0x61666564
  41d189:	jne    0x41d1f7
  41d18b:	je     0x41d1ad
  41d18d:	push   rax
  41d18e:	push   rdx
  41d18f:	rex.WRXB push r12
  41d191:	rex.WRXB
  41d192:	rex.XB
  41d193:	rex.WRXB
  41d194:	rex.WR and BYTE PTR [rax],r12b
  41d197:	push   rbp
  41d198:	jae    0x41d1ff
  41d19a:	and    BYTE PTR [rax+0x52],dl
  41d19d:	rex.WRXB push r12
  41d19f:	rex.WRXB
  41d1a0:	rex.XB
  41d1a1:	rex.WRXB
  41d1a2:	rex.WR and BYTE PTR [rsi+0x6f],r12b
  41d1a6:	jb     0x41d1c8
  41d1a8:	(bad)  
  41d1a9:	outs   dx,BYTE PTR ds:[rsi]
  41d1aa:	jns    0x41d1cc
  41d1ac:	push   rbp
  41d1ad:	push   rdx
  41d1ae:	rex.WR and BYTE PTR [rbp+0x69],r13b
  41d1b2:	jae    0x41d227
  41d1b4:	imul   ebp,DWORD PTR [rsi+0x67],0x73206120
  41d1bb:	movsxd ebp,DWORD PTR [rax+0x65]
  41d1be:	ins    DWORD PTR es:[rdi],dx
  41d1bf:	add    BYTE PTR gs:[rax],al
  41d1c2:	add    BYTE PTR [rax],al
  41d1c4:	add    BYTE PTR [rax],al
  41d1c6:	add    BYTE PTR [rax],al
  41d1c8:	and    BYTE PTR [rax],ah
  41d1ca:	and    BYTE PTR [rax],ah
  41d1cc:	and    BYTE PTR [rip+0x6f72702d],ch        # 0x6fb441ff
  41d1d2:	je     0x41d243
  41d1d4:	sub    eax,0x69646572
  41d1d9:	jb     0x41d1fb
  41d1db:	push   rax
  41d1dc:	push   rdx
  41d1dd:	rex.WRXB push r12
  41d1df:	rex.WRXB
  41d1e0:	rex.XB
  41d1e1:	rex.WRXB
  41d1e2:	rex.WR push rbx
  41d1e4:	and    BYTE PTR [rax],ah
  41d1e6:	and    BYTE PTR [rbp+0x6e],al
  41d1e9:	(bad)  
  41d1ea:	(bad)  
  41d1eb:	ins    BYTE PTR es:[rdi],dx
  41d1ec:	gs (bad) 
  41d1ee:	imul   esi,DWORD PTR fs:[rbx+0x61],0x20656c62
  41d1f6:	push   rax
  41d1f7:	push   rdx
  41d1f8:	rex.WRXB push r12
  41d1fa:	rex.WRXB
  41d1fb:	rex.XB
  41d1fc:	rex.WRXB
  41d1fd:	rex.WR push rbx
  41d1ff:	and    BYTE PTR [rdi+0x6e],ch
  41d202:	and    BYTE PTR [rdx+0x65],dh
  41d205:	imul   esi,DWORD PTR fs:[rdx+0x65],0x7463
  41d20d:	add    BYTE PTR [rax],al
  41d20f:	add    BYTE PTR [rax],ah
  41d211:	sub    eax,0x2d202c78
  41d216:	sub    eax,0x786f7270
  41d21b:	jns    0x41d23d
  41d21d:	pop    rbx
  41d21e:	push   rax
  41d21f:	push   rdx
  41d220:	rex.WRXB push r12
  41d222:	rex.WRXB
  41d223:	rex.XB
  41d224:	rex.WRXB
  41d225:	rex.WR cmp r13b,BYTE PTR [rdi]
  41d228:	(bad)  
  41d229:	pop    rbp
  41d22a:	rex.W
  41d22b:	rex.WRXB push r11
  41d22d:	push   rsp
  41d22e:	pop    rbx
  41d22f:	cmp    dl,BYTE PTR [rax+0x4f]
  41d232:	push   rdx
  41d233:	push   rsp
  41d234:	pop    rbp
  41d235:	and    BYTE PTR [rax],ah
  41d237:	push   rbp
  41d238:	jae    0x41d29f
  41d23a:	and    BYTE PTR [rax+0x72],dh
  41d23d:	outs   dx,DWORD PTR ds:[rsi]
  41d23e:	js     0x41d2b9
  41d240:	and    BYTE PTR [rdi+0x6e],ch
  41d243:	and    BYTE PTR [rdi+0x69],ah
  41d246:	jbe    0x41d2ad
  41d248:	outs   dx,BYTE PTR ds:[rsi]
  41d249:	and    BYTE PTR [rax+0x6f],dh
  41d24c:	jb     0x41d2c2
  41d24e:	add    BYTE PTR [rax],al
  41d250:	and    BYTE PTR [rax],ah
  41d252:	and    BYTE PTR [rax],ah
  41d254:	and    BYTE PTR [rip+0x6f72702d],ch        # 0x6fb44287
  41d25a:	js     0x41d2d5
  41d25c:	sub    eax,0x61796e61
  41d261:	jne    0x41d2d7
  41d263:	push   0x69502020
  41d268:	movsxd ebp,DWORD PTR [rbx+0x20]
  41d26b:	and    ah,BYTE PTR [rcx+0x6e]
  41d26e:	jns    0x41d292
  41d270:	and    BYTE PTR [rax+0x72],dh
  41d273:	outs   dx,DWORD PTR ds:[rsi]
  41d274:	js     0x41d2ef
  41d276:	and    BYTE PTR [rcx+0x75],ah
  41d279:	je     0x41d2e3
  41d27b:	outs   dx,BYTE PTR gs:[rsi]
  41d27d:	je     0x41d2e8
  41d27f:	movsxd esp,DWORD PTR [rcx+0x74]
  41d282:	imul   ebp,DWORD PTR [rdi+0x6e],0x74656d20
  41d289:	push   0x2820646f
  41d28e:	sub    QWORD PTR [rax],rax
  41d291:	add    BYTE PTR [rax],al
  41d293:	add    BYTE PTR [rax],al
  41d295:	add    BYTE PTR [rax],al
  41d297:	add    BYTE PTR [rax],ah
  41d299:	and    BYTE PTR [rax],ah
  41d29b:	and    BYTE PTR [rax],ah
  41d29d:	sub    eax,0x6f72702d
  41d2a2:	js     0x41d31d
  41d2a4:	sub    eax,0x69736162
  41d2a9:	movsxd esp,DWORD PTR [rax]
  41d2ab:	and    BYTE PTR [rax],ah
  41d2ad:	push   rbp
  41d2ae:	jae    0x41d315
  41d2b0:	and    BYTE PTR [rdx+0x61],al
  41d2b3:	jae    0x41d31e
  41d2b5:	movsxd esp,DWORD PTR [rax]
  41d2b7:	(bad)  
  41d2b8:	jne    0x41d32e
  41d2ba:	push   0x69746e65
  41d2bf:	movsxd esp,DWORD PTR [rcx+0x74]
  41d2c2:	imul   ebp,DWORD PTR [rdi+0x6e],0x206e6f20
  41d2c9:	je     0x41d333
  41d2cb:	and    BYTE PTR gs:[rax+0x72],dh
  41d2cf:	outs   dx,DWORD PTR ds:[rsi]
  41d2d0:	js     0x41d34b
  41d2d2:	and    BYTE PTR [rax],ch
  41d2d4:	sub    QWORD PTR [rax],rax
  41d2d7:	add    BYTE PTR [rax],ah
  41d2d9:	and    BYTE PTR [rax],ah
  41d2db:	and    BYTE PTR [rax],ah
  41d2dd:	sub    eax,0x6f72702d
  41d2e2:	js     0x41d35d
  41d2e4:	sub    eax,0x65676964
  41d2e9:	jae    0x41d35f
  41d2eb:	and    BYTE PTR [rax],ah
  41d2ed:	push   rbp
  41d2ee:	jae    0x41d355
  41d2f0:	and    BYTE PTR [rcx+rbp*2+0x67],al
  41d2f4:	gs jae 0x41d36b
  41d2f7:	and    BYTE PTR [rcx+0x75],ah
  41d2fa:	je     0x41d364
  41d2fc:	outs   dx,BYTE PTR gs:[rsi]
  41d2fe:	je     0x41d369
  41d300:	movsxd esp,DWORD PTR [rcx+0x74]
  41d303:	imul   ebp,DWORD PTR [rdi+0x6e],0x206e6f20
  41d30a:	je     0x41d374
  41d30c:	and    BYTE PTR gs:[rax+0x72],dh
  41d310:	outs   dx,DWORD PTR ds:[rsi]
  41d311:	js     0x41d38c
  41d313:	and    BYTE PTR [rax],ch
  41d315:	sub    QWORD PTR [rax],rax
  41d318:	and    BYTE PTR [rax],ah
  41d31a:	and    BYTE PTR [rax],ah
  41d31c:	and    BYTE PTR [rip+0x6f72702d],ch        # 0x6fb4434f
  41d322:	js     0x41d39d
  41d324:	sub    eax,0x65636163
  41d329:	jb     0x41d39f
  41d32b:	and    BYTE PTR [rsi+0x49],al
  41d32e:	rex.WR
  41d32f:	and    BYTE PTR [r11+0x41],r8b
  41d333:	and    BYTE PTR [rbx+0x65],ah
  41d336:	jb     0x41d3ac
  41d338:	imul   esp,DWORD PTR [rsi+0x69],0x65746163
  41d33f:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  41d343:	jbe    0x41d3aa
  41d345:	jb     0x41d3b0
  41d347:	data16 jns 0x41d36a
  41d34a:	jo     0x41d3b1
  41d34c:	gs jb  0x41d36f
  41d34f:	(bad)  
  41d350:	addr32 (bad) 
  41d352:	imul   ebp,DWORD PTR [rsi+0x73],0x6f662074
  41d359:	jb     0x41d37b
  41d35b:	jo     0x41d3cf
  41d35d:	outs   dx,DWORD PTR ds:[rsi]
  41d35e:	js     0x41d3d9
  41d360:	and    BYTE PTR [rax],ch
  41d362:	push   rbx
  41d363:	push   rbx
  41d364:	sub    QWORD PTR [rax],r8
  41d367:	add    BYTE PTR [rax],ah
  41d369:	and    BYTE PTR [rax],ah
  41d36b:	and    BYTE PTR [rax],ah
  41d36d:	sub    eax,0x6f72702d
  41d372:	js     0x41d3ed
  41d374:	sub    eax,0x61706163
  41d379:	je     0x41d3e3
  41d37b:	and    BYTE PTR [rcx+rcx*2+0x52],al
  41d37f:	and    BYTE PTR [rbx+0x41],al
  41d382:	and    BYTE PTR [rcx+rbp*2+0x72],ah
  41d386:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
  41d38b:	jns    0x41d3ad
  41d38d:	je     0x41d3fe
  41d38f:	and    BYTE PTR [rsi+0x65],dh
  41d392:	jb     0x41d3fd
  41d394:	data16 jns 0x41d3b7
  41d397:	jo     0x41d3fe
  41d399:	gs jb  0x41d3bc
  41d39c:	(bad)  
  41d39d:	addr32 (bad) 
  41d39f:	imul   ebp,DWORD PTR [rsi+0x73],0x6f662074
  41d3a6:	jb     0x41d3c8
  41d3a8:	jo     0x41d41c
  41d3aa:	outs   dx,DWORD PTR ds:[rsi]
  41d3ab:	js     0x41d426
  41d3ad:	and    BYTE PTR [rax],ch
  41d3af:	push   rbx
  41d3b0:	push   rbx
  41d3b1:	sub    QWORD PTR [rax],r8
  41d3b4:	add    BYTE PTR [rax],al
  41d3b6:	add    BYTE PTR [rax],al
  41d3b8:	and    BYTE PTR [rax],ah
  41d3ba:	and    BYTE PTR [rax],ah
  41d3bc:	and    BYTE PTR [rip+0x6f72702d],ch        # 0x6fb443ef
  41d3c2:	js     0x41d43d
  41d3c4:	sub    eax,0x74726563
  41d3c9:	and    BYTE PTR [rbx+0x45],al
  41d3cc:	push   rdx
  41d3cd:	push   rsp
  41d3ce:	pop    rbx
  41d3cf:	cmp    dl,BYTE PTR [rax+0x41]
  41d3d2:	push   rbx
  41d3d3:	push   rbx
  41d3d4:	push   rdi
  41d3d5:	rex.R pop rbp
  41d3d7:	and    BYTE PTR [rbx+0x6c],al
  41d3da:	imul   esp,DWORD PTR [rbp+0x6e],0x65632074
  41d3e1:	jb     0x41d457
  41d3e3:	imul   esp,DWORD PTR [rsi+0x69],0x65746163
  41d3ea:	and    BYTE PTR [rsi+0x69],ah
  41d3ed:	ins    BYTE PTR es:[rdi],dx
  41d3ee:	and    BYTE PTR gs:[rcx+0x6e],ah
  41d3f2:	and    BYTE PTR fs:[rax+0x61],dh
  41d3f6:	jae    0x41d46b
  41d3f8:	ja     0x41d469
  41d3fa:	jb     0x41d460
  41d3fc:	and    BYTE PTR [rsi+0x6f],ah
  41d3ff:	jb     0x41d421
  41d401:	jo     0x41d475
  41d403:	outs   dx,DWORD PTR ds:[rsi]
  41d404:	js     0x41d47f
  41d406:	and    BYTE PTR [rax],ch
  41d408:	push   rbx
  41d409:	push   rbx
  41d40a:	sub    QWORD PTR [rax],r8
  41d40d:	add    BYTE PTR [rax],al
  41d40f:	add    BYTE PTR [rax],ah
  41d411:	and    BYTE PTR [rax],ah
  41d413:	and    BYTE PTR [rax],ah
  41d415:	sub    eax,0x6f72702d
  41d41a:	js     0x41d495
  41d41c:	sub    eax,0x74726563
  41d421:	sub    eax,0x65707974
  41d426:	and    BYTE PTR [rcx+rbx*2+0x50],dl
  41d42a:	and    BYTE PTR [r11+0x65],r8b
  41d42e:	jb     0x41d4a4
  41d430:	imul   esp,DWORD PTR [rsi+0x69],0x65746163
  41d437:	and    BYTE PTR [rsi+0x69],ah
  41d43a:	ins    BYTE PTR es:[rdi],dx
  41d43b:	and    BYTE PTR gs:[rcx+rdi*2+0x70],dh
  41d440:	and    BYTE PTR gs:[rax],ch
  41d443:	rex.R
  41d444:	rex.RB push r10
  41d446:	(bad)  
  41d447:	push   rax
  41d448:	rex.RB
  41d449:	rex.WRB (bad) 
  41d44b:	rex.RB
  41d44c:	rex.WRX
  41d44d:	rex.RXB sub DWORD PTR [r8],r12d
  41d450:	outs   dx,WORD PTR ds:[rsi]
  41d452:	jb     0x41d474
  41d454:	jo     0x41d4c8
  41d456:	outs   dx,DWORD PTR ds:[rsi]
  41d457:	js     0x41d4d2
  41d459:	and    BYTE PTR [rax],ch
  41d45b:	push   rbx
  41d45c:	push   rbx
  41d45d:	sub    QWORD PTR [rax],r8
  41d460:	and    BYTE PTR [rax],ah
  41d462:	and    BYTE PTR [rax],ah
  41d464:	and    BYTE PTR [rip+0x6f72702d],ch        # 0x6fb44497
  41d46a:	js     0x41d4e5
  41d46c:	sub    eax,0x68706963
  41d471:	gs jb  0x41d4e7
  41d474:	and    BYTE PTR [rcx+rcx*2+0x53],cl
  41d478:	push   rsp
  41d479:	and    BYTE PTR [rbx+0x53],dl
  41d47c:	rex.WR and BYTE PTR [rbx+0x69],r12b
  41d480:	jo     0x41d4ea
  41d482:	gs jb  0x41d4f8
  41d485:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  41d489:	jne    0x41d4fe
  41d48b:	and    BYTE PTR gs:[rsi+0x6f],ah
  41d48f:	jb     0x41d4b1
  41d491:	jo     0x41d505
  41d493:	outs   dx,DWORD PTR ds:[rsi]
  41d494:	js     0x41d50f
  41d496:	and    BYTE PTR [rax],ch
  41d498:	push   rbx
  41d499:	push   rbx
  41d49a:	sub    QWORD PTR [rax],r8
  41d49d:	add    BYTE PTR [rax],al
  41d49f:	add    BYTE PTR [rax],ah
  41d4a1:	and    BYTE PTR [rax],ah
  41d4a3:	and    BYTE PTR [rax],ah
  41d4a5:	sub    eax,0x6f72702d
  41d4aa:	js     0x41d525
  41d4ac:	sub    eax,0x666c7263
  41d4b1:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x454c4946
  41d4b9:	and    BYTE PTR [rdi+0x65],al
  41d4bc:	je     0x41d4de
  41d4be:	(bad)  
  41d4bf:	and    BYTE PTR [rbx+0x52],al
  41d4c2:	rex.WR and BYTE PTR [rcx+rbp*2+0x73],r13b
  41d4c7:	je     0x41d4e9
  41d4c9:	imul   ebp,DWORD PTR [rsi+0x20],0x204d4550
  41d4d0:	outs   dx,WORD PTR ds:[rsi]
  41d4d2:	jb     0x41d541
  41d4d4:	(bad)  
  41d4d5:	je     0x41d4f7
  41d4d7:	data16 jb 0x41d549
  41d4da:	ins    DWORD PTR es:[rdi],dx
  41d4db:	and    BYTE PTR [rax+rbp*2+0x65],dh
  41d4df:	and    BYTE PTR [rdi+0x69],ah
  41d4e2:	jbe    0x41d549
  41d4e4:	outs   dx,BYTE PTR ds:[rsi]
  41d4e5:	and    BYTE PTR [rsi+0x69],ah
  41d4e8:	ins    BYTE PTR es:[rdi],dx
  41d4e9:	and    BYTE PTR gs:[rsi+0x6f],ah
  41d4ed:	jb     0x41d50f
  41d4ef:	jo     0x41d563
  41d4f1:	outs   dx,DWORD PTR ds:[rsi]
  41d4f2:	js     0x41d56d
  41d4f4:	add    BYTE PTR [rax],al
  41d4f6:	add    BYTE PTR [rax],al
  41d4f8:	and    BYTE PTR [rax],ah
  41d4fa:	and    BYTE PTR [rax],ah
  41d4fc:	and    BYTE PTR [rip+0x6f72702d],ch        # 0x6fb4452f
  41d502:	js     0x41d57d
  41d504:	sub    eax,0x65736e69
  41d509:	movsxd esi,DWORD PTR [rbp+0x72]
  41d50c:	and    BYTE PTR gs:[rcx+0x6c],al
  41d510:	ins    BYTE PTR es:[rdi],dx
  41d511:	outs   dx,DWORD PTR ds:[rsi]
  41d512:	ja     0x41d534
  41d514:	movsxd ebp,DWORD PTR [rdi+0x6e]
  41d517:	outs   dx,BYTE PTR ds:[rsi]
  41d518:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  41d51d:	outs   dx,BYTE PTR ds:[rsi]
  41d51e:	jae    0x41d540
  41d520:	je     0x41d591
  41d522:	and    BYTE PTR [rbx+0x53],dl
  41d525:	rex.WR and BYTE PTR [rbx+0x69],r14b
  41d529:	je     0x41d590
  41d52b:	jae    0x41d54d
  41d52d:	ja     0x41d598
  41d52f:	je     0x41d599
  41d531:	outs   dx,DWORD PTR ds:[rsi]
  41d532:	jne    0x41d5a8
  41d534:	and    BYTE PTR [rbx+0x65],ah
  41d537:	jb     0x41d5ad
  41d539:	jae    0x41d55b
  41d53b:	outs   dx,WORD PTR ds:[rsi]
  41d53d:	jb     0x41d55f
  41d53f:	jo     0x41d5b3
  41d541:	outs   dx,DWORD PTR ds:[rsi]
  41d542:	js     0x41d5bd
  41d544:	and    BYTE PTR [rax],ch
  41d546:	sub    QWORD PTR [rax],rax
  41d549:	add    BYTE PTR [rax],al
  41d54b:	add    BYTE PTR [rax],al
  41d54d:	add    BYTE PTR [rax],al
  41d54f:	add    BYTE PTR [rax],ah
  41d551:	and    BYTE PTR [rax],ah
  41d553:	and    BYTE PTR [rax],ah
  41d555:	sub    eax,0x6f72702d
  41d55a:	js     0x41d5d5
  41d55c:	sub    eax,0x2079656b
  41d561:	rex.WXB
  41d562:	rex.RB pop r9
  41d564:	and    BYTE PTR [rax+0x72],dl
  41d567:	imul   esi,DWORD PTR [rsi+0x61],0x6b206574
  41d56e:	gs jns 0x41d591
  41d571:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x616e
  41d578:	ins    DWORD PTR es:[rdi],dx
  41d579:	and    BYTE PTR gs:[rsi+0x6f],ah
  41d57d:	jb     0x41d59f
  41d57f:	jo     0x41d5f3
  41d581:	outs   dx,DWORD PTR ds:[rsi]
  41d582:	js     0x41d5fd
  41d584:	and    BYTE PTR [rax],ch
  41d586:	push   rbx
  41d587:	push   rbx
  41d588:	sub    QWORD PTR [rax],r8
  41d58b:	add    BYTE PTR [rax],al
  41d58d:	add    BYTE PTR [rax],al
  41d58f:	add    BYTE PTR [rax],ah
  41d591:	and    BYTE PTR [rax],ah
  41d593:	and    BYTE PTR [rax],ah
  41d595:	sub    eax,0x6f72702d
  41d59a:	js     0x41d615
  41d59c:	sub    eax,0x2d79656b
  41d5a1:	je     0x41d61c
  41d5a3:	jo     0x41d60a
  41d5a5:	and    BYTE PTR [rcx+rbx*2+0x50],dl
  41d5a9:	and    BYTE PTR [r8+0x72],r10b
  41d5ad:	imul   esi,DWORD PTR [rsi+0x61],0x6b206574
  41d5b4:	gs jns 0x41d5d7
  41d5b7:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x7974
  41d5be:	jo     0x41d625
  41d5c0:	and    BYTE PTR [rsi+0x6f],ah
  41d5c3:	jb     0x41d5e5
  41d5c5:	jo     0x41d639
  41d5c7:	outs   dx,DWORD PTR ds:[rsi]
  41d5c8:	js     0x41d643
  41d5ca:	and    BYTE PTR [rax],ch
  41d5cc:	rex.R
  41d5cd:	rex.RB push r10
  41d5cf:	(bad)  
  41d5d0:	push   rax
  41d5d1:	rex.RB
  41d5d2:	rex.WRB (bad) 
  41d5d4:	rex.RB
  41d5d5:	rex.WRX
  41d5d6:	rex.RXB sub DWORD PTR [r8],r12d
  41d5d9:	sub    BYTE PTR [rbx+0x53],dl
  41d5dc:	sub    QWORD PTR [rax],r8
  41d5df:	add    BYTE PTR [rax],ah
  41d5e1:	and    BYTE PTR [rax],ah
  41d5e3:	and    BYTE PTR [rax],ah
  41d5e5:	sub    eax,0x6f72702d
  41d5ea:	js     0x41d665
  41d5ec:	sub    eax,0x6f67656e
  41d5f1:	je     0x41d65c
  41d5f3:	(bad)  
  41d5f4:	je     0x41d65b
  41d5f6:	and    BYTE PTR [rax],ah
  41d5f8:	push   rbp
  41d5f9:	jae    0x41d660
  41d5fb:	and    BYTE PTR [rax+0x54],cl
  41d5fe:	push   rsp
  41d5ff:	push   rax
  41d600:	and    BYTE PTR [rsi+0x65],cl
  41d603:	outs   dx,DWORD PTR ds:[esi]
  41d605:	je     0x41d670
  41d607:	(bad)  
  41d608:	je     0x41d66f
  41d60a:	and    BYTE PTR [rax],ch
  41d60c:	push   rbx
  41d60d:	push   rax
  41d60e:	rex.WRX
  41d60f:	rex.RB
  41d610:	rex.RXB
  41d611:	rex.WRXB sub QWORD PTR [r8],r12
  41d614:	(bad)  
  41d615:	jne    0x41d68b
  41d617:	push   0x69746e65
  41d61c:	movsxd esp,DWORD PTR [rcx+0x74]
  41d61f:	imul   ebp,DWORD PTR [rdi+0x6e],0x206e6f20
  41d626:	je     0x41d690
  41d628:	and    BYTE PTR gs:[rax+0x72],dh
  41d62c:	outs   dx,DWORD PTR ds:[rsi]
  41d62d:	js     0x41d6a8
  41d62f:	and    BYTE PTR [rax],ch
  41d631:	sub    QWORD PTR [rax],rax
  41d634:	add    BYTE PTR [rax],al
  41d636:	add    BYTE PTR [rax],al
  41d638:	and    BYTE PTR [rax],ah
  41d63a:	and    BYTE PTR [rax],ah
  41d63c:	and    BYTE PTR [rip+0x6f72702d],ch        # 0x6fb4466f
  41d642:	js     0x41d6bd
  41d644:	sub    eax,0x6d6c746e
  41d649:	and    BYTE PTR [rax],ah
  41d64b:	and    BYTE PTR [rax],ah
  41d64d:	push   rbp
  41d64e:	jae    0x41d6b5
  41d650:	and    BYTE PTR [rsi+0x54],cl
  41d653:	rex.WR
  41d654:	rex.WRB and BYTE PTR [r9+0x75],r12b
  41d658:	je     0x41d6c2
  41d65a:	outs   dx,BYTE PTR gs:[rsi]
  41d65c:	je     0x41d6c7
  41d65e:	movsxd esp,DWORD PTR [rcx+0x74]
  41d661:	imul   ebp,DWORD PTR [rdi+0x6e],0x206e6f20
  41d668:	je     0x41d6d2
  41d66a:	and    BYTE PTR gs:[rax+0x72],dh
  41d66e:	outs   dx,DWORD PTR ds:[rsi]
  41d66f:	js     0x41d6ea
  41d671:	and    BYTE PTR [rax],ch
  41d673:	sub    QWORD PTR [rax],rax
  41d676:	add    BYTE PTR [rax],al
  41d678:	and    BYTE PTR [rax],ah
  41d67a:	and    BYTE PTR [rax],ah
  41d67c:	and    BYTE PTR [rip+0x6f72702d],ch        # 0x6fb446af
  41d682:	js     0x41d6fd
  41d684:	sub    eax,0x64616568
  41d689:	gs jb  0x41d6ac
  41d68c:	rex.WR
  41d68d:	rex.WB
  41d68e:	rex.WRX
  41d68f:	and    BYTE PTR [r8+0x61],r10b
  41d693:	jae    0x41d708
  41d695:	and    BYTE PTR [rbx+0x75],ah
  41d698:	jae    0x41d70e
  41d69a:	outs   dx,DWORD PTR ds:[rsi]
  41d69b:	ins    DWORD PTR es:[rdi],dx
  41d69c:	and    BYTE PTR [rax+0x65],ch
  41d69f:	(bad)  
  41d6a0:	fs gs jb 0x41d6c4
  41d6a4:	rex.WR
  41d6a5:	rex.WB
  41d6a6:	rex.WRX
  41d6a7:	and    BYTE PTR [r15+rbp*2+0x20],r14b
  41d6ac:	jo     0x41d720
  41d6ae:	outs   dx,DWORD PTR ds:[rsi]
  41d6af:	js     0x41d72a
  41d6b1:	and    BYTE PTR [rax],ch
  41d6b3:	sub    QWORD PTR [rax],rax
  41d6b6:	add    BYTE PTR [rax],al
  41d6b8:	and    BYTE PTR [rax],ah
  41d6ba:	and    BYTE PTR [rax],ah
  41d6bc:	and    BYTE PTR [rip+0x6f72702d],ch        # 0x6fb446ef
  41d6c2:	js     0x41d73d
  41d6c4:	sub    eax,0x73736170
  41d6c9:	and    BYTE PTR [rax+0x41],dl
  41d6cc:	push   rbx
  41d6cd:	push   rbx
  41d6ce:	and    BYTE PTR [rax+0x61],dl
  41d6d1:	jae    0x41d746
  41d6d3:	and    BYTE PTR [rax+0x68],dh
  41d6d6:	jb     0x41d739
  41d6d8:	jae    0x41d73f
  41d6da:	and    BYTE PTR [rsi+0x6f],ah
  41d6dd:	jb     0x41d6ff
  41d6df:	je     0x41d749
  41d6e1:	and    BYTE PTR gs:[rax+0x72],dh
  41d6e5:	imul   esi,DWORD PTR [rsi+0x61],0x6b206574
  41d6ec:	gs jns 0x41d70f
  41d6ef:	outs   dx,WORD PTR ds:[rsi]
  41d6f1:	jb     0x41d713
  41d6f3:	jo     0x41d767
  41d6f5:	outs   dx,DWORD PTR ds:[rsi]
  41d6f6:	js     0x41d771
  41d6f8:	and    BYTE PTR [rax],ch
  41d6fa:	push   rbx
  41d6fb:	push   rbx
  41d6fc:	sub    QWORD PTR [rax],r8
  41d6ff:	add    BYTE PTR [rax],ah
  41d701:	and    BYTE PTR [rax],ah
  41d703:	and    BYTE PTR [rax],ah
  41d705:	sub    eax,0x6f72702d
  41d70a:	js     0x41d785
  41d70c:	sub    eax,0x2d6c7373
  41d711:	(bad)  
  41d712:	ins    BYTE PTR es:[rdi],dx
  41d713:	ins    BYTE PTR es:[rdi],dx
  41d714:	outs   dx,DWORD PTR ds:[rsi]
  41d715:	ja     0x41d744
  41d717:	(bad)  
  41d718:	gs (bad) 
  41d71a:	jae    0x41d790
  41d71c:	and    BYTE PTR [rcx+0x6c],al
  41d71f:	ins    BYTE PTR es:[rdi],dx
  41d720:	outs   dx,DWORD PTR ds:[rsi]
  41d721:	ja     0x41d743
  41d723:	jae    0x41d78a
  41d725:	movsxd esi,DWORD PTR [rbp+0x72]
  41d728:	imul   esi,DWORD PTR [rcx+rdi*2+0x20],0x77616c66
  41d730:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  41d734:	imul   ebp,DWORD PTR [rbp+0x70],0x65766f72
  41d73b:	and    BYTE PTR [rcx+0x6e],ch
  41d73e:	je     0x41d7a5
  41d740:	jb     0x41d7b1
  41d742:	jo     0x41d764
  41d744:	outs   dx,WORD PTR ds:[rsi]
  41d746:	jb     0x41d768
  41d748:	jo     0x41d7bc
  41d74a:	outs   dx,DWORD PTR ds:[rsi]
  41d74b:	js     0x41d7c6
  41d74d:	and    BYTE PTR [rax],ch
  41d74f:	push   rbx
  41d750:	push   rbx
  41d751:	sub    QWORD PTR [rax],r8
  41d754:	add    BYTE PTR [rax],al
  41d756:	add    BYTE PTR [rax],al
  41d758:	and    BYTE PTR [rax],ah
  41d75a:	and    BYTE PTR [rax],ah
  41d75c:	and    BYTE PTR [rip+0x6f72702d],ch        # 0x6fb4478f
  41d762:	js     0x41d7dd
  41d764:	sub    eax,0x76736c74
  41d769:	xor    DWORD PTR [rax],esp
  41d76b:	and    BYTE PTR [rax],ah
  41d76d:	push   rbp
  41d76e:	jae    0x41d7d5
  41d770:	and    BYTE PTR [rsp+rcx*2+0x53],dl
  41d774:	jbe    0x41d7a7
  41d776:	and    BYTE PTR [rsi+0x6f],ah
  41d779:	jb     0x41d79b
  41d77b:	jo     0x41d7ef
  41d77d:	outs   dx,DWORD PTR ds:[rsi]
  41d77e:	js     0x41d7f9
  41d780:	and    BYTE PTR [rax],ch
  41d782:	push   rbx
  41d783:	push   rbx
  41d784:	sub    QWORD PTR [rax],r8
  41d787:	add    BYTE PTR [rax],ah
  41d789:	and    BYTE PTR [rax],ah
  41d78b:	and    BYTE PTR [rax],ah
  41d78d:	sub    eax,0x6f72702d
  41d792:	js     0x41d80d
  41d794:	sub    eax,0x75736c74
  41d799:	jae    0x41d800
  41d79b:	jb     0x41d7bd
  41d79d:	push   rbp
  41d79e:	push   rbx
  41d79f:	rex.RB push r10
  41d7a1:	and    BYTE PTR [rsp+rcx*2+0x53],dl
  41d7a5:	and    BYTE PTR [rbp+0x73],dh
  41d7a8:	gs jb  0x41d819
  41d7ab:	(bad)  
  41d7ac:	ins    DWORD PTR es:[rdi],dx
  41d7ad:	and    BYTE PTR gs:[rsi+0x6f],ah
  41d7b1:	jb     0x41d7d3
  41d7b3:	jo     0x41d827
  41d7b5:	outs   dx,DWORD PTR ds:[rsi]
  41d7b6:	js     0x41d831
	...
  41d7c0:	and    BYTE PTR [rax],ah
  41d7c2:	and    BYTE PTR [rax],ah
  41d7c4:	and    BYTE PTR [rip+0x6f72702d],ch        # 0x6fb447f7
  41d7ca:	js     0x41d845
  41d7cc:	sub    eax,0x70736c74
  41d7d1:	(bad)  
  41d7d2:	jae    0x41d847
  41d7d4:	ja     0x41d845
  41d7d6:	jb     0x41d83c
  41d7d8:	and    BYTE PTR [rbx+0x54],dl
  41d7db:	push   rdx
  41d7dc:	rex.WB
  41d7dd:	rex.WRX
  41d7de:	and    BYTE PTR [r12+r9*2+0x53],r10b
  41d7e3:	and    BYTE PTR [rax+0x61],dh
  41d7e6:	jae    0x41d85b
  41d7e8:	ja     0x41d859
  41d7ea:	jb     0x41d850
  41d7ec:	and    BYTE PTR [rsi+0x6f],ah
  41d7ef:	jb     0x41d811
  41d7f1:	jo     0x41d865
  41d7f3:	outs   dx,DWORD PTR ds:[rsi]
  41d7f4:	js     0x41d86f
  41d7f6:	add    BYTE PTR [rax],al
  41d7f8:	and    BYTE PTR [rax],ah
  41d7fa:	and    BYTE PTR [rax],ah
  41d7fc:	and    BYTE PTR [rip+0x6f72702d],ch        # 0x6fb4482f
  41d802:	js     0x41d87d
  41d804:	sub    eax,0x61736c74
  41d809:	jne    0x41d87f
  41d80b:	push   0x65707974
  41d810:	and    BYTE PTR [rbx+0x54],dl
  41d813:	push   rdx
  41d814:	rex.WB
  41d815:	rex.WRX
  41d816:	and    BYTE PTR [r12+r9*2+0x53],r10b
  41d81b:	and    BYTE PTR [rcx+0x75],ah
  41d81e:	je     0x41d888
  41d820:	outs   dx,BYTE PTR gs:[rsi]
  41d822:	je     0x41d88d
  41d824:	movsxd esp,DWORD PTR [rcx+0x74]
  41d827:	imul   ebp,DWORD PTR [rdi+0x6e],0x70797420
  41d82e:	and    BYTE PTR gs:[rsi+0x6f],ah
  41d832:	jb     0x41d854
  41d834:	jo     0x41d8a8
  41d836:	outs   dx,DWORD PTR ds:[rsi]
  41d837:	js     0x41d8b2
  41d839:	and    BYTE PTR [rax],ch
  41d83b:	fs gs data16 (bad) 
  41d83f:	jne    0x41d8ad
  41d841:	je     0x41d863
  41d843:	push   rbx
  41d844:	push   rdx
  41d845:	push   rax
  41d846:	sub    DWORD PTR [rax],eax
  41d848:	and    BYTE PTR [rax],ah
  41d84a:	and    BYTE PTR [rax],ah
  41d84c:	and    BYTE PTR [rip+0x6f72702d],ch        # 0x6fb4487f
  41d852:	js     0x41d8cd
  41d854:	sub    eax,0x76726573
  41d859:	imul   esp,DWORD PTR [rbx+0x65],0x6d616e2d
  41d860:	and    BYTE PTR gs:[rsi+0x41],cl
  41d864:	rex.WRB
  41d865:	and    BYTE PTR [r8],r12b
  41d868:	push   rbx
  41d869:	push   rax
  41d86a:	rex.WRX
  41d86b:	rex.RB
  41d86c:	rex.RXB
  41d86d:	rex.WRXB and BYTE PTR [r8+0x72],r14b
  41d871:	outs   dx,DWORD PTR ds:[rsi]
  41d872:	js     0x41d8ed
  41d874:	and    BYTE PTR [rbx+0x65],dh
  41d877:	jb     0x41d8ef
  41d879:	imul   esp,DWORD PTR [rbx+0x65],0x6d616e20
  41d880:	add    BYTE PTR gs:[rax],al
  41d883:	add    BYTE PTR [rax],al
  41d885:	add    BYTE PTR [rax],al
  41d887:	add    BYTE PTR [rax],ah
  41d889:	and    BYTE PTR [rax],ah
  41d88b:	and    BYTE PTR [rax],ah
  41d88d:	sub    eax,0x7265732d
  41d892:	jbe    0x41d8fd
  41d894:	movsxd esp,DWORD PTR [rbp+0x2d]
  41d897:	outs   dx,BYTE PTR ds:[rsi]
  41d898:	(bad)  
  41d899:	ins    DWORD PTR es:[rdi],dx
  41d89a:	and    BYTE PTR gs:[rsi+0x41],cl
  41d89e:	rex.WRB
  41d89f:	and    BYTE PTR [r8],r12b
  41d8a2:	push   rbx
  41d8a3:	push   rax
  41d8a4:	rex.WRX
  41d8a5:	rex.RB
  41d8a6:	rex.RXB
  41d8a7:	rex.WRXB and BYTE PTR [r11+0x65],r14b
  41d8ab:	jb     0x41d923
  41d8ad:	imul   esp,DWORD PTR [rbx+0x65],0x6d616e20
  41d8b4:	add    BYTE PTR gs:[rax],al
  41d8b7:	add    BYTE PTR [rax],ah
  41d8b9:	sub    eax,0x2d202c55
  41d8be:	sub    eax,0x786f7270
  41d8c3:	jns    0x41d8f2
  41d8c5:	jne    0x41d93a
  41d8c7:	gs jb  0x41d8ea
  41d8ca:	push   rbp
  41d8cb:	push   rbx
  41d8cc:	rex.RB push r10
  41d8ce:	pop    rbx
  41d8cf:	cmp    dl,BYTE PTR [rax+0x41]
  41d8d2:	push   rbx
  41d8d3:	push   rbx
  41d8d4:	push   rdi
  41d8d5:	rex.WRXB push r10
  41d8d7:	rex.R pop rbp
  41d8d9:	and    BYTE PTR [rax],ah
  41d8db:	push   rax
  41d8dc:	jb     0x41d94d
  41d8de:	js     0x41d959
  41d8e0:	and    BYTE PTR [rbp+0x73],dh
  41d8e3:	gs jb  0x41d906
  41d8e6:	(bad)  
  41d8e7:	outs   dx,BYTE PTR ds:[rsi]
  41d8e8:	and    BYTE PTR fs:[rax+0x61],dh
  41d8ec:	jae    0x41d961
  41d8ee:	ja     0x41d95f
  41d8f0:	jb     0x41d956
  41d8f2:	add    BYTE PTR [rax],al
  41d8f4:	add    BYTE PTR [rax],al
  41d8f6:	add    BYTE PTR [rax],al
  41d8f8:	and    BYTE PTR [rax],ah
  41d8fa:	and    BYTE PTR [rax],ah
  41d8fc:	and    BYTE PTR [rip+0x6f72702d],ch        # 0x6fb4492f
  41d902:	js     0x41d97d
  41d904:	xor    DWORD PTR [rsi],ebp
  41d906:	xor    BYTE PTR [rax],ah
  41d908:	rex.W
  41d909:	rex.WRXB push r11
  41d90b:	push   rsp
  41d90c:	pop    rbx
  41d90d:	cmp    dl,BYTE PTR [rax+0x4f]
  41d910:	push   rdx
  41d911:	push   rsp
  41d912:	pop    rbp
  41d913:	and    BYTE PTR [rax],ah
  41d915:	push   rbp
  41d916:	jae    0x41d97d
  41d918:	and    BYTE PTR [rax+0x54],cl
  41d91b:	push   rsp
  41d91c:	push   rax
  41d91d:	(bad)  
  41d91e:	xor    DWORD PTR [rsi],ebp
  41d920:	xor    BYTE PTR [rax],ah
  41d922:	jo     0x41d996
  41d924:	outs   dx,DWORD PTR ds:[rsi]
  41d925:	js     0x41d9a0
  41d927:	and    BYTE PTR [rdi+0x6e],ch
  41d92a:	and    BYTE PTR [rdi+0x69],ah
  41d92d:	jbe    0x41d994
  41d92f:	outs   dx,BYTE PTR ds:[rsi]
  41d930:	and    BYTE PTR [rax+0x6f],dh
  41d933:	jb     0x41d9a9
  41d935:	add    BYTE PTR [rax],al
  41d937:	add    BYTE PTR [rax],ah
  41d939:	sub    eax,0x2d202c70
  41d93e:	sub    eax,0x786f7270
  41d943:	jns    0x41d9b9
  41d945:	jne    0x41d9b5
  41d947:	outs   dx,BYTE PTR ds:[rsi]
  41d948:	gs ins BYTE PTR es:[rdi],dx
  41d94a:	and    BYTE PTR [rax],ah
  41d94c:	and    BYTE PTR [rdi+0x70],cl
  41d94f:	gs jb  0x41d9b3
  41d952:	je     0x41d9b9
  41d954:	and    BYTE PTR [rax+rbp*2+0x72],dh
  41d958:	outs   dx,DWORD PTR ds:[rsi]
  41d959:	jne    0x41d9c2
  41d95b:	push   0x48206120
  41d960:	push   rsp
  41d961:	push   rsp
  41d962:	push   rax
  41d963:	and    BYTE PTR [rax+0x72],dh
  41d966:	outs   dx,DWORD PTR ds:[rsi]
  41d967:	js     0x41d9e2
  41d969:	and    BYTE PTR [rbp+rsi*2+0x6e],dh
  41d96d:	outs   dx,BYTE PTR ds:[rsi]
  41d96e:	gs ins BYTE PTR es:[rdi],dx
  41d970:	and    BYTE PTR [rax],ch
  41d972:	jne    0x41d9e7
  41d974:	imul   ebp,DWORD PTR [rsi+0x67],0x4e4f4320
  41d97b:	rex.WRX
  41d97c:	rex.RB
  41d97d:	rex.XB push r12
  41d97f:	sub    DWORD PTR [rax],eax
  41d981:	add    BYTE PTR [rax],al
  41d983:	add    BYTE PTR [rax],al
  41d985:	add    BYTE PTR [rax],al
  41d987:	add    BYTE PTR [rax],ah
  41d989:	and    BYTE PTR [rax],ah
  41d98b:	and    BYTE PTR [rax],ah
  41d98d:	sub    eax,0x6275702d
  41d992:	imul   esp,DWORD PTR [rbp+0x79],0x20
  41d996:	rex.WXB
  41d997:	rex.RB pop r9
  41d999:	and    BYTE PTR [rax],ah
  41d99b:	and    BYTE PTR [rax],ah
  41d99d:	push   rax
  41d99e:	jne    0x41da02
  41d9a0:	ins    BYTE PTR es:[rdi],dx
  41d9a1:	imul   esp,DWORD PTR [rbx+0x20],0x2079656b
  41d9a8:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x616e
  41d9af:	ins    DWORD PTR es:[rdi],dx
  41d9b0:	and    BYTE PTR gs:[rax],ch
  41d9b3:	push   rbx
  41d9b4:	push   rbx
  41d9b5:	sub    QWORD PTR [rax],rax
  41d9b8:	and    BYTE PTR [rip+0x2d202c51],ch        # 0x2d62060f
  41d9be:	sub    eax,0x746f7571
  41d9c3:	and    BYTE PTR gs:[rbx+0x4d],al
  41d9c7:	and    BYTE PTR [rax],r12b
  41d9ca:	and    BYTE PTR [rax],ah
  41d9cc:	and    BYTE PTR [rbx+0x65],dl
  41d9cf:	outs   dx,BYTE PTR ds:[rsi]
  41d9d0:	and    BYTE PTR fs:[rbx+0x6f],ah
  41d9d4:	ins    DWORD PTR es:[rdi],dx
  41d9d5:	ins    DWORD PTR es:[rdi],dx
  41d9d6:	(bad)  
  41d9d7:	outs   dx,BYTE PTR ds:[rsi]
  41d9d8:	sub    BYTE PTR fs:[rbx+0x29],dh
  41d9dc:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  41d9e0:	jae    0x41da47
  41d9e2:	jb     0x41da5a
  41d9e4:	gs jb  0x41da07
  41d9e7:	(bad)  
  41d9e8:	outs   dx,WORD PTR gs:[rsi]
  41d9eb:	jb     0x41da52
  41d9ed:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  41d9f1:	outs   dx,BYTE PTR ds:[rsi]
  41d9f2:	jae    0x41da5a
  41d9f4:	gs jb  0x41da17
  41d9f7:	sub    BYTE PTR [rsi+0x2f],al
  41d9fa:	push   rbx
  41d9fb:	rex.RX push rsp
  41d9fd:	push   rax
  41d9fe:	sub    DWORD PTR [rax],eax
  41da00:	and    BYTE PTR [rax],ah
  41da02:	and    BYTE PTR [rax],ah
  41da04:	and    BYTE PTR [rip+0x6e61722d],ch        # 0x6ea34c37
  41da0a:	outs   dx,DWORD PTR fs:[rsi]
  41da0c:	ins    DWORD PTR es:[rdi],dx
  41da0d:	sub    eax,0x656c6966
  41da12:	and    BYTE PTR [rsi+0x49],al
  41da15:	rex.WR
  41da16:	and    BYTE PTR [r8],r12b
  41da19:	imul   r13d,DWORD PTR [rbp+r12*2+0x20],0x20726f66
  41da22:	jb     0x41da89
  41da24:	(bad)  
  41da25:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x6e617220
  41da2d:	outs   dx,DWORD PTR fs:[rsi]
  41da2f:	ins    DWORD PTR es:[rdi],dx
  41da30:	and    BYTE PTR [rcx+riz*2+0x74],ah
  41da34:	(bad)  
  41da35:	and    BYTE PTR [rsi+0x72],ah
  41da38:	outs   dx,DWORD PTR ds:[rsi]
  41da39:	ins    DWORD PTR es:[rdi],dx
  41da3a:	and    BYTE PTR [rax],ch
  41da3c:	push   rbx
  41da3d:	push   rbx
  41da3e:	sub    QWORD PTR [rax],r8
  41da41:	add    BYTE PTR [rax],al
  41da43:	add    BYTE PTR [rax],al
  41da45:	add    BYTE PTR [rax],al
  41da47:	add    BYTE PTR [rax],ah
  41da49:	sub    eax,0x2d202c72
  41da4e:	sub    eax,0x676e6172
  41da53:	and    BYTE PTR gs:[rdx+0x41],dl
  41da57:	rex.WRX
  41da58:	rex.RXB
  41da59:	and    BYTE PTR [r8],r12b
  41da5c:	and    BYTE PTR [rdx+0x65],dl
  41da5f:	je     0x41dad3
  41da61:	imul   esp,DWORD PTR [rbp+0x76],0x6e6f2065
  41da68:	ins    BYTE PTR es:[rdi],dx
  41da69:	jns    0x41da8b
  41da6b:	je     0x41dad5
  41da6d:	and    BYTE PTR gs:[rdx+0x79],ah
  41da71:	je     0x41dad8
  41da73:	jae    0x41da95
  41da75:	ja     0x41dae0
  41da77:	je     0x41dae1
  41da79:	imul   ebp,DWORD PTR [rsi+0x20],0x474e4152
  41da80:	add    BYTE PTR [r8],r8b
  41da83:	add    BYTE PTR [rax],al
  41da85:	add    BYTE PTR [rax],al
  41da87:	add    BYTE PTR [rax],ah
  41da89:	and    BYTE PTR [rax],ah
  41da8b:	and    BYTE PTR [rax],ah
  41da8d:	sub    eax,0x7761722d
  41da92:	and    BYTE PTR [rax],ah
  41da94:	and    BYTE PTR [rax],ah
  41da96:	and    BYTE PTR [rax],ah
  41da98:	and    BYTE PTR [rax],ah
  41da9a:	and    BYTE PTR [rax],ah
  41da9c:	and    BYTE PTR [rdi+rbp*2+0x20],al
  41daa0:	rex.W push rsp
  41daa2:	push   rsp
  41daa3:	push   rax
  41daa4:	and    BYTE PTR [rdx],ah
  41daa6:	jb     0x41db09
  41daa8:	ja     0x41dacc
  41daaa:	cmp    esp,DWORD PTR [rax]
  41daac:	outs   dx,BYTE PTR ds:[rsi]
  41daad:	outs   dx,DWORD PTR ds:[rsi]
  41daae:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  41dab2:	outs   dx,BYTE PTR ds:[rsi]
  41dab3:	jae    0x41db1b
  41dab5:	gs jb  0x41dad8
  41dab8:	fs movsxd ebp,DWORD PTR gs:[rdi+0x64]
  41dabd:	imul   ebp,DWORD PTR [rsi+0x67],0x29482820
  41dac4:	add    BYTE PTR [rax],al
  41dac6:	add    BYTE PTR [rax],al
  41dac8:	and    BYTE PTR [rip+0x2d202c65],ch        # 0x2d620733
  41dace:	sub    eax,0x65666572
  41dad3:	jb     0x41db3a
  41dad5:	jb     0x41daf7
  41dad7:	and    BYTE PTR [rax],ah
  41dad9:	and    BYTE PTR [rax],ah
  41dadb:	and    BYTE PTR [rax],ah
  41dadd:	push   rdx
  41dade:	gs data16 gs jb 0x41db48
  41dae3:	jb     0x41db05
  41dae5:	push   rbp
  41dae6:	push   rdx
  41dae7:	rex.WR and BYTE PTR [rax],r13b
  41daea:	sub    QWORD PTR [rax],rax
  41daed:	add    BYTE PTR [rax],al
  41daef:	add    BYTE PTR [rax],ah
  41daf1:	sub    eax,0x2d202c4a
  41daf6:	sub    eax,0x6f6d6572
  41dafb:	je     0x41db62
  41dafd:	sub    eax,0x64616568
  41db02:	gs jb  0x41db32
  41db05:	outs   dx,BYTE PTR ds:[rsi]
  41db06:	(bad)  
  41db07:	ins    DWORD PTR es:[rdi],dx
  41db08:	and    BYTE PTR gs:[rax],ah
  41db0b:	push   rbp
  41db0c:	jae    0x41db73
  41db0e:	and    BYTE PTR [rax+rbp*2+0x65],dh
  41db12:	and    BYTE PTR [rax+0x65],ch
  41db15:	(bad)  
  41db16:	fs gs jb 0x41db47
  41db1a:	jo     0x41db8e
  41db1c:	outs   dx,DWORD PTR ds:[rsi]
  41db1d:	jbe    0x41db88
  41db1f:	fs gs and BYTE PTR fs:[rsi+0x69],ah
  41db25:	ins    BYTE PTR es:[rdi],dx
  41db26:	outs   dx,BYTE PTR gs:[rsi]
  41db28:	(bad)  
  41db29:	ins    DWORD PTR es:[rdi],dx
  41db2a:	and    BYTE PTR gs:[rax],ch
  41db2d:	sub    QWORD PTR [rax],rax
  41db30:	and    BYTE PTR [rip+0x2d202c4f],ch        # 0x2d620785
  41db36:	sub    eax,0x6f6d6572
  41db3b:	je     0x41dba2
  41db3d:	sub    eax,0x656d616e
  41db42:	and    BYTE PTR [rax],ah
  41db44:	and    BYTE PTR [rdi+0x72],dl
  41db47:	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x7074756f
  41db4f:	jne    0x41dbc5
  41db51:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  41db55:	(bad)  
  41db56:	and    BYTE PTR [rsi+0x69],ah
  41db59:	ins    BYTE PTR es:[rdi],dx
  41db5a:	and    BYTE PTR gs:[rsi+0x61],ch
  41db5e:	ins    DWORD PTR es:[rdi],dx
  41db5f:	gs and BYTE PTR fs:[rcx+0x73],ah
  41db64:	and    BYTE PTR [rax+rbp*2+0x65],dh
  41db68:	and    BYTE PTR [rdx+0x65],dh
  41db6b:	ins    DWORD PTR es:[rdi],dx
  41db6c:	outs   dx,DWORD PTR ds:[rsi]
  41db6d:	je     0x41dbd4
  41db6f:	and    BYTE PTR [rsi+0x69],ah
  41db72:	ins    BYTE PTR es:[rdi],dx
  41db73:	add    BYTE PTR gs:[rax],al
  41db76:	add    BYTE PTR [rax],al
  41db78:	and    BYTE PTR [rax],ah
  41db7a:	and    BYTE PTR [rax],ah
  41db7c:	and    BYTE PTR [rip+0x6d65722d],ch        # 0x6da74daf
  41db82:	outs   dx,DWORD PTR ds:[rsi]
  41db83:	je     0x41dbea
  41db85:	sub    eax,0x656d616e
  41db8a:	sub    eax,0x206c6c61
  41db8f:	and    BYTE PTR [rbp+0x73],dl
  41db92:	and    BYTE PTR gs:[rax+rbp*2+0x65],dh
  41db97:	and    BYTE PTR [rdx+0x65],dh
  41db9a:	ins    DWORD PTR es:[rdi],dx
  41db9b:	outs   dx,DWORD PTR ds:[rsi]
  41db9c:	je     0x41dc03
  41db9e:	and    BYTE PTR [rsi+0x69],ah
  41dba1:	ins    BYTE PTR es:[rdi],dx
  41dba2:	and    BYTE PTR gs:[rsi+0x61],ch
  41dba6:	ins    DWORD PTR es:[rdi],dx
  41dba7:	and    BYTE PTR gs:[rsi+0x6f],ah
  41dbab:	jb     0x41dbcd
  41dbad:	(bad)  
  41dbae:	ins    BYTE PTR es:[rdi],dx
  41dbaf:	ins    BYTE PTR es:[rdi],dx
  41dbb0:	and    BYTE PTR [rbp+0x52],dl
  41dbb3:	rex.WR jae 0x41dbb6
  41dbb6:	add    BYTE PTR [rax],al
  41dbb8:	and    BYTE PTR [rip+0x2d202c52],ch        # 0x2d620810
  41dbbe:	sub    eax,0x6f6d6572
  41dbc3:	je     0x41dc2a
  41dbc5:	sub    eax,0x656d6974
  41dbca:	and    BYTE PTR [rax],ah
  41dbcc:	and    BYTE PTR [rbx+0x65],dl
  41dbcf:	je     0x41dbf1
  41dbd1:	je     0x41dc3b
  41dbd3:	and    BYTE PTR gs:[rdx+0x65],dh
  41dbd7:	ins    DWORD PTR es:[rdi],dx
  41dbd8:	outs   dx,DWORD PTR ds:[rsi]
  41dbd9:	je     0x41dc40
  41dbdb:	and    BYTE PTR [rsi+0x69],ah
  41dbde:	ins    BYTE PTR es:[rdi],dx
  41dbdf:	gs (bad) 
  41dbe1:	jae    0x41dc03
  41dbe3:	je     0x41dc4e
  41dbe5:	ins    DWORD PTR es:[rdi],dx
  41dbe6:	and    BYTE PTR gs:[rdi+0x6e],ch
  41dbea:	and    BYTE PTR [rax+rbp*2+0x65],dh
  41dbee:	and    BYTE PTR [rdi+rbp*2+0x63],ch
  41dbf2:	(bad)  
  41dbf3:	ins    BYTE PTR es:[rdi],dx
  41dbf4:	and    BYTE PTR [rdi+0x75],ch
  41dbf7:	je     0x41dc69
  41dbf9:	jne    0x41dc6f
  41dbfb:	add    BYTE PTR [rax],al
  41dbfd:	add    BYTE PTR [rax],al
  41dbff:	add    BYTE PTR [rax],ah
  41dc01:	sub    eax,0x2d202c58
  41dc06:	sub    eax,0x75716572
  41dc0b:	gs jae 0x41dc82
  41dc0e:	and    BYTE PTR [rbx+0x4f],al
  41dc11:	rex.WRB
  41dc12:	rex.WRB
  41dc13:	rex.B
  41dc14:	rex.WRX
  41dc15:	and    BYTE PTR [rax],r12b
  41dc18:	push   rbx
  41dc19:	jo     0x41dc80
  41dc1b:	movsxd ebp,DWORD PTR [rcx+0x66]
  41dc1e:	jns    0x41dc40
  41dc20:	jb     0x41dc87
  41dc22:	jno    0x41dc99
  41dc24:	gs jae 0x41dc9b
  41dc27:	and    BYTE PTR [rbx+0x6f],ah
  41dc2a:	ins    DWORD PTR es:[rdi],dx
  41dc2b:	ins    DWORD PTR es:[rdi],dx
  41dc2c:	(bad)  
  41dc2d:	outs   dx,BYTE PTR ds:[rsi]
  41dc2e:	and    BYTE PTR fs:[rdi+rbp*2+0x20],dh
  41dc33:	jne    0x41dca8
  41dc35:	add    BYTE PTR gs:[rax],al
  41dc38:	and    BYTE PTR [rax],ah
  41dc3a:	and    BYTE PTR [rax],ah
  41dc3c:	and    BYTE PTR [rip+0x7365722d],ch        # 0x73a74e6f
  41dc42:	outs   dx,DWORD PTR ds:[rsi]
  41dc43:	ins    BYTE PTR es:[rdi],dx
  41dc44:	jbe    0x41dcab
  41dc46:	and    BYTE PTR [rax+0x4f],cl
  41dc49:	push   rbx
  41dc4a:	push   rsp
  41dc4b:	cmp    dl,BYTE PTR [rax+0x4f]
  41dc4e:	push   rdx
  41dc4f:	push   rsp
  41dc50:	cmp    al,BYTE PTR [rcx+0x44]
  41dc53:	rex.R push rdx
  41dc55:	rex.RB push r11
  41dc57:	push   rbx
  41dc58:	and    BYTE PTR [rax],ah
  41dc5a:	rex.RX outs dx,DWORD PTR ds:[rsi]
  41dc5c:	jb     0x41dcc1
  41dc5e:	and    BYTE PTR gs:[rdx+0x65],dh
  41dc62:	jae    0x41dcd3
  41dc64:	ins    BYTE PTR es:[rdi],dx
  41dc65:	jbe    0x41dccc
  41dc67:	and    BYTE PTR [rdi+0x66],ch
  41dc6a:	and    BYTE PTR [rax+0x4f],cl
  41dc6d:	push   rbx
  41dc6e:	push   rsp
  41dc6f:	cmp    dl,BYTE PTR [rax+0x4f]
  41dc72:	push   rdx
  41dc73:	push   rsp
  41dc74:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  41dc78:	rex.B
  41dc79:	rex.R
  41dc7a:	rex.R push rdx
  41dc7c:	rex.RB push r11
  41dc7e:	push   rbx
  41dc7f:	add    BYTE PTR [rax],ah
  41dc81:	and    BYTE PTR [rax],ah
  41dc83:	and    BYTE PTR [rax],ah
  41dc85:	sub    eax,0x7465722d
  41dc8a:	jb     0x41dd05
  41dc8c:	and    BYTE PTR [rsi+0x55],cl
  41dc8f:	rex.WRB and BYTE PTR [r8],r12b
  41dc92:	and    BYTE PTR [rdx+0x65],dl
  41dc95:	je     0x41dd09
  41dc97:	jns    0x41dcb9
  41dc99:	jb     0x41dd00
  41dc9b:	jno    0x41dd12
  41dc9d:	gs jae 0x41dd14
  41dca0:	and    BYTE PTR [rsi+0x55],cl
  41dca3:	rex.WRB and BYTE PTR [r9+rbp*2+0x6d],r14b
  41dca8:	gs jae 0x41dccb
  41dcab:	imul   esp,DWORD PTR [rsi+0x20],0x6e617274
  41dcb2:	jae    0x41dd1d
  41dcb4:	outs   dx,BYTE PTR gs:[rsi]
  41dcb6:	je     0x41dcd8
  41dcb8:	jo     0x41dd2c
  41dcba:	outs   dx,DWORD PTR ds:[rsi]
  41dcbb:	(bad)  
  41dcbc:	ins    BYTE PTR es:[rdi],dx
  41dcbd:	gs ins DWORD PTR es:[rdi],dx
  41dcbf:	jae    0x41dce1
  41dcc1:	outs   dx,DWORD PTR ds:[rsi]
  41dcc2:	movsxd esp,DWORD PTR [rbx+0x75]
  41dcc5:	jb     0x41dcc7
  41dcc7:	add    BYTE PTR [rax],ah
  41dcc9:	and    BYTE PTR [rax],ah
  41dccb:	and    BYTE PTR [rax],ah
  41dccd:	sub    eax,0x7465722d
  41dcd2:	jb     0x41dd4d
  41dcd4:	sub    eax,0x6e6e6f63
  41dcd9:	jb     0x41dd40
  41dcdb:	data16 jne 0x41dd51
  41dcde:	gs and BYTE PTR fs:[rax],ah
  41dce2:	push   rdx
  41dce3:	gs je  0x41dd58
  41dce6:	jns    0x41dd08
  41dce8:	outs   dx,DWORD PTR ds:[rsi]
  41dce9:	outs   dx,BYTE PTR ds:[rsi]
  41dcea:	and    BYTE PTR [rbx+0x6f],ah
  41dced:	outs   dx,BYTE PTR ds:[rsi]
  41dcee:	outs   dx,BYTE PTR ds:[rsi]
  41dcef:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  41dcf4:	outs   dx,BYTE PTR ds:[rsi]
  41dcf5:	and    BYTE PTR [rdx+0x65],dh
  41dcf8:	data16 jne 0x41dd6e
  41dcfb:	gs and BYTE PTR fs:[rax],ch
  41dcff:	jne    0x41dd74
  41dd01:	and    BYTE PTR gs:[rdi+0x69],dh
  41dd05:	je     0x41dd6f
  41dd07:	and    BYTE PTR [rip+0x7465722d],ch        # 0x74a74f3a
  41dd0d:	jb     0x41dd88
  41dd0f:	sub    DWORD PTR [rax],eax
  41dd11:	add    BYTE PTR [rax],al
  41dd13:	add    BYTE PTR [rax],al
  41dd15:	add    BYTE PTR [rax],al
  41dd17:	add    BYTE PTR [rax],ah
  41dd19:	and    BYTE PTR [rax],ah
  41dd1b:	and    BYTE PTR [rax],ah
  41dd1d:	sub    eax,0x7465722d
  41dd22:	jb     0x41dd9d
  41dd24:	sub    eax,0x616c6564
  41dd29:	jns    0x41dd4b
  41dd2b:	push   rbx
  41dd2c:	rex.RB
  41dd2d:	rex.XB
  41dd2e:	rex.WRXB
  41dd2f:	rex.WRX
  41dd30:	rex.R push rbx
  41dd32:	and    BYTE PTR [rax],ah
  41dd34:	push   rdi
  41dd35:	(bad)  
  41dd36:	imul   esi,DWORD PTR [rax+riz*1+0x53],0x4e4f4345
  41dd3e:	rex.R push rbx
  41dd40:	and    BYTE PTR [rdx+0x65],ah
  41dd43:	je     0x41ddbc
  41dd45:	gs outs dx,BYTE PTR gs:[rsi]
  41dd48:	and    BYTE PTR [rdx+0x65],dh
  41dd4b:	je     0x41ddbf
  41dd4d:	imul   esp,DWORD PTR [rbp+0x73],0x0
  41dd54:	add    BYTE PTR [rax],al
  41dd56:	add    BYTE PTR [rax],al
  41dd58:	and    BYTE PTR [rax],ah
  41dd5a:	and    BYTE PTR [rax],ah
  41dd5c:	and    BYTE PTR [rip+0x7465722d],ch        # 0x74a74f8f
  41dd62:	jb     0x41dddd
  41dd64:	sub    eax,0x2d78616d
  41dd69:	je     0x41ddd4
  41dd6b:	ins    DWORD PTR es:[rdi],dx
  41dd6c:	and    BYTE PTR gs:[rbx+0x45],dl
  41dd70:	rex.XB
  41dd71:	rex.WRXB
  41dd72:	rex.WRX
  41dd73:	rex.R push rbx
  41dd75:	and    BYTE PTR [rax],ah
  41dd77:	push   rdx
  41dd78:	gs je  0x41dded
  41dd7b:	jns    0x41dd9d
  41dd7d:	outs   dx,DWORD PTR ds:[rsi]
  41dd7e:	outs   dx,BYTE PTR ds:[rsi]
  41dd7f:	ins    BYTE PTR es:[rdi],dx
  41dd80:	jns    0x41dda2
  41dd82:	ja     0x41dded
  41dd84:	je     0x41ddee
  41dd86:	imul   ebp,DWORD PTR [rsi+0x20],0x73696874
  41dd8d:	and    BYTE PTR [rax+0x65],dh
  41dd90:	jb     0x41ddfb
  41dd92:	outs   dx,DWORD PTR ds:[rsi]
  41dd93:	add    BYTE PTR fs:[rax],al
  41dd96:	add    BYTE PTR [rax],al
  41dd98:	and    BYTE PTR [rax],ah
  41dd9a:	and    BYTE PTR [rax],ah
  41dd9c:	and    BYTE PTR [rip+0x7361732d],ch        # 0x73a350cf
  41dda2:	ins    BYTE PTR es:[rdi],dx
  41dda3:	sub    eax,0x20207269
  41dda8:	and    BYTE PTR [rax],ah
  41ddaa:	and    BYTE PTR [rax],ah
  41ddac:	and    BYTE PTR [rbp+0x6e],al
  41ddaf:	(bad)  
  41ddb0:	(bad)  
  41ddb1:	ins    BYTE PTR es:[rdi],dx
  41ddb2:	and    BYTE PTR gs:[rcx+0x6e],ch
  41ddb6:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x6572206c
  41ddbe:	jae    0x41de30
  41ddc0:	outs   dx,DWORD PTR ds:[rsi]
  41ddc1:	outs   dx,BYTE PTR ds:[rsi]
  41ddc2:	jae    0x41de29
  41ddc4:	and    BYTE PTR [rcx+0x6e],ch
  41ddc7:	and    BYTE PTR [rbx+0x41],dl
  41ddca:	push   rbx
  41ddcb:	rex.WR and BYTE PTR [rcx+0x75],r12b
  41ddcf:	je     0x41de39
  41ddd1:	outs   dx,BYTE PTR gs:[rsi]
  41ddd3:	je     0x41de3e
  41ddd5:	movsxd esp,DWORD PTR [rcx+0x74]
  41ddd8:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
  41dddf:	add    BYTE PTR [rax],ah
  41dde1:	sub    eax,0x2d202c53
  41dde6:	sub    eax,0x776f6873
  41ddeb:	sub    eax,0x6f727265
  41ddf0:	jb     0x41de12
  41ddf2:	and    BYTE PTR [rax],ah
  41ddf4:	and    BYTE PTR [rbx+0x68],dl
  41ddf7:	outs   dx,DWORD PTR ds:[rsi]
  41ddf8:	ja     0x41de1a
  41ddfa:	gs jb  0x41de6f
  41ddfd:	outs   dx,DWORD PTR ds:[rsi]
  41ddfe:	jb     0x41de2e
  41de00:	and    BYTE PTR [rdi+0x69],dl
  41de03:	je     0x41de6d
  41de05:	and    BYTE PTR [rip+0x6d202c73],ch        # 0x6d620a7e
  41de0b:	(bad)  
  41de0c:	imul   esp,DWORD PTR [rbp+0x20],0x63
  41de10:	jne    0x41de84
  41de12:	ins    BYTE PTR es:[rdi],dx
  41de13:	and    BYTE PTR [rbx+0x68],dh
  41de16:	outs   dx,DWORD PTR ds:[rsi]
  41de17:	ja     0x41de39
  41de19:	gs jb  0x41de8e
  41de1c:	outs   dx,DWORD PTR ds:[rsi]
  41de1d:	jb     0x41de92
  41de1f:	and    BYTE PTR [rdi+0x68],dh
  41de22:	outs   dx,BYTE PTR gs:[rsi]
  41de24:	and    BYTE PTR [rax+rbp*2+0x65],dh
  41de28:	jns    0x41de4a
  41de2a:	outs   dx,DWORD PTR ds:[rsi]
  41de2b:	movsxd esp,DWORD PTR [rbx+0x75]
  41de2e:	jb     0x41de30
  41de30:	and    BYTE PTR [rip+0x2d202c73],ch        # 0x2d620aa9
  41de36:	sub    eax,0x656c6973
  41de3b:	outs   dx,BYTE PTR ds:[rsi]
  41de3c:	je     0x41de5e
  41de3e:	and    BYTE PTR [rax],ah
  41de40:	and    BYTE PTR [rax],ah
  41de42:	and    BYTE PTR [rax],ah
  41de44:	and    BYTE PTR [rbx+0x69],dl
  41de47:	ins    BYTE PTR es:[rdi],dx
  41de48:	outs   dx,BYTE PTR gs:[rsi]
  41de4a:	je     0x41de6c
  41de4c:	ins    DWORD PTR es:[rdi],dx
  41de4d:	outs   dx,DWORD PTR ds:[rsi]
  41de4e:	fs and BYTE PTR gs:[rax],ch
  41de52:	outs   dx,DWORD PTR fs:[rsi]
  41de54:	outs   dx,BYTE PTR ds:[rsi]
  41de55:	(bad)  
  41de56:	je     0x41de78
  41de58:	outs   dx,DWORD PTR ds:[rsi]
  41de59:	jne    0x41decf
  41de5b:	jo     0x41ded2
  41de5d:	je     0x41de7f
  41de5f:	(bad)  
  41de60:	outs   dx,BYTE PTR ds:[rsi]
  41de61:	jns    0x41ded7
  41de63:	push   0x29676e69
	...
  41de70:	and    BYTE PTR [rax],ah
  41de72:	and    BYTE PTR [rax],ah
  41de74:	and    BYTE PTR [rip+0x636f732d],ch        # 0x63b151a7
  41de7a:	imul   esi,DWORD PTR [rbx+0x34],0x20
  41de7e:	rex.W
  41de7f:	rex.WRXB push r11
  41de81:	push   rsp
  41de82:	pop    rbx
  41de83:	cmp    dl,BYTE PTR [rax+0x4f]
  41de86:	push   rdx
  41de87:	push   rsp
  41de88:	pop    rbp
  41de89:	and    BYTE PTR [rax],ah
  41de8b:	push   rbx
  41de8c:	rex.WRXB
  41de8d:	rex.XB
  41de8e:	rex.WXB push r11
  41de90:	xor    al,0x20
  41de92:	jo     0x41df06
  41de94:	outs   dx,DWORD PTR ds:[rsi]
  41de95:	js     0x41df10
  41de97:	and    BYTE PTR [rdi+0x6e],ch
  41de9a:	and    BYTE PTR [rdi+0x69],ah
  41de9d:	jbe    0x41df04
  41de9f:	outs   dx,BYTE PTR ds:[rsi]
  41dea0:	and    BYTE PTR [rax+0x6f],ch
  41dea3:	jae    0x41df19
  41dea5:	and    BYTE PTR [rbx],ch
  41dea7:	and    BYTE PTR [rax+0x6f],dh
  41deaa:	jb     0x41df20
  41deac:	add    BYTE PTR [rax],al
  41deae:	add    BYTE PTR [rax],al
  41deb0:	and    BYTE PTR [rax],ah
  41deb2:	and    BYTE PTR [rax],ah
  41deb4:	and    BYTE PTR [rip+0x636f732d],ch        # 0x63b151e7
  41deba:	imul   esi,DWORD PTR [rbx+0x34],0x61
  41debe:	and    BYTE PTR [rax+0x4f],cl
  41dec1:	push   rbx
  41dec2:	push   rsp
  41dec3:	pop    rbx
  41dec4:	cmp    dl,BYTE PTR [rax+0x4f]
  41dec7:	push   rdx
  41dec8:	push   rsp
  41dec9:	pop    rbp
  41deca:	and    BYTE PTR [rax],ah
  41decc:	push   rbx
  41decd:	rex.WRXB
  41dece:	rex.XB
  41decf:	rex.WXB push r11
  41ded1:	xor    al,0x61
  41ded3:	and    BYTE PTR [rax+0x72],dh
  41ded6:	outs   dx,DWORD PTR ds:[rsi]
  41ded7:	js     0x41df52
  41ded9:	and    BYTE PTR [rdi+0x6e],ch
  41dedc:	and    BYTE PTR [rdi+0x69],ah
  41dedf:	jbe    0x41df46
  41dee1:	outs   dx,BYTE PTR ds:[rsi]
  41dee2:	and    BYTE PTR [rax+0x6f],ch
  41dee5:	jae    0x41df5b
  41dee7:	and    BYTE PTR [rbx],ch
  41dee9:	and    BYTE PTR [rax+0x6f],dh
  41deec:	jb     0x41df62
  41deee:	add    BYTE PTR [rax],al
  41def0:	and    BYTE PTR [rax],ah
  41def2:	and    BYTE PTR [rax],ah
  41def4:	and    BYTE PTR [rip+0x636f732d],ch        # 0x63b15227
  41defa:	imul   esi,DWORD PTR [rbx+0x35],0x20
  41defe:	rex.W
  41deff:	rex.WRXB push r11
  41df01:	push   rsp
  41df02:	pop    rbx
  41df03:	cmp    dl,BYTE PTR [rax+0x4f]
  41df06:	push   rdx
  41df07:	push   rsp
  41df08:	pop    rbp
  41df09:	and    BYTE PTR [rax],ah
  41df0b:	push   rbx
  41df0c:	rex.WRXB
  41df0d:	rex.XB
  41df0e:	rex.WXB push r11
  41df10:	xor    eax,0x6f727020
  41df15:	js     0x41df90
  41df17:	and    BYTE PTR [rdi+0x6e],ch
  41df1a:	and    BYTE PTR [rdi+0x69],ah
  41df1d:	jbe    0x41df84
  41df1f:	outs   dx,BYTE PTR ds:[rsi]
  41df20:	and    BYTE PTR [rax+0x6f],ch
  41df23:	jae    0x41df99
  41df25:	and    BYTE PTR [rbx],ch
  41df27:	and    BYTE PTR [rax+0x6f],dh
  41df2a:	jb     0x41dfa0
  41df2c:	add    BYTE PTR [rax],al
  41df2e:	add    BYTE PTR [rax],al
  41df30:	and    BYTE PTR [rax],ah
  41df32:	and    BYTE PTR [rax],ah
  41df34:	and    BYTE PTR [rip+0x636f732d],ch        # 0x63b15267
  41df3a:	imul   esi,DWORD PTR [rbx+0x35],0x2d
  41df3e:	push   0x6e74736f
  41df43:	(bad)  
  41df44:	ins    DWORD PTR es:[rdi],dx
  41df45:	and    BYTE PTR gs:[rax+0x4f],cl
  41df49:	push   rbx
  41df4a:	push   rsp
  41df4b:	pop    rbx
  41df4c:	cmp    dl,BYTE PTR [rax+0x4f]
  41df4f:	push   rdx
  41df50:	push   rsp
  41df51:	pop    rbp
  41df52:	and    BYTE PTR [rax],ah
  41df54:	push   rbx
  41df55:	rex.WRXB
  41df56:	rex.XB
  41df57:	rex.WXB push r11
  41df59:	xor    eax,0x6f727020
  41df5e:	js     0x41dfd9
  41df60:	sub    al,0x20
  41df62:	jo     0x41dfc5
  41df64:	jae    0x41dfd9
  41df66:	and    BYTE PTR [rax+0x6f],ch
  41df69:	jae    0x41dfdf
  41df6b:	and    BYTE PTR [rsi+0x61],ch
  41df6e:	ins    DWORD PTR es:[rdi],dx
  41df6f:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  41df74:	jo     0x41dfe8
  41df76:	outs   dx,DWORD PTR ds:[rsi]
  41df77:	js     0x41dff2
  41df79:	add    BYTE PTR [rax],al
  41df7b:	add    BYTE PTR [rax],al
  41df7d:	add    BYTE PTR [rax],al
  41df7f:	add    BYTE PTR [rax],ah
  41df81:	and    BYTE PTR [rax],ah
  41df83:	and    BYTE PTR [rax],ah
  41df85:	sub    eax,0x636f732d
  41df8a:	imul   esi,DWORD PTR [rbx+0x35],0x2d
  41df8e:	addr32 jae 0x41e004
  41df91:	(bad)  
  41df92:	jo     0x41dffd
  41df94:	sub    eax,0x76726573
  41df99:	imul   esp,DWORD PTR [rbx+0x65],0x4d414e20
  41dfa0:	and    BYTE PTR [r8],r12b
  41dfa3:	push   rbx
  41dfa4:	rex.WRXB
  41dfa5:	rex.XB
  41dfa6:	rex.WXB push r11
  41dfa8:	xor    eax,0x6f727020
  41dfad:	js     0x41e028
  41dfaf:	and    BYTE PTR [rbx+0x65],dh
  41dfb2:	jb     0x41e02a
  41dfb4:	imul   esp,DWORD PTR [rbx+0x65],0x6d616e20
  41dfbb:	and    BYTE PTR gs:[rsi+0x6f],ah
  41dfbf:	jb     0x41dfe1
  41dfc1:	rex.RXB push r11
  41dfc3:	push   rbx
  41dfc4:	sub    eax,0x495041
  41dfc9:	add    BYTE PTR [rax],al
  41dfcb:	add    BYTE PTR [rax],al
  41dfcd:	add    BYTE PTR [rax],al
  41dfcf:	add    BYTE PTR [rax],ah
  41dfd1:	and    BYTE PTR [rax],ah
  41dfd3:	and    BYTE PTR [rax],ah
  41dfd5:	sub    eax,0x636f732d
  41dfda:	imul   esi,DWORD PTR [rbx+0x35],0x2d
  41dfde:	addr32 jae 0x41e054
  41dfe1:	(bad)  
  41dfe2:	jo     0x41e04d
  41dfe4:	sub    eax,0x2063656e
  41dfe9:	and    BYTE PTR [rbx+0x6f],al
  41dfec:	ins    DWORD PTR es:[rdi],dx
  41dfed:	jo     0x41e050
  41dfef:	je     0x41e05a
  41dff1:	(bad)  
  41dff2:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x69772079
  41dffa:	je     0x41e064
  41dffc:	and    BYTE PTR [rsi+0x45],cl
  41dfff:	rex.XB and BYTE PTR [r11+0x4f],dl
  41e003:	rex.XB
  41e004:	rex.WXB push r11
  41e006:	xor    eax,0x72657320
  41e00b:	jbe    0x41e072
  41e00d:	jb     0x41e00f
  41e00f:	add    BYTE PTR [rax],ah
  41e011:	sub    eax,0x2d202c59
  41e016:	sub    eax,0x65657073
  41e01b:	fs sub eax,0x696d696c
  41e021:	je     0x41e043
  41e023:	push   rdx
  41e024:	push   r12
  41e026:	and    BYTE PTR [r8],r12b
  41e029:	push   rbx
  41e02a:	je     0x41e09b
  41e02c:	jo     0x41e04e
  41e02e:	je     0x41e0a2
  41e030:	(bad)  
  41e031:	outs   dx,BYTE PTR ds:[rsi]
  41e032:	jae    0x41e09a
  41e034:	gs jb  0x41e0aa
  41e037:	and    BYTE PTR [rdx+0x65],ah
  41e03a:	ins    BYTE PTR es:[rdi],dx
  41e03b:	outs   dx,DWORD PTR ds:[rsi]
  41e03c:	ja     0x41e05e
  41e03e:	push   rdx
  41e03f:	push   r12
  41e041:	and    BYTE PTR [r14+0x6f],r12b
  41e045:	jb     0x41e067
  41e047:	(bad)  
  41e048:	jae    0x41e0ba
  41e04a:	gs gs fs sub eax,0x656d6974
  41e052:	(bad)  
  41e053:	and    BYTE PTR [rbx+0x65],dh
  41e056:	movsxd esi,DWORD PTR [rbx+0x0]
  41e059:	add    BYTE PTR [rax],al
  41e05b:	add    BYTE PTR [rax],al
  41e05d:	add    BYTE PTR [rax],al
  41e05f:	add    BYTE PTR [rax],ah
  41e061:	sub    eax,0x2d202c79
  41e066:	sub    eax,0x65657073
  41e06b:	fs sub eax,0x656d6974
  41e071:	and    BYTE PTR [rbx+0x45],dl
  41e074:	rex.XB
  41e075:	rex.WRXB
  41e076:	rex.WRX
  41e077:	rex.R push rbx
  41e079:	and    BYTE PTR [rax],ah
  41e07b:	push   rsp
  41e07c:	jb     0x41e0e7
  41e07e:	addr32 addr32 gs jb 0x41e0a3
  41e083:	(bad)  
  41e084:	jae    0x41e0f6
  41e086:	gs gs fs sub eax,0x696d696c
  41e08e:	je     0x41e0b7
  41e090:	and    BYTE PTR [rcx+0x62],ah
  41e093:	outs   dx,DWORD PTR ds:[rsi]
  41e094:	jb     0x41e10a
  41e096:	and    BYTE PTR [rcx+0x66],ah
  41e099:	je     0x41e100
  41e09b:	jb     0x41e0bd
  41e09d:	push   rbx
  41e09e:	rex.RB
  41e09f:	rex.XB
  41e0a0:	rex.WRXB
  41e0a1:	rex.WRX
  41e0a2:	rex.R push rbx
  41e0a4:	and    BYTE PTR [rax],ch
  41e0a6:	fs gs data16 (bad) 
  41e0aa:	jne    0x41e118
  41e0ac:	je     0x41e0e8
  41e0ae:	and    BYTE PTR [rbx],dh
  41e0b0:	xor    BYTE PTR [rcx],ch
  41e0b2:	add    BYTE PTR [rax],al
  41e0b4:	add    BYTE PTR [rax],al
  41e0b6:	add    BYTE PTR [rax],al
  41e0b8:	and    BYTE PTR [rax],ah
  41e0ba:	and    BYTE PTR [rax],ah
  41e0bc:	and    BYTE PTR [rip+0x6c73732d],ch        # 0x6cb553ef
  41e0c2:	and    BYTE PTR [rax],ah
  41e0c4:	and    BYTE PTR [rax],ah
  41e0c6:	and    BYTE PTR [rax],ah
  41e0c8:	and    BYTE PTR [rax],ah
  41e0ca:	and    BYTE PTR [rax],ah
  41e0cc:	and    BYTE PTR [rdx+rsi*2+0x79],dl
  41e0d0:	and    BYTE PTR [rbx+0x53],dl
  41e0d3:	rex.WR (bad) 
  41e0d5:	push   rsp
  41e0d6:	rex.WR push rbx
  41e0d8:	and    BYTE PTR [rax],ch
  41e0da:	rex.RX push rsp
  41e0dc:	push   rax
  41e0dd:	sub    al,0x20
  41e0df:	rex.WB
  41e0e0:	rex.WRB
  41e0e1:	push   r8
  41e0e3:	sub    al,0x20
  41e0e5:	push   rax
  41e0e6:	rex.WRXB push r8
  41e0e8:	xor    ebp,DWORD PTR [rax+riz*1]
  41e0eb:	push   rbx
  41e0ec:	rex.WRB push r12
  41e0ee:	push   rax
  41e0ef:	sub    DWORD PTR [rax],eax
  41e0f1:	add    BYTE PTR [rax],al
  41e0f3:	add    BYTE PTR [rax],al
  41e0f5:	add    BYTE PTR [rax],al
  41e0f7:	add    BYTE PTR [rax],ah
  41e0f9:	and    BYTE PTR [rax],ah
  41e0fb:	and    BYTE PTR [rax],ah
  41e0fd:	sub    eax,0x6c73732d
  41e102:	sub    eax,0x64716572
  41e107:	and    BYTE PTR [rax],ah
  41e109:	and    BYTE PTR [rax],ah
  41e10b:	and    BYTE PTR [rax],ah
  41e10d:	push   rdx
  41e10e:	gs jno 0x41e186
  41e111:	imul   esi,DWORD PTR [rdx+0x65],0x4c535320
  41e118:	(bad)  
  41e119:	push   rsp
  41e11a:	rex.WR push rbx
  41e11c:	and    BYTE PTR [rax],ch
  41e11e:	rex.RX push rsp
  41e120:	push   rax
  41e121:	sub    al,0x20
  41e123:	rex.WB
  41e124:	rex.WRB
  41e125:	push   r8
  41e127:	sub    al,0x20
  41e129:	push   rax
  41e12a:	rex.WRXB push r8
  41e12c:	xor    ebp,DWORD PTR [rax+riz*1]
  41e12f:	push   rbx
  41e130:	rex.WRB push r12
  41e132:	push   rax
  41e133:	sub    DWORD PTR [rax],eax
  41e135:	add    BYTE PTR [rax],al
  41e137:	add    BYTE PTR [rax],ah
  41e139:	sub    eax,0x2d202c32
  41e13e:	sub    eax,0x766c7373
  41e143:	xor    ah,BYTE PTR [rax]
  41e145:	and    BYTE PTR [rax],ah
  41e147:	and    BYTE PTR [rax],ah
  41e149:	and    BYTE PTR [rax],ah
  41e14b:	and    BYTE PTR [rax],ah
  41e14d:	push   rbp
  41e14e:	jae    0x41e1b5
  41e150:	and    BYTE PTR [rbx+0x53],dl
  41e153:	rex.WR jbe 0x41e188
  41e156:	and    BYTE PTR [rax],ch
  41e158:	push   rbx
  41e159:	push   rbx
  41e15a:	sub    QWORD PTR [rax],r8
  41e15d:	add    BYTE PTR [rax],al
  41e15f:	add    BYTE PTR [rax],ah
  41e161:	sub    eax,0x2d202c33
  41e166:	sub    eax,0x766c7373
  41e16b:	xor    esp,DWORD PTR [rax]
  41e16d:	and    BYTE PTR [rax],ah
  41e16f:	and    BYTE PTR [rax],ah
  41e171:	and    BYTE PTR [rax],ah
  41e173:	and    BYTE PTR [rax],ah
  41e175:	push   rbp
  41e176:	jae    0x41e1dd
  41e178:	and    BYTE PTR [rbx+0x53],dl
  41e17b:	rex.WR jbe 0x41e1b1
  41e17e:	and    BYTE PTR [rax],ch
  41e180:	push   rbx
  41e181:	push   rbx
  41e182:	sub    QWORD PTR [rax],r8
  41e185:	add    BYTE PTR [rax],al
  41e187:	add    BYTE PTR [rax],ah
  41e189:	and    BYTE PTR [rax],ah
  41e18b:	and    BYTE PTR [rax],ah
  41e18d:	sub    eax,0x6c73732d
  41e192:	sub    eax,0x6f6c6c61
  41e197:	ja     0x41e1c6
  41e199:	(bad)  
  41e19a:	gs (bad) 
  41e19c:	jae    0x41e212
  41e19e:	and    BYTE PTR [rax],ah
  41e1a0:	rex.B ins BYTE PTR es:[rdi],dx
  41e1a2:	ins    BYTE PTR es:[rdi],dx
  41e1a3:	outs   dx,DWORD PTR ds:[rsi]
  41e1a4:	ja     0x41e1c6
  41e1a6:	jae    0x41e20d
  41e1a8:	movsxd esi,DWORD PTR [rbp+0x72]
  41e1ab:	imul   esi,DWORD PTR [rcx+rdi*2+0x20],0x77616c66
  41e1b3:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  41e1b7:	imul   ebp,DWORD PTR [rbp+0x70],0x65766f72
  41e1be:	and    BYTE PTR [rcx+0x6e],ch
  41e1c1:	je     0x41e228
  41e1c3:	jb     0x41e234
  41e1c5:	jo     0x41e1e7
  41e1c7:	sub    BYTE PTR [rbx+0x53],dl
  41e1ca:	sub    QWORD PTR [rax],r8
  41e1cd:	add    BYTE PTR [rax],al
  41e1cf:	add    BYTE PTR [rax],ah
  41e1d1:	and    BYTE PTR [rax],ah
  41e1d3:	and    BYTE PTR [rax],ah
  41e1d5:	sub    eax,0x6c73732d
  41e1da:	sub    eax,0x722d6f6e
  41e1df:	gs jbe 0x41e251
  41e1e2:	imul   esp,DWORD PTR [rbp+0x20],0x20
  41e1e6:	and    BYTE PTR [rax],ah
  41e1e8:	imul   r14d,DWORD PTR [rbx+0x61],0x20656c62
  41e1f0:	movsxd esp,DWORD PTR [rbp+0x72]
  41e1f3:	je     0x41e215
  41e1f5:	jb     0x41e25c
  41e1f7:	jbe    0x41e268
  41e1f9:	movsxd esp,DWORD PTR [rcx+0x74]
  41e1fc:	imul   ebp,DWORD PTR [rdi+0x6e],0x65686320
  41e203:	movsxd ebp,DWORD PTR [rbx+0x73]
  41e206:	and    BYTE PTR [rax],ch
  41e208:	push   rdi
  41e209:	imul   ebp,DWORD PTR [rsi+0x53],0x294c53
  41e210:	and    BYTE PTR [rax],ah
  41e212:	and    BYTE PTR [rax],ah
  41e214:	and    BYTE PTR [rip+0x6474732d],ch        # 0x64b65547
  41e21a:	gs jb  0x41e28f
  41e21d:	and    BYTE PTR [rsi+0x49],al
  41e220:	rex.WR
  41e221:	and    BYTE PTR [r8],r12b
  41e224:	and    BYTE PTR [rdi+0x68],dl
  41e227:	gs jb  0x41e28f
  41e22a:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  41e22e:	jb     0x41e295
  41e230:	imul   esi,DWORD PTR fs:[rdx+0x65],0x73207463
  41e238:	je     0x41e29e
  41e23a:	gs jb  0x41e2af
  41e23d:	and    BYTE PTR [rax],ch
  41e23f:	jne    0x41e2b4
  41e241:	and    BYTE PTR gs:[rdx],ah
  41e244:	sub    eax,0x6f662022
  41e249:	jb     0x41e26b
  41e24b:	jae    0x41e2c1
  41e24d:	outs   dx,DWORD PTR fs:[rsi]
  41e24f:	jne    0x41e2c5
  41e251:	sub    DWORD PTR [rax],eax
  41e253:	add    BYTE PTR [rax],al
  41e255:	add    BYTE PTR [rax],al
  41e257:	add    BYTE PTR [rax],ah
  41e259:	and    BYTE PTR [rax],ah
  41e25b:	and    BYTE PTR [rax],ah
  41e25d:	sub    eax,0x7063742d
  41e262:	sub    eax,0x65646f6e
  41e267:	ins    BYTE PTR es:[rdi],dx
  41e268:	(bad)  
  41e269:	jns    0x41e28b
  41e26b:	and    BYTE PTR [rax],ah
  41e26d:	push   rbp
  41e26e:	jae    0x41e2d5
  41e270:	and    BYTE PTR [rax+rbp*2+0x65],dh
  41e274:	and    BYTE PTR [rbx+rax*2+0x50],dl
  41e278:	pop    rdi
  41e279:	rex.WRX
  41e27a:	rex.WRXB
  41e27b:	rex.R
  41e27c:	rex.RB
  41e27d:	rex.WR
  41e27e:	pop    r9
  41e280:	and    BYTE PTR [rdi+0x70],ch
  41e283:	je     0x41e2ee
  41e285:	outs   dx,DWORD PTR ds:[rsi]
  41e286:	outs   dx,BYTE PTR ds:[rsi]
  41e287:	add    BYTE PTR [rax],ah
  41e289:	and    BYTE PTR [rax],ah
  41e28b:	and    BYTE PTR [rax],ah
  41e28d:	sub    eax,0x7063742d
  41e292:	sub    eax,0x74736166
  41e297:	outs   dx,DWORD PTR ds:[rsi]
  41e298:	jo     0x41e2ff
  41e29a:	outs   dx,BYTE PTR ds:[rsi]
  41e29b:	and    BYTE PTR [rax],ah
  41e29d:	push   rbp
  41e29e:	jae    0x41e305
  41e2a0:	and    BYTE PTR [rbx+rax*2+0x50],dl
  41e2a4:	and    BYTE PTR [rsi+0x61],al
  41e2a7:	jae    0x41e31d
  41e2a9:	and    BYTE PTR [rdi+0x70],cl
  41e2ac:	outs   dx,BYTE PTR gs:[rsi]
  41e2ae:	add    BYTE PTR [rax],al
  41e2b0:	and    BYTE PTR [rip+0x2d202c74],ch        # 0x2d620f2a
  41e2b6:	sub    eax,0x6e6c6574
  41e2bb:	gs je  0x41e2eb
  41e2be:	outs   dx,DWORD PTR ds:[rsi]
  41e2bf:	jo     0x41e335
  41e2c1:	imul   ebp,DWORD PTR [rdi+0x6e],0x54504f20
  41e2c8:	cmp    eax,0x204c4156
  41e2cd:	and    BYTE PTR [rbx+0x65],dl
  41e2d0:	je     0x41e2f2
  41e2d2:	je     0x41e339
  41e2d4:	ins    BYTE PTR es:[rdi],dx
  41e2d5:	outs   dx,BYTE PTR ds:[rsi]
  41e2d6:	gs je  0x41e2f9
  41e2d9:	outs   dx,DWORD PTR ds:[rsi]
  41e2da:	jo     0x41e350
  41e2dc:	imul   ebp,DWORD PTR [rdi+0x6e],0x20202000
  41e2e3:	and    BYTE PTR [rax],ah
  41e2e5:	sub    eax,0x7466742d
  41e2ea:	jo     0x41e319
  41e2ec:	(bad)  
  41e2ed:	ins    BYTE PTR es:[rdi],dx
  41e2ee:	imul   esi,DWORD PTR [rbx+0x69],0x7a
  41e2f2:	and    BYTE PTR gs:[rsi+0x41],dl
  41e2f6:	rex.WR push rbp
  41e2f8:	and    BYTE PTR [r8],r12b
  41e2fb:	push   rbx
  41e2fc:	gs je  0x41e31f
  41e2ff:	push   rsp
  41e300:	rex.RX push rsp
  41e302:	push   rax
  41e303:	and    BYTE PTR [rdx+0x4c],al
  41e306:	rex.WXB push r11
  41e308:	rex.WB pop r10
  41e30a:	and    BYTE PTR [r15+0x70],r13b
  41e30e:	je     0x41e379
  41e310:	outs   dx,DWORD PTR ds:[rsi]
  41e311:	outs   dx,BYTE PTR ds:[rsi]
  41e312:	and    BYTE PTR [rax],ch
  41e314:	ins    DWORD PTR es:[rdi],dx
  41e315:	jne    0x41e38a
  41e317:	je     0x41e339
  41e319:	(bad)  
  41e31a:	and    BYTE PTR gs:[rsi],bh
  41e31d:	xor    eax,0x293231
  41e322:	add    BYTE PTR [rax],al
  41e324:	add    BYTE PTR [rax],al
  41e326:	add    BYTE PTR [rax],al
  41e328:	and    BYTE PTR [rax],ah
  41e32a:	and    BYTE PTR [rax],ah
  41e32c:	and    BYTE PTR [rip+0x7466742d],ch        # 0x74a8575f
  41e332:	jo     0x41e361
  41e334:	outs   dx,BYTE PTR ds:[rsi]
  41e335:	outs   dx,DWORD PTR ds:[rsi]
  41e336:	sub    eax,0x6974706f
  41e33b:	outs   dx,DWORD PTR ds:[rsi]
  41e33c:	outs   dx,BYTE PTR ds:[rsi]
  41e33d:	jae    0x41e35f
  41e33f:	and    BYTE PTR [rdi+rbp*2+0x20],al
  41e343:	outs   dx,BYTE PTR ds:[rsi]
  41e344:	outs   dx,DWORD PTR ds:[rsi]
  41e345:	je     0x41e367
  41e347:	jae    0x41e3ae
  41e349:	outs   dx,BYTE PTR ds:[rsi]
  41e34a:	and    BYTE PTR fs:[rsi+rax*2+0x54],dl
  41e34f:	push   rax
  41e350:	and    BYTE PTR [rdi+0x70],ch
  41e353:	je     0x41e3be
  41e355:	outs   dx,DWORD PTR ds:[rsi]
  41e356:	outs   dx,BYTE PTR ds:[rsi]
  41e357:	jae    0x41e379
  41e359:	jb     0x41e3c0
  41e35b:	jno    0x41e3d2
  41e35d:	gs jae 0x41e3d4
  41e360:	jae    0x41e362
  41e362:	add    BYTE PTR [rax],al
  41e364:	add    BYTE PTR [rax],al
  41e366:	add    BYTE PTR [rax],al
  41e368:	and    BYTE PTR [rip+0x2d202c7a],ch        # 0x2d620fe8
  41e36e:	sub    eax,0x656d6974
  41e373:	sub    eax,0x646e6f63
  41e378:	and    BYTE PTR [rcx+rcx*2+0x4d],dl
  41e37c:	and    BYTE PTR [r8],r12b
  41e37f:	and    BYTE PTR [rdx+rsi*2+0x61],dl
  41e383:	outs   dx,BYTE PTR ds:[rsi]
  41e384:	jae    0x41e3ec
  41e386:	gs jb  0x41e3a9
  41e389:	(bad)  
  41e38b:	jae    0x41e3f2
  41e38d:	and    BYTE PTR fs:[rdi+0x6e],ch
  41e391:	and    BYTE PTR [rcx+0x20],ah
  41e394:	je     0x41e3ff
  41e396:	ins    DWORD PTR es:[rdi],dx
  41e397:	and    BYTE PTR gs:[rbx+0x6f],ah
  41e39b:	outs   dx,BYTE PTR ds:[rsi]
  41e39c:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x6e
  41e3a5:	add    BYTE PTR [rax],al
  41e3a7:	add    BYTE PTR [rax],ah
  41e3a9:	sub    eax,0x2d202c31
  41e3ae:	sub    eax,0x76736c74
  41e3b3:	xor    DWORD PTR [rax],esp
  41e3b5:	and    BYTE PTR [rax],ah
  41e3b7:	and    BYTE PTR [rax],ah
  41e3b9:	and    BYTE PTR [rax],ah
  41e3bb:	and    BYTE PTR [rax],ah
  41e3bd:	push   rbp
  41e3be:	jae    0x41e425
  41e3c0:	and    BYTE PTR [rsi],bh
  41e3c2:	cmp    eax,0x534c5420
  41e3c7:	jbe    0x41e3fa
  41e3c9:	and    BYTE PTR [rax],ch
  41e3cb:	push   rbx
  41e3cc:	push   rbx
  41e3cd:	sub    QWORD PTR [rax],r8
  41e3d0:	and    BYTE PTR [rax],ah
  41e3d2:	and    BYTE PTR [rax],ah
  41e3d4:	and    BYTE PTR [rip+0x736c742d],ch        # 0x73ae5807
  41e3da:	jbe    0x41e40d
  41e3dc:	xor    BYTE PTR cs:[rax],ah
  41e3df:	and    BYTE PTR [rax],ah
  41e3e1:	and    BYTE PTR [rax],ah
  41e3e3:	and    BYTE PTR [rax],ah
  41e3e5:	push   rbp
  41e3e6:	jae    0x41e44d
  41e3e8:	and    BYTE PTR [rsp+rcx*2+0x53],dl
  41e3ec:	jbe    0x41e41f
  41e3ee:	xor    BYTE PTR cs:[rax],ah
  41e3f1:	sub    BYTE PTR [rbx+0x53],dl
  41e3f4:	sub    QWORD PTR [rax],r8
  41e3f7:	add    BYTE PTR [rax],ah
  41e3f9:	and    BYTE PTR [rax],ah
  41e3fb:	and    BYTE PTR [rax],ah
  41e3fd:	sub    eax,0x736c742d
  41e402:	jbe    0x41e435
  41e404:	xor    DWORD PTR cs:[rax],esp
  41e407:	and    BYTE PTR [rax],ah
  41e409:	and    BYTE PTR [rax],ah
  41e40b:	and    BYTE PTR [rax],ah
  41e40d:	push   rbp
  41e40e:	jae    0x41e475
  41e410:	and    BYTE PTR [rsp+rcx*2+0x53],dl
  41e414:	jbe    0x41e447
  41e416:	xor    DWORD PTR cs:[rax],esp
  41e419:	sub    BYTE PTR [rbx+0x53],dl
  41e41c:	sub    QWORD PTR [rax],r8
  41e41f:	add    BYTE PTR [rax],ah
  41e421:	and    BYTE PTR [rax],ah
  41e423:	and    BYTE PTR [rax],ah
  41e425:	sub    eax,0x736c742d
  41e42a:	jbe    0x41e45d
  41e42c:	xor    ah,BYTE PTR cs:[rax]
  41e42f:	and    BYTE PTR [rax],ah
  41e431:	and    BYTE PTR [rax],ah
  41e433:	and    BYTE PTR [rax],ah
  41e435:	push   rbp
  41e436:	jae    0x41e49d
  41e438:	and    BYTE PTR [rsp+rcx*2+0x53],dl
  41e43c:	jbe    0x41e46f
  41e43e:	xor    ah,BYTE PTR cs:[rax]
  41e441:	sub    BYTE PTR [rbx+0x53],dl
  41e444:	sub    QWORD PTR [rax],r8
  41e447:	add    BYTE PTR [rax],ah
  41e449:	and    BYTE PTR [rax],ah
  41e44b:	and    BYTE PTR [rax],ah
  41e44d:	sub    eax,0x736c742d
  41e452:	jbe    0x41e485
  41e454:	xor    esp,DWORD PTR cs:[rax]
  41e457:	and    BYTE PTR [rax],ah
  41e459:	and    BYTE PTR [rax],ah
  41e45b:	and    BYTE PTR [rax],ah
  41e45d:	push   rbp
  41e45e:	jae    0x41e4c5
  41e460:	and    BYTE PTR [rsp+rcx*2+0x53],dl
  41e464:	jbe    0x41e497
  41e466:	xor    esp,DWORD PTR cs:[rax]
  41e469:	sub    BYTE PTR [rbx+0x53],dl
  41e46c:	sub    QWORD PTR [rax],r8
  41e46f:	add    BYTE PTR [rax],ah
  41e471:	and    BYTE PTR [rax],ah
  41e473:	and    BYTE PTR [rax],ah
  41e475:	sub    eax,0x6172742d
  41e47a:	movsxd esp,DWORD PTR [rbp+0x20]
  41e47d:	rex.RX
  41e47e:	rex.WB
  41e47f:	rex.WR
  41e480:	and    BYTE PTR [r8],r12b
  41e483:	and    BYTE PTR [rax],ah
  41e485:	push   rdi
  41e486:	jb     0x41e4f1
  41e488:	je     0x41e4ef
  41e48a:	and    BYTE PTR [rcx+0x20],ah
  41e48d:	fs gs (bad) 
  41e490:	jne    0x41e4f9
  41e492:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  41e496:	movsxd esp,DWORD PTR [rbp+0x20]
  41e499:	je     0x41e50a
  41e49b:	and    BYTE PTR [rsi+0x49],al
  41e49e:	rex.WR
  41e49f:	add    BYTE PTR [r8],r8b
  41e4a2:	add    BYTE PTR [rax],al
  41e4a4:	add    BYTE PTR [rax],al
  41e4a6:	add    BYTE PTR [rax],al
  41e4a8:	and    BYTE PTR [rax],ah
  41e4aa:	and    BYTE PTR [rax],ah
  41e4ac:	and    BYTE PTR [rip+0x6172742d],ch        # 0x61b458df
  41e4b2:	movsxd esp,DWORD PTR [rbp+0x2d]
  41e4b5:	(bad)  
  41e4b6:	jae    0x41e51b
  41e4b8:	imul   ebp,DWORD PTR [rcx+0x20],0x454c4946
  41e4bf:	and    BYTE PTR [rax],ah
  41e4c1:	imul   r13,QWORD PTR [rbx+0x65],0x742d2d20
  41e4c9:	jb     0x41e52c
  41e4cb:	movsxd esp,DWORD PTR [rbp+0x2c]
  41e4ce:	and    BYTE PTR [rdx+0x75],ah
  41e4d1:	je     0x41e4f3
  41e4d3:	ja     0x41e53e
  41e4d5:	je     0x41e53f
  41e4d7:	outs   dx,DWORD PTR ds:[rsi]
  41e4d8:	jne    0x41e54e
  41e4da:	and    BYTE PTR [rax+0x65],ch
  41e4dd:	js     0x41e4ff
  41e4df:	outs   dx,DWORD PTR ds:[rsi]
  41e4e0:	jne    0x41e556
  41e4e2:	jo     0x41e559
  41e4e4:	je     0x41e4e6
  41e4e6:	add    BYTE PTR [rax],al
  41e4e8:	and    BYTE PTR [rax],ah
  41e4ea:	and    BYTE PTR [rax],ah
  41e4ec:	and    BYTE PTR [rip+0x6172742d],ch        # 0x61b4591f
  41e4f2:	movsxd esp,DWORD PTR [rbp+0x2d]
  41e4f5:	je     0x41e560
  41e4f7:	ins    DWORD PTR es:[rdi],dx
  41e4f8:	and    BYTE PTR gs:[rax],ah
  41e4fb:	and    BYTE PTR [rax],ah
  41e4fd:	rex.B
  41e4fe:	fs and BYTE PTR fs:[rcx+rbp*2+0x6d],dh
  41e504:	and    BYTE PTR gs:[rbx+0x74],dh
  41e508:	(bad)  
  41e509:	ins    DWORD PTR es:[rdi],dx
  41e50a:	jo     0x41e57f
  41e50c:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  41e510:	je     0x41e584
  41e512:	(bad)  
  41e513:	movsxd esp,DWORD PTR [rbp+0x2f]
  41e516:	jbe    0x41e57d
  41e518:	jb     0x41e57c
  41e51a:	outs   dx,DWORD PTR ds:[rsi]
  41e51b:	jae    0x41e582
  41e51d:	and    BYTE PTR [rdi+0x75],ch
  41e520:	je     0x41e592
  41e522:	jne    0x41e598
  41e524:	add    BYTE PTR [rax],al
  41e526:	add    BYTE PTR [rax],al
  41e528:	and    BYTE PTR [rax],ah
  41e52a:	and    BYTE PTR [rax],ah
  41e52c:	and    BYTE PTR [rip+0x2d72742d],ch        # 0x2db4595f
  41e532:	outs   dx,BYTE PTR gs:[rsi]
  41e534:	movsxd ebp,DWORD PTR [rdi+0x64]
  41e537:	imul   ebp,DWORD PTR [rsi+0x67],0x52202020
  41e53e:	gs jno 0x41e5b6
  41e541:	gs jae 0x41e5b8
  41e544:	and    BYTE PTR [rbx+0x6f],ah
  41e547:	ins    DWORD PTR es:[rdi],dx
  41e548:	jo     0x41e5bc
  41e54a:	gs jae 0x41e5c0
  41e54d:	gs and BYTE PTR fs:[rdx+rsi*2+0x61],dh
  41e553:	outs   dx,BYTE PTR ds:[rsi]
  41e554:	jae    0x41e5bc
  41e556:	gs jb  0x41e579
  41e559:	outs   dx,BYTE PTR gs:[rsi]
  41e55b:	movsxd ebp,DWORD PTR [rdi+0x64]
  41e55e:	imul   ebp,DWORD PTR [rsi+0x67],0x29482820
  41e565:	add    BYTE PTR [rax],al
  41e567:	add    BYTE PTR [rax],ah
  41e569:	sub    eax,0x2d202c54
  41e56e:	sub    eax,0x6f6c7075
  41e573:	(bad)  
  41e574:	fs sub eax,0x656c6966
  41e57a:	and    BYTE PTR [rsi+0x49],al
  41e57d:	rex.WR
  41e57e:	and    BYTE PTR [r8],r12b
  41e581:	push   rsp
  41e582:	jb     0x41e5e5
  41e584:	outs   dx,BYTE PTR ds:[rsi]
  41e585:	jae    0x41e5ed
  41e587:	gs jb  0x41e5aa
  41e58a:	rex.RX
  41e58b:	rex.WB
  41e58c:	rex.WR
  41e58d:	and    BYTE PTR [r15+rbp*2+0x20],r14b
  41e592:	fs gs jae 0x41e60a
  41e596:	imul   ebp,DWORD PTR [rsi+0x61],0x6e6f6974
  41e59d:	add    BYTE PTR [rax],al
  41e59f:	add    BYTE PTR [rax],ah
  41e5a1:	and    BYTE PTR [rax],ah
  41e5a3:	and    BYTE PTR [rax],ah
  41e5a5:	sub    eax,0x6c72752d
  41e5aa:	and    BYTE PTR [rbp+0x52],dl
  41e5ad:	rex.WR and BYTE PTR [rax],r12b
  41e5b0:	and    BYTE PTR [rax],ah
  41e5b2:	and    BYTE PTR [rax],ah
  41e5b4:	and    BYTE PTR [rbp+0x52],dl
  41e5b7:	rex.WR and BYTE PTR [rdi+rbp*2+0x20],r14b
  41e5bc:	ja     0x41e62d
  41e5be:	jb     0x41e62b
  41e5c0:	and    BYTE PTR [rdi+0x69],dh
  41e5c3:	je     0x41e62d
  41e5c5:	add    BYTE PTR [rax],al
  41e5c7:	add    BYTE PTR [rax],ah
  41e5c9:	sub    eax,0x2d202c42
  41e5ce:	sub    eax,0x2d657375
  41e5d3:	(bad)  
  41e5d4:	jae    0x41e639
  41e5d6:	imul   ebp,DWORD PTR [rcx+0x20],0x20202020
  41e5dd:	push   rbp
  41e5de:	jae    0x41e645
  41e5e0:	and    BYTE PTR [rcx+0x53],al
  41e5e3:	rex.XB
  41e5e4:	rex.WB
  41e5e5:	rex.WB (bad) 
  41e5e7:	je     0x41e64e
  41e5e9:	js     0x41e65f
  41e5eb:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  41e5ef:	outs   dx,BYTE PTR ds:[rsi]
  41e5f0:	jae    0x41e658
  41e5f2:	gs jb  0x41e5f5
  41e5f5:	add    BYTE PTR [rax],al
  41e5f7:	add    BYTE PTR [rax],ah
  41e5f9:	sub    eax,0x2d202c75
  41e5fe:	sub    eax,0x72657375
  41e603:	and    BYTE PTR [rbp+0x53],dl
  41e606:	rex.RB push r10
  41e608:	pop    rbx
  41e609:	cmp    dl,BYTE PTR [rax+0x41]
  41e60c:	push   rbx
  41e60d:	push   rbx
  41e60e:	push   rdi
  41e60f:	rex.WRXB push r10
  41e611:	rex.R pop rbp
  41e613:	and    BYTE PTR [rax],ah
  41e615:	push   rbx
  41e616:	gs jb  0x41e68f
  41e619:	gs jb  0x41e63c
  41e61c:	jne    0x41e691
  41e61e:	gs jb  0x41e641
  41e621:	(bad)  
  41e622:	outs   dx,BYTE PTR ds:[rsi]
  41e623:	and    BYTE PTR fs:[rax+0x61],dh
  41e627:	jae    0x41e69c
  41e629:	ja     0x41e69a
  41e62b:	jb     0x41e691
  41e62d:	add    BYTE PTR [rax],al
  41e62f:	add    BYTE PTR [rax],ah
  41e631:	and    BYTE PTR [rax],ah
  41e633:	and    BYTE PTR [rax],ah
  41e635:	sub    eax,0x736c742d
  41e63a:	jne    0x41e6af
  41e63c:	gs jb  0x41e65f
  41e63f:	push   rbp
  41e640:	push   rbx
  41e641:	rex.RB push r10
  41e643:	and    BYTE PTR [rax],ah
  41e645:	push   rsp
  41e646:	rex.WR push rbx
  41e648:	and    BYTE PTR [rbp+0x73],dh
  41e64b:	gs jb  0x41e6bc
  41e64e:	(bad)  
  41e64f:	ins    DWORD PTR es:[rdi],dx
  41e650:	add    BYTE PTR gs:[rax],al
  41e653:	add    BYTE PTR [rax],al
  41e655:	add    BYTE PTR [rax],al
  41e657:	add    BYTE PTR [rax],ah
  41e659:	and    BYTE PTR [rax],ah
  41e65b:	and    BYTE PTR [rax],ah
  41e65d:	sub    eax,0x736c742d
  41e662:	jo     0x41e6c5
  41e664:	jae    0x41e6d9
  41e666:	ja     0x41e6d7
  41e668:	jb     0x41e6ce
  41e66a:	and    BYTE PTR [rbx+0x54],dl
  41e66d:	push   rdx
  41e66e:	rex.WB
  41e66f:	rex.WRX
  41e670:	rex.RXB and BYTE PTR [r8],r12b
  41e673:	push   rsp
  41e674:	rex.WR push rbx
  41e676:	and    BYTE PTR [rax+0x61],dh
  41e679:	jae    0x41e6ee
  41e67b:	ja     0x41e6ec
  41e67d:	jb     0x41e6e3
  41e67f:	add    BYTE PTR [rax],ah
  41e681:	and    BYTE PTR [rax],ah
  41e683:	and    BYTE PTR [rax],ah
  41e685:	sub    eax,0x736c742d
  41e68a:	(bad)  
  41e68b:	jne    0x41e701
  41e68d:	push   0x65707974
  41e692:	and    BYTE PTR [rbx+0x54],dl
  41e695:	push   rdx
  41e696:	rex.WB
  41e697:	rex.WRX
  41e698:	rex.RXB and BYTE PTR [r8],r12b
  41e69b:	push   rsp
  41e69c:	rex.WR push rbx
  41e69e:	and    BYTE PTR [rcx+0x75],ah
  41e6a1:	je     0x41e70b
  41e6a3:	outs   dx,BYTE PTR gs:[rsi]
  41e6a5:	je     0x41e710
  41e6a7:	movsxd esp,DWORD PTR [rcx+0x74]
  41e6aa:	imul   ebp,DWORD PTR [rdi+0x6e],0x70797420
  41e6b1:	and    BYTE PTR gs:[rax],ch
  41e6b4:	fs gs data16 (bad) 
  41e6b8:	jne    0x41e726
  41e6ba:	je     0x41e6f6
  41e6bc:	and    BYTE PTR [rbx+0x52],dl
  41e6bf:	push   rax
  41e6c0:	sub    DWORD PTR [rax],eax
  41e6c2:	add    BYTE PTR [rax],al
  41e6c4:	add    BYTE PTR [rax],al
  41e6c6:	add    BYTE PTR [rax],al
  41e6c8:	and    BYTE PTR [rax],ah
  41e6ca:	and    BYTE PTR [rax],ah
  41e6cc:	and    BYTE PTR [rip+0x696e752d],ch        # 0x69b05bff
  41e6d2:	js     0x41e701
  41e6d4:	jae    0x41e745
  41e6d6:	movsxd ebp,DWORD PTR [rbx+0x65]
  41e6d9:	je     0x41e6fb
  41e6db:	rex.RX
  41e6dc:	rex.WB
  41e6dd:	rex.WR
  41e6de:	and    BYTE PTR [r8],r12b
  41e6e1:	and    BYTE PTR [rax],ah
  41e6e3:	rex.XB outs dx,DWORD PTR ds:[rsi]
  41e6e5:	outs   dx,BYTE PTR ds:[rsi]
  41e6e6:	outs   dx,BYTE PTR ds:[rsi]
  41e6e7:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x74]
  41e6ec:	push   0x67756f72
  41e6f1:	push   0x69687420
  41e6f6:	jae    0x41e718
  41e6f8:	push   rbp
  41e6f9:	outs   dx,BYTE PTR ds:[rsi]
  41e6fa:	imul   edi,DWORD PTR [rax+0x20],0x616d6f64
  41e701:	imul   ebp,DWORD PTR [rsi+0x20],0x6b636f73
  41e708:	gs je  0x41e70b
  41e70b:	add    BYTE PTR [rax],al
  41e70d:	add    BYTE PTR [rax],al
  41e70f:	add    BYTE PTR [rax],ah
  41e711:	sub    eax,0x2d202c41
  41e716:	sub    eax,0x72657375
  41e71b:	sub    eax,0x6e656761
  41e720:	je     0x41e742
  41e722:	push   rbx
  41e723:	push   rsp
  41e724:	push   rdx
  41e725:	rex.WB
  41e726:	rex.WRX
  41e727:	rex.RXB and BYTE PTR [r8],r12b
  41e72a:	push   rbx
  41e72b:	outs   dx,BYTE PTR gs:[rsi]
  41e72d:	and    BYTE PTR fs:[rbp+0x73],dl
  41e731:	gs jb  0x41e761
  41e734:	rex.B
  41e735:	outs   dx,BYTE PTR gs:[esi]
  41e738:	je     0x41e75a
  41e73a:	push   rbx
  41e73b:	push   rsp
  41e73c:	push   rdx
  41e73d:	rex.WB
  41e73e:	rex.WRX
  41e73f:	and    BYTE PTR [r15+r13*2+0x20],r14b
  41e744:	jae    0x41e7ab
  41e746:	jb     0x41e7be
  41e748:	gs jb  0x41e76b
  41e74b:	sub    BYTE PTR [rax+0x29],cl
  41e74e:	add    BYTE PTR [rax],al
  41e750:	and    BYTE PTR [rip+0x2d202c76],ch        # 0x2d6213cc
  41e756:	sub    eax,0x62726576
  41e75b:	outs   dx,DWORD PTR ds:[rsi]
  41e75c:	jae    0x41e7c3
  41e75e:	and    BYTE PTR [rax],ah
  41e760:	and    BYTE PTR [rax],ah
  41e762:	and    BYTE PTR [rax],ah
  41e764:	and    BYTE PTR [rbp+0x61],cl
  41e767:	imul   esp,DWORD PTR [rbp+0x20],0x74
  41e76b:	push   0x706f2065
  41e770:	gs jb  0x41e7d4
  41e773:	je     0x41e7de
  41e775:	outs   dx,DWORD PTR ds:[rsi]
  41e776:	outs   dx,BYTE PTR ds:[rsi]
  41e777:	and    BYTE PTR [rbp+0x6f],ch
  41e77a:	jb     0x41e7e1
  41e77c:	and    BYTE PTR [rcx+riz*2+0x6c],dh
  41e780:	imul   esp,DWORD PTR [rcx+0x74],0x69
  41e784:	jbe    0x41e7eb
  41e786:	add    BYTE PTR [rax],al
  41e788:	and    BYTE PTR [rip+0x2d202c56],ch        # 0x2d6213e4
  41e78e:	sub    eax,0x73726576
  41e793:	imul   ebp,DWORD PTR [rdi+0x6e],0x20202020
  41e79a:	and    BYTE PTR [rax],ah
  41e79c:	and    BYTE PTR [rbx+0x68],dl
  41e79f:	outs   dx,DWORD PTR ds:[rsi]
  41e7a0:	ja     0x41e7c2
  41e7a2:	jbe    0x41e809
  41e7a4:	jb     0x41e819
  41e7a6:	imul   ebp,DWORD PTR [rdi+0x6e],0x6d756e20
  41e7ad:	(bad)  
  41e7ae:	gs jb  0x41e7d1
  41e7b1:	(bad)  
  41e7b2:	outs   dx,BYTE PTR ds:[rsi]
  41e7b3:	and    BYTE PTR fs:[rcx+0x75],dh
  41e7b7:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x0
  41e7bf:	add    BYTE PTR [rax],ah
  41e7c1:	sub    eax,0x2d202c77
  41e7c6:	sub    eax,0x74697277
  41e7cb:	gs sub eax,0x2074756f
  41e7d1:	rex.RX
  41e7d2:	rex.WRXB push r10
  41e7d4:	rex.WRB
  41e7d5:	push   r12
  41e7d7:	and    BYTE PTR [rax],ah
  41e7d9:	push   rbp
  41e7da:	jae    0x41e841
  41e7dc:	and    BYTE PTR [rdi+0x75],ch
  41e7df:	je     0x41e851
  41e7e1:	jne    0x41e857
  41e7e3:	and    BYTE PTR [rsi+0x4f],al
  41e7e6:	push   rdx
  41e7e7:	rex.WRB
  41e7e8:	push   r12
  41e7ea:	and    BYTE PTR [rcx+0x66],ah
  41e7ed:	je     0x41e854
  41e7ef:	jb     0x41e811
  41e7f1:	movsxd ebp,DWORD PTR [rdi+0x6d]
  41e7f4:	jo     0x41e862
  41e7f6:	gs je  0x41e862
  41e7f9:	outs   dx,DWORD PTR ds:[rsi]
  41e7fa:	outs   dx,BYTE PTR ds:[rsi]
  41e7fb:	add    BYTE PTR [rax],al
  41e7fd:	add    BYTE PTR [rax],al
  41e7ff:	add    BYTE PTR [rax],ah
  41e801:	and    BYTE PTR [rax],ah
  41e803:	and    BYTE PTR [rax],ah
  41e805:	sub    eax,0x7461782d
  41e80a:	je     0x41e87e
  41e80c:	and    BYTE PTR [rax],ah
  41e80e:	and    BYTE PTR [rax],ah
  41e810:	and    BYTE PTR [rax],ah
  41e812:	and    BYTE PTR [rax],ah
  41e814:	and    BYTE PTR [rbx+0x74],dl
  41e817:	outs   dx,DWORD PTR ds:[rsi]
  41e818:	jb     0x41e87f
  41e81a:	and    BYTE PTR [rbp+0x65],ch
  41e81d:	je     0x41e880
  41e81f:	fs (bad) 
  41e821:	je     0x41e884
  41e823:	and    BYTE PTR [rcx+0x6e],ch
  41e826:	and    BYTE PTR [rbp+0x78],ah
  41e829:	je     0x41e890
  41e82b:	outs   dx,BYTE PTR ds:[rsi]
  41e82c:	fs gs and BYTE PTR fs:[rsi+0x69],ah
  41e832:	ins    BYTE PTR es:[rdi],dx
  41e833:	and    BYTE PTR gs:[rcx+0x74],ah
  41e837:	je     0x41e8ab
  41e839:	imul   esp,DWORD PTR [rdx+0x75],0x736574
  41e840:	and    BYTE PTR [rip+0x2d202c71],ch        # 0x2d6214b7
  41e846:	sub    eax,0x61736964
  41e84b:	(bad)  
  41e84c:	ins    BYTE PTR es:[rdi],dx
  41e84d:	and    BYTE PTR gs:[rax],ah
  41e850:	and    BYTE PTR [rax],ah
  41e852:	and    BYTE PTR [rax],ah
  41e854:	and    BYTE PTR [rcx+rbp*2+0x73],al
  41e858:	(bad)  
  41e859:	(bad)  
  41e85a:	ins    BYTE PTR es:[rdi],dx
  41e85b:	and    BYTE PTR gs:[rsi],ch
  41e85e:	movsxd esi,DWORD PTR [rbp+0x72]
  41e861:	ins    BYTE PTR es:[rdi],dx
  41e862:	jb     0x41e8c7
  41e864:	and    BYTE PTR [rax],ch
  41e866:	ins    DWORD PTR es:[rdi],dx
  41e867:	jne    0x41e8dc
  41e869:	je     0x41e88b
  41e86b:	(bad)  
  41e86c:	and    BYTE PTR gs:[rsi+0x69],ah
  41e870:	jb     0x41e8e5
  41e872:	je     0x41e894
  41e874:	jo     0x41e8d7
  41e876:	jb     0x41e8d9
  41e878:	ins    DWORD PTR es:[rdi],dx
  41e879:	gs je  0x41e8e1
  41e87c:	jb     0x41e8a7
  41e87e:	add    BYTE PTR [rax],al
  41e880:	shl    BYTE PTR [rdx+0x41],0x0
  41e887:	add    BYTE PTR [rax],dh
  41e889:	mov    ch,0x41
  41e88b:	add    BYTE PTR [rax],al
  41e88d:	add    BYTE PTR [rax],al
  41e88f:	add    BYTE PTR [rax-0x4b],ch
  41e892:	add    BYTE PTR [r8],al
  41e895:	add    BYTE PTR [rax],al
  41e897:	add    BYTE PTR [rax+0x41b5],ch
  41e89d:	add    BYTE PTR [rax],al
  41e89f:	add    al,dh
  41e8a1:	mov    ch,0x41
  41e8a3:	add    BYTE PTR [rax],al
  41e8a5:	add    BYTE PTR [rax],al
  41e8a7:	add    BYTE PTR [rax],ch
  41e8a9:	mov    dh,0x41
  41e8ab:	add    BYTE PTR [rax],al
  41e8ad:	add    BYTE PTR [rax],al
  41e8af:	add    BYTE PTR [rax-0x4a],dh
  41e8b2:	add    BYTE PTR [r8],al
  41e8b5:	add    BYTE PTR [rax],al
  41e8b7:	add    BYTE PTR [rax+0x41b6],dh
  41e8bd:	add    BYTE PTR [rax],al
  41e8bf:	add    al,bh
  41e8c1:	mov    dh,0x41
  41e8c3:	add    BYTE PTR [rax],al
  41e8c5:	add    BYTE PTR [rax],al
  41e8c7:	add    BYTE PTR [rax-0x49],al
  41e8ca:	add    BYTE PTR [r8],al
  41e8cd:	add    BYTE PTR [rax],al
  41e8cf:	add    BYTE PTR [rax+0x41b7],cl
  41e8d5:	add    BYTE PTR [rax],al
  41e8d7:	add    BYTE PTR [rax+0x41b7],bh
  41e8dd:	add    BYTE PTR [rax],al
  41e8df:	add    BYTE PTR [rax],cl
  41e8e1:	mov    eax,0x41
  41e8e6:	add    BYTE PTR [rax],al
  41e8e8:	cmp    BYTE PTR [rax+0x41],bh
  41e8ee:	add    BYTE PTR [rax],al
  41e8f0:	cmp    BYTE PTR [rax+0x41],0x0
  41e8f7:	add    al,dl
  41e8f9:	mov    eax,0x41
  41e8fe:	add    BYTE PTR [rax],al
  41e900:	or     BYTE PTR [rcx+0x41],bh
  41e906:	add    BYTE PTR [rax],al
  41e908:	movabs rcx,0xb990000000000041
  41e912:	add    BYTE PTR [r8],al
  41e915:	add    BYTE PTR [rax],al
  41e917:	add    al,dl
  41e919:	mov    ecx,0x41
  41e91e:	add    BYTE PTR [rax],al
  41e920:	or     BYTE PTR [rdx+0x41],bh
  41e926:	add    BYTE PTR [rax],al
  41e928:	push   rax
  41e929:	mov    edx,0x41
  41e92e:	add    BYTE PTR [rax],al
  41e930:	js     0x41e8ec
  41e932:	add    BYTE PTR [r8],al
  41e935:	add    BYTE PTR [rax],al
  41e937:	add    BYTE PTR [rax+0x41ba],dh
  41e93d:	add    BYTE PTR [rax],al
  41e93f:	add    al,ch
  41e941:	mov    edx,0x41
  41e946:	add    BYTE PTR [rax],al
  41e948:	and    BYTE PTR [rbx+0x41],bh
  41e94e:	add    BYTE PTR [rax],al
  41e950:	(bad)  
  41e951:	mov    ebx,0x41
  41e956:	add    BYTE PTR [rax],al
  41e958:	cwde   
  41e959:	mov    ebx,0x41
  41e95e:	add    BYTE PTR [rax],al
  41e960:	sar    BYTE PTR [rbx+0x41],1
  41e966:	add    BYTE PTR [rax],al
  41e968:	or     BYTE PTR [rcx+rax*2+0x0],bh
  41e96f:	add    BYTE PTR [rax],bh
  41e971:	mov    esp,0x41
  41e976:	add    BYTE PTR [rax],al
  41e978:	js     0x41e936
  41e97a:	add    BYTE PTR [r8],al
  41e97d:	add    BYTE PTR [rax],al
  41e97f:	add    BYTE PTR [rax+0x41bc],dh
  41e985:	add    BYTE PTR [rax],al
  41e987:	add    BYTE PTR [rax],al
  41e989:	mov    ebp,0x41
  41e98e:	add    BYTE PTR [rax],al
  41e990:	push   rax
  41e991:	mov    ebp,0x41
  41e996:	add    BYTE PTR [rax],al
  41e998:	nop
  41e999:	mov    ebp,0x41
  41e99e:	add    BYTE PTR [rax],al
  41e9a0:	sar    BYTE PTR [rbp+0x41],1
  41e9a6:	add    BYTE PTR [rax],al
  41e9a8:	and    BYTE PTR [rsi+0x41],bh
  41e9ae:	add    BYTE PTR [rax],al
  41e9b0:	push   0x41be
  41e9b5:	add    BYTE PTR [rax],al
  41e9b7:	add    BYTE PTR [rax+0x41be],bh
  41e9bd:	add    BYTE PTR [rax],al
  41e9bf:	add    BYTE PTR [rax],al
  41e9c1:	mov    edi,0x41
  41e9c6:	add    BYTE PTR [rax],al
  41e9c8:	xor    BYTE PTR [rdi+0x41],bh
  41e9ce:	add    BYTE PTR [rax],al
  41e9d0:	jo     0x41e991
  41e9d2:	add    BYTE PTR [r8],al
  41e9d5:	add    BYTE PTR [rax],al
  41e9d7:	add    BYTE PTR [rax+0x41bf],dh
  41e9dd:	add    BYTE PTR [rax],al
  41e9df:	add    al,ch
  41e9e1:	mov    edi,0x41
  41e9e6:	add    BYTE PTR [rax],al
  41e9e8:	cmp    al,al
  41e9ea:	add    BYTE PTR [r8],al
  41e9ed:	add    BYTE PTR [rax],al
  41e9ef:	add    BYTE PTR [rax+0x41c0],al
  41e9f5:	add    BYTE PTR [rax],al
  41e9f7:	add    al,cl
  41e9f9:	rol    BYTE PTR [rcx+0x0],0x0
  41e9fd:	add    BYTE PTR [rax],al
  41e9ff:	add    BYTE PTR [rax],al
  41ea01:	rol    DWORD PTR [rcx+0x0],0x0
  41ea05:	add    BYTE PTR [rax],al
  41ea07:	add    BYTE PTR [rax-0x3f],cl
  41ea0a:	add    BYTE PTR [r8],al
  41ea0d:	add    BYTE PTR [rax],al
  41ea0f:	add    al,al
  41ea11:	rol    DWORD PTR [rcx+0x0],0x0
  41ea15:	add    BYTE PTR [rax],al
  41ea17:	add    al,bh
  41ea19:	rol    DWORD PTR [rcx+0x0],0x0
  41ea1d:	add    BYTE PTR [rax],al
  41ea1f:	add    BYTE PTR [rax],bh
  41ea21:	ret    0x41
  41ea24:	add    BYTE PTR [rax],al
  41ea26:	add    BYTE PTR [rax],al
  41ea28:	mov    dl,al
  41ea2a:	add    BYTE PTR [r8],al
  41ea2d:	add    BYTE PTR [rax],al
  41ea2f:	add    al,cl
  41ea31:	ret    0x41
  41ea34:	add    BYTE PTR [rax],al
  41ea36:	add    BYTE PTR [rax],al
  41ea38:	adc    bl,al
  41ea3a:	add    BYTE PTR [r8],al
  41ea3d:	add    BYTE PTR [rax],al
  41ea3f:	add    BYTE PTR [rax-0x3d],dl
  41ea42:	add    BYTE PTR [r8],al
  41ea45:	add    BYTE PTR [rax],al
  41ea47:	add    BYTE PTR [rax+0x41c3],al
  41ea4d:	add    BYTE PTR [rax],al
  41ea4f:	add    BYTE PTR [rax+0x41c3],ch
  41ea55:	add    BYTE PTR [rax],al
  41ea57:	add    al,bh
  41ea59:	ret    
  41ea5a:	add    BYTE PTR [r8],al
  41ea5d:	add    BYTE PTR [rax],al
  41ea5f:	add    BYTE PTR [rax],ah
  41ea61:	(bad)
  41ea65:	add    BYTE PTR [rax],al
  41ea67:	add    BYTE PTR [rax-0x3c],cl
  41ea6a:	add    BYTE PTR [r8],al
  41ea6d:	add    BYTE PTR [rax],al
  41ea6f:	add    BYTE PTR [rax-0x3c],dh
  41ea72:	add    BYTE PTR [r8],al
  41ea75:	add    BYTE PTR [rax],al
  41ea77:	add    BYTE PTR [rax+0x41c4],bh
  41ea7d:	add    BYTE PTR [rax],al
  41ea7f:	add    BYTE PTR [rax],al
  41ea81:	(bad)
  41ea84:	add    BYTE PTR [rax],al
  41ea86:	add    BYTE PTR [rax],al
  41ea88:	(bad)
  41ea8c:	add    BYTE PTR [rax],al
  41ea8e:	add    BYTE PTR [rax],al
  41ea90:	nop
  41ea91:	(bad)
  41ea94:	add    BYTE PTR [rax],al
  41ea96:	add    BYTE PTR [rax],al
  41ea98:	rol    ch,1
  41ea9a:	add    BYTE PTR [r8],al
  41ea9d:	add    BYTE PTR [rax],al
  41ea9f:	add    BYTE PTR [rax],cl
  41eaa1:	mov    BYTE PTR [rcx+0x0],0x0
  41eaa5:	add    BYTE PTR [rax],al
  41eaa7:	add    BYTE PTR [rax-0x3a],al
  41eaaa:	add    BYTE PTR [r8],al
  41eaad:	add    BYTE PTR [rax],al
  41eaaf:	add    BYTE PTR [rax+0x41c6],cl
  41eab5:	add    BYTE PTR [rax],al
  41eab7:	add    al,dl
  41eab9:	mov    BYTE PTR [rcx+0x0],0x0
  41eabd:	add    BYTE PTR [rax],al
  41eabf:	add    BYTE PTR [rax],cl
  41eac1:	mov    DWORD PTR [rcx+0x0],0x0
  41eac8:	mov    QWORD PTR [rcx+0x0],0x0
  41ead0:	mov    bh,al
  41ead2:	add    BYTE PTR [r8],al
  41ead5:	add    BYTE PTR [rax],al
  41ead7:	add    al,dl
  41ead9:	mov    DWORD PTR [rcx+0x0],0x0
  41eae0:	or     al,cl
  41eae2:	add    BYTE PTR [r8],al
  41eae5:	add    BYTE PTR [rax],al
  41eae7:	add    BYTE PTR [rax],bh
  41eae9:	enter  0x41,0x0
  41eaed:	add    BYTE PTR [rax],al
  41eaef:	add    BYTE PTR [rax+0x41c8],al
  41eaf5:	add    BYTE PTR [rax],al
  41eaf7:	add    BYTE PTR [rax+0x41c8],dh
  41eafd:	add    BYTE PTR [rax],al
  41eaff:	add    BYTE PTR [rax],al
  41eb01:	leave  
  41eb02:	add    BYTE PTR [r8],al
  41eb05:	add    BYTE PTR [rax],al
  41eb07:	add    BYTE PTR [rax-0x37],cl
  41eb0a:	add    BYTE PTR [r8],al
  41eb0d:	add    BYTE PTR [rax],al
  41eb0f:	add    BYTE PTR [rax-0x37],bh
  41eb12:	add    BYTE PTR [r8],al
  41eb15:	add    BYTE PTR [rax],al
  41eb17:	add    BYTE PTR [rax+0x41c9],dh
  41eb1d:	add    BYTE PTR [rax],al
  41eb1f:	add    al,dh
  41eb21:	leave  
  41eb22:	add    BYTE PTR [r8],al
  41eb25:	add    BYTE PTR [rax],al
  41eb27:	add    BYTE PTR [rax],bh
  41eb29:	retf   0x41
  41eb2c:	add    BYTE PTR [rax],al
  41eb2e:	add    BYTE PTR [rax],al
  41eb30:	js     0x41eafc
  41eb32:	add    BYTE PTR [r8],al
  41eb35:	add    BYTE PTR [rax],al
  41eb37:	add    BYTE PTR [rax+0x41ca],bh
  41eb3d:	add    BYTE PTR [rax],al
  41eb3f:	add    al,bh
  41eb41:	retf   0x41
  41eb44:	add    BYTE PTR [rax],al
  41eb46:	add    BYTE PTR [rax],al
  41eb48:	cmp    bl,cl
  41eb4a:	add    BYTE PTR [r8],al
  41eb4d:	add    BYTE PTR [rax],al
  41eb4f:	add    BYTE PTR [rax+0x41cb],al
  41eb55:	add    BYTE PTR [rax],al
  41eb57:	add    al,cl
  41eb59:	retf   
  41eb5a:	add    BYTE PTR [r8],al
  41eb5d:	add    BYTE PTR [rax],al
  41eb5f:	add    BYTE PTR [rax],cl
  41eb61:	int3   
  41eb62:	add    BYTE PTR [r8],al
  41eb65:	add    BYTE PTR [rax],al
  41eb67:	add    BYTE PTR [rax],bh
  41eb69:	int3   
  41eb6a:	add    BYTE PTR [r8],al
  41eb6d:	add    BYTE PTR [rax],al
  41eb6f:	add    BYTE PTR [rax+0x41cc],cl
  41eb75:	add    BYTE PTR [rax],al
  41eb77:	add    al,al
  41eb79:	int3   
  41eb7a:	add    BYTE PTR [r8],al
  41eb7d:	add    BYTE PTR [rax],al
  41eb7f:	add    BYTE PTR [rax],al
  41eb81:	int    0x41
  41eb83:	add    BYTE PTR [rax],al
  41eb85:	add    BYTE PTR [rax],al
  41eb87:	add    BYTE PTR [rax-0x33],al
  41eb8a:	add    BYTE PTR [r8],al
  41eb8d:	add    BYTE PTR [rax],al
  41eb8f:	add    BYTE PTR [rax-0x33],bh
  41eb92:	add    BYTE PTR [r8],al
  41eb95:	add    BYTE PTR [rax],al
  41eb97:	add    BYTE PTR [rax+0x41cd],bh
  41eb9d:	add    BYTE PTR [rax],al
  41eb9f:	add    al,bh
  41eba1:	int    0x41
  41eba3:	add    BYTE PTR [rax],al
  41eba5:	add    BYTE PTR [rax],al
  41eba7:	add    BYTE PTR [rax],dh
  41eba9:	(bad)  
  41ebaa:	add    BYTE PTR [r8],al
  41ebad:	add    BYTE PTR [rax],al
  41ebaf:	add    BYTE PTR [rax-0x32],bh
  41ebb2:	add    BYTE PTR [r8],al
  41ebb5:	add    BYTE PTR [rax],al
  41ebb7:	add    al,al
  41ebb9:	(bad)  
  41ebba:	add    BYTE PTR [r8],al
  41ebbd:	add    BYTE PTR [rax],al
  41ebbf:	add    al,bh
  41ebc1:	(bad)  
  41ebc2:	add    BYTE PTR [r8],al
  41ebc5:	add    BYTE PTR [rax],al
  41ebc7:	add    BYTE PTR [rax],bh
  41ebc9:	iret   
  41ebca:	add    BYTE PTR [r8],al
  41ebcd:	add    BYTE PTR [rax],al
  41ebcf:	add    BYTE PTR [rax-0x31],bh
  41ebd2:	add    BYTE PTR [r8],al
  41ebd5:	add    BYTE PTR [rax],al
  41ebd7:	add    al,al
  41ebd9:	iret   
  41ebda:	add    BYTE PTR [r8],al
  41ebdd:	add    BYTE PTR [rax],al
  41ebdf:	add    BYTE PTR [rax],dl
  41ebe1:	rol    BYTE PTR [rcx+0x0],1
  41ebe4:	add    BYTE PTR [rax],al
  41ebe6:	add    BYTE PTR [rax],al
  41ebe8:	(bad)  
  41ebe9:	rol    BYTE PTR [rcx+0x0],1
  41ebec:	add    BYTE PTR [rax],al
  41ebee:	add    BYTE PTR [rax],al
  41ebf0:	mov    al,0xd0
  41ebf2:	add    BYTE PTR [r8],al
  41ebf5:	add    BYTE PTR [rax],al
  41ebf7:	add    al,bh
  41ebf9:	rol    BYTE PTR [rcx+0x0],1
  41ebfc:	add    BYTE PTR [rax],al
  41ebfe:	add    BYTE PTR [rax],al
  41ec00:	rex rol DWORD PTR [rcx+0x0],1
  41ec04:	add    BYTE PTR [rax],al
  41ec06:	add    BYTE PTR [rax],al
  41ec08:	js     0x41ebdb
  41ec0a:	add    BYTE PTR [r8],al
  41ec0d:	add    BYTE PTR [rax],al
  41ec0f:	add    al,cl
  41ec11:	rol    DWORD PTR [rcx+0x0],1
  41ec14:	add    BYTE PTR [rax],al
  41ec16:	add    BYTE PTR [rax],al
  41ec18:	adc    dl,dl
  41ec1a:	add    BYTE PTR [r8],al
  41ec1d:	add    BYTE PTR [rax],al
  41ec1f:	add    BYTE PTR [rax-0x2e],dl
  41ec22:	add    BYTE PTR [r8],al
  41ec25:	add    BYTE PTR [rax],al
  41ec27:	add    BYTE PTR [rax+0x41d2],bl
  41ec2d:	add    BYTE PTR [rax],al
  41ec2f:	add    al,bl
  41ec31:	rol    BYTE PTR [rcx+0x0],cl
  41ec34:	add    BYTE PTR [rax],al
  41ec36:	add    BYTE PTR [rax],al
  41ec38:	sbb    bl,dl
  41ec3a:	add    BYTE PTR [r8],al
  41ec3d:	add    BYTE PTR [rax],al
  41ec3f:	add    BYTE PTR [rax-0x2d],ch
  41ec42:	add    BYTE PTR [r8],al
  41ec45:	add    BYTE PTR [rax],al
  41ec47:	add    BYTE PTR [rax+0x41d3],bh
  41ec4d:	add    BYTE PTR [rax],al
  41ec4f:	add    BYTE PTR [rax],dl
  41ec51:	(bad)  
  41ec52:	add    BYTE PTR [r8],al
  41ec55:	add    BYTE PTR [rax],al
  41ec57:	add    BYTE PTR [rax-0x2c],ah
  41ec5a:	add    BYTE PTR [r8],al
  41ec5d:	add    BYTE PTR [rax],al
  41ec5f:	add    BYTE PTR [rax+0x41d4],ah
  41ec65:	add    BYTE PTR [rax],al
  41ec67:	add    al,bh
  41ec69:	(bad)  
  41ec6a:	add    BYTE PTR [r8],al
  41ec6d:	add    BYTE PTR [rax],al
  41ec6f:	add    BYTE PTR [rax-0x2b],dl
  41ec72:	add    BYTE PTR [r8],al
  41ec75:	add    BYTE PTR [rax],al
  41ec77:	add    BYTE PTR [rax+0x41d5],dl
  41ec7d:	add    BYTE PTR [rax],al
  41ec7f:	add    al,ah
  41ec81:	(bad)  
  41ec82:	add    BYTE PTR [r8],al
  41ec85:	add    BYTE PTR [rax],al
  41ec87:	add    BYTE PTR [rax],bh
  41ec89:	(bad)  
  41ec8a:	add    BYTE PTR [r8],al
  41ec8d:	add    BYTE PTR [rax],al
  41ec8f:	add    BYTE PTR [rax-0x2a],bh
  41ec92:	add    BYTE PTR [r8],al
  41ec95:	add    BYTE PTR [rax],al
  41ec97:	add    BYTE PTR [rax+0x41d6],bh
  41ec9d:	add    BYTE PTR [rax],al
  41ec9f:	add    BYTE PTR [rax],al
  41eca1:	xlat   BYTE PTR ds:[rbx]
  41eca2:	add    BYTE PTR [r8],al
  41eca5:	add    BYTE PTR [rax],al
  41eca7:	add    BYTE PTR [rax-0x29],bl
  41ecaa:	add    BYTE PTR [r8],al
  41ecad:	add    BYTE PTR [rax],al
  41ecaf:	add    BYTE PTR [rax+0x41d7],cl
  41ecb5:	add    BYTE PTR [rax],al
  41ecb7:	add    al,al
  41ecb9:	xlat   BYTE PTR ds:[rbx]
  41ecba:	add    BYTE PTR [r8],al
  41ecbd:	add    BYTE PTR [rax],al
  41ecbf:	add    al,bh
  41ecc1:	xlat   BYTE PTR ds:[rbx]
  41ecc2:	add    BYTE PTR [r8],al
  41ecc5:	add    BYTE PTR [rax],al
  41ecc7:	add    BYTE PTR [rax-0x28],cl
  41ecca:	add    BYTE PTR [r8],al
  41eccd:	add    BYTE PTR [rax],al
  41eccf:	add    BYTE PTR [rax+0x41d8],cl
  41ecd5:	add    BYTE PTR [rax],al
  41ecd7:	add    BYTE PTR [rax+0x41d8],bh
  41ecdd:	add    BYTE PTR [rax],al
  41ecdf:	add    al,bh
  41ece1:	fadd   DWORD PTR [rcx+0x0]
  41ece4:	add    BYTE PTR [rax],al
  41ece6:	add    BYTE PTR [rax],al
  41ece8:	cmp    cl,bl
  41ecea:	add    BYTE PTR [r8],al
  41eced:	add    BYTE PTR [rax],al
  41ecef:	add    BYTE PTR [rax+0x41d9],cl
  41ecf5:	add    BYTE PTR [rax],al
  41ecf7:	add    BYTE PTR [rax+0x41d9],bh
  41ecfd:	add    BYTE PTR [rax],al
  41ecff:	add    BYTE PTR [rax],al
  41ed01:	fiadd  DWORD PTR [rcx+0x0]
  41ed04:	add    BYTE PTR [rax],al
  41ed06:	add    BYTE PTR [rax],al
  41ed08:	rex.W fiadd DWORD PTR [rcx+0x0]
  41ed0c:	add    BYTE PTR [rax],al
  41ed0e:	add    BYTE PTR [rax],al
  41ed10:	mov    dl,bl
  41ed12:	add    BYTE PTR [r8],al
  41ed15:	add    BYTE PTR [rax],al
  41ed17:	add    al,cl
  41ed19:	fiadd  DWORD PTR [rcx+0x0]
  41ed1c:	add    BYTE PTR [rax],al
  41ed1e:	add    BYTE PTR [rax],al
  41ed20:	lock fiadd DWORD PTR [rcx+0x0]
  41ed24:	add    BYTE PTR [rax],al
  41ed26:	add    BYTE PTR [rax],al
  41ed28:	xor    bl,bl
  41ed2a:	add    BYTE PTR [r8],al
  41ed2d:	add    BYTE PTR [rax],al
  41ed2f:	add    BYTE PTR [rax-0x25],bh
  41ed32:	add    BYTE PTR [r8],al
  41ed35:	add    BYTE PTR [rax],al
  41ed37:	add    BYTE PTR [rax+0x41db],bh
  41ed3d:	add    BYTE PTR [rax],al
  41ed3f:	add    BYTE PTR [rax],al
  41ed41:	fadd   QWORD PTR [rcx+0x0]
  41ed44:	add    BYTE PTR [rax],al
  41ed46:	add    BYTE PTR [rax],al
  41ed48:	cmp    ah,bl
  41ed4a:	add    BYTE PTR [r8],al
  41ed4d:	add    BYTE PTR [rax],al
  41ed4f:	add    BYTE PTR [rax+0x41dc],al
  41ed55:	add    BYTE PTR [rax],al
  41ed57:	add    al,cl
  41ed59:	fadd   QWORD PTR [rcx+0x0]
  41ed5c:	add    BYTE PTR [rax],al
  41ed5e:	add    BYTE PTR [rax],al
  41ed60:	sbb    ch,bl
  41ed62:	add    BYTE PTR [r8],al
  41ed65:	add    BYTE PTR [rax],al
  41ed67:	add    BYTE PTR [rax-0x23],bl
  41ed6a:	add    BYTE PTR [r8],al
  41ed6d:	add    BYTE PTR [rax],al
  41ed6f:	add    BYTE PTR [rax+0x41dd],bl
  41ed75:	add    BYTE PTR [rax],al
  41ed77:	add    al,ah
  41ed79:	fld    QWORD PTR [rcx+0x0]
  41ed7c:	add    BYTE PTR [rax],al
  41ed7e:	add    BYTE PTR [rax],al
  41ed80:	xor    dh,bl
  41ed82:	add    BYTE PTR [r8],al
  41ed85:	add    BYTE PTR [rax],al
  41ed87:	add    BYTE PTR [rax-0x22],dh
  41ed8a:	add    BYTE PTR [r8],al
  41ed8d:	add    BYTE PTR [rax],al
  41ed8f:	add    BYTE PTR [rax+0x41de],dh
  41ed95:	add    BYTE PTR [rax],al
  41ed97:	add    al,dh
  41ed99:	fiadd  WORD PTR [rcx+0x0]
  41ed9c:	add    BYTE PTR [rax],al
  41ed9e:	add    BYTE PTR [rax],al
  41eda0:	xor    bh,bl
  41eda2:	add    BYTE PTR [r8],al
  41eda5:	add    BYTE PTR [rax],al
  41eda7:	add    BYTE PTR [rax+0x41df],al
  41edad:	add    BYTE PTR [rax],al
  41edaf:	add    al,dl
  41edb1:	fild   WORD PTR [rcx+0x0]
  41edb4:	add    BYTE PTR [rax],al
  41edb6:	add    BYTE PTR [rax],al
  41edb8:	adc    al,ah
  41edba:	add    BYTE PTR [r8],al
  41edbd:	add    BYTE PTR [rax],al
  41edbf:	add    BYTE PTR [rax-0x20],ah
  41edc2:	add    BYTE PTR [r8],al
  41edc5:	add    BYTE PTR [rax],al
  41edc7:	add    BYTE PTR [rax+0x41e0],bh
  41edcd:	add    BYTE PTR [rax],al
  41edcf:	add    al,bh
  41edd1:	loopne 0x41ee14
  41edd3:	add    BYTE PTR [rax],al
  41edd5:	add    BYTE PTR [rax],al
  41edd7:	add    BYTE PTR [rax],bh
  41edd9:	loope  0x41ee1c
  41eddb:	add    BYTE PTR [rax],al
  41eddd:	add    BYTE PTR [rax],al
  41eddf:	add    BYTE PTR [rax-0x1f],ah
  41ede2:	add    BYTE PTR [r8],al
  41ede5:	add    BYTE PTR [rax],al
  41ede7:	add    BYTE PTR [rax+0x41e1],cl
  41eded:	add    BYTE PTR [rax],al
  41edef:	add    al,dl
  41edf1:	loope  0x41ee34
  41edf3:	add    BYTE PTR [rax],al
  41edf5:	add    BYTE PTR [rax],al
  41edf7:	add    BYTE PTR [rax],dl
  41edf9:	loop   0x41ee3c
  41edfb:	add    BYTE PTR [rax],al
  41edfd:	add    BYTE PTR [rax],al
  41edff:	add    BYTE PTR [rax-0x1e],bl
  41ee02:	add    BYTE PTR [r8],al
  41ee05:	add    BYTE PTR [rax],al
  41ee07:	add    BYTE PTR [rax+0x41e2],cl
  41ee0d:	add    BYTE PTR [rax],al
  41ee0f:	add    BYTE PTR [rax+0x41e2],dh
  41ee15:	add    BYTE PTR [rax],al
  41ee17:	add    al,ah
  41ee19:	loop   0x41ee5c
  41ee1b:	add    BYTE PTR [rax],al
  41ee1d:	add    BYTE PTR [rax],al
  41ee1f:	add    BYTE PTR [rax],ch
  41ee21:	jrcxz  0x41ee64
  41ee23:	add    BYTE PTR [rax],al
  41ee25:	add    BYTE PTR [rax],al
  41ee27:	add    BYTE PTR [rax-0x1d],ch
  41ee2a:	add    BYTE PTR [r8],al
  41ee2d:	add    BYTE PTR [rax],al
  41ee2f:	add    BYTE PTR [rax+0x41e3],ch
  41ee35:	add    BYTE PTR [rax],al
  41ee37:	add    al,dl
  41ee39:	jrcxz  0x41ee7c
  41ee3b:	add    BYTE PTR [rax],al
  41ee3d:	add    BYTE PTR [rax],al
  41ee3f:	add    al,bh
  41ee41:	jrcxz  0x41ee84
  41ee43:	add    BYTE PTR [rax],al
  41ee45:	add    BYTE PTR [rax],al
  41ee47:	add    BYTE PTR [rax],ah
  41ee49:	in     al,0x41
  41ee4b:	add    BYTE PTR [rax],al
  41ee4d:	add    BYTE PTR [rax],al
  41ee4f:	add    BYTE PTR [rax-0x1c],cl
  41ee52:	add    BYTE PTR [r8],al
  41ee55:	add    BYTE PTR [rax],al
  41ee57:	add    BYTE PTR [rax-0x1c],dh
  41ee5a:	add    BYTE PTR [r8],al
  41ee5d:	add    BYTE PTR [rax],al
  41ee5f:	add    BYTE PTR [rax+0x41e4],ch
  41ee65:	add    BYTE PTR [rax],al
  41ee67:	add    al,ch
  41ee69:	in     al,0x41
  41ee6b:	add    BYTE PTR [rax],al
  41ee6d:	add    BYTE PTR [rax],al
  41ee6f:	add    BYTE PTR [rax],ch
  41ee71:	in     eax,0x41
  41ee73:	add    BYTE PTR [rax],al
  41ee75:	add    BYTE PTR [rax],al
  41ee77:	add    BYTE PTR [rax-0x1b],ch
  41ee7a:	add    BYTE PTR [r8],al
  41ee7d:	add    BYTE PTR [rax],al
  41ee7f:	add    BYTE PTR [rax+0x41e5],ah
  41ee85:	add    BYTE PTR [rax],al
  41ee87:	add    al,cl
  41ee89:	in     eax,0x41
  41ee8b:	add    BYTE PTR [rax],al
  41ee8d:	add    BYTE PTR [rax],al
  41ee8f:	add    al,bh
  41ee91:	in     eax,0x41
  41ee93:	add    BYTE PTR [rax],al
  41ee95:	add    BYTE PTR [rax],al
  41ee97:	add    BYTE PTR [rax],dh
  41ee99:	out    0x41,al
  41ee9b:	add    BYTE PTR [rax],al
  41ee9d:	add    BYTE PTR [rax],al
  41ee9f:	add    BYTE PTR [rax-0x1a],bl
  41eea2:	add    BYTE PTR [r8],al
  41eea5:	add    BYTE PTR [rax],al
  41eea7:	add    BYTE PTR [rax+0x41e6],al
  41eead:	add    BYTE PTR [rax],al
  41eeaf:	add    al,cl
  41eeb1:	out    0x41,al
  41eeb3:	add    BYTE PTR [rax],al
  41eeb5:	add    BYTE PTR [rax],al
  41eeb7:	add    BYTE PTR [rax],dl
  41eeb9:	out    0x41,eax
  41eebb:	add    BYTE PTR [rax],al
  41eebd:	add    BYTE PTR [rax],al
  41eebf:	add    BYTE PTR [rax-0x19],dl
  41eec2:	add    BYTE PTR [r8],al
  41eec5:	add    BYTE PTR [rax],al
  41eec7:	add    BYTE PTR [rax+0x41e7],cl
  41eecd:	add    BYTE PTR [rax],al
  41eecf:	add    al,al
  41eed1:	out    0x41,eax
  41eed3:	add    BYTE PTR [rax],al
  41eed5:	add    BYTE PTR [rax],al
  41eed7:	add    BYTE PTR [rax],al
  41eed9:	call   0x41ef1f
  41eede:	add    BYTE PTR [rax],al
  41eee0:	rex call 0x41ef27
	...
  41eefe:	add    BYTE PTR [rax],al
  41ef00:	push   0x75206461
  41ef05:	outs   dx,BYTE PTR ds:[rsi]
  41ef06:	jae    0x41ef7d
  41ef08:	jo     0x41ef7a
  41ef0a:	outs   dx,DWORD PTR ds:[rsi]
  41ef0b:	jb     0x41ef81
  41ef0d:	gs and BYTE PTR fs:[rdx+rsi*2+0x61],dh
  41ef13:	imul   ebp,DWORD PTR [rcx+rbp*2+0x6e],0x61672067
  41ef1b:	jb     0x41ef7f
  41ef1d:	(bad)  
  41ef1e:	add    BYTE PTR gs:[ecx+0x73],ch
  41ef23:	and    BYTE PTR [rbp+0x6e],dh
  41ef26:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  41ef2a:	outs   dx,BYTE PTR ds:[rsi]
  41ef2b:	add    BYTE PTR [rcx+0x73],ch
  41ef2e:	and    BYTE PTR [rcx+0x6d],ah
  41ef31:	(bad)  
  41ef32:	imul   esp,DWORD PTR [rdi+0x75],0x73756f
  41ef39:	jb     0x41efa0
  41ef3b:	jno    0x41efb2
  41ef3d:	imul   esi,DWORD PTR [rdx+0x65],0x61702073
  41ef44:	jb     0x41efa7
  41ef46:	ins    DWORD PTR es:[rdi],dx
  41ef47:	gs je  0x41efaf
  41ef4a:	jb     0x41ef4c
  41ef4c:	imul   esi,DWORD PTR [rbx+0x20],0x6c646162
  41ef53:	jns    0x41ef75
  41ef55:	jne    0x41efca
  41ef57:	gs and BYTE PTR fs:[rax+0x65],ch
  41ef5c:	jb     0x41efc3
  41ef5e:	add    BYTE PTR [rax],al
  41ef60:	gs js  0x41efd3
  41ef63:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  41ef68:	and    BYTE PTR [rcx+0x20],ah
  41ef6b:	jo     0x41efdf
  41ef6d:	outs   dx,DWORD PTR ds:[rsi]
  41ef6e:	jo     0x41efd5
  41ef70:	jb     0x41ef92
  41ef72:	outs   dx,BYTE PTR ds:[rsi]
  41ef73:	jne    0x41efe2
  41ef75:	gs jb  0x41efe1
  41ef78:	movsxd esp,DWORD PTR [rcx+0x6c]
  41ef7b:	and    BYTE PTR [rax+0x61],dh
  41ef7e:	jb     0x41efe1
  41ef80:	ins    DWORD PTR es:[rdi],dx
  41ef81:	gs je  0x41efe9
  41ef84:	jb     0x41ef86
  41ef86:	add    BYTE PTR [rax],al
  41ef88:	gs js  0x41effb
  41ef8b:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  41ef90:	and    BYTE PTR [rcx+0x20],ah
  41ef93:	jo     0x41f004
  41ef95:	jae    0x41f000
  41ef97:	je     0x41f002
  41ef99:	jbe    0x41f000
  41ef9b:	and    BYTE PTR [rsi+0x75],ch
  41ef9e:	ins    DWORD PTR es:[rdi],dx
  41ef9f:	gs jb  0x41f00b
  41efa2:	movsxd esp,DWORD PTR [rcx+0x6c]
  41efa5:	and    BYTE PTR [rax+0x61],dh
  41efa8:	jb     0x41f00b
  41efaa:	ins    DWORD PTR es:[rdi],dx
  41efab:	gs je  0x41f013
  41efae:	jb     0x41efb0
  41efb0:	je     0x41f01a
  41efb2:	and    BYTE PTR gs:[rcx+0x6e],ch
  41efb6:	jae    0x41f02c
  41efb8:	(bad)  
  41efb9:	ins    BYTE PTR es:[rdi],dx
  41efba:	ins    BYTE PTR es:[rdi],dx
  41efbb:	gs and BYTE PTR fs:[rcx+rbp*2+0x62],ch
  41efc1:	movsxd esi,DWORD PTR [rbp+0x72]
  41efc4:	ins    BYTE PTR es:[rdi],dx
  41efc5:	and    BYTE PTR [rsi+0x65],dh
  41efc8:	jb     0x41f03d
  41efca:	imul   ebp,DWORD PTR [rdi+0x6e],0x656f6420
  41efd1:	jae    0x41f041
  41efd3:	(bad)  
  41efd4:	je     0x41eff6
  41efd6:	jae    0x41f04d
  41efd8:	jo     0x41f04a
  41efda:	outs   dx,DWORD PTR ds:[rsi]
  41efdb:	jb     0x41f051
  41efdd:	and    BYTE PTR [rax+rbp*2+0x69],dh
  41efe1:	jae    0x41efe3
  41efe3:	add    BYTE PTR [rax],al
  41efe5:	add    BYTE PTR [rax],al
  41efe7:	add    BYTE PTR [rcx+0x20],ah
  41efea:	jae    0x41f05c
  41efec:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  41eff0:	imul   esp,DWORD PTR [rbp+0x64],0x6f727020
  41eff7:	je     0x41f068
  41eff9:	movsxd ebp,DWORD PTR [rdi+0x6c]
  41effc:	and    BYTE PTR [rcx+0x73],ch
  41efff:	and    BYTE PTR [rbp+0x6e],dh
  41f002:	jae    0x41f079
  41f004:	jo     0x41f076
  41f006:	outs   dx,DWORD PTR ds:[rsi]
  41f007:	jb     0x41f07d
  41f009:	gs and BYTE PTR fs:[rdx+0x79],ah
  41f00e:	and    BYTE PTR [rcx+rbp*2+0x62],ch
  41f012:	movsxd esi,DWORD PTR [rbp+0x72]
  41f015:	ins    BYTE PTR es:[rdi],dx
  41f016:	add    BYTE PTR [rdi+0x75],ch
  41f019:	je     0x41f03b
  41f01b:	outs   dx,DWORD PTR ds:[rsi]
  41f01c:	data16 and BYTE PTR [rbp+0x65],ch
  41f020:	ins    DWORD PTR es:[rdi],dx
  41f021:	outs   dx,DWORD PTR ds:[rsi]
  41f022:	jb     0x41f09d
  41f024:	add    BYTE PTR [rbp+0x6e],dh
  41f027:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  41f02b:	outs   dx,BYTE PTR ds:[rsi]
  41f02c:	and    BYTE PTR [rbp+0x72],ah
  41f02f:	jb     0x41f0a0
  41f031:	jb     0x41f033
  41f033:	add    ah,cl
  41f035:	mov    esi,edi
  41f037:	dec    DWORD PTR [rcx+rcx*4-0x76630002]
  41f03e:	(bad)  
  41f03f:	jmp    FWORD PTR [rcx+rcx*4-0x76430002]
  41f046:	(bad)  
  41f047:	dec    esp
  41f049:	mov    esi,edi
  41f04b:	dec    esp
  41f04d:	mov    esi,edi
  41f04f:	dec    esp
  41f051:	mov    esi,edi
  41f053:	dec    esp
  41f055:	mov    esi,edi
  41f057:	jmp    FWORD PTR [rcx+rcx*4]
  41f05a:	(bad)  
  41f05b:	(bad)  
  41f05c:	cmp    al,0x89
  41f05e:	(bad)  
  41f05f:	dec    DWORD PTR [rcx+rcx*4-0x2]
  41f063:	call   FWORD PTR [rcx+rcx*4-0x2]
  41f067:	jmp    FWORD PTR [rcx+rcx*4-0x2]
  41f06b:	(bad)  
  41f06c:	jl     0x41eff7
  41f06e:	(bad)  
  41f06f:	inc    DWORD PTR [rax]
  41f071:	rex.RXB
  41f072:	rex.RB push r12
  41f074:	and    BYTE PTR [rax],ch
  41f076:	sub    eax,0x2d202c47
  41f07b:	sub    eax,0x29746567
  41f080:	add    BYTE PTR [rax+0x45],cl
  41f083:	rex.B
  41f084:	and    BYTE PTR [rax],r13b
  41f087:	sub    eax,0x2d202c49
  41f08c:	sub    eax,0x64616568
  41f091:	sub    DWORD PTR [rax],eax
  41f093:	add    BYTE PTR [rax],al
  41f095:	add    BYTE PTR [rax],al
  41f097:	add    BYTE PTR [rbp+0x75],ch
  41f09a:	ins    BYTE PTR es:[rdi],dx
  41f09b:	je     0x41f106
  41f09d:	jo     0x41f100
  41f09f:	jb     0x41f115
  41f0a1:	and    BYTE PTR [rsi+0x6f],ah
  41f0a4:	jb     0x41f113
  41f0a6:	jo     0x41f117
  41f0a8:	jae    0x41f11e
  41f0aa:	and    BYTE PTR [rax],ch
  41f0ac:	sub    eax,0x2d202c46
  41f0b1:	sub    eax,0x6d726f66
  41f0b6:	sub    DWORD PTR [rax],eax
  41f0b8:	push   rax
  41f0b9:	rex.WRXB push r11
  41f0bb:	push   rsp
  41f0bc:	and    BYTE PTR [rax],ch
  41f0be:	sub    eax,0x2d202c64
  41f0c3:	sub    eax,0x61746164
  41f0c8:	sub    DWORD PTR [rax],eax
  41f0ca:	add    BYTE PTR [rax],al
  41f0cc:	add    BYTE PTR [rax],al
  41f0ce:	add    BYTE PTR [rax],al
  41f0d0:	pop    rcx
  41f0d1:	outs   dx,DWORD PTR ds:[rsi]
  41f0d2:	jne    0x41f0f4
  41f0d4:	movsxd esp,DWORD PTR [rcx+0x6e]
  41f0d7:	and    BYTE PTR [rdi+0x6e],ch
  41f0da:	ins    BYTE PTR es:[rdi],dx
  41f0db:	jns    0x41f0fd
  41f0dd:	jae    0x41f144
  41f0df:	ins    BYTE PTR es:[rdi],dx
  41f0e0:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x6f]
  41f0e5:	outs   dx,BYTE PTR ds:[rsi]
  41f0e6:	and    BYTE PTR gs:[rax+0x54],cl
  41f0ea:	push   rsp
  41f0eb:	push   rax
  41f0ec:	and    BYTE PTR [rdx+0x65],dh
  41f0ef:	jno    0x41f166
  41f0f1:	gs jae 0x41f168
  41f0f4:	and    BYTE PTR [rbp+0x65],ch
  41f0f7:	je     0x41f161
  41f0f9:	outs   dx,DWORD PTR ds:[rsi]
  41f0fa:	and    DWORD PTR fs:[rax],esp
  41f0fd:	pop    rcx
  41f0fe:	outs   dx,DWORD PTR ds:[rsi]
  41f0ff:	jne    0x41f121
  41f101:	(bad)  
  41f102:	jae    0x41f16f
  41f104:	gs and BYTE PTR fs:[rsi+0x6f],ah
  41f109:	jb     0x41f12b
  41f10b:	(bad)  
  41f10c:	outs   dx,DWORD PTR ds:[rsi]
  41f10d:	je     0x41f177
  41f10f:	and    BYTE PTR [rip+0x6e612073],ah        # 0x6ea31188
  41f115:	and    BYTE PTR fs:[rip+0xa2e73],ah        # 0x4c1f8f
  41f11c:	rex.RXB
  41f11d:	rex.RB push r12
  41f11f:	add    BYTE PTR [rax+0x45],cl
  41f122:	rex.B
  41f123:	add    BYTE PTR [rax+0x4f],r10b
  41f127:	push   rbx
  41f128:	push   rsp
  41f129:	add    BYTE PTR [rax],al
  41f12b:	add    BYTE PTR [rax],al
  41f12d:	add    BYTE PTR [rax],al
  41f12f:	add    BYTE PTR [rbp+0x6e],dl
  41f132:	outs   dx,BYTE PTR ds:[rsi]
  41f133:	movsxd esp,DWORD PTR gs:[rbp+0x73]
  41f137:	jae    0x41f19a
  41f139:	jb     0x41f1b4
  41f13b:	and    BYTE PTR [rbp+0x73],dh
  41f13e:	and    BYTE PTR gs:[rdi+0x66],ch
  41f142:	and    BYTE PTR [rip+0x726f2058],ch        # 0x72b111a0
  41f148:	and    BYTE PTR [rip+0x7165722d],ch        # 0x71a7637b
  41f14e:	jne    0x41f1b5
  41f150:	jae    0x41f1c6
  41f152:	sub    al,0x20
  41f154:	and    eax,0x73692073
  41f159:	and    BYTE PTR [rcx+0x6c],ah
  41f15c:	jb     0x41f1c3
  41f15e:	(bad)  
  41f15f:	fs jns 0x41f182
  41f162:	imul   ebp,DWORD PTR [rsi+0x66],0x65727265
  41f169:	fs or  al,BYTE PTR cs:[rax]
  41f16d:	push   0x646165
  41f172:	add    BYTE PTR [rax],al
  41f174:	add    BYTE PTR [rax],al
  41f176:	add    BYTE PTR [rax],al
  41f178:	push   rbx
  41f179:	gs je  0x41f1f0
  41f17c:	imul   ebp,DWORD PTR [rsi+0x67],0x73756320
  41f183:	je     0x41f1f4
  41f185:	ins    DWORD PTR es:[rdi],dx
  41f186:	and    BYTE PTR [rax+0x54],cl
  41f189:	push   rsp
  41f18a:	push   rax
  41f18b:	and    BYTE PTR [rbp+0x65],ch
  41f18e:	je     0x41f1f8
  41f190:	outs   dx,DWORD PTR ds:[rsi]
  41f191:	and    BYTE PTR fs:[rdi+rbp*2+0x20],dh
  41f196:	rex.W
  41f197:	rex.RB
  41f198:	rex.B
  41f199:	and    BYTE PTR [rdi+0x69],r14b
  41f19d:	je     0x41f207
  41f19f:	and    BYTE PTR [rip+0x2d2d2f58],ch        # 0x2d6f20fd
  41f1a5:	jb     0x41f20c
  41f1a7:	jno    0x41f21e
  41f1a9:	gs jae 0x41f220
  41f1ac:	and    BYTE PTR [rbp+0x61],ch
  41f1af:	jns    0x41f1d1
  41f1b1:	outs   dx,BYTE PTR ds:[rsi]
  41f1b2:	outs   dx,DWORD PTR ds:[rsi]
  41f1b3:	je     0x41f1d5
  41f1b5:	ja     0x41f226
  41f1b7:	jb     0x41f224
  41f1b9:	and    BYTE PTR [rax+rbp*2+0x65],dh
  41f1bd:	and    BYTE PTR [rdi+0x61],dh
  41f1c0:	jns    0x41f1e2
  41f1c2:	jns    0x41f233
  41f1c4:	jne    0x41f1e6
  41f1c6:	ja     0x41f229
  41f1c8:	outs   dx,BYTE PTR ds:[rsi]
  41f1c9:	je     0x41f1f9
  41f1cb:	and    BYTE PTR [rbx+0x6f],al
  41f1ce:	outs   dx,BYTE PTR ds:[rsi]
  41f1cf:	jae    0x41f23a
  41f1d1:	fs gs jb 0x41f1f5
  41f1d5:	jne    0x41f24a
  41f1d7:	imul   ebp,DWORD PTR [rsi+0x67],0x2f492d20
  41f1de:	sub    eax,0x6165682d
  41f1e3:	and    BYTE PTR fs:[rcx+0x6e],ch
  41f1e7:	jae    0x41f25d
  41f1e9:	gs (bad) 
  41f1eb:	fs or  al,BYTE PTR cs:[rax]
  41f1ef:	add    BYTE PTR [rbx+0x55],al
  41f1f2:	push   rdx
  41f1f3:	rex.WR pop rdi
  41f1f5:	rex.W
  41f1f6:	rex.WRXB
  41f1f7:	rex.WRB
  41f1f8:	add    BYTE PTR [r8+0x4f],r9b
  41f1fc:	rex.WRB
  41f1fd:	add    BYTE PTR [r9+0x50],r8b
  41f201:	push   rax
  41f202:	rex.R
  41f203:	push   r12
  41f205:	add    BYTE PTR [r8],al
  41f208:	and    eax,0x52455355
  41f20d:	push   rax
  41f20e:	push   rdx
  41f20f:	rex.WRXB
  41f210:	rex.RX
  41f211:	rex.WB
  41f212:	rex.WR
  41f213:	rex.RB and eax,0x7070415c
  41f219:	ins    BYTE PTR es:[rdi],dx
  41f21a:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  41f221:	and    BYTE PTR [rcx+riz*2+0x74],al
  41f225:	(bad)  
	...
  41f23e:	add    BYTE PTR [rax],al
  41f240:	xor    DWORD PTR [rsi],ebp
  41f242:	xor    ch,BYTE PTR [rsi]
  41f244:	xor    DWORD PTR [rcx],esi
	...
  41f27e:	add    BYTE PTR [rax],al
  41f280:	(bad)  
  41f281:	mov    ecx,DWORD PTR [rax]
  41f283:	add    BYTE PTR [rax],al
  41f285:	add    BYTE PTR [rax],al
  41f287:	add    BYTE PTR [rdx],al
  41f289:	add    ebp,ebp
  41f28b:	std    
  41f28c:	imul   edi,DWORD PTR [rbx-0x24],0x46
  41f290:	xchg   edx,eax
  41f291:	sub    eax,0xafe77e8c
  41f296:	rcl    BYTE PTR [rdi+rbx*4+0x1e],0x92
  41f29b:	rcl    DWORD PTR [rbp-0x3b],cl
  41f29e:	mov    ebp,DWORD PTR [rsi]
  41f2a0:	mov    dh,0xd8
  41f2a2:	xchg   edx,eax
  41f2a3:	(bad)  
  41f2a4:	xor    al,0x45
  41f2a6:	fstp   DWORD PTR [rbx+rdx*2]
  41f2a9:	and    dh,BYTE PTR [rdi]
  41f2ab:	mov    esi,DWORD PTR [rdx+0x47edafdd]
  41f2b1:	rsm    
  41f2b3:	or     ah,BYTE PTR [rcx+rdx*8]
  41f2b6:	stos   BYTE PTR es:[rdi],al
  41f2b7:	add    ch,BYTE PTR [rdx-0x9d6ebff]
  41f2bd:	in     al,dx
  41f2be:	fidivr WORD PTR [rdi-0x77539b03]
  41f2c4:	enter  0x204c,0xb3
  41f2c8:	mov    dh,BYTE PTR [rbx+rbx*8+0x79e73dee]
  41f2cf:	rex.WRXB out dx,eax
  41f2d1:	cmp    eax,0x89024496
  41f2d6:	mov    esp,0xc565c646
  41f2db:	mov    ah,BYTE PTR [rcx+rdi*2]
  41f2de:	call   0x80321262
  41f2e3:	(bad)  
  41f2e4:	int3   
  41f2e5:	dec    esp
  41f2e7:	lahf   
  41f2e8:	sbb    ecx,DWORD PTR [rcx+0x72]
  41f2eb:	pop    rsi
  41f2ec:	xchg   ebp,eax
  41f2ed:	jg     0x41f2bc
  41f2ef:	es rex.WRB cld 
  41f2f2:	(bad)  [rdi]
  41f2f4:	(bad)  
  41f2f5:	(bad)  
  41f2f6:	ja     0x41f2ba
  41f2f8:	dec    edi
  41f2fa:	mov    esp,0x73f993f3
  41f2ff:	movsxd ebp,DWORD PTR [rbp-0x25]
  41f302:	cmp    ecx,DWORD PTR [rcx+0x7f7fe17b]
  41f308:	fmul   DWORD PTR [rsi+0x1e]
  41f30b:	jp     0x41f2ee
  41f30d:	jg     0x41f336
  41f30f:	pop    rbx
  41f310:	js     0x41f2f3
  41f312:	cmp    DWORD PTR [rcx+riz*8+0x25],0xfffffffd
  41f317:	std    
  41f318:	ret    
  41f319:	xchg   ebp,esi
  41f31b:	(bad)  
  41f31c:	stc    
  41f31d:	mov    DWORD PTR [rdx+0x45],edi
  41f320:	(bad)  
  41f321:	fldenv [rcx+0x40fa7ef7]
  41f327:	jg     0x41f35e
  41f329:	(bad)  
  41f32a:	(bad)  
  41f32c:	js     0x41f3a5
  41f32e:	clc    
  41f32f:	neg    BYTE PTR [rax+0x5f]
  41f332:	popf   
  41f333:	sub    al,0xab
  41f335:	pop    rcx
  41f336:	xor    cl,BYTE PTR [rax-0x66]
  41f339:	sub    ch,BYTE PTR [rip+0x4aacabea]        # 0x4aee9f29
  41f33f:	shl    ah,cl
  41f341:	std    
  41f342:	vshufpd xmm0,xmm2,xmm6,0xe8
  41f347:	(bad)  
  41f348:	out    dx,eax
  41f349:	(bad)  
  41f34a:	(bad)  
  41f34b:	rex.RXB (bad) 
  41f34d:	movabs ds:0x8b2f268b963f63d6,eax
  41f356:	cli    
  41f357:	out    0xe4,eax
  41f359:	rex.RXB
  41f35a:	repz shl BYTE PTR [rax+0x38],1
  41f35e:	cld    
  41f35f:	jns    0x41f3c4
  41f361:	jrcxz  0x41f358
  41f363:	icebp  
  41f364:	call   0xfffffffffd26d651
  41f369:	repnz in al,0xec
  41f36c:	pop    rbp
  41f36d:	jmp    0x41f348
  41f36f:	and    al,0xaf
  41f371:	adc    edx,ebx
  41f373:	pop    rax
  41f374:	push   rbx
  41f375:	xchg   esi,eax
  41f376:	xor    esi,ebx
  41f378:	(bad)  
  41f379:	xlat   BYTE PTR ds:[rbx]
  41f37a:	(bad)  
  41f37b:	xor    al,0x6d
  41f37d:	shl    ah,cl
  41f37f:	stos   BYTE PTR es:[rdi],al
  41f380:	sub    ah,bh
  41f382:	rex.WB pop r9
  41f384:	shr    DWORD PTR [rdi],1
  41f386:	shl    BYTE PTR [rsi+rcx*8-0x15532456],cl
  41f38d:	(bad)  
  41f38e:	retf   
  41f38f:	cmp    ch,BYTE PTR [rdi]
  41f391:	scas   al,BYTE PTR es:[rdi]
  41f392:	xchg   ebx,eax
  41f393:	mov    dl,0xc8
  41f395:	xchg   edx,eax
  41f396:	repnz sub ch,BYTE PTR [rcx+0x6e]
  41f39a:	xor    ch,BYTE PTR [rbp-0x52]
  41f39d:	pop    rsi
  41f39e:	cs (bad) 
  41f3a0:	gs (bad) 
  41f3a2:	shl    DWORD PTR fs:[rcx+rdx*2-0x6b],cl
  41f3a7:	cmp    QWORD PTR [r9],r13
  41f3aa:	addr32 jne 0x41f35f
  41f3ad:	cmc    
  41f3ae:	cli    
  41f3af:	in     al,0xe8
  41f3b1:	mov    dl,0x9f
  41f3b3:	mov    esp,0x363d3939
  41f3b8:	(bad)  
  41f3b9:	mov    ebp,0x467fc73c
  41f3be:	std    
  41f3bf:	in     al,0xeb
  41f3c1:	mov    bl,0xf3
  41f3c3:	outs   dx,DWORD PTR ds:[rsi]
  41f3c4:	mov    gs,WORD PTR [rdi]
  41f3c6:	cli    
  41f3c7:	leave  
  41f3c8:	(bad)  
  41f3c9:	xchg   edi,eax
  41f3ca:	hlt    
  41f3cb:	xor    edi,edx
  41f3cd:	scas   eax,DWORD PTR es:[rdi]
  41f3ce:	stc    
  41f3cf:	(bad)  
  41f3d0:	jb     0x41f3c4
  41f3d2:	div    al
  41f3d4:	mov    esp,0x3fd1cdaf
  41f3d9:	call   0xffffffffcdf19b65
  41f3de:	psubw  mm1,QWORD PTR [rdi]
  41f3e1:	cli    
  41f3e2:	out    0xf9,eax
  41f3e4:	fyl2xp1 
  41f3e6:	adc    edi,ecx
  41f3e8:	cmp    esi,0x79
  41f3eb:	jno    0x41f3e6
  41f3ed:	(bad)  
  41f3ee:	cld    
  41f3ef:	mul    dl
  41f3f1:	jb     0x41f457
  41f3f3:	(bad)  
  41f3f4:	cmp    edi,DWORD PTR [rdx]
  41f3f6:	movabs ds:0x3fe15fb7a32be0ff,al
  41f3ff:	and    ebx,ebx
  41f401:	fsub   st(0),st
  41f403:	sub    eax,0xba5f1cff
  41f408:	cmp    al,0x3e
  41f40a:	jge    0x41f483
  41f40c:	jl     0x41f3a7
  41f40e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41f40f:	(bad)
  41f412:	xor    al,0xcf
  41f414:	outs   dx,DWORD PTR ds:[rsi]
  41f415:	setae  bl
  41f418:	fwait
  41f419:	sub    al,0x99
  41f41b:	xchg   esp,eax
  41f41c:	repz cmp ebp,edi
  41f41f:	enter  0xc8cc,0x34
  41f423:	stos   DWORD PTR es:[rdi],eax
  41f424:	repz jmp 0x41f3e9
  41f427:	or     al,0xc5
  41f429:	mov    esp,?
  41f42b:	scas   al,BYTE PTR es:[rdi]
  41f42c:	lods   al,BYTE PTR ds:[rsi]
  41f42d:	ds es leave 
  41f430:	pop    rbp
  41f431:	(bad)  
  41f433:	xchg   esp,eax
  41f434:	retf   
  41f435:	rex.RX
  41f436:	fwait
  41f437:	pop    rbx
  41f438:	(bad)  
  41f439:	(bad)  [rax-0xe]
  41f43c:	movabs ds:0x68dc3d734274aac9,al
  41f445:	int    0x6a
  41f447:	jns    0x41f4ae
  41f449:	out    0xb0,al
  41f44b:	ss xchg ebx,eax
  41f44d:	ss pop rsi
  41f44f:	(bad)  
  41f450:	mov    bl,0x32
  41f452:	popf   
  41f453:	rcl    BYTE PTR [rcx+rbx*4+0x57],cl
  41f457:	scas   al,BYTE PTR es:[rdi]
  41f458:	xchg   esi,eax
  41f459:	xchg   dx,ax
  41f45b:	stos   DWORD PTR es:[rdi],eax
  41f45c:	jl     0x41f450
  41f45e:	mov    cl,0x4e
  41f460:	data16 stc 
  41f462:	(bad)  
  41f463:	mov    WORD PTR [rsi],fs
  41f465:	(bad)  
  41f466:	sar    DWORD PTR [rbp+0x1b9f5c4e],cl
  41f46c:	rex.WRB xchg r15,rax
  41f46e:	data16 rex.WRX mov r8,QWORD PTR [rcx-0x6c1b28ca]
  41f476:	xchg   esp,eax
  41f477:	sbb    BYTE PTR ds:[rcx+0x6a0b964b],0x8d
  41f47f:	addr32 sub al,0x59
  41f482:	xchg   esp,eax
  41f483:	mov    ch,0x79
  41f485:	imul   esi,DWORD PTR [rdx+rdi*1],0x8a2f3d35
  41f48c:	or     al,0xfd
  41f48e:	test   al,0xfb
  41f490:	out    0x1f,al
  41f492:	in     eax,0xc7
  41f494:	cmp    al,0x33
  41f496:	jg     0x41f451
  41f498:	retf   0x5967
  41f49b:	ret    0x6a2b
  41f49e:	fwait
  41f49f:	movabs ds:0x3333ce5eacaa4da5,eax
  41f4a8:	jnp    0x41f519
  41f4aa:	mov    bl,0x26
  41f4ac:	popf   
  41f4ad:	in     eax,0xc5
  41f4af:	rex.RXB
  41f4b0:	repz push rdi
  41f4b2:	sbb    bh,al
  41f4b4:	mov    esp,0x7261b2ac
  41f4b9:	pop    rax
  41f4ba:	(bad)  
  41f4bb:	mul    ebp
  41f4bd:	ror    BYTE PTR [rax+rdi*2],cl
  41f4c0:	xor    ebp,DWORD PTR ss:[rbx-0x62]
  41f4c4:	and    eax,0xde566ce3
  41f4c9:	cmc    
  41f4ca:	imul   esp,DWORD PTR [rbp+0x1f396293],0x2bca069b
  41f4d4:	xlat   BYTE PTR ds:[rbx]
  41f4d5:	pop    rsp
  41f4d6:	fisubr DWORD PTR [rcx*2+0x3cf4fc73]
  41f4dd:	xor    eax,0x56ef3263
  41f4e2:	leave  
  41f4e3:	rex.WRB
  41f4e4:	data16 (bad) 
  41f4e6:	pop    rsp
  41f4e7:	(bad)  
  41f4e8:	repnz loop 0x41f4ca
  41f4eb:	(bad)  
  41f4ed:	(bad)  
  41f4ee:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41f4ef:	jbe    0x41f542
  41f4f1:	fisub  WORD PTR [rbp-0x6b]
  41f4f4:	cdq    
  41f4f5:	fyl2x  
  41f4f7:	jge    0x41f55b
  41f4f9:	es (bad) 
  41f4fb:	int3   
  41f4fc:	fwait
  41f4fd:	lock retf 0xb26c
  41f501:	and    al,0x35
  41f503:	rex.WRB fmul DWORD PTR [rip+0x59b2a838]        # 0x59f49d42
  41f50a:	rex.WX
  41f50b:	fwait
  41f50c:	leave  
  41f50d:	jle    0x41f572
  41f50f:	push   0xffffffffbbb33116
  41f514:	rex.WRB pop r14
  41f516:	fnstsw WORD PTR [rdx-0x4e]
  41f519:	lea    edx,[rdi-0x6db9959]
  41f51f:	lods   al,BYTE PTR ds:[rsi]
  41f520:	ss retf 
  41f522:	rex mov DWORD PTR [rdx-0x62],0x63a545a1
  41f52a:	(bad)  
  41f52b:	mul    dh
  41f52d:	jge    0x41f500
  41f52f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41f530:	lahf   
  41f531:	lock jns 0x41f50d
  41f534:	fwait
  41f535:	sub    DWORD PTR [rcx-0x4a],0xffffffc8
  41f539:	mov    ch,BYTE PTR [rcx+0x56]
  41f53c:	xor    al,0xc3
  41f53e:	in     al,0x2f
  41f540:	in     eax,0x72
  41f542:	sar    DWORD PTR [rbx+rdi*8+0x2a],cl
  41f546:	(bad)  
  41f547:	jae    0x41f4d9
  41f549:	rex.WX push rbx
  41f54b:	out    0xcb,al
  41f54d:	adc    cx,WORD PTR [rdx+rbp*4+0x7c]
  41f552:	loope  0x41f581
  41f554:	rex.RB pop r9
  41f556:	cwde   
  41f557:	xor    eax,0x1cde2e4f
  41f55c:	and    eax,0xfe7c5e4f
  41f561:	fsubr  QWORD PTR [rbp-0x66df9647]
  41f567:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41f568:	test   DWORD PTR [rcx],ebx
  41f56a:	jno    0x41f5a2
  41f56c:	leave  
  41f56d:	scas   eax,DWORD PTR es:[rdi]
  41f56e:	out    dx,al
  41f56f:	xchg   ebx,eax
  41f570:	stc    
  41f571:	jb     0x41f549
  41f573:	in     al,0xb
  41f575:	xor    edi,ebx
  41f577:	out    0xe3,al
  41f579:	xor    eax,0x5a45a01d
  41f57e:	xor    eax,0xfc026d35
  41f583:	add    BYTE PTR [rbx-0x41],ah
  41f586:	stos   DWORD PTR es:[rdi],eax
  41f587:	xacquire xchg BYTE PTR [rsi],cl
  41f58a:	adc    bh,BYTE PTR [rsi+0x67]
  41f58d:	jp     0x41f527
  41f58f:	xor    eax,0x7b4736b5
  41f594:	int    0x7c
  41f596:	ins    BYTE PTR es:[edi],dx
  41f598:	not    BYTE PTR [rsi+0x36b4da99]
  41f59e:	(bad)  
  41f59f:	cmp    eax,0xe43270d8
  41f5a4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41f5a5:	imul   edx,DWORD PTR [rsi],0x753b3b07
  41f5ab:	fisub  WORD PTR [rbx+rax*8-0x1]
  41f5af:	ss out 0xb0,eax
  41f5b2:	(bad)  
  41f5b4:	xchg   ebp,eax
  41f5b5:	std    
  41f5b6:	out    0xa6,al
  41f5b8:	retf   0x7fb2
  41f5bb:	or     al,0xcd
  41f5bd:	(bad)  
  41f5be:	mov    dh,0x4f
  41f5c0:	(bad)  
  41f5c1:	out    dx,eax
  41f5c2:	fimul  WORD PTR [rbx-0x39]
  41f5c5:	scas   al,BYTE PTR es:[rdi]
  41f5c6:	mov    bl,0xc6
  41f5c8:	jl     0x41f5ab
  41f5ca:	outs   dx,DWORD PTR ds:[rsi]
  41f5cb:	retf   
  41f5cc:	lods   al,BYTE PTR ds:[rsi]
  41f5cd:	movabs al,ds:0x3526e2d9d23f4d16
  41f5d6:	retf   
  41f5d7:	cdq    
  41f5d8:	cdq    
  41f5d9:	fisttp QWORD PTR [rax+0x27]
  41f5dc:	fld    TBYTE PTR [rax+rbx*1-0x16]
  41f5e0:	adc    eax,0x7f1fed9f
  41f5e5:	(bad)  
  41f5e6:	(bad)  
  41f5e7:	jp     0x41f56e
  41f5e9:	outs   dx,DWORD PTR ds:[rsi]
  41f5ea:	(bad)  
  41f5eb:	dec    DWORD PTR [rsi]
  41f5ed:	mov    bl,0x4f
  41f5ef:	jmp    0x3ecf82d0
  41f5f4:	mov    ch,0x43
  41f5f6:	pop    rbx
  41f5f7:	in     al,dx
  41f5f8:	(bad)  
  41f5f9:	mov    ebp,0xeeeedec1
  41f5fe:	iret   
  41f5ff:	ret    
  41f600:	out    0x53,al
  41f602:	repz mov eax,0xdd7777e7
  41f608:	sbb    esi,esp
  41f60a:	call   0xffffffff99798325
  41f60f:	cdq    
  41f610:	sub    eax,0x7bff1f43
  41f615:	push   rsi
  41f616:	xchg   ebp,eax
  41f617:	cmc    
  41f618:	mul    bl
  41f61a:	pop    rdx
  41f61b:	rex.WX (bad) 
  41f61d:	jg     0x41f68e
  41f61f:	jg     0x41f618
  41f621:	pop    rbp
  41f622:	push   rsi
  41f623:	movsxd ecx,edi
  41f625:	mov    eax,0x656926b1
  41f62a:	imul   BYTE PTR [rbp-0x27]
  41f62d:	cmp    cl,dh
  41f62f:	(bad)  
  41f630:	(bad)  
  41f631:	xchg   DWORD PTR [rdx-0x319ccc4f],esi
  41f637:	pushf  
  41f638:	jns    0x41f614
  41f63a:	or     BYTE PTR [rsi-0x52cdb98c],dh
  41f640:	rex.WRX mov r13b,spl
  41f643:	xchg   ebx,eax
  41f644:	cmp    eax,0x67f4e6e5
  41f649:	jmp    0xffffffffcd6b1d32
  41f64e:	out    0xaf,al
  41f650:	and    cl,BYTE PTR [rbx-0x20]
  41f653:	ja     0x41f67d
  41f655:	lods   eax,DWORD PTR ds:[rsi]
  41f656:	es (bad) 
  41f658:	stc    
  41f659:	lods   eax,DWORD PTR ds:[rsi]
  41f65a:	cdq    
  41f65b:	lea    edx,[rdi]
  41f65d:	(bad)  
  41f65e:	sahf   
  41f65f:	bswap  esp
  41f661:	jg     0x41f6c1
  41f663:	cld    
  41f664:	mov    esp,0xccce5b73
  41f669:	in     al,0x3c
  41f66b:	std    
  41f66c:	jns    0x41f5f5
  41f66e:	xchg   esi,eax
  41f66f:	clc    
  41f670:	mov    edi,0x3fb8fed3
  41f675:	stc    
  41f676:	(bad)  
  41f677:	lock cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41f679:	cdq    
  41f67a:	iret   
  41f67b:	push   rsi
  41f67c:	outs   dx,BYTE PTR ds:[rsi]
  41f67d:	pushf  
  41f67e:	mov    ah,0x30
  41f680:	push   QWORD PTR [rdi]
  41f682:	(bad)  
  41f683:	xchg   edi,eax
  41f684:	movsxd r14d,DWORD PTR [r15]
  41f687:	mov    ebx,ecx
  41f689:	jae    0x41f618
  41f68b:	(bad)  
  41f68c:	pushf  
  41f68d:	int3   
  41f68e:	jno    0x41f6c5
  41f690:	addr32 xchg esp,eax
  41f692:	mov    dh,0x36
  41f694:	in     eax,dx
  41f695:	and    DWORD PTR [rdx],edi
  41f697:	jne    0x41f67f
  41f699:	cmp    BYTE PTR [rdx+0x6e4cd8e3],0xcc
  41f6a0:	clc    
  41f6a1:	int    0xe6
  41f6a3:	rex.WB
  41f6a4:	gs (bad) 
  41f6a6:	(bad)  
  41f6a7:	cmp    al,0xa5
  41f6a9:	sub    DWORD PTR [rcx-0x1c],0x3
  41f6ad:	leave  
  41f6ae:	sub    esi,DWORD PTR [rax*8+0x73cdcb1f]
  41f6b5:	gs xor eax,0x36f6aacd
  41f6bb:	rex.RX ja 0x41f71a
  41f6be:	jg     0x41f6d2
  41f6c0:	xor    ebx,DWORD PTR [rdi+0x25f1f30b]
  41f6c6:	mov    DWORD PTR [rdx],edi
  41f6c8:	pushf  
  41f6c9:	xor    al,0x6a
  41f6cb:	rcr    DWORD PTR [rcx+rdx*8+0x6655336b],0x7a
  41f6d3:	push   0xffffffffddecd163
  41f6d8:	(bad)  
  41f6d9:	out    dx,eax
  41f6da:	int3   
  41f6db:	sbb    dh,BYTE PTR [rdx-0x20090f84]
  41f6e1:	sub    al,0x6b
  41f6e3:	(bad)  
  41f6e4:	(bad)  
  41f6e5:	addr32 (bad) 
  41f6e7:	ins    DWORD PTR es:[rdi],dx
  41f6e8:	movabs ds:0x2cde7aad1f60bd83,al
  41f6f1:	std    
  41f6f2:	sar    DWORD PTR [rsi-0x5],0xe1
  41f6f6:	out    dx,eax
  41f6f7:	(bad)  
  41f6f8:	fdiv   QWORD PTR [rbx+rdi*1-0x28]
  41f6fc:	jl     0x41f6fb
  41f6fe:	mov    edi,0x846de1ff
  41f703:	cmp    edi,edx
  41f705:	ins    DWORD PTR es:[rdi],dx
  41f706:	pop    rsi
  41f707:	fcom   QWORD PTR [rsi+0x71c0cd1f]
  41f70d:	mov    cl,0xa5
  41f70f:	lods   eax,DWORD PTR ds:[rsi]
  41f710:	rex.WB
  41f711:	rex.WRB
  41f712:	rex.W xor al,0xcc
  41f715:	(bad)  
  41f716:	lea    edi,[rbp-0x677897cf]
  41f71c:	(bad)  
  41f71d:	(bad)  
  41f71e:	shl    ecx,cl
  41f720:	in     al,dx
  41f721:	ds mov ecx,0x1a336f49
  41f727:	out    dx,eax
  41f728:	ret    0x1d6c
  41f72b:	(bad)  
  41f72c:	add    DWORD PTR [rbx],esp
  41f72e:	leave  
  41f72f:	adc    BYTE PTR [eip+0xffffffffe5a75672],ch        # 0xffffffffe5e94da8
  41f736:	jb     0x41f7a4
  41f738:	(bad)  
  41f739:	sti    
  41f73a:	fist   WORD PTR [rsi-0x6cec3c9b]
  41f740:	ficom  WORD PTR [rsi+0x3d75b4f9]
  41f746:	fisub  WORD PTR [rsp+0x63]
  41f74a:	call   0xffffffff8c79b012
  41f74f:	mov    WORD PTR [rbx-0x18109d62],fs
  41f755:	or     eax,0x3a4640dd
  41f75a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  41f75b:	mov    bl,0xba
  41f75d:	rex.WR xchg rdx,rax
  41f75f:	jmp    0x41f6f3
  41f761:	ss cs and dh,BYTE PTR fs:[rsi-0x62]
  41f767:	pop    rcx
  41f768:	xchg   esp,eax
  41f769:	fwait
  41f76a:	xchg   esp,eax
  41f76b:	sbb    dh,BYTE PTR cs:[rbx-0x59]
  41f76f:	fsubr  DWORD PTR [rbp-0x70ef9aa7]
  41f775:	pop    rax
  41f776:	test   eax,0xbe7d674
  41f77b:	test   esi,ebx
  41f77d:	xchg   ecx,eax
  41f77e:	test   eax,0x7dff364a
  41f783:	mov    bl,0x9f
  41f785:	ins    BYTE PTR es:[rdi],dx
  41f786:	(bad)  
  41f787:	out    0x26,eax
  41f789:	rex.R sti 
  41f78b:	out    0x7f,al
  41f78d:	ins    BYTE PTR es:[rdi],dx
  41f78e:	mov    edx,0xd21a3675
  41f793:	ins    DWORD PTR es:[rdi],dx
  41f794:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  41f796:	mov    ebx,0xe4e48cc1
  41f79b:	cld    
  41f79c:	idiv   BYTE PTR [rcx-0xe]
  41f79f:	ja     0x41f75b
  41f7a1:	(bad)  
  41f7a2:	(bad)  
  41f7a3:	clc    
  41f7a4:	retf   
  41f7a5:	ds jmp 0xffffffff99f3c8d1
  41f7ab:	mov    bh,0x13
  41f7ad:	and    eax,DWORD PTR [rdi]
  41f7af:	rol    DWORD PTR [rip+0x3559ebdd],cl        # 0x359be392
  41f7b5:	xor    DWORD PTR [rbx],edi
  41f7b7:	sub    bh,BYTE PTR [rbp+0x5cc87b36]
  41f7bd:	(bad)  
  41f7be:	ficomp DWORD PTR [rsi*4-0x4f0f50b1]
  41f7c5:	mov    esp,cs
  41f7c7:	rex.WX mov sil,BYTE PTR [rsi+r13*2+0x36]
  41f7cc:	jmp    0x2f6aecfa
  41f7d1:	ret    0xfcc5
  41f7d4:	icebp  
  41f7d5:	sub    bh,bl
  41f7d7:	jl     0x41f7d0
  41f7d9:	loopne 0x41f7bb
  41f7db:	leave  
  41f7dc:	(bad)  
  41f7dd:	neg    DWORD PTR [rdi-0x1132329b]
  41f7e3:	iret   
  41f7e4:	cmp    esi,esi
  41f7e6:	xchg   ecx,eax
  41f7e7:	xchg   ebx,eax
  41f7e8:	sub    ecx,DWORD PTR [rbx+rdi*4+0x6e]
  41f7ec:	(bad)  
  41f7ed:	in     eax,dx
  41f7ee:	test   BYTE PTR [rcx+0x36e0ad78],bh
  41f7f4:	out    dx,eax
  41f7f5:	fwait
  41f7f6:	mov    edi,0xa7f95767
  41f7fb:	mov    esi,0xc7c30aa
  41f800:	push   rdx
  41f801:	mov    bl,0xd5
  41f803:	int3   
  41f804:	cli    
  41f805:	shr    DWORD PTR [rcx-0x6851192b],1
  41f80b:	pop    rcx
  41f80c:	ins    DWORD PTR es:[rdi],dx
  41f80d:	data16 repnz out dx,al
  41f810:	es ins DWORD PTR es:[rdi],dx
  41f812:	adc    bl,bl
  41f814:	add    BYTE PTR [rdi-0x4140c314],ch
  41f81a:	imul   edx,DWORD PTR [rdx-0x1b6b45],0xd04dc349
  41f824:	(bad)
  41f827:	(bad)  
  41f828:	push   rbp
  41f829:	push   0xffffffffffffffc4
  41f82b:	(bad)  
  41f82c:	lods   eax,DWORD PTR ds:[rsi]
  41f82d:	and    DWORD PTR [rsi-0x27],ebp
  41f830:	mov    cl,0xbb
  41f832:	hlt    
  41f833:	sbb    esi,DWORD PTR [rbx-0x63be8633]
  41f839:	xchg   BYTE PTR [rbx],dh
  41f83b:	rex.WRX imul r15,QWORD PTR [rdx],0x48
  41f83f:	test   DWORD PTR [rcx],edi
  41f841:	scas   eax,DWORD PTR es:[rdi]
  41f842:	lea    edi,[rcx-0x500b684a]
  41f848:	sbb    esi,DWORD PTR [rbx+0x31]
  41f84b:	movsxd ecx,DWORD PTR [rsi]
  41f84d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41f84e:	movabs ds:0xd8dad272d0debbb8,eax
  41f857:	sti    
  41f858:	(bad)  
  41f859:	sub    al,0x52
  41f85b:	pop    rdi
  41f85c:	xchg   esi,eax
  41f85d:	fnstcw WORD PTR [rsi+0x67039b51]
  41f863:	test   BYTE PTR [rbp-0x6dc2e623],al
  41f869:	jnp    0x41f8a8
  41f86b:	(bad)  
  41f86c:	(bad)  
  41f86d:	cli    
  41f86e:	cwde   
  41f86f:	(bad)  
  41f870:	je     0x41f8e9
  41f872:	repz or eax,0xdef3a6d
  41f878:	(bad)  
  41f879:	rex.WR pop rdx
  41f87b:	cli    
  41f87c:	xchg   ecx,eax
  41f87d:	mov    ah,0x84
  41f87f:	mov    gs,WORD PTR [rsi]
  41f881:	(bad)  
  41f882:	xlat   BYTE PTR ds:[rbx]
  41f883:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41f884:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  41f885:	fldenv [rsi+riz*4-0x49]
  41f889:	rex.RX
  41f88a:	ds ror al,cl
  41f88d:	rex.W (bad) 
  41f88f:	(bad)  
  41f890:	push   rsi
  41f891:	mov    al,0xc9
  41f893:	rex.WRB
  41f894:	fwait
  41f895:	hlt    
  41f896:	ret    
  41f897:	mov    esp,0xc50fb121
  41f89c:	shl    ah,cl
  41f89e:	xlat   BYTE PTR ds:[rbx]
  41f89f:	rex.WR or r14b,BYTE PTR [rbx+rax*2+0x23]
  41f8a4:	cmp    edi,DWORD PTR [rbp+0x32c6e3f1]
  41f8aa:	iret   
  41f8ab:	es mov bh,0x46
  41f8ae:	jno    0x41f8e0
  41f8b0:	cmp    ah,BYTE PTR [rdx+0x66]
  41f8b3:	ffreep st(2)
  41f8b5:	adc    eax,0x6575213b
  41f8ba:	data16 (bad) 
  41f8bc:	retf   
  41f8bd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41f8be:	lods   al,BYTE PTR ds:[rsi]
  41f8bf:	sub    dl,BYTE PTR [rdx-0x3e]
  41f8c2:	imul   eax,DWORD PTR [rip+0xffffffffe6d72cc7],0xfdd9b999        # 0xffffffffe7192593
  41f8cc:	jmp    0x31d0e29d
  41f8d1:	(bad)
  41f8d5:	nop
  41f8d6:	and    dh,ah
  41f8d8:	rex.WX xchg QWORD PTR [rax],rbx
  41f8db:	mov    al,0xd1
  41f8de:	cmp    ebp,DWORD PTR [rdx+0x7b]
  41f8e1:	xor    cl,cl
  41f8e3:	(bad)  
  41f8e4:	rex.WRB sbb rax,0xffffffffb82e931b
  41f8ea:	jmp    0xffffffffcd138e3d
  41f8ef:	sti    
  41f8f0:	jp     0x41f902
  41f8f2:	out    0xd5,al
  41f8f4:	faddp  st(3),st
  41f8f6:	push   rax
  41f8f7:	test   DWORD PTR [rbp+rsi*4+0x30],edx
  41f8fb:	stos   BYTE PTR es:[rdi],al
  41f8fc:	push   rcx
  41f8fd:	ins    DWORD PTR es:[rdi],dx
  41f8fe:	lods   eax,DWORD PTR ds:[esi]
  41f900:	rcr    esi,0x30
  41f903:	(bad)  
  41f904:	or     al,0x73
  41f906:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  41f908:	mov    ss,edx
  41f90a:	ret    
  41f90b:	xor    eax,0x4b88549f
  41f910:	pop    rdx
  41f911:	rex.W push rsi
  41f913:	jle    0x41f90e
  41f915:	mov    ebx,0xf9989b74
  41f91a:	mov    ah,0x8d
  41f91c:	fwait
  41f91d:	scas   eax,DWORD PTR es:[rdi]
  41f91e:	fidiv  DWORD PTR [rip+0xffffffffc6d7cfa5]        # 0xffffffffc719c8c9
  41f924:	ins    BYTE PTR es:[rdi],dx
  41f925:	xor    BYTE PTR [rdi+0x31beb4eb],dl
  41f92b:	cli    
  41f92c:	push   rax
  41f92d:	sub    eax,0x9b9f3b27
  41f932:	cmp    eax,0xbbeb4b73
  41f937:	enter  0xe9b2,0x30
  41f93b:	cmp    DWORD PTR [rbx-0x66a556de],edi
  41f941:	rex.WRX (bad) 
  41f943:	clc    
  41f944:	xor    eax,0x6f337a09
  41f949:	push   rbx
  41f94a:	call   0x71aaf024
  41f94f:	push   rdi
  41f950:	cmp    al,0x89
  41f952:	cmp    r9,r13
  41f955:	rex.WR jbe 0x41f99a
  41f958:	push   rdx
  41f959:	outs   dx,BYTE PTR ds:[rsi]
  41f95a:	(bad)  
  41f95b:	mov    esi,0x8d0e7015
  41f960:	hlt    
  41f961:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41f962:	out    dx,al
  41f963:	lea    esi,[rbx-0x638ec4fc]
  41f969:	xor    eax,0x9b665977
  41f96e:	stos   DWORD PTR es:[rdi],eax
  41f96f:	xor    esi,DWORD PTR [rbx+0x13]
  41f972:	shl    DWORD PTR [rdx+0x610632b1],1
  41f978:	rex.W push rbx
  41f97a:	jnp    0x41f9fa
  41f97c:	jno    0x41f974
  41f97e:	cmc    
  41f97f:	vpunpckhbw xmm2,xmm1,XMMWORD PTR [rsp+rdi*4-0x41c341c3]
  41f988:	push   0x565174cd
  41f98d:	jae    0x41f93b
  41f98f:	call   0xffffffffb359a8c8
  41f994:	hlt    
  41f995:	sahf   
  41f996:	xchg   esi,eax
  41f997:	fimul  DWORD PTR [rsp+riz*8+0x3593a2ba]
  41f99e:	iret   
  41f99f:	call   0x217091fa
  41f9a4:	leave  
  41f9a5:	xchg   edx,eax
  41f9a6:	ror    al,cl
  41f9a8:	xchg   DWORD PTR [rsp+rdx*4+0x50],edx
  41f9ac:	adc    ah,BYTE PTR [rsi]
  41f9ae:	rcr    BYTE PTR [rbx+rcx*4+0x6b],1
  41f9b2:	(bad)  
  41f9b3:	rol    DWORD PTR [rsi-0x1e],cl
  41f9b6:	enter  0x46e5,0xb7
  41f9ba:	fwait
  41f9bb:	pop    rbp
  41f9bc:	psrld  mm0,QWORD PTR [rsi]
  41f9bf:	(bad)  
  41f9c0:	outs   dx,DWORD PTR ds:[rsi]
  41f9c1:	hlt    
  41f9c2:	(bad)  
  41f9c4:	js     0x41f960
  41f9c6:	push   0xffffffffffffff8c
  41f9c8:	leave  
  41f9c9:	in     al,dx
  41f9ca:	fnstcw WORD PTR [rsi+rcx*1+0x61]
  41f9ce:	addr32 (bad) 
  41f9d0:	je     0x41f9dc
  41f9d2:	(bad)  
  41f9d3:	jbe    0x41fa3a
  41f9d5:	mov    ah,0x5f
  41f9d7:	jae    0x41f9ba
  41f9d9:	mov    cl,0xf2
  41f9db:	fsubp  st(5),st
  41f9dd:	xchg   ebx,eax
  41f9de:	not    dh
  41f9e0:	stos   BYTE PTR es:[rdi],al
  41f9e1:	lods   al,BYTE PTR ds:[rsi]
  41f9e2:	sbb    dx,WORD PTR [rdx-0x46f95998]
  41f9e9:	sub    edi,esp
  41f9eb:	add    eax,0x9a8cc42b
  41f9f0:	mov    dl,0x4f
  41f9f3:	(bad)  
  41f9f4:	pop    rbx
  41f9f5:	push   rax
  41f9f6:	(bad)  
  41f9f7:	xor    dh,BYTE PTR [rbx-0x4191ac4e]
  41f9fd:	pop    rsi
  41f9fe:	pop    rsi
  41f9ff:	loope  0x41fa21
  41fa01:	(bad)  
  41fa02:	pop    rbx
  41fa03:	rex.RX pop rcx
  41fa05:	jle    0x41fa72
  41fa07:	or     al,0x18
  41fa09:	movsxd eax,DWORD PTR [rsp+rsi*8-0x6d]
  41fa0d:	rep ins DWORD PTR es:[rdi],dx
  41fa0f:	mov    esp,0xffbbb7b7
  41fa14:	xchg   esp,eax
  41fa15:	add    eax,0x7b9b50c1
  41fa1a:	jrcxz  0x41fa25
  41fa1c:	loop   0x41f9db
  41fa1e:	(bad)  
  41fa1f:	mov    ah,0xbc
  41fa21:	cld    
  41fa22:	adc    BYTE PTR [rip+0xffffffffdef64c3e],dh        # 0xffffffffdf384666
  41fa28:	repnz rex.WRXB sahf 
  41fa2b:	jle    0x41fa2b
  41fa2d:	in     al,dx
  41fa2e:	mov    bl,0xe7
  41fa30:	bnd ret 
  41fa32:	test   BYTE PTR [rsi],0xb7
  41fa35:	std    
  41fa36:	(bad)  
  41fa37:	out    dx,al
  41fa38:	xor    BYTE PTR [rcx],0x46
  41fa3b:	(bad)  
  41fa3c:	cdq    
  41fa3d:	jmp    0x3d1f13cb
  41fa42:	(bad)  
  41fa43:	int3   
  41fa44:	xor    DWORD PTR [rcx],esi
  41fa46:	(bad)  
  41fa47:	rex.WX
  41fa48:	fs adc eax,0xf9d367ed
  41fa4e:	sub    edx,DWORD PTR [rsi+0x6daeb26c]
  41fa54:	sub    ecx,edi
  41fa56:	mov    esp,0x91acb66c
  41fa5b:	in     eax,0x76
  41fa5d:	xchg   ecx,eax
  41fa5e:	xor    BYTE PTR [rbx],dl
  41fa60:	out    0x80,al
  41fa62:	shr    DWORD PTR [rbp+0x4b012633],1
  41fa68:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41fa69:	mov    ss,ecx
  41fa6b:	rex.WB mov r11b,0xe8
  41fa6e:	xlat   BYTE PTR ds:[rbx]
  41fa6f:	in     al,dx
  41fa70:	lods   eax,DWORD PTR ds:[rsi]
  41fa71:	push   0x337d30de
  41fa76:	ja     0x41fa9a
  41fa78:	pop    rbp
  41fa79:	jae    0x41fa5c
  41fa7b:	mov    esp,0x900511b
  41fa80:	jns    0x41fa19
  41fa82:	xlat   BYTE PTR ds:[rbx]
  41fa83:	adc    BYTE PTR [rip+0x6672e577],cl        # 0x66b4e000
  41fa89:	or     al,0xb
  41fa8b:	jp     0x41faed
  41fa8d:	mov    ecx,0x53e60bc0
  41fa92:	or     esp,DWORD PTR [rdi]
  41fa94:	add    esp,esi
  41fa96:	stc    
  41fa97:	(bad)  
  41fa98:	fidivr DWORD PTR [rbx]
  41fa9a:	fst    QWORD PTR [rsi+0x4c]
  41fa9d:	xlat   BYTE PTR ds:[rbx]
  41fa9e:	int3   
  41fa9f:	(bad)  
  41faa0:	(bad)  
  41faa1:	sub    si,WORD PTR [rcx+0x77]
  41faa5:	xchg   ch,bl
  41faa7:	sbb    eax,DWORD PTR [rdx]
  41faa9:	mov    dl,0x2f
  41faab:	fmul   DWORD PTR [rcx-0x4bde198c]
  41fab1:	iret   
  41fab2:	iret   
  41fab3:	rex.RX xchg edi,eax
  41fab5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41fab6:	add    DWORD PTR [rdi+rdi*4+0x190d34bf],ebx
  41fabd:	adc    eax,0xa6cc6ea0
  41fac2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41fac3:	(bad)  
  41fac4:	mov    ecx,DWORD PTR [rsi+rdx*2]
  41fac7:	popf   
  41fac8:	neg    BYTE PTR ss:[esi+0xe]
  41facd:	rex.B add eax,0xc93f46b5
  41fad3:	jge    0x41fb39
  41fad5:	mov    bl,0x97
  41fad7:	mov    fs,WORD PTR [rax-0x788342e6]
  41fadd:	mov    ebx,0x2fad9297
  41fae2:	mov    dh,0xcd
  41fae4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41fae5:	sbb    eax,0xa47ee6d8
  41faea:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  41faeb:	movabs eax,ds:0x729ea59f3cf9d47b
  41faf4:	and    eax,0xa74e94f2
  41faf9:	xchg   ebp,eax
  41fafa:	sub    dl,BYTE PTR [rbx]
  41fafc:	mov    bl,0x67
  41fafe:	shr    BYTE PTR [rcx+0x67],1
  41fb01:	fcmovnbe st,st(1)
  41fb03:	or     al,0x42
  41fb05:	es mov ecx,0x3a929a85
  41fb0b:	add    BYTE PTR [rip+0xffffffff89db9176],dl        # 0xffffffff8a1d8c87
  41fb11:	movabs ds:0xaaeea69ad5612315,eax
  41fb1a:	add    eax,0x11f746d3
  41fb1f:	pushf  
  41fb20:	(bad)  
  41fb21:	jbe    0x41fb05
  41fb23:	xchg   edx,eax
  41fb24:	fidivr WORD PTR [rax]
  41fb26:	lods   eax,DWORD PTR ds:[rsi]
  41fb27:	jp     0x41fab2
  41fb29:	xchg   ebp,eax
  41fb2a:	(bad)  
  41fb2b:	jl     0x41fb5f
  41fb2d:	jmp    0xfffffffff61b4fae
  41fb32:	ror    BYTE PTR [rax+riz*1+0x61a5b9e1],cl
  41fb39:	inc    cl
  41fb3b:	out    dx,al
  41fb3c:	(bad)  
  41fb3d:	rol    DWORD PTR [rax+0x1b],0x18
  41fb41:	cwde   
  41fb42:	xlat   BYTE PTR ds:[rbx]
  41fb43:	imul   ebx,DWORD PTR [rax+rsi*1-0x5],0x611d8cae
  41fb4b:	rex.WRX int3 
  41fb4d:	mov    dh,0x19
  41fb50:	sbb    al,0xd
  41fb52:	(bad)  
  41fb53:	sub    esi,DWORD PTR [rcx-0x3a]
  41fb56:	dec    BYTE PTR [rax+0x36372f84]
  41fb5c:	jo     0x41fb70
  41fb5e:	jbe    0x41fb81
  41fb60:	sbb    BYTE PTR [rbp-0x3213310e],al
  41fb66:	(bad)  
  41fb67:	rex.WR lods rax,QWORD PTR ds:[rsi]
  41fb69:	cmp    DWORD PTR [rax],ebx
  41fb6b:	outs   dx,DWORD PTR ds:[rsi]
  41fb6c:	imul   ecx,DWORD PTR [rax-0x14],0x89c44856
  41fb73:	xor    ebp,0x466dd333
  41fb79:	imul   ecx,edi,0xffffffea
  41fb7c:	je     0x41fb18
  41fb7e:	shr    edi,cl
  41fb80:	int3   
  41fb81:	and    DWORD PTR [rax],esi
  41fb83:	xlat   BYTE PTR ds:[rbx]
  41fb84:	shl    BYTE PTR [rdx],1
  41fb86:	or     esi,0x2e
  41fb89:	movsxd ebx,DWORD PTR [rdi-0x231cce45]
  41fb8f:	ficomp WORD PTR [rax]
  41fb91:	popf   
  41fb92:	(bad)  
  41fb93:	jmp    0xffffffffd05eb449
  41fb98:	addr32 jp 0x41fbcf
  41fb9b:	loope  0x41fb90
  41fb9d:	(bad)  
  41fb9e:	rex.RXB cli 
  41fba0:	leave  
  41fba1:	(bad)  
  41fba2:	sub    dl,BYTE PTR [rdi-0x4f]
  41fba5:	pushf  
  41fba6:	pop    rdx
  41fba7:	xor    ebx,esi
  41fba9:	jns    0x41fc25
  41fbab:	out    dx,eax
  41fbac:	sub    edx,edi
  41fbae:	adc    BYTE PTR [rax+0x595979e8],ch
  41fbb4:	lods   eax,DWORD PTR ds:[rsi]
  41fbb5:	(bad)  
  41fbb6:	fdivr  QWORD PTR [rbx+0xb]
  41fbb9:	sar    BYTE PTR [rax+0x44],cl
  41fbbc:	shl    dl,1
  41fbbe:	mov    dl,0xb9
  41fbc1:	stos   BYTE PTR es:[rdi],al
  41fbc2:	mov    ecx,0xd2a37d6b
  41fbc7:	rcl    DWORD PTR [rbx-0x5705c829],1
  41fbcd:	ja     0x41fbca
  41fbcf:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  41fbd0:	data16 ins BYTE PTR es:[rdi],dx
  41fbd2:	and    al,0xc1
  41fbd4:	leave  
  41fbd5:	(bad)  
  41fbd6:	popf   
  41fbd7:	stos   BYTE PTR es:[rdi],al
  41fbd8:	jo     0x41fc08
  41fbda:	sub    edx,DWORD PTR [rsi+0x6cd2b338]
  41fbe0:	mov    eax,0x5e95eb1e
  41fbe5:	(bad)  
  41fbe6:	test   eax,0x6ffe6a7
  41fbeb:	in     al,dx
  41fbec:	lahf   
  41fbed:	sub    DWORD PTR [rbp+0x2dbb6db2],ebp
  41fbf3:	rcl    DWORD PTR [rbp+0x3f],cl
  41fbf6:	fdiv   DWORD PTR [rip+0x4c235137]        # 0x4c654d33
  41fbfc:	xchg   edx,eax
  41fbfd:	mov    ecx,0x6eda6adf
  41fc02:	cmp    ch,bh
  41fc04:	fadd   DWORD PTR [rbp+0x6cda3ee6]
  41fc0a:	clc    
  41fc0b:	rol    al,1
  41fc0d:	ss jmp 0x734f78df
  41fc13:	rex.B outs dx,BYTE PTR ds:[rsi]
  41fc15:	sbb    edi,DWORD PTR [rbx]
  41fc17:	xor    dh,BYTE PTR [rbx]
  41fc19:	movabs ds:0x657435b9b6046e69,al
  41fc22:	pushf  
  41fc23:	sbb    DWORD PTR [rip+0x3ef54d1],edx        # 0x43150fa
  41fc29:	mov    ebx,0xfe017c83
  41fc2e:	mov    ebp,0x9c1a7da1
  41fc33:	cdq    
  41fc34:	mov    cl,0x9f
  41fc36:	(bad)  
  41fc37:	sbb    al,0x83
  41fc39:	fild   DWORD PTR [rsi+rcx*2-0x16122e77]
  41fc40:	enter  0xce0c,0x4e
  41fc44:	outs   dx,DWORD PTR ds:[rsi]
  41fc45:	mov    ebp,0x6f164edd
  41fc4a:	rex.B retf 0x1f44
  41fc4e:	pop    rsi
  41fc4f:	test   DWORD PTR [rcx+0x59],esi
  41fc52:	sbb    dh,bl
  41fc54:	ror    BYTE PTR [rip+0x5676848d],cl        # 0x56b880e7
  41fc5a:	nop
  41fc5b:	adc    BYTE PTR [rbx-0x7f3e2eb],dl
  41fc61:	push   rdi
  41fc62:	push   0x34d8def9
  41fc67:	jmp    0xfffffffffe1d96e1
  41fc6c:	es add cl,bh
  41fc6f:	ds pop rbx
  41fc71:	xchg   esp,eax
  41fc72:	repnz cmp BYTE PTR [rbp+0x2229a914],ch
  41fc79:	pop    rbx
  41fc7a:	xchg   esi,eax
  41fc7b:	mov    eax,0x971a33cd
  41fc80:	adc    DWORD PTR [rsi],ecx
  41fc82:	cmp    cl,ah
  41fc84:	shr    BYTE PTR [rsp+rsi*2],cl
  41fc87:	cmp    ebp,DWORD PTR [rbp+0x6e]
  41fc8a:	or     al,0x6d
  41fc8c:	xchg   esi,eax
  41fc8d:	adc    al,0x43
  41fc8f:	rex.W
  41fc90:	rex.W test al,0x79
  41fc93:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41fc94:	leave  
  41fc95:	fidiv  WORD PTR [rax]
  41fc97:	stc    
  41fc98:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41fc99:	mov    esp,0x8363e0cb
  41fc9e:	adc    bl,BYTE PTR [rsi-0x1737686d]
  41fca4:	imul   esi,DWORD PTR [rdi+0x59],0x32
  41fca8:	(bad)  
  41fca9:	cli    
  41fcaa:	movabs eax,ds:0xa7e999f808a84d99
  41fcb3:	xor    ebp,DWORD PTR [rdx+rcx*8]
  41fcb6:	cmp    edi,DWORD PTR [rsi+rdx*8+0xe]
  41fcba:	ret    0xe4ae
  41fcbd:	adc    eax,0xb64889f
  41fcc2:	sub    cl,al
  41fcc4:	test   BYTE PTR [rsi],ah
  41fcc6:	imul   edx,ecx,0xffffffb8
  41fcc9:	push   rcx
  41fcca:	fdivr  st,st(1)
  41fccc:	xor    dl,ah
  41fcce:	mov    ah,0xf6
  41fcd0:	(bad)  
  41fcd1:	(bad)  
  41fcd2:	ffree  st(7)
  41fcd4:	je     0x41fceb
  41fcd6:	jle    0x41fd0e
  41fcd8:	fdivr  QWORD PTR [rbx+0x31]
  41fcdb:	fcomp  QWORD PTR [rip+0xffffffffdd90c192]        # 0xffffffffddd2be73
  41fce1:	out    0xe5,al
  41fce3:	mov    dl,0x36
  41fce5:	pop    rdi
  41fce6:	rex.RXB push r15
  41fce8:	adc    ch,bh
  41fcea:	int    0x8c
  41fcec:	cs (bad) 
  41fcee:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41fcef:	mov    esp,0x7ab19ebe
  41fcf4:	mov    dl,0x53
  41fcf6:	pop    rsi
  41fcf7:	pop    rbp
  41fcf8:	jns    0x41fd14
  41fcfa:	rex.WR xchg rbp,rax
  41fcfc:	sub    eax,0xc9a150d8
  41fd01:	xchg   ecx,eax
  41fd02:	rex.XB (bad) 
  41fd04:	mov    dl,0xcf
  41fd06:	push   rdi
  41fd07:	pop    rbp
  41fd08:	cmp    bl,BYTE PTR fs:[rbp-0x67e7c027]
  41fd0f:	in     eax,dx
  41fd10:	rex.RX scas al,BYTE PTR es:[rdi]
  41fd12:	mov    al,0x8e
  41fd14:	jmp    0x41fd8a
  41fd16:	mov    eax,esp
  41fd18:	sti    
  41fd19:	jbe    0x41fd8d
  41fd1b:	imul   esp,esp,0x9b57cd70
  41fd21:	fstp   DWORD PTR [rdi+rdx*2-0x7]
  41fd25:	cmc    
  41fd26:	mov    dl,0xca
  41fd28:	pop    rax
  41fd29:	and    al,0xc2
  41fd2b:	jnp    0x41fcd3
  41fd2d:	rex.WRX xor r10,QWORD PTR [rdx]
  41fd30:	pop    rbp
  41fd31:	(bad)  
  41fd32:	and    eax,0xdb664d7c
  41fd37:	addr32 mov bl,0xab
  41fd3a:	jle    0x41fce3
  41fd3c:	cmp    DWORD PTR [rax+0x3],ebp
  41fd3f:	(bad)  
  41fd40:	xor    esi,esp
  41fd42:	or     eax,DWORD PTR [rbx+0x33]
  41fd45:	mov    bh,0x3e
  41fd47:	sbb    ch,BYTE PTR [rbx]
  41fd49:	xor    bh,BYTE PTR [rcx-0x5b3919ed]
  41fd4f:	rex.WXB enter 0x92d9,0x4c
  41fd54:	imul   di,WORD PTR [rsi],0xaa87
  41fd59:	sub    al,0xce
  41fd5b:	test   BYTE PTR [rcx-0x59],ah
  41fd5e:	mov    ecx,0xa0e5514b
  41fd63:	(bad)
  41fd66:	xchg   ebx,eax
  41fd67:	lods   al,BYTE PTR ds:[rsi]
  41fd68:	push   0x3a
  41fd6a:	rex.XB je 0x41fde4
  41fd6d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41fd6e:	jp     0x41fd81
  41fd70:	mov    cl,0x9e
  41fd72:	jbe    0x41fd07
  41fd74:	rex.WRB
  41fd75:	ror    BYTE PTR ds:[rdi-0x2f988403],cl
  41fd7c:	imul   ecx,DWORD PTR [rsi+0x575068bc],0x334b53cd
  41fd86:	xlat   BYTE PTR ds:[rbx]
  41fd87:	mov    esi,DWORD PTR [rdx+0x46b273ae]
  41fd8d:	movabs r11,0xc9f6799174a04e5a
  41fd97:	push   0x35a4e64d
  41fd9c:	lock push rsp
  41fd9e:	push   rsi
  41fd9f:	rex.RX rcr DWORD PTR [rdx+0x5f2a9a0e],0xac
  41fda7:	(bad)  
  41fda8:	sbb    eax,0xc4b6b24b
  41fdad:	scas   eax,DWORD PTR es:[rdi]
  41fdae:	add    DWORD PTR [r14-0x19253692],r8d
  41fdb5:	and    al,0xe9
  41fdb7:	int3   
  41fdb8:	cmps   WORD PTR ds:[rsi],WORD PTR es:[rdi]
  41fdba:	cmp    DWORD PTR [rsi+0x57993edb],ebx
  41fdc0:	mov    ecx,0x29dedc39
  41fdc5:	ss (bad) 
  41fdc7:	xchg   ah,ch
  41fdc9:	xor    DWORD PTR [rbx-0x77ec1aec],esp
  41fdcf:	stos   DWORD PTR es:[rdi],eax
  41fdd0:	cld    
  41fdd1:	cmp    ah,BYTE PTR [rbx]
  41fdd3:	outs   dx,DWORD PTR ds:[rsi]
  41fdd4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  41fdd5:	fnstenv [rsi-0x33]
  41fdd8:	int3   
  41fdd9:	or     BYTE PTR [rcx],dh
  41fddb:	outs   dx,DWORD PTR ds:[rsi]
  41fddc:	(bad)  
  41fddd:	ficom  DWORD PTR [rip+0xffffffffb2ebb22f]        # 0xffffffffb32db012
  41fde3:	and    DWORD PTR [rcx-0x31723cf],edi
  41fde9:	out    dx,al
  41fdea:	cmp    eax,0x27bb5f6e
  41fdef:	hlt    
  41fdf0:	(bad)  
  41fdf1:	cmc    
  41fdf2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  41fdf3:	addr32 (bad) 
  41fdf5:	(bad)  
  41fdf6:	pushf  
  41fdf7:	stc    
  41fdf8:	xor    al,0xdf
  41fdfa:	movabs ds:0xabba2f34cdd7c0a2,eax
  41fe03:	outs   dx,BYTE PTR ds:[rsi]
  41fe04:	pop    rdx
  41fe05:	fwait
  41fe06:	fs push rax
  41fe08:	gs and bl,ah
  41fe0b:	cmc    
  41fe0c:	(bad)  
  41fe0d:	rcr    DWORD PTR [rbx],1
  41fe0f:	je     0x41fe5d
  41fe11:	(bad)  
  41fe12:	ds cdq 
  41fe14:	push   rsi
  41fe15:	ja     0x41fe10
  41fe17:	and    al,0x53
  41fe19:	jmp    0x41fe71
  41fe1b:	mov    esp,0xc1733330
  41fe20:	xor    eax,0xd65889dd
  41fe25:	sar    BYTE PTR [rax+0x31b04649],1
  41fe2b:	jb     0x41fdc4
  41fe2d:	xchg   ebx,eax
  41fe2e:	fidivr WORD PTR [rax-0x3e]
  41fe31:	mov    ebx,0x1cd3c21d
  41fe36:	push   rdx
  41fe37:	push   rdx
  41fe38:	test   dl,dl
  41fe3a:	sub    al,BYTE PTR [rdi-0x6c659a1b]
  41fe40:	jle    0x41febc
  41fe42:	or     dh,BYTE PTR [rdx-0x20510316]
  41fe48:	js     0x41fea9
  41fe4a:	hlt    
  41fe4b:	add    ah,BYTE PTR [rdi-0x46f73ff1]
  41fe51:	rex.WX
  41fe52:	repz pop rcx
  41fe54:	fs sahf 
  41fe56:	movabs al,ds:0xd64ab26e66b18dc
  41fe5f:	xchg   esi,eax
  41fe60:	xor    al,0xe9
  41fe62:	in     al,0x59
  41fe64:	(bad)  
  41fe65:	sahf   
  41fe66:	(bad)  
  41fe67:	sbb    DWORD PTR gs:[rbx],edi
  41fe6a:	sbb    al,0x70
  41fe6c:	fwait
  41fe6d:	jg     0x41fe29
  41fe6f:	mov    bh,0xd3
  41fe71:	or     esi,ecx
  41fe73:	retf   0x276b
  41fe76:	jg     0x41fe5f
  41fe78:	in     eax,0x73
  41fe7a:	sub    eax,0x356a520c
  41fe7f:	pop    rbp
  41fe80:	nop
  41fe81:	or     esi,DWORD PTR [rbp-0x68b6bd85]
  41fe87:	and    DWORD PTR [rdi],ebp
  41fe89:	cld    
  41fe8a:	mov    dh,0x3a
  41fe8c:	fs vaddpd ymm13,ymm5,ymm7
  41fe92:	xor    eax,0x8b391b44
  41fe97:	in     eax,0x8
  41fe99:	jae    0x41fed6
  41fe9b:	jb     0x41fe1e
  41fe9d:	ja     0x41fe39
  41fe9f:	xor    ecx,DWORD PTR [rdx]
  41fea1:	add    edi,ecx
  41fea3:	cwde   
  41fea4:	(bad)  
  41fea5:	shl    BYTE PTR [rbp-0x59ce538a],0x2a
  41feac:	jmp    0x41fef1
  41feae:	and    eax,0xb7cd0a07
  41feb3:	push   0x2e
  41feb5:	cmp    BYTE PTR [rbx+0x1cd3a978],dh
  41febb:	jmp    0xffffffff99e57312
  41fec0:	rex.XB xchg r11d,eax
  41fec2:	sar    DWORD PTR [rsi-0x3c],cl
  41fec5:	es push rax
  41fec7:	(bad)  
  41fec8:	(bad)  
  41fec9:	fnstcw WORD PTR [rsi-0x6de6aa14]
  41fecf:	sub    edx,DWORD PTR [rcx-0x77e23f66]
  41fed5:	out    dx,al
  41fed6:	pop    rsi
  41fed7:	int    0xd2
  41fed9:	imul   esi,DWORD PTR [rbx-0x1a32c511],0xffffffd7
  41fee0:	(bad)  
  41fee1:	ds (bad) 
  41fee3:	addr32 jbe 0x41ff43
  41fee6:	sbb    ah,BYTE PTR [rcx+0x5b16e346]
  41feec:	rcr    DWORD PTR [rax-0x326499f6],1
  41fef2:	xchg   esi,eax
  41fef3:	jo     0x41ff5f
  41fef5:	sahf   
  41fef6:	cdq    
  41fef7:	add    DWORD PTR [rsi+0x7b6cdf46],ecx
  41fefd:	xor    ecx,eax
  41feff:	repz sti 
  41ff01:	sbb    cl,dh
  41ff03:	(bad)  
  41ff04:	stc    
  41ff05:	add    al,0xb5
  41ff07:	ss stc 
  41ff09:	or     ch,BYTE PTR [rbx-0x2e]
  41ff0c:	xchg   ebp,eax
  41ff0d:	jb     0x41feb1
  41ff0f:	rex.WRXB test QWORD PTR [r11-0x11beec59],r10
  41ff16:	test   DWORD PTR [rcx+0x480008],esp
  41ff1c:	rex.WR xchg rbx,rax
  41ff1e:	jp     0x41ff5a
  41ff20:	js     0x41fea9
  41ff22:	xchg   ebx,eax
  41ff23:	add    eax,0xf987d7ca
  41ff28:	(bad)  [rdx-0x282e6da2]
  41ff2e:	imul   ebp,DWORD PTR [rsi+0x61],0x14635904
  41ff35:	jg     0x41ff5a
  41ff37:	xchg   ecx,eax
  41ff38:	xchg   esi,eax
  41ff39:	add    eax,0xbd6f69fd
  41ff3e:	sbb    al,0x97
  41ff40:	cmp    al,0x2d
  41ff42:	rex.WB
  41ff43:	rex.RB mov fs,WORD PTR [rip+0xffffffff8ded2fd2]        # 0xffffffff8e2f2f1c
  41ff4a:	(bad)  
  41ff4b:	mov    r14d,DWORD PTR [rsp+rbx*8-0x2167a5a3]
  41ff53:	in     al,0xf8
  41ff55:	xchg   al,bl
  41ff57:	cdq    
  41ff58:	out    0x14,al
  41ff5a:	xor    al,0xa1
  41ff5c:	xor    DWORD PTR [rdi-0x2a9075be],0x4b
  41ff63:	and    esp,DWORD PTR [rdi-0x18]
  41ff66:	mov    dl,0x67
  41ff68:	and    DWORD PTR [rdx],edx
  41ff6a:	or     BYTE PTR [rax],dl
  41ff6c:	adc    eax,0xf0b54632
  41ff71:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41ff72:	leave  
  41ff73:	imul   BYTE PTR [rdi+0x7d]
  41ff76:	rex.WR mov al,0x70
  41ff79:	dec    BYTE PTR [rdx+0x4e]
  41ff7c:	mov    WORD PTR [rdx-0x6857eb9b],ds
  41ff82:	rex.RXB xchg DWORD PTR [r9],r9d
  41ff85:	std    
  41ff86:	test   DWORD PTR [rdi+riz*4-0x7],esp
  41ff8a:	out    dx,al
  41ff8b:	(bad)  
  41ff8c:	fnsave [rbp-0x3ae2c343]
  41ff92:	xchg   esi,eax
  41ff93:	mov    dh,0xed
  41ff95:	xchg   edx,eax
  41ff96:	cmc    
  41ff97:	sbb    dl,BYTE PTR [rax]
  41ff99:	scas   eax,DWORD PTR es:[rdi]
  41ff9a:	rex.RB
  41ff9b:	idiv   QWORD PTR [r9-0x267d75af]
  41ffa2:	and    edx,DWORD PTR [rdi+0x2c3a6665]
  41ffa8:	or     DWORD PTR [rsi],0x4090f70e
  41ffae:	xor    edx,DWORD PTR [rdi]
  41ffb0:	jge    0x420015
  41ffb2:	(bad)  
  41ffb3:	(bad)  
  41ffb4:	out    0xa1,eax
  41ffb6:	push   0xffffffff892e0c77
  41ffbb:	out    dx,al
  41ffbc:	push   rsi
  41ffbd:	icebp  
  41ffbe:	jle    0x41ff7f
  41ffc0:	push   rbp
  41ffc1:	outs   dx,DWORD PTR ds:[rsi]
  41ffc2:	pop    rbx
  41ffc3:	cdq    
  41ffc4:	pop    dx
  41ffc6:	cmp    DWORD PTR [rdi],edi
  41ffc8:	jle    0x41ffd5
  41ffca:	int    0x33
  41ffcc:	xor    eax,0x7a9de85b
  41ffd1:	add    esi,DWORD PTR [rdx+rbx*4]
  41ffd4:	xor    ebx,DWORD PTR [rsi-0x1a]
  41ffd7:	mov    bl,0x96
  41ffd9:	retf   
  41ffda:	int    0x29
  41ffdc:	retf   
  41ffdd:	or     BYTE PTR [rbp-0x28bcf110],ah
  41ffe3:	fdivr  DWORD PTR [rcx-0x64]
  41ffe6:	ret    
  41ffe7:	sti    
  41ffe8:	rcr    ch,cl
  41ffea:	outs   dx,DWORD PTR ds:[rsi]
  41ffeb:	int    0xfd
  41ffed:	rex.X sbb al,0x47
  41fff0:	retf   
  41fff1:	mov    edx,0x3de99f65
  41fff6:	cmp    eax,0x358ef323
  41fffb:	push   rdx
  41fffc:	scas   eax,DWORD PTR es:[rdi]
  41fffd:	int    0x60
  41ffff:	lods   eax,DWORD PTR ds:[rsi]
  420000:	shr    BYTE PTR [rip+0xffffffff8bae16ba],1        # 0xffffffff8bf016c0
  420006:	cld    
  420007:	out    dx,eax
  420008:	(bad)
  42000d:	pop    rsi
  42000e:	xchg   ebp,eax
  42000f:	(bad)
  420012:	(bad)  
  420013:	lods   eax,DWORD PTR ds:[rsi]
  420014:	adc    eax,eax
  420016:	adc    bl,dl
  420018:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  420019:	(bad)  
  42001a:	sbb    DWORD PTR [rcx-0x4e],eax
  42001d:	jns    0x420013
  42001f:	(bad)  
  420020:	loop   0x420016
  420022:	ret    
  420023:	shl    ecx,1
  420025:	xchg   DWORD PTR [rdi+0x7d7bbfde],ebp
  42002b:	jp     0x41ffe9
  42002d:	fnstcw WORD PTR [rip+0x202c57de]        # 0x206e5811
  420033:	call   0x2abf9900
  420038:	(bad)  
  420039:	xor    dl,bl
  42003b:	rex.RB outs dx,BYTE PTR ds:[rsi]
  42003d:	stc    
  42003e:	cmp    bh,BYTE PTR [rdi-0x6e91fdcb]
  420044:	ss (bad) 
  420046:	in     al,dx
  420047:	add    al,bl
  420049:	fbld   TBYTE PTR [rax+0x34]
  42004c:	retf   0x7784
  42004f:	(bad)  
  420050:	sbb    ebx,DWORD PTR [rbx-0x658b2665]
  420056:	iret   
  420057:	movabs eax,ds:0xc1dadbe88ccf5e0c
  420060:	(bad)  
  420061:	fs mov ah,0xc4
  420064:	je     0x420013
  420066:	xchg   esp,eax
  420067:	ja     0x42001e
  420069:	scas   eax,DWORD PTR es:[rdi]
  42006a:	fistp  QWORD PTR [rcx-0x22]
  42006d:	mov    al,0x65
  42006f:	push   rbx
  420070:	(bad)  
  420071:	xor    eax,0xe6346992
  420076:	rex.XB stc 
  420078:	push   rcx
  420079:	jrcxz  0x4200e5
  42007b:	mov    ecx,ebp
  42007d:	rex.WRXB
  42007e:	fs mov ecx,0x9e175e6b
  420084:	mov    cl,BYTE PTR [rbp+0x6a]
  420087:	leave  
  420088:	in     al,dx
  420089:	in     al,0x81
  42008b:	je     0x4200ff
  42008d:	push   rdx
  42008e:	xor    eax,0xcb24fd9b
  420093:	jno    0x4200d9
  420095:	xor    al,0x70
  420097:	rex jp 0x4200b5
  42009a:	rex.WR fild QWORD PTR [rsi-0x69539d5a]
  4200a1:	jnp    0x42003d
  4200a3:	add    ebp,DWORD PTR [rdx+0x64]
  4200a6:	cwde   
  4200a7:	jge    0x420073
  4200a9:	jo     0x4200b1
  4200ab:	in     eax,0xad
  4200ad:	movabs ds:0x484ed1bdfd538565,eax
  4200b6:	(bad)  
  4200b7:	mov    esi,0x5e6ced86
  4200bc:	rol    BYTE PTR [rdi-0x422c4a34],1
  4200c2:	add    cl,bl
  4200c4:	fst    DWORD PTR [rsp+rcx*8-0x4fbf27ac]
  4200cb:	sub    al,0xcf
  4200cd:	comiss xmm7,DWORD PTR [rdi+0x484e609]
  4200d4:	mov    esi,0x56cb620b
  4200d9:	test   dh,ah
  4200db:	rex.WRX sub r13b,BYTE PTR [rdx]
  4200de:	(bad)  
  4200df:	enter  0xd1bb,0x28
  4200e3:	mov    BYTE PTR [r14+rdx*4-0x71],sil
  4200e8:	stos   DWORD PTR es:[rdi],eax
  4200e9:	xchg   esp,eax
  4200ea:	mov    esi,0x9fa63f49
  4200ef:	(bad)  
  4200f0:	ins    DWORD PTR es:[rdi],dx
  4200f1:	(bad)  [rcx-0x12]
  4200f4:	cld    
  4200f5:	(bad)  [rbx-0x909e02f]
  4200fb:	mov    WORD PTR [rdx],ds
  4200fd:	cmp    BYTE PTR [rbp-0x66],bl
  420100:	jns    0x4200db
  420102:	xor    ch,BYTE PTR [rdi-0x66c64aec]
  420108:	repz (bad) 
  42010a:	pop    rbp
  42010b:	outs   dx,BYTE PTR ds:[rsi]
  42010c:	jrcxz  0x420128
  42010e:	xchg   esi,ebp
  420110:	xchg   DWORD PTR [rbx-0x8ca42de],ecx
  420116:	(bad)  
  420117:	jbe    0x42012b
  420119:	iret   
  42011a:	xor    ebp,ebp
  42011c:	out    0x4e,eax
  42011e:	jae    0x4200d2
  420120:	rcr    BYTE PTR [rdx],0x41
  420123:	ss mov dl,0xc3
  420126:	fsubr  st(0),st
  420128:	mov    bl,0xfb
  42012a:	(bad)  
  42012b:	adc    al,0x5b
  42012d:	stc    
  42012e:	(bad)  [rax-0x1e]
  420131:	scas   eax,DWORD PTR es:[rdi]
  420132:	jmp    0xffffffff94d7fdfb
  420137:	cld    
  420138:	ins    DWORD PTR es:[rdi],dx
  420139:	sbb    bl,BYTE PTR [rbx-0x5]
  42013c:	mov    ecx,gs
  42013e:	mov    eax,0x5e9fac46
  420143:	xchg   edx,eax
  420144:	movabs ds:0xe3dd142e50e3610c,eax
  42014d:	in     eax,0x42
  42014f:	repz call 0x7cdf3a41
  420155:	mov    esp,0xffb32b4b
  42015a:	(bad)  
  42015b:	(bad)  
  42015c:	fs ss ins DWORD PTR es:[rdi],dx
  42015f:	ds (bad) 
  420161:	addr32 jns 0x4201d7
  420164:	iret   
  420165:	test   DWORD PTR [rax+0x77],0xa0801c14
  42016c:	sub    DWORD PTR [rdi+riz*1],esi
  42016f:	jmp    0xffffffffa52d2a4e
  420174:	(bad)  
  420175:	xchg   edx,eax
  420176:	or     DWORD PTR [rbx+0xe],esp
  420179:	xchg   BYTE PTR [rax+0x35],ch
  42017c:	loop   0x4201ef
  42017e:	xor    al,0x27
  420180:	(bad)  
  420181:	sub    bh,BYTE PTR [rip+0xffffffffe69ddbf6]        # 0xffffffffe6dfdd7d
  420187:	loopne 0x42014f
  420189:	movabs al,ds:0xd082abddba6e8493
  420192:	(bad)  
  420193:	push   rbx
  420194:	mov    edx,0xdefa9281
  420199:	fdiv   st(3),st
  42019b:	repz and al,0xa2
  42019e:	xor    al,0x22
  4201a0:	(bad)  
  4201a1:	sahf   
  4201a2:	jl     0x42013f
  4201a4:	fisttp QWORD PTR [rdi+0x6e]
  4201a7:	rex.W loopne 0x420203
  4201aa:	pop    rcx
  4201ab:	leave  
  4201ac:	scas   al,BYTE PTR es:[rdi]
  4201ad:	test   eax,0xd6294c8c
  4201b2:	rex.WRX jae 0x4201aa
  4201b5:	push   rsi
  4201b6:	gs loop 0x420229
  4201b9:	in     al,0x3b
  4201bb:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4201bc:	cmp    ebx,eax
  4201be:	sub    edi,DWORD PTR [rcx+0x5f]
  4201c1:	xor    eax,0xb3626a73
  4201c6:	outs   dx,BYTE PTR ds:[rsi]
  4201c7:	or     DWORD PTR [rbp+0x7c],esp
  4201ca:	sub    DWORD PTR [rsi+0x142b8315],esi
  4201d0:	ss cmp eax,0x71c91647
  4201d6:	pop    rcx
  4201d7:	repz ficomp WORD PTR [rbx-0x14fc8a5b]
  4201de:	add    ah,bl
  4201e0:	(bad)  
  4201e1:	sar    DWORD PTR [rcx-0x71bf6483],cl
  4201e7:	mov    esp,0x9fed0734
  4201ec:	mov    edi,0xe2b8f842
  4201f1:	js     0x420179
  4201f3:	push   rdx
  4201f4:	push   rbp
  4201f5:	out    0xaa,al
  4201f7:	jne    0x42018e
  4201f9:	mov    esp,0x3a833bd5
  4201fe:	(bad)  
  4201ff:	int    0xfb
  420201:	add    eax,0xd1588c47
  420206:	(bad)  
  420207:	(bad)  
  420208:	rex.RB test al,0xb8
  42020b:	xchg   edx,eax
  42020c:	lods   eax,DWORD PTR ds:[rsi]
  42020d:	sub    esi,esp
  42020f:	in     al,dx
  420210:	rex.B (bad) 
  420212:	fxch   st(2)
  420214:	xchg   bh,dl
  420216:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  420217:	mov    ebp,0x77b3b51e
  42021c:	rex (bad) 
  42021e:	ffree  st(7)
  420220:	jg     0x4201c1
  420222:	hlt    
  420223:	adc    al,0x6e
  420225:	loope  0x420256
  420227:	xor    eax,0x695d37dd
  42022c:	sub    DWORD PTR [rsi],ecx
  42022e:	pop    rcx
  42022f:	mov    edx,0x1202e47f
  420234:	add    DWORD PTR [rdx+rsi*2+0x39],ecx
  420238:	jle    0x420272
  42023a:	pop    rax
  42023b:	iret   
  42023c:	cmp    ch,ch
  42023e:	rex.RXB je 0x420262
  420241:	(bad)  
  420242:	adc    DWORD PTR [rax+0x1bd010db],edi
  420248:	xchg   ebx,eax
  420249:	pop    rdi
  42024a:	(bad)  
  42024b:	mov    WORD PTR [rbp+0x62],gs
  42024e:	je     0x420269
  420250:	cwde   
  420251:	test   al,0x1c
  420253:	fisub  WORD PTR [rax-0x57836717]
  420259:	mov    dl,0x9b
  42025b:	mov    ah,0x36
  42025d:	push   0xffffffffffffffd5
  42025f:	mov    dl,0xc1
  420261:	jmp    0xffffffffe652dd4e
  420266:	rex.W int 0xe0
  420269:	xchg   ecx,eax
  42026a:	(bad)  
  42026b:	mov    ch,ah
  42026d:	ret    
  42026e:	rex.XB imul ebp,DWORD PTR [r10-0x32dd538],0x19
  420276:	sub    DWORD PTR [rsp+rbp*1+0x74],0xf8206279
  42027e:	xchg   eax,ebx
  420280:	vorpd  ymm10,ymm3,YMMWORD PTR [rbx]
  420284:	adc    BYTE PTR [rdx],cl
  420286:	jp     0x420254
  420288:	pcmpgtw mm1,mm4
  42028b:	rex.WB out dx,eax
  42028d:	and    DWORD PTR [rax-0x7a],esi
  420290:	cmp    DWORD PTR [rdx-0x373999a9],eax
  420296:	(bad)  
  420297:	cdq    
  420298:	(bad)  
  420299:	(bad)  
  42029b:	fiadd  DWORD PTR [rdx-0x51]
  42029e:	add    ebx,DWORD PTR [rbp+0x48]
  4202a1:	je     0x420235
  4202a3:	cld    
  4202a4:	rex.WX pop rsp
  4202a6:	add    esi,edx
  4202a8:	outs   dx,DWORD PTR ds:[rsi]
  4202a9:	rex.W jl 0x42027d
  4202ac:	punpckhdq mm1,QWORD PTR [rsi]
  4202af:	ja     0x420325
  4202b1:	xchg   ebp,eax
  4202b2:	add    DWORD PTR [rdi+0x601eb6b7],0x7b
  4202b9:	(bad)  
  4202ba:	retf   
  4202bb:	(bad)  
  4202bc:	fstp   DWORD PTR [rcx]
  4202be:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4202bf:	sti    
  4202c0:	pop    rdx
  4202c1:	je     0x4202a6
  4202c3:	cwde   
  4202c4:	leave  
  4202c5:	ins    DWORD PTR es:[rdi],dx
  4202c6:	jp     0x42028d
  4202c8:	sahf   
  4202c9:	out    0x5f,eax
  4202cb:	jg     0x420315
  4202cd:	rex.WR pop QWORD PTR [rdi]
  4202d0:	jne    0x420265
  4202d2:	ss retf 
  4202d4:	cli    
  4202d5:	adc    DWORD PTR [rdi-0x3c],esp
  4202d8:	adc    ecx,DWORD PTR [rdx]
  4202da:	cld    
  4202db:	mov    ?,ebp
  4202dd:	rex.R jo 0x420338
  4202e0:	(bad)  
  4202e1:	lahf   
  4202e2:	sub    dh,0x2e
  4202e5:	push   rsp
  4202e6:	push   rax
  4202e7:	add    al,0xae
  4202e9:	xor    ch,bh
  4202eb:	lea    edi,fs:[rax-0x15cef45f]
  4202f2:	mov    bh,0xd2
  4202f4:	(bad)
  4202f8:	cmp    ebx,DWORD PTR [rdx]
  4202fa:	popf   
  4202fb:	shl    DWORD PTR [rdi],cl
  4202fd:	int3   
  4202fe:	(bad)  
  4202ff:	sub    BYTE PTR [rsi+0x474e2f4d],ch
  420305:	popf   
  420306:	out    0x8c,al
  420308:	lods   eax,DWORD PTR ds:[rsi]
  420309:	sahf   
  42030a:	adc    eax,0xb4300b75
  42030f:	jb     0x4202ab
  420311:	(bad)  
  420312:	rex.XB movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  420314:	icebp  
  420315:	push   rbp
  420316:	jmp    0x118fb4c7
  42031b:	sbb    BYTE PTR [rcx],ah
  42031d:	(bad)  
  42031e:	(bad)  
  42031f:	add    eax,0x6a3e12e1
  420324:	rol    DWORD PTR [rdi+0x4fc36616],0xb7
  42032b:	lods   eax,DWORD PTR ds:[rsi]
  42032c:	jae    0x4202cf
  42032e:	scas   eax,DWORD PTR es:[rdi]
  42032f:	jnp    0x4202f2
  420331:	jp     0x4202bf
  420333:	jmp    0x42031a
  420335:	xor    eax,0x5ab5cbe9
  42033a:	cmp    esi,esi
  42033c:	or     esp,DWORD PTR [rsi+0x36]
  42033f:	(bad)  
  420340:	or     ebx,DWORD PTR [rsi-0x79]
  420343:	ins    DWORD PTR es:[rdi],dx
  420344:	(bad)  
  420345:	add    al,0x1f
  420347:	sbb    esp,DWORD PTR [rbx+0x1d2853e0]
  42034d:	xchg   edi,eax
  42034e:	js     0x4203a1
  420350:	mov    edx,0x7a74956
  420355:	xchg   edx,eax
  420356:	xchg   esi,ebp
  420358:	fs jae 0x42033f
  42035b:	xor    ah,BYTE PTR [rbx-0x68dcb2dc]
  420361:	adc    al,0x2f
  420363:	mov    ch,BYTE PTR [rdx-0x217da808]
  420369:	mov    DWORD PTR [rax+0x2c],edi
  42036c:	rcl    al,1
  42036e:	test   BYTE PTR [rbp+0x70f5da08],dl
  420374:	(bad)  
  420375:	in     eax,0xe4
  420377:	cmp    BYTE PTR [rdx*4+0x6a4b8d8e],ah
  42037e:	iret   
  42037f:	sahf   
  420380:	std    
  420381:	scas   eax,DWORD PTR es:[rdi]
  420382:	mov    esp,DWORD PTR [rbp+0x6dc8f899]
  420388:	rex.B xlat BYTE PTR ds:[rbx]
  42038a:	fnstsw WORD PTR ds:[rbp+0x34]
  42038e:	add    ecx,0xf7e10eb7
  420394:	xor    ch,BYTE PTR [rbp+0x7d]
  420397:	ss jl  0x420354
  42039a:	(bad)  
  42039b:	fmul   QWORD PTR [rip+0x51519b36]        # 0x51939ed7
  4203a1:	mov    bl,0xe4
  4203a3:	and    eax,0xa941f7fd
  4203a8:	mov    eax,ds
  4203aa:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4203ab:	(bad)  
  4203ac:	test   ecx,esi
  4203ae:	scas   al,BYTE PTR es:[rdi]
  4203af:	rex.R
  4203b0:	rex.WXB pop r8
  4203b2:	mov    gs,WORD PTR [rsi-0x74f78e27]
  4203b8:	(bad)  
  4203b9:	rex.WB in al,dx
  4203bb:	cmc    
  4203bc:	xchg   ebx,eax
  4203bd:	xlat   BYTE PTR ds:[rbx]
  4203be:	(bad)  
  4203bf:	(bad)  
  4203c0:	pop    rax
  4203c1:	(bad)  
  4203c2:	jrcxz  0x42043b
  4203c4:	pop    rdi
  4203c5:	ret    
  4203c6:	imul   ebp,DWORD PTR [rcx+0x55],0xacda29db
  4203cd:	fldl2e 
  4203cf:	in     eax,0xd8
  4203d1:	or     BYTE PTR [rax-0x6cab1101],0xf8
  4203d8:	and    al,0x5f
  4203da:	xor    esp,edx
  4203dc:	(bad)  
  4203dd:	rcr    edi,cl
  4203df:	out    dx,eax
  4203e0:	loop   0x4203ec
  4203e2:	lods   al,BYTE PTR ds:[rsi]
  4203e3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4203e4:	jrcxz  0x4203a4
  4203e6:	rex.WR popf 
  4203e8:	clc    
  4203e9:	adc    BYTE PTR [rsi],bh
  4203eb:	imul   si
  4203ee:	outs   dx,DWORD PTR ds:[rsi]
  4203ef:	cwde   
  4203f0:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  4203f2:	mov    ds,ebp
  4203f4:	ret    
  4203f5:	(bad)  
  4203f6:	mov    ebp,0x80f1f999
  4203fb:	(bad)
  420400:	(bad)  
  420401:	cld    
  420402:	jmp    0x4203b2
  420404:	rex.X jno 0x4203df
  420407:	and    al,0xed
  420409:	cmp    esi,DWORD PTR [rcx]
  42040b:	loop   0x420424
  42040d:	or     BYTE PTR [rbx+0x46],0xa3
  420411:	rcr    BYTE PTR [rsp+rsi*8],0x61
  420415:	shr    DWORD PTR [rsi],0xd8
  420418:	rex.R (bad) 
  42041a:	sub    eax,0xb4f4ed2
  42041f:	push   rsi
  420420:	mov    BYTE PTR [rax+0x44],cl
  420423:	jae    0x42040d
  420425:	(bad)  
  420426:	push   rax
  420427:	sub    dh,0x71
  42042a:	cdq    
  42042b:	xchg   esp,eax
  42042c:	mov    bl,0xe0
  42042e:	xchg   edx,eax
  42042f:	imul   ebx,ecx,0x54
  420432:	push   rax
  420433:	xor    eax,0x835ae5f7
  420438:	popf   
  420439:	and    DWORD PTR [rdi-0x228854f1],edx
  42043f:	jae    0x4204a1
  420441:	xchg   ebp,eax
  420442:	cmp    eax,0x2bfc6aa0
  420447:	xor    ecx,esi
  420449:	pop    rsi
  42044a:	rex.RX
  42044b:	lock add al,0xdd
  42044e:	movsxd ecx,DWORD PTR [rbp+0x6d]
  420451:	sub    bl,cl
  420453:	fwait
  420454:	rex.RB xor eax,0x3abab353
  42045a:	mov    ebx,0x29c9d966
  42045f:	loop   0x420457
  420461:	adc    BYTE PTR [rbx],bh
  420463:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  420464:	jns    0x4203ff
  420466:	lea    edi,[rbx+rbp*4+0x72]
  42046a:	push   rcx
  42046b:	sbb    eax,0x3dd48c19
  420470:	int3   
  420471:	sbb    ch,BYTE PTR [rbp+0x12]
  420474:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  420475:	mov    DWORD PTR [rax],ebx
  420477:	neg    al
  420479:	push   rsi
  42047a:	mov    edx,0x91fb78af
  42047f:	xchg   ecx,eax
  420480:	(bad)  
  420481:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  420483:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  420484:	(bad)  
  420485:	pop    rbx
  420486:	mov    al,BYTE PTR [rsi+0x5e72ea5d]
  42048c:	repnz pop rbx
  42048e:	(bad)  
  42048f:	cmp    bl,ch
  420491:	cmp    ecx,esi
  420493:	(bad)  
  420494:	xlat   BYTE PTR ds:[rbx]
  420495:	(bad)  
  420496:	leave  
  420497:	retf   0xfe82
  42049a:	sub    al,0xc8
  42049c:	ja     0x420491
  42049e:	outs   dx,DWORD PTR ds:[rsi]
  42049f:	xchg   ecx,eax
  4204a0:	or     eax,0xe48bdd19
  4204a5:	(bad)  
  4204a6:	xchg   ebp,eax
  4204a7:	jo     0x4204ac
  4204a9:	xor    al,0x17
  4204ab:	(bad)  
  4204ac:	mov    edi,0xa2302408
  4204b1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4204b2:	(bad)  
  4204b3:	ins    BYTE PTR es:[rdi],dx
  4204b4:	or     eax,0xa4d43ad5
  4204b9:	lock in al,dx
  4204bb:	mov    WORD PTR [rax+0xd],es
  4204be:	out    dx,eax
  4204bf:	outs   dx,BYTE PTR ds:[rsi]
  4204c0:	adc    BYTE PTR [rbx],ah
  4204c2:	mov    edi,0xf2260a1b
  4204c7:	fisub  WORD PTR [rip+0xfffffffff93e6137]        # 0xfffffffff9806604
  4204cd:	or     ah,cl
  4204cf:	mov    BYTE PTR [rbp+rcx*2+0x2d],bl
  4204d3:	stc    
  4204d4:	and    DWORD PTR [rax+0x451ac60d],ecx
  4204da:	xchg   esi,eax
  4204db:	add    BYTE PTR [rsi+0xe],ah
  4204de:	stc    
  4204df:	(bad)  
  4204e0:	imul   ecx,DWORD PTR [rdi-0x2e],0xac179cb5
  4204e7:	lods   al,BYTE PTR ds:[rsi]
  4204e8:	lods   eax,DWORD PTR ds:[rsi]
  4204e9:	xor    al,0x80
  4204eb:	rex.WRB pop r15
  4204ed:	(bad)  
  4204ee:	mov    esp,0xb648b93e
  4204f3:	int3   
  4204f4:	stos   BYTE PTR es:[rdi],al
  4204f5:	mov    ?,WORD PTR [rbx-0x14217236]
  4204fb:	cmp    ebx,DWORD PTR [rcx+0x33]
  4204fe:	fstp   DWORD PTR [rcx+0x7c]
  420501:	int3   
  420502:	ja     0x420490
  420504:	sbb    eax,0x5b6f1d34
  420509:	in     eax,dx
  42050a:	(bad)  
  42050b:	lahf   
  42050c:	ret    
  42050d:	es push rsp
  42050f:	fwait
  420510:	lea    rsp,[r14]
  420513:	pop    rax
  420514:	rex.WRB fst st(3)
  420517:	loopne 0x420572
  420519:	push   rcx
  42051a:	or     al,0x37
  42051c:	jbe    0x4204e4
  42051e:	adc    esp,DWORD PTR [rsi-0x7ff3a277]
  420524:	cmp    dl,BYTE PTR [rax-0x3eb39d05]
  42052a:	scas   eax,DWORD PTR es:[rdi]
  42052b:	je     0x4204c7
  42052d:	mov    cl,0xb
  42052f:	(bad)  
  420530:	cwde   
  420531:	jg     0x420510
  420533:	mov    bl,0xca
  420535:	mov    eax,0xb031f117
  42053a:	outs   dx,DWORD PTR ds:[rsi]
  42053b:	rcr    DWORD PTR [r10],0x72
  42053f:	rex.WRXB cmp BYTE PTR [r13-0x51],r13b
  420543:	rex.WRXB xor BYTE PTR [r11],r11b
  420546:	(bad)  
  420547:	xchg   esp,eax
  420548:	add    eax,0x725345dd
  42054d:	push   rbp
  42054e:	jne    0x4204eb
  420550:	xor    ebx,0xffffffac
  420553:	(bad)  
  420554:	fsub   st(1),st
  420556:	and    eax,0x66645816
  42055b:	sbb    eax,ebx
  42055d:	cmp    BYTE PTR [rdi-0x13a4cd1c],al
  420563:	push   0x59
  420565:	mov    bl,0xfb
  420567:	xchg   ebp,eax
  420568:	in     al,dx
  420569:	jge    0x420526
  42056b:	pop    rsi
  42056c:	ret    
  42056d:	cwde   
  42056e:	rex cmc 
  420570:	xchg   esi,eax
  420571:	shr    DWORD PTR [rdx],cl
  420573:	pop    rbx
  420574:	rex.RX sub esi,r8d
  420577:	mov    ecx,0xd8e486b2
  42057c:	jbe    0x420588
  42057e:	rex.WXB (bad) 
  420580:	sti    
  420581:	leave  
  420582:	je     0x420524
  420584:	movabs cs:0xc02bbd8f05dcb24e,eax
  42058e:	pop    rsp
  42058f:	(bad)
  420592:	rex.WRXB mov r11b,0x59
  420595:	ds iret 
  420597:	sbb    ebp,eax
  420599:	lock pop rsi
  42059b:	(bad)  
  42059c:	(bad)  
  42059d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  42059e:	push   0xffffffffb0a7e977
  4205a3:	rex.WXB or sil,r14b
  4205a6:	rex.WX jmp 0x708dac83
  4205ac:	(bad)  
  4205ad:	xor    BYTE PTR [rsi],dl
  4205af:	(bad)  
  4205b0:	outs   dx,BYTE PTR ds:[rsi]
  4205b1:	(bad)  
  4205b2:	mov    ch,0x3b
  4205b4:	fs loope 0x420619
  4205b7:	(bad)  
  4205b8:	mov    bl,0xf6
  4205ba:	(bad)  
  4205bb:	mov    dl,0x78
  4205bd:	fild   DWORD PTR [rdi-0x5a]
  4205c0:	outs   dx,BYTE PTR ds:[rsi]
  4205c1:	add    BYTE PTR [rdx-0x5f],cl
  4205c4:	jae    0x4205ec
  4205c6:	rex.WRX mov WORD PTR [rcx],?
  4205c9:	pop    rdi
  4205ca:	(bad)  
  4205cb:	jp     0x420593
  4205cd:	push   rdx
  4205ce:	jge    0x42060c
  4205d0:	nop
  4205d1:	fucom  st(6)
  4205d3:	cmc    
  4205d4:	sbb    eax,0x3c903c15
  4205d9:	(bad)  
  4205da:	(bad)  
  4205db:	(bad)  
  4205dc:	xor    edx,esp
  4205de:	sbb    al,0x18
  4205e0:	cwde   
  4205e1:	popf   
  4205e2:	(bad)  
  4205e3:	(bad)
  4205e6:	(bad)  
  4205e7:	add    al,0x61
  4205e9:	(bad)
  4205ec:	scas   al,BYTE PTR es:[rdi]
  4205ed:	mov    esi,0x907ec2ab
  4205f2:	adc    eax,0xb1da7293
  4205f7:	iret   
  4205f8:	push   0xffffffff87213c12
  4205fd:	sbb    eax,0xec1491cf
  420602:	repnz mov eax,0x3a3c8d63
  420608:	in     al,dx
  420609:	in     eax,dx
  42060a:	sti    
  42060b:	rex.RB sti 
  42060d:	data16 fisub WORD PTR ds:[rbx-0x25]
  420612:	jmp    FWORD PTR [rdx-0x2cd000a3]
  420618:	and    edi,DWORD PTR [rsi*8-0x3b75ee15]
  42061f:	(bad)  
  420620:	xchg   edx,eax
  420621:	(bad)  
  420622:	outs   dx,BYTE PTR ds:[rsi]
  420623:	enter  0xfefb,0x12
  420627:	jno    0x42067b
  420629:	jb     0x4205bc
  42062b:	icebp  
  42062c:	psrad  mm1,QWORD PTR [rdx]
  42062f:	(bad)  
  420630:	rex.W scas al,BYTE PTR es:[rdi]
  420632:	mov    esp,0xfa04fc5a
  420637:	mov    dh,0x88
  420639:	xchg   edi,eax
  42063a:	pop    rsp
  42063b:	shl    DWORD PTR [rdi+0x6c498c6a],0x3e
  420642:	shrd   DWORD PTR [rbp+0xa],edx,0x49
  420647:	call   0xffffffffbc158317
  42064c:	(bad)  
  42064d:	ss stos DWORD PTR es:[rdi],eax
  42064f:	jmp    0x31e3e246
  420654:	sbb    edx,edx
  420656:	sub    DWORD PTR [rcx+0x134cc61],esp
  42065c:	mov    esp,0x9a779f8f
  420661:	rex.XB out 0x5,eax
  420664:	(bad)  
  420665:	(bad)  
  420666:	mov    bh,0xae
  420668:	cdq    
  420669:	shl    edi,1
  42066b:	(bad)  
  42066c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42066d:	(bad)  
  42066e:	fnstsw WORD PTR [rcx+0x2]
  420671:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  420672:	mov    dl,0x3e
  420674:	fcomp  st(1)
  420676:	mov    ecx,0x961bbbbb
  42067b:	out    0xfe,al
  42067d:	stos   BYTE PTR es:[rdi],al
  42067e:	jmp    0x420659
  420680:	mov    al,0xac
  420682:	scas   al,BYTE PTR es:[rdi]
  420683:	ja     0x42062b
  420685:	in     eax,0xa4
  420687:	fimul  WORD PTR [rcx+0x17]
  42068a:	mov    edi,DWORD PTR [rdx+0x47]
  42068d:	(bad)  
  42068e:	fadd   QWORD PTR [rdx+0x1e]
  420691:	jnp    0x4206aa
  420693:	xchg   DWORD PTR [rsi-0x65],esi
  420696:	adc    al,0x4c
  420698:	rex.R
  420699:	lods   eax,DWORD PTR cs:[rsi]
  42069b:	(bad)  
  42069c:	jle    0x420714
  42069e:	iret   
  42069f:	cmps   BYTE PTR ss:[rsi],BYTE PTR es:[rdi]
  4206a1:	test   al,0xd6
  4206a3:	(bad)  
  4206a4:	jge    0x420659
  4206a6:	jle    0x420675
  4206a8:	outs   dx,BYTE PTR ds:[rsi]
  4206a9:	out    0xae,eax
  4206ab:	jrcxz  0x42063b
  4206ad:	(bad)  
  4206ae:	mov    cl,0x89
  4206b0:	(bad)  
  4206b1:	mov    esp,0xdd6e78df
  4206b6:	cmp    esi,esp
  4206b8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4206b9:	rex.RXB clc 
  4206bb:	loope  0x420725
  4206bd:	rex.WB
  4206be:	push   r13
  4206c0:	repz sbb edx,esi
  4206c3:	sbb    eax,0xda173136
  4206c8:	fiadd  DWORD PTR [rcx]
  4206ca:	pop    rdi
  4206cb:	out    0xcd,eax
  4206cd:	lock sub bl,BYTE PTR [rbx-0x3be5aa6a]
  4206d4:	rex.WRB
  4206d5:	rex.WXB
  4206d6:	rex.X and DWORD PTR [rbx+0x16],0x1da9e626
  4206de:	jae    0x420717
  4206e0:	jge    0x420712
  4206e2:	repz xor ah,BYTE PTR [rdi+rdi*4-0x371999d1]
  4206ea:	repnz in al,0xe8
  4206ed:	(bad)
  4206f1:	rcr    BYTE PTR [rsi+0x49],0x63
  4206f5:	stos   DWORD PTR es:[rdi],eax
  4206f6:	(bad)  
  4206f7:	mov    edi,0x9ca76ba7
  4206fc:	(bad)  
  4206fd:	sub    bh,al
  4206ff:	sbb    ah,dl
  420701:	jno    0x420722
  420703:	xor    eax,0x964c8126
  420708:	(bad)  
  420709:	popf   
  42070a:	gs (bad) 
  42070c:	rex.WRB movabs r12,0x9cb9ccacbae3e731
  420716:	xlat   BYTE PTR ds:[rbx]
  420717:	xor    DWORD PTR [rdi-0x7e],ebp
  42071a:	cmp    ch,bh
  42071c:	push   0x4
  42071e:	pop    rbx
  42071f:	xchg   ebx,eax
  420720:	(bad)  
  420721:	cld    
  420722:	sbb    eax,0x1658daec
  420727:	pop    rsi
  420728:	jmp    0x420790
  42072a:	(bad)
  42072d:	cmp    edx,edx
  42072f:	and    BYTE PTR [rdx+rax*4],dh
  420732:	mov    dh,0xca
  420734:	xchg   ebx,eax
  420735:	jmp    0xffffffff8a6f95ff
  42073a:	scas   al,BYTE PTR es:[rdi]
  42073b:	imul   edx,DWORD PTR [rbx+0x6be70b2e],0xffffff84
  420742:	mov    esp,0xc7ee5d33
  420747:	jp     0x4206d0
  420749:	sub    DWORD PTR [rdx+0x77147a32],ebp
  42074f:	rex.RX push rbp
  420751:	xchg   ebp,eax
  420752:	fiadd  WORD PTR [rbp+0x31]
  420755:	clc    
  420756:	(bad)  
  420757:	or     bl,BYTE PTR [rbx+0x75f93e91]
  42075d:	repnz xchg edx,eax
  42075f:	fs pop rbp
  420761:	idiv   eax
  420763:	mov    fs,esp
  420765:	jo     0x420730
  420767:	mov    cl,0xe5
  420769:	(bad)  
  42076a:	xor    eax,0x9d15260
  42076f:	jrcxz  0x420741
  420771:	(bad)  
  420772:	jne    0x420701
  420774:	shl    DWORD PTR [rcx+0x38],1
  420777:	cwde   
  420778:	rex.WRXB outs dx,DWORD PTR ds:[rsi]
  42077a:	or     esi,DWORD PTR [rax-0x28697e97]
  420780:	sub    dl,BYTE PTR [rbx+0x1]
  420783:	int3   
  420784:	imul   ecx,DWORD PTR [rax],0x474122b7
  42078a:	sti    
  42078b:	or     eax,0xdb696b1f
  420790:	mulps  xmm2,XMMWORD PTR gs:[rdi-0x59]
  420795:	xor    bl,cl
  420797:	(bad)  
  420798:	hlt    
  420799:	push   rcx
  42079a:	jns    0x4207af
  42079c:	(bad)  
  42079d:	xchg   esp,eax
  42079e:	mov    edi,0x815e9027
  4207a3:	xor    eax,0x850067bc
  4207a8:	vmread QWORD PTR ds:[rdi-0x58],rsp
  4207ad:	ficomp WORD PTR [rcx-0x49968b95]
  4207b3:	pop    rdx
  4207b4:	sub    eax,DWORD PTR [rdi]
  4207b6:	movabs al,ds:0x1ce4f44ac62d4dbb
  4207bf:	pop    rcx
  4207c0:	(bad)  
  4207c1:	sub    eax,eax
  4207c3:	pop    rbx
  4207c4:	mov    ch,0xb5
  4207c6:	cmp    eax,0xe17fec3c
  4207cb:	movsxd esi,DWORD PTR [rcx]
  4207cd:	movabs ds:0x3916fac7d3f18213,al
  4207d6:	or     cl,BYTE PTR [rbp-0x3b]
  4207d9:	mov    WORD PTR [rdx-0x15d1ff37],gs
  4207df:	ret    
  4207e0:	(bad)  
  4207e1:	movabs eax,ds:0xfaa2e4e0bd84a4ec
  4207ea:	fwait
  4207eb:	jmp    0xffffffffdcc6255b
  4207f0:	scas   eax,DWORD PTR es:[rdi]
  4207f1:	(bad)  
  4207f2:	in     al,dx
  4207f3:	rex.WR
  4207f4:	rex.WRX
  4207f5:	rex.WXB (bad) 
  4207f7:	mov    bh,BYTE PTR [rdx]
  4207f9:	push   rax
  4207fa:	or     al,0x4f
  4207fc:	movabs al,ds:0x71571c7f6833245a
  420805:	mov    dl,0xd7
  420807:	hlt    
  420808:	and    eax,0x67d89de8
  42080d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  42080e:	loopne 0x420801
  420810:	repz and al,BYTE PTR [rdi-0x5a]
  420814:	and    eax,0xfffffff0
  420817:	sbb    DWORD PTR [rdi-0x5a],ecx
  42081a:	mov    esi,0x8becbaa6
  42081f:	push   rbx
  420820:	(bad)  
  420821:	cli    
  420822:	rex.WX pop rbp
  420824:	in     eax,dx
  420825:	cmp    cl,BYTE PTR [rbx-0x30]
  420828:	gs (bad) 
  42082a:	data16 (bad) 
  42082c:	rex.W (bad) 
  42082e:	outs   dx,DWORD PTR ds:[rsi]
  42082f:	mov    ebp,0x7eab3c2c
  420834:	ror    cl,1
  420836:	in     eax,dx
  420837:	es cdq 
  420839:	loope  0x42089d
  42083b:	pop    rbp
  42083c:	pushf  
  42083d:	sbb    eax,DWORD PTR [rax]
  42083f:	sbb    eax,0x47e8cdc0
  420844:	enter  0xf283,0x50
  420848:	out    dx,eax
  420849:	ins    BYTE PTR es:[rdi],dx
  42084a:	out    0x2c,eax
  42084c:	movabs ds:0xc792ecbb2283ebcb,al
  420855:	(bad)  
  420856:	call   0x13424627
  42085b:	stos   DWORD PTR es:[rdi],eax
  42085c:	mov    ah,0xb1
  42085e:	rex.X jg 0x4208ae
  420861:	fcmovne st,st(7)
  420863:	leave  
  420864:	(bad)  
  420865:	jmp    0xffffffffccdab2e0
  42086a:	rex.WX
  42086b:	rex.RB (bad) 
  42086d:	cdq    
  42086e:	idiv   DWORD PTR [rcx]
  420870:	repz shr DWORD PTR [rcx+rsi*8],0xf7
  420875:	(bad)  
  420876:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  420877:	enter  0xc84a,0x2f
  42087b:	cli    
  42087c:	mov    dl,0x39
  42087e:	scas   al,BYTE PTR es:[rdi]
  42087f:	rex.WX jb 0x420808
  420882:	xchg   BYTE PTR [rsi],cl
  420884:	rex.WXB rcr QWORD PTR [r9],1
  420887:	mov    ebx,0x54ce3b89
  42088c:	cmp    BYTE PTR [rax-0x6e],cl
  42088f:	lahf   
  420890:	jle    0x42087c
  420892:	(bad)  
  420893:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  420894:	mov    al,0xfe
  420896:	fs int3 
  420898:	loopne 0x420839
  42089a:	int3   
  42089b:	xchg   esi,eax
  42089c:	sti    
  42089d:	mov    DWORD PTR [rcx+0xedd3fa2],eax
  4208a3:	xchg   ebx,eax
  4208a4:	outs   dx,BYTE PTR ds:[rsi]
  4208a5:	js     0x420832
  4208a7:	mov    esp,0xdc8cf53c
  4208ac:	mov    bh,0xac
  4208ae:	(bad)  
  4208af:	mov    ah,0xad
  4208b1:	movsxd ecx,esi
  4208b3:	rex.WX rcl QWORD PTR [rbp+0x1f4a3ec4],0x3c
  4208bb:	add    ah,cl
  4208bd:	rex.WRX push 0xffffffff85e72fce
  4208c3:	push   0x206a2c8d
  4208c8:	add    eax,0xff362a20
  4208cd:	mov    al,0xe9
  4208cf:	(bad)  
  4208d0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4208d1:	scas   eax,DWORD PTR es:[rdi]
  4208d2:	cs mov dh,0x46
  4208d5:	test   DWORD PTR [rdi*1+0x2c1c5818],esi
  4208dc:	or     dh,BYTE PTR [rdi+rax*4]
  4208df:	add    eax,ecx
  4208e1:	rex.XB xchg BYTE PTR [r10+0x467c3118],sil
  4208e8:	(bad)  
  4208e9:	sub    eax,0x1696e246
  4208ee:	sbb    al,BYTE PTR [rip+0xffffffffe6e2f240]        # 0xffffffffe724fb34
  4208f4:	mov    esi,0xa05ef8a6
  4208f9:	sub    edx,DWORD PTR [rcx+rbx*2]
  4208fc:	sti    
  4208fd:	mov    ah,0xc4
  4208ff:	and    DWORD PTR [rbx-0x638acdd6],0xffffffb3
  420906:	or     al,0xba
  420908:	xor    ch,ch
  42090a:	(bad)  
  42090b:	xchg   esi,eax
  42090c:	mov    esp,0x1cd9dd35
  420911:	ins    BYTE PTR es:[rdi],dx
  420912:	pop    rdx
  420913:	outs   dx,DWORD PTR ds:[rsi]
  420914:	mov    ah,0xc4
  420916:	push   rsp
  420917:	shr    DWORD PTR [rcx-0x3c],cl
  42091a:	xchg   edi,esp
  42091c:	mov    WORD PTR [rdi],gs
  42091e:	add    BYTE PTR [rsi-0x7e],dl
  420921:	rex.WRXB jp 0x420944
  420924:	mov    dl,dl
  420926:	xchg   eax,ecx
  420928:	mov    eax,0x104a22fc
  42092d:	sar    BYTE PTR [rax],1
  42092f:	(bad)  
  420930:	jl     0x420991
  420932:	and    BYTE PTR [rdi+0x500fcb11],dh
  420938:	sbb    al,ah
  42093a:	loopne 0x4208e8
  42093c:	outs   dx,BYTE PTR ds:[rsi]
  42093d:	rex.RB
  42093e:	mov    WORD PTR [rbx-0x30],si
  420942:	(bad)  
  420943:	(bad)  
  420944:	enter  0x5cbe,0x70
  420948:	(bad)  
  420949:	and    al,0xed
  42094b:	(bad)  
  42094c:	(bad)  
  42094d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42094e:	out    dx,al
  42094f:	or     DWORD PTR [rsi+0xcf008bb],ecx
  420955:	or     bl,BYTE PTR [rdi]
  420957:	sar    DWORD PTR [rdi+rdx*1+0x3a],1
  42095b:	retf   
  42095c:	xchg   esp,eax
  42095d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42095e:	ja     0x4209b7
  420960:	rex.W (bad) 
  420962:	(bad)  
  420963:	test   al,0x84
  420965:	jns    0x42099b
  420967:	xchg   r12d,eax
  420969:	rex.WXB
  42096a:	rex.X stos BYTE PTR es:[rdi],al
  42096c:	add    ch,ah
  42096e:	lea    ebp,[rax+0x67374e6]
  420974:	(bad)  
  420975:	or     dh,ch
  420977:	out    0x55,eax
  420979:	rcl    BYTE PTR [rbx-0x5b],cl
  42097c:	add    eax,0xf49bd201
  420981:	shl    DWORD PTR [rdi+0x16b19d61],cl
  420987:	shr    bl,cl
  420989:	mov    esi,0xf38cd401
  42098e:	xor    eax,0x3a12ca48
  420993:	xchg   edx,eax
  420994:	(bad)  
  420995:	out    dx,al
  420996:	or     BYTE PTR [rbx],dl
  420998:	mov    esi,0xc18be825
  42099d:	fistp  WORD PTR [rax]
  42099f:	pop    rdx
  4209a0:	add    eax,0x262aa274
  4209a5:	fcmovnu st,st(5)
  4209a7:	mov    ebp,0x4e33484b
  4209ac:	xchg   DWORD PTR [rax+0x1],esi
  4209af:	jns    0x4209b0
  4209b1:	mov    esi,0x5ab820b4
  4209b6:	in     al,dx
  4209b7:	int3   
  4209b8:	sub    edi,DWORD PTR [rdx]
  4209ba:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4209bb:	rex.WXB
  4209bc:	rex.X xor BYTE PTR [rbp+0x34],al
  4209c0:	cmp    al,0x6d
  4209c2:	movabs eax,ds:0x227e243e28e858b5
  4209cb:	pop    rcx
  4209cc:	push   rcx
  4209cd:	jnp    0x4209a9
  4209cf:	lea    esi,[rcx]
  4209d1:	(bad)  
  4209d2:	pop    rsp
  4209d3:	(bad)  
  4209d4:	mov    esp,0x1b19cc88
  4209d9:	sbb    eax,0x6dedccc1
  4209de:	mov    esi,DWORD PTR [rbx+0x4]
  4209e1:	leave  
  4209e2:	mov    DWORD PTR [rax-0x57f87607],eax
  4209e8:	ja     0x420a3d
  4209ea:	jb     0x420a0c
  4209ec:	mov    edx,0x6ab04077
  4209f1:	rex.RX fldl2t 
  4209f4:	rex xor eax,0x38eddb1e
  4209fa:	and    bh,ch
  4209fc:	fistp  WORD PTR [rbp+rdi*4-0x45dc91c3]
  420a03:	lock xchg ebx,eax
  420a05:	cwde   
  420a06:	xchg   esp,eax
  420a08:	enter  0x37b2,0x46
  420a0c:	div    al
  420a0e:	dec    BYTE PTR [rax+0x3]
  420a11:	movabs ds:0x166b3aeca614ccd3,eax
  420a1a:	ja     0x4209e7
  420a1c:	jl     0x4209d8
  420a1e:	mov    ch,0x4d
  420a20:	(bad)  
  420a22:	jge    0x4209b5
  420a24:	jg     0x420a40
  420a26:	add    bh,bl
  420a28:	retf   0xa2c6
  420a2b:	pop    rcx
  420a2c:	sub    edx,DWORD PTR [rsi+0x1]
  420a2f:	stos   BYTE PTR es:[rdi],al
  420a30:	lods   al,BYTE PTR ds:[rsi]
  420a31:	pop    rcx
  420a32:	push   rsi
  420a33:	add    eax,0xea12b53b
  420a38:	jle    0x420a52
  420a3a:	popf   
  420a3b:	rex.WX in al,0xde
  420a3e:	repz int 0x39
  420a41:	xor    rsp,r14
  420a44:	sbb    BYTE PTR [rax],bh
  420a46:	(bad)  
  420a47:	mov    ecx,0x48c2124d
  420a4c:	pop    rcx
  420a4d:	rex add DWORD PTR [rax-0x54d397d5],esi
  420a54:	(bad)  
  420a55:	popf   
  420a56:	(bad)  
  420a57:	cmp    edi,DWORD PTR [rdi+rdi*1]
  420a5a:	jg     0x420ad9
  420a5c:	js     0x420ad7
  420a5e:	push   0x159306c7
  420a63:	push   rdx
  420a64:	(bad)  
  420a65:	sub    ch,BYTE PTR [rbx-0x795ba8ef]
  420a6b:	rcl    DWORD PTR [rbx+0x3f7c7f9b],1
  420a71:	cmp    bh,BYTE PTR [rsi-0x18fcd518]
  420a77:	(bad)  
  420a78:	addr32 xchg esp,eax
  420a7a:	ret    0xc7fd
  420a7d:	lahf   
  420a7e:	(bad)  
  420a7f:	sub    eax,ebp
  420a81:	and    eax,0x69d7fb2e
  420a86:	xchg   ebx,eax
  420a87:	outs   dx,BYTE PTR ds:[rsi]
  420a88:	(bad)  
  420a89:	(bad)  
  420a8a:	jle    0x420b0b
  420a8c:	cmp    esp,DWORD PTR [rcx+0x415629fe]
  420a92:	movabs ds:0xad03e48bfec6550e,eax
  420a9b:	imul   esi,DWORD PTR [rip+0x7d15bab1],0x1fb39754        # 0x7d57c556
  420aa5:	cmp    ah,BYTE PTR [rdi-0x44]
  420aa8:	adc    DWORD PTR [rsi+rcx*2+0x411029ca],0x64966ae7
  420ab3:	lahf   
  420ab4:	mov    dl,0xc9
  420ab6:	mov    dl,0xd1
  420ab8:	jae    0x420a3a
  420aba:	fld    QWORD PTR [rsi+0x49]
  420abd:	fnstsw WORD PTR ss:[rcx+0x71]
  420ac1:	jmp    0x420a66
  420ac3:	or     eax,esp
  420ac5:	adc    BYTE PTR [rax],dh
  420ac7:	rex.WRX jbe 0x420a50
  420aca:	mov    WORD PTR [rax-0x6a],es
  420acd:	xchg   edi,eax
  420ace:	fldcw  WORD PTR [rbp+0x0]
  420ad1:	fisttp QWORD PTR [rip+0x6762b7b5]        # 0x67a4c28c
  420ad7:	(bad)  
  420ad8:	xchg   DWORD PTR [rcx-0x6376083],eax
  420ade:	loop   0x420b0e
  420ae0:	add    eax,0x7307f213
  420ae5:	rex.R (bad) 
  420ae7:	leave  
  420ae8:	mov    cl,0x40
  420aea:	popf   
  420aeb:	xor    DWORD PTR [rbx+rsi*8-0x7d],ebp
  420aef:	loopne 0x420b12
  420af1:	int    0x2
  420af3:	mov    dl,0x17
  420af5:	pop    r12
  420af7:	mov    ?,WORD PTR [rax+0x79]
  420afa:	nop
  420afb:	mov    ebp,0x49ce96ae
  420b00:	or     esp,esi
  420b02:	and    edx,ebp
  420b04:	xor    al,0x4d
  420b06:	cmp    DWORD PTR [rbx+rbx*4],ebp
  420b09:	pop    rsi
  420b0a:	and    al,0x64
  420b0c:	ds scas rax,QWORD PTR es:[rdi]
  420b0f:	imul   esi,DWORD PTR [rdi-0x67],0x6eb68d47
  420b16:	lods   al,BYTE PTR ds:[rsi]
  420b17:	sbb    dl,bh
  420b19:	xlat   BYTE PTR ds:[rbx]
  420b1a:	(bad)  
  420b1b:	fidiv  WORD PTR [rax-0x49]
  420b1e:	(bad)  
  420b1f:	jbe    0x420abf
  420b21:	(bad)  
  420b22:	or     edx,edx
  420b24:	rex.WX lods rax,QWORD PTR ds:[rsi]
  420b26:	jmp    0x420ac3
  420b28:	and    al,0x65
  420b2a:	push   rbx
  420b2b:	xchg   esi,eax
  420b2c:	psadbw mm1,QWORD PTR [rdi-0x74]
  420b30:	lods   al,BYTE PTR ds:[rsi]
  420b31:	mov    ah,0x58
  420b33:	cwde   
  420b34:	mul    BYTE PTR [rbx+0x59c195d]
  420b3a:	js     0x420b71
  420b3c:	mov    dl,0x3b
  420b3e:	sub    edx,DWORD PTR [rip+0x165e4698]        # 0x16a051dc
  420b44:	in     eax,0x1d
  420b46:	(bad)  
  420b47:	(bad)  
  420b48:	ins    BYTE PTR es:[rdi],dx
  420b49:	mov    ch,0xd9
  420b4b:	lods   al,BYTE PTR ds:[rsi]
  420b4c:	xchg   ebp,eax
  420b4d:	(bad)  
  420b4e:	fisttp DWORD PTR [rbx+0x5481734f]
  420b54:	sti    
  420b55:	lods   al,BYTE PTR ds:[rsi]
  420b56:	cmp    ebx,ebx
  420b58:	mov    cl,0xb8
  420b5a:	xchg   edx,eax
  420b5b:	pop    rsp
  420b5c:	lods   al,BYTE PTR ds:[rsi]
  420b5d:	(bad)  
  420b5e:	sbb    ch,0x1
  420b61:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  420b62:	(bad)  
  420b63:	(bad)  
  420b64:	fstp   DWORD PTR [rbp-0x20]
  420b67:	jle    0x420b27
  420b69:	pop    rdx
  420b6a:	sbb    ebp,DWORD PTR [rbp-0x3e18925]
  420b70:	add    eax,0x34866a03
  420b75:	(bad)  
  420b76:	xchg   edi,eax
  420b77:	pushf  
  420b78:	rex.WX adc al,0xf8
  420b7b:	and    dh,bl
  420b7d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  420b7e:	lahf   
  420b7f:	repnz stc 
  420b81:	jb     0x420b21
  420b83:	loopne 0x420c00
  420b85:	sbb    al,0xed
  420b87:	xchg   esi,eax
  420b88:	(bad)  
  420b89:	(bad)  
  420b8a:	icebp  
  420b8b:	rex.RXB scas al,BYTE PTR es:[rdi]
  420b8d:	and    BYTE PTR [rsi+0x6ea2d31f],cl
  420b93:	(bad)  
  420b94:	sahf   
  420b95:	sub    esp,DWORD PTR [rdx]
  420b97:	jb     0x420b9a
  420b99:	cdq    
  420b9a:	jmp    0x420bf6
  420b9c:	(bad)  
  420b9d:	jle    0x420ba1
  420b9f:	adc    eax,0xdd4de79f
  420ba4:	jno    0x420c07
  420ba6:	sbb    BYTE PTR [rip+0xffffffffa070a522],dh        # 0xffffffffa0b2b0ce
  420bac:	out    0xc,al
  420bae:	icebp  
  420baf:	adc    r14,QWORD PTR [r9]
  420bb2:	add    DWORD PTR [rax],edi
  420bb4:	xchg   edi,eax
  420bb5:	rex.WRB adc rax,0xffffffff94f00f3c
  420bbb:	push   rbp
  420bbc:	jns    0x420bf7
  420bbe:	mov    ch,0xc7
  420bc0:	xchg   BYTE PTR [rax+rcx*8],dh
  420bc3:	mov    esp,0xa6899a58
  420bc8:	out    0xe8,al
  420bca:	mov    esi,0x1104df95
  420bcf:	rex.WB movabs al,ds:0xb3e9842adf004734
  420bd9:	loope  0x420b6e
  420bdb:	std    
  420bdc:	loope  0x420c4c
  420bde:	mov    edi,0xca4b6165
  420be3:	lahf   
  420be4:	cmp    DWORD PTR [rbp-0x6d],ebx
  420be7:	jl     0x420c57
  420be9:	xor    ecx,DWORD PTR [rip+0xffffffff8732ff86]        # 0xffffffff87750b75
  420bef:	adc    esp,ebp
  420bf1:	pop    rax
  420bf2:	or     al,0xe6
  420bf4:	jmp    0x74a13820
  420bf9:	pop    rcx
  420bfa:	retf   
  420bfb:	in     al,0xe5
  420bfd:	(bad)  
  420bfe:	addr32 mov ds:0xf383bdcb,eax
  420c04:	mov    bl,0xb
  420c06:	repz pop rdi
  420c08:	cli    
  420c09:	sti    
  420c0a:	ds (bad) 
  420c0c:	mov    esi,0xd9b745ff
  420c11:	(bad)  
  420c12:	mov    eax,0x2dfa1577
  420c17:	stc    
  420c18:	cmp    DWORD PTR [rdi+rcx*4],edi
  420c1b:	hlt    
  420c1c:	sbb    bl,dh
  420c1e:	xor    cl,dl
  420c20:	or     DWORD PTR ss:[rdi],edi
  420c23:	imul   ebx,DWORD PTR [rsi-0x4c5c63eb],0x8f8eef77
  420c2d:	cs mov ebx,0x3679726b
  420c33:	shr    BYTE PTR [rbx-0x6],0x6b
  420c37:	rep outs dx,DWORD PTR ds:[rsi]
  420c39:	mov    ah,0xa0
  420c3b:	fcomp  st(0)
  420c3d:	movabs eax,ds:0x1bccbd7b467a9a8d
  420c46:	sar    DWORD PTR [rdx+riz*4+0x229b08a0],1
  420c4d:	rex.RB outs dx,BYTE PTR ds:[rsi]
  420c4f:	cwde   
  420c50:	(bad)  
  420c51:	loope  0x420c12
  420c53:	xchg   ebp,eax
  420c54:	icebp  
  420c55:	add    ecx,DWORD PTR [rax-0x72]
  420c58:	imul   BYTE PTR [rdi+0x15633326]
  420c5e:	add    al,0x5e
  420c60:	stos   DWORD PTR es:[rdi],eax
  420c61:	movabs ds:0xf1447d134e36ca9c,al
  420c6a:	in     eax,0xc0
  420c6c:	(bad)  
  420c6d:	(bad)  
  420c6e:	cmp    eax,DWORD PTR [rdi+0x1c6a374f]
  420c74:	cmc    
  420c75:	addr32 mov edx,0xd79dba64
  420c7b:	(bad)  
  420c7c:	(bad)  
  420c7d:	movabs ds:0x38693b8cefbb8066,eax
  420c86:	cmp    ebp,edx
  420c88:	fstp   st(1)
  420c8a:	gs xchg edx,eax
  420c8c:	pop    rsi
  420c8d:	pop    rbp
  420c8e:	icebp  
  420c8f:	in     al,dx
  420c90:	fisttp QWORD PTR [rax]
  420c92:	loop   0x420cc9
  420c94:	out    0xfb,al
  420c96:	fiadd  WORD PTR [rcx-0x67393e3d]
  420c9c:	lock pop rbp
  420c9e:	mov    edx,0x474f2e5c
  420ca3:	cmp    esp,esp
  420ca5:	loope  0x420d09
  420ca7:	(bad)  
  420ca8:	retf   0xdde8
  420cab:	movabs r15,0xf321687558a5a6e5
  420cb5:	rex.RB mov r8d,0xdea9974d
  420cbb:	mov    ah,0xa9
  420cbd:	ja     0x420d00
  420cbf:	fisub  DWORD PTR [rcx+riz*2]
  420cc2:	(bad)  
  420cc3:	rcl    DWORD PTR [rax-0x79],0x7a
  420cc7:	movabs ds:0xd926015d13a8f56b,al
  420cd0:	rex.RX sbb al,0xb1
  420cd3:	cdq    
  420cd4:	(bad)  
  420cd5:	(bad)  
  420cd6:	jnp    0x420d49
  420cd8:	(bad)  
  420cd9:	not    DWORD PTR [rcx+0x486a4b38]
  420cdf:	(bad)  
  420ce0:	sub    al,0x18
  420ce2:	push   0x7
  420ce4:	sub    eax,0x51
  420ce7:	stos   DWORD PTR es:[rdi],eax
  420ce8:	outs   dx,BYTE PTR ds:[rsi]
  420ce9:	rex.RXB (bad) 
  420ceb:	jl     0x420d4d
  420ced:	cmp    eax,0x87fce7c
  420cf2:	(bad)  
  420cf3:	loop   0x420d48
  420cf5:	fsubr  st,st(2)
  420cf7:	ror    edi,1
  420cf9:	loope  0x420d76
  420cfb:	fucom  st(6)
  420cfd:	lock jge 0x420c8d
  420d00:	scas   eax,DWORD PTR es:[rdi]
  420d01:	retf   0xd976
  420d04:	and    al,0xcd
  420d06:	sub    eax,0xa23246bf
  420d0b:	xlat   BYTE PTR ds:[rbx]
  420d0c:	lods   eax,DWORD PTR ds:[rsi]
  420d0d:	rex.RXB or r11d,DWORD PTR [r11+0x1a]
  420d11:	mov    ss,WORD PTR [rip+0x7e54e9b4]        # 0x7e96f6cb
  420d17:	movabs ds:0xcf146022ce5aa0a7,al
  420d20:	sub    eax,0xeccb5a4c
  420d25:	push   rsi
  420d26:	pushf  
  420d27:	ret    0xd0df
  420d2a:	cdq    
  420d2b:	in     eax,0x7c
  420d2d:	mov    DWORD PTR [rcx+0x2b],esp
  420d30:	xchg   esp,eax
  420d31:	jmp    QWORD PTR [rdx+0x123fca15]
  420d37:	xor    eax,DWORD PTR [rdi]
  420d39:	add    ch,BYTE PTR [rbx+0x60]
  420d3c:	test   al,0xcb
  420d3f:	repnz (bad) 
  420d41:	stos   BYTE PTR es:[rdi],al
  420d42:	(bad)  
  420d43:	(bad)  
  420d44:	scas   al,BYTE PTR es:[rdi]
  420d45:	(bad)  
  420d46:	ds xchg edx,eax
  420d48:	rex.RXB jbe 0x420d79
  420d4b:	rex xchg ebp,eax
  420d4d:	(bad)  
  420d4e:	std    
  420d4f:	lods   al,BYTE PTR ds:[rsi]
  420d50:	nop
  420d51:	out    0xa4,al
  420d53:	popf   
  420d54:	rex.WRB pushf 
  420d56:	or     BYTE PTR [rsi-0x7e],dh
  420d59:	iret   
  420d5a:	xor    al,0x37
  420d5c:	(bad)  
  420d5d:	mov    WORD PTR [rax+0x6bdffd37],es
  420d63:	js     0x420cf8
  420d65:	adc    eax,DWORD PTR [rbp+0x7154734]
  420d6b:	test   ebx,edx
  420d6d:	rex.WRXB
  420d6e:	rex.RB cli 
  420d70:	ja     0x420d6b
  420d72:	sbb    eax,0x31f0bfd4
  420d77:	pop    rdi
  420d78:	sub    al,0xc8
  420d7a:	and    al,0x60
  420d7c:	(bad)  
  420d7d:	(bad)  
  420d7e:	(bad)  
  420d7f:	lea    ebp,[rbp+0x24]
  420d82:	(bad)  
  420d83:	pushf  
  420d84:	cdq    
  420d85:	adc    eax,0x8c517ec1
  420d8a:	mov    edx,ecx
  420d8c:	sbb    eax,0x8e177227
  420d91:	xor    esi,DWORD PTR [rbx-0x6aaf4caf]
  420d97:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  420d98:	(bad)  
  420d99:	js     0x420d74
  420d9b:	mov    eax,0x94a6a622
  420da0:	jns    0x420dfd
  420da2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  420da3:	jl     0x420d79
  420da5:	rex.W loopne 0x420d62
  420da8:	adc    al,0x38
  420daa:	rex.WB mov r10b,0x88
  420dad:	add    DWORD PTR [rbp+0x3ade041c],ebp
  420db3:	lods   al,BYTE PTR ds:[rsi]
  420db4:	rex.RX (bad) 
  420db6:	dec    edi
  420db8:	mov    cl,0xcb
  420dba:	popf   
  420dbb:	mov    dh,0xc9
  420dbd:	leave  
  420dbe:	or     al,0x23
  420dc0:	mov    es,ecx
  420dc2:	mov    bl,0xcd
  420dc4:	(bad)  
  420dc5:	(bad)  
  420dc6:	sbb    al,0x99
  420dc8:	cmc    
  420dc9:	(bad)  
  420dca:	movabs eax,ds:0x30ae60765a4e2e2b
  420dd3:	or     eax,ebp
  420dd5:	xchg   BYTE PTR [rbp+0x4c83b096],al
  420ddb:	test   al,0x32
  420ddd:	push   rax
  420dde:	sub    dh,BYTE PTR [rax-0x6b74377c]
  420de4:	xor    DWORD PTR [rdx+0x70],eax
  420de7:	xor    al,0x92
  420de9:	popf   
  420dea:	loopne 0x420e4f
  420dec:	jns    0x420e33
  420dee:	mov    edx,ebx
  420df0:	leave  
  420df1:	or     edx,DWORD PTR [rdx-0x5b]
  420df4:	clc    
  420df5:	(bad)  
  420df6:	push   fs
  420df8:	scas   al,BYTE PTR es:[rdi]
  420df9:	(bad)  
  420dfa:	outs   dx,DWORD PTR ds:[rsi]
  420dfb:	(bad)  
  420dfc:	imul   ebx,DWORD PTR [rdx+0x185fe6cb],0xff68a90b
  420e06:	(bad)  
  420e07:	jge    0x420dcc
  420e09:	fcmovnbe st,st(4)
  420e0b:	adc    ebx,esi
  420e0d:	(bad)  
  420e0e:	(bad)  
  420e0f:	cli    
  420e10:	xor    edi,eax
  420e12:	stos   DWORD PTR es:[rdi],eax
  420e13:	mov    cl,0x4c
  420e15:	pop    rdi
  420e16:	stos   BYTE PTR es:[rdi],al
  420e17:	imul   edi,edi,0x6ccbdc45
  420e1d:	sbb    eax,0x854d0401
  420e22:	jne    0x420da6
  420e24:	mov    ebp,0x756ad361
  420e29:	stos   BYTE PTR es:[rdi],al
  420e2a:	fld    DWORD PTR [rdi]
  420e2c:	xchg   ecx,eax
  420e2d:	loop   0x420db9
  420e2f:	(bad)  
  420e30:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  420e31:	push   rax
  420e32:	xlat   BYTE PTR ds:[rbx]
  420e33:	sub    edi,DWORD PTR [rcx-0x7b]
  420e36:	pop    rsp
  420e37:	pop    rbp
  420e38:	clc    
  420e39:	stos   BYTE PTR es:[rdi],al
  420e3a:	sbb    DWORD PTR [ecx],edi
  420e3d:	xor    ch,BYTE PTR [rsi+rcx*4-0x36]
  420e41:	nop
  420e42:	push   rax
  420e43:	mov    edi,0x66a16e33
  420e48:	cmp    BYTE PTR [rax-0x6ac4de4c],dl
  420e4e:	or     al,0xed
  420e50:	rex (bad) 
  420e52:	or     al,0xe6
  420e54:	fstp   DWORD PTR [rax+rcx*2]
  420e57:	rex.RB jle 0x420e30
  420e5a:	rex.W movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  420e5c:	xchg   edx,eax
  420e5d:	je     0x420e32
  420e5f:	imul   BYTE PTR [rbp-0x66354177]
  420e65:	retf   
  420e66:	pop    rax
  420e67:	ffree  st(3)
  420e69:	addr32 rex.XB (bad) 
  420e6c:	push   rdx
  420e6d:	pop    rcx
  420e6e:	mov    al,0xab
  420e70:	scas   al,BYTE PTR es:[rdi]
  420e71:	sub    ch,ch
  420e73:	(bad)  
  420e74:	leave  
  420e75:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  420e76:	hlt    
  420e77:	shr    eax,1
  420e79:	xchg   esp,eax
  420e7a:	rex.RB lahf 
  420e7c:	jle    0x420e08
  420e7e:	test   BYTE PTR [rdi],bl
  420e80:	(bad)  
  420e81:	sti    
  420e82:	rex.XB mov r12d,0x6c8f1b0
  420e88:	int3   
  420e89:	pop    rsp
  420e8a:	sti    
  420e8b:	lods   al,BYTE PTR ds:[rsi]
  420e8c:	cmp    ch,BYTE PTR [rbp+rbx*4-0x15]
  420e90:	loope  0x420eef
  420e92:	(bad)  
  420e93:	rex.W fcom QWORD PTR [rbx+0x7798af3b]
  420e9a:	loopne 0x420e82
  420e9c:	rex.WRXB scas al,BYTE PTR es:[rdi]
  420e9e:	cmp    cl,ch
  420ea0:	and    ebp,0x139c6b22
  420ea6:	add    eax,0xd9e618ae
  420eab:	loop   0x420e81
  420ead:	jle    0x420f21
  420eaf:	adc    eax,0xe831cdf6
  420eb4:	cmc    
  420eb5:	rex.RB jg 0x420e9b
  420eb8:	adc    eax,ecx
  420eba:	rex.RX pop rcx
  420ebc:	loope  0x420f2d
  420ebe:	xlat   BYTE PTR es:[rbx]
  420ec0:	rex.WX xor rcx,QWORD PTR [rbp+0xa5649ed]
  420ec7:	hlt    
  420ec8:	or     spl,bl
  420ecb:	mov    DWORD PTR [rax+rdx*2-0x3a],ebp
  420ecf:	(bad)  
  420ed0:	push   rbx
  420ed1:	hlt    
  420ed2:	add    esp,DWORD PTR [rax+0x3]
  420ed5:	sti    
  420ed6:	xor    eax,0xa3609181
  420edb:	(bad)  
  420edc:	mov    bh,0x95
  420ede:	int    0xde
  420ee0:	movabs eax,ds:0xd476bc6455356ff8
  420ee9:	rex.W (bad) 
  420eeb:	mov    cl,0x17
  420eed:	out    dx,al
  420eee:	push   rdx
  420eef:	in     al,dx
  420ef0:	xor    al,0xdb
  420ef2:	ds (bad) 
  420ef4:	rex.WRB js 0x420e9f
  420ef7:	hlt    
  420ef8:	jb     0x420f13
  420efa:	mov    ebp,ds
  420efc:	jbe    0x420ed4
  420efe:	mov    esp,0x4cbe15c0
  420f03:	jns    0x420e8d
  420f05:	idiv   BYTE PTR [rcx+rdi*4+0x59213658]
  420f0c:	and    al,0x83
  420f0e:	(bad)  
  420f0f:	cmp    DWORD PTR [rdx+0xa785276],edi
  420f15:	out    dx,eax
  420f16:	outs   dx,BYTE PTR ds:[rsi]
  420f17:	retf   0x9b19
  420f1a:	mov    eax,DWORD PTR [rcx+0x7c]
  420f1d:	ret    
  420f1e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  420f1f:	push   rsi
  420f20:	and    ebp,ebx
  420f22:	xchg   ebp,eax
  420f23:	shr    BYTE PTR [rax-0x2c],0x40
  420f27:	jbe    0x420f34
  420f29:	pushf  
  420f2a:	pop    rbx
  420f2b:	sub    eax,DWORD PTR [rsi+0x61]
  420f2e:	(bad)  
  420f2f:	(bad)  
  420f30:	sub    al,0x25
  420f32:	sbb    BYTE PTR [rdi-0x3e6cc2e0],dh
  420f38:	ins    DWORD PTR es:[rdi],dx
  420f39:	cwde   
  420f3a:	mov    BYTE PTR [rdx-0x32],ah
  420f3d:	stc    
  420f3e:	mov    eax,0xa17eedac
  420f43:	add    al,0x26
  420f45:	mov    edx,0xad2ee41
  420f4a:	(bad)  
  420f4b:	pop    rcx
  420f4c:	xchg   edx,eax
  420f4d:	sti    
  420f4e:	xchg   ebp,eax
  420f4f:	mov    cl,al
  420f51:	(bad)  
  420f52:	mov    esp,0x45d43690
  420f57:	jmp    0x6836a442
  420f5c:	mov    dh,0x49
  420f5e:	xchg   esi,eax
  420f5f:	rex.WRB leave 
  420f61:	scas   eax,DWORD PTR es:[rdi]
  420f62:	mov    DWORD PTR [rbp-0x25b5b2bd],edi
  420f68:	dec    BYTE PTR [rip+0x3324b548]        # 0x3366c4b6
  420f6e:	rcr    BYTE PTR [rbx+rax*8-0x26b36b65],1
  420f75:	cwd    
  420f77:	pop    QWORD PTR ss:[rbx+0x4d92ae19]
  420f7e:	sub    al,0x9c
  420f80:	jl     0x420fb2
  420f82:	push   rbp
  420f83:	add    al,0xac
  420f85:	sub    DWORD PTR [rbp-0x45],0x22
  420f89:	fsubr  st(5),st
  420f8b:	(bad)  
  420f8c:	in     al,0x4b
  420f8e:	cmp    ch,BYTE PTR [rbx+0x2b]
  420f91:	in     al,0xd1
  420f93:	cmp    eax,edi
  420f95:	rex.RXB outs dx,BYTE PTR ds:[rsi]
  420f97:	fisubr DWORD PTR [rcx]
  420f99:	in     al,dx
  420f9a:	enter  0x9277,0x6b
  420f9e:	adc    r9d,DWORD PTR [rcx]
  420fa1:	mov    eax,0x4fe5bd29
  420fa6:	(bad)  
  420fa7:	adc    BYTE PTR [rax],bh
  420fa9:	xchg   eax,esp
  420fab:	xchg   ebx,eax
  420fac:	jmp    0x3620fc76
  420fb1:	call   0x1c6b325b
  420fb6:	shl    DWORD PTR [rbx],1
  420fb8:	div    DWORD PTR [rax+0x6ed2485f]
  420fbe:	push   0x335947c
  420fc3:	(bad)  
  420fc4:	out    0x41,al
  420fc6:	rex.WRXB fsubr QWORD PTR [r11+r8*2-0x3dd9d4b5]
  420fce:	rex.XB adc r8b,sil
  420fd1:	(bad)  
  420fd2:	lods   al,BYTE PTR ds:[rsi]
  420fd3:	sub    al,0x4e
  420fd5:	outs   dx,BYTE PTR ds:[rsi]
  420fd6:	cmp    dh,ch
  420fd8:	fucom  st(6)
  420fda:	mov    ch,cl
  420fdc:	outs   dx,DWORD PTR ds:[rsi]
  420fdd:	out    dx,eax
  420fde:	(bad)  
  420fdf:	ja     0x420f68
  420fe1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  420fe2:	out    dx,eax
  420fe3:	(bad)  
  420fe4:	idiv   esi
  420fe6:	pushf  
  420fe7:	sar    BYTE PTR [rdi-0x4a0060a],1
  420fed:	mov    ebp,0xf9192ad8
  420ff2:	mov    ah,0xf9
  420ff4:	push   0x33
  420ff6:	test   eax,0x72e3e7ef
  420ffb:	data16 xlat BYTE PTR ds:[rbx]
  420ffd:	rex.WB cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  420fff:	rex.X ret 
  421001:	rex.WRXB jge 0x420fbd
  421004:	mov    esp,0xb89c666d
  421009:	xchg   esp,eax
  42100a:	mov    ebx,0xa016ba92
  42100f:	mov    WORD PTR [rdx+0x19],cs
  421012:	add    al,0xc8
  421014:	cld    
  421015:	sbb    al,0xad
  421017:	(bad)  
  421018:	imul   ebp,DWORD PTR [rdx+rbp*1-0x46],0xab65424
  421020:	mov    esp,0xcf48bb84
  421025:	jae    0x421044
  421027:	adc    DWORD PTR [rax],ebx
  421029:	xchg   edx,eax
  42102a:	adc    edx,ecx
  42102c:	mov    ebx,0xb1644e1f
  421031:	xor    bl,BYTE PTR [rcx+0x56]
  421034:	add    al,0x82
  421036:	fisttp WORD PTR [rax+0x4b259c25]
  42103c:	pop    rbp
  42103d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42103e:	sub    eax,0x744c52a8
  421043:	sub    dh,bh
  421045:	xchg   edx,eax
  421046:	jrcxz  0x421001
  421048:	pop    rcx
  421049:	gs push rsi
  42104b:	in     al,dx
  42104c:	out    0x11,al
  42104e:	xchg   edi,eax
  42104f:	movabs ds:0x902aeb0b5a2c6c69,al
  421058:	sub    ah,BYTE PTR [rdi-0x5a98e64c]
  42105e:	test   al,0xe6
  421060:	(bad)  
  421061:	jl     0x4210b6
  421063:	and    DWORD PTR [rcx-0x2b],ebx
  421066:	mov    bl,0xef
  421068:	cmp    eax,0x7a4b38f6
  42106d:	and    ebp,DWORD PTR [rcx+rsi*1+0x7b1988ad]
  421074:	movabs gs:0x1dac1557e09e3a59,eax
  42107e:	xchg   edi,eax
  42107f:	adc    al,0x49
  421081:	(bad)  
  421082:	outs   dx,BYTE PTR ds:[rsi]
  421083:	jae    0x421063
  421085:	(bad)  
  421086:	add    al,0x5
  421088:	(bad)  
  421089:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  42108a:	rcl    DWORD PTR [rax+0x70],0x8
  42108e:	and    al,0xb
  421090:	cmp    cl,bl
  421092:	jb     0x42108f
  421094:	shr    DWORD PTR [rdi+rdx*8+0x56db2cfd],1
  42109b:	loopne 0x421026
  42109d:	mov    ebp,0x96de767b
  4210a2:	jg     0x4210db
  4210a4:	jae    0x421044
  4210a6:	(bad)  
  4210a7:	rex.WR (bad) 
  4210a9:	out    dx,al
  4210aa:	xor    BYTE PTR [rcx-0x68c29d6e],bh
  4210b0:	rex.WXB scas al,BYTE PTR es:[rdi]
  4210b2:	adc    edi,DWORD PTR [rsi-0x691c6296]
  4210b8:	rol    DWORD PTR [rsi],0x92
  4210bb:	cmp    BYTE PTR [rbx+0x585e5128],ah
  4210c1:	mov    al,0x8
  4210c3:	lods   eax,DWORD PTR ds:[rsi]
  4210c4:	jmp    0x421090
  4210c6:	mov    edi,0xcc4274a0
  4210cb:	(bad)  
  4210cc:	sub    edi,DWORD PTR [rcx-0x1d]
  4210cf:	jns    0x4210bc
  4210d1:	scas   al,BYTE PTR es:[rdi]
  4210d2:	mov    ecx,0xda915dd8
  4210d7:	(bad)  
  4210d8:	jno    0x421130
  4210da:	pop    rsp
  4210db:	or     al,0xc7
  4210dd:	lahf   
  4210de:	mov    dl,0x6a
  4210e0:	rex.X sub DWORD PTR [rsi-0x75a7bd1a],esi
  4210e7:	std    
  4210e8:	stos   DWORD PTR es:[rdi],eax
  4210e9:	sbb    BYTE PTR [rdx],0xc4
  4210ec:	xchg   ebx,eax
  4210ed:	sub    al,0xc4
  4210ef:	fbstp  TBYTE PTR [rbx+0x37]
  4210f2:	adc    al,0xce
  4210f4:	icebp  
  4210f5:	mov    bl,0x72
  4210f7:	in     eax,dx
  4210f8:	imul   esp,DWORD PTR [rbx],0x89b31396
  4210fe:	xchg   DWORD PTR [rsi-0x53d0bcb5],edx
  421104:	idiv   BYTE PTR [rcx+0x380544d6]
  42110a:	rol    DWORD PTR [rbx],0x28
  42110d:	nop
  42110e:	int3   
  42110f:	mov    al,0xcd
  421111:	cmp    BYTE PTR [rdi-0x44],cl
  421114:	xor    eax,0xdd432d95
  421119:	(bad)  
  42111a:	(bad)  
  42111b:	add    eax,0x1a992417
  421120:	xchg   ebp,eax
  421121:	(bad)  
  421122:	movsxd r14,DWORD PTR [rsi-0x48]
  421126:	(bad)  
  421127:	mov    ebx,0x865bc836
  42112c:	stos   DWORD PTR es:[rdi],eax
  42112d:	mov    edi,0x8cb797b8
  421132:	rex.WB
  421133:	rex.WXB xlat BYTE PTR ds:[rbx]
  421135:	sbb    BYTE PTR [rbx],ch
  421137:	imul   ecx,edx,0x5c
  42113a:	add    cl,BYTE PTR [rbp+0x28]
  42113d:	rex.WR movabs rdx,0x930ef190477959a
  421147:	int    0xcb
  421149:	sub    DWORD PTR [rdi-0x79],ebp
  42114c:	icebp  
  42114d:	mov    ebp,0x901d01a5
  421152:	bnd ret 0x1ddf
  421156:	mov    BYTE PTR [rcx-0x5a],0x6d
  42115a:	mov    eax,edx
  42115c:	xor    DWORD PTR [rbx-0x2fc7f159],0xaf93cfb0
  421166:	sti    
  421167:	sub    ecx,DWORD PTR [rcx-0x8]
  42116a:	rex.WB out 0xd1,eax
  42116d:	mov    eax,DWORD PTR [rsi]
  42116f:	and    ebx,DWORD PTR [rsi]
  421171:	xchg   edi,eax
  421172:	rex.R (bad) 
  421175:	sti    
  421176:	or     al,BYTE PTR [rbx]
  421178:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  421179:	rex.RB
  42117a:	rex.WR scas al,BYTE PTR es:[rdi]
  42117c:	xchg   esi,eax
  42117d:	or     eax,0xcb357294
  421182:	sbb    al,cl
  421184:	lods   eax,DWORD PTR ds:[rsi]
  421185:	mov    DWORD PTR [rbx],edx
  421187:	and    ecx,DWORD PTR [rax+0x3d047d99]
  42118d:	rex.RB fnstcw WORD PTR [r8]
  421190:	(bad)  
  421191:	sub    al,0xe2
  421193:	(bad)  
  421194:	sub    eax,DWORD PTR [rax]
  421196:	cmp    esp,DWORD PTR [rbp+rbx*4+0x26520c69]
  42119d:	xor    QWORD PTR [rdi],rbx
  4211a0:	lods   eax,DWORD PTR ds:[rsi]
  4211a1:	adc    ecx,esp
  4211a3:	test   al,0x97
  4211a5:	sbb    edi,esp
  4211a7:	add    DWORD PTR [rsi+0x354c8577],eax
  4211ad:	scas   al,BYTE PTR es:[rdi]
  4211ae:	add    BYTE PTR [rdi+0x49],ch
  4211b1:	xchg   ebx,eax
  4211b2:	sub    eax,0x4747fdce
  4211b7:	shl    BYTE PTR [rbp+0x4e],1
  4211ba:	or     DWORD PTR [rsi],esp
  4211bc:	in     al,dx
  4211bd:	std    
  4211be:	pop    rax
  4211bf:	pop    rsi
  4211c0:	stos   BYTE PTR es:[rdi],al
  4211c1:	mov    bh,0xc3
  4211c3:	mov    BYTE PTR [rdi+0x53aa5add],ch
  4211c9:	scas   al,BYTE PTR es:[rdi]
  4211ca:	cmp    BYTE PTR [rdi+rdi*8+0x1811a1b4],dh
  4211d1:	pop    rsi
  4211d2:	push   rbp
  4211d3:	int    0x5c
  4211d5:	pop    rsp
  4211d6:	(bad)  
  4211d7:	xor    esi,DWORD PTR [rbx+0x794c4b48]
  4211dd:	sub    BYTE PTR [rsp+rax*1+0xa0b497c],bh
  4211e4:	rex.WRB movabs r15,0xeaad3c1994c58a3b
  4211ee:	pmaddwd mm0,mm5
  4211f1:	movsxd edx,ebp
  4211f3:	test   eax,0xf890394b
  4211f8:	rex
  4211f9:	rex.WXB rol BYTE PTR [r8+r9*1+0x2],1
  4211fe:	mov    edx,0x562f2032
  421203:	mov    al,0x49
  421205:	sub    bl,0x62
  421208:	ds mul ebp
  42120b:	cmp    DWORD PTR [rcx+0x11],0x37
  42120f:	jrcxz  0x4211d1
  421211:	in     al,dx
  421212:	(bad)  
  421213:	cmp    dl,BYTE PTR [rsi]
  421215:	jo     0x4211ea
  421217:	(bad)  [rbp+0x52]
  42121a:	(bad)  
  42121b:	jg     0x42127a
  42121d:	(bad)  
  42121e:	xchg   ebx,eax
  42121f:	(bad)  
  421220:	in     eax,dx
  421221:	push   rcx
  421222:	shl    BYTE PTR [rdi-0x2e513e3b],cl
  421228:	or     r12d,DWORD PTR [r11-0x17]
  42122c:	outs   dx,BYTE PTR ds:[rsi]
  42122d:	jl     0x4212ab
  42122f:	rex.W (bad) 
  421231:	ja     0x4211c4
  421233:	push   rcx
  421234:	outs   dx,BYTE PTR ds:[rsi]
  421235:	adc    DWORD PTR [rcx],eax
  421237:	(bad)  
  421238:	jmp    0x59bbac2b
  42123d:	rex.W (bad) 
  42123f:	mov    ecx,0x726aa359
  421244:	cmp    DWORD PTR [rcx+rcx*2+0x53666c0a],0xffffffbe
  42124c:	jae    0x421231
  42124e:	loopne 0x42126b
  421250:	outs   dx,BYTE PTR ds:[rsi]
  421251:	push   rbp
  421252:	hlt    
  421253:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  421254:	pushf  
  421255:	and    al,0x12
  421257:	and    eax,0x4a859748
  42125c:	jmp    0xffffffffd01cae01
  421261:	adc    BYTE PTR [rcx-0x67eefc87],dh
  421267:	int    0xea
  421269:	int3   
  42126a:	mov    edi,DWORD PTR [rbx-0x25]
  42126d:	neg    DWORD PTR [rbp+rsi*1-0x336724fe]
  421274:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  421275:	mov    esp,0x8abb3882
  42127a:	addr32 push rbp
  42127c:	(bad)  
  42127d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  42127e:	or     DWORD PTR [rax+0x6f],0xffffffc8
  421282:	(bad)  
  421283:	movabs ds:0xeebaf2f5f9af727d,eax
  42128c:	cmp    cl,ch
  42128e:	scas   eax,DWORD PTR es:[rdi]
  42128f:	movd   mm3,DWORD PTR [rdi+0x524da752]
  421296:	(bad)  
  421297:	jne    0x421237
  421299:	jb     0x421300
  42129b:	outs   dx,BYTE PTR ds:[rsi]
  42129c:	in     al,0x7d
  42129e:	rex.X mov esi,0x2615d305
  4212a4:	stc    
  4212a5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4212a6:	rex (bad) 
  4212a8:	jmp    0x18f568a4
  4212ad:	rex.R xchg edi,eax
  4212af:	add    BYTE PTR [rbx-0x23],ch
  4212b2:	fiadd  WORD PTR [rdx]
  4212b4:	mov    bl,0x2b
  4212b6:	out    0x27,al
  4212b8:	add    BYTE PTR [rcx],dl
  4212ba:	lock ss cld 
  4212bd:	cmp    al,0xb7
  4212bf:	test   BYTE PTR [rdx],cl
  4212c1:	rex.WRXB
  4212c2:	rex.WRX fisttp WORD PTR [rax-0x17d0a25]
  4212c9:	xchg   esi,eax
  4212ca:	pop    rbx
  4212cb:	jp     0x421253
  4212cd:	and    DWORD PTR [rsi+0x5],ecx
  4212d0:	icebp  
  4212d1:	test   BYTE PTR [rdx-0x54],0xbe
  4212d5:	std    
  4212d6:	scas   al,BYTE PTR es:[rdi]
  4212d7:	fwait
  4212d8:	shl    BYTE PTR [rbx+0x79da3675],1
  4212de:	repnz (bad) 
  4212e0:	(bad)  
  4212e1:	rex.WR xor r11b,dil
  4212e4:	movabs ds:0x8776a2bb0a9b084f,al
  4212ed:	mov    ebx,0xd0de9ddb
  4212f2:	pop    rsp
  4212f3:	rex.RXB loope 0x421343
  4212f6:	mov    WORD PTR [rsi+0x54],cs
  4212f9:	movabs ds:0x5b1f2e073c683946,al
  421302:	rex.B cdq 
  421304:	jle    0x421360
  421306:	rol    BYTE PTR [rbp+0x76],cl
  421309:	imul   esi,DWORD PTR [rsi],0x5a
  42130c:	int3   
  42130d:	sbb    BYTE PTR [rsi+0x4e],cl
  421310:	repz pop rdx
  421312:	mov    WORD PTR [rip+0x76f4cdba],cs        # 0x7736e0d2
  421318:	movabs eax,ds:0xdba11e1e2e76bfbc
  421321:	xchg   edx,eax
  421322:	movsxd esi,esi
  421324:	xchg   ecx,eax
  421325:	enter  0x6d40,0x3a
  421329:	push   rbp
  42132a:	add    DWORD PTR [rdx-0x100b277a],ebx
  421330:	out    dx,al
  421331:	add    cl,dh
  421333:	sbb    al,0x7a
  421335:	jnp    0x421366
  421337:	xchg   BYTE PTR [rdi+0x6a4a6bf9],bl
  42133d:	clc    
  42133e:	and    BYTE PTR [rbp-0x294186d9],ch
  421344:	(bad)  
  421345:	push   rax
  421346:	out    dx,al
  421347:	xchg   ebx,eax
  421348:	mov    edi,0x62c0412e
  42134d:	mov    dh,0x69
  42134f:	sahf   
  421350:	jb     0x4213aa
  421352:	rcl    ecx,1
  421354:	sub    DWORD PTR [rip+0x691a92cd],eax        # 0x695ca627
  42135a:	neg    al
  42135c:	sub    ebp,0x12
  42135f:	adc    DWORD PTR [rbx-0x5c3e4b70],esi
  421365:	(bad)  
  421366:	ret    
  421367:	cdq    
  421368:	out    dx,al
  421369:	test   al,0x51
  42136b:	test   al,dh
  42136d:	(bad)  
  42136e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42136f:	(bad)  
  421370:	jb     0x42137e
  421372:	(bad)  
  421373:	cmp    edx,esi
  421375:	or     QWORD PTR [rax-0x504665c2],rdx
  42137c:	rex.WXB (bad) 
  42137e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42137f:	push   0x19140206
  421384:	and    ecx,edx
  421386:	mov    dl,0x6
  421388:	mov    ?,WORD PTR [rip+0xfffffffff96b82ff]        # 0xfffffffff9ad968d
  42138e:	rol    BYTE PTR [rbx],cl
  421390:	movabs eax,ds:0xd3cc83288d32fd38
  421399:	mov    DWORD PTR [rax+0x6e],ecx
  42139c:	and    ah,bl
  42139e:	push   rax
  42139f:	neg    BYTE PTR [rax-0x79]
  4213a2:	jae    0x4213b4
  4213a4:	repnz pop rax
  4213a6:	sbb    dl,BYTE PTR [rdx]
  4213a8:	es rex.WXB
  4213aa:	data16 (bad) 
  4213ac:	rex.X lods al,BYTE PTR ds:[rsi]
  4213ae:	shl    DWORD PTR [rdi+0x48628211],1
  4213b4:	cld    
  4213b5:	xchg   edi,eax
  4213b6:	rex.RB jbe 0x421400
  4213b9:	add    bh,BYTE PTR [rcx-0x555d7aea]
  4213bf:	jb     0x421433
  4213c1:	out    0x68,eax
  4213c3:	sub    al,0x9c
  4213c5:	mov    dh,0x18
  4213c7:	rcl    DWORD PTR [rax],0xe9
  4213ca:	(bad)  
  4213cb:	sahf   
  4213cc:	rex.RX mov dl,0x4
  4213cf:	(bad)  
  4213d0:	cmp    BYTE PTR [rbp+rsi*4+0x682a6c65],bl
  4213d7:	pop    rdx
  4213d8:	adc    BYTE PTR [rax-0x3],0x95
  4213dc:	sbb    ecx,DWORD PTR [rsi+0x7e583245]
  4213e2:	cmp    eax,0xaa444268
  4213e7:	xor    DWORD PTR [rdx-0x33dd2280],esp
  4213ed:	rex.WRB (bad) 
  4213ef:	mov    DWORD PTR [rsi+0x6b],ecx
  4213f2:	loope  0x421378
  4213f4:	(bad)  
  4213f5:	repz sub al,0xad
  4213f8:	fnstcw WORD PTR [rdx]
  4213fa:	push   rbp
  4213fb:	jp     0x4213b4
  4213fd:	jbe    0x4213de
  4213ff:	mov    BYTE PTR [rdi],bh
  421401:	(bad)  
  421402:	fstp   TBYTE PTR [rcx]
  421404:	xor    bl,bh
  421406:	xor    edi,DWORD PTR [rax]
  421408:	rex.WXB cmp al,0x8e
  42140b:	(bad)  
  42140c:	repnz adc BYTE PTR [rax+0x48],bh
  421410:	mov    bh,0x18
  421412:	(bad)  
  421413:	sub    al,0x9d
  421415:	xor    edi,esi
  421417:	stos   BYTE PTR es:[rdi],al
  421418:	cdq    
  421419:	int3   
  42141a:	rex.RX in al,dx
  42141c:	sbb    edx,DWORD PTR [rsi-0x5c]
  42141f:	mov    esi,0x77c2035c
  421424:	rex.WRX
  421425:	rex.RB (bad) 
  421427:	mov    dl,BYTE PTR [rsi+0x3b49fce7]
  42142d:	or     DWORD PTR [rsi],ecx
  42142f:	ret    
  421430:	xor    dl,BYTE PTR [rdi+0x1e]
  421433:	movabs ds:0x24bddbe8a1c97fd8,eax
  42143c:	fidivr DWORD PTR [rdi]
  42143e:	sti    
  42143f:	test   DWORD PTR [rcx+rsi*1+0x2c549d2a],edi
  421446:	xor    eax,DWORD PTR [rbx-0x544b1b03]
  42144c:	adc    bl,dh
  42144e:	mov    ah,0x84
  421450:	sub    al,0x8b
  421452:	lods   al,BYTE PTR ds:[rsi]
  421453:	and    ch,BYTE PTR [rcx]
  421455:	or     BYTE PTR [rsp+rsi*8+0x40],dl
  421459:	movabs eax,ds:0xd7d1f9b6058bb1a6
  421462:	(bad)  
  421463:	rex fistp WORD PTR [rdx+0x33564f63]
  42146a:	pop    rdx
  42146b:	in     eax,0x21
  42146d:	xor    bh,bh
  42146f:	mov    dh,0x3d
  421471:	(bad)  
  421472:	xlat   BYTE PTR ds:[rbx]
  421473:	mov    ecx,0x5a87bac3
  421478:	test   al,0xea
  42147a:	enter  0xaaa,0xb
  42147e:	and    al,0x50
  421480:	je     0x4214dc
  421482:	or     ch,BYTE PTR [rax+rdx*4]
  421485:	ds stos BYTE PTR es:[rdi],al
  421487:	push   rcx
  421488:	mov    dl,0xd4
  42148a:	and    esi,eax
  42148c:	jrcxz  0x421481
  42148e:	test   DWORD PTR [rdi+0x6b],ecx
  421491:	mov    dh,BYTE PTR [rbp+0x5a]
  421494:	jae    0x4214a6
  421496:	mov    WORD PTR [rip+0xffffffffebec008b],ss        # 0xffffffffec2e1527
  42149c:	ss sub al,0x93
  42149f:	cdq    
  4214a0:	addr32 and esi,edx
  4214a3:	movabs rsi,0xb4f1ce1bc036af1f
  4214ad:	jrcxz  0x4214da
  4214af:	jbe    0x42149f
  4214b1:	(bad)  
  4214b2:	in     eax,dx
  4214b3:	mov    DWORD PTR [rbx],0x7b025640
  4214b9:	rcl    BYTE PTR gs:[rip+0xfffffffffec0d1cd],cl        # 0xffffffffff02e68d
  4214c0:	rex.WXB
  4214c1:	rex movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4214c3:	out    0x64,al
  4214c5:	jrcxz  0x421451
  4214c7:	(bad)  
  4214c8:	push   rsp
  4214c9:	adc    DWORD PTR [rdi+0x23b8c729],edi
  4214cf:	rex.W ret 
  4214d1:	js     0x421546
  4214d3:	fs scas eax,DWORD PTR es:[rdi]
  4214d5:	and    al,0xaf
  4214d7:	sbb    BYTE PTR [rbp-0x6],al
  4214da:	and    bl,BYTE PTR gs:[rsi+0xf]
  4214de:	(bad)  
  4214df:	xlat   BYTE PTR cs:[rbx]
  4214e1:	sahf   
  4214e2:	repnz or al,0xf5
  4214e5:	(bad)  
  4214e6:	popf   
  4214e7:	out    0x74,eax
  4214e9:	or     al,0x9a
  4214eb:	xchg   BYTE PTR [rax+0x73],bh
  4214ee:	out    0x72,al
  4214f0:	pushf  
  4214f1:	fdiv   st(0),st
  4214f3:	mov    bl,0xc7
  4214f5:	pop    rbx
  4214f6:	mov    ?,eax
  4214f8:	(bad)  
  4214f9:	imul   esp,DWORD PTR [rsi],0xffffffb4
  4214fc:	push   QWORD PTR [rdi+0x7abde4ee]
  421502:	js     0x4214fa
  421504:	jle    0x4214e7
  421506:	in     al,0x3d
  421508:	xor    BYTE PTR [rbx-0x34],bh
  42150b:	pop    rdx
  42150c:	stos   BYTE PTR es:[rdi],al
  42150d:	call   0xffffffffa7e06cd6
  421512:	(bad)  
  421513:	xor    DWORD PTR [rsi+rsi*1+0x14],esi
  421517:	lods   al,BYTE PTR ds:[rsi]
  421518:	(bad)  
  421519:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42151a:	sub    eax,0xe8a33c65
  42151f:	(bad)  
  421520:	outs   dx,DWORD PTR ds:[rsi]
  421521:	mov    dh,0xea
  421523:	fmul   DWORD PTR [rbp+0x7378fbda]
  421529:	sbb    al,0xf2
  42152b:	sub    BYTE PTR [rsi+0x5124762d],al
  421531:	(bad)  
  421532:	icebp  
  421533:	cmp    bl,cl
  421535:	jns    0x4214d6
  421537:	int3   
  421538:	imul   BYTE PTR [rdi+0x78]
  42153b:	sub    esp,ebx
  42153d:	in     al,dx
  42153e:	shl    edi,1
  421540:	loop   0x42150f
  421542:	imul   eax,DWORD PTR [rsi-0x74],0xf8c18d28
  421549:	mov    esi,0xc1ea4bd4
  42154e:	shl    DWORD PTR [rbp-0x25f3b344],0x60
  421555:	leave  
  421556:	ret    0x6d1
  421559:	or     BYTE PTR [rsi+0x17],bh
  42155c:	(bad)  
  42155d:	mov    BYTE PTR [rdi],dh
  42155f:	out    0xf1,eax
  421561:	xor    eax,0xcbd476d1
  421566:	imul   edi,DWORD PTR [rbx-0x1dcf6121],0xffffffa0
  42156d:	shl    DWORD PTR [r8-0x5c],cl
  421571:	scas   eax,DWORD PTR es:[rdi]
  421572:	sahf   
  421573:	stos   DWORD PTR es:[rdi],eax
  421574:	sbb    al,0x86
  421576:	test   eax,0x92111f2c
  42157b:	rex.RX xchg edi,eax
  42157d:	out    dx,eax
  42157e:	call   rdi
  421580:	xchg   DWORD PTR [rax],ecx
  421582:	(bad)  
  421583:	mov    edx,0x98627cf5
  421588:	loop   0x4215d6
  42158a:	jb     0x421527
  42158c:	loop   0x4215a8
  42158e:	rex.RX jle 0x421552
  421591:	out    0x16,al
  421594:	jne    0x42160e
  421596:	rex.RXB or r8b,r12b
  421599:	scas   al,BYTE PTR es:[rdi]
  42159a:	and    eax,0xecc538b7
  42159f:	data16 or BYTE PTR [rdx+rbx*4-0x5a],ch
  4215a4:	mov    cl,0xcb
  4215a6:	in     eax,dx
  4215a7:	int    0x33
  4215a9:	sbb    eax,0xb206f0d0
  4215ae:	imul   edi,DWORD PTR [rcx+0x27],0x76acd9ae
  4215b5:	jnp    0x42162d
  4215b7:	jbe    0x42159f
  4215b9:	cmp    bl,dh
  4215bb:	xchg   ah,ch
  4215bd:	in     eax,dx
  4215be:	rcl    ch,0xb7
  4215c1:	movabs ds:0xf72cbadef5c9a152,eax
  4215ca:	outs   dx,DWORD PTR ds:[rsi]
  4215cc:	pop    rbp
  4215cd:	xchg   esi,eax
  4215ce:	out    dx,al
  4215cf:	popf   
  4215d0:	mov    ch,0x3a
  4215d2:	shr    BYTE PTR [rax],0x13
  4215d5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4215d6:	rex.WRXB retf 
  4215d8:	jmp    0xffffffff83e30d63
  4215dd:	add    ebp,0xa11d03b6
  4215e3:	push   rdi
  4215e4:	mov    ebx,0x34c0803a
  4215e9:	jl     0x421666
  4215eb:	sbb    BYTE PTR [rcx+0x17],al
  4215ee:	call   0x2afadfe4
  4215f3:	out    dx,eax
  4215f4:	rex xchg ebx,eax
  4215f6:	add    ah,BYTE PTR [rsp+rax*4-0x355a3070]
  4215fd:	popf   
  4215fe:	jb     0x421593
  421600:	(bad)  
  421601:	movabs eax,ds:0xdf66b34806133862
  42160a:	pop    rsp
  42160b:	mov    esi,0x54c6653d
  421610:	rex.WRX push rbp
  421612:	movabs ds:0x6e78e5eb42b611ac,eax
  42161b:	ss adc cl,0x4f
  42161f:	sbb    dl,BYTE PTR [rsi]
  421621:	and    ah,BYTE PTR [ecx]
  421624:	xor    DWORD PTR [rdx+rdi*1+0x44],0xffffff85
  421629:	and    al,0xa6
  42162b:	mov    eax,0xc5faf988
  421630:	(bad)  
  421631:	in     al,0x62
  421633:	imul   esi,DWORD PTR [rdx-0x25123748],0x288f608
  42163d:	sub    al,0x76
  42163f:	ds or  eax,0x6eeeeee
  421645:	(bad)  
  421646:	cmp    DWORD PTR [rdi+0x76c59098],esp
  42164c:	rex.R lods al,BYTE PTR ds:[rsi]
  42164e:	ss ins BYTE PTR es:[rdi],dx
  421650:	mov    edi,0x52d0de0c
  421655:	shl    BYTE PTR [rbx],1
  421657:	shr    ecx,0xf3
  42165a:	xor    al,0x35
  42165c:	xor    bh,ch
  42165e:	cmp    ebp,0xffffffd1
  421661:	rex.WRX and BYTE PTR [rcx+0x1778965d],r13b
  421668:	and    DWORD PTR fs:[rcx+0x5b],ebp
  42166c:	fldl2e 
  42166e:	mov    dh,BYTE PTR [rbp+rsi*4+0x21e917ca]
  421675:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  421676:	adc    cl,cl
  421678:	mov    cl,0x5a
  42167a:	sub    al,0x2b
  42167c:	repnz ds and eax,0xa144606c
  421683:	(bad)  
  421684:	sbb    bl,BYTE PTR [rax+0x50]
  421687:	iret   
  421688:	mov    esi,0x4cb58f0d
  42168d:	adc    esp,DWORD PTR [rbp-0x24095adf]
  421693:	push   rdx
  421694:	mov    ebp,0x3502441b
  421699:	(bad)  
  42169a:	add    ah,ch
  42169c:	pop    rax
  42169d:	rex.WR mov bl,0xd3
  4216a0:	rex.WR jmp 0x4216c3
  4216a3:	ret    0xe14f
  4216a6:	int    0xd
  4216a8:	xor    al,0xbc
  4216aa:	cwde   
  4216ab:	mov    gs,ebp
  4216ad:	fdivr  DWORD PTR [rcx+0x6b]
  4216b0:	(bad)  
  4216b1:	leave  
  4216b2:	stos   BYTE PTR es:[rdi],al
  4216b3:	retf   0x836
  4216b6:	rex.WX xchg rax,rax
  4216b8:	cs (bad) 
  4216ba:	push   rdx
  4216bb:	push   rsi
  4216bc:	fistp  WORD PTR [rbx+0x4e]
  4216bf:	out    dx,al
  4216c0:	cwde   
  4216c1:	adc    BYTE PTR [r9-0x2c],al
  4216c5:	cmp    BYTE PTR [rdx+rbp*1+0x393732e6],ah
  4216cc:	mov    ecx,0x13d65a4c
  4216d1:	pop    rbx
  4216d2:	xchg   bl,dh
  4216d4:	lods   al,BYTE PTR ds:[rsi]
  4216d5:	mov    edx,0x62db78f6
  4216da:	mov    edx,0xd391ea62
  4216df:	and    al,0xc9
  4216e1:	mov    edi,0x854af80f
  4216e6:	rex pop rdx
  4216e8:	mov    dl,0x77
  4216ea:	sbb    DWORD PTR [rdi+0x5fb224d8],edi
  4216f0:	xchg   rbp,rax
  4216f2:	imul   ebx,DWORD PTR [rdx-0x68],0x1b13a089
  4216f9:	rex.X sub al,0x66
  4216fc:	mov    bl,0x57
  4216fe:	mov    bl,0x72
  421700:	pop    rcx
  421701:	fild   QWORD PTR [rdi+0x26]
  421704:	ret    0x2d62
  421707:	pushf  
  421708:	mov    dl,0x8d
  42170a:	rol    BYTE PTR [rcx+0x4a],0x6
  42170e:	sbb    eax,0x6a8f8b2f
  421713:	out    dx,al
  421714:	adc    BYTE PTR [rax-0x44],al
  421717:	data16 fbld TBYTE PTR [rdx-0x59]
  42171b:	mov    ecx,0xff6bef4d
  421720:	out    dx,al
  421721:	mov    bh,0x1d
  421723:	fwait
  421724:	gs (bad) 
  421726:	xchg   BYTE PTR [rcx-0x1d],ah
  421729:	cmp    eax,0xc56bc4ca
  42172e:	movabs al,ds:0xc3e1fce2dad868d2
  421737:	mov    bl,0xad
  421739:	rol    ch,cl
  42173b:	shr    DWORD PTR [rcx+rdi*2+0x4a],0x9f
  421740:	(bad)  [rdx-0x33f5001]
  421746:	mov    ebx,0xf98c50ca
  42174b:	ja     0x4216e1
  42174d:	rex.B pushf 
  42174f:	ret    0x94cd
  421752:	(bad)  
  421753:	mov    WORD PTR [rsi],gs
  421755:	mov    dl,0xab
  421757:	cmp    BYTE PTR [rsi+rcx*8+0x23],cl
  42175b:	mov    BYTE PTR [rsp+rbp*4],ch
  42175e:	xchg   BYTE PTR [rdi-0x77],bh
  421761:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  421762:	jle    0x4216f3
  421764:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  421765:	rex.WB retf 
  421767:	int    0x8
  421769:	fsubr  DWORD PTR [rsi]
  42176b:	movabs al,ds:0x58621e900c94d6d8
  421774:	adc    ch,dh
  421776:	pop    rdi
  421777:	rex.WRB
  421778:	rex.WRXB jmp 0x4217a4
  42177b:	es rex.WX push rsp
  42177e:	rex.WX ins BYTE PTR es:[rdi],dx
  421780:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  421781:	call   0x3b75663e
  421786:	fcmovu st,st(1)
  421788:	int    0x19
  42178a:	pushf  
  42178b:	cdq    
  42178c:	(bad)  
  42178d:	mov    ebp,0xef62084
  421792:	rex.B (bad) 
  421794:	pop    rax
  421795:	mov    dl,ah
  421797:	shr    ah,1
  421799:	repnz (bad) 
  42179b:	xchg   ecx,eax
  42179c:	adc    DWORD PTR [rbx],ebp
  42179e:	shl    DWORD PTR [rax+0x19],0xa1
  4217a2:	mov    bh,0x6
  4217a4:	shl    ah,cl
  4217a6:	(bad)  
  4217a7:	ins    DWORD PTR es:[rdi],dx
  4217a8:	out    dx,eax
  4217a9:	mov    dh,0x71
  4217ab:	push   rsi
  4217ac:	push   rdi
  4217ad:	test   DWORD PTR [rdx],0x742fed5a
  4217b3:	mov    esp,0xf2044e72
  4217b8:	jmp    0x4217e1
  4217ba:	or     dl,BYTE PTR [rbp-0x2e3b296e]
  4217c0:	in     eax,0x9b
  4217c2:	jp     0x42179d
  4217c4:	sub    al,0xbb
  4217c6:	out    0x11,al
  4217c8:	mov    ebp,0xeefe3d3c
  4217cd:	clc    
  4217ce:	xor    al,0xb8
  4217d0:	sar    BYTE PTR [rsi+0x3e768d1e],0x66
  4217d7:	(bad)  
  4217d8:	sbb    BYTE PTR [rbp+0x4ef2e07a],dh
  4217de:	adc    bh,BYTE PTR [rcx+rbp*2]
  4217e1:	icebp  
  4217e2:	cmp    bl,BYTE PTR [rsi+0xe52d75c]
  4217e8:	nop
  4217e9:	mov    dl,0x30
  4217eb:	lahf   
  4217ec:	ret    0xbfe8
  4217ef:	jl     0x421843
  4217f1:	mov    eax,0x21739151
  4217f6:	shl    BYTE PTR [rax],0x5c
  4217f9:	push   rbx
  4217fa:	xchg   ebx,eax
  4217fb:	sub    bl,BYTE PTR [rbx+0x109b2d72]
  421801:	adc    dl,BYTE PTR [rsi-0x70]
  421804:	(bad)  
  421805:	lahf   
  421806:	and    al,0xaf
  421808:	mov    cl,0x94
  42180a:	mov    WORD PTR [rbp+0xec3f445],ss
  421810:	and    bh,BYTE PTR [rax+0x63]
  421813:	push   rcx
  421814:	(bad)  
  421815:	sub    esp,esp
  421817:	ds jns 0x421847
  42181a:	fild   WORD PTR [rsi+rbp*1+0x1e]
  42181e:	int    0x5
  421820:	xor    ecx,ebx
  421822:	mov    al,0xf4
  421824:	ds sti 
  421826:	jbe    0x421898
  421828:	cmp    BYTE PTR [rdx],bl
  42182a:	mov    esp,0xfe3d3e3e
  42182f:	cli    
  421830:	lock repnz cwde 
  421833:	jmp    0x7049ad77
  421838:	test   DWORD PTR [rdx],esi
  42183a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  42183b:	rex.WX shl BYTE PTR [rdi+0x337c3132],1
  421842:	adc    eax,DWORD PTR [rdi-0x50eaad4]
  421848:	or     dh,bh
  42184a:	rex retf 
  42184c:	rex.RX xchg esi,eax
  42184e:	xchg   edx,eax
  42184f:	(bad)  
  421850:	shl    BYTE PTR [rdx+rcx*4-0x4cc88a97],cl
  421857:	mov    ecx,0xc1aba492
  42185c:	or     BYTE PTR [rcx+rdx*1],ah
  42185f:	in     al,0x7d
  421861:	rex.B (bad) 
  421863:	loope  0x421841
  421865:	out    0xce,al
  421867:	icebp  
  421868:	call   0x6739c22a
  42186d:	mov    dh,0xb5
  42186f:	shl    BYTE PTR [rax],0xca
  421872:	mov    WORD PTR [rbx+0x25],gs
  421875:	mov    DWORD PTR [rip+0xfffffffff623fb93],0x760f1af8        # 0xfffffffff6661412
  42187f:	clc    
  421880:	cmp    BYTE PTR [rdi-0x26b9642a],al
  421886:	imul   edi,edx,0xffffffbb
  421889:	rex.W sbb dil,BYTE PTR [rip+0xffffffffe4f56fe2]        # 0xffffffffe5378872
  421890:	es fwait
  421892:	pop    rbx
  421893:	push   rdx
  421894:	adc    BYTE PTR [rdx-0x6d92dcc7],cl
  42189a:	jae    0x421868
  42189c:	test   BYTE PTR [rax+rax*1-0x3e638339],bh
  4218a3:	mov    eax,0x36e74045
  4218a8:	nop
  4218a9:	out    dx,eax
  4218aa:	add    BYTE PTR [rax+0x10],dh
  4218ad:	rex.WXB (bad) 
  4218af:	stc    
  4218b0:	call   0x14c39abe
  4218b5:	int    0x21
  4218b7:	shl    BYTE PTR [rdx+0x12],0x7
  4218bb:	mov    es,WORD PTR [rdi+0x7e]
  4218be:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4218bf:	(bad)  
  4218c0:	rex.RB div r10d
  4218c3:	mov    bh,0x7c
  4218c5:	lahf   
  4218c6:	(bad)  
  4218c7:	rex.WRXB (bad) 
  4218c9:	test   DWORD PTR [rsi-0x10],esi
  4218cc:	and    ecx,eax
  4218ce:	rex.WXB mov r13b,0x84
  4218d1:	test   al,0x87
  4218d3:	push   rcx
  4218d4:	addr32 pop rsp
  4218d6:	rol    ebp,cl
  4218d8:	(bad)  [rdx+0x72]
  4218db:	ins    BYTE PTR es:[rdi],dx
  4218dc:	(bad)  
  4218dd:	jmp    0x421863
  4218df:	pop    rbp
  4218e0:	(bad)
  4218e3:	rex.WX pushf 
  4218e5:	popf   
  4218e6:	shl    DWORD PTR [rcx-0x4a09ff83],0x84
  4218ed:	xlat   BYTE PTR ds:[rbx]
  4218ee:	lea    edx,[rip+0x4a9b5c36]        # 0x4add752a
  4218f4:	rex.RB retf 0x690b
  4218f8:	jg     0x421922
  4218fa:	add    al,0xbe
  4218fc:	(bad)  
  4218fd:	add    DWORD PTR [rdi+0x50],edi
  421900:	xor    BYTE PTR [rax+rbp*1+0x5552897e],dh
  421907:	call   FWORD PTR [rdx]
  421909:	adc    dh,BYTE PTR [rcx]
  42190b:	(bad)  [rbx+riz*4]
  42190e:	mov    r14b,0x8
  421911:	js     0x421940
  421913:	mov    bh,0xde
  421915:	sub    BYTE PTR [rcx-0x53],ch
  421918:	mov    ebp,0x929343b
  42191d:	add    al,0xc6
  42191f:	mov    ?,ecx
  421921:	sti    
  421922:	clc    
  421923:	cld    
  421924:	(bad)  
  421925:	retf   
  421926:	out    dx,al
  421927:	popf   
  421928:	rcr    BYTE PTR [rdi+0x24],cl
  42192b:	push   0x78b8c753
  421930:	test   BYTE PTR [rbx+rbx*1],dh
  421933:	sub    ecx,ebx
  421935:	jo     0x421932
  421937:	fistp  DWORD PTR [rax-0x54]
  42193a:	(bad)  
  42193b:	retf   
  42193c:	sbb    BYTE PTR [rsi+0x28],cl
  42193f:	jl     0x4218e5
  421941:	jb     0x421963
  421943:	(bad)  
  421944:	leave  
  421945:	jnp    0x4219a5
  421947:	pop    rbp
  421948:	and    BYTE PTR [rbp+rax*4-0x6],dh
  42194c:	and    ah,bh
  42194e:	sub    eax,0x5
  421951:	movsxd esp,DWORD PTR [rdx]
  421953:	(bad)  
  421954:	mov    ecx,0x54bf467e
  421959:	lahf   
  42195a:	fucomi st,st(2)
  42195c:	fs push 0x4d4390c7
  421962:	add    al,BYTE PTR [rdx+0x50a2a15d]
  421968:	push   0xfffffffffffffffa
  42196a:	xor    DWORD PTR [rbx+riz*8-0x1c],esi
  42196e:	rex.WRXB jo 0x42195d
  421971:	sbb    esp,ebx
  421973:	pop    rdi
  421974:	movabs eax,ds:0x77b0bb74bb491d2b
  42197d:	push   rdx
  42197e:	adc    DWORD PTR [rbp+0x10c5b418],esi
  421984:	test   DWORD PTR [rbp-0x69bdbcd2],0xb2e8384
  42198e:	lahf   
  42198f:	and    eax,0xd40b65bf
  421994:	or     ch,BYTE PTR [rdx+rcx*8]
  421997:	out    dx,al
  421998:	and    eax,0xd9dacaec
  42199d:	xchg   ebp,eax
  42199e:	rex.R mov sil,0x52
  4219a1:	sar    BYTE PTR [rip+0xffffffffb318c6c2],1        # 0xffffffffb35ae069
  4219a7:	rex.X and esi,esi
  4219aa:	rex.X adc DWORD PTR [rcx],edi
  4219ad:	jne    0x421a15
  4219af:	loop   0x4219de
  4219b1:	jmp    0xffffffffcb6c1ff5
  4219b6:	(bad)  
  4219b7:	push   rcx
  4219b8:	test   al,0x69
  4219ba:	outs   dx,DWORD PTR ds:[rsi]
  4219bb:	mov    ah,0x30
  4219bd:	mov    esi,0x89fffcc4
  4219c2:	adc    al,0xf6
  4219c4:	pushf  
  4219c5:	pushf  
  4219c6:	loop   0x42199a
  4219c8:	adc    eax,0xf7221c9e
  4219cd:	sar    ch,1
  4219cf:	push   rsi
  4219d0:	(bad)  
  4219d1:	jbe    0x4219e8
  4219d3:	retf   
  4219d4:	(bad)  
  4219d5:	iret   
  4219d6:	push   rcx
  4219d7:	(bad)  
  4219d9:	(bad)  
  4219da:	stos   DWORD PTR es:[rdi],eax
  4219db:	xor    BYTE PTR [rcx+0xa],ah
  4219de:	call   0xffffffffe088ab8c
  4219e3:	sar    edx,1
  4219e5:	push   rcx
  4219e6:	popf   
  4219e7:	stos   DWORD PTR es:[rdi],eax
  4219e8:	jbe    0x421988
  4219ea:	add    DWORD PTR [rbx-0x2b],ebx
  4219ed:	jl     0x421996
  4219ef:	(bad)  
  4219f0:	add    esi,esi
  4219f2:	pushf  
  4219f3:	shl    esp,1
  4219f5:	out    0xdb,al
  4219f7:	call   0x6ca7932a
  4219fc:	sub    BYTE PTR [rdi-0x20fb10a],cl
  421a02:	xlat   BYTE PTR ds:[rbx]
  421a03:	call   0xffffffffbc5c4e24
  421a08:	and    DWORD PTR [rbx+0x6f],0x94ae07f4
  421a0f:	rex.RX cwde 
  421a11:	sbb    eax,0xcce3cbde
  421a16:	jl     0x421a49
  421a18:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  421a19:	sub    cl,BYTE PTR [rdi]
  421a1b:	jle    0x421a46
  421a1d:	xchg   ebx,eax
  421a1e:	add    BYTE PTR [rbp+0x37fd9b5a],dh
  421a24:	mov    ecx,0x5e899351
  421a29:	pushf  
  421a2a:	xchg   ebx,eax
  421a2b:	add    ah,al
  421a2d:	xchg   ebp,eax
  421a2e:	xor    cl,al
  421a30:	rex.WRX (bad) 
  421a32:	sub    cl,al
  421a34:	loopne 0x4219f2
  421a36:	scas   eax,DWORD PTR es:[rdi]
  421a37:	xchg   ecx,eax
  421a38:	xor    dh,al
  421a3a:	mov    bh,0x7
  421a3c:	adc    DWORD PTR [rbp+0x33],esp
  421a3f:	adc    DWORD PTR [rbx],0x8fa201cb
  421a45:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  421a46:	cmc    
  421a47:	ins    DWORD PTR es:[rdi],dx
  421a48:	cld    
  421a49:	test   bh,dl
  421a4b:	mov    bh,0xd1
  421a4d:	adc    ebp,DWORD PTR [rsi+0x7ba4e07f]
  421a53:	test   DWORD PTR [rbp+0x56],esp
  421a56:	popf   
  421a57:	cmc    
  421a58:	shl    DWORD PTR [rdi-0x46],1
  421a5b:	push   rdi
  421a5c:	push   rsi
  421a5d:	lahf   
  421a5e:	jo     0x421a7d
  421a60:	sbb    eax,0xc677bb76
  421a65:	stc    
  421a66:	nop
  421a67:	retf   
  421a68:	sbb    bl,cl
  421a6a:	movsxd ebp,DWORD PTR [rsi]
  421a6c:	out    0x3c,eax
  421a6e:	(bad)  
  421a6f:	scas   al,BYTE PTR es:[rdi]
  421a70:	imul   ebx
  421a72:	rex.B icebp 
  421a74:	cmp    DWORD PTR [rdi],esi
  421a76:	fist   WORD PTR [rdi+0x387e7dc3]
  421a7c:	cli    
  421a7d:	scas   al,BYTE PTR es:[rdi]
  421a7e:	jae    0x421a2c
  421a80:	mov    ebp,0xcf4b1c83
  421a85:	rex.RB popf 
  421a87:	xchg   esi,eax
  421a88:	rex.WX leave 
  421a8a:	jmp    FWORD PTR [rax-0x50811753]
  421a90:	outs   dx,DWORD PTR ds:[rsi]
  421a91:	(bad)  
  421a92:	mov    bl,0xdf
  421a94:	rex.WRB
  421a95:	rex.RXB (bad) 
  421a97:	std    
  421a98:	(bad)  
  421a99:	int3   
  421a9a:	icebp  
  421a9b:	mov    edx,0x542feefd
  421aa0:	jmp    0x421aa8
  421aa2:	retf   0x7f12
  421aa5:	(bad)  
  421aa6:	(bad)  
  421aa7:	pop    rsp
  421aa8:	int    0xed
  421aaa:	(bad)  
  421aab:	test   DWORD PTR [rcx-0x7d],eax
  421aae:	lods   eax,DWORD PTR ds:[rsi]
  421aaf:	mov    ds,WORD PTR [rbp-0x4a4d6ba2]
  421ab5:	rex.XB mov BYTE PTR [r8],bl
  421ab8:	cli    
  421ab9:	stc    
  421aba:	rex.WXB
  421abb:	cmp    bl,BYTE PTR ss:[rsi+0x8]
  421abf:	idiv   BYTE PTR [rcx-0x21d01752]
  421ac5:	call   0x7dc45b3c
  421aca:	(bad)  
  421acb:	lods   eax,DWORD PTR ds:[rsi]
  421acc:	cli    
  421acd:	mov    esp,0x6f706def
  421ad2:	xlat   BYTE PTR ds:[rbx]
  421ad3:	cli    
  421ad4:	sub    DWORD PTR [rax-0x45ede66f],esi
  421ada:	mov    bl,dl
  421adc:	mov    ebx,0x7b665d80
  421ae1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  421ae2:	mov    ah,0x62
  421ae4:	fbld   TBYTE PTR [rsi-0x2f6ca9ec]
  421aea:	mov    ebx,0x7d66736e
  421aef:	sub    al,0x7b
  421af1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  421af2:	stos   BYTE PTR es:[rdi],al
  421af3:	xor    al,0x2e
  421af5:	jno    0x421ad3
  421af7:	fidiv  DWORD PTR [rax]
  421af9:	(bad)  
  421afa:	std    
  421afb:	xchg   esp,eax
  421afc:	push   0xffffffffffffffbf
  421afe:	push   rdx
  421aff:	mov    ecx,ebx
  421b01:	sbb    eax,0x592ee474
  421b06:	xor    al,0x33
  421b08:	mov    bh,0xce
  421b0a:	or     BYTE PTR [rax],ah
  421b0c:	add    BYTE PTR [rsi-0x5f],bl
  421b0f:	(bad)  
  421b10:	cmp    DWORD PTR [rip+0xffffffffb5ab81ea],ebp        # 0xffffffffb5ed9d00
  421b16:	not    edx
  421b18:	(bad)  
  421b19:	xor    eax,0xbf5fd2d0
  421b1e:	sbb    eax,DWORD PTR [rbp+0x18ceb5a7]
  421b24:	xor    bh,BYTE PTR [rdi-0x73]
  421b27:	jrcxz  0x421b90
  421b29:	(bad)  
  421b2a:	jno    0x421b05
  421b2c:	(bad)  
  421b2d:	int    0x4d
  421b2f:	test   DWORD PTR [rdx+0x35],ecx
  421b32:	(bad)  
  421b33:	movabs ds:0x49df4dd8627c0e0e,eax
  421b3c:	mov    ch,0x38
  421b3e:	and    al,0x3c
  421b40:	jge    0x421b26
  421b42:	jno    0x421b35
  421b44:	cli    
  421b45:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  421b46:	fldcw  WORD PTR [rdi-0x57bb5b10]
  421b4c:	movabs ds:0x96d0b54f50ece6c,eax
  421b55:	scas   eax,DWORD PTR es:[rdi]
  421b56:	stos   BYTE PTR es:[rdi],al
  421b57:	adc    BYTE PTR [rax],bh
  421b59:	(bad)  
  421b5b:	or     al,BYTE PTR [rbp-0x59]
  421b5e:	mov    esi,0xd4b07760
  421b63:	(bad)  
  421b64:	popf   
  421b65:	(bad)  
  421b66:	xchg   ch,ch
  421b68:	ins    BYTE PTR es:[rdi],dx
  421b69:	scas   eax,DWORD PTR es:[rdi]
  421b6a:	xor    eax,0x170268b3
  421b6f:	mov    bh,0x4f
  421b71:	(bad)  
  421b72:	hlt    
  421b73:	mov    al,0x55
  421b75:	sahf   
  421b76:	in     al,0xa7
  421b78:	iret   
  421b79:	icebp  
  421b7a:	shl    DWORD PTR [rcx+0x30],cl
  421b7d:	rol    DWORD PTR [rcx+0x766529ad],1
  421b83:	sub    al,0xdb
  421b85:	sbb    eax,0x44a65598
  421b8a:	icebp  
  421b8b:	mov    WORD PTR [rbx+0x40],cs
  421b8e:	imul   ebx,ebx,0xffffffde
  421b91:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  421b92:	retf   0xe567
  421b95:	(bad)  
  421b96:	xchg   BYTE PTR [rcx+rax*1],ah
  421b99:	xor    DWORD PTR [rsi-0x76],0x479eb702
  421ba0:	icebp  
  421ba1:	rex.WB (bad) 
  421ba3:	cld    
  421ba4:	(bad)  
  421ba5:	(bad)  
  421ba6:	repz rex.WXB sbb QWORD PTR [r14+0x7c],rsp
  421bab:	leave  
  421bac:	pop    rbx
  421bad:	(bad)  
  421bae:	fdivr  DWORD PTR [rax]
  421bb0:	out    0xd2,eax
  421bb2:	or     ch,BYTE PTR [rdi]
  421bb4:	(bad)
  421bb8:	push   rdx
  421bb9:	(bad)  
  421bba:	loopne 0x421bf8
  421bbc:	add    eax,0x8d493723
  421bc1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  421bc2:	pop    rax
  421bc3:	test   al,cl
  421bc5:	and    BYTE PTR [rcx-0x49d4a98c],bh
  421bcb:	rcr    edx,cl
  421bcd:	xor    al,0xa2
  421bcf:	mov    al,0x34
  421bd1:	xchg   esi,eax
  421bd2:	test   BYTE PTR [rbp+0x277f0536],cl
  421bd8:	xchg   esi,eax
  421bd9:	(bad)  
  421bda:	movabs ds:0x747790ad323f55c8,eax
  421be3:	ret    
  421be4:	mov    esi,0xb9fac0fb
  421be9:	rex.WRB mov r14b,0x7e
  421bec:	std    
  421bed:	je     0x421bbd
  421bef:	(bad)  
  421bf0:	lods   al,BYTE PTR ds:[esi]
  421bf2:	fcomip st,st(3)
  421bf4:	fild   QWORD PTR [rbx-0x3]
  421bf7:	sahf   
  421bf8:	dec    edi
  421bfa:	pop    rax
  421bfb:	mov    edi,0xfaf4ffe7
  421c00:	cmp    eax,0xf9efd60d
  421c05:	call   QWORD PTR [rbp+rsi*8-0x45e13d2d]
  421c0c:	jp     0x421c67
  421c0e:	mov    al,0x7e
  421c10:	and    ecx,DWORD PTR [rcx-0x17]
  421c13:	push   rax
  421c14:	(bad)  
  421c15:	sub    al,0x9a
  421c17:	imul   edi,DWORD PTR [rbp-0x75],0xda910e83
  421c1e:	cmp    ebx,DWORD PTR [rsi]
  421c20:	(bad)  
  421c21:	jns    0x421bbf
  421c23:	ins    BYTE PTR es:[rdi],dx
  421c24:	and    bpl,BYTE PTR [r10]
  421c27:	(bad)  
  421c29:	leave  
  421c2a:	jns    0x421c8e
  421c2c:	cmp    esp,eax
  421c2e:	sub    eax,0x81e8a383
  421c33:	mov    ss,WORD PTR [rbx]
  421c35:	jne    0x421bf0
  421c37:	(bad)  
  421c38:	in     al,0x87
  421c3a:	xor    esp,ebx
  421c3c:	out    0x8c,eax
  421c3e:	mov    bl,0xda
  421c40:	gs add al,dh
  421c43:	or     BYTE PTR [rax-0x34],bh
  421c46:	(bad)  
  421c47:	sbb    eax,0x1ae9a4bc
  421c4c:	lock jrcxz 0x421cae
  421c4f:	rex.R
  421c50:	repz jg 0x421ca3
  421c53:	fxch   st(3)
  421c55:	jne    0x421c80
  421c57:	out    0x66,al
  421c59:	mul    DWORD PTR [rsi-0x22645232]
  421c5f:	(bad)  
  421c60:	fisub  WORD PTR [rdx-0x3dd3293b]
  421c66:	mov    ebx,0xd0f82bcd
  421c6b:	xchg   edx,eax
  421c6c:	mov    ebp,0x9cb06686
  421c71:	(bad)  
  421c72:	and    al,0x2f
  421c74:	lock cmp DWORD PTR [rax+rbp*4+0x20d64b84],0xab7d89e7
  421c80:	xchg   edx,eax
  421c81:	sub    esp,DWORD PTR [rax-0x15]
  421c84:	(bad)  
  421c85:	sub    dl,BYTE PTR [rax]
  421c87:	pop    rbx
  421c88:	movabs ds:0xc8aeb9f119b9ce16,al
  421c91:	mov    edi,0xc059cf1
  421c96:	imul   esi,DWORD PTR [rdi-0x3d4ca74b],0x170491d7
  421ca0:	or     eax,0x6afe0472
  421ca5:	mov    WORD PTR [rsi],ss
  421ca7:	adc    ah,cl
  421ca9:	sbb    DWORD PTR [rdx-0x6d],ecx
  421cac:	movabs al,ds:0x3334d5799705333e
  421cb5:	xchg   esp,eax
  421cb6:	pop    rsp
  421cb7:	or     DWORD PTR [rdi+0x3deda98a],ebp
  421cbd:	mov    bl,0x99
  421cbf:	(bad)  
  421cc0:	movabs al,ds:0x5e14d19b432070c4
  421cc9:	rex.WRX
  421cca:	rex.RX mov dil,0x64
  421ccd:	and    al,0xc5
  421ccf:	lods   eax,DWORD PTR ds:[rsi]
  421cd0:	loop   0x421cb9
  421cd2:	pop    rbx
  421cd3:	lods   al,BYTE PTR ds:[rsi]
  421cd4:	fadd   DWORD PTR [rbx-0x2cfe678f]
  421cda:	retf   0xf9df
  421cdd:	(bad)  
  421cde:	ins    BYTE PTR es:[rdi],dx
  421cdf:	fist   WORD PTR [rip+0x22566e18]        # 0x22988afd
  421ce5:	cmp    al,0x33
  421ce7:	xor    al,0xb2
  421ce9:	out    0x3e,al
  421ceb:	rex.W jl 0x421d06
  421cee:	out    0x4b,eax
  421cf0:	shl    DWORD PTR [rbx-0x6b],1
  421cf3:	xor    BYTE PTR [rax+rsi*8],dh
  421cf6:	repz repz adc BYTE PTR es:[rip+0xffffffff91a09a85],ch        # 0xffffffff91e2b784
  421cff:	rcr    BYTE PTR [rdx+0x21],1
  421d02:	sub    BYTE PTR [rsi-0x46e18980],dh
  421d08:	scas   al,BYTE PTR es:[rdi]
  421d09:	xor    bl,BYTE PTR [rbp+0x3d]
  421d0c:	(bad)  
  421d0d:	or     ebx,DWORD PTR [rcx-0xe]
  421d10:	pop    rbx
  421d11:	(bad)
  421d15:	mov    edi,DWORD PTR ds:[rdi+0x61]
  421d19:	(bad)  
  421d1a:	lahf   
  421d1b:	(bad)  
  421d1c:	jmp    0x421d12
  421d1e:	rex.RB push r10
  421d20:	jbe    0x421cef
  421d22:	mov    cl,0xd0
  421d24:	jne    0x421d2e
  421d26:	ret    0x6391
  421d29:	mov    eax,0x1b4a7e65
  421d2e:	or     ah,al
  421d30:	pop    rbp
  421d31:	jno    0x421d8f
  421d33:	xor    al,0x55
  421d35:	mov    ecx,0x75fe9330
  421d3a:	rex.WX movabs ds:0xe720f3669d7ce482,rax
  421d44:	movabs ds:0x97fe5db1a983c92e,eax
  421d4d:	out    0xf4,eax
  421d4f:	(bad)  
  421d50:	(bad)  
  421d51:	leave  
  421d52:	push   rbx
  421d53:	rex.XB (bad) 
  421d55:	shl    DWORD PTR [rdi-0xdf6289a],0x9b
  421d5c:	rex.WR cqo 
  421d5e:	shr    eax,1
  421d60:	xor    al,0x54
  421d62:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  421d63:	xchg   ebp,eax
  421d64:	fidivr WORD PTR [rsi+0x6d]
  421d67:	mov    gs,WORD PTR [rdi]
  421d69:	(bad)  
  421d6a:	sbb    dh,BYTE PTR [rdi+rcx*2+0x37391994]
  421d71:	std    
  421d72:	xor    bh,BYTE PTR [rdx-0x68]
  421d75:	jns    0x421d53
  421d77:	(bad)  [rbx+rbp*4+0x7a]
  421d7b:	sub    bh,BYTE PTR [rcx-0x1f]
  421d7e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  421d7f:	mov    edx,0x267d905f
  421d84:	cmp    DWORD PTR [rbp+0x7c],ebp
  421d87:	lock test al,0x77
  421d8a:	rex.WR push rcx
  421d8c:	cwde   
  421d8d:	lods   al,BYTE PTR ds:[rsi]
  421d8e:	and    r15,QWORD PTR [r15+rcx*1-0x31]
  421d93:	mov    esi,0x4c410bbc
  421d98:	xchg   esi,eax
  421d99:	mov    ecx,0xb08a2f99
  421d9e:	stos   BYTE PTR es:[rdi],al
  421d9f:	(bad)  
  421da0:	es xchg ecx,eax
  421da2:	xor    eax,0xab806b05
  421da7:	mov    eax,0xa166d011
  421dac:	test   BYTE PTR [rsi-0x1d7f5ff1],al
  421db2:	push   0xfffffffffffffff6
  421db4:	add    DWORD PTR [rcx],esi
  421db6:	icebp  
  421db7:	ret    0xbd99
  421dba:	in     eax,dx
  421dbb:	pop    rbp
  421dbc:	or     esi,edx
  421dbe:	jl     0x421e10
  421dc0:	mov    WORD PTR [rdx+0x45],ss
  421dc3:	mov    al,0x65
  421dc5:	ror    BYTE PTR [rbp+0x29],cl
  421dc8:	movsxd edi,DWORD PTR [rdx+0x3c0b2808]
  421dce:	data16 fwait
  421dd0:	lock stos BYTE PTR es:[rdi],al
  421dd2:	loop   0x421d8e
  421dd4:	rex.WXB
  421dd5:	rex.W (bad) 
  421dd7:	add    eax,0x58c466b
  421ddc:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  421ddd:	out    dx,eax
  421dde:	sbb    eax,0xc36be674
  421de3:	xchg   ecx,eax
  421de4:	mov    edi,0x203c8f0b
  421de9:	loopne 0x421d9f
  421deb:	rex.WRB cmc 
  421ded:	add    al,0x38
  421def:	add    al,BYTE PTR [rdx+0x32]
  421df2:	out    dx,al
  421df3:	loopne 0x421d8f
  421df5:	(bad)  
  421df6:	sar    BYTE PTR [rdx],cl
  421df8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  421df9:	cmp    eax,DWORD PTR [rbx+0xd139070]
  421dff:	xchg   esi,eax
  421e00:	rol    BYTE PTR [rdx+0xc],cl
  421e03:	rex.X and cl,BYTE PTR [rcx+0x73]
  421e07:	cwde   
  421e08:	sbb    esi,esp
  421e0a:	mov    ah,BYTE PTR [rcx*1+0x506435dc]
  421e11:	(bad)  
  421e12:	mov    esi,0x33c68198
  421e17:	xchg   DWORD PTR [rbx-0x1d],ebx
  421e1a:	std    
  421e1b:	in     eax,dx
  421e1c:	out    dx,al
  421e1d:	(bad)  
  421e1e:	mov    edx,DWORD PTR [rbx+0x367251d1]
  421e24:	push   0xffffffffffffffcd
  421e26:	sub    esp,DWORD PTR [rax-0x444484fc]
  421e2c:	(bad)  
  421e2e:	jl     0x421db8
  421e30:	pop    rbx
  421e31:	pop    rbp
  421e32:	test   eax,0x8c3bb03e
  421e37:	cwde   
  421e38:	push   rdx
  421e39:	sahf   
  421e3a:	pop    QWORD PTR [rsi-0x4d]
  421e3d:	nop    ebx
  421e40:	(bad)  
  421e41:	jb     0x421eb2
  421e43:	rcr    DWORD PTR [rdx+rdx*1+0x39],cl
  421e47:	mov    edx,0x93e648ac
  421e4c:	xchg   esi,eax
  421e4d:	jno    0x421e12
  421e4f:	or     DWORD PTR [rsi],esi
  421e51:	mov    esi,0x70a9841
  421e56:	pushf  
  421e57:	(bad)  
  421e58:	out    0x6e,al
  421e5a:	cmp    BYTE PTR [rsi+0x1f],al
  421e5d:	jmp    0x421de2
  421e5f:	(bad)  
  421e60:	cmp    edx,ecx
  421e62:	adc    al,BYTE PTR [rbx+0x497a21d4]
  421e68:	xchg   esp,eax
  421e69:	ret    0xf261
  421e6c:	(bad)  
  421e6d:	mov    ebp,0x3f3d4833
  421e72:	or     al,0x7a
  421e74:	add    eax,0x91c5a5c9
  421e79:	xlat   BYTE PTR ds:[rbx]
  421e7a:	fnsave [rdx+0x71]
  421e7d:	(bad)  
  421e7e:	(bad)  
  421e7f:	jg     0x421ee4
  421e81:	or     ebp,0xb94d9514
  421e87:	test   al,0xd1
  421e89:	sub    bl,BYTE PTR [rax+0x189ee207]
  421e8f:	cmp    ebx,DWORD PTR [rdx+0x4b]
  421e92:	(bad)  
  421e93:	call   0x23980c1e
  421e98:	loopne 0x421e75
  421e9a:	jp     0x421ec9
  421e9c:	(bad)  
  421e9d:	ins    BYTE PTR es:[rdi],dx
  421e9e:	fwait
  421e9f:	xchg   ebp,eax
  421ea0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  421ea1:	lea    esi,[rsi-0x4]
  421ea4:	lods   al,BYTE PTR ds:[rsi]
  421ea5:	lods   eax,DWORD PTR ds:[rsi]
  421ea6:	out    dx,al
  421ea7:	push   rcx
  421ea8:	or     ch,al
  421eaa:	add    BYTE PTR [rcx+0x76ecdd9e],cl
  421eb0:	retf   0x450d
  421eb3:	push   rbp
  421eb4:	(bad)  
  421eb5:	rex.WRXB or al,0xf0
  421eb8:	xchg   ecx,eax
  421eb9:	sbb    cl,BYTE PTR [rdi-0x6d2f3ca7]
  421ebf:	(bad)  
  421ec0:	xchg   ecx,eax
  421ec1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  421ec2:	jg     0x421f0b
  421ec4:	sub    DWORD PTR [rbx-0x40b3f54f],edi
  421eca:	xchg   BYTE PTR [rax-0x70],bh
  421ecd:	gs (bad) 
  421ecf:	retf   0x8dd4
  421ed2:	nop
  421ed3:	rex.WRXB test QWORD PTR [r13-0x11],r8
  421ed7:	xor    eax,0x77a1158f
  421edc:	push   0xffffffffbdc6ac65
  421ee1:	mov    edi,0x5227ed38
  421ee6:	nop
  421ee7:	xchg   edx,eax
  421ee8:	mov    al,0xb3
  421eea:	data16 jno 0x421ed0
  421eed:	push   0xffffffffffffffa6
  421eef:	repz imul esi,DWORD PTR [rbx],0xa58f1e2d
  421ef6:	jbe    0x421f04
  421ef8:	rex.WRX je 0x421efe
  421efb:	ret    0x6c8f
  421efe:	(bad)  
  421eff:	lods   al,BYTE PTR ds:[rsi]
  421f00:	xor    eax,0xeef43e63
  421f05:	jns    0x421ed0
  421f07:	movabs ds:0x8be12d838a4dc1e6,eax
  421f10:	(bad)  
  421f11:	rex.WRX pop rbx
  421f13:	fisub  DWORD PTR [rdx*1+0x4b589c72]
  421f1a:	jle    0x421ebb
  421f1c:	rex.W jbe 0x421ecd
  421f1f:	rex.R jne 0x421eab
  421f22:	lea    ebp,[rip+0x3f208ac1]        # 0x3f62a9e9
  421f28:	ja     0x421f83
  421f2a:	jns    0x421edd
  421f2c:	fstp   st(6)
  421f2e:	rex.WRB outs dx,BYTE PTR ds:[rsi]
  421f30:	xchg   esi,eax
  421f31:	mov    dl,0xe8
  421f33:	rcl    DWORD PTR [rax],1
  421f35:	or     DWORD PTR [rdi+0xd822cc2],edx
  421f3b:	ds sbb al,0x43
  421f3e:	pop    rdx
  421f3f:	xchg   ebx,eax
  421f40:	je     0x421fb3
  421f42:	mov    esi,0xc9b578c6
  421f47:	push   rsi
  421f48:	js     0x421ef1
  421f4a:	lahf   
  421f4b:	mov    ah,0xce
  421f4d:	sub    DWORD PTR [rdx-0x68ca2311],0xc7a51c1b
  421f57:	out    0xd,eax
  421f59:	loop   0x421f71
  421f5b:	sbb    BYTE PTR [rdi],ah
  421f5d:	(bad)  
  421f5e:	cmc    
  421f5f:	cs cli 
  421f61:	ds out 0xbc,eax
  421f64:	cs jl  0x421f12
  421f67:	rex.R cli 
  421f69:	cmp    al,0x64
  421f6b:	imul   eax,eax,0xffffffdc
  421f6e:	mov    edx,ecx
  421f70:	rex.XB or esp,DWORD PTR [r10]
  421f73:	mov    esp,0x4b2ba112
  421f78:	and    DWORD PTR [rcx],edi
  421f7a:	jmp    0xffffffffb472f1bc
  421f7f:	add    eax,DWORD PTR [rcx-0xd19b8a9]
  421f85:	mov    edx,0x6d947484
  421f8a:	rex.WR xchg rsp,rax
  421f8c:	jns    0x421f21
  421f8e:	sub    bl,BYTE PTR [rdi+0x34]
  421f91:	sbb    al,0x4d
  421f93:	rsm    
  421f95:	pop    rcx
  421f96:	rex.RXB mov r8d,0x4d2e143d
  421f9c:	or     eax,DWORD PTR [rdx+rax*4-0x35]
  421fa0:	cld    
  421fa1:	retf   
  421fa2:	outs   dx,BYTE PTR ds:[rsi]
  421fa3:	rcr    BYTE PTR [rdx+0x2e6da973],0x1e
  421faa:	jnp    0x421f59
  421fac:	psubd  mm2,QWORD PTR [rcx-0x65605fe6]
  421fb3:	jne    0x421fa5
  421fb5:	jmp    QWORD PTR [rdi-0x5]
  421fb8:	lods   eax,DWORD PTR ds:[rsi]
  421fb9:	jae    0x422035
  421fbb:	(bad)  
  421fbc:	xchg   edi,eax
  421fbd:	mov    bl,0xba
  421fbf:	add    ah,BYTE PTR [rcx-0x7b]
  421fc2:	shr    DWORD PTR [rdx+0x7a],cl
  421fc5:	(bad)  
  421fc6:	movsxd esi,DWORD PTR [rdx]
  421fc8:	jrcxz  0x421ff7
  421fca:	stos   BYTE PTR es:[rdi],al
  421fcb:	jns    0x421f98
  421fcd:	imul   ebp,DWORD PTR [rsi],0x905d2e29
  421fd3:	mov    dh,0x89
  421fd5:	xchg   edx,eax
  421fd6:	enter  0x3dbb,0x1a
  421fda:	push   rbx
  421fdb:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  421fdc:	jb     0x421f73
  421fde:	pop    rsp
  421fdf:	adc    DWORD PTR [rdi],0xe4b0c8fc
  421fe5:	movabs al,ds:0x266b2aa757878aaf
  421fee:	fisubr WORD PTR [rdi]
  421ff0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  421ff1:	pop    rcx
  421ff2:	cmp    cl,BYTE PTR [rbx+0xea2d4d6]
  421ff8:	ret    
  421ff9:	sub    eax,0x551787c9
  421ffe:	cmp    al,0xa
  422000:	cmc    
  422001:	jb     0x42200e
  422003:	adc    rax,0xfffffffff82adcf2
  422009:	fadd   QWORD PTR [rbx+0x6c]
  42200c:	(bad)  
  42200d:	or     BYTE PTR [rcx+0x6fcb364f],cl
  422013:	rol    esp,0xa0
  422016:	pop    rsp
  422017:	mov    esi,0xe16c938
  42201c:	xor    DWORD PTR [rax],0xf65c702d
  422022:	add    DWORD PTR [rcx+rdx*1],esp
  422025:	xor    BYTE PTR [rdx+0x26],cl
  422028:	(bad)  
  422029:	pushf  
  42202a:	push   rdi
  42202b:	lahf   
  42202c:	sbb    eax,0xf0b180a7
  422031:	push   rsp
  422032:	fdivr  DWORD PTR [rbx]
  422034:	cmc    
  422035:	mov    esp,DWORD PTR [rcx-0x48cc4bf7]
  42203b:	mov    esp,DWORD PTR gs:[rcx]
  42203e:	cmp    BYTE PTR [rsi-0x3eaba01b],cl
  422044:	rex.WRB jle 0x421fe2
  422047:	sub    DWORD PTR [rsp+rax*1+0x7f4f08b6],esp
  42204e:	movsxd esi,DWORD PTR [rbx+0x3bd4b8e2]
  422054:	mov    ss,WORD PTR [rcx]
  422056:	lahf   
  422057:	movabs eax,ds:0x29022932ef8fdfd
  422060:	pop    QWORD PTR [rbp+0x2bd3ae7c]
  422066:	pop    rbx
  422067:	lahf   
  422068:	push   rbp
  422069:	(bad)  
  42206a:	push   rbx
  42206b:	cmp    DWORD PTR [rcx],esi
  42206d:	rol    DWORD PTR [rdi+0x331dda90],cl
  422073:	lods   al,BYTE PTR ds:[rsi]
  422074:	(bad)  
  422075:	xchg   ecx,eax
  422076:	in     al,dx
  422077:	adc    eax,0xea484696
  42207c:	jno    0x422095
  42207e:	sub    BYTE PTR [rcx-0x155ed4e1],cl
  422084:	pop    rcx
  422085:	mov    esi,0x3f687750
  42208a:	leave  
  42208b:	add    al,0xee
  42208d:	mov    r12d,0x5ed7219c
  422093:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  422094:	pop    rax
  422095:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  422096:	push   rax
  422097:	ss (bad) 
  422099:	enter  0xd850,0xb2
  42209d:	int    0x73
  42209f:	jmp    0x4220f0
  4220a1:	ja     0x42209a
  4220a3:	rcr    bh,1
  4220a5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4220a6:	mov    ebx,0x6fb76d9f
  4220ab:	fwait
  4220ac:	cdq    
  4220ad:	push   rcx
  4220ae:	add    DWORD PTR [rax-0x669b8607],0x2821bc13
  4220b8:	movabs eax,ds:0xdf2a8ab7572b2e9
  4220c1:	ins    BYTE PTR es:[rdi],dx
  4220c2:	retf   
  4220c3:	cli    
  4220c4:	xchg   al,bl
  4220c6:	rol    BYTE PTR [rdx-0x2ca17425],0xc
  4220cd:	xchg   edx,eax
  4220ce:	pushf  
  4220cf:	adc    eax,0x65dc3840
  4220d4:	mov    esi,0x25203452
  4220d9:	ss cwde 
  4220db:	adc    eax,0x7592cf0f
  4220e0:	sbb    DWORD PTR [rdx+0x476cfab6],esi
  4220e6:	pushf  
  4220e7:	lods   al,BYTE PTR ds:[rsi]
  4220e8:	shl    cl,0x96
  4220eb:	jbe    0x4220fe
  4220ed:	xor    eax,0x1ee6bdde
  4220f2:	js     0x422087
  4220f4:	(bad)  
  4220f5:	jns    0x422174
  4220f7:	and    edx,0x6b
  4220fa:	jne    0x422099
  4220fc:	pop    rsi
  4220fd:	addr32 (bad) 
  4220ff:	rex.X stos DWORD PTR es:[rdi],eax
  422101:	xor    DWORD PTR [rbx+0x52f1d66a],esi
  422107:	cs fs rex.WR in al,dx
  42210b:	(bad)  
  42210c:	or     edi,DWORD PTR [rsi]
  42210e:	or     al,0x2
  422110:	clc    
  422111:	xchg   edi,eax
  422112:	add    ch,BYTE PTR [rip+0xffffffffec34044b]        # 0xffffffffec762563
  422118:	xor    BYTE PTR [rdi+0x15],dl
  42211b:	(bad)  
  42211c:	jb     0x422193
  42211e:	adc    DWORD PTR [rsi-0x6b],0xd
  422122:	and    dl,BYTE PTR [rdx+0x78d47072]
  422128:	push   rbp
  422129:	(bad)  
  42212a:	add    ch,BYTE PTR [rdi+rbx*1+0x69]
  42212e:	sbb    DWORD PTR [rbx-0x4c],0x232367b8
  422135:	test   BYTE PTR [rsi+0x9],dh
  422138:	xor    esi,DWORD PTR [rip+0x6af7414b]        # 0x6b396289
  42213e:	(bad)  
  42213f:	data16 jle 0x422138
  422142:	adc    ecx,0xffffffb1
  422145:	xchg   BYTE PTR [rdi],ch
  422147:	in     al,dx
  422148:	(bad)  
  422149:	mov    bh,0x1f
  42214b:	push   rdi
  42214c:	pushw  0xa3bf
  422150:	jae    0x422162
  422152:	nop
  422153:	push   rcx
  422154:	(bad)  
  422156:	xor    BYTE PTR [rbp+0x5e],ch
  422159:	icebp  
  42215a:	(bad)  
  42215b:	push   rsi
  42215c:	push   0x54972394
  422161:	loope  0x4221a4
  422163:	jl     0x422189
  422165:	add    edi,eax
  422167:	push   0xffffffffffffffbc
  422169:	(bad)  
  42216a:	cld    
  42216b:	push   rbx
  42216c:	ja     0x4221e8
  42216e:	and    al,0x10
  422170:	movabs eax,ds:0x652d0c0dcdb4fd9a
  422179:	rex.RX adc eax,0xfe36825
  42217f:	xchg   ebx,eax
  422180:	ror    DWORD PTR [rax*8+0x2fcd938a],cl
  422187:	(bad)  
  422188:	xor    DWORD PTR [rdi-0x65],ebx
  42218b:	(bad)  
  42218c:	cdq    
  42218d:	div    BYTE PTR [rsi+0x10]
  422190:	jb     0x4221e7
  422192:	and    eax,DWORD PTR [rax]
  422194:	lods   eax,DWORD PTR ds:[rsi]
  422195:	in     eax,0x5a
  422197:	dec    DWORD PTR ss:[rax+rbp*1+0x4e]
  42219c:	(bad)  
  42219e:	loopne 0x4221be
  4221a0:	sub    cl,bl
  4221a2:	stos   DWORD PTR es:[rdi],eax
  4221a3:	hlt    
  4221a4:	rex.WXB ret 
  4221a6:	scas   eax,DWORD PTR es:[rdi]
  4221a7:	(bad)  
  4221a8:	push   rbx
  4221a9:	adc    eax,0xf9069954
  4221ae:	(bad)  
  4221af:	push   rax
  4221b0:	push   0x2652f881
  4221b5:	test   DWORD PTR [rdi+rdx*4],0xe0ae23f2
  4221bc:	(bad)  
  4221bd:	or     al,0xa8
  4221bf:	mov    edx,0x2a4759b2
  4221c4:	rex.WXB xor dl,BYTE PTR [r9+0x6]
  4221c8:	xchg   edi,eax
  4221c9:	cmp    esi,DWORD PTR [rbp+riz*2-0x51]
  4221cd:	mov    eax,0xb823dc67
  4221d2:	(bad)  
  4221d3:	es xchg ebx,eax
  4221d5:	pushf  
  4221d6:	out    dx,al
  4221d7:	mov    ?,WORD PTR fs:[rcx]
  4221da:	(bad)  
  4221db:	fistp  WORD PTR [rsi+0x5f]
  4221de:	addr32 push rcx
  4221e0:	push   rdx
  4221e1:	push   rcx
  4221e2:	(bad)  
  4221e3:	or     al,0xb3
  4221e5:	call   0x5999391e
  4221ea:	(bad)  
  4221ec:	and    dh,BYTE PTR [rip+0xffffffffd41af6f7]        # 0xffffffffd45d18e9
  4221f2:	test   eax,0xcf2347d3
  4221f7:	js     0x42219c
  4221f9:	js     0x4221e4
  4221fb:	movsxd edi,ebx
  4221fd:	xlat   BYTE PTR ds:[rbx]
  4221fe:	(bad)  
  4221ff:	adc    ebp,ecx
  422201:	enter  0x1392,0xd5
  422205:	jg     0x422240
  422207:	rex.XB push r13
  422209:	or     DWORD PTR [rcx],eax
  42220b:	icebp  
  42220c:	(bad)  
  42220d:	int3   
  42220e:	rex.R icebp 
  422210:	pushf  
  422211:	sub    BYTE PTR [rip+0x4b800a79],dl        # 0x4bc22c90
  422217:	xlat   BYTE PTR ds:[rbx]
  422218:	or     BYTE PTR [rax+0x7c22242],ah
  42221e:	mov    edi,0x180bd90a
  422223:	outs   dx,DWORD PTR ds:[rsi]
  422224:	in     eax,dx
  422225:	(bad)
  422228:	popf   
  422229:	pushf  
  42222a:	rex.R push rdx
  42222c:	sar    esp,0x32
  42222f:	jp     0x422278
  422231:	(bad)  
  422232:	in     al,0xbd
  422234:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  422235:	repnz or eax,0x791aeea2
  42223b:	mov    dl,0x83
  42223d:	mov    ebp,0x9f3182e
  422242:	jno    0x422286
  422244:	lock sub esp,DWORD PTR [rbp+0x72]
  422248:	icebp  
  422249:	out    0xa8,al
  42224b:	retf   
  42224c:	sub    dl,bh
  42224e:	in     al,0xf3
  422250:	iret   
  422251:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  422252:	adc    ebx,DWORD PTR [rcx-0x16936ca0]
  422258:	ins    BYTE PTR es:[rdi],dx
  422259:	pop    rax
  42225a:	fisttp QWORD PTR [rdi+rdx*4-0x465e0f9d]
  422261:	add    DWORD PTR [rcx],0x778095b6
  422267:	ins    BYTE PTR es:[rdi],dx
  422268:	leave  
  422269:	fs rex.WRX (bad) 
  42226c:	and    eax,0xf495c6fd
  422271:	push   rsp
  422272:	loop   0x4222d5
  422274:	cs xchg ecx,edx
  422277:	movabs eax,ds:0x25197c91697c61e6
  422280:	ss (bad) 
  422282:	pop    rdi
  422283:	rex.R
  422284:	data16 loope 0x4222fc
  422287:	(bad)  
  422288:	test   BYTE PTR [rcx],ch
  42228a:	adc    eax,0xd5b1881e
  42228f:	clc    
  422290:	rex.WX
  422291:	ds adc eax,0x9359cf57
  422297:	rex.X pop rsi
  422299:	jb     0x42230b
  42229b:	or     r14,QWORD PTR [rbx]
  42229e:	rex.WR xor r9b,bl
  4222a1:	add    esi,edi
  4222a3:	and    eax,0xe14bda0e
  4222a8:	(bad)
  4222ac:	(bad)  
  4222ad:	push   rdx
  4222ae:	fdivr  DWORD PTR [rdx+0x4]
  4222b1:	rex.RXB or r10d,r13d
  4222b4:	cwde   
  4222b5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4222b6:	xor    DWORD PTR [rsi],eax
  4222b8:	(bad)  
  4222b9:	adc    eax,DWORD PTR [rdx+0x2582b300]
  4222bf:	sbb    DWORD PTR [rdx],r9d
  4222c2:	mov    eax,0xb7107754
  4222c7:	iret   
  4222c8:	stos   BYTE PTR es:[edi],al
  4222ca:	mov    ah,0xbf
  4222cc:	push   rsp
  4222cd:	adc    ah,BYTE PTR [rax]
  4222cf:	(bad)  
  4222d0:	xchg   esi,eax
  4222d1:	rex.WRXB xchg r8,rax
  4222d3:	(bad)  
  4222d4:	(bad)  
  4222d5:	rex.WRB ins BYTE PTR es:[rdi],dx
  4222d7:	sub    ch,dl
  4222d9:	test   al,0xe4
  4222db:	movabs eax,ds:0xecc22a26f5dee803
  4222e4:	add    BYTE PTR [rdx-0x31],cl
  4222e7:	add    ebx,DWORD PTR [rbx]
  4222e9:	ret    0x80a4
  4222ec:	loopne 0x42234a
  4222ee:	fsub   DWORD PTR [rcx-0x687e74ae]
  4222f4:	pop    rbx
  4222f5:	jg     0x42236a
  4222f7:	push   rcx
  4222f8:	xchg   ebp,eax
  4222f9:	(bad)  
  4222fa:	int3   
  4222fb:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4222fc:	sub    eax,0x679b1d77
  422301:	fwait
  422302:	pop    rcx
  422303:	push   rbp
  422304:	xchg   ecx,eax
  422305:	mov    ecx,DWORD PTR [rcx-0x4ee69f86]
  42230b:	rex.W loop 0x422365
  42230e:	(bad)  
  42230f:	cs sbb eax,0xed7175fe
  422315:	clc    
  422316:	mov    edx,0xd46f3441
  42231b:	xchg   edi,eax
  42231c:	mov    al,0x28
  42231e:	add    eax,0x4de0c58e
  422323:	and    bl,bh
  422325:	jge    0x42231c
  422327:	gs stos DWORD PTR es:[rdi],eax
  422329:	add    DWORD PTR [rbp+0x7f],esp
  42232c:	test   BYTE PTR [rcx],0x4c
  42232f:	add    eax,0xceb93976
  422334:	and    edi,DWORD PTR [rcx]
  422336:	imul   edx,DWORD PTR [rdx-0x37643095],0x61
  42233d:	ins    DWORD PTR es:[rdi],dx
  42233e:	lods   eax,DWORD PTR ds:[rsi]
  42233f:	loope  0x422302
  422341:	rex outs dx,BYTE PTR ds:[rsi]
  422343:	ins    BYTE PTR es:[rdi],dx
  422344:	sub    BYTE PTR [rdi+rax*8+0x5d],al
  422348:	test   BYTE PTR [rbx-0x6a],bh
  42234b:	(bad)
  42234e:	in     eax,0xfc
  422350:	pop    rsp
  422351:	adc    esp,DWORD PTR [rax-0x1b8c6b63]
  422357:	fucomi st,st(3)
  422359:	(bad)  
  42235a:	sub    DWORD PTR [rdi],0x1396a9b4
  422360:	push   0xffffffffebc9efa2
  422365:	shr    BYTE PTR [rcx+rbp*1],cl
  422368:	and    dh,BYTE PTR [rbx+rax*1]
  42236b:	mov    edi,0x53d12476
  422370:	(bad)  
  422371:	mov    eax,0x92a47b8a
  422376:	fwait
  422377:	movabs eax,ds:0x402f92a5ea9e084d
  422380:	jg     0x4223b1
  422382:	es rex.R (bad) 
  422385:	(bad)  
  422386:	sbb    eax,0xd44402b8
  42238b:	rcl    BYTE PTR [rdx],0x4c
  42238e:	mov    esp,0xbaae577f
  422393:	(bad)  
  422394:	outs   dx,DWORD PTR ds:[rsi]
  422395:	sbb    ebp,DWORD PTR [rbx]
  422397:	and    esp,ecx
  422399:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  42239a:	cli    
  42239b:	(bad)  
  42239c:	movsxd edx,DWORD PTR [rbx+0x58]
  42239f:	fdiv   DWORD PTR [rcx]
  4223a1:	jrcxz  0x4223f2
  4223a3:	(bad)  
  4223a4:	pop    rsi
  4223a5:	sbb    DWORD PTR [rbp+0x744296d4],0xffffffe0
  4223ac:	(bad)  
  4223ad:	adc    BYTE PTR [rax-0x6154e74b],0xb9
  4223b4:	leave  
  4223b5:	(bad)  
  4223b6:	push   rsi
  4223b7:	lahf   
  4223b8:	adc    DWORD PTR [rdx-0x6e],edx
  4223bb:	(bad)  
  4223bc:	(bad)  
  4223bd:	jb     0x4223d7
  4223bf:	push   rdi
  4223c0:	scas   eax,DWORD PTR es:[rdi]
  4223c1:	jle    0x4223b2
  4223c3:	sbb    edi,DWORD PTR cs:[rdi-0x45736d06]
  4223ca:	rex.WRXB and BYTE PTR [r13+r12*8-0x7897055],r15b
  4223d2:	(bad)  
  4223d3:	clc    
  4223d4:	outs   dx,DWORD PTR ds:[rsi]
  4223d5:	adc    ebp,DWORD PTR [rdi+0x3]
  4223d8:	je     0x4223f5
  4223da:	xor    DWORD PTR [rdi+0x1eb36563],esp
  4223e0:	jp     0x4223be
  4223e2:	imul   esi,edx,0xffffffaa
  4223e5:	sub    al,0xd7
  4223e7:	mov    dh,0x48
  4223e9:	mov    bl,0xc2
  4223eb:	adc    eax,0x1e2f3006
  4223f0:	xor    BYTE PTR [rbp+0x372e1ae1],al
  4223f6:	xchg   BYTE PTR [rdi],dh
  4223f8:	mov    edi,0xfa7254dd
  4223fd:	movsxd ecx,ecx
  4223ff:	mov    ch,BYTE PTR [rax-0x44153501]
  422405:	rex.RX push rbx
  422407:	pop    rsi
  422408:	cmc    
  422409:	adc    eax,0x3fa11d9a
  42240e:	ja     0x422473
  422410:	loopne 0x422475
  422412:	add    DWORD PTR [rsi],edx
  422414:	add    al,0xfa
  422416:	jmp    0x4223b7
  422418:	in     eax,dx
  422419:	jmp    0x42240f
  42241b:	(bad)  
  42241c:	jae    0x4223c8
  42241e:	rcl    BYTE PTR [rdi-0x47],0x66
  422422:	xor    al,0x27
  422424:	push   rdi
  422425:	test   BYTE PTR [rbx+0x555a5c3b],0xab
  42242c:	pop    rax
  42242d:	ins    DWORD PTR es:[rdi],dx
  42242e:	idiv   cl
  422430:	adc    bh,dh
  422432:	repz es in al,dx
  422435:	(bad)  
  422436:	rex.RB or al,0xa0
  422439:	lock add BYTE PTR [rcx+rbx*2],ch
  42243d:	stos   BYTE PTR es:[rdi],al
  42243e:	rex.RB sar BYTE PTR [rip+0xffffffffe1ab8415],1        # 0xffffffffe1eda85a
  422445:	rol    BYTE PTR [rax+rbp*8],cl
  422448:	std    
  422449:	mov    cl,BYTE PTR [rsi+0x689c95d3]
  42244f:	fistp  QWORD PTR [rdi-0x16]
  422452:	(bad)  
  422454:	call   rsp
  422456:	jae    0x422455
  422458:	jmp    FWORD PTR [rcx+0x53f046e7]
  42245e:	scas   eax,DWORD PTR es:[rdi]
  42245f:	xchg   edi,eax
  422460:	(bad)  
  422461:	adc    BYTE PTR [rcx+0x178bf906],al
  422467:	jge    0x4223fc
  422469:	(bad)  
  42246a:	(bad)  
  42246b:	mov    esi,0xfbd27de9
  422470:	(bad)  
  422471:	outs   dx,DWORD PTR ds:[rsi]
  422472:	jae    0x422451
  422474:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  422475:	cmp    DWORD PTR [rdi],ebp
  422477:	jae    0x4224f7
  422479:	in     eax,0x51
  42247b:	rex icebp 
  42247d:	add    al,0x92
  42247f:	fs xchg esp,eax
  422481:	rex.WB rcr BYTE PTR [r9+0x72],cl
  422485:	mov    bl,0x82
  422487:	push   rdx
  422488:	mov    ebx,0x7bc8a381
  42248d:	(bad)  
  42248e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42248f:	fcom   QWORD PTR [rbp-0x7db70fa7]
  422495:	sub    eax,0x842e94cf
  42249a:	push   rsi
  42249b:	adc    al,0xb
  42249d:	retf   0xd9cc
  4224a0:	xlat   BYTE PTR ds:[rbx]
  4224a1:	movabs ds:0x3c865ae2b2d5d25a,eax
  4224aa:	cmp    al,0x76
  4224ac:	sub    BYTE PTR [rdx+0x46],r13b
  4224b0:	mov    esi,0xddf0f6f5
  4224b5:	sti    
  4224b6:	ret    
  4224b7:	shl    ecx,cl
  4224b9:	scas   eax,DWORD PTR es:[rdi]
  4224ba:	jrcxz  0x422533
  4224bc:	pop    rsi
  4224bd:	sti    
  4224be:	(bad)  
  4224bf:	(bad)  
  4224c0:	xchg   ebx,eax
  4224c1:	in     eax,dx
  4224c2:	cmp    BYTE PTR fs:[rip+0xffffffff98279f8c],0x12        # 0xffffffff9869c456
  4224ca:	imul   esi,DWORD PTR [rip+0x2789c6e4],0x51ac7180        # 0x27cbebb8
  4224d4:	rex.WR jl 0x422506
  4224d7:	push   rax
  4224d8:	xchg   ebp,eax
  4224d9:	(bad)  
  4224da:	rex.X jbe 0x4224bb
  4224dd:	shl    edi,cl
  4224df:	jmp    0xffffffffbffac3d9
  4224e4:	sub    eax,0x2c923936
  4224e9:	out    dx,eax
  4224ea:	rcl    ah,0xd6
  4224ed:	(bad)  
  4224ee:	stos   BYTE PTR es:[rdi],al
  4224ef:	(bad)
  4224f2:	or     dh,BYTE PTR [rsi]
  4224f4:	xchg   ebp,eax
  4224f5:	sub    al,0x7f
  4224f7:	rex.RX pop rax
  4224f9:	pop    rdi
  4224fa:	pop    rbp
  4224fb:	cmp    edi,eax
  4224fd:	jle    0x4224d6
  4224ff:	cmp    DWORD PTR [rdx],r15d
  422502:	pop    rdx
  422503:	or     eax,0xa93dfcf2
  422508:	sbb    eax,0x4c77213a
  42250d:	jrcxz  0x4224db
  42250f:	or     al,0x9c
  422511:	and    ch,bl
  422513:	mov    bh,0x19
  422515:	icebp  
  422516:	xlat   BYTE PTR ds:[rbx]
  422517:	(bad)  
  422518:	(bad)  
  422519:	pop    rsi
  42251a:	rex.WX (bad) 
  42251d:	mov    bl,0x4a
  42251f:	imul   ecx,DWORD PTR [rdx-0x62],0xa9c4e45
  422526:	or     al,BYTE PTR [rip+0x4c7b6a27]        # 0x4cbd8f53
  42252c:	(bad)  
  42252d:	stc    
  42252e:	and    DWORD PTR [rip+0x71f85430],edx        # 0x723a7964
  422534:	and    bl,dh
  422536:	mov    eax,0x45cb4a00
  42253b:	mov    ?,WORD PTR [rsi+rbx*8]
  42253e:	(bad)
  422542:	push   0xfffffffffffffffc
  422544:	rex.WX mov spl,0xd6
  422547:	in     al,0x72
  422549:	cmp    DWORD PTR [rdi],esi
  42254b:	(bad)  
  42254c:	ret    
  42254d:	push   0x76635364
  422552:	lods   al,BYTE PTR ds:[rsi]
  422553:	scas   eax,DWORD PTR es:[rdi]
  422554:	loope  0x4224ff
  422556:	imul   ecx,DWORD PTR [rbp+0x3b],0xffffff8c
  42255a:	jmp    0x4224e6
  42255c:	mov    al,dl
  42255e:	pushf  
  42255f:	rex.RX retf 
  422561:	xchg   ebp,eax
  422562:	mul    bl
  422564:	ja     0x4225ba
  422566:	outs   dx,DWORD PTR ds:[rsi]
  422567:	je     0x4225db
  422569:	jns    0x4225d7
  42256b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42256c:	out    dx,eax
  42256d:	std    
  42256e:	in     eax,0x37
  422570:	cmp    eax,0xf3745af1
  422575:	cs nop
  422577:	ret    0xd543
  42257a:	adc    ebp,DWORD PTR [rsi+0x2d]
  42257d:	ss mov bl,0x62
  422580:	jno    0x4225f1
  422582:	out    dx,al
  422583:	out    0x88,eax
  422585:	adc    eax,ebp
  422587:	jge    0x4225fd
  422589:	mov    eax,0xd9e9566
  42258e:	lahf   
  42258f:	jne    0x4225e8
  422591:	imul   esi,DWORD PTR [rip+0x56d80eb7],0x1776c146        # 0x571a3452
  42259b:	(bad)  
  42259c:	(bad)  
  42259d:	jb     0x4225ac
  42259f:	out    dx,al
  4225a0:	cmp    dh,dh
  4225a2:	rex.RB mov r14b,0x30
  4225a5:	sub    BYTE PTR [rdi+0x37fd652a],dh
  4225ab:	lea    ebp,[rcx]
  4225ad:	(bad)  
  4225ae:	pushf  
  4225af:	rex.WR outs dx,BYTE PTR ds:[rsi]
  4225b1:	in     eax,dx
  4225b2:	jp     0x4225c4
  4225b4:	int    0xd8
  4225b6:	ins    BYTE PTR es:[rdi],dx
  4225b7:	xor    edx,DWORD PTR [rcx+0x3]
  4225ba:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4225bb:	shl    BYTE PTR [rbx+0x31],cl
  4225be:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4225bf:	sub    dh,bh
  4225c1:	or     al,BYTE PTR [rsp+rcx*1+0x53]
  4225c5:	sub    eax,0x9c4f23d4
  4225ca:	scas   al,BYTE PTR es:[rdi]
  4225cb:	or     bp,WORD PTR [rax]
  4225ce:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4225cf:	movsxd ecx,DWORD PTR [rbx]
  4225d1:	(bad)  
  4225d2:	(bad)  
  4225d3:	stos   BYTE PTR es:[rdi],al
  4225d4:	push   rbp
  4225d5:	test   eax,0xa670e5f2
  4225da:	jno    0x4225c2
  4225dc:	lahf   
  4225dd:	jns    0x4225ad
  4225df:	pop    rsp
  4225e0:	(bad)  
  4225e1:	(bad)  
  4225e2:	xchg   ebp,ecx
  4225e4:	fidiv  DWORD PTR [rax-0x795363bc]
  4225ea:	out    0x55,al
  4225ec:	jl     0x42264c
  4225ee:	(bad)  
  4225ef:	stc    
  4225f0:	iret   
  4225f1:	clc    
  4225f2:	jle    0x42257b
  4225f4:	jb     0x422649
  4225f6:	xchg   ebp,eax
  4225f7:	push   rdx
  4225f8:	jne    0x422652
  4225fa:	fsubrp st(0),st
  4225fc:	call   0xffffffff9085690b
  422601:	cmp    DWORD PTR [rax],ecx
  422603:	xchg   ebp,eax
  422604:	adc    dh,dh
  422606:	(bad)  
  422607:	cs js  0x4225da
  42260a:	sahf   
  42260b:	test   DWORD PTR [rbp+rdi*4-0x66925ca5],edi
  422612:	rex.X mov sil,0x37
  422615:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  422616:	mov    ch,0x8
  422618:	out    0xc7,al
  42261a:	rex.WXB lods rax,QWORD PTR ds:[rsi]
  42261c:	(bad)  
  42261d:	data16 (bad) 
  42261f:	pop    rax
  422620:	outs   dx,BYTE PTR ds:[rsi]
  422621:	xchg   edi,eax
  422622:	ja     0x42269e
  422624:	rex.XB (bad) 
  422626:	add    dl,al
  422628:	js     0x42269c
  42262a:	(bad)  
  42262b:	lea    esp,[rdi-0x340a0f41]
  422631:	retf   0xd826
  422634:	rex.W xor BYTE PTR [rax],0x3a
  422638:	cli    
  422639:	(bad)  
  42263a:	mov    ch,0xc7
  42263c:	(bad)  
  42263d:	rex.WB (bad) 
  42263f:	adc    ah,BYTE PTR [rbx-0x31e813e]
  422645:	repz (bad) 
  422647:	push   rbp
  422648:	cs jo  0x422631
  42264b:	mov    esp,0xb2b043d1
  422650:	rex.WRXB mov r11b,0x6c
  422653:	(bad)  
  422654:	pop    rcx
  422655:	cwde   
  422656:	push   rax
  422657:	(bad)  
  422658:	test   ch,bl
  42265a:	mov    esi,fs
  42265c:	cwde   
  42265d:	xor    al,BYTE PTR [rdi]
  42265f:	(bad)  
  422660:	clc    
  422661:	test   al,0x57
  422663:	hlt    
  422664:	rex.WRX
  422665:	rex.R (bad) 
  422667:	shr    BYTE PTR [rdi-0x3c13b2af],1
  42266d:	(bad)  
  42266e:	jl     0x4226bd
  422670:	idiv   BYTE PTR [rsi]
  422672:	jnp    0x422666
  422674:	jns    0x4226c8
  422676:	push   rbx
  422677:	cmp    al,BYTE PTR [rdx-0x12]
  42267a:	rex.WRXB sbb QWORD PTR [r11],r10
  42267d:	xchg   edi,eax
  42267e:	lods   al,BYTE PTR ds:[rsi]
  42267f:	(bad)  
  422680:	repnz (bad) 
  422682:	(bad)  
  422683:	push   rax
  422684:	lea    edi,[rbx-0x56c07ff7]
  42268a:	sub    DWORD PTR [rbx+0xa],esp
  42268d:	(bad)  
  42268e:	test   eax,0xfcc369c0
  422693:	(bad)  
  422694:	xor    ecx,DWORD PTR [rcx-0x4e6d9ece]
  42269a:	mov    bh,BYTE PTR [rcx+0x62]
  42269d:	maskmovq mm2,mm0
  4226a0:	fcmovnb st,st(0)
  4226a2:	rex.R jne 0x4226ed
  4226a5:	push   rsp
  4226a6:	int3   
  4226a7:	rex.RX movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4226a9:	pop    rsp
  4226aa:	sbb    al,0x5f
  4226ac:	pop    rsi
  4226ad:	cwde   
  4226ae:	(bad)  
  4226af:	rex.RX xchg edi,eax
  4226b1:	addr32 (bad) 
  4226b3:	sub    edx,DWORD PTR [rdx-0xd]
  4226b6:	sbb    ecx,DWORD PTR [rsi+0xc]
  4226b9:	movabs eax,ds:0x65f4b8149b7f5349
  4226c2:	mov    WORD PTR [rdx-0x6],?
  4226c5:	cmp    DWORD PTR [rip+0xfffffffff2398234],esp        # 0xfffffffff27ba8ff
  4226cb:	mov    dl,0x3d
  4226cd:	jmp    0x422730
  4226cf:	imul   esp,DWORD PTR [rax+0x587ee657],0x3b
  4226d6:	xor    BYTE PTR [rsi-0xd],bl
  4226d9:	cmc    
  4226da:	cmp    eax,DWORD PTR [rbx+rax*1]
  4226dd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4226de:	int    0x48
  4226e0:	and    esi,DWORD PTR [rsi+0x35bd1e82]
  4226e6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4226e7:	add    bl,cl
  4226e9:	movabs al,ds:0x64a0acbeeb4b718e
  4226f2:	loopne 0x4226d4
  4226f4:	pop    rcx
  4226f5:	ins    DWORD PTR es:[rdi],dx
  4226f6:	imul   esi,DWORD PTR [rax+0x53dc29a9],0xfffffff4
  4226fd:	jns    0x42268e
  4226ff:	mov    bl,bl
  422701:	jle    0x4226b7
  422703:	rex.RB
  422704:	rex.W (bad) 
  422706:	fdivr  DWORD PTR [rdi-0x1c029297]
  42270c:	je     0x4226f7
  42270e:	xchg   esi,eax
  42270f:	repz mov WORD PTR [rbp+0x11],gs
  422713:	add    al,0xd0
  422715:	lods   al,BYTE PTR ds:[rsi]
  422716:	jo     0x4226fa
  422718:	mov    ebx,0x92496985
  42271d:	pop    rax
  42271e:	(bad)  
  42271f:	xchg   BYTE PTR [rbp+0x20],cl
  422722:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  422723:	push   rbp
  422724:	fsubp  st(4),st
  422726:	mov    dl,0xc1
  422728:	enter  0x18ba,0x7d
  42272c:	imul   edx,esi,0x20
  42272f:	xor    eax,0xe57b5377
  422734:	gs xchg esi,eax
  422736:	mov    dh,0x85
  422738:	neg    DWORD PTR [rsi+0x57]
  42273b:	enter  0x1a50,0x40
  42273f:	pop    rsp
  422740:	mov    dl,0xc0
  422742:	jrcxz  0x42271a
  422744:	rex.WX (bad) 
  422746:	push   rax
  422747:	(bad)  
  422748:	jnp    0x422732
  42274a:	adc    bh,BYTE PTR [rsi]
  42274c:	adc    edi,edi
  42274e:	mov    ecx,0x1b6bc53c
  422753:	mov    BYTE PTR [rdx],al
  422755:	mov    BYTE PTR [rcx-0x4d242467],al
  42275b:	in     al,0xc
  42275d:	leave  
  42275e:	pop    rdi
  42275f:	jbe    0x4226e6
  422761:	outs   dx,BYTE PTR ds:[rsi]
  422762:	rex.WXB
  422763:	addr32 or eax,ebp
  422766:	lods   al,BYTE PTR ds:[rsi]
  422767:	stos   BYTE PTR es:[rdi],al
  422768:	mov    bx,sp
  42276b:	jbe    0x42275a
  42276d:	loopne 0x422732
  42276f:	xlat   BYTE PTR ds:[rbx]
  422770:	lock (bad) 
  422772:	jmp    rsi
  422774:	pop    rcx
  422775:	pop    rbx
  422776:	(bad)  
  422777:	(bad)  
  422778:	xchg   esi,eax
  422779:	pop    rsp
  42277a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  42277b:	and    cl,cl
  42277d:	or     bh,BYTE PTR [rax-0x2d895963]
  422783:	sub    BYTE PTR [rcx+0x7ccedc8f],cl
  422789:	imul   ecx,DWORD PTR [rbp+0x4b],0x834c7a2e
  422790:	mov    fs,WORD PTR [rsp+rdi*2+0x12065f43]
  422797:	rex.WXB outs dx,DWORD PTR ds:[rsi]
  422799:	sbb    ch,BYTE PTR [rcx+0x4f]
  42279c:	cld    
  42279d:	sub    BYTE PTR [rip+0x4674356a],dl        # 0x46b65d0d
  4227a3:	mov    bh,BYTE PTR [rdx+rax*4-0x1185fa0]
  4227aa:	movabs ds:0xc34164e0158348b1,al
  4227b3:	lock (bad) 
  4227b5:	push   rsi
  4227b6:	xchg   esi,eax
  4227b7:	xchg   BYTE PTR [rbp+rsi*1+0x242dd11a],cl
  4227be:	xchg   DWORD PTR [rdx+0x4b],eax
  4227c1:	rex.WRXB mov r13b,0x92
  4227c4:	adc    edx,DWORD PTR [rbp+rcx*1+0x1c]
  4227c8:	scas   al,BYTE PTR es:[rdi]
  4227c9:	sar    DWORD PTR [rdx+rdi*8-0x47],0xc
  4227ce:	lods   eax,DWORD PTR ds:[rsi]
  4227cf:	sub    eax,0xfad2d7b9
  4227d4:	fisub  DWORD PTR [rbx+0x7d93895b]
  4227da:	ret    
  4227db:	in     eax,0x32
  4227dd:	or     DWORD PTR [rbx-0x68],edx
  4227e0:	mov    ch,0xe5
  4227e2:	es push rdi
  4227e4:	add    dh,BYTE PTR [rdi+rax*1]
  4227e7:	jle    0x422770
  4227e9:	(bad)  
  4227ea:	cmp    DWORD PTR [rcx],ebx
  4227ec:	test   al,0xab
  4227ee:	int3   
  4227ef:	cmc    
  4227f0:	call   0x5498379d
  4227f5:	cmp    al,BYTE PTR [rcx+0x378ec60a]
  4227fb:	sar    DWORD PTR [rax+0x1b],cl
  4227fe:	out    0xee,eax
  422800:	mov    cl,0x5d
  422802:	movabs ds:0xd622c618544bb4e8,eax
  42280b:	rex.WR int3 
  42280d:	mov    DWORD PTR [rax-0x2ce2a4b3],ebx
  422813:	fiadd  DWORD PTR [rsi]
  422815:	retf   0xe883
  422818:	retf   0x2399
  42281b:	rex.WX movabs rsi,0x444848944ca84f02
  422825:	adc    DWORD PTR [rax-0xa],edi
  422828:	ret    
  422829:	mov    ch,0x4e
  42282b:	es sub al,0x87
  42282e:	not    bh
  422830:	mov    WORD PTR [rcx-0x87ba342],fs
  422836:	mov    esp,0x16da6ac3
  42283b:	mov    ecx,0x77e35766
  422840:	mov    cl,0x29
  422842:	int    0xdd
  422844:	not    dl
  422846:	add    DWORD PTR [rsi-0x8866da3],ecx
  42284c:	xor    al,0x42
  42284e:	adc    ecx,DWORD PTR [rax]
  422850:	outs   dx,BYTE PTR ds:[rsi]
  422851:	not    DWORD PTR [rbp-0x48]
  422854:	jns    0x422853
  422856:	cmc    
  422857:	nop
  422858:	and    al,0xab
  42285a:	push   rcx
  42285b:	(bad)  
  42285c:	jbe    0x4228d9
  42285e:	in     eax,dx
  42285f:	(bad)  
  422860:	outs   dx,BYTE PTR ds:[rsi]
  422861:	xchg   edx,eax
  422862:	and    BYTE PTR [rbx-0xe866491],ch
  422868:	cli    
  422869:	sbb    ebx,DWORD PTR [rsi+0x7a4c7519]
  42286f:	and    eax,0xc8a8b7c1
  422874:	adc    edx,edi
  422876:	xchg   esp,eax
  422877:	ficomp WORD PTR [rax+0x39]
  42287a:	hlt    
  42287b:	(bad)  
  42287c:	mov    ebp,0xd8bdedea
  422881:	(bad)  
  422882:	out    dx,al
  422883:	cmp    eax,0xb7b87cff
  422888:	cmp    ebx,esp
  42288a:	jmp    0x422901
  42288c:	stos   BYTE PTR es:[rdi],al
  42288d:	(bad)  
  42288e:	(bad)
  422892:	popf   
  422893:	rex.W (bad) [rbp+0xb9d3564]
  42289a:	xor    BYTE PTR ds:[rdi+0x4363d21f],bh
  4228a1:	out    0xff,al
  4228a3:	or     al,0x3e
  4228a5:	xor    DWORD PTR [rdi],esi
  4228a7:	sbb    cl,BYTE PTR [rip+0xffffffffc6ec0cd5]        # 0xffffffffc72e3582
  4228ad:	(bad)  
  4228ae:	cmc    
  4228af:	and    dl,BYTE PTR [rbp+0x16]
  4228b2:	lahf   
  4228b3:	rex.RB
  4228b4:	rex.WRX
  4228b5:	fwait
  4228b6:	sub    QWORD PTR [rsi],rdx
  4228b9:	mov    esp,0x713e5259
  4228be:	retf   
  4228bf:	(bad)
  4228c2:	sbb    edi,ebp
  4228c4:	nop
  4228c5:	or     dh,ah
  4228c7:	mov    DWORD PTR [rax],ebp
  4228c9:	xchg   ecx,eax
  4228ca:	rex.WRX cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4228cc:	fucomi st,st(7)
  4228ce:	(bad)  
  4228cf:	rex.X
  4228d0:	repz (bad) 
  4228d2:	fstp   TBYTE PTR [rsp+rdx*4+0x32]
  4228d6:	fs (bad) 
  4228d8:	pop    rsp
  4228d9:	(bad)  
  4228da:	push   rbp
  4228db:	or     al,0x29
  4228dd:	test   ebp,ebx
  4228df:	lods   al,BYTE PTR ds:[rsi]
  4228e0:	xor    al,0x49
  4228e2:	xor    ah,dl
  4228e4:	(bad)  
  4228e5:	pop    rbx
  4228e6:	sbb    BYTE PTR [rdi+0x7230412e],dl
  4228ec:	in     eax,dx
  4228ed:	sbb    al,0x5a
  4228ef:	mov    BYTE PTR [rdi],0x56
  4228f2:	movabs ds:0xb4da0fa4ed548b65,eax
  4228fb:	ds (bad) 
  4228fd:	rcr    edx,1
  4228ff:	sbb    al,0xbd
  422901:	repz cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  422903:	(bad)  
  422904:	cmp    DWORD PTR [rcx-0x3c],edi
  422907:	(bad)  
  422908:	mov    al,BYTE PTR [rax+0x3b]
  42290b:	clc    
  42290c:	lods   al,BYTE PTR ds:[rsi]
  42290d:	paddsb mm0,QWORD PTR [rdx]
  422910:	cld    
  422911:	mov    WORD PTR [rdx+rcx*1-0x69],cs
  422915:	hlt    
  422916:	(bad)  
  422917:	jle    0x42289d
  422919:	rex.RXB
  42291a:	repnz out 0xc1,eax
  42291d:	(bad)  
  42291e:	out    0xdf,al
  422920:	(bad)  
  422921:	idiv   DWORD PTR [rax+riz*2]
  422924:	and    eax,0x902a8367
  422929:	outs   dx,DWORD PTR ds:[rsi]
  42292a:	movabs ds:0x3405aebb49fb947d,eax
  422933:	or     ebx,0xffffffa3
  422936:	jae    0x422976
  422938:	mov    WORD PTR [rax+rcx*8],cs
  42293b:	jrcxz  0x42291a
  42293d:	rex.WR jb 0x422948
  422940:	push   0x3d
  422942:	mov    DWORD PTR [rax+0x10],esi
  422945:	rex.XB cwde 
  422947:	popf   
  422948:	(bad)  
  422949:	out    0x92,eax
  42294b:	fld    DWORD PTR [rcx+0x757d4bdd]
  422951:	mov    ebp,0x65c8ce92
  422956:	mov    esp,0x3d3496cd
  42295b:	and    DWORD PTR [rcx],esp
  42295d:	enter  0x6e20,0x73
  422961:	stos   BYTE PTR es:[rdi],al
  422962:	shrd   DWORD PTR [rdx],edi,cl
  422965:	sub    eax,0x28e6d33f
  42296a:	lods   eax,DWORD PTR ds:[rsi]
  42296b:	mov    ah,0x86
  42296d:	rex.WXB test r14b,0x74
  422971:	lods   eax,DWORD PTR ds:[rsi]
  422972:	(bad)  
  422973:	sbb    al,0x28
  422975:	in     al,0xeb
  422977:	int    0x6c
  422979:	or     eax,0x551f3378
  42297e:	xchg   esi,eax
  42297f:	stos   BYTE PTR es:[rdi],al
  422980:	shr    BYTE PTR [rbp-0x72dc050e],1
  422986:	push   rcx
  422987:	push   rax
  422988:	and    al,0xd4
  42298a:	scas   al,BYTE PTR es:[rdi]
  42298b:	cmp    esi,ecx
  42298d:	sbb    al,0x58
  42298f:	test   al,0x1a
  422991:	fwait
  422992:	mov    dh,0x4a
  422994:	mov    ecx,0xf4580a02
  422999:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42299a:	fcomp  DWORD PTR [rbp+0x12]
  42299d:	mov    edx,0x1073cafe
  4229a2:	int    0xf7
  4229a4:	xchg   esp,eax
  4229a5:	(bad)  
  4229a6:	stos   BYTE PTR es:[rdi],al
  4229a7:	in     al,dx
  4229a8:	adc    DWORD PTR [rcx-0x38],ebp
  4229ab:	sbb    al,0x29
  4229ad:	rex.W (bad) 
  4229af:	lea    edi,[rdx-0x68770895]
  4229b5:	adc    ch,BYTE PTR [rax-0x22]
  4229b8:	shr    DWORD PTR [rsi-0x448fb45f],0x7b
  4229bf:	jns    0x4229d2
  4229c1:	stos   DWORD PTR es:[rdi],eax
  4229c2:	es rex.W jge 0x422957
  4229c6:	(bad)  
  4229c7:	push   0x3a136b13
  4229cc:	mov    ah,0x84
  4229ce:	add    al,0xa9
  4229d0:	rex.WR (bad) 
  4229d2:	rex push rbp
  4229d4:	add    al,0x90
  4229d6:	and    DWORD PTR [rdi],ebx
  4229d8:	adc    DWORD PTR [rdx+0x1b],eax
  4229db:	test   al,0x6a
  4229dd:	mov    bh,0x11
  4229df:	xor    eax,0x9ce27019
  4229e4:	rex.WRX
  4229e5:	rex.WX ja 0x42297c
  4229e8:	pop    rcx
  4229e9:	mov    ebx,DWORD PTR [rdx+0x27]
  4229ec:	popf   
  4229ed:	(bad)  
  4229ee:	xor    al,0x42
  4229f0:	fwait
  4229f1:	pop    rbp
  4229f2:	cmp    dl,bl
  4229f4:	repnz scas al,BYTE PTR es:[rdi]
  4229f6:	rex cdq 
  4229f8:	xchg   ebp,eax
  4229f9:	and    al,0xb4
  4229fb:	imul   edx,eax,0xfffffffd
  4229fe:	jns    0x42298c
  422a00:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  422a01:	(bad)
  422a04:	div    DWORD PTR [rdi+0x43]
  422a07:	(bad)
  422a0b:	shl    DWORD PTR [rdi+rcx*1],0xf2
  422a0f:	(bad)
  422a12:	rex.W retf 
  422a14:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  422a15:	(bad)  
  422a16:	xor    ebp,DWORD PTR [rip+0x3f4ae311]        # 0x3f8d0d2d
  422a1c:	(bad)  
  422a1d:	scas   eax,DWORD PTR es:[rdi]
  422a1e:	scas   eax,DWORD PTR es:[rdi]
  422a1f:	xchg   ecx,eax
  422a20:	rex.W adc sil,BYTE PTR [rcx+rdx*4+0x11]
  422a25:	test   DWORD PTR [rdx],eax
  422a27:	adc    BYTE PTR [rax],0x5e
  422a2a:	cmp    esp,DWORD PTR [rbx]
  422a2c:	iret   
  422a2d:	shl    DWORD PTR [rbx-0x63],1
  422a30:	or     eax,0xc9145b07
  422a35:	push   rbx
  422a36:	cmp    ebp,DWORD PTR [rsi]
  422a38:	cwde   
  422a39:	xchg   ebp,eax
  422a3a:	nop
  422a3b:	(bad)  
  422a3c:	loopne 0x422aa3
  422a3e:	in     al,0x9c
  422a40:	sti    
  422a41:	mov    al,0xac
  422a43:	sub    bl,BYTE PTR [rbx]
  422a45:	pop    rax
  422a46:	in     ax,dx
  422a48:	scas   al,BYTE PTR es:[rdi]
  422a49:	push   rax
  422a4a:	or     al,0xe2
  422a4c:	sbb    BYTE PTR [rdx],ch
  422a4e:	sbb    al,0xe1
  422a50:	je     0x422aaa
  422a52:	sub    eax,0x93ad706
  422a57:	leave  
  422a58:	(bad)  
  422a59:	adc    bp,WORD PTR [rdx]
  422a5c:	leave  
  422a5d:	(bad)
  422a60:	jrcxz  0x4229fe
  422a62:	call   FWORD PTR [rbx-0x27]
  422a65:	test   dl,cl
  422a67:	push   rsi
  422a68:	(bad)  
  422a69:	rex.RXB pop r8
  422a6b:	(bad)  
  422a6c:	sahf   
  422a6d:	es fs popf 
  422a70:	add    eax,0x49
  422a73:	rex.RB pop r15
  422a75:	ins    DWORD PTR es:[rdi],dx
  422a76:	jp     0x422ab2
  422a78:	fmul   QWORD PTR [rdi]
  422a7a:	xchg   esi,eax
  422a7b:	mov    dh,0x9e
  422a7d:	or     eax,0xc99326
  422a82:	or     al,cl
  422a84:	rex.WXB (bad) 
  422a86:	push   rdx
  422a87:	jbe    0x422acd
  422a89:	rex.WXB pop r8
  422a8b:	loope  0x422ac9
  422a8d:	add    BYTE PTR [rdx],cl
  422a8f:	sbb    ch,al
  422a91:	adc    eax,0xa1448e8e
  422a96:	mov    ecx,0x16a8e9bc
  422a9b:	fst    DWORD PTR ss:[rcx+0x54]
  422a9f:	stos   DWORD PTR es:[rdi],eax
  422aa0:	sbb    BYTE PTR [rdi+0x6cb37d50],bh
  422aa6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  422aa7:	test   al,0xab
  422aa9:	rex.X
  422aaa:	rex.X
  422aab:	rex.XB movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  422aad:	mov    al,0x45
  422aaf:	mov    cl,0x76
  422ab1:	sub    BYTE PTR [rcx],ch
  422ab3:	rex.WX mov bl,0x1c
  422ab6:	mov    WORD PTR [rax],ss
  422ab8:	shl    BYTE PTR [rsi-0x7d2033fd],1
  422abe:	mov    DWORD PTR [rax],esi
  422ac0:	icebp  
  422ac1:	movabs ds:0xb3f55dc0daadddb4,al
  422aca:	rex.RX mov bpl,0x83
  422acd:	jne    0x422a93
  422acf:	mov    ebx,0x67c15b65
  422ad4:	sar    DWORD PTR [rcx+rdx*8-0x52035766],cl
  422adb:	outs   dx,BYTE PTR ds:[rsi]
  422adc:	fisttp DWORD PTR [rdi]
  422ade:	lods   al,BYTE PTR ds:[rsi]
  422adf:	xchg   DWORD PTR [rbp+rsi*2+0x7b],ecx
  422ae3:	rex.WB sahf 
  422ae5:	scas   eax,DWORD PTR es:[rdi]
  422ae6:	pop    rsp
  422ae7:	xchg   edx,eax
  422ae8:	call   0x45bbbed1
  422aed:	sar    DWORD PTR [rsi-0x74c1fb8b],cl
  422af3:	and    edi,DWORD PTR [rcx]
  422af5:	adc    al,BYTE PTR [rdi+0x37]
  422af8:	adc    al,0x70
  422afa:	(bad)  
  422afb:	shl    edx,1
  422afd:	cwde   
  422afe:	xlat   BYTE PTR cs:[rbx]
  422b00:	sub    al,0x6
  422b02:	xchg   esp,eax
  422b03:	cs jle 0x422b7a
  422b06:	mov    edx,0x4dda7973
  422b0b:	repz movabs ds:0x3ef969e39695225a,al
  422b15:	jns    0x422aa1
  422b17:	cld    
  422b18:	jb     0x422ade
  422b1a:	jbe    0x422aa3
  422b1c:	repz push rdi
  422b1e:	movabs ds:0x1af63d4142cb4269,al
  422b27:	(bad)  
  422b28:	mov    dl,0x2
  422b2a:	clc    
  422b2b:	jns    0x422b52
  422b2d:	test   eax,0x9d72b866
  422b32:	mov    esp,0xa024bc3b
  422b37:	rex.WRX and r15,QWORD PTR [rcx+0x31]
  422b3b:	in     al,0xb
  422b3d:	(bad)  
  422b3e:	cmps   DWORD PTR ss:[rsi],DWORD PTR es:[rdi]
  422b40:	xchg   esp,eax
  422b41:	and    al,0x96
  422b43:	(bad)
  422b47:	pop    rsi
  422b48:	rex.WR (bad) 
  422b4a:	fidivr DWORD PTR [rcx-0x7]
  422b4d:	push   0xffffffffffffffdd
  422b4f:	js     0x422b3c
  422b51:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  422b52:	fisttp WORD PTR [rcx+rbp*4-0x24]
  422b56:	paddusw mm7,QWORD PTR [rip+0xffffffffbd8d5ddf]        # 0xffffffffbdcf893c
  422b5d:	call   0xffffffffc4471bcc
  422b62:	pop    rbx
  422b64:	test   DWORD PTR [rax],ecx
  422b66:	jae    0x422b05
  422b68:	push   0xffffffffdd164d57
  422b6d:	lahf   
  422b6e:	xchg   ebp,eax
  422b6f:	xlat   BYTE PTR ds:[rbx]
  422b70:	cmp    DWORD PTR [rcx-0x27a14efc],edi
  422b76:	xlat   BYTE PTR ds:[rbx]
  422b77:	pop    rdx
  422b78:	push   rax
  422b79:	stos   BYTE PTR es:[rdi],al
  422b7a:	sub    eax,DWORD PTR [rbx-0x39958987]
  422b80:	adc    al,0xb5
  422b82:	adc    DWORD PTR [rdx+0x7c],esp
  422b85:	rex.R call 0xffffffffaab5dc31
  422b8b:	and    al,0x48
  422b8d:	(bad)  
  422b8e:	and    al,0x1a
  422b90:	out    dx,ax
  422b92:	adc    DWORD PTR [rcx+0x5b189f20],0x61
  422b99:	jb     0x422bda
  422b9b:	adc    al,0x1c
  422b9d:	jb     0x422b7c
  422b9f:	(bad)  
  422ba0:	mov    fs,esi
  422ba2:	sub    eax,0x95750406
  422ba7:	(bad)  
  422ba8:	retf   
  422ba9:	rex.RB adc al,0xce
  422bac:	and    al,0x23
  422bae:	pop    rsp
  422baf:	jmp    0x422b41
  422bb1:	jg     0x422b91
  422bb3:	mov    edx,0xd326be3e
  422bb8:	in     al,dx
  422bb9:	cmp    bh,BYTE PTR [rax+0x7a7d2d76]
  422bbf:	and    al,0xe5
  422bc1:	sbb    al,0xda
  422bc3:	sub    cl,dl
  422bc5:	(bad)  
  422bc6:	movabs r9,0xb4c1ad4d864c5714
  422bd0:	(bad)  
  422bd1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  422bd2:	gs jmp 0x422c4c
  422bd5:	rex.WB cdqe 
  422bd7:	cmp    DWORD PTR [rcx],esp
  422bd9:	mov    esi,0x65e486cd
  422bde:	(bad)  
  422bdf:	in     eax,0x16
  422be1:	sub    al,0xd9
  422be3:	imul   ebp,esi,0xa14763eb
  422be9:	out    0x45,eax
  422beb:	iret   
  422bec:	xchg   ebp,eax
  422bed:	xchg   ebx,eax
  422bee:	rcl    ecx,1
  422bf0:	jmp    0x422b73
  422bf2:	fst    DWORD PTR [rdx+0x54774e02]
  422bf8:	(bad)  
  422bf9:	loop   0x422c69
  422bfb:	test   DWORD PTR [rbp-0x5a13053d],esi
  422c01:	jrcxz  0x422be8
  422c03:	loop   0x422bf8
  422c05:	movabs eax,ds:0x30aa46a8b22a85cc
  422c0e:	xchg   edx,eax
  422c0f:	ins    DWORD PTR es:[rdi],dx
  422c10:	(bad)  
  422c11:	out    0xa6,eax
  422c13:	and    ecx,DWORD PTR [rdx+0x514cae1d]
  422c19:	iret   
  422c1a:	mov    esi,DWORD PTR [rsi-0x1b]
  422c1d:	adc    bl,BYTE PTR [rbp+0x4cc139f]
  422c23:	test   DWORD PTR [rbx-0x92c5106],ebx
  422c29:	(bad)  [rcx-0x76]
  422c2c:	test   eax,0xcdf47a07
  422c31:	icebp  
  422c32:	loope  0x422c9f
  422c34:	or     esi,ebp
  422c36:	call   QWORD PTR [rbp-0x708f35b4]
  422c3c:	js     0x422c43
  422c3e:	shl    DWORD PTR [rip+0xffffffff8b85602b],cl        # 0xffffffff8bc78c6f
  422c44:	(bad)  
  422c45:	mov    edx,0xd319c6c1
  422c4a:	add    DWORD PTR [rsi],ebp
  422c4c:	(bad)  
  422c4d:	addr32 (bad) 
  422c4f:	cmc    
  422c50:	shr    DWORD PTR [rbp+0x5462dd8a],1
  422c56:	ss stos BYTE PTR es:[rdi],al
  422c58:	rex.WRX
  422c59:	rex.WX
  422c5a:	addr32 fs and eax,0x274ade2b
  422c61:	mov    edi,esp
  422c63:	jo     0x422cbb
  422c65:	out    0x35,eax
  422c67:	sub    ebp,ecx
  422c69:	mov    WORD PTR [rip+0x35f2b6f3],ss        # 0x3634e362
  422c6f:	mov    dh,0xf2
  422c71:	lods   al,BYTE PTR ds:[rsi]
  422c72:	sbb    al,0x97
  422c74:	push   rdi
  422c75:	push   rdi
  422c76:	imul   ebp,esi,0x77
  422c79:	out    0x26,al
  422c7b:	add    BYTE PTR [rsi-0x70b34875],ah
  422c81:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  422c82:	xchg   ecx,eax
  422c83:	ficomp WORD PTR [rbx]
  422c85:	xor    esi,DWORD PTR [rdi+0x45]
  422c88:	gs (bad) 
  422c8a:	pop    rbx
  422c8b:	outs   dx,DWORD PTR ds:[rsi]
  422c8c:	enter  0x4047,0x4a
  422c90:	jp     0x422c57
  422c92:	or     bl,BYTE PTR [rbx+rbx*8+0x60]
  422c96:	(bad)  
  422c97:	sbb    dl,BYTE PTR [rax]
  422c99:	push   0xffffffffffffffef
  422c9b:	add    DWORD PTR [rdx],ebx
  422c9d:	int    0x9e
  422c9f:	sbb    DWORD PTR [rsi+0x6f247b66],ecx
  422ca5:	jne    0x422c99
  422ca7:	(bad)  
  422ca9:	clc    
  422caa:	icebp  
  422cab:	out    0x8,eax
  422cad:	int    0x1d
  422caf:	stc    
  422cb0:	(bad)  
  422cb1:	and    al,0x13
  422cb3:	(bad)  
  422cb4:	cmp    al,0xad
  422cb6:	(bad)  
  422cb7:	xchg   r14,rax
  422cb9:	mov    cl,ah
  422cbb:	push   rbp
  422cbc:	(bad)  
  422cbd:	and    ecx,DWORD PTR [rip+0x495d9b2c]        # 0x499fc7ef
  422cc3:	mov    dl,0x51
  422cc5:	sub    al,0x9e
  422cc7:	and    dh,BYTE PTR [rbp+0x6083f42d]
  422ccd:	fldcw  WORD PTR [rsi]
  422ccf:	sbb    eax,DWORD PTR [rbp+0x22]
  422cd2:	adc    esi,DWORD PTR [rcx+0x14]
  422cd5:	fsub   DWORD PTR [rdx+0x1d]
  422cd8:	mov    bh,al
  422cda:	ror    dl,cl
  422cdc:	lock rex.WX add al,0xb9
  422ce0:	jae    0x422c70
  422ce2:	rcl    ch,cl
  422ce4:	movabs ds:0x6f4f5eb13c06ecba,al
  422ced:	and    eax,0x5575346c
  422cf2:	rex.WRX
  422cf3:	rex.X xchg bp,ax
  422cf6:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  422cf7:	mov    bh,0x93
  422cf9:	(bad)  
  422cfa:	test   al,0x41
  422cfc:	in     al,dx
  422cfd:	and    eax,0xfe0b6244
  422d02:	sbb    ecx,DWORD PTR [rsi+0x152ecdbc]
  422d08:	or     al,0x5e
  422d0a:	mov    ah,0x1a
  422d0c:	mov    DWORD PTR [rax],ebx
  422d0e:	mov    al,bl
  422d10:	cld    
  422d11:	in     al,dx
  422d12:	fs rcl dl,0x70
  422d16:	add    eax,eax
  422d18:	adc    dh,BYTE PTR [rax+0x25]
  422d1b:	lods   eax,DWORD PTR ds:[rsi]
  422d1c:	lea    esp,[rax-0x71b68852]
  422d22:	and    DWORD PTR [rsp+rax*2+0x10],ebx
  422d26:	xchg   DWORD PTR [rdx+0x1c],esp
  422d29:	cmc    
  422d2a:	shr    BYTE PTR [rbx],1
  422d2c:	(bad)  
  422d2d:	push   rcx
  422d2e:	cli    
  422d2f:	shr    DWORD PTR [rip+0xffffffffb1d6b4ea],1        # 0xffffffffb218e21f
  422d35:	xchg   edi,eax
  422d36:	push   rax
  422d37:	(bad)  
  422d38:	(bad)  
  422d39:	std    
  422d3a:	stos   BYTE PTR es:[rdi],al
  422d3b:	jrcxz  0x422db9
  422d3d:	jrcxz  0x422d43
  422d3f:	and    ah,BYTE PTR [rdi]
  422d41:	ror    BYTE PTR [rbx],1
  422d43:	sar    bl,0x64
  422d46:	rex.R jae 0x422d1a
  422d49:	adc    eax,0x349186b9
  422d4e:	rex.R jrcxz 0x422d46
  422d51:	es (bad) 
  422d53:	stos   DWORD PTR es:[rdi],eax
  422d54:	js     0x422cef
  422d56:	mov    esp,0xc1573fe4
  422d5b:	add    al,0x8f
  422d5d:	cmp    ebp,DWORD PTR [r15]
  422d60:	iret   
  422d61:	(bad)  
  422d62:	mov    cl,0x6a
  422d64:	adc    DWORD PTR [rdx],edx
  422d66:	fldcw  WORD PTR [rsi+0x2a]
  422d69:	add    ah,BYTE PTR [rcx+0x37d00b8b]
  422d6f:	es rex.WX cmp rax,0xffffffffe010d5a0
  422d76:	adc    bh,BYTE PTR [rdi+0x64e8008c]
  422d7c:	mov    ecx,0x300a258e
  422d81:	sub    eax,0x5e
  422d84:	xchg   esi,eax
  422d85:	push   0xffffffffffffff98
  422d87:	(bad)  
  422d88:	pop    rax
  422d89:	pop    rdx
  422d8a:	adc    eax,0xc3738096
  422d8f:	out    0x9a,eax
  422d91:	mov    al,BYTE PTR [rax-0x1541995a]
  422d97:	(bad)  
  422d98:	sub    BYTE PTR [rbx-0x26],ah
  422d9b:	pop    rdi
  422d9c:	jp     0x422d8a
  422d9e:	rex.RX
  422d9f:	lock rex.WRB shr r10b,1
  422da3:	cdq    
  422da4:	popf   
  422da5:	stos   DWORD PTR es:[rdi],eax
  422da6:	mov    ?,edx
  422da8:	movabs eax,ds:0xb3bd5066fe25a304
  422db1:	test   ebp,ecx
  422db3:	bnd jl 0x422dff
  422db6:	movabs ds:0x94e2a98e83a9ab85,al
  422dbf:	out    0xc8,eax
  422dc1:	mov    ecx,0x7efbaf95
  422dc6:	mov    esi,gs
  422dc8:	std    
  422dc9:	loope  0x422e4a
  422dcb:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  422dcc:	lods   eax,DWORD PTR ds:[rsi]
  422dcd:	adc    eax,0xcccb8285
  422dd2:	sbb    eax,0x20d21ba4
  422dd7:	(bad)  
  422dd8:	sub    bl,BYTE PTR [rdi+0x6701cc7c]
  422dde:	pop    rdx
  422ddf:	rex.X mov al,0xa4
  422de2:	test   edx,ebx
  422de4:	xor    esp,ebx
  422de6:	rex.WRB (bad) 
  422de8:	ja     0x422e1d
  422dea:	and    eax,0x565fdc37
  422def:	mov    dl,0x83
  422df1:	(bad)  
  422df2:	rex.R adc DWORD PTR [rax+rbx*2],0x4a
  422df7:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  422df8:	xlat   BYTE PTR ds:[rbx]
  422df9:	dec    ah
  422dfb:	adc    cl,0xb1
  422dfe:	out    0x44,eax
  422e00:	rex.RB (bad) 
  422e02:	(bad)  
  422e03:	cmp    eax,0x508ad484
  422e08:	jnp    0x422e6e
  422e0a:	sub    BYTE PTR [rdx+0x0],bl
  422e0d:	add    edx,DWORD PTR [rbx+rcx*8-0x1f]
  422e11:	push   rax
  422e12:	cdq    
  422e13:	sub    eax,0xd1a1e908
  422e18:	mov    ah,dh
  422e1a:	in     eax,0xad
  422e1c:	movabs ds:0x68231e9e57bd40e0,eax
  422e25:	scas   al,BYTE PTR es:[rdi]
  422e26:	repz fld TBYTE PTR [rax]
  422e29:	lods   eax,DWORD PTR ds:[rsi]
  422e2a:	movsxd ebp,DWORD PTR [rdx+0x3b]
  422e2d:	(bad)  
  422e2e:	or     DWORD PTR [rdi],eax
  422e30:	fimul  DWORD PTR [rip+0x71ae0cc7]        # 0x71f03afd
  422e36:	(bad)  
  422e37:	jbe    0x422dce
  422e39:	push   rax
  422e3a:	ss scas al,BYTE PTR es:[rdi]
  422e3c:	int3   
  422e3d:	ins    BYTE PTR es:[rdi],dx
  422e3e:	jo     0x422eb6
  422e40:	addr32 and al,0x3b
  422e43:	push   rcx
  422e44:	ins    DWORD PTR es:[rdi],dx
  422e45:	(bad)  
  422e46:	shr    BYTE PTR [rsp+rdi*8-0x5c],0xf7
  422e4b:	rex.WRB pop r9
  422e4d:	(bad)  
  422e4e:	(bad)  
  422e4f:	cmp    eax,0x2b032c4b
  422e54:	lahf   
  422e55:	jns    0x422eb2
  422e57:	cld    
  422e58:	popf   
  422e59:	and    esp,DWORD PTR [rbp+0x17]
  422e5c:	(bad)  
  422e5d:	push   rcx
  422e5e:	sub    dl,BYTE PTR [rcx+rdi*4+0x43]
  422e62:	mov    WORD PTR [rax-0x6d],cs
  422e65:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  422e66:	adc    eax,0x49a9c2ad
  422e6b:	cs (bad) 
  422e6d:	sahf   
  422e6e:	mov    dh,0xfc
  422e70:	cmp    al,0x97
  422e72:	ds (bad) 
  422e74:	retf   
  422e75:	leave  
  422e76:	rex.WRB or BYTE PTR [r8-0x5d],r12b
  422e7a:	cs std 
  422e7c:	xor    BYTE PTR [rax],bh
  422e7e:	ret    0x7c7
  422e81:	fbld   TBYTE PTR [rax-0x5308c047]
  422e87:	sti    
  422e88:	movabs eax,ds:0xcb739bdcb083abfb
  422e91:	repz adc eax,0x228bab68
  422e97:	mov    edx,0x2a941d29
  422e9c:	push   rsi
  422e9d:	shr    ecx,cl
  422e9f:	mov    gs,WORD PTR [rsi]
  422ea1:	mov    eax,0xcd1611f0
  422ea6:	sub    bl,dh
  422ea8:	cld    
  422ea9:	rex.RB
  422eaa:	rex.RB push r9
  422eac:	sub    eax,0x2839932a
  422eb1:	scas   eax,DWORD PTR es:[rdi]
  422eb2:	(bad)  
  422eb3:	test   al,0x8d
  422eb5:	xor    ecx,DWORD PTR [rdi-0x55]
  422eb8:	(bad)  
  422eb9:	adc    al,0x21
  422ebb:	test   DWORD PTR [rsi+0x1d],0x42c8f760
  422ec2:	popf   
  422ec3:	rex.WRX movsxd r10,DWORD PTR [rdi-0x775e8ffc]
  422eca:	scas   al,BYTE PTR es:[rdi]
  422ecb:	retf   0x97c6
  422ece:	(bad)  
  422ecf:	leave  
  422ed0:	rex.X (bad) 
  422ed2:	mov    BYTE PTR [rdi-0x25a450f8],cl
  422ed8:	rex.WRB
  422ed9:	rex.WX call 0xffffffffda14fa39
  422edf:	out    0x7b,eax
  422ee1:	add    al,0xa3
  422ee3:	xchg   BYTE PTR [rsi],dh
  422ee5:	xor    DWORD PTR [rdi-0x39],esp
  422ee8:	add    bh,BYTE PTR [rcx+riz*1+0x5e7405cb]
  422eef:	rex.WX
  422ef0:	gs pop rdi
  422ef2:	imul   ecx,DWORD PTR [rcx],0x50f50f20
  422ef8:	imul   edi,esp,0xc3da4a4
  422efe:	or     DWORD PTR [rdx*2-0x43695aae],0xffffffd0
  422f06:	(bad)  
  422f07:	xchg   ch,ch
  422f09:	nop
  422f0a:	jrcxz  0x422f5a
  422f0c:	add    cl,ch
  422f0e:	lahf   
  422f0f:	or     eax,0x55467c9f
  422f14:	enter  0xeb2d,0x90
  422f18:	bnd jmp 0x422f54
  422f1b:	cdq    
  422f1c:	mov    DWORD PTR [rbp+0x7757f6f4],esp
  422f22:	push   rdi
  422f23:	ror    DWORD PTR [rcx-0x2d],1
  422f26:	add    dl,BYTE PTR [rdx+0x62]
  422f29:	pop    rax
  422f2a:	movabs ds:0x6c2fc015d6409589,al
  422f33:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  422f34:	(bad)  
  422f35:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  422f36:	push   rdx
  422f37:	or     eax,0x773919de
  422f3c:	nop
  422f3d:	cld    
  422f3e:	push   rdi
  422f3f:	cdq    
  422f40:	cmc    
  422f41:	add    BYTE PTR [rax],ah
  422f43:	in     eax,dx
  422f44:	loopne 0x422f8d
  422f46:	adc    DWORD PTR [rbx+rax*8],0xffffffc3
  422f4a:	mov    esi,DWORD PTR [rdi+0x27]
  422f4d:	out    dx,eax
  422f4e:	mov    esi,0x1ee7b03e
  422f53:	test   DWORD PTR [rdx-0x3813b6ec],ebp
  422f59:	mov    esp,0x3c53c15c
  422f5e:	(bad)  
  422f5f:	pop    rsp
  422f60:	(bad)  
  422f61:	fldcw  WORD PTR [rbp+rax*1+0x75]
  422f65:	or     BYTE PTR [rdi+rcx*8],bl
  422f68:	sbb    DWORD PTR [rdi-0x6],esp
  422f6b:	rol    eax,0x6c
  422f6e:	xlat   BYTE PTR ds:[rbx]
  422f6f:	adc    BYTE PTR [rbx+0x4041115],dh
  422f75:	mov    BYTE PTR [rbx],bh
  422f77:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  422f78:	sub    DWORD PTR [rbx],eax
  422f7a:	int    0x80
  422f7c:	sbb    eax,0x7c22adbc
  422f81:	(bad)  
  422f82:	pop    rax
  422f83:	pop    rsi
  422f84:	sbb    BYTE PTR [rbp+0x23],al
  422f87:	mov    ch,0x8a
  422f89:	stos   BYTE PTR es:[rdi],al
  422f8a:	rex.WX xchg rsi,rax
  422f8c:	mov    WORD PTR [rbx-0x3dd6df6d],?
  422f92:	adc    BYTE PTR [rax],ah
  422f94:	nop
  422f95:	(bad)  
  422f96:	lock mov dh,0xd7
  422f99:	sub    al,0x3f
  422f9b:	rex.B
  422f9c:	repnz out dx,eax
  422f9e:	push   rdi
  422f9f:	movabs ds:0x8368732652297546,eax
  422fa8:	jbe    0x423000
  422faa:	push   rsi
  422fab:	call   0xffffffffb1f6dddd
  422fb0:	push   rsi
  422fb1:	mov    fs,WORD PTR [rbx+0x6d]
  422fb4:	pop    rsp
  422fb5:	jg     0x422fa1
  422fb7:	retf   0xd82f
  422fba:	icebp  
  422fbb:	(bad)  
  422fbc:	sbb    dh,BYTE PTR [rsi-0x1a]
  422fbf:	(bad)  
  422fc0:	(bad)  
  422fc1:	in     al,0x7a
  422fc3:	xlat   BYTE PTR ds:[rbx]
  422fc4:	xor    BYTE PTR [rbp+0x53bc93bd],dl
  422fca:	rex.B ret 0xc6
  422fce:	adc    dh,ah
  422fd0:	xchg   esi,eax
  422fd1:	pop    rsi
  422fd2:	movabs ds:0x8b67fcbe1bff2ee,eax
  422fdb:	push   rdx
  422fdc:	(bad)  
  422fdd:	or     DWORD PTR [rcx],edx
  422fdf:	popf   
  422fe0:	shr    BYTE PTR [rdi+0x54],1
  422fe3:	jmp    0x42300b
  422fe5:	mov    db2,rdi
  422fe8:	loopne 0x422fff
  422fea:	int3   
  422feb:	rex.WR movabs rbx,0xaf0bacb338b29656
  422ff5:	sbb    edx,ecx
  422ff7:	(bad)  
  422ff8:	retf   0xbf38
  422ffb:	or     eax,0xa56b30de
  423000:	rcr    DWORD PTR [rdi+rbp*1],1
  423003:	xchg   esi,eax
  423004:	jrcxz  0x422fff
  423006:	hlt    
  423007:	pop    rcx
  423008:	repnz sar ah,cl
  42300b:	(bad)  
  42300c:	sar    BYTE PTR [rip+0x1d19ef80],1        # 0x1d5c1f92
  423012:	imul   edi,DWORD PTR [rbp-0x31],0x442cb354
  423019:	shl    DWORD PTR [rbp+0x37d93ebf],1
  42301f:	cmp    eax,0x7e6a94fd
  423024:	mov    al,0x51
  423026:	xchg   ecx,eax
  423027:	scas   al,BYTE PTR es:[rdi]
  423028:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42302a:	mov    ss,WORD PTR [rsi+0x15f4d5df]
  423030:	(bad)  
  423031:	jmp    0x422fcb
  423033:	push   rsi
  423034:	jl     0x4230a5
  423036:	push   rbx
  423038:	fs pushf 
  42303a:	(bad)  
  42303b:	leave  
  42303c:	fcmovnbe st,st(7)
  42303e:	iret   
  42303f:	adc    ah,BYTE PTR [rbx-0x29c1b058]
  423045:	retf   
  423046:	mov    ecx,0x24a9294a
  42304b:	rex.RB std 
  42304d:	fsub   st(4),st
  42304f:	sub    cl,BYTE PTR [rbx]
  423051:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  423052:	jrcxz  0x423007
  423054:	jl     0x422fe8
  423056:	jl     0x423024
  423058:	out    dx,al
  423059:	jge    0x422fdb
  42305b:	andnps xmm6,XMMWORD PTR [rcx+0x44d6da8]
  423062:	jno    0x423064
  423064:	cmp    ch,BYTE PTR [rcx-0x76]
  423067:	fmul   DWORD PTR [rsi]
  423069:	(bad)  
  42306a:	(bad)  
  42306b:	and    edi,esi
  42306d:	and    eax,0xe3e60733
  423072:	xor    eax,0x6b589e97
  423077:	push   rbp
  423078:	jg     0x423050
  42307a:	jb     0x4230c8
  42307c:	in     al,dx
  42307d:	(bad)  
  42307e:	sub    ebp,ecx
  423080:	stc    
  423081:	ficomp WORD PTR [rbx]
  423083:	out    dx,al
  423084:	scas   al,BYTE PTR es:[rdi]
  423085:	rex.WX
  423086:	repz sub BYTE PTR [rcx-0x12fa006b],sil
  42308e:	pop    rax
  42308f:	stos   BYTE PTR es:[rdi],al
  423090:	jrcxz  0x4230b6
  423092:	out    0x4d,al
  423094:	pop    rdi
  423095:	(bad)  
  423096:	loope  0x423110
  423098:	rex.RXB lods al,BYTE PTR ds:[rsi]
  42309a:	shl    BYTE PTR [rdx+0x20d80fd5],0xa2
  4230a1:	adc    cl,BYTE PTR [rsi+0x7e]
  4230a4:	rex.XB pop QWORD PTR [rip+0xfffffffff7774a44]        # 0xfffffffff7b97aef
  4230ab:	(bad)  
  4230ac:	or     eax,0x396aff43
  4230b1:	mov    esi,0x8a2bd7e4
  4230b6:	ret    
  4230b7:	add    al,0xb9
  4230b9:	ins    BYTE PTR es:[rdi],dx
  4230ba:	popf   
  4230bb:	mov    cl,0xec
  4230bd:	lods   eax,DWORD PTR ds:[rsi]
  4230be:	in     eax,dx
  4230bf:	xchg   bh,dl
  4230c1:	bswap  esp
  4230c3:	popf   
  4230c4:	fwait
  4230c5:	cmp    al,0x4b
  4230c7:	and    al,0xc4
  4230c9:	std    
  4230ca:	sar    DWORD PTR [rcx],1
  4230cc:	paddw  mm2,mm2
  4230cf:	and    DWORD PTR [rcx+0x2230de0f],edi
  4230d5:	(bad)  
  4230d6:	(bad)  
  4230d7:	stos   DWORD PTR es:[rdi],eax
  4230d8:	add    DWORD PTR [rcx+0x1a6cb349],ebp
  4230de:	pop    rsp
  4230df:	pop    rbx
  4230e0:	mov    cl,0xc5
  4230e2:	sar    BYTE PTR [rcx],0x46
  4230e5:	(bad)  
  4230e6:	rex div BYTE PTR [rsi-0x3d]
  4230ea:	stos   DWORD PTR es:[rdi],eax
  4230eb:	rex.XB outs dx,BYTE PTR ds:[rsi]
  4230ed:	and    ecx,DWORD PTR [rcx+rcx*8]
  4230f0:	mov    dl,al
  4230f2:	sbb    BYTE PTR [rsi-0x71],bh
  4230f5:	sahf   
  4230f6:	fcomp  st(1)
  4230f8:	mov    bh,0x5a
  4230fa:	adc    esi,edi
  4230fc:	rex.WB push r11
  4230fe:	cli    
  4230ff:	jle    0x423172
  423101:	pop    rbp
  423102:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  423103:	push   rbx
  423104:	push   rsp
  423105:	repz sbb WORD PTR [rdx+rdx*1],cx
  42310a:	je     0x42313a
  42310c:	rex.WB push r14
  42310e:	cmc    
  42310f:	(bad)  
  423110:	and    eax,DWORD PTR [rcx+0x12]
  423113:	dec    DWORD PTR [rdi+0x4fd05fa5]
  423119:	(bad)  
  42311a:	xchg   esp,eax
  42311b:	(bad)  
  42311c:	loopne 0x423146
  42311e:	rex.WX jmp 0x2a48bfcb
  423124:	xchg   esi,eax
  423125:	js     0x423186
  423127:	(bad)  
  423128:	add    bl,BYTE PTR [rdx]
  42312a:	xchg   edx,eax
  42312b:	(bad)  
  42312c:	pop    rdx
  42312d:	movabs al,ds:0xc5b2c5cbe16a623a
  423136:	rex.WRX sbb rax,0x390695d
  42313c:	retf   0x2b8b
  42313f:	(bad)  
  423140:	(bad)  
  423141:	int    0xd0
  423143:	(bad)  
  423144:	fdivr  QWORD PTR [rbp+0x68f1cb15]
  42314a:	xchg   DWORD PTR ss:[rsi+0x3f72ef6c],ebp
  423151:	icebp  
  423152:	push   0xffffffffdcdb8f86
  423157:	mov    ebx,0x68ef68fd
  42315c:	mov    ebx,0x95bf9bf9
  423161:	(bad)  
  423162:	mul    DWORD PTR [rdx]
  423164:	mov    dl,0xb9
  423166:	jle    0x42313d
  423168:	pop    rcx
  423169:	fcomp  DWORD PTR [rdi-0x19]
  42316c:	(bad)  
  42316d:	xor    eax,0x5b3a6d8a
  423172:	cwde   
  423173:	pop    rbx
  423174:	push   rsp
  423175:	mov    esi,0xe9f9a8f0
  42317a:	cs jae 0x423109
  42317d:	sbb    ebp,ebx
  42317f:	(bad)  
  423180:	int3   
  423181:	rex.WRXB ja 0x4231f2
  423184:	jl     0x4231df
  423186:	out    0xcf,al
  423188:	rex.WRXB ja 0x4231b8
  42318b:	xlat   BYTE PTR ds:[rbx]
  42318c:	xor    ch,BYTE PTR [rbp+0x31]
  42318f:	stc    
  423190:	adc    BYTE PTR [rsi],0xf8
  423193:	sbb    ah,cl
  423195:	mov    dl,0xe2
  423197:	cmp    cl,al
  423199:	movabs al,ds:0x60e6de49a7e22e6
  4231a2:	std    
  4231a3:	mov    ch,0x9f
  4231a5:	pushf  
  4231a6:	xor    BYTE PTR [rdi+0x1],ch
  4231a9:	(bad)  
  4231aa:	mov    esp,esi
  4231ac:	xlat   BYTE PTR ds:[rbx]
  4231ad:	rex.WRXB icebp 
  4231af:	mov    edx,0x8e2d1a2d
  4231b4:	test   al,0x48
  4231b6:	push   0x43
  4231b8:	ds pop rcx
  4231ba:	jb     0x4231b5
  4231bc:	lods   eax,DWORD PTR ds:[rsi]
  4231bd:	and    eax,0x1d23fbd7
  4231c2:	rex.WRX std 
  4231c4:	or     dl,ch
  4231c6:	mov    dl,0xc0
  4231c8:	test   DWORD PTR [rbp-0x48],esi
  4231cb:	movabs al,ds:0xc512b93ea32329ac
  4231d4:	adc    DWORD PTR [rdi],esi
  4231d6:	pushf  
  4231d7:	xchg   esp,eax
  4231d8:	or     al,0x47
  4231da:	(bad)  
  4231db:	movsxd eax,DWORD PTR [rsi]
  4231dd:	in     eax,dx
  4231de:	je     0x42319b
  4231e0:	adc    esi,0x39
  4231e3:	movsxd ebp,DWORD PTR [rbp+0x46]
  4231e6:	xor    BYTE PTR [rbp+0x7d98958a],dh
  4231ec:	movsxd ecx,DWORD PTR [rbp+0x5d]
  4231ef:	(bad)  
  4231f0:	adc    al,0x34
  4231f2:	jrcxz  0x4231ef
  4231f4:	es (bad) 
  4231f6:	and    BYTE PTR [rbp+0x6c2cd351],ah
  4231fc:	(bad)  
  4231fd:	adc    ah,BYTE PTR [rdx-0x47830582]
  423203:	mov    ebx,0x5caa7dd
  423208:	or     ecx,esp
  42320a:	add    BYTE PTR [rcx-0x4],al
  42320d:	in     al,dx
  42320e:	pop    rbp
  42320f:	rex.WRXB or r15b,r10b
  423212:	cld    
  423213:	(bad)  
  423214:	in     al,dx
  423215:	or     bl,al
  423217:	(bad)  
  423218:	xchg   ecx,eax
  423219:	add    BYTE PTR [rsi+0x71a37297],cl
  42321f:	rex.RXB
  423220:	rex.WB mov r13b,0x6d
  423223:	xchg   ebx,eax
  423224:	out    dx,eax
  423225:	in     al,0x7d
  423227:	push   rax
  423228:	cmp    al,0xc2
  42322a:	adc    eax,0xfffffff5
  42322d:	sbb    eax,0x16c15f8a
  423232:	sub    bl,BYTE PTR [rcx]
  423234:	cmp    BYTE PTR [rdx+0x11],bh
  423237:	call   0x4a37ea3
  42323c:	imul   DWORD PTR [rcx-0x5]
  42323f:	xlat   BYTE PTR ds:[rbx]
  423240:	js     0x423271
  423242:	mov    esp,0x400b6155
  423247:	scas   eax,DWORD PTR es:[rdi]
  423248:	xchg   esp,eax
  423249:	stos   BYTE PTR es:[rdi],al
  42324a:	mov    bl,0x64
  42324c:	cli    
  42324d:	test   ecx,0x7d6d69fd
  423253:	xchg   edi,eax
  423254:	repnz mov ss,WORD PTR [rsi]
  423257:	cmc    
  423258:	call   0x169a8a1
  42325d:	out    dx,eax
  42325e:	xchg   bl,al
  423260:	xor    eax,0xefb6ea47
  423265:	rex.WX mov dil,0x7b
  423268:	add    edi,esi
  42326a:	enter  0xae03,0x63
  42326e:	movabs al,ds:0x79789ed36ecf4e6e
  423277:	ss loop 0x423288
  42327a:	mov    al,0xc5
  42327c:	rex.WRXB cmp BYTE PTR [r11+0x6b69e939],r8b
  423283:	mov    ebp,0xa7465f6e
  423288:	xor    edx,DWORD PTR ds:[rdx]
  42328b:	and    edx,DWORD PTR [rsi]
  42328d:	sbb    eax,0x11a1ee27
  423292:	mov    ecx,0x48059523
  423298:	(bad)  
  423299:	js     0x423290
  42329b:	movabs eax,ds:0x88b1cb38aa53cfe6
  4232a4:	(bad)  
  4232a5:	jae    0x42327e
  4232a7:	shl    DWORD PTR [rcx-0x5dc905f1],1
  4232ad:	movabs al,ds:0x8fa52912a832ce98
  4232b6:	(bad)  
  4232b7:	sti    
  4232b8:	rcl    BYTE PTR [rcx],1
  4232ba:	shl    BYTE PTR [rcx+0x4a],cl
  4232bd:	mov    esi,0xdd21ffe4
  4232c2:	retf   0x93eb
  4232c5:	rex.RXB scas al,BYTE PTR es:[rdi]
  4232c7:	xchg   ebp,eax
  4232c8:	lods   al,BYTE PTR ds:[rsi]
  4232c9:	(bad)  
  4232ca:	sub    al,0x61
  4232cc:	(bad)  
  4232cd:	sub    al,0x9c
  4232cf:	lods   al,BYTE PTR ds:[rsi]
  4232d0:	xor    eax,0x164e0ec9
  4232d5:	pop    rcx
  4232d6:	sub    esi,esi
  4232d8:	rex.WRX (bad) 
  4232da:	push   rax
  4232db:	pop    rsi
  4232dc:	lea    esi,[rbx+rbp*1-0x3a041b69]
  4232e3:	jno    0x423277
  4232e5:	jl     0x4232f8
  4232e7:	adc    QWORD PTR [r9],rdi
  4232ea:	call   0xffffffff84dc8ac9
  4232ef:	(bad)  
  4232f0:	out    0xa0,al
  4232f2:	fwait
  4232f3:	hlt    
  4232f4:	shl    DWORD PTR [rdi-0x6712629f],cl
  4232fa:	in     eax,dx
  4232fb:	push   rbx
  4232fc:	out    dx,eax
  4232fd:	(bad)  
  4232fe:	cmc    
  4232ff:	mov    WORD PTR [rsi-0x6931b95f],fs
  423305:	(bad)  
  423306:	mov    DWORD PTR [rcx+rcx*8],ebx
  423309:	sub    dh,BYTE PTR [rbx]
  42330b:	rex.WRB jne 0x423371
  42330e:	lock mov dl,0x9e
  423311:	in     al,0x19
  423313:	icebp  
  423314:	push   rcx
  423315:	in     al,dx
  423316:	jl     0x423386
  423318:	pop    rsp
  423319:	lods   al,BYTE PTR ds:[rsi]
  42331a:	ret    
  42331b:	mov    dh,0x33
  42331d:	mov    ah,0x99
  42331f:	push   0xffffffffffffff94
  423321:	(bad)  
  423322:	pop    rsi
  423323:	lods   eax,DWORD PTR ds:[rsi]
  423324:	(bad)  
  423325:	rex.WR and rax,0xffffffffe8bdcdbc
  42332b:	mov    ch,0x19
  42332d:	sahf   
  42332e:	rex.RB (bad) 
  423330:	cdq    
  423331:	jge    0x423383
  423333:	push   0xffffffffb9b08c52
  423338:	jno    0x423323
  42333a:	xchg   ecx,eax
  42333b:	mov    rbx,rsp
  42333e:	push   rbp
  42333f:	push   rsi
  423340:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  423341:	(bad)  
  423342:	xor    al,0xc2
  423344:	(bad)  
  423345:	sbb    eax,0xb9d9d9ec
  42334a:	mov    ebx,0x33ae1bbb
  42334f:	xor    edi,DWORD PTR [rdi+0x3f]
  423352:	xchg   esi,eax
  423353:	mov    bl,0x36
  423355:	sub    eax,0x9f0077a4
  42335a:	(bad)  
  42335b:	outs   dx,DWORD PTR ds:[rsi]
  42335c:	sub    al,0x6e
  42335e:	lahf   
  42335f:	scas   al,BYTE PTR es:[rdi]
  423360:	and    ebx,DWORD PTR [rbx]
  423362:	push   0x5a
  423364:	push   rdi
  423365:	sub    DWORD PTR [rbp-0x74],ebp
  423368:	fldcw  WORD PTR [rbp+0x5b2aac65]
  42336e:	(bad)  
  42336f:	movabs ds:0x501a2c91fb8efb19,al
  423378:	rex.WXB xchg r12,rax
  42337a:	ss out 0x8,eax
  42337d:	sub    BYTE PTR [rcx+0x62],cl
  423380:	mov    ch,0x5c
  423382:	(bad)  [rbp-0x11]
  423385:	rex.X in al,dx
  423387:	(bad)  
  423388:	lahf   
  423389:	ins    DWORD PTR es:[rdi],dx
  42338a:	retf   0x5f3f
  42338d:	outs   dx,DWORD PTR ds:[rsi]
  42338e:	jge    0x4233ae
  423390:	push   0x15
  423392:	(bad)  
  423393:	jae    0x42337e
  423395:	(bad)  
  423396:	stc    
  423397:	mov    ecx,0x3ff9f98c
  42339c:	(bad)  
  42339d:	out    0xe7,al
  42339f:	mov    edi,0xff4fcc7e
  4233a4:	in     eax,0x63
  4233a6:	(bad)  
  4233a7:	sub    ecx,DWORD PTR [rbp-0x1d345007]
  4233ad:	jrcxz  0x42334f
  4233af:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4233b0:	push   0xffffffffffffffa8
  4233b2:	rex.RX xchg ebp,eax
  4233b4:	(bad)  
  4233b5:	retf   0xb8bf
  4233b8:	repnz (bad) 
  4233ba:	loop   0x423410
  4233bc:	and    dl,BYTE PTR [rdi-0x2c8fd27d]
  4233c2:	sub    DWORD PTR [rdx-0x13],edx
  4233c5:	mov    ah,BYTE PTR [rdx-0x5eca80b]
  4233cb:	jnp    0x4233bb
  4233cd:	mov    bh,0x9c
  4233cf:	rex jrcxz 0x4233c7
  4233d2:	test   BYTE PTR [rsp+rbx*2+0x749eb688],dh
  4233d9:	(bad)  
  4233da:	(bad)  
  4233db:	mov    dl,0xee
  4233dd:	or     eax,0x416cc2fd
  4233e2:	push   rdx
  4233e3:	pop    rbx
  4233e4:	ins    DWORD PTR es:[rdi],dx
  4233e5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4233e6:	sub    DWORD PTR [rdi+rsi*4-0x29f9234],ebx
  4233ed:	(bad)  
  4233ee:	mov    ss,WORD PTR [rdx+0x1e]
  4233f1:	leave  
  4233f2:	js     0x423439
  4233f4:	jbe    0x42338d
  4233f6:	push   0x271084cb
  4233fb:	jg     0x423451
  4233fd:	or     BYTE PTR [rcx+0x505fbcbd],ah
  423403:	jae    0x42345f
  423405:	(bad)
  423408:	rex.WX (bad) 
  42340a:	fcmovb st,st(3)
  42340c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  42340d:	fstp   TBYTE PTR [rcx]
  42340f:	test   DWORD PTR [rcx+0x336d7792],edi
  423415:	mov    eax,0x92b326b0
  42341a:	mov    gs,WORD PTR [rbx]
  42341c:	(bad)  
  42341e:	imul   ecx,DWORD PTR [rsi+0x7710a762],0x40
  423425:	fucomp st(0)
  423427:	stos   DWORD PTR es:[rdi],eax
  423428:	imul   ebx,DWORD PTR [rdi],0xffffffb3
  42342b:	ins    BYTE PTR es:[rdi],dx
  42342c:	xchg   ecx,eax
  42342d:	(bad)  
  42342e:	nop
  42342f:	lahf   
  423430:	rex.RB push r9
  423432:	mov    dl,BYTE PTR [rbp+0x34]
  423435:	push   0xffffffffb2818ded
  42343a:	out    dx,eax
  42343b:	ins    BYTE PTR es:[rdi],dx
  42343c:	scas   al,BYTE PTR es:[rdi]
  42343d:	loopne 0x4233ec
  42343f:	(bad)  
  423440:	rex.RXB xchg r11d,eax
  423442:	imul   esi,DWORD PTR [rsi],0x30
  423445:	lods   eax,DWORD PTR ds:[rsi]
  423446:	es retf 0xe7aa
  42344a:	shl    DWORD PTR [rax],cl
  42344c:	rex.WRXB pop r14
  42344e:	xor    al,0x15
  423450:	lea    edx,[rsi-0x28]
  423453:	rex.WRX xchg rax,rax
  423455:	add    eax,0x415c9632
  42345a:	add    al,0xc7
  42345c:	test   eax,0x2795cd75
  423461:	mov    edx,0x9f36fca5
  423466:	add    edx,DWORD PTR cs:[rsi+0x43fbee89]
  42346d:	mov    dl,0xbe
  42346f:	pop    rdx
  423470:	hlt    
  423471:	and    DWORD PTR [rax+rdi*2-0x7a96bb0c],edi
  423478:	cmp    eax,0x6d12716a
  42347d:	imul   esi,DWORD PTR [rax-0x20b2d75b],0xffffffe3
  423484:	cmp    DWORD PTR fs:[rdx],edi
  423487:	push   rax
  423489:	in     eax,dx
  42348a:	icebp  
  42348b:	icebp  
  42348c:	stc    
  42348d:	leave  
  42348e:	jmp    0x423463
  423490:	movsxd edi,DWORD PTR [rcx]
  423492:	xor    esi,esi
  423494:	rex.RXB out dx,eax
  423496:	cs mov edi,0x8a7c753b
  42349c:	icebp  
  42349d:	cmp    ch,BYTE PTR [rax-0x6e7dbda5]
  4234a3:	and    al,0xa7
  4234a5:	jns    0x423458
  4234a7:	cld    
  4234a8:	(bad)  
  4234a9:	(bad)  
  4234aa:	fistp  DWORD PTR [rcx-0x2f]
  4234ad:	and    al,0x87
  4234af:	(bad)  
  4234b0:	(bad)  
  4234b1:	sbb    BYTE PTR [rbp-0x10f8319],dh
  4234b7:	xchg   DWORD PTR [rax+0x5005a792],eax
  4234bd:	mov    dl,BYTE PTR [rdi+0x109b3036]
  4234c3:	push   rsi
  4234c4:	test   BYTE PTR [rbx],bl
  4234c6:	sti    
  4234c7:	stos   BYTE PTR es:[rdi],al
  4234c8:	imul   esi,edi,0x37
  4234cb:	xor    ebp,DWORD PTR cs:[rdi-0x66]
  4234cf:	pop    rbx
  4234d0:	(bad)  
  4234d1:	div    BYTE PTR [rsi-0x1c]
  4234d4:	(bad)  
  4234d5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4234d6:	imul   edx,ecx,0xcff8b02f
  4234dc:	ja     0x423473
  4234de:	and    al,0x6f
  4234e0:	lods   eax,DWORD PTR ds:[rsi]
  4234e1:	(bad)  
  4234e2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4234e3:	pop    rbp
  4234e4:	jns    0x4234b5
  4234e6:	mov    esi,fs
  4234e8:	(bad)  
  4234e9:	gs jrcxz 0x42347e
  4234ec:	xchg   edi,eax
  4234ed:	hlt    
  4234ee:	fistp  QWORD PTR [rax]
  4234f0:	cmp    DWORD PTR [rdx+rsi*2+0x5e],esp
  4234f4:	in     eax,0xb7
  4234f6:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4234f7:	lock cwde 
  4234f9:	xchg   DWORD PTR [rcx],edi
  4234fb:	test   BYTE PTR [rsi-0x31],0xe
  4234ff:	sub    eax,0x784a659
  423504:	test   eax,0xd08a8415
  423509:	push   0xffffffffffffffac
  42350b:	push   0x33
  42350d:	shr    BYTE PTR [rbx],cl
  42350f:	leave  
  423510:	xor    al,0xb7
  423512:	lods   eax,DWORD PTR ds:[rsi]
  423513:	in     eax,0x66
  423515:	jmp    0x4234d3
  423517:	ds mov esi,0x6e9553e8
  42351d:	rex.RX cmp BYTE PTR [rip+0xffffffffcb9afbbf],r11b        # 0xffffffffcbdd30e3
  423524:	jg     0x42357e
  423526:	rex.WX
  423527:	test   rax,0xffffffff9ea21eba
  42352d:	mov    esp,0xdf22a139
  423532:	adc    al,0x4f
  423534:	stos   BYTE PTR es:[rdi],al
  423535:	imul   esp,DWORD PTR [rbx+0x598efedd],0xffffff98
  42353c:	cmp    al,0xb4
  42353e:	xchg   edi,eax
  42353f:	out    0x3f,al
  423541:	mov    cl,0xa9
  423543:	xor    bl,dl
  423545:	out    0x37,al
  423547:	fndisi(8087 only) 
  423549:	ins    BYTE PTR es:[rdi],dx
  42354a:	mov    DWORD PTR [rsi],edx
  42354c:	(bad)
  423551:	leave  
  423552:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  423553:	retf   0x6131
  423556:	rex.RX retw 0x8ba8
  42355b:	(bad)  
  42355c:	push   rax
  42355d:	rcr    DWORD PTR [rbp+0x57],0xba
  423561:	(bad)  
  423562:	mov    dh,0x2f
  423564:	(bad)  
  423565:	(bad)  
  423566:	cwde   
  423567:	scas   eax,DWORD PTR es:[rdi]
  423568:	cmc    
  423569:	imul   ebx,DWORD PTR [rbx-0x7e],0x45cdc05c
  423570:	adc    al,0x62
  423572:	pop    rdi
  423573:	in     eax,0x2
  423575:	rex.B jne 0x423506
  423578:	pop    rcx
  423579:	movabs ds:0x6732741729f34d57,eax
  423582:	mov    ah,0xa2
  423584:	pop    rax
  423585:	retf   
  423586:	out    dx,eax
  423587:	cmp    DWORD PTR [rcx-0x2b],esi
  42358a:	cmp    BYTE PTR [rcx+0x39],bh
  42358d:	xor    ebp,DWORD PTR [rdi]
  42358f:	(bad)  
  423590:	push   rsi
  423591:	(bad)  
  423592:	jmp    0x42354c
  423594:	xchg   edx,eax
  423595:	xchg   edx,eax
  423596:	sub    eax,DWORD PTR [rdi]
  423598:	(bad)  
  423599:	and    DWORD PTR [rdx+0x6c019292],ecx
  42359f:	(bad)  
  4235a0:	movabs eax,ds:0x540da19c05418d1d
  4235a9:	imul   edx,DWORD PTR [rax],0xf03375b1
  4235af:	add    DWORD PTR ss:[rsi-0x26],eax
  4235b3:	in     al,dx
  4235b4:	(bad)  
  4235b5:	fwait
  4235b6:	(bad)  
  4235b7:	xchg   BYTE PTR [rbp+0x7f],al
  4235ba:	movabs ds:0xa587ecdacb548082,al
  4235c3:	rex
  4235c4:	ss gs mov edi,0x61090e6e
  4235cb:	(bad)  
  4235cc:	(bad)  
  4235cd:	movabs ds:0xc8a28be9134b6523,eax
  4235d6:	imul   esi,DWORD PTR [rcx],0xeb56c5c
  4235dc:	rex.W
  4235dd:	fwait
  4235de:	ins    BYTE PTR es:[rdi],dx
  4235df:	jae    0x4235ce
  4235e1:	and    al,0xc9
  4235e3:	push   rbp
  4235e4:	cli    
  4235e5:	fisubr WORD PTR [rdi+0x2c]
  4235e8:	rex.WXB js 0x423604
  4235eb:	jle    0x42361e
  4235ed:	shl    DWORD PTR [rdi-0x196272c3],1
  4235f3:	je     0x4235a2
  4235f5:	cld    
  4235f6:	jne    0x4235ce
  4235f8:	mul    DWORD PTR [rbx-0x7d7844d4]
  4235fe:	add    al,0x6f
  423600:	rex.RXB pop r8
  423602:	sub    BYTE PTR [rdx+0x4e],dl
  423605:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  423606:	adc    cl,BYTE PTR [rcx]
  423608:	add    BYTE PTR [rcx-0x20],al
  42360b:	and    eax,0x65fab801
  423610:	es call 0x18da9785
  423616:	rex.XB add eax,0x7b768b41
  42361c:	shl    dh,0xc4
  42361f:	push   rcx
  423620:	and    dl,BYTE PTR [rsi+0x444f800e]
  423626:	mov    ch,0xda
  423628:	and    al,dl
  42362a:	loop   0x423674
  42362c:	(bad)  
  42362d:	push   rsi
  42362e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  42362f:	retf   
  423630:	jb     0x42360c
  423632:	(bad)  
  423633:	cdq    
  423634:	lahf   
  423635:	(bad)  [rsi+rax*8-0x67]
  423639:	fbstp  TBYTE PTR [rsi]
  42363b:	(bad)  
  42363c:	pop    rbx
  42363d:	imul   ebx,DWORD PTR [rdi+0x500a1206],0xfbde8613
  423647:	mov    bh,0x7
  423649:	xchg   ebx,eax
  42364a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42364b:	(bad)  
  42364c:	pop    rdx
  42364d:	cmp    esp,DWORD PTR [rdi+0x2232c577]
  423653:	(bad)  
  423654:	popf   
  423655:	adc    eax,0xcdf1c1de
  42365a:	bnd jns 0x42363b
  42365d:	or     al,0x20
  42365f:	cmp    DWORD PTR [rsi+0x1a],ebx
  423662:	and    DWORD PTR [rcx-0x5c4e96fb],edx
  423668:	push   rsi
  423669:	test   DWORD PTR cs:[rax+0xe462aae],esi
  423670:	out    dx,eax
  423671:	mov    ch,0x2b
  423673:	sbb    eax,0x4182b4ba
  423678:	mov    WORD PTR [rsi],ds
  42367a:	or     edx,DWORD PTR [rcx+rbp*1+0xe]
  42367e:	mov    DWORD PTR [rbp+0x7f8c8b53],ecx
  423684:	rex.WRB
  423685:	addr32 push rsp
  423687:	ror    BYTE PTR [rcx],1
  423689:	rex.WRXB (bad) 
  42368b:	mov    BYTE PTR [rbx+0x39],ch
  42368e:	sub    al,0xcd
  423690:	push   rbp
  423691:	rex.XB add ebp,DWORD PTR [r11+0x695f74cc]
  423698:	push   rcx
  423699:	adc    ebp,DWORD PTR fs:[rsi+rcx*2-0x27]
  42369e:	leave  
  42369f:	and    DWORD PTR [rip+0x5455db1],0xe20af61a        # 0x587945a
  4236a9:	(bad)  
  4236aa:	je     0x42364e
  4236ac:	add    edi,DWORD PTR [rbp+0x6e]
  4236af:	ins    BYTE PTR es:[rdi],dx
  4236b0:	(bad)  
  4236b1:	mov    eax,0xf354a7cb
  4236b6:	jmp    0x42366a
  4236b8:	mov    ah,0xea
  4236ba:	imul   ebp,DWORD PTR [rip+0x29f27ff8],0xffffffe5        # 0x2a34b6b9
  4236c1:	and    DWORD PTR [rbp+rbp*2-0x4cb3dce4],ebp
  4236c8:	(bad)  
  4236c9:	xor    DWORD PTR [rcx],0xffffffa9
  4236cc:	or     DWORD PTR [rdi+0x1a2452c2],esp
  4236d2:	jmp    0x4236d4
  4236d4:	(bad)  
  4236d5:	(bad)  
  4236d6:	(bad)  
  4236d7:	ffreep st(7)
  4236d9:	ss or  esp,ecx
  4236dc:	fdivr  DWORD PTR [rax+0x33622bcb]
  4236e2:	or     dh,BYTE PTR [rdx+rbp*2+0x45]
  4236e6:	lahf   
  4236e7:	or     eax,0x398084f5
  4236ec:	in     al,dx
  4236ed:	and    esi,ebx
  4236ef:	je     0x42376d
  4236f1:	mov    ebx,0xcbaec4a9
  4236f6:	rex.X or sil,spl
  4236f9:	xor    dh,BYTE PTR [rax-0x7c]
  4236fc:	push   rsp
  4236fd:	jrcxz  0x4236e3
  4236ff:	movsxd edi,DWORD PTR [rsi]
  423701:	sub    esp,DWORD PTR [rbx+0x1173301e]
  423707:	ins    BYTE PTR es:[rdi],dx
  423708:	(bad)  
  423709:	(bad)  
  42370a:	push   rcx
  42370b:	and    bh,ah
  42370d:	in     eax,dx
  42370e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42370f:	clc    
  423710:	(bad)  
  423711:	mov    dh,ch
  423713:	and    edi,DWORD PTR [rbx-0x63081ab2]
  423719:	(bad)  
  42371a:	mov    ch,0x79
  42371c:	int    0x9f
  42371e:	stc    
  42371f:	fidivr DWORD PTR [rip+0xffffffff9c8e69d4]        # 0xffffffff9cd0a0f9
  423725:	ins    BYTE PTR es:[rdi],dx
  423726:	in     al,dx
  423727:	push   rsp
  423728:	shr    DWORD PTR [rax+0x6c],cl
  42372b:	jge    0x4236bd
  42372d:	in     al,dx
  42372e:	out    dx,eax
  42372f:	out    dx,al
  423730:	jle    0x42370d
  423732:	rex.WRXB sahf 
  423734:	jo     0x423743
  423736:	mov    ah,0xbd
  423738:	scas   eax,DWORD PTR es:[rdi]
  423739:	push   rdi
  42373a:	adc    eax,0x6c8284e6
  42373f:	mov    esi,DWORD PTR [rcx+0x62f485fe]
  423745:	rex.WR sbb dil,r13b
  423748:	rex.WXB or rsi,r12
  42374b:	(bad)  
  42374c:	jg     0x42370a
  42374e:	(bad)  
  42374f:	jno    0x42373e
  423751:	pop    rsi
  423752:	(bad)  
  423753:	mov    ah,0x54
  423755:	pop    rsp
  423756:	(bad)  
  423757:	sbb    edi,DWORD PTR [rsi+rcx*2+0x50]
  42375b:	loopne 0x42373d
  42375d:	sahf   
  42375e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42375f:	pop    rax
  423760:	fild   DWORD PTR [rdx+0x52]
  423763:	pop    rdi
  423764:	push   0x50cb72bb
  423769:	ss addr32 hlt 
  42376c:	xor    BYTE PTR [rcx+0x2880c2e2],0x45
  423773:	cld    
  423774:	movabs al,ds:0x5b0453af3dd25ac5
  42377d:	popf   
  42377e:	and    BYTE PTR [rbx-0x40e31f7d],bh
  423784:	fist   WORD PTR [rbp+0x37784338]
  42378a:	scas   eax,DWORD PTR es:[rdi]
  42378b:	fwait
  42378c:	add    ecx,ebx
  42378e:	(bad)  
  42378f:	xor    DWORD PTR [rdi-0x6260613],edx
  423795:	xchg   ebx,eax
  423796:	ins    DWORD PTR es:[rdi],dx
  423797:	lahf   
  423798:	inc    BYTE PTR [rdx-0xe]
  42379b:	(bad)  
  42379c:	cwde   
  42379d:	movabs ds:0x7157d11b9b5d4e12,eax
  4237a6:	ret    
  4237a7:	sub    BYTE PTR [rax+rbx*2+0xdce2b41],bh
  4237ae:	(bad)  
  4237af:	loope  0x423733
  4237b1:	(bad)  
  4237b2:	sbb    bh,BYTE PTR [rbp+0x2c]
  4237b5:	mov    ebx,0x1eb73973
  4237ba:	ins    DWORD PTR es:[rdi],dx
  4237bb:	movabs ds:0x902611b0844a983b,eax
  4237c4:	(bad)  
  4237c5:	mov    edx,ss
  4237c7:	not    r13b
  4237ca:	add    al,bl
  4237cc:	mov    esi,0xe1158136
  4237d1:	rol    BYTE PTR [rdx-0x6312d9a2],0x17
  4237d8:	lahf   
  4237d9:	push   rbx
  4237da:	pop    QWORD PTR [rcx+0x74]
  4237dd:	out    dx,al
  4237de:	rex.WB (bad) 
  4237e0:	popf   
  4237e1:	(bad)
  4237e4:	(bad)  
  4237e5:	rol    BYTE PTR [rbp+0x437fc853],1
  4237eb:	mov    ebx,0x87af1996
  4237f0:	stos   DWORD PTR es:[rdi],eax
  4237f1:	and    BYTE PTR [rsi-0x5a589672],dh
  4237f7:	or     edi,DWORD PTR ss:[rcx]
  4237fa:	pop    rbx
  4237fb:	(bad)  
  4237fc:	mov    esp,0xfa5d1d3b
  423801:	ds pop rdi
  423803:	xchg   esp,eax
  423804:	test   DWORD PTR [rax],ecx
  423806:	lock and ebp,ebp
  423809:	adc    al,0x6e
  42380b:	(bad)  
  42380c:	jb     0x423886
  42380e:	jp     0x423822
  423810:	test   eax,0xadd04e52
  423815:	add    esp,DWORD PTR [rbx]
  423817:	push   rsi
  423818:	rex.WXB mov r10b,0xd3
  42381b:	cld    
  42381c:	pop    rsp
  42381d:	cwde   
  42381e:	test   BYTE PTR [rcx-0x3e42e631],cl
  423824:	(bad)  
  423825:	ins    BYTE PTR es:[rdi],dx
  423826:	jbe    0x42381c
  423828:	out    0x95,al
  42382a:	lahf   
  42382b:	not    ecx
  42382d:	ins    DWORD PTR es:[rdi],dx
  42382e:	(bad)  
  42382f:	je     0x423822
  423831:	iret   
  423832:	mov    ebp,?
  423834:	adc    ah,bl
  423836:	mov    dl,al
  423838:	shr    edx,1
  42383a:	in     eax,0x78
  42383c:	loopne 0x4238af
  42383e:	es mov al,0xbe
  423841:	add    edi,esi
  423843:	xor    esi,DWORD PTR [rbx-0xaf23285]
  423849:	xor    DWORD PTR [rsp+rax*1],esi
  42384c:	mov    dh,0x78
  42384e:	rex.XB (bad) 
  423850:	jle    0x4237d6
  423852:	jmp    0x4237f6
  423854:	in     eax,0x7c
  423856:	fwait
  423857:	and    al,0x64
  423859:	or     sil,r13b
  42385c:	sub    BYTE PTR [rip+0x454de8fb],bh        # 0x4590215d
  423862:	push   rbx
  423863:	rcr    DWORD PTR [rcx-0x49208eb7],1
  423869:	and    DWORD PTR [rax-0x1c],0x6125ff65
  423870:	add    eax,0x4dba0b6f
  423875:	push   rdi
  423876:	sbb    ecx,ebx
  423878:	sbb    edi,DWORD PTR [rsi]
  42387a:	add    ebx,ebx
  42387c:	ins    DWORD PTR es:[rdi],dx
  42387d:	rex.X ret 
  42387f:	add    al,0xbc
  423881:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  423882:	adc    al,0xdb
  423884:	iret   
  423885:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  423886:	int3   
  423887:	js     0x4238da
  423889:	mov    bh,0x29
  42388b:	(bad)  
  42388c:	cmp    BYTE PTR [rbx+0x1c0e8481],ch
  423892:	stc    
  423893:	test   al,0xb6
  423895:	mov    edx,0x71d9256a
  42389a:	rol    BYTE PTR [rdx+0x37],cl
  42389d:	or     al,0x7e
  42389f:	(bad)  
  4238a0:	enter  0x820c,0x81
  4238a4:	std    
  4238a5:	push   rbp
  4238a6:	mov    ecx,0x5236e1d8
  4238ab:	es mov dh,0xf7
  4238ae:	(bad)  
  4238af:	mov    ah,0xb5
  4238b1:	mov    bl,0x25
  4238b3:	mov    bl,0xd3
  4238b5:	rex.WRXB add al,0xa4
  4238b8:	xor    DWORD PTR [rcx+0x6869996a],0x23
  4238bf:	mov    ah,0x26
  4238c1:	rex.B
  4238c2:	rex.WR jle 0x42391e
  4238c5:	in     al,0x7f
  4238c7:	rex.XB and BYTE PTR [rip+0xe55ebba],dl        # 0xe982488
  4238ce:	lods   al,BYTE PTR ds:[rsi]
  4238cf:	rex.WB retf 0xf40
  4238d3:	fsub   QWORD PTR [rsi+riz*2+0x54]
  4238d7:	xchg   esp,eax
  4238d8:	es sub esp,esp
  4238db:	movabs eax,ds:0x558d0185d5c3a0f4
  4238e4:	add    BYTE PTR [rdi+0x3f],ah
  4238e7:	cmp    eax,0x654daf6a
  4238ec:	add    ch,BYTE PTR [rdx+0x363c4925]
  4238f2:	push   rdi
  4238f3:	ror    BYTE PTR [rsi],cl
  4238f5:	jb     0x4238e1
  4238f7:	(bad)  
  4238f8:	and    eax,0x802f525e
  4238fd:	cs test eax,0xac7d8a74
  423903:	and    al,0x7d
  423905:	outs   dx,DWORD PTR ds:[rsi]
  423906:	jmp    0x4238d5
  423908:	vpand  xmm0,xmm4,xmm1
  42390c:	in     eax,0xd9
  42390e:	ss push rdx
  423910:	add    cl,dl
  423912:	xor    al,BYTE PTR [rbx]
  423914:	out    dx,eax
  423915:	mov    ebx,0x8952c7a9
  42391a:	(bad)
  42391d:	rol    dh,1
  42391f:	(bad)  
  423920:	ins    BYTE PTR es:[rdi],dx
  423921:	(bad)  
  423922:	fild   DWORD PTR [rbx-0x61]
  423925:	enter  0xe169,0xd7
  423929:	outs   dx,DWORD PTR ds:[rsi]
  42392a:	or     DWORD PTR [rax],ebp
  42392c:	xchg   ebp,eax
  42392d:	or     dl,dh
  42392f:	adc    BYTE PTR [rip+0x3443c848],r10b        # 0x3486017e
  423936:	icebp  
  423937:	mov    esp,0x655f78e4
  42393c:	idiv   DWORD PTR [rax+0x59]
  42393f:	fist   WORD PTR [rbx]
  423941:	rex.RXB add al,0x23
  423944:	push   rdx
  423945:	enter  0x57ab,0x67
  423949:	rex.WRB pop r8
  42394b:	std    
  42394c:	shl    BYTE PTR [rdx],0x61
  42394f:	fld    TBYTE PTR [rsp+rax*2-0x639fcd5e]
  423956:	ins    BYTE PTR es:[rdi],dx
  423957:	push   rbx
  423958:	(bad)  
  423959:	add    ebx,DWORD PTR [rsi+rdx*2+0x57a77955]
  423960:	xchg   edi,eax
  423961:	cmp    BYTE PTR [rbx-0x6a46fa93],0x29
  423968:	pop    rsp
  423969:	xchg   edx,eax
  42396a:	pushf  
  42396b:	lods   al,BYTE PTR ds:[rsi]
  42396c:	in     al,dx
  42396d:	shr    DWORD PTR [rbx+0x15],cl
  423970:	shl    BYTE PTR [rdi-0x13],0xb4
  423974:	sbb    al,ch
  423976:	prefetch BYTE PTR [rdx-0x26b46736]
  42397d:	xor    al,0xee
  42397f:	sbb    eax,0xd941253c
  423984:	(bad)  
  423985:	sbb    al,0x69
  423987:	add    DWORD PTR [rax-0x36],eax
  42398a:	mov    dl,0x3
  42398c:	fnstcw WORD PTR [rsi+0x4ea48f7a]
  423992:	sub    al,0xa8
  423994:	(bad)  
  423995:	call   QWORD PTR [rsp+rbx*4]
  423998:	(bad)  
  423999:	movabs eax,ds:0xec24720e061ae255
  4239a2:	sbb    al,0x54
  4239a4:	jp     0x42392b
  4239a6:	div    BYTE PTR [rsi+0x389082a2]
  4239ac:	sub    eax,0xd0fb91d1
  4239b1:	clc    
  4239b2:	rcl    BYTE PTR [rax+rcx*8-0x64],cl
  4239b6:	xchg   edx,eax
  4239b7:	push   rax
  4239b8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4239b9:	retf   
  4239ba:	or     DWORD PTR [rsi+0x441e8289],edx
  4239c0:	rex.W cmp spl,BYTE PTR [rsi-0x72]
  4239c4:	(bad)  
  4239c5:	int    0xe3
  4239c7:	movabs al,ds:0x9eaeeced8ad81da6
  4239d0:	xchg   ebp,eax
  4239d1:	lock movsxd ecx,DWORD PTR [rsi+0x49d490b8]
  4239d8:	mov    bl,ch
  4239da:	lods   al,BYTE PTR ds:[esi]
  4239dc:	pop    rdx
  4239dd:	push   rsi
  4239de:	add    DWORD PTR [rip+0x2a557171],edi        # 0x2a97ab55
  4239e4:	(bad)
  4239e7:	mov    al,0x66
  4239e9:	sub    DWORD PTR [rcx],edi
  4239eb:	loopne 0x423a2c
  4239ed:	xor    eax,0x1623b11a
  4239f2:	or     ebx,edx
  4239f4:	ror    BYTE PTR [rax],0x4b
  4239f7:	jg     0x4239be
  4239f9:	(bad)  
  4239fa:	(bad)  
  4239fb:	pop    rbx
  4239fc:	in     eax,dx
  4239fd:	ins    DWORD PTR es:[rdi],dx
  4239fe:	scas   eax,DWORD PTR es:[rdi]
  4239ff:	scas   eax,DWORD PTR es:[rdi]
  423a00:	pop    rdx
  423a01:	retf   
  423a02:	fdivr  DWORD PTR [rdi+rbp*2]
  423a05:	cmc    
  423a06:	pop    rdx
  423a07:	or     edx,DWORD PTR [rdx]
  423a09:	pop    rdi
  423a0a:	mov    ecx,0x8e4f2176
  423a0f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  423a10:	jp     0x423a45
  423a12:	cs out 0x1a,eax
  423a15:	and    al,0xb
  423a17:	sar    BYTE PTR [rdx],0x91
  423a1a:	ror    BYTE PTR [rax-0x18],cl
  423a1d:	test   eax,0xacae0c69
  423a22:	mov    WORD PTR [rcx+0x4d1fa24d],ds
  423a28:	mov    dh,0xc8
  423a2a:	or     edi,DWORD PTR [rax]
  423a2c:	icebp  
  423a2d:	add    DWORD PTR [rsi-0x3ad40d59],ebx
  423a33:	(bad)  
  423a34:	rex.B cwde 
  423a36:	jbe    0x423a4d
  423a38:	mul    DWORD PTR [rdi]
  423a3a:	(bad)  
  423a3b:	cld    
  423a3c:	nop
  423a3d:	mov    ah,0xe8
  423a3f:	pushf  
  423a40:	mov    bh,0x57
  423a42:	in     eax,0xbb
  423a44:	shr    BYTE PTR [rdx+0x65270b30],0x82
  423a4b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  423a4c:	ret    
  423a4d:	add    DWORD PTR [rcx+rbx*2-0x49],ebx
  423a51:	popf   
  423a52:	push   rcx
  423a53:	or     dl,BYTE PTR [rdx]
  423a55:	movabs al,ds:0xc8b801d5242fd8c0
  423a5e:	mov    ebp,0xe63f6748
  423a63:	mov    cl,BYTE PTR [rax+rbx*4-0x6d]
  423a67:	or     BYTE PTR [rcx+rax*1],ch
  423a6a:	and    dl,BYTE PTR [rdi+0x61]
  423a6d:	outs   dx,BYTE PTR ds:[rsi]
  423a6e:	in     al,dx
  423a6f:	cli    
  423a70:	(bad)  
  423a71:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  423a72:	leave  
  423a73:	lahf   
  423a74:	scas   al,BYTE PTR es:[rdi]
  423a75:	mov    edx,0x21bbfe85
  423a7a:	(bad)  
  423a7b:	xor    bh,bl
  423a7d:	(bad)  
  423a7e:	jmp    0x423ab9
  423a80:	lods   eax,DWORD PTR ds:[rsi]
  423a81:	sub    eax,0xa5a0864d
  423a86:	jo     0x423a6b
  423a88:	jae    0x423a4b
  423a8a:	and    DWORD PTR [rdx-0x462a8743],eax
  423a90:	rex.RB mov r15b,0x8
  423a93:	and    bl,BYTE PTR [rbx-0x6c]
  423a96:	xchg   edi,eax
  423a97:	mov    DWORD PTR [rdi-0x2b2257f9],0x5b8e2f3b
  423aa1:	movabs eax,ds:0x4085948be30262b3
  423aaa:	test   eax,0x456d266f
  423aaf:	xchg   edx,eax
  423ab0:	js     0x423a7b
  423ab2:	mov    cl,0x33
  423ab4:	(bad)  
  423ab5:	ds out 0x1b,al
  423ab8:	out    0x4f,eax
  423aba:	mov    dh,0x76
  423abc:	mov    bl,0x1f
  423abe:	movsxd esp,DWORD PTR [rdx-0xed4efa3]
  423ac4:	movabs ds:0x5d287c7885d684c2,al
  423acd:	push   rbp
  423ace:	rex.WB adc cl,r9b
  423ad1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  423ad2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  423ad3:	jno    0x423b10
  423ad5:	push   rsi
  423ad6:	test   al,0x91
  423ad8:	push   0x62
  423ada:	imul   edi,edx,0x8f478b83
  423ae0:	sub    al,0x5
  423ae2:	fucom  st(1)
  423ae4:	popf   
  423ae5:	(bad)  
  423ae6:	(bad)  
  423ae7:	rex.WXB sbb bl,BYTE PTR [r8]
  423aea:	mov    bl,0x74
  423aec:	add    bh,0xea
  423aef:	push   rbp
  423af0:	rex.WR and rax,0xffffffffda0632c2
  423af6:	hlt    
  423af7:	xchg   edx,eax
  423af8:	sbb    eax,0xa99cde6d
  423afd:	ja     0x423ada
  423aff:	es or  DWORD PTR ss:[rsi-0x69],edi
  423b04:	wrmsr  
  423b06:	in     eax,0xd4
  423b08:	je     0x423a99
  423b0a:	xchg   esi,eax
  423b0b:	(bad)  
  423b0c:	loopne 0x423b4f
  423b0e:	or     dl,BYTE PTR [rcx-0x4060807]
  423b14:	retf   
  423b15:	ins    DWORD PTR es:[rdi],dx
  423b16:	push   rdi
  423b17:	repz mov r14b,0xab
  423b1b:	(bad)  
  423b1c:	jae    0x423ab2
  423b1e:	mov    ah,0x80
  423b20:	nop
  423b21:	rcr    BYTE PTR [rsi+0x4e4476d3],0x9
  423b28:	(bad)  
  423b29:	rex.WB
  423b2a:	rex.WRX (bad) 
  423b2c:	jns    0x423b87
  423b2e:	sahf   
  423b2f:	in     al,dx
  423b30:	out    dx,al
  423b31:	sbb    DWORD PTR [rbx+0x6a],ecx
  423b34:	ja     0x423b55
  423b36:	in     al,dx
  423b37:	fmul   DWORD PTR [rdi+0x76]
  423b3a:	lahf   
  423b3b:	or     al,0xf5
  423b3d:	rex.WR jmp 0x423b93
  423b40:	shl    DWORD PTR [rbp-0x1ee81ad0],0x34
  423b47:	sar    DWORD PTR [rsi+0x13e9f27f],0x7e
  423b4e:	fsub   st(7),st
  423b50:	es clc 
  423b52:	sub    ch,BYTE PTR [rbx]
  423b54:	fwait
  423b55:	in     eax,0x9d
  423b57:	or     ah,BYTE PTR [rcx+0x3771da55]
  423b5d:	jrcxz  0x423b67
  423b5f:	mov    edi,0xa9ce0b2c
  423b64:	add    bh,bh
  423b66:	cmp    BYTE PTR [rbp+0x13570d06],ah
  423b6c:	data16 jp 0x423b83
  423b6f:	movabs ds:0xe2ed9a6653ed0492,al
  423b78:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  423b79:	xchg   ebp,eax
  423b7a:	rex.WB movabs ds:0x34ca4919e99c2051,al
  423b84:	mov    bl,0xf0
  423b86:	leave  
  423b87:	int    0x91
  423b89:	in     eax,0x1d
  423b8b:	xchg   ebp,eax
  423b8c:	sbb    DWORD PTR [rax-0x6dfbb155],0x60ae6385
  423b96:	retf   
  423b97:	cmp    eax,0x39b26420
  423b9c:	adc    eax,0xebfd6198
  423ba1:	mov    esi,0x5ff86d40
  423ba6:	rex.WRXB fidiv DWORD PTR [r15-0x1b]
  423baa:	jne    0x423c0a
  423bac:	or     al,0xb4
  423bae:	rcl    DWORD PTR [rdi+0x5fc097f2],1
  423bb4:	jns    0x423ba8
  423bb6:	div    al
  423bb8:	cmp    al,0x81
  423bba:	jle    0x423b58
  423bbc:	mov    esi,ds
  423bbe:	(bad)  
  423bbf:	pop    rbx
  423bc0:	fdivr  st(3),st
  423bc2:	movabs eax,ds:0x738453d131db0da0
  423bcb:	sahf   
  423bcc:	test   esp,esi
  423bce:	pop    rdx
  423bcf:	loope  0x423b82
  423bd1:	xchg   edx,eax
  423bd2:	lods   al,BYTE PTR ds:[rsi]
  423bd3:	push   rbp
  423bd4:	mov    ch,0x41
  423bd6:	stc    
  423bd7:	sbb    BYTE PTR [rbx],0xba
  423bda:	rex.WRXB (bad) 
  423bdc:	loop   0x423b88
  423bde:	scas   eax,DWORD PTR es:[rdi]
  423bdf:	pop    rcx
  423be0:	fnstsw WORD PTR [rax]
  423be2:	sbb    bh,BYTE PTR [rsi+0x741892d3]
  423be8:	mov    edi,0xfa56ec2a
  423bed:	fsubr  DWORD PTR [rip+0xffffffff80d87f5e]        # 0xffffffff811abb51
  423bf3:	in     al,dx
  423bf4:	(bad)  
  423bf5:	rex.WXB outs dx,BYTE PTR ds:[rsi]
  423bf7:	add    al,0x66
  423bf9:	sub    cl,BYTE PTR [rbp+0x45]
  423bfc:	lahf   
  423bfd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  423bfe:	add    ch,BYTE PTR [rax+rsi*8+0x519c896f]
  423c05:	nop
  423c06:	push   rcx
  423c07:	lods   eax,DWORD PTR ds:[rsi]
  423c08:	cdq    
  423c09:	(bad)  
  423c0a:	xchg   edi,eax
  423c0b:	xor    eax,0x957939b3
  423c10:	mov    bh,BYTE PTR [rdx-0x43a9ce8d]
  423c16:	rex.WRB rcr BYTE PTR [r9-0x16ed8cb8],cl
  423c1d:	jb     0x423c44
  423c1f:	(bad)  
  423c20:	lahf   
  423c21:	rex.W ret 
  423c23:	neg    BYTE PTR [rdi-0x704b0184]
  423c29:	mov    edi,0xc17ddb3d
  423c2e:	sub    edi,DWORD PTR [rdx+0x72]
  423c31:	jl     0x423c2c
  423c33:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  423c34:	jmp    0x423c06
  423c36:	stos   DWORD PTR es:[rdi],eax
  423c37:	int3   
  423c38:	xchg   dl,ah
  423c3a:	call   QWORD PTR [rdx+0x75]
  423c3d:	(bad)  
  423c3e:	sbb    esp,DWORD PTR [rbx+0x60]
  423c41:	push   rax
  423c42:	ds in  al,0xa0
  423c45:	sahf   
  423c46:	(bad)  
  423c47:	mov    eax,ecx
  423c49:	out    dx,al
  423c4a:	out    dx,al
  423c4b:	mov    al,0xf9
  423c4d:	(bad)  
  423c4e:	cld    
  423c4f:	or     ecx,DWORD PTR [rcx]
  423c51:	sbb    ebx,DWORD PTR [rdi+0x5ec76d3c]
  423c57:	lods   rax,QWORD PTR ds:[rsi]
  423c59:	(bad)  
  423c5a:	shl    BYTE PTR [rdi+rbp*4-0x1a],1
  423c5e:	in     eax,dx
  423c5f:	imul   ebp,DWORD PTR [rdi+0x2f],0x8b52395b
  423c66:	(bad)  
  423c67:	rex.WX leave 
  423c69:	adc    bh,cl
  423c6b:	mov    esi,0xfbb28025
  423c70:	and    DWORD PTR [rsi+0x69],edx
  423c73:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  423c74:	jnp    0x423ccd
  423c76:	sub    DWORD PTR [rsi-0x3e],esp
  423c79:	pop    rsp
  423c7a:	hlt    
  423c7b:	mov    eax,0x2e7b9a95
  423c80:	test   al,0x95
  423c82:	or     ch,BYTE PTR [rdi+0x100ae379]
  423c88:	xor    r10d,DWORD PTR [rdx+0x579ec16a]
  423c8f:	sbb    ebp,esp
  423c91:	push   rbp
  423c92:	mov    bl,0xe2
  423c94:	push   rdi
  423c95:	mov    al,0x54
  423c97:	jp     0x423cd1
  423c99:	(bad)  
  423c9a:	sbb    al,0x53
  423c9c:	push   rax
  423c9d:	rex.WRB (bad) 
  423c9f:	xchg   edx,eax
  423ca0:	mov    eax,eax
  423ca2:	jmp    QWORD PTR [rsi+0x7905b8cb]
  423ca8:	fstp   TBYTE PTR [rdi+0x16]
  423cab:	cdq    
  423cac:	cmp    BYTE PTR [rcx+rbx*8-0x41],bl
  423cb0:	jb     0x423c94
  423cb2:	pushf  
  423cb3:	jp     0x423c79
  423cb5:	ds mov esp,0x113dd739
  423cbb:	out    dx,eax
  423cbc:	jle    0x423c56
  423cbe:	mov    bl,0x5b
  423cc0:	sub    ebp,DWORD PTR [rdi+0xb1e2ff4]
  423cc6:	int    0xf6
  423cc8:	jo     0x423ce7
  423cca:	mov    DWORD PTR [rbx+rdi*2-0x5a71a815],0xe94e78ef
  423cd5:	(bad)  
  423cd6:	movabs al,ds:0x734e97f8af8dd8f6
  423cdf:	(bad)  
  423ce0:	fldenv [rdx]
  423ce2:	ret    
  423ce3:	loopne 0x423ca2
  423ce5:	mov    esp,0x5b737f4d
  423cea:	cmp    esi,DWORD PTR [rbp-0x66d2150f]
  423cf0:	imul   esi,DWORD PTR [rdi+rbx*2],0x10
  423cf4:	icebp  
  423cf5:	push   rdx
  423cf6:	sbb    eax,0x6ab4b5f5
  423cfb:	rex.WRB (bad) 
  423cfd:	xor    dl,ch
  423cff:	sub    eax,0x90e2d7db
  423d04:	cld    
  423d05:	mov    edx,0x5795b1ce
  423d0a:	imul   ebx,DWORD PTR [rax+0x3b26446d],0x558bb0da
  423d14:	mov    edx,0xbc6e2594
  423d19:	pop    rsp
  423d1a:	movabs eax,ds:0x6deec9ef80fd7800
  423d23:	push   rsp
  423d24:	fdiv   DWORD PTR [rax-0x441481a5]
  423d2a:	mov    esi,DWORD PTR [rdi]
  423d2c:	jg     0x423d7f
  423d2e:	sti    
  423d2f:	sbb    edi,DWORD PTR [rdx+0x69]
  423d32:	push   0x3c3a770d
  423d37:	(bad)  
  423d38:	cmp    al,0x80
  423d3a:	xchg   edx,eax
  423d3b:	xlat   BYTE PTR fs:[rbx]
  423d3d:	mov    ch,0xe6
  423d3f:	(bad)  
  423d41:	and    eax,DWORD PTR [rdx-0x5d159c5b]
  423d47:	mov    ecx,DWORD PTR fs:[rdx]
  423d4a:	(bad)  
  423d4b:	cwde   
  423d4c:	mov    DWORD PTR [rsi+0x62],0x3e193dd4
  423d53:	or     DWORD PTR [rdi-0x1c],0xffffffcd
  423d57:	shl    DWORD PTR [rbx-0x398404d9],1
  423d5d:	outs   dx,BYTE PTR ds:[rsi]
  423d5e:	fucomp st(2)
  423d60:	mov    rbp,rbp
  423d63:	lea    eax,[rdi-0x33]
  423d66:	mov    dh,0x5d
  423d68:	out    dx,eax
  423d69:	in     al,dx
  423d6a:	rol    DWORD PTR [rdx-0xe29210a],cl
  423d70:	movntq (bad),mm5
  423d71:	out    0xef,eax
  423d73:	(bad)  
  423d75:	jrcxz  0x423d88
  423d77:	add    eax,0x46ab6799
  423d7c:	call   0xfffffffffb98bef5
  423d81:	(bad)  
  423d82:	mov    ah,0x42
  423d84:	pop    rsi
  423d85:	push   rdi
  423d86:	adc    ah,dh
  423d88:	adc    al,0xf6
  423d8a:	ficom  WORD PTR [rcx+rdi*1+0x69]
  423d8e:	mov    ecx,0xde909a3d
  423d93:	imul   ebx,DWORD PTR [rcx+0x4c],0x467fd5cd
  423d9a:	jns    0x423d94
  423d9c:	sbb    DWORD PTR [rcx+0x40],esp
  423d9f:	(bad)  
  423da0:	sbb    al,0xdd
  423da2:	(bad)  
  423da3:	movsxd esi,edx
  423da5:	mov    dh,0x8f
  423da7:	movabs ds:0x1821f8b784508452,eax
  423db0:	nop
  423db1:	sub    BYTE PTR [rdi-0x6c],bl
  423db4:	xor    ecx,DWORD PTR [rdi]
  423db6:	xchg   esi,eax
  423db7:	xlat   BYTE PTR ds:[rbx]
  423db8:	sbb    DWORD PTR [rbx+0x7d569b78],edi
  423dbe:	and    al,0xd6
  423dc0:	and    al,0xe1
  423dc2:	jp     0x423de7
  423dc4:	scas   eax,DWORD PTR es:[rdi]
  423dc5:	iret   
  423dc6:	rex.WXB cmp BYTE PTR [r13+0x5843c557],sil
  423dcd:	pop    rdx
  423dce:	push   0x44
  423dd0:	test   ch,bh
  423dd2:	rex.R pop rbx
  423dd4:	(bad)  
  423dd5:	fcmovu st,st(7)
  423dd7:	neg    al
  423dd9:	mov    edi,0xf1c1d0c1
  423dde:	(bad)  
  423ddf:	rcr    ah,cl
  423de1:	and    dh,BYTE PTR [rdx]
  423de3:	(bad)  
  423de4:	(bad)  
  423de5:	cmp    ebx,ecx
  423de7:	and    ch,BYTE PTR [rdi-0x5d]
  423dea:	pop    rax
  423deb:	jno    0x423dff
  423ded:	xchg   ecx,eax
  423dee:	xlat   BYTE PTR gs:[rbx]
  423df0:	outs   dx,DWORD PTR ds:[rsi]
  423df1:	adc    edx,DWORD PTR [rsp+rax*8]
  423df4:	cld    
  423df5:	loopne 0x423d7f
  423df7:	cmc    
  423df8:	movabs ds:0xa818b95b4c5a4cc4,al
  423e01:	or     DWORD PTR [rbx+rdi*8],eax
  423e04:	(bad)  
  423e05:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  423e06:	(bad)  
  423e07:	movabs al,ds:0x2eceb53a127f3e24
  423e10:	(bad)  
  423e11:	(bad)  
  423e13:	and    cl,0xf2
  423e16:	push   0xffffffffb0662355
  423e1b:	or     al,0x1
  423e1d:	(bad)  
  423e1e:	or     eax,DWORD PTR [rcx-0x145c8430]
  423e24:	rex.RXB jbe 0x423e5d
  423e27:	(bad)  
  423e28:	mov    edi,0xa1d81bb4
  423e2d:	fldcw  WORD PTR [rsp+riz*2+0x5682d17b]
  423e34:	jbe    0x423e74
  423e36:	(bad)  
  423e37:	pop    rax
  423e38:	in     eax,0x18
  423e3a:	or     al,0x1b
  423e3c:	xchg   BYTE PTR [rdx],dl
  423e3e:	push   0x966f87d
  423e43:	mov    eax,DWORD PTR es:[rbp-0x32f493ca]
  423e4a:	mov    ch,BYTE PTR [rdx]
  423e4c:	mov    ecx,DWORD PTR [rcx+0x56]
  423e4f:	add    eax,0xa3041048
  423e54:	enter  0x4b07,0x93
  423e58:	add    eax,0x19757bc5
  423e5d:	xor    ebx,edi
  423e5f:	(bad)  
  423e60:	mov    cl,0x31
  423e62:	mov    bl,0xee
  423e64:	ficom  WORD PTR [rcx]
  423e66:	sub    eax,DWORD PTR [rsp+rbx*8-0x333554a3]
  423e6d:	fs (bad) 
  423e6f:	(bad)  [rdx+rbx*1]
  423e72:	test   al,0x21
  423e74:	lahf   
  423e75:	xchg   esi,eax
  423e76:	pop    rdx
  423e77:	and    esp,DWORD PTR [rbp+rdi*1+0x59]
  423e7b:	push   rbp
  423e7c:	pushf  
  423e7d:	loope  0x423e1f
  423e7f:	xchg   esp,eax
  423e80:	adc    BYTE PTR [rsi],dl
  423e82:	xchg   ebp,eax
  423e83:	stos   DWORD PTR es:[rdi],eax
  423e84:	jo     0x423e86
  423e86:	js     0x423ea6
  423e88:	add    BYTE PTR [rbp+0x47],dl
  423e8b:	cli    
  423e8c:	jle    0x423eeb
  423e8e:	cmp    al,0x22
  423e90:	jne    0x423efe
  423e92:	(bad)  
  423e93:	lea    ecx,[rdx-0x3607754d]
  423e99:	pop    rax
  423e9a:	push   rax
  423e9b:	test   eax,0x3102c47a
  423ea0:	scas   al,BYTE PTR es:[rdi]
  423ea1:	xchg   edi,eax
  423ea2:	(bad)  
  423ea3:	je     0x423ede
  423ea5:	out    dx,eax
  423ea6:	stc    
  423ea7:	rex.RB or al,0x45
  423eaa:	mov    edi,0x39c6ed81
  423eaf:	xchg   ebx,eax
  423eb0:	adc    DWORD PTR [rdi+0x56ddb3f8],edx
  423eb6:	imul   eax,DWORD PTR [rbx+0x29],0xffffffe6
  423eba:	in     al,dx
  423ebb:	(bad)  
  423ebc:	lahf   
  423ebd:	retf   0xeccc
  423ec0:	pop    rcx
  423ec1:	(bad)  
  423ec2:	movsxd ecx,DWORD PTR [rsi-0x1971dfa4]
  423ec8:	std    
  423ec9:	mov    ?,WORD PTR [rcx]
  423ecb:	xchg   ebp,eax
  423ecc:	jns    0x423f2d
  423ece:	push   rsi
  423ecf:	mov    dl,cl
  423ed1:	push   rbp
  423ed2:	hlt    
  423ed3:	fild   QWORD PTR [rdi]
  423ed5:	add    cl,BYTE PTR [rcx+0x50c3ab21]
  423edb:	stos   BYTE PTR es:[rdi],al
  423edc:	mov    esp,0x97555648
  423ee1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  423ee2:	pmaxub mm3,mm5
  423ee5:	xchg   esp,eax
  423ee6:	xor    edi,DWORD PTR [rdi]
  423ee8:	(bad)  
  423ee9:	sbb    ebx,DWORD PTR [rax+0x7b90642d]
  423eef:	xchg   esp,eax
  423ef0:	or     eax,0x165e1c1e
  423ef5:	xchg   dh,ah
  423ef7:	sbb    eax,0xa531a5ae
  423efc:	cmp    ah,BYTE PTR [rip+0xffffffffe2c72d7f]        # 0xffffffffe3096c81
  423f02:	outs   dx,DWORD PTR ds:[rsi]
  423f03:	movabs al,ds:0x4c08303268eb8ea4
  423f0c:	mov    WORD PTR [rax+0x36],ds
  423f0f:	pop    rbx
  423f10:	ins    DWORD PTR es:[rdi],dx
  423f11:	mov    edx,0xf5222f64
  423f16:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  423f17:	enter  0xe61a,0x1c
  423f1b:	movabs ds:0xb41ae4fe0e449c2,eax
  423f24:	xor    DWORD PTR [rbp-0x39],esp
  423f27:	(bad)  
  423f28:	sub    BYTE PTR [rdx],dl
  423f2a:	pop    rcx
  423f2b:	xor    DWORD PTR [rdx+0x35529f76],edx
  423f31:	std    
  423f32:	jmp    0xffffffffecdc56c4
  423f37:	fstp   TBYTE PTR [rsi+rdi*8]
  423f3a:	je     0x423f0e
  423f3c:	sub    al,0x65
  423f3e:	(bad)  
  423f3f:	mov    ebx,0x23d52bbd
  423f44:	push   0x19af05de
  423f49:	cwde   
  423f4a:	rex.R
  423f4b:	es data16 jmp 0x423ef4
  423f4f:	xchg   ebx,eax
  423f50:	jnp    0x423f0f
  423f52:	(bad)  
  423f53:	fnsave [rip+0x2d3ec5a2]        # 0x2d8104fb
  423f59:	or     ebx,DWORD PTR [rdx+0x30]
  423f5c:	pop    rax
  423f5d:	fisttp DWORD PTR [rcx]
  423f5f:	mov    ch,ch
  423f61:	in     eax,0xf5
  423f63:	or     dl,BYTE PTR [rsi]
  423f65:	rcr    bh,cl
  423f67:	or     eax,DWORD PTR [rdx-0x25]
  423f6a:	sub    eax,0xf69fe971
  423f6f:	lods   al,BYTE PTR ds:[rsi]
  423f70:	imul   rcx,QWORD PTR [r14+0x6c59c81f],0xe2ff67c
  423f7b:	(bad)  
  423f7c:	and    DWORD PTR [rip+0x1c272ab2],0x8fbad5f2        # 0x1c696a38
  423f86:	(bad)  
  423f87:	out    0x10,eax
  423f89:	ficomp WORD PTR [rax+0x4a2be56f]
  423f8f:	sahf   
  423f90:	mov    ebx,0x33658905
  423f95:	pop    rdx
  423f96:	fsubr  DWORD PTR [rax-0x3e936586]
  423f9c:	sar    cl,1
  423f9e:	cld    
  423f9f:	(bad)  
  423fa1:	ins    DWORD PTR es:[rdi],dx
  423fa2:	cs stos DWORD PTR es:[rdi],eax
  423fa4:	lods   al,BYTE PTR ds:[rsi]
  423fa5:	shr    BYTE PTR [rax+0x153e08ed],1
  423fab:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  423fac:	rex.WRB enter 0x7102,0x81
  423fb1:	out    0x5c,eax
  423fb3:	xchg   esi,eax
  423fb4:	adc    dh,ah
  423fb6:	sahf   
  423fb7:	push   rbx
  423fb8:	lods   eax,DWORD PTR ds:[rsi]
  423fb9:	cmp    al,0x0
  423fbb:	add    al,0xb8
  423fbd:	mov    ecx,0x9eaac1da
  423fc2:	xor    ebp,ebx
  423fc4:	pop    rsi
  423fc5:	adc    BYTE PTR [rip+0xffffffffaa4b0e07],ch        # 0xffffffffaa8d4dd2
  423fcb:	pop    rdx
  423fcc:	outs   dx,BYTE PTR ds:[rsi]
  423fcd:	rex.B retf 0x757b
  423fd1:	push   rbx
  423fd2:	adc    bl,BYTE PTR [rbx+0x756421f0]
  423fd8:	rol    BYTE PTR [rdi-0x6c],1
  423fdb:	scas   eax,DWORD PTR es:[rdi]
  423fdc:	outs   dx,BYTE PTR ds:[rsi]
  423fdd:	fwait
  423fde:	and    BYTE PTR [rcx+0x66030831],al
  423fe4:	sahf   
  423fe5:	or     ebx,DWORD PTR [rsi-0x1ab2a20f]
  423feb:	adc    BYTE PTR [rdx-0x11],cl
  423fee:	pop    rsi
  423fef:	nop
  423ff0:	mov    ah,0x59
  423ff2:	mov    dh,0xf4
  423ff4:	in     eax,0xe6
  423ff6:	rex.WB (bad) 
  423ff8:	mov    esp,0x452f464b
  423ffd:	rex.WR sbb r14b,BYTE PTR [rdi-0x67]
  424001:	popf   
  424002:	rex.W mov spl,0xc1
  424005:	rex.R (bad) 
  424007:	mov    ah,0x55
  424009:	mov    ah,0x5
  42400b:	rol    DWORD PTR [rbx],0xc9
  42400e:	mov    edx,0x2a08cb40
  424013:	addr32 int 0x95
  424016:	cmc    
  424017:	cwde   
  424018:	(bad)  
  424019:	fnstenv [rdx+0x387f0572]
  42401f:	and    cl,al
  424021:	mul    DWORD PTR [rip+0xfffffffff2ab8c20]        # 0xfffffffff2edcc47
  424027:	xchg   esp,eax
  424028:	(bad)  
  424029:	loopne 0x42407a
  42402b:	xor    eax,0xb1d5b29f
  424030:	xchg   ebp,eax
  424031:	clc    
  424032:	jb     0x424011
  424034:	ins    DWORD PTR es:[rdi],dx
  424035:	(bad)  
  424036:	mov    ecx,0xeb9585dc
  42403b:	fucomip st,st(5)
  42403d:	scas   al,BYTE PTR es:[rdi]
  42403e:	or     al,0x6b
  424040:	loopne 0x424032
  424042:	push   rdi
  424043:	cmp    esi,ebx
  424045:	mov    al,0xa2
  424047:	neg    DWORD PTR [rsi+rax*1+0x7]
  42404b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  42404c:	sbb    esi,DWORD PTR [rax+0x18]
  42404f:	or     al,0x42
  424051:	or     al,BYTE PTR [rcx-0x21e2f49c]
  424057:	(bad)  
  424059:	jle    0x424013
  42405b:	shl    edx,cl
  42405d:	in     al,0x43
  42405f:	popf   
  424060:	cmp    al,0x67
  424062:	adc    ebx,DWORD PTR [rsi-0x60d2edf7]
  424068:	test   ebx,ebp
  42406a:	add    eax,0x5407357d
  42406f:	xchg   edi,eax
  424070:	jbe    0x424082
  424072:	and    ebx,DWORD PTR [rip+0x284dd12b]        # 0x289011a3
  424078:	sub    DWORD PTR [rsi],0xcc7883bc
  42407e:	cmp    al,0xbc
  424080:	test   al,0xc5
  424083:	mov    esp,0x11102663
  424088:	and    al,al
  42408a:	add    DWORD PTR [rcx+0x71],esi
  42408d:	mov    ah,0xc3
  42408f:	pop    rcx
  424090:	push   rax
  424091:	(bad)  
  424092:	shr    ebx,1
  424094:	adc    eax,0x3e37840e
  424099:	ss call 0x3aa79ef9
  42409f:	sbb    ch,BYTE PTR [rip+0xffffffffae0473d7]        # 0xffffffffae46b47c
  4240a5:	sub    eax,0xe230aa8f
  4240aa:	rex.R lods eax,DWORD PTR ds:[rsi]
  4240ac:	jmp    0xffffffffe239a0e1
  4240b1:	(bad)  
  4240b2:	jmp    0xfffffffff3e519af
  4240b7:	jns    0x4240ca
  4240b9:	xor    ebx,ebp
  4240bb:	mov    ebp,0xd368c5f2
  4240c0:	enter  0x8fd4,0x6e
  4240c4:	fmul   QWORD PTR [rdi+rbp*4-0x7d]
  4240c8:	mov    esi,0xea2d57e6
  4240cd:	xchg   edi,eax
  4240ce:	mov    ah,0xa
  4240d0:	cmp    eax,0xdd9be8cc
  4240d5:	fistp  WORD PTR [rax-0x76a552cd]
  4240db:	lahf   
  4240dc:	mov    dh,0xa6
  4240de:	mov    bl,0xcf
  4240e0:	(bad)  
  4240e1:	adc    al,0x29
  4240e3:	ret    
  4240e4:	xor    DWORD PTR [rbp-0x3dff2aec],ebp
  4240ea:	(bad)  
  4240eb:	rex.R (bad) 
  4240ed:	sub    DWORD PTR [rsi],0xbccbd331
  4240f3:	cld    
  4240f4:	jne    0x4240cb
  4240f6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4240f7:	mov    ch,0xd1
  4240f9:	mov    dh,0x55
  4240fb:	(bad)  [rcx+0x2c936c47]
  424101:	jrcxz  0x42414d
  424103:	fidiv  DWORD PTR [rcx-0x5884b9ec]
  424109:	(bad)  
  42410a:	sbb    DWORD PTR [rbx],esp
  42410c:	sti    
  42410d:	cld    
  42410e:	(bad)  
  424110:	xlat   BYTE PTR ds:[rbx]
  424111:	fisttp DWORD PTR [edi]
  424114:	jns    0x4240f9
  424116:	jl     0x424111
  424118:	outs   dx,DWORD PTR ds:[rsi]
  424119:	(bad)  
  42411a:	add    eax,0xc84559f4
  42411f:	xor    eax,0xf0b43bee
  424124:	scas   eax,DWORD PTR es:[rdi]
  424125:	rex.RXB movabs ds:0x3464c98909f9e1c1,eax
  42412f:	xor    bh,BYTE PTR [rdi+0x59]
  424132:	rex.RB sub eax,0x6fab5a6
  424138:	fild   WORD PTR [rcx-0x29]
  42413b:	mov    bl,0x29
  42413d:	pop    rcx
  42413e:	lock jrcxz 0x4241a5
  424141:	pop    rcx
  424142:	movabs ds:0xaa79a053292b6065,al
  42414b:	hlt    
  42414c:	sub    DWORD PTR [rsi-0x4d818aff],0x3a116f83
  424156:	adc    al,0x3
  424158:	mov    bl,BYTE PTR [rbx]
  42415a:	retf   0xb0cb
  42415d:	outs   dx,BYTE PTR ds:[rsi]
  42415e:	add    ebp,DWORD PTR [rcx+0x3d]
  424161:	rcl    BYTE PTR [rbx+0x42],0x40
  424165:	sub    edi,DWORD PTR [rdx*8-0x628bc768]
  42416c:	push   rax
  42416d:	ins    BYTE PTR es:[rdi],dx
  42416e:	rex.WX (bad) 
  424170:	push   rbx
  424171:	icebp  
  424172:	ins    BYTE PTR es:[rdi],dx
  424173:	add    dh,cl
  424175:	shl    BYTE PTR [rdi],1
  424177:	shl    BYTE PTR [rdi-0x2289e210],0x4c
  42417e:	xor    BYTE PTR [rdi-0x68],al
  424181:	pop    rdi
  424182:	sub    DWORD PTR [rdx-0x6bdb71dd],0xffffffd8
  424189:	xor    eax,0xcb0737ff
  42418e:	in     al,0x60
  424190:	adc    ebp,DWORD PTR [rax-0x6c]
  424193:	(bad)  
  424194:	mov    cl,BYTE PTR [rcx-0x5889597a]
  42419a:	jp     0x424127
  42419c:	push   0xffffffffa64fd852
  4241a1:	xchg   edi,eax
  4241a2:	rcl    DWORD PTR [rsi],0xc4
  4241a5:	mov    ebp,DWORD PTR [rdx+0x51954f7]
  4241ab:	rex.X pop rax
  4241ad:	mov    ebp,0xf4c18861
  4241b2:	pop    rdi
  4241b3:	ret    0xbe79
  4241b6:	rex.RX add r11d,DWORD PTR [rcx]
  4241b9:	jae    0x42414b
  4241bb:	adc    BYTE PTR [rsi],cl
  4241bd:	movabs ds:0xf7169afe5cd99a2,eax
  4241c6:	(bad)  
  4241c7:	movabs al,ds:0x7b74f761ae41aa78
  4241d0:	movabs ds:0xe72e032d2604d537,eax
  4241d9:	imul   ebp,DWORD PTR [rax-0x4a49a110],0x842bdaa7
  4241e3:	pop    rcx
  4241e4:	hlt    
  4241e5:	mov    ch,0x8d
  4241e7:	jle    0x424194
  4241e9:	adc    al,0x26
  4241eb:	and    ebx,DWORD PTR [rbp+riz*2+0x17]
  4241ef:	(bad)  
  4241f0:	adc    DWORD PTR [rdi-0x19cd26e4],r10d
  4241f7:	rex.XB cmp DWORD PTR [r11-0x6e],ebx
  4241fb:	loopne 0x424229
  4241fd:	rex.B jne 0x424231
  424200:	add    edx,DWORD PTR [rdi-0x333a4928]
  424206:	movabs al,ds:0x9a10a3dda8f7b169
  42420f:	in     al,dx
  424210:	retf   0xc6e
  424213:	popf   
  424214:	mov    bl,0x9b
  424216:	and    esp,DWORD PTR [rsi+0x62]
  424219:	mov    ebx,edx
  42421b:	(bad)  
  42421c:	jp     0x42422b
  42421e:	sub    eax,0x55b9c200
  424223:	pop    rdx
  424224:	mov    eax,cs
  424226:	cli    
  424227:	jmp    0x47e8f766
  42422c:	sbb    eax,0xfdb924c9
  424231:	push   rdx
  424232:	(bad)  
  424233:	sbb    eax,0x754e31b5
  424238:	adc    DWORD PTR [rsi+0x13],ebp
  42423b:	lea    ecx,[rdi+rcx*4-0x10736717]
  424242:	in     eax,dx
  424243:	mov    bh,0xf8
  424245:	xor    ebp,DWORD PTR [rcx]
  424247:	nop
  424248:	sub    edx,DWORD PTR [rsi+0x11]
  42424b:	jle    0x424279
  42424d:	push   rbx
  42424e:	sbb    BYTE PTR [rbx-0x72],0xe1
  424252:	cmp    ah,al
  424254:	rex.RB sti 
  424256:	rex.WXB popf 
  424258:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  424259:	mov    edi,0xab1c5aa3
  42425e:	(bad)  
  42425f:	cwde   
  424260:	push   rbp
  424261:	jl     0x4241f2
  424263:	(bad)  
  424264:	rex jb 0x424279
  424267:	mov    cl,0xa6
  424269:	rex.XB cmp al,0x14
  42426c:	ins    BYTE PTR es:[rdi],dx
  42426d:	(bad)  
  42426e:	or     bl,BYTE PTR [rbx]
  424270:	fist   DWORD PTR [rcx-0x57]
  424273:	jp     0x4242b9
  424275:	sahf   
  424276:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  424277:	xchg   esp,eax
  424278:	retf   
  424279:	rex.R
  42427a:	lock or ebp,esi
  42427d:	movsxd esi,DWORD PTR ds:[rbx-0x6a0a35ed]
  424284:	pop    rsp
  424285:	fsubr  st(2),st
  424287:	or     al,0x1f
  424289:	xor    DWORD PTR [rcx],esp
  42428b:	outs   dx,BYTE PTR ds:[rsi]
  42428c:	cld    
  42428d:	out    dx,al
  42428e:	xchg   DWORD PTR [rcx-0x2a2e089b],eax
  424294:	fsubr  QWORD PTR [rcx+rdi*1+0x6606e532]
  42429b:	mov    dh,0xeb
  42429d:	(bad)  
  42429e:	stc    
  42429f:	mov    edi,ecx
  4242a1:	enter  0x79f7,0x61
  4242a5:	je     0x42426a
  4242a7:	jp     0x424284
  4242a9:	push   rdi
  4242aa:	xchg   esp,eax
  4242ab:	ret    0x4bb3
  4242ae:	gs js  0x424320
  4242b1:	or     cl,cl
  4242b3:	in     eax,0x60
  4242b5:	imul   esp,DWORD PTR [rcx+rdi*1-0x767d978d],0xe2698ab5
  4242c0:	rex.X cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4242c2:	mov    dh,0x60
  4242c4:	(bad)  
  4242c5:	std    
  4242c6:	and    al,BYTE PTR [rax+0x13964bf4]
  4242cc:	rex.R leave 
  4242ce:	xchg   ebp,eax
  4242cf:	and    ebx,DWORD PTR fs:[rbx-0x502ef72]
  4242d6:	rol    BYTE PTR [rsi-0x4e],1
  4242d9:	jno    0x424350
  4242db:	jo     0x424353
  4242dd:	mov    dh,0x73
  4242df:	out    dx,al
  4242e0:	jo     0x4242ff
  4242e2:	iret   
  4242e3:	rex.W out dx,eax
  4242e5:	(bad)  
  4242e6:	(bad)  
  4242e7:	or     eax,0xb8c62ecd
  4242ec:	cmc    
  4242ed:	int3   
  4242ee:	mov    WORD PTR [rcx+rbx*2+0x336ded6c],gs
  4242f5:	xor    DWORD PTR [rdx-0x22d4fe2c],0x75
  4242fc:	(bad)  
  4242fd:	cmp    dh,BYTE PTR [rdx+0x8]
  424300:	xchg   r15,rax
  424302:	loopne 0x42428c
  424304:	push   0x0
  424306:	adc    DWORD PTR [rcx+rbx*2+0x28],edi
  42430a:	mov    eax,0x2ba2bc81
  42430f:	sub    esi,eax
  424311:	(bad)  
  424312:	cmp    BYTE PTR gs:[r9+0x40],0xed
  424318:	rex.RX sbb al,0xa8
  42431b:	add    BYTE PTR [rax-0x55e377d4],bh
  424321:	out    0x2,al
  424323:	rcr    DWORD PTR [rbx-0x52],cl
  424326:	mov    edx,0x675b908b
  42432b:	cmp    edi,eax
  42432d:	in     al,dx
  42432e:	retf   
  42432f:	push   0x36
  424331:	sbb    eax,0xaeb90090
  424336:	rex.WX jae 0x42437e
  424339:	push   rsi
  42433a:	adc    DWORD PTR [rdx-0x5fd6cee0],edi
  424340:	(bad)  
  424341:	vdivpd ymm10,ymm2,YMMWORD PTR [ebp+0x6eb26805]
  42434a:	shr    DWORD PTR [rdx],cl
  42434c:	rex.RXB
  42434d:	rex.WR movabs rbx,0x16ef9ee3dbd9cdf7
  424357:	mov    ecx,0x4c65c5ca
  42435c:	jmp    0x424335
  42435e:	cmc    
  42435f:	(bad)  
  424360:	(bad)  
  424361:	push   0xffffffffffffff86
  424363:	loope  0x4242ff
  424365:	(bad)  
  424366:	fsub   st(1),st
  424368:	rex.RX leave 
  42436a:	movabs eax,ds:0x6bd6a449395bd65
  424373:	or     DWORD PTR [rbp+0x6ef1492e],0xffffffb9
  42437a:	pushf  
  42437b:	sbb    esi,DWORD PTR [rax+0x4f]
  42437e:	mov    ebx,0x4e02160d
  424383:	loopne 0x4243cc
  424385:	mov    al,0x6
  424387:	and    bh,BYTE PTR [rax]
  424389:	pop    rbp
  42438a:	rex.WXB lahf 
  42438c:	mov    dh,0x3e
  42438e:	icebp  
  42438f:	test   al,0xed
  424391:	shl    r15,cl
  424394:	or     eax,0xd972aab0
  424399:	out    0xfc,al
  42439b:	sahf   
  42439c:	or     al,0x9b
  42439e:	int    0xd6
  4243a0:	scas   al,BYTE PTR es:[rdi]
  4243a1:	rex.WXB
  4243a2:	imul   esi,DWORD PTR ss:[rdx],0xffffffc6
  4243a6:	fwait
  4243a7:	rex.WRB popf 
  4243a9:	pop    rsi
  4243aa:	and    BYTE PTR [rbx],0xd7
  4243ad:	(bad)  
  4243ae:	pop    rdi
  4243af:	pop    rsp
  4243b0:	cmc    
  4243b1:	imul   ebx,esi,0xd709fcd5
  4243b7:	cmp    dh,BYTE PTR [rdi]
  4243b9:	out    dx,al
  4243ba:	rex.WRX fild WORD PTR [rcx+0x5f]
  4243be:	(bad)  
  4243bf:	(bad)  
  4243c0:	ja     0x424407
  4243c2:	pop    rdx
  4243c3:	rex (bad) 
  4243c5:	nop
  4243c6:	mov    edx,0x117695a4
  4243cb:	movabs ds:0xa2c74313089ce076,al
  4243d4:	stc    
  4243d5:	jl     0x424410
  4243d7:	adc    DWORD PTR [rdx-0x6bbce8f4],ebx
  4243dd:	mov    esp,0xe7144938
  4243e2:	pop    rbx
  4243e3:	mov    dl,BYTE PTR [rdi+0x67eef0a2]
  4243e9:	push   0x72
  4243eb:	add    eax,0x399f533f
  4243f0:	ret    0xa494
  4243f3:	es (bad) 
  4243f5:	retf   0xb101
  4243f8:	add    eax,0x7ca1203b
  4243fd:	stos   BYTE PTR es:[rdi],al
  4243fe:	scas   eax,DWORD PTR es:[rdi]
  4243ff:	sub    al,0xb2
  424401:	mov    esp,0x26b0fdee
  424406:	cmp    dh,BYTE PTR [rbx+rdx*1-0x79]
  42440a:	mov    esi,0x5cc64bb0
  42440f:	pop    rsi
  424410:	int3   
  424411:	jl     0x424478
  424413:	sub    DWORD PTR [rbp-0x4c],ecx
  424416:	hlt    
  424417:	push   rdx
  424418:	test   al,0x24
  42441a:	(bad)  
  42441b:	hlt    
  42441c:	adc    ebx,DWORD PTR [rcx+0x7b5174f]
  424422:	iret   
  424423:	adc    al,0xa1
  424425:	push   rcx
  424426:	fdiv   DWORD PTR [rdx+0x315737b1]
  42442c:	in     eax,0x8b
  42442e:	xchg   ecx,eax
  42442f:	sbb    BYTE PTR [rip+0x662fae85],dh        # 0x6671f2ba
  424435:	(bad)  
  424436:	jmp    0x4243c9
  424438:	xor    al,0x83
  42443a:	movsxd edx,edi
  42443c:	(bad)  
  42443d:	xor    DWORD PTR [rbp+rbx*8+0x184f1722],esp
  424444:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  424445:	and    DWORD PTR [rip+0xffffffff84ac9add],edx        # 0xffffffff84eedf28
  42444b:	(bad)  
  42444c:	mov    al,0xdb
  42444f:	add    eax,0xea915207
  424454:	sahf   
  424455:	rex.X (bad) 
  424457:	jl     0x424486
  424459:	popf   
  42445a:	nop
  42445b:	(bad)  
  42445c:	test   eax,0x5a2d3b5
  424461:	mov    BYTE PTR [rax+0x7b7aa827],bh
  424467:	movabs ds:0x33a0d24a3eecec68,eax
  424471:	outs   dx,BYTE PTR ds:[rsi]
  424472:	leave  
  424473:	(bad)  
  424474:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  424475:	and    eax,0x451971fb
  42447a:	xchg   ecx,eax
  42447b:	xor    al,BYTE PTR [rbx+0x3d]
  42447e:	(bad)  
  42447f:	xor    dl,BYTE PTR [rax+0x6e]
  424482:	(bad)  
  424483:	jb     0x424478
  424485:	(bad)  
  424486:	cwde   
  424487:	cdq    
  424488:	xor    eax,0x985647f
  42448d:	imul   ebp,DWORD PTR [rsp+rbp*8-0x293320c3],0x71
  424495:	(bad)  
  424496:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  424497:	test   al,0xf0
  424499:	mov    ecx,DWORD PTR [rbx+0x3fb33cd2]
  42449f:	pop    rsp
  4244a0:	push   rbx
  4244a1:	xor    dl,dl
  4244a3:	(bad)
  4244a7:	sbb    BYTE PTR [rcx],ah
  4244a9:	cmp    QWORD PTR [rdx],r10
  4244ac:	xor    eax,DWORD PTR [rcx+0x28]
  4244af:	stos   DWORD PTR es:[rdi],eax
  4244b0:	rex.WRX imul r14,QWORD PTR [rsi],0xfffffffffffffff0
  4244b4:	push   0x1c
  4244b6:	sahf   
  4244b7:	sahf   
  4244b8:	mov    edi,0xc4f47293
  4244bd:	mov    ah,0x58
  4244bf:	(bad)  
  4244c0:	rex.WR fmul QWORD PTR [rsi-0x31ad24e1]
  4244c7:	xchg   ecx,eax
  4244c8:	movabs ds:0xd288c455cb8eb690,al
  4244d1:	sub    cl,ah
  4244d3:	(bad)
  4244d7:	mov    ch,BYTE PTR [rax]
  4244d9:	js     0x424545
  4244db:	rex.RX je 0x424465
  4244de:	movsxd edi,DWORD PTR [rsi-0x3de98219]
  4244e4:	je     0x424562
  4244e6:	out    dx,eax
  4244e7:	repnz imul edi,eax,0xffffffed
  4244eb:	cs push rdi
  4244ed:	(bad)  
  4244ee:	cmp    DWORD PTR [rsi],0x72069da0
  4244f4:	mov    ebx,0x8e9f2cc9
  4244f9:	fsubr  DWORD PTR [rdi-0x6a]
  4244fc:	(bad)  
  4244fd:	rex.WX mov QWORD PTR [rdi-0x7b7f89e7],rdx
  424504:	jp     0x4244d3
  424506:	(bad)  
  424507:	lods   eax,DWORD PTR ds:[rsi]
  424508:	(bad)  
  424509:	(bad)  
  42450a:	jb     0x424535
  42450c:	(bad)  
  42450d:	rex.RB xchg r8d,eax
  42450f:	rex.WX ins DWORD PTR es:[rdi],dx
  424511:	out    0x3b,eax
  424513:	push   0x6d
  424515:	(bad)  
  424516:	loopne 0x4244f1
  424518:	cmc    
  424519:	stc    
  42451a:	rex.WRX ficomp DWORD PTR [rcx+0x62]
  42451e:	jl     0x42457e
  424520:	mov    bl,0xc4
  424522:	out    dx,eax
  424523:	cli    
  424524:	cld    
  424525:	fyl2x  
  424527:	xchg   edx,eax
  424528:	(bad)  
  424529:	rex out 0x1b,eax
  42452c:	mov    dl,0xbe
  42452e:	lods   al,BYTE PTR ds:[rsi]
  42452f:	(bad)  
  424530:	icebp  
  424531:	adc    edx,DWORD PTR [rdx-0x7e]
  424534:	fist   DWORD PTR [rcx+0x50cb107b]
  42453a:	xchg   esi,eax
  42453b:	(bad)  
  42453c:	int    0xfd
  42453e:	pop    rdi
  42453f:	sub    BYTE PTR [rax],al
  424541:	sahf   
  424542:	cmp    al,0xbc
  424544:	test   BYTE PTR [rdx-0x14],dl
  424547:	rex.WRX in eax,0x32
  42454a:	adc    eax,0x82f4e4c1
  42454f:	(bad)  
  424550:	sub    BYTE PTR [rsi+0xc5801bf],bl
  424556:	(bad)  
  424557:	lods   eax,DWORD PTR cs:[rsi]
  424559:	rex.RXB jae 0x4244f9
  42455c:	pop    rdx
  42455d:	xchg   edx,eax
  42455e:	xor    DWORD PTR [rdx+r11*2],0xffffffb5
  424563:	(bad)  
  424564:	pop    rcx
  424565:	(bad)  
  424566:	mov    ecx,0xcabf5b11
  42456b:	rex.WR shl spl,0x66
  42456f:	pop    rcx
  424570:	jl     0x4245a6
  424572:	pop    rbp
  424573:	or     BYTE PTR [rbx+0x31],dh
  424576:	adc    eax,0xc4a39ac2
  42457b:	(bad)  
  42457c:	retf   0x98fc
  42457f:	and    BYTE PTR [rdi-0x2276282d],dh
  424585:	lock (bad) 
  424587:	(bad)  
  424588:	cmp    ch,BYTE PTR [rcx]
  42458a:	sbb    ebx,eax
  42458c:	xor    dh,BYTE PTR [rbx-0x2564429e]
  424592:	movabs ds:0x76d30a3026e36926,al
  42459b:	sub    ebp,DWORD PTR [rip+0xfffffffff8d8e5d5]        # 0xfffffffff91b2b76
  4245a1:	mov    eax,0x6a21fdc6
  4245a6:	and    eax,0x3fe535d4
  4245ab:	and    DWORD PTR [rdi],edi
  4245ad:	mov    WORD PTR [rax],ds
  4245af:	sbb    eax,DWORD PTR [rcx+0x5cd65bcc]
  4245b5:	and    eax,0xf695965a
  4245ba:	or     DWORD PTR [rdi-0x66],0x1c
  4245be:	jmp    0x7873810c
  4245c3:	fnstsw WORD PTR [rsi]
  4245c5:	adc    bh,al
  4245c7:	lods   al,BYTE PTR ds:[rsi]
  4245c8:	rex.WXB and dl,BYTE PTR [r14]
  4245cb:	push   0xffffffff8e10ed45
  4245d0:	push   rsp
  4245d1:	fsub   DWORD PTR [rbp+rdx*2-0x46dddeaf]
  4245d8:	xor    al,0x45
  4245da:	leave  
  4245db:	xchg   esi,eax
  4245dc:	js     0x424645
  4245de:	movsxd ax,edi
  4245e1:	cmp    dl,dh
  4245e3:	scas   eax,DWORD PTR es:[rdi]
  4245e4:	fwait
  4245e5:	and    al,0x37
  4245e7:	adc    al,0x6f
  4245e9:	sahf   
  4245ea:	in     al,dx
  4245eb:	(bad)  
  4245ed:	jae    0x424643
  4245ef:	lods   al,BYTE PTR ds:[rsi]
  4245f0:	adc    al,0x87
  4245f2:	jle    0x4245f9
  4245f4:	fwait
  4245f5:	ja     0x42463d
  4245f7:	clc    
  4245f8:	nop
  4245f9:	and    al,0xf4
  4245fb:	add    al,0xe1
  4245fd:	mov    ebx,0x91d418ae
  424602:	jbe    0x424621
  424604:	pop    rbx
  424605:	test   BYTE PTR [rsi],bl
  424607:	jg     0x42459d
  424609:	sbb    al,0x6c
  42460b:	or     esi,DWORD PTR [rdx-0x3309db89]
  424611:	jg     0x4245cd
  424613:	int    0x3d
  424615:	pop    rdx
  424616:	add    al,0x42
  424618:	or     eax,0x12ba26b1
  42461d:	xchg   esi,eax
  42461e:	lods   eax,DWORD PTR ds:[rsi]
  42461f:	lock (bad) 
  424621:	std    
  424622:	jp     0x42463d
  424624:	push   0xffffffffb0ac2519
  424629:	mov    ecx,DWORD PTR [rcx+0x525a2c1]
  42462f:	adc    eax,0xc8fbf2ec
  424634:	rex cli 
  424636:	sahf   
  424637:	je     0x424672
  424639:	lahf   
  42463a:	rex.RX
  42463b:	repz (bad) 
  42463d:	jne    0x4246a8
  42463f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  424640:	movabs al,ds:0x38ae250b5a011c89
  424649:	jns    0x4246b8
  42464b:	neg    BYTE PTR [rax]
  42464d:	sub    DWORD PTR [rbp-0x1502641c],esp
  424653:	ds pop rcx
  424655:	mov    cl,0xb8
  424657:	movabs al,ds:0x2554f2585c11b097
  424660:	rol    BYTE PTR [rbx+0x2b],cl
  424663:	push   rax
  424664:	sub    ebx,ecx
  424666:	rol    BYTE PTR [rbx-0x64718c01],1
  42466c:	xor    BYTE PTR [rbp-0x39],dl
  42466f:	cmp    eax,0x2234a40f
  424674:	mov    esp,esi
  424676:	leavew 
  424678:	adc    eax,0xc81f85bb
  42467d:	(bad)  
  42467e:	stos   DWORD PTR es:[rdi],eax
  42467f:	lods   eax,DWORD PTR ds:[rsi]
  424680:	xor    ah,BYTE PTR [rbx+rdi*1+0x1ebd8752]
  424687:	(bad)  
  424688:	add    eax,0x5d5bd970
  42468d:	addr32 out 0x20,al
  424690:	jb     0x424694
  424692:	int3   
  424693:	mov    eax,0xbc663f2a
  424698:	jmp    0xffffffff92128afd
  42469d:	rex.WX push rbp
  42469f:	pop    rbx
  4246a0:	loop   0x424682
  4246a2:	(bad)  
  4246a3:	ds fwait
  4246a5:	pop    rdx
  4246a6:	and    BYTE PTR [rsi+0x44],bl
  4246a9:	movsxd esp,DWORD PTR [rbp+0x30920ada]
  4246af:	out    dx,al
  4246b0:	test   BYTE PTR [rcx-0x12],ah
  4246b3:	repnz mov ch,0x95
  4246b6:	cmc    
  4246b7:	xchg   ebp,eax
  4246b8:	xchg   edi,eax
  4246b9:	imul   esi,DWORD PTR [rdx],0xffffffc9
  4246bc:	and    ch,BYTE PTR [rsi-0x72e8c8fa]
  4246c2:	push   rdi
  4246c3:	rex.WRB xor r14b,BYTE PTR [r14-0x14]
  4246c7:	pop    rbx
  4246c8:	out    0xde,eax
  4246ca:	movabs ds:0xc9feeabb7c9f573b,al
  4246d3:	(bad)  
  4246d4:	sub    al,0xe9
  4246d6:	jrcxz  0x424723
  4246d8:	es cwde 
  4246da:	mov    ebp,0xf2575f04
  4246df:	shr    BYTE PTR [rdx+rbp*1-0xa],cl
  4246e3:	jp     0x424736
  4246e5:	fsubr  DWORD PTR [rdx-0x16bd2f15]
  4246eb:	pop    QWORD PTR [rcx-0x64ace8e6]
  4246f1:	pop    rax
  4246f2:	jne    0x424719
  4246f4:	jmp    0xffffffffa01952ff
  4246f9:	mov    edx,0x2e423c72
  4246fe:	mov    ebp,DWORD PTR [rcx+rdi*2-0x4d]
  424702:	(bad)  
  424703:	ret    0xee43
  424706:	cmp    al,0x35
  424708:	ins    BYTE PTR es:[rdi],dx
  424709:	movsxd eax,DWORD PTR [rdx-0x33]
  42470c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42470d:	(bad)  
  42470e:	add    DWORD PTR [rcx+0x48],ebp
  424711:	pop    rsi
  424712:	cmp    edx,esp
  424714:	(bad)  
  424715:	jg     0x424727
  424717:	mov    ah,0xb5
  424719:	xor    dl,BYTE PTR [rdi]
  42471b:	sbb    al,0x61
  42471d:	fwait
  42471e:	clc    
  42471f:	rex.WXB adc r14,0x36f824c9
  424726:	std    
  424727:	xor    DWORD PTR [rbx+0x6232d97],0xaff24315
  424731:	add    al,0xe6
  424733:	mov    ebp,0x2ec98e4d
  424738:	mov    eax,ebx
  42473a:	jl     0x424786
  42473c:	add    BYTE PTR [rax-0x67bd19cf],al
  424742:	leave  
  424743:	and    BYTE PTR [rcx+rsi*1],ah
  424746:	movabs al,ds:0xf52d9ac72917c553
  42474f:	(bad)  
  424750:	cmp    ebp,esi
  424752:	(bad)  
  424753:	and    eax,DWORD PTR [rcx-0xf]
  424756:	push   0xffffffff91fd0ea9
  42475b:	in     eax,0xbf
  42475d:	outs   dx,DWORD PTR ds:[rsi]
  42475e:	test   eax,0xd841b0e1
  424763:	xor    al,0x8d
  424765:	push   rax
  424766:	shl    DWORD PTR [rdx-0x578476c9],0xef
  42476d:	std    
  42476e:	std    
  42476f:	loopne 0x424764
  424771:	fnstsw WORD PTR [rsi+0x678a27c8]
  424777:	stc    
  424778:	iret   
  424779:	movabs al,ds:0x4fcce7a08d4463a4
  424782:	in     eax,dx
  424783:	movabs ds:0xded6d3e18bcef76b,eax
  42478c:	imul   esp,DWORD PTR [rsi-0xd],0x1f8ddc1
  424793:	(bad)  
  424794:	jmp    rbp
  424796:	jmp    0x4500ac76
  42479b:	int    0x3c
  42479d:	(bad)  
  42479e:	push   0xffffffffea659fbc
  4247a3:	jl     0x4247ca
  4247a5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4247a6:	(bad)  
  4247a7:	cmp    ecx,ecx
  4247a9:	outs   dx,BYTE PTR ds:[rsi]
  4247aa:	(bad)  
  4247ab:	ins    BYTE PTR es:[rdi],dx
  4247ac:	test   DWORD PTR [rax-0x23],esp
  4247af:	mov    BYTE PTR [rbx-0x25],ch
  4247b2:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4247b3:	(bad)  
  4247b4:	mov    ch,BYTE PTR [rbp+0x1238152b]
  4247ba:	push   0x11
  4247bc:	rex.WRX pop rsp
  4247be:	rex.WX out dx,eax
  4247c0:	popf   
  4247c1:	in     eax,0xd1
  4247c3:	sbb    al,0xe
  4247c5:	test   DWORD PTR [rax+0x66],edx
  4247c8:	lahf   
  4247c9:	mov    dl,0xc9
  4247cb:	adc    ah,cl
  4247cd:	pop    rcx
  4247ce:	rcr    BYTE PTR [rcx-0x429a2f78],cl
  4247d4:	fcmovnu st,st(0)
  4247d6:	jae    0x4247ed
  4247d8:	mov    esi,DWORD PTR [rbx-0x28]
  4247db:	cld    
  4247dc:	movabs al,ds:0xa3cf065ed08e193b
  4247e5:	setl   BYTE PTR [rsi+0xc]
  4247e9:	(bad)  
  4247ea:	ret    0xdaef
  4247ed:	mov    edi,0xa4220a
  4247f2:	outs   dx,BYTE PTR ds:[rsi]
  4247f3:	shl    DWORD PTR [rip+0xfffffffffceacd31],cl        # 0xfffffffffd2d152a
  4247f9:	mov    edx,0x6df18be0
  4247fe:	ds test eax,0x62bcbaca
  424804:	xchg   rdx,rax
  424806:	ja     0x42486b
  424808:	sahf   
  424809:	pushf  
  42480a:	mov    WORD PTR [rdx-0x6539345],ss
  424810:	pop    rbx
  424812:	rol    BYTE PTR [rbp-0x3d74d836],1
  424818:	add    dl,BYTE PTR [rbp-0x62]
  42481b:	xor    eax,0x81a6b34
  424820:	and    al,0xd2
  424822:	(bad)  
  424823:	push   rsp
  424824:	stos   DWORD PTR es:[rdi],eax
  424825:	sbb    al,0x64
  424827:	(bad)
  42482a:	loopne 0x4247cc
  42482c:	xlat   BYTE PTR ds:[rbx]
  42482d:	push   rdx
  42482e:	popf   
  42482f:	xchg   BYTE PTR [rcx],bl
  424831:	(bad)  
  424832:	cmc    
  424833:	and    ch,BYTE PTR [rbx]
  424835:	and    esp,ecx
  424837:	(bad)  
  424838:	out    dx,al
  424839:	or     BYTE PTR [rdx-0x47d821a6],0xd7
  424840:	(bad)  
  424841:	test   eax,0xab601c54
  424846:	fcomp  DWORD PTR [rax*2+0x5dc5baba]
  42484d:	not    DWORD PTR [rcx+0x5a41451c]
  424853:	(bad)  
  424854:	lods   eax,DWORD PTR ds:[rsi]
  424855:	(bad)  
  424856:	frstor [rdx]
  424858:	pop    QWORD PTR [rdi-0x3b]
  42485b:	xchg   BYTE PTR [rcx+0x59],ch
  42485e:	add    DWORD PTR [rbx+0x538271e3],eax
  424864:	sbb    DWORD PTR [rdi+0x529e4565],eax
  42486a:	(bad)  
  42486b:	fidivr WORD PTR [rbp+0x28]
  42486e:	movsxd ebp,esi
  424870:	outs   dx,BYTE PTR ds:[rsi]
  424871:	rex.WX scas al,BYTE PTR es:[rdi]
  424873:	popf   
  424874:	sub    BYTE PTR [rcx+0x26],0x71
  424878:	lea    eax,[rdx+rcx*2+0x7a10e1ce]
  42487f:	pop    rbp
  424880:	sub    DWORD PTR [rdx-0x5a],esp
  424883:	xor    bl,al
  424885:	pop    rdi
  424886:	test   al,0x58
  424888:	(bad)  
  424889:	xchg   BYTE PTR [rsi+0x141fcb87],ch
  42488f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  424890:	(bad)  
  424891:	jmp    0x42488f
  424893:	jp     0x4248da
  424895:	test   eax,0x68987612
  42489a:	cmc    
  42489b:	rex.RXB push r14
  42489d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42489e:	mov    eax,0x54917247
  4248a3:	sub    al,0x8d
  4248a5:	(bad)  
  4248a6:	adc    bh,BYTE PTR [rcx+rdx*4]
  4248a9:	cmp    al,al
  4248ab:	jl     0x4248b4
  4248ad:	(bad)  
  4248ae:	jbe    0x42488f
  4248b0:	(bad)  
  4248b1:	ret    0xfc6d
  4248b4:	mov    dl,0xd2
  4248b6:	sub    BYTE PTR [rbx+0x55],ch
  4248b9:	and    ch,BYTE PTR [rdi+0x4408f62f]
  4248bf:	and    ecx,DWORD PTR [rdi-0x27f60cb2]
  4248c5:	(bad)  
  4248c6:	(bad)  
  4248c7:	rol    BYTE PTR [rbx+0xd6a7ee2],cl
  4248cd:	in     al,0x44
  4248cf:	std    
  4248d0:	sbb    eax,0xd6abe11e
  4248d5:	jmp    0x47ac3e7d
  4248da:	jp     0x4248d8
  4248dc:	mov    bl,0x5b
  4248de:	ror    BYTE PTR [rdi],cl
  4248e0:	test   BYTE PTR [rdi],0xe3
  4248e3:	int3   
  4248e4:	sub    BYTE PTR [rax],bh
  4248e6:	(bad)  
  4248e7:	(bad)  
  4248e8:	fadd   QWORD PTR [rbx+0x57c1f248]
  4248ee:	js     0x424917
  4248f0:	mov    ecx,0x6b41e284
  4248f5:	jp     0x42493d
  4248f7:	adc    eax,0xe1fd93ef
  4248fc:	out    dx,al
  4248fd:	movabs ds:0xaae86d5a09200f72,eax
  424906:	ror    DWORD PTR [rcx+0x2a],1
  424909:	mov    edi,DWORD PTR [rdi-0x36c974d2]
  42490f:	jae    0x4248dd
  424911:	(bad)  
  424912:	sub    eax,0x45de84ca
  424917:	in     al,0x85
  424919:	out    dx,eax
  42491a:	movabs ds:0x4d0600c1fc767d67,al
  424923:	cmc    
  424924:	push   rax
  424925:	clc    
  424926:	scas   al,BYTE PTR es:[rdi]
  424927:	mov    ss,WORD PTR [rdx+0x2b3ab430]
  42492d:	adc    al,0x31
  42492f:	adc    ch,BYTE PTR [rcx]
  424931:	fs mov edx,0xf36af275
  424937:	(bad)  
  424938:	mov    dl,0x15
  42493a:	push   rsi
  42493b:	movabs al,ds:0xfcf734ea39bc5dd4
  424944:	mov    bl,0x67
  424946:	mov    ebx,0xad3223bf
  42494b:	and    al,0x5f
  42494d:	sbb    eax,0x946e51d4
  424953:	out    dx,eax
  424954:	sub    ecx,DWORD PTR [rdx+0x4d]
  424957:	push   rsp
  424958:	stos   DWORD PTR es:[rdi],eax
  424959:	mov    ebx,0xe4fc8794
  42495e:	jmp    0x4a54e31d
  424963:	leave  
  424964:	jb     0x424991
  424966:	push   rsp
  424967:	stos   BYTE PTR es:[rdi],al
  424968:	cli    
  424969:	(bad)  
  42496a:	idiv   DWORD PTR [rdi]
  42496c:	ret    0xc9d4
  42496f:	(bad)  
  424970:	jg     0x4248f8
  424972:	(bad)  
  424973:	sbb    al,0x75
  424975:	(bad)  
  424976:	sub    al,0x8e
  424978:	pop    rbx
  424979:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  42497a:	rex.WXB in eax,dx
  42497c:	fsubr  QWORD PTR [rbx+0x74]
  42497f:	mov    ?,WORD PTR [rdi]
  424981:	push   QWORD PTR [rax+0x7a6a5899]
  424987:	xor    BYTE PTR [rdi+0x6],dl
  42498a:	xchg   ecx,eax
  42498b:	pop    rcx
  42498c:	test   DWORD PTR [rdx],esi
  42498e:	out    0x62,al
  424990:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  424991:	rex.WX out dx,eax
  424993:	je     0x4249ee
  424995:	sub    ebp,DWORD PTR [rcx-0xde29644]
  42499b:	cmp    cl,BYTE PTR [rbx]
  42499d:	rex.X fnstcw WORD PTR [rsi]
  4249a0:	pop    rbp
  4249a1:	push   rbp
  4249a2:	jae    0x4249e5
  4249a4:	pop    rcx
  4249a5:	(bad)  
  4249a6:	test   DWORD PTR [rcx-0x1b3c22a4],esi
  4249ac:	adc    al,0x66
  4249ae:	adc    QWORD PTR [rsi+0x40],rax
  4249b2:	mov    bl,cl
  4249b4:	sub    DWORD PTR [rdi],edx
  4249b6:	adc    ebx,DWORD PTR [rdi-0x1f]
  4249b9:	retf   
  4249ba:	adc    esp,eax
  4249bc:	int3   
  4249bd:	jg     0x42495a
  4249bf:	adc    eax,0xe57737e8
  4249c4:	(bad)  
  4249c5:	fidivr DWORD PTR [rsi-0x43]
  4249c8:	xor    ch,cl
  4249ca:	push   rcx
  4249cb:	jg     0x424a0c
  4249cd:	cld    
  4249ce:	(bad)  
  4249cf:	(bad)  
  4249d0:	jb     0x424a10
  4249d2:	jp     0x4249b1
  4249d4:	sbb    BYTE PTR es:[rdi+0x755576d],bh
  4249db:	push   rcx
  4249dc:	scas   eax,DWORD PTR es:[rdi]
  4249dd:	and    eax,DWORD PTR [rbp+0x42520fd4]
  4249e3:	imul   ebx,DWORD PTR [rdi-0x5f8057ac],0x7b8fed4c
  4249ed:	and    DWORD PTR [rdi+0x3f],0xffffffdb
  4249f1:	(bad)  
  4249f2:	(bad)  
  4249f3:	(bad)  
  4249f4:	out    dx,eax
  4249f5:	ret    
  4249f6:	(bad)  
  4249f7:	idiv   BYTE PTR [rbx-0x4f]
  4249fa:	xchg   esp,eax
  4249fb:	(bad)  
  4249fc:	xchg   edi,eax
  4249fd:	loopne 0x4249ec
  4249ff:	add    ebx,esi
  424a01:	movabs rbx,0x5735812f8705ee2b
  424a0b:	and    eax,0x228fd506
  424a10:	sub    al,0x38
  424a12:	in     al,0xc5
  424a14:	sbb    DWORD PTR [rdx+0x6da9d4f3],esi
  424a1a:	pop    rdx
  424a1b:	sub    DWORD PTR [rsi-0x7b],eax
  424a1e:	ret    
  424a1f:	pop    rbp
  424a20:	leave  
  424a21:	out    dx,eax
  424a22:	imul   ebx,DWORD PTR [rdx],0x3c
  424a25:	popf   
  424a26:	adc    BYTE PTR [rcx-0x78],al
  424a29:	(bad)  
  424a2a:	rex.X mov al,0xc8
  424a2d:	fcmovu st,st(3)
  424a2f:	cmp    DWORD PTR [rax],0x31
  424a32:	xchg   esp,eax
  424a33:	and    QWORD PTR [rbp+rcx*1-0x7466fc7f],rbx
  424a3b:	sub    al,0x4d
  424a3d:	cmp    dl,BYTE PTR [rbx-0x6024e1c2]
  424a43:	adc    al,0x59
  424a45:	nop
  424a46:	push   0xffffffffffffffa3
  424a48:	imul   edi,DWORD PTR [rcx+0x6c],0x2838a8ca
  424a4f:	pop    rbx
  424a50:	(bad)  
  424a51:	outs   dx,BYTE PTR ds:[rsi]
  424a52:	mov    esi,0x1ae47818
  424a57:	jb     0x424aa3
  424a59:	jo     0x4249ff
  424a5b:	add    eax,esp
  424a5d:	int    0x5f
  424a5f:	or     DWORD PTR [rbp-0x7b41c20],edi
  424a65:	cmp    dh,BYTE PTR [rcx]
  424a67:	or     eax,0x2562aee6
  424a6c:	dec    DWORD PTR [rdx+rax*2+0xe]
  424a70:	xchg   esp,eax
  424a71:	(bad)  
  424a72:	lea    esi,[rdx]
  424a74:	and    eax,0x74cc24b1
  424a79:	rex.WR
  424a7a:	rex.RB pop r12
  424a7c:	pop    rdx
  424a7d:	in     al,0xff
  424a7f:	test   al,0x65
  424a81:	rex.WXB xchg r15,rax
  424a83:	int    0xd8
  424a85:	jno    0x424a91
  424a87:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  424a88:	cmc    
  424a89:	mov    cl,BYTE PTR [rcx]
  424a8b:	icebp  
  424a8c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  424a8d:	ret    0x49b
  424a90:	cdq    
  424a91:	sub    BYTE PTR [rsi+rcx*8-0x6],cl
  424a95:	pop    rdx
  424a96:	sbb    eax,0x364cc203
  424a9b:	fld    st(0)
  424a9d:	retf   
  424a9e:	jnp    0x424ae4
  424aa0:	sahf   
  424aa1:	and    eax,0x5229aa7e
  424aa6:	adc    ebp,DWORD PTR [rsi]
  424aa8:	add    al,0x80
  424aaa:	jo     0x424a82
  424aac:	and    BYTE PTR [rax+0x34d5d1c1],cl
  424ab2:	mov    ebp,0x2990d237
  424ab7:	(bad)  
  424ab8:	xchg   DWORD PTR [rsi],edx
  424aba:	(bad)  [rsi+0x1b48b2f6]
  424ac0:	mov    bl,0xd5
  424ac2:	ss (bad) 
  424ac4:	fwait
  424ac5:	leave  
  424ac6:	xchg   esi,eax
  424ac7:	mov    ch,0x72
  424ac9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  424aca:	imul   edi,DWORD PTR [rbp-0x4d],0x39c9f31d
  424ad1:	(bad)  
  424ad2:	cwde   
  424ad3:	adc    edx,DWORD PTR [rbx+riz*2+0x31]
  424ad7:	ret    
  424ad8:	jmp    0xffffffffb54baf8b
  424add:	out    dx,al
  424ade:	(bad)  
  424adf:	rex.XB rol BYTE PTR ds:[r11+0xf0371d1],0xd2
  424ae8:	sar    edx,1
  424aea:	fld    DWORD PTR [rax]
  424aec:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  424aed:	ds jle 0x424a8e
  424af0:	or     al,0xfe
  424af2:	sub    edi,DWORD PTR [rdi+rdx*1+0x380651e4]
  424af9:	or     eax,0x5dc5cd38
  424afe:	movabs al,ds:0xa32a6e2e5e4abb14
  424b07:	test   BYTE PTR [rbp+0x6fa334d9],0x12
  424b0e:	mov    eax,0x2cea825
  424b13:	(bad)  
  424b14:	movsxd esi,DWORD PTR [rdi-0x79]
  424b17:	rex.RXB
  424b18:	rex.WRB idiv QWORD PTR [r11]
  424b1b:	xor    ah,BYTE PTR [rcx-0x6f9d89ef]
  424b21:	(bad)  
  424b22:	add    DWORD PTR [rax-0x3b],0xffffffb9
  424b26:	je     0x424b91
  424b28:	xchg   esp,eax
  424b29:	in     al,dx
  424b2a:	rex.WRX sub r11b,cl
  424b2d:	adc    BYTE PTR [rcx],ah
  424b2f:	fcomp  QWORD PTR [rsi]
  424b31:	rex.RB xchg r10d,eax
  424b33:	mov    cl,BYTE PTR [rcx]
  424b35:	push   0xffffffffffffffab
  424b37:	and    eax,0xee1c33b
  424b3c:	leave  
  424b3d:	lods   al,BYTE PTR ds:[rsi]
  424b3e:	sbb    eax,0x319887f3
  424b43:	rex cdq 
  424b45:	jbe    0x424af2
  424b47:	pop    rbx
  424b48:	cwde   
  424b49:	pop    rbp
  424b4a:	rex.WRX fbld TBYTE PTR [rdx]
  424b4d:	jg     0x424ad7
  424b4f:	adc    al,0x48
  424b51:	jb     0x424b11
  424b53:	jrcxz  0x424b4f
  424b55:	outs   dx,DWORD PTR ds:[rsi]
  424b56:	rex.WXB and BYTE PTR [r15],bpl
  424b59:	sub    esp,DWORD PTR [rbx-0x5663a9ba]
  424b5f:	cmp    edi,ebp
  424b61:	pop    rsp
  424b62:	xchg   edx,eax
  424b63:	rex.B
  424b64:	or     r14,r14
  424b67:	xor    edx,edi
  424b69:	ret    0xd00b
  424b6c:	fdiv   QWORD PTR [rdx+rdx*4-0x78]
  424b70:	sbb    BYTE PTR [rdx],bh
  424b72:	or     eax,0x28de6c44
  424b77:	(bad)  
  424b78:	adc    esi,edx
  424b7a:	shl    DWORD PTR fs:[rbp-0x8b0ed44],cl
  424b81:	fisttp DWORD PTR [rsi-0x80]
  424b84:	rex.RB pop r14
  424b86:	sbb    bl,dl
  424b88:	ret    0xc528
  424b8b:	loopne 0x424b67
  424b8d:	and    esp,esp
  424b8f:	pop    rcx
  424b90:	cwde   
  424b91:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  424b92:	movabs eax,ds:0xada0b602eaddd24c
  424b9b:	pop    rdi
  424b9c:	cmp    edx,ecx
  424b9e:	xchg   ebp,eax
  424b9f:	scas   eax,DWORD PTR es:[rdi]
  424ba0:	loopne 0x424b7a
  424ba2:	cmc    
  424ba3:	push   rsi
  424ba4:	jo     0x424bff
  424ba6:	repnz rex.RXB mov r14b,0xa9
  424baa:	or     DWORD PTR [rdi],ecx
  424bac:	fwait
  424bad:	mov    edx,0xba072cc8
  424bb2:	sar    BYTE PTR [rdx-0x5c],1
  424bb5:	or     al,0x7c
  424bb7:	loope  0x424c03
  424bb9:	ror    DWORD PTR [rcx+rbx*8],1
  424bbc:	lea    edi,[rcx+0x6e01ac00]
  424bc2:	sete   bh
  424bc5:	add    eax,0x2ba26633
  424bca:	xor    al,0x33
  424bcc:	(bad)  
  424bcd:	cli    
  424bce:	clc    
  424bcf:	rex.X xor al,0x14
  424bd2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  424bd3:	(bad)  
  424bd4:	mov    edx,0xd161609a
  424bd9:	pop    rbx
  424bda:	mov    dl,0x60
  424bdc:	sahf   
  424bdd:	(bad)  
  424bde:	mov    ch,0xe5
  424be0:	loop   0x424bcc
  424be2:	fwait
  424be3:	je     0x424be4
  424be5:	fnstenv [rbx-0x17]
  424be8:	mov    dh,0xf2
  424bea:	and    al,cl
  424bec:	rex (bad) 
  424bef:	pop    rdi
  424bf0:	in     eax,dx
  424bf1:	in     al,dx
  424bf2:	jo     0x424b84
  424bf4:	cwde   
  424bf5:	lods   al,BYTE PTR ds:[rsi]
  424bf6:	rol    BYTE PTR [rax+0x2e],cl
  424bf9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  424bfa:	push   rdx
  424bfb:	hlt    
  424bfc:	outs   dx,BYTE PTR ds:[rsi]
  424bfd:	repz iret 
  424bff:	fwait
  424c00:	icebp  
  424c01:	cmp    al,0x2a
  424c03:	push   rbp
  424c04:	pop    rcx
  424c05:	mov    ch,0x32
  424c07:	adc    eax,0x1c6052c2
  424c0c:	hlt    
  424c0d:	fnstenv [rbx+rdi*8-0x37394553]
  424c14:	fimul  DWORD PTR [rax]
  424c16:	mov    dl,BYTE PTR [rax]
  424c18:	jnp    0x424c8e
  424c1a:	fld    st(2)
  424c1c:	and    esp,DWORD PTR [rax]
  424c1e:	(bad)
  424c21:	int    0x36
  424c23:	sbb    al,0x26
  424c25:	xchg   esi,edi
  424c27:	in     al,dx
  424c28:	add    BYTE PTR [rsi-0x7b],ch
  424c2b:	jp     0x424c95
  424c2d:	xchg   ebx,eax
  424c2e:	nop
  424c2f:	lods   al,BYTE PTR ds:[rsi]
  424c30:	rex.X rcr DWORD PTR [rsi-0x4c],0x20
  424c35:	pop    rsi
  424c36:	retf   
  424c37:	add    bh,BYTE PTR [rcx+0x24]
  424c3a:	and    bl,BYTE PTR [rdx+0x62]
  424c3d:	jo     0x424be2
  424c3f:	popf   
  424c40:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  424c41:	xor    DWORD PTR [rax],ecx
  424c43:	test   BYTE PTR [rdi+0x60],0x31
  424c47:	xchg   edi,eax
  424c48:	jrcxz  0x424c6a
  424c4a:	sub    DWORD PTR [rdx-0x42],eax
  424c4d:	test   eax,0xe5362070
  424c52:	cmp    eax,0x2e3b9c50
  424c57:	out    0x36,al
  424c59:	test   al,0x38
  424c5b:	(bad)  
  424c5c:	loop   0x424c35
  424c5e:	jl     0x424cbf
  424c60:	rex.WXB mov r10b,0x4a
  424c63:	fsub   QWORD PTR [rsi]
  424c65:	pop    bp
  424c67:	jb     0x424c0f
  424c69:	fdiv   DWORD PTR [rcx]
  424c6b:	imul   ecx,DWORD PTR [rbx+0x61],0xffffff90
  424c6f:	loopne 0x424c8d
  424c71:	cwde   
  424c72:	lods   eax,DWORD PTR ds:[rsi]
  424c73:	mov    al,0x43
  424c75:	sti    
  424c76:	lods   al,BYTE PTR ds:[rsi]
  424c78:	mov    WORD PTR [rax-0x51e3647a],es
  424c7e:	(bad)  
  424c7f:	xchg   BYTE PTR [rbx+0x22d9c907],bh
  424c85:	sub    ecx,esp
  424c87:	cld    
  424c88:	not    DWORD PTR [rbx-0x52da7451]
  424c8e:	(bad)  
  424c8f:	or     eax,0xb7d1ebfa
  424c94:	mov    r14b,0x3f
  424c97:	mov    ebp,0xbd09f4f1
  424c9c:	icebp  
  424c9d:	outs   dx,BYTE PTR ds:[rsi]
  424c9e:	(bad)  
  424c9f:	rex.WRXB fst QWORD PTR [r13+0x5f2a2bb3]
  424ca6:	jp     0x424d1c
  424ca8:	lahf   
  424ca9:	(bad)  
  424caa:	(bad)  
  424cab:	(bad)  
  424cac:	(bad)  
  424cad:	jg     0x424cf5
  424caf:	(bad)  
  424cb0:	fwait
  424cb1:	lea    esi,[rdi]
  424cb3:	ins    DWORD PTR es:[rdi],dx
  424cb4:	data16 jne 0x424ca3
  424cb7:	imul   eax
  424cb9:	sar    BYTE PTR [rcx+0x39],0x4b
  424cbd:	sub    edi,DWORD PTR [rax+0x6d]
  424cc0:	jns    0x424cb5
  424cc2:	lods   eax,DWORD PTR ds:[rsi]
  424cc3:	jmp    0xffffffff91ea20b9
  424cc8:	(bad)  
  424cc9:	not    DWORD PTR [rdi+0x74]
  424ccc:	push   0xffffffffe8f7cff8
  424cd1:	or     al,0x7e
  424cd3:	xor    dl,bh
  424cd5:	fstp   TBYTE PTR [rax]
  424cd7:	popf   
  424cd8:	jl     0x424c9e
  424cda:	rex.WRX add al,0x86
  424cdd:	fist   DWORD PTR [rdx-0x78]
  424ce0:	(bad)  
  424ce1:	sahf   
  424ce2:	rcr    BYTE PTR [rbx+rsi*8-0x4eace035],cl
  424ce9:	movabs ds:0xf6cfe5b48356c502,al
  424cf2:	lahf   
  424cf3:	in     al,dx
  424cf4:	in     eax,dx
  424cf5:	cmp    al,0x1f
  424cf7:	ds sbb eax,0x954c5bee
  424cfd:	fstp   DWORD PTR [rax-0x1a]
  424d00:	repz or eax,0xcaabdb82
  424d06:	rex.WXB in eax,0x85
  424d09:	imul   eax,edi,0xd9afa6cb
  424d0f:	movsxd esp,esp
  424d11:	rcl    BYTE PTR [rsp+rdx*4],1
  424d14:	cmp    edi,DWORD PTR [rdi+0xce667e7]
  424d1a:	and    esp,ebp
  424d1c:	sub    DWORD PTR [rax],0xa13a9f25
  424d22:	pop    rsi
  424d23:	(bad)  
  424d24:	stos   BYTE PTR es:[rdi],al
  424d25:	out    dx,eax
  424d26:	(bad)  
  424d27:	cwde   
  424d28:	jrcxz  0x424d62
  424d2a:	(bad)  
  424d2b:	(bad)  
  424d2c:	jb     0x424d81
  424d2e:	cs loope 0x424d93
  424d31:	fisttp WORD PTR es:[rbp+0x494328f2]
  424d38:	ret    0xe838
  424d3b:	mov    BYTE PTR [rbp-0x64],al
  424d3e:	(bad)  
  424d3f:	fdivr  QWORD PTR [rcx+0x20]
  424d42:	push   rdi
  424d43:	pop    rbp
  424d44:	jo     0x424ccc
  424d46:	mov    bl,0x7f
  424d48:	jb     0x424d78
  424d4a:	(bad)  
  424d4b:	leave  
  424d4c:	xor    al,0xf7
  424d4e:	(bad)  
  424d4f:	cwde   
  424d50:	loope  0x424ce4
  424d52:	mov    esp,0xe35b18df
  424d57:	(bad)  
  424d58:	rex.WRX (bad) 
  424d5a:	movabs al,ds:0xbad915216454928c
  424d63:	shl    DWORD PTR [rip+0xffffffff8e68efe8],0xe5        # 0xffffffff8eab3d52
  424d6a:	(bad)  
  424d6b:	pushf  
  424d6c:	(bad)  
  424d6d:	sar    BYTE PTR [rsi+0x107b8c0f],0xe6
  424d74:	jb     0x424df0
  424d76:	cmc    
  424d77:	mov    bl,0xdc
  424d79:	mov    cl,BYTE PTR [rbx]
  424d7b:	rex.WXB xor BYTE PTR [r13-0x15],spl
  424d7f:	mov    al,0xbb
  424d81:	xlat   BYTE PTR ds:[rbx]
  424d82:	and    DWORD PTR [rbx-0x3],esp
  424d85:	mov    esp,0xe5eb98ab
  424d8a:	add    DWORD PTR [rdi],edi
  424d8c:	test   al,dl
  424d8e:	or     al,0xb4
  424d90:	jns    0x424d98
  424d92:	clc    
  424d93:	pop    rdi
  424d94:	popf   
  424d95:	xchg   edx,eax
  424d96:	pop    rsi
  424d97:	jp     0x424da4
  424d99:	(bad)  
  424d9a:	pop    rcx
  424d9b:	cmp    ebx,DWORD PTR [rbp-0x1925b856]
  424da1:	scas   eax,DWORD PTR es:[rdi]
  424da2:	fisub  WORD PTR [rbp+0x4f]
  424da5:	jle    0x424da2
  424da7:	pop    rbp
  424da8:	mov    dh,0xff
  424daa:	fcomp  DWORD PTR [rbp-0x1a]
  424dad:	sbb    DWORD PTR ss:[rbp+0xc5b35b3],ebx
  424db4:	mov    ah,0x4a
  424db6:	push   rdx
  424db7:	(bad)  
  424db8:	xor    edi,DWORD PTR [rsi+0x66dfccb]
  424dbe:	xor    esi,DWORD PTR [rip+0xfffffffffb5ad1b6]        # 0xfffffffffb9d1f7a
  424dc4:	int3   
  424dc5:	outs   dx,BYTE PTR ds:[rsi]
  424dc6:	mov    bl,0x15
  424dc8:	mov    ebx,0x7888c98c
  424dcd:	(bad)  
  424dce:	lods   eax,DWORD PTR ds:[rsi]
  424dcf:	fbld   TBYTE PTR [rdx-0x66]
  424dd2:	cmc    
  424dd3:	(bad)  
  424dd4:	lods   al,BYTE PTR ds:[rsi]
  424dd5:	fbld   TBYTE PTR [rbp+0x6d]
  424dd8:	(bad)  
  424dd9:	out    dx,al
  424dda:	cmc    
  424ddb:	sti    
  424ddc:	int3   
  424ddd:	ins    DWORD PTR es:[rdi],dx
  424dde:	xchg   DWORD PTR [rdi-0x11],eax
  424de1:	xor    dh,BYTE PTR [rcx+0x0]
  424de4:	mov    edx,esp
  424de6:	pop    rcx
  424de7:	mov    cl,0xc5
  424de9:	pop    rdx
  424dea:	jnp    0x424e58
  424dec:	rex.WRB (bad) 
  424dee:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  424def:	mov    ebp,0xf65db117
  424df4:	in     al,0x57
  424df6:	out    dx,eax
  424df7:	mov    dl,0xa7
  424df9:	mov    edi,0xf27b2efd
  424dfe:	call   QWORD PTR [rdi+0x64e3ff65]
  424e04:	(bad)  
  424e06:	(bad)  
  424e07:	xchg   ebx,eax
  424e08:	gs sti 
  424e0a:	popf   
  424e0b:	and    BYTE PTR [rdi-0x3426a8af],bl
  424e11:	cld    
  424e12:	movabs ds:0xf3867e76760ffb7a,eax
  424e1b:	in     al,0x80
  424e1d:	out    dx,al
  424e1e:	jmp    0x424dbf
  424e20:	sub    DWORD PTR [rdx],0x7d
  424e23:	pop    rcx
  424e24:	(bad)  
  424e25:	scas   eax,DWORD PTR es:[rdi]
  424e26:	nop
  424e27:	pop    rdi
  424e28:	(bad)  
  424e29:	jge    0x424e76
  424e2b:	cmc    
  424e2c:	xor    DWORD PTR [rdi+0x3b],edx
  424e2f:	fst    DWORD PTR [rdx]
  424e31:	or     DWORD PTR [rbx+0x49],ecx
  424e34:	leave  
  424e35:	jbe    0x424eaa
  424e37:	fild   WORD PTR [rax-0x26ae8bc0]
  424e3d:	enter  0xa1db,0xfb
  424e41:	xchg   DWORD PTR [rip+0xffffffffa3269a6b],ebp        # 0xffffffffa368e8b2
  424e47:	mov    bl,0xa3
  424e49:	outs   dx,DWORD PTR ds:[rsi]
  424e4a:	rex.RXB hlt 
  424e4c:	int    0xf4
  424e4e:	and    ecx,edx
  424e50:	rol    BYTE PTR [rsi-0x55],0x53
  424e54:	pop    rsi
  424e55:	fidivr WORD PTR [rax+0x2d]
  424e58:	test   eax,0x50962b0f
  424e5d:	(bad)  
  424e5e:	(bad)  
  424e5f:	pop    rcx
  424e60:	fiadd  WORD PTR [rax-0x2df4217]
  424e66:	cmp    edi,edi
  424e68:	(bad)  
  424e69:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  424e6a:	jae    0x424e5d
  424e6c:	or     esi,DWORD PTR [rbx+rcx*8+0x47]
  424e70:	ins    BYTE PTR es:[rdi],dx
  424e71:	sbb    esi,DWORD PTR [rbp+0x1b108e26]
  424e77:	jle    0x424e76
  424e79:	(bad)  
  424e7a:	xor    al,0x19
  424e7c:	movabs al,ds:0x78ff237e948bf114
  424e85:	rex.RX (bad) 
  424e87:	rex.RX loopne 0x424e19
  424e8a:	(bad)  
  424e8b:	jns    0x424e10
  424e8d:	jg     0x424f02
  424e8f:	nop
  424e90:	pop    rbx
  424e91:	or     edi,DWORD PTR [rbx+0x63a8ab67]
  424e97:	js     0x424edf
  424e99:	hlt    
  424e9a:	fs mov eax,0x5f64f26a
  424ea0:	mov    edx,0xcc7f2e0c
  424ea5:	fs (bad) 
  424ea7:	and    bl,BYTE PTR [rdi]
  424ea9:	xor    esi,eax
  424eab:	rex.WB out dx,al
  424ead:	popf   
  424eae:	sub    esi,DWORD PTR [rsp+rdi*8+0x462e4574]
  424eb5:	xchg   esi,eax
  424eb6:	clc    
  424eb7:	and    al,0x7e
  424eb9:	(bad)  
  424eba:	stos   BYTE PTR es:[rdi],al
  424ebb:	out    dx,al
  424ebc:	xchg   edi,eax
  424ebd:	mov    esi,DWORD PTR [rcx+0x61]
  424ec0:	push   rsp
  424ec1:	pop    rcx
  424ec2:	(bad)  
  424ec3:	xor    edi,DWORD PTR ds:[rdx]
  424ec6:	xchg   BYTE PTR [rax-0x68789dae],dl
  424ecc:	sahf   
  424ecd:	out    dx,eax
  424ece:	in     eax,dx
  424ecf:	jle    0x424eef
  424ed1:	mov    edx,0x66bdf7b
  424ed6:	xchg   ebp,eax
  424ed7:	jrcxz  0x424e8a
  424ed9:	rex.XB je 0x424efa
  424edc:	push   0x1c4bb1e6
  424ee1:	mov    BYTE PTR [rbp+0x34],bh
  424ee4:	xchg   edx,eax
  424ee5:	data16 rex.RB (bad) 
  424ee8:	cmp    BYTE PTR [rbp-0x48],ah
  424eeb:	xchg   esi,eax
  424eec:	push   rbx
  424eed:	push   rdi
  424eee:	gs cmp al,0x28
  424ef1:	jge    0x424ebf
  424ef3:	cdq    
  424ef4:	movabs ds:0x398c4ab05094c435,eax
  424efd:	cmp    BYTE PTR [rsi+0x5129c8a8],ch
  424f03:	sahf   
  424f04:	(bad)  
  424f05:	sbb    eax,0x9f1fd64b
  424f0a:	out    dx,al
  424f0b:	rcr    BYTE PTR [rdx-0x68d6dc96],cl
  424f11:	add    dh,ah
  424f13:	cmp    eax,0xe927c7f7
  424f18:	lock pop rdi
  424f1a:	enter  0xf371,0xac
  424f1e:	ins    DWORD PTR es:[rdi],dx
  424f1f:	retf   
  424f20:	jmp    QWORD PTR [rcx+0x6b9971cf]
  424f26:	movabs ds:0x17d8822ad38c18e1,al
  424f2f:	push   rcx
  424f30:	lods   al,BYTE PTR ds:[rsi]
  424f31:	cld    
  424f32:	or     eax,0x6fa07eca
  424f37:	and    ebp,0xae4f3818
  424f3d:	loopne 0x424fa2
  424f3f:	jg     0x424edf
  424f41:	test   ch,cl
  424f43:	jne    0x424f6f
  424f45:	rex.WRX stos QWORD PTR es:[rdi],rax
  424f47:	(bad)  
  424f48:	movabs ds:0xeb3a50ed1e43bccf,al
  424f51:	push   rbx
  424f52:	clc    
  424f53:	sub    al,0x42
  424f55:	rex.WRX ret 
  424f57:	mov    bh,0x77
  424f59:	jmp    0x424f7e
  424f5b:	and    BYTE PTR [rdi+riz*8-0x27],r14b
  424f60:	repnz int3 
  424f62:	(bad)  
  424f63:	jge    0x424f6a
  424f65:	scas   eax,DWORD PTR es:[rdi]
  424f66:	mov    ecx,0xdf980305
  424f6b:	push   rbx
  424f6c:	sbb    BYTE PTR [rsi+rsi*2],dh
  424f6f:	popf   
  424f70:	(bad)  
  424f71:	xchg   ebx,eax
  424f72:	sub    dl,BYTE PTR [rbx-0x378efb18]
  424f78:	and    esp,esp
  424f7a:	rex.WB in al,dx
  424f7c:	imul   esp,esi,0x2a
  424f7f:	mov    ecx,0xcf5734ce
  424f84:	mov    ds,WORD PTR [rbx-0x7]
  424f87:	sbb    BYTE PTR [rax-0x3e],al
  424f8a:	xor    BYTE PTR [rax+rax*1-0x73fbc29c],cl
  424f91:	lods   eax,DWORD PTR ds:[rsi]
  424f92:	xchg   DWORD PTR [rax-0x42fc98f6],ebx
  424f98:	in     al,dx
  424f99:	cmp    dl,cl
  424f9b:	in     al,dx
  424f9c:	je     0x424f4e
  424f9e:	stos   DWORD PTR es:[rdi],eax
  424f9f:	mov    WORD PTR cs:[rdx-0x4a],cs
  424fa3:	rex.RX shl BYTE PTR [rax],0x65
  424fa7:	sbb    dh,0xf7
  424faa:	jbe    0x424fa3
  424fac:	lahf   
  424fad:	xor    dl,cl
  424faf:	test   ebp,edi
  424fb1:	pop    rax
  424fb2:	(bad)  
  424fb3:	mov    cl,0x7a
  424fb5:	nop
  424fb6:	ss stos BYTE PTR es:[rdi],al
  424fb8:	rex.RXB clc 
  424fba:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  424fbb:	sahf   
  424fbc:	(bad)  
  424fbd:	(bad)  
  424fbe:	(bad)  
  424fbf:	add    al,0x85
  424fc1:	pop    rbx
  424fc2:	cmp    DWORD PTR [rcx+0x25],esi
  424fc5:	(bad)  
  424fc6:	(bad)  
  424fc9:	rex.W adc spl,BYTE PTR [rax+0x22]
  424fcd:	fcmove st,st(1)
  424fcf:	rex.WRB
  424fd0:	es xor eax,0x29697fcb
  424fd6:	loopne 0x425026
  424fd8:	lahf   
  424fd9:	sbb    BYTE PTR [rbp+rsi*2-0x2b],cl
  424fdd:	sub    al,0x86
  424fdf:	repz repnz out dx,eax
  424fe2:	data16 shl BYTE PTR ss:[rcx+0x59],cl
  424fe7:	pop    rbp
  424fe8:	(bad)  
  424fe9:	cmp    edx,edi
  424feb:	fcom   QWORD PTR [rdx-0x3ae2b0fb]
  424ff1:	add    BYTE PTR [rdx],cl
  424ff3:	imul   esi,DWORD PTR [rcx],0xfffffffa
  424ff6:	rex.WR pop rdx
  424ff8:	rex.X (bad) 
  424ffa:	int3   
  424ffb:	cdq    
  424ffc:	ror    BYTE PTR [rcx+0x72],1
  424fff:	fs jp  0x42507e
  425002:	cld    
  425003:	loope  0x425002
  425005:	mov    ebx,0xeef3fbd1
  42500a:	add    DWORD PTR [rip+0x3cb8bb3f],edi        # 0x3cfb0b4f
  425010:	jle    0x42500f
  425012:	loope  0x425010
  425014:	loop   0x425002
  425016:	repnz in al,dx
  425018:	call   0xffffffffdb1b8509
  42501d:	fistp  DWORD PTR [rsi-0x65]
  425020:	cli    
  425021:	movsxd ebx,ebp
  425023:	adc    eax,0xf69a5d1e
  425028:	lahf   
  425029:	mov    r13d,r13d
  42502c:	(bad)
  42502f:	(bad)  
  425030:	ins    BYTE PTR es:[rdi],dx
  425031:	in     eax,dx
  425032:	jnp    0x425061
  425034:	adc    ebx,esi
  425036:	retf   0xf359
  425039:	push   0xffffffffffffffb8
  42503b:	rex.XB cld 
  42503d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42503e:	leave  
  42503f:	cmc    
  425040:	xchg   edx,eax
  425041:	jbe    0x424ff6
  425043:	(bad)  
  425044:	(bad)  
  425045:	addr32 mov edx,0xd15d40c0
  42504b:	sbb    BYTE PTR [rdi+rdx*4+0x77d6b235],0xf7
  425053:	lods   al,BYTE PTR ds:[rsi]
  425054:	jnp    0x42500d
  425056:	rcr    DWORD PTR [rdx],cl
  425058:	rex
  425059:	gs jae 0x425017
  42505c:	movabs ds:0xbc6c0268982dbf5e,al
  425065:	test   BYTE PTR [rip+0xffffffff884b9550],0x4        # 0xffffffff888de5bc
  42506c:	test   eax,0xe03ac96
  425071:	test   eax,0xe8e04918
  425076:	xchg   esi,eax
  425077:	push   rdi
  425078:	rex.WR jg 0x425006
  42507b:	pushf  
  42507c:	add    eax,0x210474ad
  425081:	xor    dl,BYTE PTR [rsp+riz*2-0x20]
  425085:	push   rax
  425086:	lods   eax,DWORD PTR ds:[rsi]
  425087:	jns    0x425009
  425089:	jle    0x425076
  42508b:	or     DWORD PTR [rdi],edi
  42508d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  42508e:	int3   
  42508f:	add    al,0xee
  425091:	gs jle 0x42508d
  425094:	or     ah,BYTE PTR [rbp-0x3c]
  425097:	out    dx,al
  425098:	mov    esp,0xa473514e
  42509d:	mov    esp,0x222d0e80
  4250a2:	or     BYTE PTR [rdi+0x79c2fa35],cl
  4250a8:	(bad)  
  4250a9:	push   rax
  4250aa:	(bad)
  4250ad:	movabs ds:0x646c0f307f2323fc,al
  4250b6:	sahf   
  4250b7:	rex.R
  4250b8:	repnz test bh,dh
  4250bb:	imul   ebp,ebp,0xc3a1bcfb
  4250c1:	rcl    dh,cl
  4250c3:	fst    QWORD PTR [rsi+0x1c]
  4250c6:	pop    QWORD PTR [rdi-0x78bd4011]
  4250cc:	enter  0xeeab,0x46
  4250d0:	jrcxz  0x425147
  4250d2:	rex.RB xchg r11d,eax
  4250d4:	dec    esp
  4250d6:	adc    eax,0xe6ea5610
  4250db:	adc    BYTE PTR [rbx],al
  4250dd:	(bad)  
  4250de:	gs rex.WXB pop r10
  4250e1:	test   ch,ah
  4250e3:	(bad)  
  4250e4:	and    eax,0xaa3075a
  4250e9:	(bad)  
  4250ea:	xor    cl,bh
  4250ec:	test   BYTE PTR [rax+0x1ba73872],ah
  4250f2:	jl     0x425164
  4250f4:	rex.RXB out 0x11,eax
  4250f7:	rex.WRX add QWORD PTR [rdi-0x5766f21f],r10
  4250fe:	add    eax,0xbb877719
  425103:	leave  
  425104:	call   0x2484a8f6
  425109:	not    ebp
  42510b:	mov    cl,bh
  42510d:	(bad)  
  42510e:	pop    rax
  42510f:	adc    edx,ebp
  425111:	push   rdi
  425112:	xchg   BYTE PTR [rcx-0x4a],dh
  425115:	(bad)  
  425116:	jbe    0x42516c
  425118:	xchg   edx,eax
  425119:	mov    edx,0x13fbbd41
  42511e:	(bad)  
  42511f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  425120:	rcr    BYTE PTR [rax-0x2],1
  425123:	mov    ecx,0xee3fb61b
  425128:	jle    0x42515e
  42512a:	(bad)  
  42512b:	(bad)  
  42512c:	movabs ds:0x792de52a7aed6523,eax
  425135:	rol    bl,1
  425137:	cmc    
  425138:	mov    esp,0x79c1fb45
  42513d:	clc    
  42513e:	int    0x4e
  425140:	(bad)  
  425141:	(bad)  
  425142:	pop    rdi
  425143:	lods   eax,DWORD PTR ds:[rsi]
  425144:	push   rsp
  425145:	out    dx,al
  425146:	rex.WRX (bad) 
  425148:	mov    ecx,0x5e4d251b
  42514d:	rex.RX stc 
  42514f:	(bad)  
  425150:	lock test dh,0xb2
  425154:	sub    ebp,DWORD PTR [rax+0x5a]
  425157:	enter  0xeacb,0xe3
  42515b:	xchg   edi,eax
  42515c:	or     BYTE PTR [rbp+0x59],ch
  42515f:	fcom   DWORD PTR [rdx-0x6c]
  425162:	fld    QWORD PTR [rdi]
  425164:	ins    DWORD PTR es:[rdi],dx
  425165:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  425166:	adc    ebx,DWORD PTR [rdi+0x73]
  425169:	push   rbp
  42516a:	ret    0xeeab
  42516d:	sbb    al,0xfc
  42516f:	or     ebp,esi
  425171:	std    
  425172:	cwde   
  425173:	in     eax,dx
  425174:	xor    ebp,DWORD PTR [rdi-0x7d017b43]
  42517a:	pop    rax
  42517b:	mov    eax,0x795e8d72
  425180:	imul   eax,DWORD PTR [esi-0x77],0x239cf75e
  425188:	(bad)  
  425189:	movabs al,ds:0xb31f2d934ceda1dd
  425192:	call   0xffffffffc6568c3c
  425197:	(bad)  
  425198:	movsxd esi,DWORD PTR [rsi-0x36]
  42519b:	rex.WX (bad) 
  42519d:	xchg   edi,eax
  42519e:	push   rax
  42519f:	ss (bad) 
  4251a1:	xchg   edx,eax
  4251a2:	in     al,0x75
  4251a4:	push   rsi
  4251a5:	fsubr  QWORD PTR [rbx+0x22d0746c]
  4251ab:	jo     0x4251e0
  4251ad:	fdiv   QWORD PTR [rdx-0x358265dd]
  4251b3:	int3   
  4251b4:	ja     0x425209
  4251b6:	add    edx,DWORD PTR [rax+riz*2-0x5689e745]
  4251bd:	fucom  st(7)
  4251bf:	cwde   
  4251c0:	add    al,0x78
  4251c2:	cmps   DWORD PTR gs:[rsi],DWORD PTR es:[rdi]
  4251c4:	mov    r10b,0x83
  4251c7:	std    
  4251c8:	mov    ecx,0x800502d8
  4251cd:	(bad)  
  4251ce:	fdivrp st(0),st
  4251d0:	cmp    eax,0x34ed716d
  4251d5:	ins    BYTE PTR es:[rdi],dx
  4251d6:	add    DWORD PTR [rsi+0x44d0f91d],0xffffffca
  4251dd:	not    DWORD PTR [rdi-0x6c]
  4251e0:	and    rax,0xffffffffc2967da5
  4251e6:	xor    ecx,eax
  4251e8:	push   rbx
  4251e9:	and    DWORD PTR [rax+0x34],esi
  4251ec:	and    ebx,edi
  4251ee:	int3   
  4251ef:	xor    ebx,DWORD PTR [rdi+rbp*1]
  4251f2:	or     bh,BYTE PTR [rbp-0x3d]
  4251f5:	push   rsp
  4251f6:	(bad)  
  4251f7:	add    esi,DWORD PTR [rcx+0x41]
  4251fa:	gs sub al,0x6e
  4251fd:	outs   dx,DWORD PTR ds:[rsi]
  4251fe:	add    dh,BYTE PTR [rdx+rbp*2+0x5d]
  425202:	pop    rdx
  425203:	(bad)  
  425204:	rol    esi,0xa
  425207:	(bad)  
  425208:	cmp    DWORD PTR [rax+0x18c4e922],edi
  42520e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42520f:	(bad)  
  425210:	xor    eax,0xb8c9b3c6
  425215:	cmp    cl,BYTE PTR [rbx+0x57c7a47c]
  42521b:	mov    dh,0xa5
  42521d:	xor    ch,BYTE PTR [rdi-0x1760012]
  425223:	or     BYTE PTR [rdi-0x2f],al
  425226:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  425227:	(bad)  
  425228:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  425229:	pushf  
  42522a:	add    edi,DWORD PTR [rcx]
  42522c:	in     al,dx
  42522d:	hlt    
  42522e:	cmp    BYTE PTR [rax+rcx*1],al
  425231:	pop    rsi
  425232:	pop    rdi
  425233:	cmc    
  425234:	adc    DWORD PTR [rdi+0x4e],0x1b6faea0
  42523b:	ret    0x31e7
  42523e:	(bad)  
  42523f:	js     0x4252a0
  425241:	sub    BYTE PTR [rcx-0x6a],ch
  425244:	out    dx,al
  425245:	out    dx,eax
  425246:	test   DWORD PTR [rip+0xffffffffab4bbeac],esp        # 0xffffffffab8e10f8
  42524c:	add    dl,al
  42524e:	pop    di
  425250:	icebp  
  425251:	out    0x1a,eax
  425253:	icebp  
  425254:	rex.WR outs dx,BYTE PTR ds:[rsi]
  425256:	xchg   edi,eax
  425257:	pop    rsi
  425258:	adc    DWORD PTR [rax],ebp
  42525a:	mov    ah,0xca
  42525c:	sbb    al,0xbb
  42525e:	lods   eax,DWORD PTR es:[rsi]
  425260:	and    edx,DWORD PTR [rbx]
  425262:	stos   BYTE PTR es:[rdi],al
  425263:	or     BYTE PTR [rcx-0x51],ah
  425266:	ret    0x177f
  425269:	gs ret 
  42526b:	(bad)  
  42526c:	rol    DWORD PTR [rdx+riz*1+0x22a19d25],0x7
  425274:	xchg   DWORD PTR [rdi],esi
  425276:	leave  
  425277:	stos   BYTE PTR es:[rdi],al
  425278:	adc    DWORD PTR [rdx+0x6b],edx
  42527b:	jbe    0x4252b4
  42527d:	push   rcx
  42527e:	rex.WXB retf 
  425280:	add    eax,0xcb04e905
  425285:	(bad)
  425289:	int3   
  42528a:	enter  0x18e7,0xf4
  42528e:	add    al,0xc7
  425290:	mov    WORD PTR [rbx+0x25b7a5a9],cs
  425296:	jno    0x42525f
  425298:	cmp    ebp,DWORD PTR [rax]
  42529a:	xor    BYTE PTR [rcx+riz*1],dl
  42529d:	mov    bh,0x4b
  42529f:	cs jrcxz 0x425296
  4252a2:	test   DWORD PTR [rsi],0x5062275
  4252a8:	mov    ecx,0x20a0061
  4252ad:	rex.WRB mov r14b,0x97
  4252b0:	jbe    0x425274
  4252b2:	out    0x5b,eax
  4252b4:	fwait
  4252b5:	add    esi,DWORD PTR [rcx+riz*1]
  4252b8:	gs rex.WRX (bad) 
  4252bb:	mov    bl,0x27
  4252bd:	or     ecx,DWORD PTR [rsi]
  4252bf:	sbb    DWORD PTR [rcx-0x6ecd5a4b],ecx
  4252c5:	jp     0x42524f
  4252c7:	test   BYTE PTR [rbx+0x2a],bh
  4252ca:	mov    esi,0xa687f74a
  4252cf:	(bad)  
  4252d0:	je     0x4252ca
  4252d2:	cmp    DWORD PTR [rbp-0x69],0x5aab7799
  4252d9:	call   0xffffffff875aa682
  4252de:	js     0xffffffff8b39a2d5
  4252e4:	(bad)  
  4252e5:	pop    rdx
  4252e6:	sub    eax,edx
  4252e8:	(bad)  
  4252e9:	enter  0x351e,0x13
  4252ed:	popf   
  4252ee:	(bad)  
  4252ef:	pop    rax
  4252f0:	mov    al,0xe
  4252f2:	pop    rax
  4252f3:	push   rsp
  4252f4:	xor    DWORD PTR [rsp+rcx*8-0x20f193a9],edx
  4252fb:	mov    dl,0x7b
  4252fd:	in     al,0xb
  4252ff:	or     eax,0xf0bd4992
  425304:	(bad)  
  425305:	xchg   ebp,eax
  425306:	(bad)  
  425307:	sub    DWORD PTR [rdx],0xe60b4e21
  42530d:	rex.WR imul QWORD PTR [rax-0x1c]
  425311:	test   eax,0xcd852a4a
  425316:	loop   0x4252f6
  425318:	mov    dh,0x1d
  42531a:	retf   
  42531b:	sbb    eax,0x314c3662
  425320:	sbb    eax,0x58b02118
  425325:	jrcxz  0x425386
  425327:	cld    
  425328:	(bad)  
  425329:	xlat   BYTE PTR ds:[rbx]
  42532a:	mov    r15b,0x50
  42532d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42532e:	ds pop rbx
  425330:	add    edi,edi
  425332:	test   BYTE PTR [rcx+0x2177326c],dh
  425338:	jb     0x425313
  42533a:	call   0x33a4a242
  42533f:	sbb    DWORD PTR [rbx-0x35],eax
  425342:	jne    0x4253a7
  425344:	mov    ecx,0x8c77beb6
  425349:	rex.W popf 
  42534b:	adc    BYTE PTR [ebx],dl
  42534e:	test   al,0x13
  425350:	mov    dh,0xa
  425352:	(bad)  
  425353:	(bad)  
  425354:	jae    0x42537d
  425356:	shl    esi,cl
  425358:	sahf   
  425359:	adc    edi,DWORD PTR [rbx-0x30]
  42535c:	and    ch,ah
  42535e:	sbb    eax,0xdb34d63a
  425363:	ficom  WORD PTR [rdi-0x33eca828]
  425369:	and    ebp,eax
  42536b:	jl     0x4252f1
  42536d:	xchg   ebx,eax
  42536e:	pop    rbx
  42536f:	sahf   
  425370:	test   BYTE PTR [rbx-0xe89682f],ah
  425376:	(bad)  
  425377:	mov    ?,WORD PTR [rax]
  425379:	(bad)  
  42537a:	and    BYTE PTR [rdi],ah
  42537c:	icebp  
  42537d:	and    edx,ebp
  42537f:	pop    rax
  425380:	mov    esi,0xc57e5136
  425385:	(bad)  
  425386:	(bad)  
  425387:	cmp    BYTE PTR [rdx],ah
  425389:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42538a:	sbb    eax,0x7cfea7e8
  42538f:	xchg   edx,eax
  425390:	push   rdx
  425391:	mov    esp,0x1b3b8e34
  425396:	leave  
  425397:	jns    0x4253b4
  425399:	call   0x15e977f1
  42539e:	hlt    
  42539f:	(bad)  
  4253a0:	rex.WX sub rdi,QWORD PTR [rdi+0x1c]
  4253a4:	xchg   ebp,eax
  4253a5:	pop    rbp
  4253a6:	ds xor eax,0xea9d0b6b
  4253ac:	out    0x98,eax
  4253ae:	(bad)  
  4253af:	rex.X sbb BYTE PTR [rip+0xffffffffa7fbaed2],0xff        # 0xffffffffa83e0289
  4253b7:	fisttp DWORD PTR [rdi-0x3]
  4253ba:	cwde   
  4253bb:	nop
  4253bc:	xchg   BYTE PTR [rdi+0x6e],bl
  4253bf:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4253c0:	pop    rbx
  4253c1:	movabs eax,ds:0x141baf44e69799fd
  4253ca:	(bad)  
  4253cb:	cli    
  4253cc:	xor    eax,0x85460a83
  4253d1:	(bad)  
  4253d2:	(bad)  
  4253d3:	mov    esi,0xcfe13583
  4253d8:	lods   al,BYTE PTR ds:[rsi]
  4253d9:	icebp  
  4253da:	(bad)  
  4253db:	scas   al,BYTE PTR es:[rdi]
  4253dc:	sbb    BYTE PTR [rdx+0x14d7169],al
  4253e2:	rex.RX outs dx,DWORD PTR ds:[rsi]
  4253e4:	sbb    dh,dh
  4253e6:	rcr    DWORD PTR [rdi+0x3a],0x92
  4253ea:	xchg   DWORD PTR [rdi-0x17ca4ef],esp
  4253f0:	sti    
  4253f1:	jrcxz  0x4253f4
  4253f3:	cld    
  4253f4:	pop    rsi
  4253f5:	rcr    DWORD PTR [rdi-0x471c09a9],cl
  4253fb:	(bad)  
  4253fc:	jge    0x4253f7
  4253fe:	sbb    eax,0x6e2f91ba
  425403:	enter  0xf1a9,0x32
  425407:	xchg   esi,eax
  425408:	repnz loope 0x425458
  42540b:	test   BYTE PTR [rsi+rsi*8],bh
  42540e:	fstp   TBYTE PTR [rdi-0x41]
  425411:	(bad)  
  425412:	cmp    DWORD PTR [rsi],ebx
  425414:	xchg   ebp,eax
  425415:	xor    eax,0x7ec797df
  42541a:	repz out dx,eax
  42541c:	repz fnstcw WORD PTR [rbp-0x30]
  425420:	add    DWORD PTR [rdx],0x205af541
  425426:	(bad)  
  425427:	adc    DWORD PTR [rcx-0x5d7a5408],ebx
  42542d:	rcl    BYTE PTR [rdx+0x1f28a943],0x8b
  425434:	adc    bl,bl
  425436:	mov    ebx,DWORD PTR [rax-0x7c]
  425439:	push   rsp
  42543a:	cld    
  42543b:	rex.WRB and al,0x18
  42543e:	rex.R jae 0x425479
  425441:	cmp    DWORD PTR [rdx+0x69],edx
  425444:	loop   0x42546b
  425446:	(bad)  
  425447:	mov    ecx,0x98f37b82
  42544c:	out    dx,al
  42544d:	(bad)  
  42544e:	sub    eax,0x72a814a
  425453:	pushf  
  425454:	xchg   ebx,eax
  425455:	cs mov edx,0xa7e865ae
  42545b:	imul   esi,DWORD PTR [rdx-0x2a17b33b],0x990c2958
  425465:	sbb    eax,ebp
  425467:	push   0xffffffffffffffaa
  425469:	rex.WXB fiadd WORD PTR [r9-0x371ab78c]
  425470:	mov    esp,0xeaabd62f
  425475:	sbb    dh,BYTE PTR [rbp+0x2b]
  425478:	or     bh,BYTE PTR [rdx]
  42547a:	jp     0x425448
  42547c:	outs   dx,DWORD PTR ds:[rsi]
  42547d:	cli    
  42547e:	push   rdx
  42547f:	mov    edx,eax
  425481:	mov    ah,0x46
  425483:	sti    
  425484:	rex.WB or BYTE PTR [r10-0x7a68171e],0xc
  42548c:	jns    0x4254d2
  42548e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  42548f:	pop    rdx
  425490:	xor    al,0x80
  425492:	repz add BYTE PTR [rsi-0x2e],ah
  425496:	or     BYTE PTR [rdi+0x3bbddece],cl
  42549c:	ds (bad) 
  42549e:	(bad)  
  42549f:	shr    DWORD PTR [rbp+rbp*8+0x3e],cl
  4254a3:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4254a4:	in     al,0x7
  4254a6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4254a7:	shl    al,1
  4254a9:	jns    0x4254fb
  4254ab:	pop    rsp
  4254ac:	rex.WXB cld 
  4254ae:	test   BYTE PTR [rdi-0x63d6e571],bh
  4254b4:	sahf   
  4254b5:	movabs ds:0xb59487e6710614bf,al
  4254be:	(bad)  
  4254bf:	in     al,0x17
  4254c1:	add    eax,0x4a2fc13b
  4254c6:	shl    cl,0x0
  4254c9:	stos   BYTE PTR es:[rdi],al
  4254ca:	xchg   esp,eax
  4254cb:	(bad)  
  4254cc:	(bad)  
  4254cd:	rex.WRB sbb BYTE PTR [r8-0x653ff42e],r11b
  4254d4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4254d5:	rcr    DWORD PTR [rip+0xffffffffb7eb0d41],cl        # 0xffffffffb82d621c
  4254db:	push   rdi
  4254dc:	in     eax,dx
  4254dd:	(bad)  
  4254de:	es xchg esp,eax
  4254e0:	movabs ds:0xe71955c579418c94,al
  4254e9:	imul   esi,ebp,0x5e712291
  4254ef:	jb     0x4254f7
  4254f1:	push   rdx
  4254f2:	(bad)  
  4254f3:	rex outs dx,DWORD PTR ds:[rsi]
  4254f5:	cmp    ebx,DWORD PTR [rbp+0x53a152c6]
  4254fb:	js     0x425561
  4254fd:	cmp    eax,0x4674ba48
  425502:	sub    bl,BYTE PTR [rcx+0x1926681d]
  425508:	mov    ebp,0xf477645e
  42550d:	sbb    DWORD PTR [rsi],esp
  42550f:	jns    0x4254b1
  425511:	xchg   esp,eax
  425512:	out    0x90,al
  425514:	(bad)  
  425515:	popf   
  425516:	test   eax,0x7e81d978
  42551b:	(bad)  
  42551c:	test   eax,0x7354b4d4
  425521:	es (bad) 
  425523:	(bad)  
  425524:	jmp    0x425551
  425526:	(bad)  
  425527:	repnz loope 0x4254b6
  42552a:	mov    esp,DWORD PTR [rax-0x52]
  42552d:	mov    esi,0x4eb6d211
  425532:	in     al,dx
  425533:	test   al,0xcd
  425535:	rex.WB in eax,0xd1
  425538:	mov    bl,0x8c
  42553a:	xor    ecx,DWORD PTR [rdi+0x78bc2dce]
  425540:	in     al,dx
  425541:	jbe    0x425503
  425543:	pop    rsp
  425544:	movsxd esp,DWORD PTR [rcx]
  425546:	enter  0x1152,0xd6
  42554a:	js     0x425515
  42554c:	imul   edx,ecx,0x86574df5
  425552:	mov    ecx,0xa42b8ffc
  425557:	(bad)  
  425558:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  425559:	in     eax,0xa3
  42555b:	adc    eax,0xb03b80b7
  425560:	mov    ah,0xbb
  425562:	xor    esp,DWORD PTR [rdi+rbx*2-0x2f]
  425566:	xor    DWORD PTR [rbx-0x33feab72],0x6e
  42556d:	sbb    eax,0x7eb46069
  425572:	(bad)
  425576:	test   ah,dh
  425578:	rex.RXB cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42557a:	(bad)  
  42557b:	jrcxz  0x425504
  42557d:	jle    0x4255fa
  42557f:	movabs r13,0xbf73ec2abbb268be
  425589:	rex.RXB cpuid 
  42558c:	push   rbp
  42558d:	mov    BYTE PTR [rbx-0x21],bl
  425590:	jle    0x42558e
  425592:	add    ecx,DWORD PTR [edx+0x42ddc7b1]
  425599:	mov    ?,WORD PTR [rsi]
  42559b:	iret   
  42559c:	icebp  
  42559d:	out    0x5,eax
  42559f:	cmc    
  4255a0:	add    eax,0xa1d4c2ee
  4255a5:	(bad)  
  4255a6:	or     eax,0x724ef6b5
  4255ab:	or     ebp,edx
  4255ad:	(bad)  
  4255ae:	mov    ch,0xd4
  4255b0:	cmp    eax,0xd8beed31
  4255b5:	scas   al,BYTE PTR es:[rdi]
  4255b6:	rex.W int3 
  4255b8:	cmc    
  4255b9:	jno    0x425612
  4255bb:	(bad)  
  4255bc:	adc    DWORD PTR [rdi+0x52],0x2b
  4255c0:	cmc    
  4255c1:	mov    al,0x8b
  4255c3:	(bad)  
  4255c4:	mov    cl,0x99
  4255c6:	rex.RXB (bad) 
  4255c8:	pushf  
  4255c9:	mov    eax,0xf25e1e48
  4255ce:	rex.WRXB pop r14
  4255d0:	fisttp WORD PTR [rax+0x77]
  4255d3:	push   0x5d
  4255d5:	fdivp  st(0),st
  4255d7:	rex.WX imul rdx,QWORD PTR [rdx],0x1e
  4255db:	and    ebp,DWORD PTR [rbx+0x6b712983]
  4255e1:	adc    BYTE PTR [rcx+0x5859c3bb],bh
  4255e7:	(bad)  
  4255e8:	mov    esi,0x4f13db76
  4255ed:	std    
  4255ee:	out    0xc7,al
  4255f0:	(bad)  
  4255f1:	rcl    BYTE PTR [rsi],1
  4255f3:	stc    
  4255f4:	rex.R (bad) 
  4255f6:	in     eax,0x2f
  4255f8:	mov    eax,DWORD PTR [rdi]
  4255fa:	mov    eax,0x5821daf0
  4255ff:	or     ecx,eax
  425601:	or     BYTE PTR [rax-0x68],bh
  425604:	sbb    edx,edx
  425606:	pop    rsp
  425607:	es clc 
  425609:	mov    esp,0xf68089f1
  42560e:	rex.X xor BYTE PTR [rdx+0x1f851c11],0x25
  425616:	jns    0x42562a
  425618:	in     eax,dx
  425619:	ins    DWORD PTR es:[rdi],dx
  42561a:	cmp    eax,0x940fa01b
  42561f:	(bad)  
  425620:	adc    eax,0xae6e7e68
  425625:	cmp    cl,bh
  425627:	std    
  425628:	not    bl
  42562a:	(bad)  
  42562b:	int3   
  42562c:	push   0x5a
  42562e:	retf   
  42562f:	(bad)  
  425630:	mov    BYTE PTR [rdi+rdi*8],dh
  425633:	rcr    edi,1
  425635:	movabs ds:0x6bea8392feee361f,eax
  42563e:	jnp    0x4256a2
  425640:	(bad)  
  425641:	(bad)  
  425642:	cmp    eax,0xb244827a
  425647:	call   0x237c06a
  42564c:	(bad)  
  42564d:	std    
  42564e:	(bad)  
  42564f:	fistp  QWORD PTR [rdi+0x59f55bdd]
  425655:	(bad)  
  425656:	xor    al,dl
  425658:	adc    edi,DWORD PTR [rdi+0x5bdf87e1]
  42565e:	adc    eax,0x5eee939d
  425663:	sar    BYTE PTR [rdi+0xf],cl
  425666:	je     0x4255ee
  425668:	xlat   BYTE PTR ds:[rbx]
  425669:	(bad)  
  42566a:	rex.WB
  42566b:	lock push rdx
  42566d:	out    dx,al
  42566e:	pop    rdx
  42566f:	enter  0x5709,0xa2
  425673:	mov    cl,0x9b
  425675:	push   rsp
  425676:	cli    
  425677:	sub    BYTE PTR [rdx+rdx*4],bl
  42567a:	fs mov ecx,0xd0befe71
  425680:	cmc    
  425681:	or     DWORD PTR [rcx+0x75],0xa2202ca0
  425688:	push   rdi
  425689:	push   0xffffffffffffffc2
  42568b:	mov    ch,0xe4
  42568d:	iret   
  42568e:	es xchg edx,eax
  425690:	(bad)  
  425691:	(bad)  
  425693:	rex.B jo 0x42562d
  425696:	adc    eax,0x8b8e69d
  42569b:	outs   dx,BYTE PTR ds:[rsi]
  42569c:	and    BYTE PTR [rdx-0x6a4f4a11],al
  4256a2:	iret   
  4256a3:	out    dx,al
  4256a4:	sbb    eax,0xcc674a44
  4256a9:	cwde   
  4256aa:	mov    bl,0x72
  4256ac:	cld    
  4256ad:	or     BYTE PTR [rax+rcx*2],ch
  4256b0:	sub    DWORD PTR [rdx-0x39],ebp
  4256b3:	pop    rax
  4256b4:	(bad)  
  4256b5:	push   bx
  4256b7:	and    ah,BYTE PTR [rax-0x69e71883]
  4256bd:	(bad)
  4256c0:	or     BYTE PTR [rsi],cl
  4256c2:	(bad)  
  4256c3:	pop    rdx
  4256c4:	jns    0x425656
  4256c6:	hlt    
  4256c7:	(bad)  
  4256c8:	out    dx,eax
  4256c9:	xchg   ebx,eax
  4256ca:	sbb    esi,0xffffffef
  4256cd:	mov    BYTE PTR [rdi-0xa],ah
  4256d0:	rex.WR mov bpl,0x7f
  4256d3:	(bad)  
  4256d4:	sahf   
  4256d5:	adc    eax,0xa62d99af
  4256da:	lea    esp,[rax]
  4256dc:	data16 (bad) 
  4256de:	pop    rbx
  4256df:	cld    
  4256e0:	adc    BYTE PTR [rdx+rcx*4+0x61],cl
  4256e4:	push   rcx
  4256e5:	fld    QWORD PTR [rip+0xffffffff83cc8350]        # 0xffffffff840eda3b
  4256eb:	rex.W mov bpl,0x63
  4256ee:	out    0x35,al
  4256f0:	pop    rdi
  4256f1:	lea    ecx,[rsi]
  4256f3:	(bad)  
  4256f4:	(bad)  
  4256f5:	rex.X
  4256f6:	(bad)
  4256fa:	add    BYTE PTR [rdi+0x51],0xa4
  4256fe:	iret   
  4256ff:	and    DWORD PTR [rbx-0x5ef42e80],0x6a180151
  425709:	add    eax,0x1a1c686f
  42570e:	(bad)  
  42570f:	xlat   BYTE PTR ds:[rbx]
  425710:	xor    BYTE PTR [rsi],ch
  425712:	rcr    DWORD PTR [rcx-0x382f7b33],cl
  425718:	sub    esi,DWORD PTR [rdi]
  42571a:	fdivr  DWORD PTR [rip+0x42fa4820]        # 0x433c9f40
  425720:	out    dx,al
  425721:	lods   al,BYTE PTR ds:[rsi]
  425722:	jne    0x425726
  425724:	xchg   ebx,eax
  425725:	shl    DWORD PTR [rax],cl
  425727:	fnstcw WORD PTR [rdx-0x711d030c]
  42572d:	pop    rdi
  42572e:	xchg   BYTE PTR [rdx+rbx*1+0x3d],cl
  425732:	(bad)  
  425733:	adc    edi,ebp
  425735:	and    ebp,DWORD PTR [rax]
  425737:	rex.RB (bad) 
  425739:	fisttp DWORD PTR [rsi+0x57eca2ee]
  42573f:	movabs al,ds:0x6d56f0abf68e28ad
  425748:	ret    
  425749:	ret    0xa84b
  42574c:	rex.RX rcr DWORD PTR [rsi-0x26],1
  425750:	and    dh,BYTE PTR [rcx]
  425752:	mov    dh,0x47
  425754:	xor    DWORD PTR [rsi+0x22],esp
  425757:	sub    DWORD PTR gs:[rbx+riz*8+0x15],edi
  42575c:	mov    WORD PTR [rdx-0x24d55bc4],?
  425762:	lods   al,BYTE PTR ds:[rsi]
  425763:	loope  0x425785
  425765:	(bad)  
  425766:	push   rcx
  425767:	rex.RXB push r10
  425769:	cmp    edx,DWORD PTR [rdx+0x14a5d2e9]
  42576f:	(bad)  
  425770:	rcl    BYTE PTR [rax],cl
  425772:	test   QWORD PTR [r12+rcx*1-0x508524d9],r12
  42577a:	rex.RXB call r13
  42577d:	(bad)  
  42577e:	fwait
  42577f:	or     DWORD PTR [rax],ecx
  425781:	gs sub eax,0xec72ab2d
  425787:	xchg   r15,rax
  425789:	rex.B
  42578a:	ds imul ebp,ebx,0x22
  42578e:	xchg   edi,eax
  42578f:	pop    rsp
  425790:	mov    eax,ebx
  425792:	repz jmp 0x425788
  425795:	cli    
  425796:	rex.RXB
  425797:	rex.WXB movabs ds:0xac65a5298be882c,rax
  4257a1:	push   rax
  4257a2:	ins    DWORD PTR es:[rdi],dx
  4257a3:	js     0x425813
  4257a5:	jmp    0x81dba17
  4257aa:	or     ah,dl
  4257ac:	out    0xb9,al
  4257ae:	xchg   ebx,eax
  4257af:	(bad)  
  4257b0:	(bad)  
  4257b1:	rex.W push rbp
  4257b3:	fstp   QWORD PTR [rcx+rdx*8]
  4257b6:	jrcxz  0x42574b
  4257b8:	rex.WRXB cld 
  4257ba:	cs jb  0x4257f5
  4257bd:	rex.B ins BYTE PTR es:[rdi],dx
  4257bf:	rex.X
  4257c0:	rex.WXB in eax,0xef
  4257c3:	pop    rax
  4257c4:	rex.WRB xchg r9,rax
  4257c6:	shl    BYTE PTR [rip+0xffffffffde434e65],cl        # 0xffffffffde85a631
  4257cc:	and    eax,0xa86a69d
  4257d1:	ficom  DWORD PTR [rdx]
  4257d3:	rex.WXB push r10
  4257d5:	test   DWORD PTR [rax+0x3e935da5],ecx
  4257db:	in     eax,dx
  4257dc:	pop    rsi
  4257dd:	xchg   esi,eax
  4257de:	cmp    al,0xa2
  4257e0:	(bad)
  4257e3:	sub    ch,BYTE PTR [rdx+rdi*4-0x7d]
  4257e7:	mov    ebp,0x94564697
  4257ec:	jnp    0x4257ea
  4257ee:	sbb    eax,0x6bf7a60
  4257f3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4257f4:	idiv   DWORD PTR [rbx]
  4257f6:	ret    
  4257f7:	hlt    
  4257f8:	cmp    al,0x81
  4257fa:	rex.WB shl BYTE PTR [r15],cl
  4257fd:	xchg   esp,eax
  4257fe:	xchg   esi,eax
  4257ff:	jo     0x42582d
  425801:	push   rcx
  425802:	movabs ds:0x1bc6cb52eeccc713,al
  42580b:	rcl    DWORD PTR [rbp-0x5d],cl
  42580e:	(bad)  
  42580f:	test   eax,0x783c82df
  425814:	movabs ds:0xc00ea88f032ee544,al
  42581d:	mov    ch,ah
  42581f:	fisttp QWORD PTR [rdx+rsi*4+0x6499a674]
  425826:	fdivp  st(7),st
  425828:	leave  
  425829:	xchg   ecx,eax
  42582a:	loope  0x42582a
  42582c:	sahf   
  42582d:	cmp    DWORD PTR [rdi],esi
  42582f:	xor    al,0xbc
  425831:	mov    ebp,0xd2f26ee1
  425836:	mov    ebx,0xdc88be96
  42583b:	rex.WXB
  42583c:	sub    spl,BYTE PTR [r8]
  42583f:	mov    ds,WORD PTR [rdx+0x42]
  425842:	scas   eax,DWORD PTR es:[rdi]
  425843:	stos   BYTE PTR es:[rdi],al
  425844:	cmc    
  425845:	mov    ah,0x52
  425847:	call   0xffffffff8a4e6811
  42584c:	out    dx,eax
  42584d:	shr    BYTE PTR [rcx],0xa6
  425850:	loop   0x42589f
  425852:	mov    ecx,DWORD PTR [rdi+rbp*4+0x10]
  425856:	jo     0x42589a
  425858:	movs   BYTE PTR es:[rdi],BYTE PTR es:[rsi]
  42585a:	rex.WR movabs rax,ds:0x9965dcd6718a8c6
  425864:	lods   eax,DWORD PTR ds:[rsi]
  425865:	(bad)  
  425866:	rex.WRX movabs ds:0xe91b195c3cac0327,rax
  425870:	or     edi,DWORD PTR [rbp+0x1b]
  425873:	rex.WB adc al,0x26
  425876:	stos   DWORD PTR es:[rdi],eax
  425877:	mov    dl,0x95
  425879:	es (bad) 
  42587b:	or     eax,0x18bf1c18
  425880:	mov    ebx,0xf26a73b5
  425885:	imul   DWORD PTR [rcx+0x5e]
  425888:	cmp    al,0xe4
  42588a:	or     r9d,DWORD PTR [rcx+r13*4+0x21]
  42588f:	cs jns 0x425862
  425892:	mov    bh,0x7f
  425894:	in     eax,dx
  425895:	xor    DWORD PTR [rsi+0x29cb1b63],edx
  42589b:	ins    BYTE PTR es:[rdi],dx
  42589c:	mov    edi,DWORD PTR [rcx]
  42589e:	pop    rbp
  42589f:	jl     0x4258f0
  4258a1:	(bad)  [rax-0x29]
  4258a4:	test   al,0x91
  4258a6:	mov    edx,DWORD PTR [rax]
  4258a8:	movabs eax,ds:0xf4c3d1979fe008cd
  4258b1:	and    BYTE PTR [rsi-0x33],cl
  4258b4:	push   rbx
  4258b5:	sar    edi,0x10
  4258b8:	add    DWORD PTR [rdx-0x19],esp
  4258bb:	(bad)  
  4258bc:	in     eax,0xb1
  4258be:	lock xchg BYTE PTR [rcx],bh
  4258c1:	iret   
  4258c2:	sub    BYTE PTR [rdx+0x2e],ch
  4258c5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4258c6:	xor    eax,0xfa55f4d7
  4258cb:	(bad)  
  4258cc:	add    BYTE PTR [rsi+0x56],ch
  4258cf:	(bad)  
  4258d0:	sub    bl,BYTE PTR [rcx+0x123e8329]
  4258d6:	test   BYTE PTR [rdi-0x17],ch
  4258d9:	movabs ds:0x10089adc897cc2e9,eax
  4258e2:	(bad)  
  4258e3:	shr    DWORD PTR [rcx-0x1a],cl
  4258e6:	fldz   
  4258e8:	fidiv  WORD PTR [rsp+rsi*2]
  4258eb:	jl     0x4258a3
  4258ed:	adc    DWORD PTR [rsi+rcx*2],eax
  4258f0:	rex loop 0x425899
  4258f3:	mov    edx,0x41260b34
  4258f8:	outs   dx,DWORD PTR ds:[rsi]
  4258f9:	or     DWORD PTR [rsi+rbx*2],eax
  4258fc:	std    
  4258fd:	mov    bh,0xe2
  4258ff:	icebp  
  425900:	pop    rax
  425901:	pop    rcx
  425902:	ds pop rbp
  425904:	jo     0x425967
  425906:	imul   eax,ecx,0xb02ba6db
  42590c:	retf   
  42590d:	rex.RXB jns 0x425902
  425910:	pop    rbx
  425911:	out    0x51,eax
  425913:	jb     0x42598a
  425915:	and    ebx,DWORD PTR [rsi]
  425917:	test   eax,0x1e9111ad
  42591c:	(bad)  
  42591d:	mov    cs,esi
  42591f:	mov    bh,0x93
  425921:	repz rex.WRX sbb r13b,BYTE PTR [rsi]
  425925:	rex sahf 
  425927:	je     0x425976
  425929:	cli    
  42592a:	and    dl,BYTE PTR [rsi+0xa]
  42592d:	wrmsr  
  42592f:	(bad)  
  425930:	int    0xea
  425932:	xchg   esp,eax
  425933:	rex.WRB
  425934:	(bad)
  425938:	rex.WXB movabs al,ds:0x872c674e45cdff11
  425942:	movabs rdi,0x9fcff50ec94c8ce6
  42594c:	mov    cl,0x26
  42594e:	rex.WX ret 0x3317
  425952:	shl    DWORD PTR [rdi-0xd954edc],cl
  425958:	jmp    0x23ba6189
  42595d:	fst    st(5)
  42595f:	ret    0xbc8f
  425962:	fdiv   QWORD PTR [rbx-0x57]
  425965:	mov    ecx,0xd38df351
  42596a:	sub    ebp,edx
  42596c:	rex movabs ds:0x78ec841aac8aceb8,eax
  425976:	pop    rsp
  425977:	sub    al,0x5d
  425979:	test   ah,0x74
  42597c:	fsub   st,st(5)
  42597e:	jle    0x425973
  425980:	shr    BYTE PTR [rbp+riz*4+0x73],cl
  425984:	jle    0x42599f
  425986:	mov    edx,DWORD PTR [rip+0x4d38385c]        # 0x4d7a91e8
  42598c:	movsxd esp,DWORD PTR [rax-0x4b6dc062]
  425992:	mov    ebx,0x6e6c4a6
  425997:	mov    bh,0xd7
  425999:	loop   0x425939
  42599b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42599c:	ret    
  42599d:	cmp    al,0x58
  42599f:	xlat   BYTE PTR ds:[rbx]
  4259a0:	(bad)  
  4259a1:	sti    
  4259a2:	rex.RX
  4259a3:	es in  al,dx
  4259a5:	(bad)  
  4259a7:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4259a8:	or     ebp,esi
  4259aa:	(bad)  
  4259ab:	pop    rsp
  4259ac:	ret    
  4259ad:	pop    rcx
  4259ae:	mov    ch,0x82
  4259b0:	jmp    0x7535a3ff
  4259b5:	pop    rdx
  4259b6:	xchg   ebx,eax
  4259b7:	push   rsp
  4259b8:	shl    DWORD PTR [rcx-0xf8b6ad],1
  4259be:	mov    esi,DWORD PTR [rsi-0x26]
  4259c1:	fist   WORD PTR [rsi+0xb6ad7a1]
  4259c7:	sbb    ebp,edx
  4259c9:	or     eax,0xf5235b17
  4259ce:	cdq    
  4259cf:	sub    bh,BYTE PTR [rbx]
  4259d1:	mov    ebx,?
  4259d3:	(bad)  
  4259d4:	lods   al,BYTE PTR ds:[rsi]
  4259d5:	mov    cs,edx
  4259d7:	xlat   BYTE PTR ds:[rbx]
  4259d8:	sar    BYTE PTR [rsi],1
  4259da:	or     esp,esi
  4259dc:	(bad)  
  4259dd:	(bad)  
  4259de:	loop   0x425a58
  4259e0:	adc    eax,DWORD PTR [rbx+rdi*2]
  4259e3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4259e4:	imul   rdx,QWORD PTR [rdx-0x6905d004],0x4f58c036
  4259ef:	clc    
  4259f0:	(bad)
  4259f3:	jle    0x425a68
  4259f5:	jbe    0x425a68
  4259f7:	fadd   QWORD PTR [rsi]
  4259f9:	imul   esi,DWORD PTR [rbx+0x15],0xbbb8b86e
  425a00:	mov    ebp,0x27050d03
  425a05:	repnz shr BYTE PTR [rbx],1
  425a08:	pop    rdx
  425a09:	retf   
  425a0a:	sti    
  425a0b:	cld    
  425a0c:	sti    
  425a0d:	xlat   BYTE PTR ds:[rbx]
  425a0e:	mov    dh,0x73
  425a10:	cmp    esp,eax
  425a12:	and    DWORD PTR [rdx],edi
  425a14:	in     eax,0xea
  425a16:	fs retf 0x773c
  425a1a:	(bad)  
  425a1b:	ins    DWORD PTR es:[rdi],dx
  425a1c:	mov    edx,0x5487b7de
  425a21:	loopne 0x4259aa
  425a23:	mov    esp,DWORD PTR [rbp+0x7a8f76b]
  425a29:	fadd   QWORD PTR [rcx]
  425a2b:	pop    rbx
  425a2c:	xor    al,0x19
  425a2e:	or     al,0x80
  425a30:	jne    0x425a7f
  425a32:	rex.WB
  425a33:	mov    sil,0xd9
  425a36:	rex movabs ds:0x22d6c5fd928a6365,eax
  425a40:	stos   BYTE PTR es:[rdi],al
  425a41:	(bad)  
  425a42:	(bad)  
  425a43:	jg     0x425a5d
  425a45:	mul    BYTE PTR es:[rbx]
  425a48:	out    dx,al
  425a49:	sub    ebx,DWORD PTR [rax+rdi*8+0x1c]
  425a4d:	(bad)  
  425a4e:	(bad)
  425a51:	pop    rax
  425a52:	pop    rsp
  425a53:	xchg   edx,ebp
  425a55:	cld    
  425a56:	mov    cl,0xf3
  425a58:	mov    WORD PTR [rdi+0x32],gs
  425a5b:	and    dh,BYTE PTR [rax+0x25325545]
  425a61:	pop    rcx
  425a62:	out    dx,eax
  425a63:	xor    esi,DWORD PTR [rip+0xfffffffff8eba487]        # 0xfffffffff92dfef0
  425a69:	repz sbb cl,dh
  425a6c:	or     ebx,DWORD PTR [rbx-0x242a9131]
  425a72:	jge    0x425a23
  425a74:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  425a75:	jbe    0x425a51
  425a77:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  425a78:	ret    
  425a79:	fwait
  425a7a:	jg     0x425a56
  425a7c:	rex.WR add al,0x18
  425a7f:	or     cl,dh
  425a81:	retf   0xb071
  425a84:	adc    eax,0xd71c55c5
  425a89:	(bad)  
  425a8a:	test   BYTE PTR [rbx-0x4f],0x3c
  425a8e:	sbb    eax,0x1434eaf4
  425a93:	rex.WRB out 0x92,al
  425a96:	or     BYTE PTR [rdi],cl
  425a98:	xlat   BYTE PTR ds:[rbx]
  425a99:	mov    ebp,0xe0b2041
  425a9e:	ret    0xb0b2
  425aa1:	xor    BYTE PTR [rbp*2-0x6ba4a9d5],ah
  425aa8:	cld    
  425aa9:	or     eax,0xae894f95
  425aae:	and    al,BYTE PTR [rdi]
  425ab0:	cmp    esi,esp
  425ab2:	retf   0xcab9
  425ab5:	cdq    
  425ab6:	rex.W
  425ab7:	rex.WX ins BYTE PTR es:[rdi],dx
  425ab9:	jle    0x425b1a
  425abb:	xor    al,0x74
  425abd:	pop    rdx
  425abe:	and    DWORD PTR [rax-0x7e],ebx
  425ac1:	rex.WB stos QWORD PTR es:[rdi],rax
  425ac3:	jo     0x425acc
  425ac5:	lock jle 0x425b3a
  425ac8:	(bad)  [rdi-0x742195ba]
  425ace:	addr32 (bad) 
  425ad0:	call   0x4b0aa1bb
  425ad5:	or     al,ch
  425ad7:	test   DWORD PTR [rsi+0x6103940d],ecx
  425add:	rex.WX
  425ade:	rex
  425adf:	add    BYTE PTR [edx+0x36],bl
  425ae3:	ins    BYTE PTR es:[rdi],dx
  425ae4:	pushf  
  425ae5:	int    0xb8
  425ae7:	int3   
  425ae8:	sti    
  425ae9:	enter  0x626b,0x2d
  425aed:	mov    dh,0x7d
  425aef:	xor    eax,0x1ac86c12
  425af4:	or     DWORD PTR [rbp-0x53],0xf460c542
  425afb:	(bad)  
  425afc:	jp     0x425b32
  425afe:	sti    
  425aff:	rex.WRX (bad) 
  425b01:	xchg   ebp,eax
  425b02:	adc    al,0x50
  425b04:	fimul  WORD PTR [rsi]
  425b06:	xchg   esi,eax
  425b07:	(bad)  
  425b08:	(bad)  
  425b09:	mov    dh,ch
  425b0b:	lods   al,BYTE PTR ds:[rsi]
  425b0c:	retf   0x8feb
  425b0f:	leave  
  425b10:	(bad)  
  425b11:	jg     0x425b7f
  425b13:	fstp   TBYTE PTR [rdx-0x7d]
  425b16:	adc    DWORD PTR [rbx+0x79629c97],ebp
  425b1c:	mov    cl,0xcc
  425b1e:	pop    rdx
  425b1f:	mov    ch,0x28
  425b21:	mov    ch,0xb5
  425b23:	sub    edx,esp
  425b25:	rex.RXB and r14b,r11b
  425b28:	scas   eax,DWORD PTR es:[rdi]
  425b29:	sbb    BYTE PTR [rdx+rbx*4-0x36],bh
  425b2d:	sub    DWORD PTR [rip+0x616b6e02],0x105d9193        # 0x61adc939
  425b37:	ficomp WORD PTR [rdx-0x23afeea8]
  425b3d:	lea    ebp,[rbp+0x3e]
  425b40:	sbb    dl,BYTE PTR [rsi+rdx*4]
  425b43:	(bad)  
  425b44:	repnz mov esi,0x7b214680
  425b4a:	push   rbx
  425b4b:	out    dx,al
  425b4c:	xchg   edx,eax
  425b4d:	mov    esp,0x63310330
  425b52:	xor    eax,0x504449b7
  425b57:	std    
  425b58:	lods   eax,DWORD PTR ds:[rsi]
  425b59:	sub    eax,0x7690449f
  425b5e:	rex.W (bad) 
  425b60:	jo     0x425b14
  425b62:	xchg   ebp,eax
  425b63:	loope  0x425b42
  425b65:	mov    dh,BYTE PTR [rsi-0xfa7b21c]
  425b6b:	cmp    DWORD PTR [rcx+0x3800a5ea],0x94f4a6da
  425b75:	ins    BYTE PTR es:[rdi],dx
  425b76:	sbb    esi,DWORD PTR ss:[rax]
  425b79:	and    eax,0x91c41122
  425b7e:	push   0x6f
  425b80:	(bad)  
  425b81:	sub    DWORD PTR [rbp-0x302c3f90],ebx
  425b87:	rex.WRX or r13b,BYTE PTR [rsi+0x1f]
  425b8b:	and    al,0xc1
  425b8d:	add    BYTE PTR [rsi+0x537d348],0xb6
  425b94:	stos   DWORD PTR es:[rdi],eax
  425b95:	mov    eax,0xb873725a
  425b9a:	cld    
  425b9b:	or     cl,BYTE PTR [rsi+rcx*1+0xf]
  425b9f:	imul   edx,DWORD PTR [rip+0x35c87b75],0xaeb9b934        # 0x360ad71e
  425ba9:	(bad)  
  425baa:	pop    rsp
  425bab:	and    dl,BYTE PTR es:[rsi-0x3d]
  425baf:	ret    0x9bb7
  425bb2:	clc    
  425bb3:	push   rcx
  425bb4:	pop    rbp
  425bb5:	fnstsw WORD PTR [rdx]
  425bb7:	imul   edi,DWORD PTR [rax-0x361103cd],0xffffffeb
  425bbe:	push   rsi
  425bbf:	leave  
  425bc0:	cmp    DWORD PTR [rdx-0x454af776],ebx
  425bc6:	out    0x54,eax
  425bc8:	nop
  425bc9:	or     dh,BYTE PTR [rdx]
  425bcb:	out    0xc4,al
  425bcd:	mov    edx,0xe536c5bb
  425bd2:	int3   
  425bd3:	mov    esi,DWORD PTR [rcx+0x77e1d932]
  425bd9:	icebp  
  425bda:	out    0xa4,al
  425bdc:	adc    eax,0xdb920d6
  425be1:	ins    DWORD PTR es:[rdi],dx
  425be2:	sbb    BYTE PTR [rbx+0x45],bl
  425be5:	or     esp,DWORD PTR [rdx]
  425be7:	shl    BYTE PTR [rsi-0x60],cl
  425bea:	mov    dl,0xa7
  425bec:	cli    
  425bed:	cdq    
  425bee:	xor    BYTE PTR [rax-0x58d0cc82],ch
  425bf4:	test   ch,bh
  425bf6:	int    0x1e
  425bf8:	sahf   
  425bf9:	or     edi,DWORD PTR [rdx-0x2e]
  425bfc:	sbb    eax,0xd74e811c
  425c01:	xchg   esi,eax
  425c02:	(bad)  
  425c03:	leave  
  425c04:	or     al,0xe
  425c06:	in     eax,dx
  425c07:	mov    WORD PTR [rcx+0x26678398],cs
  425c0d:	ficomp WORD PTR [rbx+rbx*1-0x6e926956]
  425c14:	(bad)  
  425c15:	std    
  425c16:	and    DWORD PTR [rcx+rcx*2],edx
  425c19:	cmp    DWORD PTR [rcx-0x44],ebp
  425c1c:	adc    eax,edx
  425c1e:	add    esi,ecx
  425c20:	out    0x58,al
  425c22:	clc    
  425c23:	rex.RX
  425c24:	rex.RX
  425c25:	rex.RX push rax
  425c27:	pop    rdx
  425c28:	fcom   DWORD PTR [rbx+0xfc647eb]
  425c2e:	(bad)  
  425c2f:	mov    ebp,DWORD PTR [rsi+rdi*2-0x18]
  425c33:	or     BYTE PTR [rbp+0x7abc2b5a],ah
  425c39:	fs mov cl,0x15
  425c3c:	rex.RX (bad) 
  425c3f:	or     ecx,esp
  425c41:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  425c42:	retf   
  425c43:	rex je 0x425c8d
  425c46:	(bad)  
  425c47:	psrad  mm1,mm5
  425c4a:	fst    DWORD PTR [rip+0x35bb0616]        # 0x35fd6266
  425c50:	or     ebp,DWORD PTR [rdi+rbx*2]
  425c53:	or     DWORD PTR [rsi+0x61],esp
  425c56:	data16 rex.R movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  425c59:	rol    DWORD PTR [rdx-0x51f826d9],1
  425c5f:	lahf   
  425c60:	rex.R push rbp
  425c62:	jo     0x425bff
  425c64:	por    mm4,QWORD PTR [rdi]
  425c67:	fs imul esp,DWORD PTR es:[rsi-0x9],0xb35dd473
  425c70:	ret    0x4842
  425c73:	movabs ds:0xbf102524b8cdfa52,eax
  425c7c:	(bad)  
  425c7d:	bnd rex.X jmp 0x425c37
  425c81:	ja     0x425c62
  425c83:	rex.WXB ins BYTE PTR es:[rdi],dx
  425c85:	std    
  425c86:	fld    DWORD PTR [rbp-0x67]
  425c89:	(bad)  
  425c8a:	(bad)  
  425c8b:	imul   ebp,DWORD PTR [rbx],0x62ebc632
  425c91:	adc    cl,bl
  425c93:	xor    DWORD PTR [rsi-0x19],ebx
  425c96:	loop   0x425c37
  425c98:	jg     0x425cbe
  425c9a:	xor    BYTE PTR [rsi+0x443e1455],ch
  425ca0:	call   0xffffffffccc05a14
  425ca5:	(bad)  
  425ca6:	mov    ebx,0xd2a3cc7d
  425cab:	ins    DWORD PTR es:[rdi],dx
  425cac:	in     al,dx
  425cad:	rex.WX hlt 
  425caf:	cmp    al,0xbc
  425cb1:	(bad)  
  425cb3:	rex.WRXB fidiv DWORD PTR [r11]
  425cb6:	fldln2 
  425cb8:	(bad)  
  425cba:	outs   dx,BYTE PTR ds:[rsi]
  425cbb:	push   0xffffffffffffffb3
  425cbd:	jl     0x425c8c
  425cbf:	pop    rdi
  425cc0:	cmc    
  425cc1:	ret    
  425cc2:	jp     0x425cc3
  425cc4:	or     DWORD PTR [rsi+rdx*2],0x2b
  425cc8:	(bad)  
  425cc9:	adc    esp,edi
  425ccb:	(bad)  
  425ccc:	sbb    edi,DWORD PTR [rbx+0x15bb6252]
  425cd2:	push   rbx
  425cd3:	add    DWORD PTR [rsi+0xa4b40bb],edi
  425cd9:	outs   dx,BYTE PTR ds:[rsi]
  425cdb:	(bad)  
  425cdc:	movabs ds:0x8e4f5639658278e6,eax
  425ce5:	cmp    al,0xed
  425ce7:	mov    edx,0xafddf2c8
  425cec:	(bad)  
  425ced:	sbb    DWORD PTR [rsi-0x30],ecx
  425cf0:	push   0xffffffffffffff81
  425cf2:	(bad)  
  425cf3:	pop    rdi
  425cf4:	in     eax,dx
  425cf5:	sbb    al,0x88
  425cf7:	imul   eax,DWORD PTR [rsi+0x4e],0x840ad959
  425cfe:	stos   BYTE PTR es:[rdi],al
  425cff:	in     al,0x86
  425d01:	push   rsp
  425d02:	out    dx,al
  425d03:	lods   eax,DWORD PTR ds:[rsi]
  425d04:	fisttp DWORD PTR [rax+0x2b]
  425d07:	out    0xb8,eax
  425d09:	(bad)  
  425d0a:	(bad)  
  425d0b:	jo     0x425cd5
  425d0d:	int    0x3
  425d0f:	outs   dx,BYTE PTR ds:[rsi]
  425d10:	push   rsp
  425d11:	test   BYTE PTR [rsi],ah
  425d13:	icebp  
  425d14:	rex.RX adc eax,0xc6394c9c
  425d1a:	sub    esp,DWORD PTR [rsi+0x7e]
  425d1d:	push   rbp
  425d1e:	cvtps2pd xmm7,QWORD PTR [rbx-0x17b0a290]
  425d25:	rcr    DWORD PTR [rax+0x67],0xdc
  425d29:	(bad)  
  425d2a:	and    al,cl
  425d2c:	loop   0x425d0c
  425d2e:	xchg   ebx,eax
  425d2f:	xchg   esp,eax
  425d30:	icebp  
  425d31:	out    0xa4,al
  425d33:	mov    ebx,0x9e993dee
  425d38:	mov    esi,0x6664bbe7
  425d3d:	(bad)  
  425d3e:	movsxd ebx,DWORD PTR [rsi+rax*4+0x7b]
  425d42:	rex.XB psubb mm5,QWORD PTR [r15]
  425d46:	adc    dl,BYTE PTR [rax]
  425d48:	(bad)
  425d4c:	fild   QWORD PTR [rsi-0x59]
  425d4f:	(bad)  
  425d50:	(bad)  
  425d51:	mov    ebx,0xd1ec0d77
  425d56:	jrcxz  0x425d6e
  425d58:	mov    ch,0xb
  425d5a:	(bad)  
  425d5b:	(bad)  
  425d5c:	xchg   ebp,eax
  425d5d:	adc    BYTE PTR [rdx+rax*1+0x1c40021b],ah
  425d64:	and    BYTE PTR [rbx+0x17],bl
  425d67:	rex.RB (bad) 
  425d69:	in     al,0x8
  425d6b:	push   rbx
  425d6c:	movabs ds:0x42e649fc56910dec,al
  425d75:	ret    0xa2a4
  425d78:	cmp    BYTE PTR [rax+rbp*4-0x5644a5df],al
  425d7f:	(bad)  
  425d80:	(bad)  
  425d81:	xchg   esi,eax
  425d82:	rol    bh,1
  425d84:	adc    esp,DWORD PTR [rsi+0x1]
  425d87:	mov    ss,WORD PTR [rdi+rbx*1]
  425d8a:	outs   dx,DWORD PTR ds:[rsi]
  425d8b:	push   rbx
  425d8c:	push   rdx
  425d8d:	xchg   ecx,eax
  425d8e:	add    dl,dl
  425d90:	(bad)  
  425d91:	ror    ebx,1
  425d93:	scas   al,BYTE PTR es:[rdi]
  425d94:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  425d95:	jle    0x425d98
  425d97:	cmp    BYTE PTR [rdi-0x8],ch
  425d9a:	push   rbp
  425d9b:	lahf   
  425d9c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  425d9d:	loopne 0x425d79
  425d9f:	or     al,0x1e
  425da1:	jg     0x425de7
  425da3:	(bad)  
  425da4:	test   DWORD PTR [rax+rbx*2-0x4b5ea2bd],ebp
  425dab:	mov    dh,0xed
  425dad:	in     al,0x22
  425daf:	movabs ds:0x9b2294a6925b9a0c,eax
  425db8:	jo     0x425dc5
  425dba:	pop    rbx
  425dbb:	stc    
  425dbc:	xor    BYTE PTR [rbx],dl
  425dbe:	sbb    BYTE PTR [rcx],bl
  425dc0:	test   eax,0x19b44448
  425dc5:	call   0x6cadc3fe
  425dca:	mov    bl,0xc1
  425dcc:	lahf   
  425dcd:	jb     0x425e4c
  425dcf:	cmp    BYTE PTR [rbp-0x1460a11f],0x80
  425dd6:	push   rbp
  425dd7:	stos   BYTE PTR es:[rdi],al
  425dd8:	cs stos BYTE PTR es:[rdi],al
  425dda:	lea    eax,[rcx+0x3f]
  425ddd:	rex.WB sub rax,0xffffffffb97d1fc3
  425de3:	jmp    0x425d72
  425de5:	mov    eax,0xa1d6efa0
  425dea:	push   rdi
  425deb:	sbb    BYTE PTR [rsi+0x50d66765],ch
  425df1:	rex.RB mul DWORD PTR [r8-0x1]
  425df5:	in     al,dx
  425df6:	(bad)  
  425df7:	sahf   
  425df8:	mov    esi,0xd1bad178
  425dfd:	imul   ecx,DWORD PTR [rdi-0x11260ee2],0x2e
  425e04:	push   QWORD PTR [esi+0x5f]
  425e08:	xor    edi,DWORD PTR [rdi-0x743f43e8]
  425e0e:	in     eax,dx
  425e0f:	xlat   BYTE PTR ds:[rbx]
  425e10:	mov    eax,0xf7eaf67e
  425e15:	(bad)  
  425e16:	hlt    
  425e17:	fwait
  425e18:	enter  0xe0e7,0x75
  425e1c:	pop    rcx
  425e1d:	stc    
  425e1e:	(bad)  
  425e1f:	or     edi,edx
  425e21:	pop    rsp
  425e22:	in     al,0x2d
  425e24:	rex.WRX
  425e25:	rex.WR (bad) 
  425e27:	cmp    al,0x96
  425e29:	push   rdi
  425e2a:	push   rdi
  425e2b:	adc    al,0x95
  425e2d:	movabs eax,ds:0x5697711d99f17127
  425e36:	shl    DWORD PTR [rax-0x48],cl
  425e39:	mov    ebx,0xaadec1fd
  425e3e:	loope  0x425dc2
  425e40:	fist   WORD PTR [rcx]
  425e42:	ror    BYTE PTR [rdx],0x5a
  425e45:	rex.WRX xor r12b,BYTE PTR [rdi]
  425e48:	lea    esp,[rcx]
  425e4a:	rcl    DWORD PTR [rax+0x7b436ed2],0xa6
  425e51:	rex.RXB jnp 0x425e83
  425e54:	pop    rsi
  425e55:	hlt    
  425e56:	test   eax,0xbc5ecf67
  425e5b:	pop    rax
  425e5c:	cdq    
  425e5d:	cmp    al,0xe4
  425e5f:	jge    0x425e47
  425e61:	scas   al,BYTE PTR es:[rdi]
  425e62:	je     0x425eb2
  425e64:	sub    bh,BYTE PTR [rdx-0x23]
  425e67:	in     eax,dx
  425e68:	cdq    
  425e69:	(bad)  
  425e6a:	in     al,dx
  425e6b:	xchg   ebp,eax
  425e6c:	clc    
  425e6d:	ja     0x425e57
  425e6f:	(bad)  
  425e70:	leave  
  425e71:	stos   DWORD PTR es:[rdi],eax
  425e72:	in     al,0xdd
  425e74:	fxam   
  425e76:	mov    cl,0xe7
  425e78:	mov    edi,0x6ce2f9c1
  425e7d:	jg     0xffffffffca536bfc
  425e83:	add    eax,0x1f61eaf8
  425e88:	sbb    esp,DWORD PTR [rbx+0x2b]
  425e8b:	mov    WORD PTR [rdi+0x39a8de03],gs
  425e91:	and    bh,bh
  425e93:	(bad)  
  425e94:	std    
  425e95:	fcomp  QWORD PTR [rcx]
  425e97:	jnp    0x425e41
  425e99:	scas   eax,DWORD PTR es:[rdi]
  425e9a:	repz (bad) 
  425e9c:	rex.WRXB push 0xffffffffcd8b32df
  425ea2:	add    eax,0x59d36fa7
  425ea7:	outs   dx,BYTE PTR ds:[rsi]
  425ea8:	sub    DWORD PTR [rcx],0xffffff9b
  425eab:	mov    ch,0x91
  425ead:	xor    al,0xd
  425eaf:	ror    ebx,cl
  425eb1:	sar    DWORD PTR [rdi],1
  425eb3:	retf   0x66c5
  425eb6:	rex movsxd edx,DWORD PTR [rcx+0x2079c8cd]
  425ebd:	(bad)  
  425ebe:	and    DWORD PTR [rdi+0x7293c030],edi
  425ec4:	pop    rdx
  425ec5:	(bad)  
  425ec6:	shl    BYTE PTR [rdx-0x27],1
  425ec9:	mov    ebx,0xff5d0e14
  425ece:	jrcxz  0x425e61
  425ed0:	js     0x425edc
  425ed2:	pushf  
  425ed3:	pop    rsi
  425ed4:	sar    BYTE PTR [rcx+rbp*1],0x96
  425ed8:	xchg   edi,eax
  425ed9:	(bad)  
  425eda:	icebp  
  425edb:	or     eax,ebp
  425edd:	imul   edx,DWORD PTR ss:[rdi+0x1e],0xffffffd7
  425ee2:	cli    
  425ee3:	lock mov bh,BYTE PTR [rax-0x58]
  425ee7:	sbb    eax,0xb669fc4e
  425eec:	push   rax
  425eed:	movabs ds:0xf957cbd98edda2b6,al
  425ef6:	cmc    
  425ef7:	mov    dl,0x8a
  425ef9:	ret    
  425efa:	jp     0x425f5c
  425efc:	pushf  
  425efd:	or     esi,DWORD PTR [rdx-0x2cbf36ac]
  425f03:	mov    ebx,0x90b4cab4
  425f08:	rex.XB jno 0x425f7a
  425f0b:	movzx  ebx,WORD PTR [rdx]
  425f0e:	retf   0x208a
  425f11:	and    eax,0x2fc0d6a6
  425f16:	rex.RX movabs al,ds:0xd80411f90c7a35f
  425f20:	ret    0x9a48
  425f23:	ss (bad) 
  425f25:	ret    
  425f26:	stos   DWORD PTR es:[rdi],eax
  425f27:	mov    esi,0xd7d8b36d
  425f2c:	test   al,0xe
  425f2e:	xchg   esi,eax
  425f2f:	enter  0x7414,0x3
  425f33:	addr32 in eax,0x72
  425f36:	ror    ebx,cl
  425f38:	cld    
  425f39:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  425f3a:	addr32 pop rbp
  425f3c:	adc    eax,0xdff657b
  425f41:	adc    edi,esp
  425f43:	rex.W
  425f44:	repnz (bad) 
  425f46:	cmp    eax,0x22f10859
  425f4b:	(bad)  
  425f4d:	fnstenv [rbp-0x176b1c2c]
  425f53:	xor    ah,BYTE PTR [rsi]
  425f55:	mov    ebx,ecx
  425f57:	sbb    BYTE PTR [rcx+rbp*2+0x3],ah
  425f5b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  425f5c:	rex.W pop rdx
  425f5e:	imul   ebx,DWORD PTR [rsi-0x1d],0x476b4b64
  425f65:	(bad)  
  425f66:	(bad)  
  425f67:	cmc    
  425f68:	fsub   QWORD PTR [rsp+rbp*1]
  425f6b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  425f6c:	push   0x253a70a7
  425f71:	xchg   ebp,eax
  425f72:	clc    
  425f73:	or     ecx,DWORD PTR [rip+0xffffffffbcefda5f]        # 0xffffffffbd3239d8
  425f79:	pop    rdx
  425f7a:	xchg   esi,eax
  425f7b:	mov    esi,0xe8619516
  425f80:	xchg   edx,eax
  425f81:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  425f82:	out    dx,al
  425f83:	(bad)  
  425f84:	test   DWORD PTR [rdx+rdi*1],edi
  425f87:	stc    
  425f88:	jg     0x425f18
  425f8a:	jg     0x425f5b
  425f8c:	test   al,0x53
  425f8e:	xchg   ebp,eax
  425f8f:	ficomp WORD PTR [rcx-0x58]
  425f92:	mov    ecx,0x6895d194
  425f97:	nop
  425f98:	int    0x6a
  425f9a:	rex.WR
  425f9b:	addr32 (bad) 
  425f9d:	(bad)
  425fa0:	rex.WR fcomp QWORD PTR [rsi]
  425fa3:	mov    BYTE PTR [rbx],ch
  425fa5:	rex.WX frstor [rdi]
  425fa8:	mov    bl,0xb1
  425faa:	ret    0x4dbd
  425fad:	mov    al,dh
  425faf:	retf   0x1679
  425fb2:	shl    eax,0x8
  425fb5:	mov    WORD PTR [rax],?
  425fb7:	(bad)  
  425fb8:	rex.XB (bad) 
  425fba:	shr    BYTE PTR [rbx],cl
  425fbc:	(bad)  
  425fbd:	cmp    edi,esp
  425fbf:	repnz mov bh,0xa8
  425fc2:	repz adc al,0x90
  425fc5:	mov    dl,0x17
  425fc7:	add    BYTE PTR [rbx+0x50],0xb7
  425fcb:	rex.WR outs dx,DWORD PTR ds:[rsi]
  425fcd:	(bad)  
  425fce:	test   al,0xbc
  425fd0:	loope  0x425fb9
  425fd2:	gs gs mov eax,0x510a330b
  425fd9:	push   rbp
  425fda:	leave  
  425fdb:	retf   
  425fdc:	not    DWORD PTR [rdi]
  425fde:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  425fdf:	sub    esp,DWORD PTR [rax]
  425fe1:	mul    BYTE PTR [rbx]
  425fe3:	lods   al,BYTE PTR ds:[rsi]
  425fe4:	add    cl,BYTE PTR [rbp+0x57]
  425fe7:	out    dx,eax
  425fe8:	and    al,BYTE PTR [rbx]
  425fea:	sub    eax,0xa79c9544
  425fef:	xlat   BYTE PTR ds:[rbx]
  425ff0:	pop    rcx
  425ff1:	iret   
  425ff2:	xlat   BYTE PTR ds:[ebx]
  425ff4:	push   rax
  425ff5:	jne    0x426008
  425ff7:	adc    esp,DWORD PTR [rax]
  425ff9:	rex.WRX mov BYTE PTR [rax-0x2c183759],r11b
  426000:	and    eax,0xc302ee31
  426005:	ds xor dh,bh
  426008:	push   0xffffffffffffff96
  42600a:	retf   0x2dec
  42600d:	sub    edx,DWORD PTR [rcx+rcx*4]
  426010:	std    
  426011:	ds rex.WX
  426013:	rex.RX scas eax,DWORD PTR es:[rdi]
  426015:	(bad)  
  426016:	movabs eax,ds:0xcb8a1e70796012e
  42601f:	stc    
  426020:	sar    DWORD PTR [rdx+0x7f],cl
  426023:	es rex.WRXB jge 0x426076
  426027:	mov    ebx,0x462c839
  42602c:	mov    bl,0x3c
  42602e:	adc    eax,0x5df61a14
  426033:	rex.WX sbb rax,0xfffffffff52a3f1f
  426039:	xor    DWORD PTR [rbp+0x4d],eax
  42603c:	xchg   ebp,eax
  42603d:	adc    ecx,edi
  42603f:	push   rsp
  426040:	sbb    eax,0xc0c83e2b
  426045:	rex.WRX ret 0x3048
  426049:	mov    bh,0x15
  42604b:	or     BYTE PTR [rbp+0x4e],cl
  42604e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  42604f:	jg     0x426058
  426051:	(bad)  
  426052:	(bad)  
  426053:	ins    WORD PTR es:[rdi],dx
  426055:	movabs rbx,0x88ce9b06c4c802d6
  42605f:	jmp    0x68f51b3e
  426064:	mov    ebx,ss
  426066:	xchg   edx,eax
  426067:	fcom   DWORD PTR [rcx+0x61694ba9]
  42606d:	std    
  42606e:	(bad)  
  42606f:	lods   eax,DWORD PTR ds:[rsi]
  426070:	xchg   ebp,eax
  426071:	std    
  426072:	fstp   QWORD PTR [rcx-0x175fa3a0]
  426078:	mov    al,0x2f
  42607a:	hlt    
  42607b:	in     eax,dx
  42607c:	add    esi,DWORD PTR [rbx-0x6536f5c5]
  426082:	repnz xchg esi,eax
  426084:	(bad)  
  426085:	fstp   TBYTE PTR [rbx-0x1]
  426088:	(bad)  
  426089:	(bad)  
  42608a:	xor    bh,dl
  42608c:	scas   al,BYTE PTR es:[rdi]
  42608d:	(bad)  
  42608e:	and    ebx,esi
  426090:	mov    edx,0x8b5d00db
  426095:	and    eax,0x4877eb3c
  42609a:	test   DWORD PTR [rbp-0x6a],ebx
  42609d:	test   DWORD PTR [rdi+rdx*4+0x51],ebx
  4260a1:	(bad)  
  4260a3:	ror    BYTE PTR [rbx],0xd
  4260a6:	(bad)  
  4260a7:	rex.RXB mov r15d,?
  4260aa:	(bad)  
  4260ab:	mov    esp,0x523dcdce
  4260b0:	jae    0x42607c
  4260b2:	cmp    bh,BYTE PTR [rbx]
  4260b4:	(bad)  
  4260b5:	sbb    BYTE PTR [rip+0x58630eea],al        # 0x58a56fa5
  4260bb:	cs rex.X jrcxz 0x4260e8
  4260bf:	shl    BYTE PTR [rax-0x27],0x57
  4260c3:	ins    BYTE PTR es:[rdi],dx
  4260c4:	jo     0x42608d
  4260c6:	in     al,dx
  4260c7:	mov    ecx,esp
  4260c9:	or     dh,BYTE PTR [rbp+rcx*4-0x72a5580e]
  4260d0:	and    DWORD PTR [rbp+0x2e],esi
  4260d3:	or     ebp,DWORD PTR [rcx-0x4cbbd78a]
  4260d9:	xchg   edx,eax
  4260da:	(bad)  
  4260db:	rex.WX call 0xffffffffd93f296f
  4260e1:	rex.WR jb 0x426124
  4260e4:	addr32 (bad) 
  4260e6:	(bad)  
  4260e7:	data16 js 0x4260f5
  4260ea:	sar    DWORD PTR [rdx+0x60],0x70
  4260ee:	pop    rdx
  4260ef:	(bad)  
  4260f0:	sbb    BYTE PTR [rsi],al
  4260f2:	jl     0x426168
  4260f4:	std    
  4260f5:	shl    BYTE PTR [rsi-0x651c69ad],0xa3
  4260fc:	sub    al,0xcc
  4260fe:	jg     0x4260c2
  426100:	or     DWORD PTR [rip+0xffffffffb0ecd313],ecx        # 0xffffffffb12f3419
  426106:	xor    eax,DWORD PTR [riz*8+0x6f815ee7]
  42610d:	imul   ecx,DWORD PTR [rip+0xd1b9ac],0xffffffb8        # 0x1141ac0
  426114:	sub    al,0x14
  426116:	adc    DWORD PTR [r10+0x63823252],r9d
  42611d:	(bad)  
  42611e:	je     0x426180
  426120:	js     0x42610a
  426122:	adc    edi,edi
  426124:	cs fs (bad) 
  426127:	rex.RX
  426128:	repnz mov DWORD PTR [rcx-0x4521b81d],0xed968ccf
  426133:	sbb    BYTE PTR [rdi],0x30
  426136:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  426137:	ss and cl,dh
  42613a:	(bad)  
  42613b:	scas   al,BYTE PTR es:[rdi]
  42613c:	(bad)  
  42613d:	push   rbx
  42613e:	mov    bh,0x28
  426140:	pop    rdi
  426141:	(bad)  
  426142:	mov    BYTE PTR [rax+0x31],bh
  426145:	rex.W sahf 
  426147:	je     0x4260ec
  426149:	or     DWORD PTR [rax],edx
  42614b:	mov    edi,0x3ec8b2e8
  426150:	adc    edi,esp
  426152:	fucomp st(2)
  426154:	out    0x42,al
  426156:	rex.RB sti 
  426158:	sti    
  426159:	ret    
  42615a:	mov    esi,DWORD PTR [rdi+0x27]
  42615d:	out    dx,eax
  42615e:	mov    esi,0x906e203e
  426163:	lods   al,BYTE PTR ds:[rsi]
  426164:	(bad)  
  426165:	in     al,0x84
  426167:	rex.WB clc 
  426169:	jmp    0x4261dd
  42616b:	(bad)  
  42616c:	rex.WRXB pop r8
  42616e:	push   rsi
  42616f:	sub    rax,0x6ce916ac
  426175:	outs   dx,BYTE PTR es:[rsi]
  426177:	(bad)  
  426178:	fnstcw WORD PTR [rbp+0x28]
  42617b:	fild   WORD PTR [rip+0x659c4906]        # 0x65deaa87
  426181:	push   rbp
  426182:	jns    0x426141
  426184:	mov    ah,0x53
  426186:	(bad)  
  426187:	cmp    DWORD PTR [rdx],0x2016082
  42618d:	test   eax,0x6cba1637
  426192:	pop    rdx
  426193:	(bad)  
  426194:	gs loope 0x42618c
  426197:	jmp    0x9187405
  42619c:	add    dl,ch
  42619e:	mov    QWORD PTR [rcx+rdi*1-0x66f2fbbf],r9
  4261a6:	in     eax,dx
  4261a7:	pop    rdi
  4261a8:	out    0x63,eax
  4261aa:	(bad)  
  4261ab:	sbb    dl,BYTE PTR [rcx-0x590dbffe]
  4261b1:	and    eax,0x6af98cf7
  4261b6:	mov    edx,0x20645dd2
  4261bb:	xor    al,0x1
  4261bd:	lahf   
  4261be:	ret    
  4261bf:	or     ah,bh
  4261c1:	(bad)  
  4261c2:	adc    al,0xf6
  4261c4:	nop
  4261c5:	adc    DWORD PTR [rbx+0x2a4355e5],edx
  4261cb:	push   rdx
  4261cc:	jmp    0x426204
  4261ce:	ins    DWORD PTR es:[rdi],dx
  4261cf:	mov    bl,0x7d
  4261d1:	scas   eax,DWORD PTR es:[rdi]
  4261d2:	mov    esp,DWORD PTR [rsp+rbx*8]
  4261d5:	mov    al,0xa5
  4261d7:	ror    DWORD PTR [rdx-0x4c],cl
  4261da:	popf   
  4261db:	fsubr  DWORD PTR [rdx-0x4e]
  4261de:	je     0x4261c7
  4261e0:	mov    dl,0x6e
  4261e2:	or     BYTE PTR [rdx+0x6d1868f8],bl
  4261e8:	(bad)  
  4261e9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4261ea:	mov    dh,0xc
  4261ec:	pop    rsp
  4261ed:	rex.WRB
  4261ee:	repnz xor dl,BYTE PTR [rax+rbx*1]
  4261f2:	ja     0x42624d
  4261f4:	xchg   ebp,eax
  4261f5:	mov    ecx,0x4a48cce2
  4261fa:	xor    ah,dl
  4261fc:	outs   dx,BYTE PTR ds:[rsi]
  4261fd:	cwde   
  4261fe:	mov    WORD PTR [rdx-0xd],cs
  426201:	jl     0x4261ab
  426203:	fldcw  WORD PTR gs:[rdx]
  426206:	sub    ch,BYTE PTR [rbp-0x70177ad6]
  42620c:	ret    
  42620d:	push   rsi
  42620e:	and    DWORD PTR [rdi+0x1e],0x78f6b9d1
  426215:	and    esi,DWORD PTR [rbp-0x33]
  426218:	push   0xffffffffab338fff
  42621d:	push   rsp
  42621e:	rcl    BYTE PTR [rdi],1
  426220:	adc    BYTE PTR [rcx],al
  426222:	movabs ds:0x8d43da81181bd21d,al
  42622b:	or     al,0xaa
  42622d:	mov    dh,0xe6
  42622f:	mov    ch,0xf4
  426231:	rex jge 0x426258
  426234:	(bad)  
  426235:	loopne 0x426212
  426237:	sbb    eax,0x84fab470
  42623c:	(bad)  
  42623d:	(bad)  
  42623e:	sahf   
  42623f:	mov    ch,ch
  426241:	jmp    0x8e7b23f
  426246:	or     BYTE PTR [rip+0x7757e2ab],0x19        # 0x779a44f8
  42624d:	imul   ebx,DWORD PTR [rcx-0x730357bf],0x21e42fe9
  426257:	(bad)  
  426258:	mov    ebx,0x2e597fca
  42625d:	pushf  
  42625e:	mov    esi,0x48e43073
  426263:	add    DWORD PTR [rdi-0x7e],ebp
  426266:	test   al,0xd4
  426268:	(bad)  
  426269:	jo     0x4262a6
  42626b:	mov    cl,BYTE PTR [rdi-0x6237c11e]
  426271:	push   rsp
  426272:	sbb    edi,ebp
  426274:	jp     0x426270
  426276:	movabs al,ds:0xb1a5bdd1a02d3e0
  42627f:	push   0x3d
  426281:	rex.WXB ficom DWORD PTR [r10+r11*4+0x78]
  426286:	push   rbp
  426287:	jle    0x426286
  426289:	movabs al,ds:0x4f95ae6c2d932b66
  426292:	mov    al,0x5a
  426294:	or     BYTE PTR [rbx-0x4],cl
  426297:	xchg   BYTE PTR [rdx],cl
  426299:	(bad)  
  42629b:	(bad)  
  42629c:	adc    dh,BYTE PTR [rbx+0xa]
  42629f:	push   rdx
  4262a0:	sub    eax,0xd8a2ce7d
  4262a5:	rex.R clc 
  4262a7:	mov    bl,0xaa
  4262a9:	rex.WRX sbb r8b,BYTE PTR [rbp+0xb19b5f]
  4262b0:	(bad)  
  4262b2:	movabs ds:0x87c0adddda6c76d6,al
  4262bb:	mov    DWORD PTR [rsi],esi
  4262bd:	outs   dx,DWORD PTR ds:[rsi]
  4262be:	(bad)  
  4262bf:	rcl    edx,1
  4262c1:	jns    0x4262a9
  4262c3:	(bad)
  4262c6:	cmp    QWORD PTR [r15],rbp
  4262c9:	out    0xda,al
  4262cb:	(bad)  
  4262cc:	or     eax,DWORD PTR [rdi-0x12]
  4262cf:	fdiv   st(2),st
  4262d2:	jg     0x42632a
  4262d4:	fbld   TBYTE PTR [rsi+rsi*4]
  4262d7:	je     0x426262
  4262d9:	popf   
  4262da:	imul   esp,DWORD PTR [rdi-0x3d],0x52
  4262de:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4262df:	pop    rcx
  4262e0:	(bad)  
  4262e1:	loope  0x426279
  4262e3:	or     BYTE PTR [rcx],al
  4262e5:	xchg   esp,eax
  4262e6:	(bad)  
  4262e7:	fistp  WORD PTR [rdx+0x25]
  4262ea:	ins    BYTE PTR es:[rdi],dx
  4262eb:	adc    ebp,DWORD PTR [rax]
  4262ed:	xor    eax,0xa15ca3c8
  4262f2:	pop    r8
  4262f4:	mov    edx,0xc891709
  4262f9:	repnz jrcxz 0x426378
  4262fc:	jb     0x426298
  4262fe:	(bad)  
  4262ff:	(bad)  
  426300:	push   rsp
  426301:	sti    
  426302:	outs   dx,BYTE PTR ds:[rsi]
  426303:	jrcxz  0x426303
  426305:	fmul   st,st(3)
  426307:	cmp    DWORD PTR [rcx+0x30620b85],esi
  42630d:	(bad)  
  42630e:	mov    esi,0x23d3e3ba
  426313:	call   0xffffffffa294e262
  426318:	xchg   edi,eax
  426319:	sbb    eax,0x341cd083
  42631e:	adc    DWORD PTR [rbx-0x2eac59fa],edi
  426324:	(bad)  
  426325:	imul   esp,DWORD PTR [rax+0x10379a7],0xfffffff2
  42632c:	(bad)  
  42632d:	std    
  42632e:	fst    QWORD PTR [rbp+0x42]
  426331:	sahf   
  426332:	sbb    dl,BYTE PTR [rdx-0xa]
  426335:	js     0x426371
  426337:	lea    esi,[rbp+0xd70c1b5]
  42633d:	mov    edx,0x43ba455c
  426342:	push   rax
  426343:	(bad)  
  426344:	pushf  
  426345:	or     dl,BYTE PTR [rax+rdx*8]
  426348:	(bad)  
  426349:	stos   DWORD PTR es:[rdi],eax
  42634a:	out    0x3f,al
  42634c:	outs   dx,BYTE PTR ds:[rsi]
  42634d:	sbb    edi,edi
  42634f:	fidivr DWORD PTR [rdx-0x6535d4da]
  426355:	cmp    cl,bh
  426357:	jne    0x42633a
  426359:	lods   eax,DWORD PTR ds:[rsi]
  42635a:	xor    DWORD PTR [rip+0xffffffffa9990314],esi        # 0xffffffffa9db6674
  426360:	sub    al,0x51
  426362:	pop    rdi
  426363:	mov    DWORD PTR [rdi+0x19d3bb6],esp
  426369:	mov    dh,0x3d
  42636b:	(bad)  
  42636c:	push   rdi
  42636d:	sub    BYTE PTR [rcx+0x648a1e52],bl
  426373:	movsxd edx,edi
  426375:	(bad)  
  426376:	(bad)  
  426377:	jl     0x4263f4
  426379:	mov    dl,0x1f
  42637b:	push   rdx
  42637c:	call   0xffffffffa3db7ba0
  426381:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  426382:	rex
  426383:	rex.B sub eax,0x5fcb2b16
  426389:	or     al,0x37
  42638b:	lods   eax,DWORD PTR ds:[rsi]
  42638c:	(bad)  
  42638d:	rex.WX fldenv [rdi+r9*2]
  426391:	add    eax,0xa12989b3
  426396:	outs   dx,DWORD PTR ds:[rsi]
  426397:	jns    0x4263bc
  426399:	std    
  42639a:	add    DWORD PTR [rdi-0x36],0x6297b090
  4263a1:	(bad)  [rsi-0x4ac3384e]
  4263a7:	mov    cl,0x5d
  4263a9:	je     0x426407
  4263ab:	leave  
  4263ac:	(bad)  
  4263ad:	rex.R (bad) 
  4263af:	je     0x4263a9
  4263b1:	xor    al,BYTE PTR [rdx]
  4263b3:	std    
  4263b4:	int3   
  4263b5:	adc    cl,BYTE PTR [rsi+0x16370d74]
  4263bb:	(bad)  
  4263bc:	rex.WRX
  4263bd:	rex.WRXB out dx,al
  4263bf:	xor    al,0x1f
  4263c1:	(bad)  
  4263c2:	repz jb 0x42639b
  4263c5:	pop    rdx
  4263c6:	add    BYTE PTR [rdx+0x79],al
  4263c9:	rex.B
  4263ca:	rex.WXB xlat BYTE PTR ds:[rbx]
  4263cc:	push   0xfffffffffffffffe
  4263ce:	push   0xffffffffa29525b2
  4263d3:	in     al,0x6a
  4263d5:	scas   eax,DWORD PTR es:[rdi]
  4263d6:	and    esp,DWORD PTR [rbp-0x41c141d9]
  4263dc:	and    al,0xd7
  4263de:	rol    BYTE PTR [rip+0x41db6f94],0x38        # 0x421dd379
  4263e5:	pop    rax
  4263e6:	in     al,0xaa
  4263e8:	jne    0x4263af
  4263ea:	in     eax,0x85
  4263ec:	mov    ah,0x8e
  4263ee:	imul   ebp,DWORD PTR [rsi],0x7e
  4263f1:	pop    rdx
  4263f2:	int3   
  4263f3:	shl    BYTE PTR [rdx],cl
  4263f5:	(bad)  
  4263f6:	outs   dx,BYTE PTR ds:[rsi]
  4263f7:	(bad)  
  4263f8:	je     0x426422
  4263fa:	sub    ah,BYTE PTR [rbx]
  4263fc:	pop    rcx
  4263fd:	cmp    bh,BYTE PTR [rdx+0x2a]
  426400:	mov    ch,0xd8
  426402:	cmp    eax,0x1f4e627e
  426407:	(bad)  
  426408:	jg     0x426489
  42640a:	sub    esi,ebx
  42640c:	xchg   ecx,eax
  42640d:	xlat   BYTE PTR ds:[rbx]
  42640e:	(bad)  
  42640f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  426410:	(bad)  
  426411:	xchg   edi,eax
  426412:	(bad)  
  426413:	pop    rbp
  426414:	imul   esi,DWORD PTR [rcx-0x34],0x74
  426418:	cmp    eax,DWORD PTR [rax]
  42641a:	call   0xffffffffa7273d56
  42641f:	sub    BYTE PTR [rdi-0x1b],ah
  426422:	jne    0x426452
  426424:	(bad)  
  426425:	adc    DWORD PTR [rdx-0x140e4c11],0xffffffc3
  42642c:	out    dx,eax
  42642d:	call   0xffffffffc7918738
  426432:	stc    
  426433:	vpsubw xmm3,xmm4,XMMWORD PTR [rbx-0x450886d]
  42643b:	leave  
  42643c:	rcr    ecx,1
  42643e:	stc    
  42643f:	pop    rdi
  426440:	cli    
  426441:	leave  
  426442:	(bad)  [rbx-0x3fdc7111]
  426448:	pop    rdx
  426449:	loop   0x4263f6
  42644b:	mov    WORD PTR [rdx+rsi*8-0x6c],ss
  42644f:	sub    bl,BYTE PTR [rsi]
  426451:	(bad)  
  426452:	fsubr  DWORD PTR [rbx]
  426454:	fcom   DWORD PTR [rcx-0x12]
  426457:	mov    DWORD PTR [rbp+0x5015a043],ebp
  42645d:	cdq    
  42645e:	(bad)  
  42645f:	mov    ebx,0xd99d4cd7
  426464:	scas   eax,DWORD PTR es:[rdi]
  426465:	fistp  WORD PTR [rdi+rbx*1]
  426468:	mov    esi,0x856407ee
  42646d:	and    ebp,DWORD PTR [rsi]
  42646f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  426470:	rex.WRX jrcxz 0x426426
  426473:	add    DWORD PTR [rsi],0xffffffc5
  426476:	sbb    eax,0x93b8bbeb
  42647b:	cmp    BYTE PTR [rdx+rax*8+0x3b234890],dh
  426482:	push   rax
  426483:	jo     0x4264e6
  426485:	mov    edx,0x9afad8b6
  42648a:	jp     0x4264e9
  42648c:	pop    rsi
  42648d:	in     eax,dx
  42648e:	xor    al,0x52
  426490:	andps  xmm6,XMMWORD PTR [rcx+0x395a76b]
  426497:	iret   
  426498:	sub    eax,0x9e12c37b
  42649d:	rex.RB mov r10b,0xf4
  4264a0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4264a1:	retf   
  4264a2:	pushf  
  4264a3:	jge    0x426505
  4264a5:	cdq    
  4264a6:	adc    al,0xe1
  4264a8:	jmp    QWORD PTR [rax-0x61]
  4264ab:	push   rdi
  4264ac:	sub    dh,ch
  4264ae:	rex.WRX
  4264af:	or     al,0x4d
  4264b2:	mov    al,0x93
  4264b4:	adc    DWORD PTR [rbx-0x6],esi
  4264b7:	or     DWORD PTR [rbp-0x513ee3ab],edx
  4264bd:	push   0xffffffffffffff9d
  4264bf:	lock rex.WX xchg BYTE PTR es:[rcx],dil
  4264c4:	int    0x9f
  4264c6:	sti    
  4264c7:	movabs al,ds:0xa0c49b13c0ff2b12
  4264d0:	mov    ch,0x5c
  4264d2:	jg     0x4264b4
  4264d4:	retf   0xcd6c
  4264d7:	mov    WORD PTR [rcx],es
  4264d9:	cmp    eax,0x1cd654bc
  4264de:	rex.WRB (bad) 
  4264e0:	(bad)  
  4264e1:	push   0xc
  4264e3:	scas   eax,DWORD PTR es:[rdi]
  4264e4:	mov    ebx,0xa8d4f5d6
  4264e9:	rex.XB xor r11b,0xda
  4264ed:	(bad)  
  4264ee:	push   rdi
  4264ef:	rcl    BYTE PTR [rsi],cl
  4264f1:	adc    eax,0x34e65be
  4264f6:	lea    ebp,[rax-0x67]
  4264f9:	mov    edx,0x1ab97dcc
  4264fe:	gs rcr dh,1
  426501:	lods   al,BYTE PTR ds:[rsi]
  426502:	jo     0x426509
  426504:	xchg   ebp,eax
  426505:	rol    BYTE PTR [rdi+0x65a7d612],0x3f
  42650c:	mov    ah,0x31
  42650e:	mov    cl,al
  426510:	fild   WORD PTR [rip+0x41425c5f]        # 0x4184c175
  426516:	lahf   
  426517:	add    DWORD PTR [rbx+0x70],ebx
  42651a:	rex.X (bad) 
  42651c:	(bad)  
  42651d:	pop    rcx
  42651e:	mov    dh,0x69
  426520:	mov    bl,0x8a
  426522:	rex.RX and al,0x7d
  426525:	mov    BYTE PTR [rdi],dl
  426527:	xchg   edi,eax
  426528:	je     0x42652f
  42652a:	push   0xffffffff93d21f7c
  42652f:	fisttp QWORD PTR [rdi-0x32]
  426532:	mov    ebx,0x9d58774b
  426537:	or     al,0x84
  426539:	cmp    esi,DWORD PTR [rax+0x6e]
  42653c:	add    al,0x6f
  42653e:	call   0xffffffffb3bd3e1a
  426543:	rex.X cmp dl,dil
  426546:	inc    BYTE PTR [rdx+0x59]
  426549:	or     al,0x4f
  42654b:	rex.WR popf 
  42654d:	sahf   
  42654e:	cwde   
  42654f:	and    edx,DWORD PTR [rcx]
  426551:	rex.WB pop r8
  426553:	sahf   
  426554:	xchg   esi,eax
  426555:	test   al,0x44
  426557:	xchg   BYTE PTR [rax+0x38],dl
  42655a:	outs   dx,BYTE PTR ds:[rsi]
  42655b:	jae    0x426529
  42655d:	mov    esi,0x30fc2b69
  426562:	push   rbp
  426563:	out    0x8b,al
  426565:	jle    0x426580
  426567:	and    eax,0x74f81efb
  42656c:	mov    al,0x66
  42656e:	(bad)  
  42656f:	(bad)  
  426570:	xchg   edi,eax
  426571:	(bad)  
  426572:	ret    
  426573:	fs retf 
  426575:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426577:	jp     0x4265b7
  426579:	fmul   QWORD PTR [rip+0x155405c3]        # 0x15966b42
  42657f:	xor    dl,bh
  426581:	push   rbp
  426582:	xchg   esp,eax
  426583:	or     ebx,DWORD PTR [rcx+rsi*8+0x55]
  426587:	enter  0xfa07,0x6e
  42658b:	mov    BYTE PTR [rbx-0xb],dh
  42658e:	repnz out dx,eax
  426590:	ja     0x4265f5
  426592:	fcomip st,st(3)
  426594:	sub    ecx,DWORD PTR [rdi]
  426596:	mov    dh,0xbe
  426598:	rex.RXB mov r15d,0x6fca3358
  42659e:	mov    cs,WORD PTR [rdi-0x31]
  4265a1:	ret    
  4265a2:	push   rcx
  4265a3:	jle    0x42661c
  4265a5:	icebp  
  4265a6:	out    0x2f,al
  4265a8:	in     eax,dx
  4265a9:	push   rcx
  4265aa:	ds jns 0x4265c7
  4265ad:	stc    
  4265ae:	(bad)  
  4265af:	outs   dx,DWORD PTR ds:[rsi]
  4265b0:	jmp    0x732d337f
  4265b5:	jbe    0x426552
  4265b7:	jno    0x4265b7
  4265b9:	add    dl,dl
  4265bb:	(bad)  
  4265bc:	(bad)  
  4265bd:	int3   
  4265be:	xor    eax,0x5fbf8c40
  4265c3:	test   BYTE PTR [rdx+rcx*4+0x11d80670],cl
  4265ca:	retf   0x6273
  4265cd:	(bad)  
  4265ce:	cmp    DWORD PTR [rbx-0x71],ebx
  4265d1:	jae    0x426607
  4265d3:	clc    
  4265d4:	sahf   
  4265d5:	sbb    BYTE PTR [rbx+0x7959a8dc],0xe0
  4265dc:	idiv   DWORD PTR [rdi+rcx*8-0x5e]
  4265e0:	add    esi,0xffffffd1
  4265e3:	idiv   DWORD PTR [rbx+rdx*4]
  4265e6:	stos   BYTE PTR es:[rdi],al
  4265e7:	ss lock adc ecx,0x6f55ba53
  4265ef:	rex.WXB cli 
  4265f1:	jrcxz  0x42659d
  4265f3:	push   0xffffffffb90676b2
  4265f8:	xor    BYTE PTR [rcx+rsi*1+0x55],dl
  4265fc:	(bad)  
  4265fd:	push   0x77
  4265ff:	leave  
  426600:	(bad)  
  426601:	jp     0x42666c
  426603:	enter  0xa790,0xee
  426607:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  426608:	push   0xffffffffada49ad6
  42660d:	xchg   ecx,eax
  42660e:	xor    ecx,DWORD PTR [rcx+rsi*1]
  426611:	pop    rsp
  426612:	push   0x5050b8fa
  426617:	jns    0x426643
  426619:	imul   esp,DWORD PTR [rsi],0x3b
  42661c:	pop    rsp
  42661d:	fs mov ecx,0x73177793
  426623:	mov    bl,0x94
  426625:	or     r12d,DWORD PTR [r10+0x47]
  426629:	xchg   edi,eax
  42662a:	add    edi,DWORD PTR [rbx+0x39]
  42662d:	std    
  42662e:	fs or  eax,edi
  426631:	xchg   esi,eax
  426632:	(bad)  
  426633:	pop    rsi
  426634:	or     ebp,DWORD PTR [rcx-0x7722b7cd]
  42663a:	test   BYTE PTR [rbx+0x5b],bh
  42663d:	or     DWORD PTR [rip+0x57a58f13],ebx        # 0x57e7f556
  426643:	sbb    DWORD PTR [rbp+0x3],ebp
  426646:	sub    eax,ebp
  426648:	push   rdx
  426649:	movabs ds:0x4b206eb2843c4622,eax
  426652:	(bad)  
  426653:	fdivr  DWORD PTR [rsi-0x1be22bf7]
  426659:	(bad)  
  42665a:	jl     0x426628
  42665c:	movabs eax,ds:0x6a873cc07a1cea48
  426665:	xor    ah,BYTE PTR [rdx-0x1df503b6]
  42666b:	js     0x4265f6
  42666d:	hlt    
  42666e:	imul   ecx,ebx,0x24
  426671:	xlat   BYTE PTR ds:[rbx]
  426672:	fcomi  st,st(4)
  426674:	mov    ah,0xed
  426676:	shr    DWORD PTR [rax+0x34f077b3],1
  42667c:	je     0x4266d6
  42667e:	out    0x8b,eax
  426680:	(bad)  [rdi-0x10c3ef10]
  426686:	repz mov edi,0x4a79339e
  42668c:	shl    DWORD PTR [rsi+0x5f],cl
  42668f:	xor    edx,DWORD PTR [rbx+0x1c]
  426692:	fwait
  426693:	add    al,0x27
  426695:	out    0x9a,eax
  426697:	mov    edi,0x8e2c7c38
  42669c:	shr    DWORD PTR [rcx-0xf],cl
  42669f:	int3   
  4266a0:	repz xchg ecx,eax
  4266a2:	lock (bad) 
  4266a4:	fs out dx,eax
  4266a6:	xor    esp,esp
  4266a8:	and    al,0xdc
  4266aa:	push   rsi
  4266ab:	mov    dl,0xf5
  4266ad:	(bad)  
  4266ae:	repnz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4266b0:	out    dx,al
  4266b1:	or     eax,0x680fb49f
  4266b6:	push   rbx
  4266b7:	fisttp QWORD PTR [rdi]
  4266b9:	sub    BYTE PTR [rax-0x37435391],dh
  4266bf:	pop    rsi
  4266c0:	cmp    BYTE PTR [rcx],ch
  4266c2:	mov    edx,0x7a6c9ba6
  4266c7:	or     dh,BYTE PTR [rdx+0x1cd8ff0]
  4266cd:	push   rbx
  4266ce:	and    BYTE PTR [rdx+0x72],al
  4266d1:	rex.WR cqo 
  4266d3:	(bad)  
  4266d4:	(bad)  
  4266d5:	(bad)  
  4266d6:	outs   dx,DWORD PTR ds:[rsi]
  4266d7:	fimul  WORD PTR [rdi-0x107ca072]
  4266dd:	and    eax,0xfb34afc8
  4266e2:	and    esp,DWORD PTR [rdi+0x672762e5]
  4266e8:	push   rbx
  4266e9:	mov    dl,0xaa
  4266eb:	and    BYTE PTR [rip+0xffffffffe05bd769],bl        # 0xffffffffe09e3e5a
  4266f1:	repnz adc dl,al
  4266f4:	rex.WRXB (bad) 
  4266f6:	shr    BYTE PTR [rax-0x6227de0d],cl
  4266fc:	(bad)  
  4266fd:	addr32 jns 0x4266f7
  426700:	(bad)  
  426701:	and    al,0x7f
  426703:	repz test al,0xa7
  426706:	sbb    DWORD PTR [rcx],edx
  426708:	movabs eax,ds:0x5ade90207aa0e4bf
  426711:	ds jge 0x4266c7
  426714:	out    0x66,eax
  426716:	pop    rcx
  426717:	mov    dh,0x50
  426719:	jle    0x4266ee
  42671b:	je     0x42677b
  42671d:	cs or  esi,esi
  426720:	mov    dl,0x98
  426722:	adc    eax,0x1c02c752
  426727:	pop    rcx
  426728:	push   0xffffffffe8e46f97
  42672d:	enter  0x8ec9,0x26
  426731:	sti    
  426732:	xchg   ecx,eax
  426733:	nop
  426734:	lods   al,BYTE PTR ds:[rsi]
  426735:	(bad)  
  426736:	test   DWORD PTR [rbx-0x3e],ecx
  426739:	int    0x4d
  42673b:	mov    edx,DWORD PTR [rdx+0x14516f5f]
  426741:	ret    
  426742:	xlat   BYTE PTR ds:[rbx]
  426743:	fist   DWORD PTR [rsi-0x70]
  426746:	cli    
  426747:	movabs ds:0xece92fb979d19310,eax
  426750:	mov    edx,0xcdeec634
  426755:	fsubr  st(6),st
  426757:	ds push rbp
  426759:	add    BYTE PTR [rcx-0x2c],dl
  42675c:	fcmovnu st,st(5)
  42675e:	rex.WX (bad) 
  426760:	sbb    edx,DWORD PTR [rcx]
  426762:	outs   dx,BYTE PTR ds:[rsi]
  426763:	rex.WRXB add al,0xd4
  426766:	xor    cl,BYTE PTR [rsi+0x7]
  426769:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  42676a:	(bad)  
  42676c:	rol    DWORD PTR [rbx+rdi*4],cl
  42676f:	mov    eax,DWORD PTR [rdx+0xd]
  426772:	sub    al,0xb0
  426774:	rex.RX xchg edx,eax
  426776:	(bad)  
  426777:	mov    DWORD PTR [rcx+0x370c19e0],edi
  42677d:	loop   0x42675e
  42677f:	mov    bl,0xaa
  426781:	in     al,dx
  426782:	pop    rdx
  426783:	xchg   BYTE PTR [rdx-0x2309671],ch
  426789:	mov    ?,edi
  42678b:	sub    ebx,DWORD PTR [rcx+0x63f6f7f3]
  426791:	(bad)  
  426792:	(bad)  
  426793:	sahf   
  426794:	jle    0x426718
  426796:	mov    ch,0xbb
  426798:	jb     0x4267d5
  42679a:	pop    rsp
  42679b:	mov    dl,0x75
  42679d:	or     cl,ah
  42679f:	adc    DWORD PTR [rip+0xffffffff884fd528],edi        # 0xffffffff88923ccd
  4267a5:	movabs ds:0xec1d633dcc7c49ba,al
  4267ae:	jb     0x42673b
  4267b0:	rex.B sbb al,0x80
  4267b3:	rex.WX js 0x426813
  4267b6:	ins    BYTE PTR es:[rdi],dx
  4267b7:	scas   eax,DWORD PTR es:[rdi]
  4267b8:	loope  0x42682c
  4267ba:	imul   rbx,QWORD PTR [rax+0x316f9ba4],0xffffffffb73e383f
  4267c5:	rex.WRB (bad) 
  4267c7:	sahf   
  4267c8:	xchg   ebp,eax
  4267c9:	adc    al,0xf0
  4267cb:	(bad)  
  4267cc:	sbb    DWORD PTR [rsi],0x5f
  4267cf:	por    mm5,mm2
  4267d2:	xchg   ecx,eax
  4267d3:	out    0x57,al
  4267d5:	shr    DWORD PTR [rsi],1
  4267d7:	push   rsp
  4267d8:	rex.WXB test r13,rbx
  4267db:	rex.WXB movabs al,ds:0xa9e7113e4a86463a
  4267e5:	xor    ah,cl
  4267e7:	movsxd edx,DWORD PTR [rsp+rdi*8]
  4267ea:	data16 and BYTE PTR [rax-0x4c],cl
  4267ee:	popf   
  4267ef:	mov    WORD PTR [rbx],ds
  4267f1:	call   0xffffffffa4fff1ad
  4267f6:	ror    DWORD PTR [rax-0x48],cl
  4267f9:	(bad)  
  4267fa:	mov    al,bh
  4267fc:	or     eax,0x729235bc
  426801:	sbb    esi,DWORD PTR [rcx]
  426803:	jp     0x4267de
  426805:	jp     0x426827
  426807:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  426808:	add    eax,0x3c682a12
  42680d:	xor    BYTE PTR [rdi],bl
  42680f:	rol    dl,cl
  426811:	out    dx,eax
  426812:	sub    al,0x56
  426814:	shl    BYTE PTR [rdx+rdx*4],0x97
  426818:	push   rbx
  426819:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  42681a:	(bad)  
  42681b:	xor    BYTE PTR [rdi+0x73],cl
  42681e:	push   rax
  42681f:	jmp    0x4267a6
  426821:	push   rbx
  426822:	mul    DWORD PTR [rbp-0xb1b64c9]
  426828:	clc    
  426829:	xchg   esp,eax
  42682a:	iret   
  42682b:	xchg   edi,eax
  42682c:	jae    0x4267ea
  42682e:	ficom  WORD PTR [rdi]
  426830:	(bad)  
  426833:	(bad)
  426836:	jne    0x4267c0
  426838:	cwde   
  426839:	cdq    
  42683a:	shl    BYTE PTR [rdi-0x72410889],1
  426840:	(bad)  
  426841:	(bad)  
  426842:	(bad)  [rsi]
  426844:	or     al,0x21
  426846:	movabs al,ds:0x7d7ff50b15df98b7
  42684f:	xchg   DWORD PTR [rsi],esp
  426851:	(bad)  
  426852:	int    0x8d
  426854:	std    
  426855:	rex.RB and al,0x63
  426858:	and    ah,BYTE PTR [rsi]
  42685a:	ds repnz pop rdx
  42685d:	mov    al,0x93
  42685f:	pop    rdx
  426860:	jmp    0xffffffffb0582203
  426865:	jrcxz  0x42684f
  426867:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  426868:	in     eax,0x65
  42686a:	pop    rdx
  42686b:	sub    DWORD PTR [rbx-0x1fc9aa4],esp
  426871:	xor    al,0x6
  426873:	(bad)  
  426874:	cld    
  426875:	rex.W jl 0x4268a9
  426878:	leave  
  426879:	xchg   esi,eax
  42687a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42687b:	xchg   ebp,eax
  42687c:	sub    DWORD PTR [rdx-0x63fba34b],0xffffffe1
  426883:	(bad)  
  426884:	out    dx,eax
  426885:	in     eax,dx
  426886:	sub    ebx,DWORD PTR [rsi+riz*8]
  426889:	repz mov ebx,0xa3176412
  42688f:	test   esp,ebx
  426891:	outs   dx,DWORD PTR ds:[rsi]
  426892:	xor    cl,bl
  426894:	(bad)  
  426895:	movabs ds:0xb2891e45b6d51368,eax
  42689e:	(bad)  
  42689f:	sub    eax,0xccd909c2
  4268a4:	rex.RX jno 0x426907
  4268a7:	es rex.R (bad) 
  4268aa:	(bad)  
  4268ab:	(bad)  
  4268ac:	and    eax,DWORD PTR [rcx]
  4268ae:	pop    rbp
  4268af:	cmp    al,0xfd
  4268b1:	hlt    
  4268b2:	sub    DWORD PTR [rsp+rbp*1+0x65c39d9d],edi
  4268b9:	and    ecx,ebx
  4268bb:	or     BYTE PTR [rdx-0xa],bh
  4268be:	test   eax,0xe30d0463
  4268c3:	(bad)
  4268c6:	push   0x20
  4268c8:	jmp    0xffffffff961b9705
  4268cd:	iret   
  4268ce:	mov    bl,0x95
  4268d0:	rex.RX out 0x91,al
  4268d3:	test   edx,eax
  4268d5:	pop    rbp
  4268d6:	(bad)  
  4268d7:	(bad)  
  4268d8:	stos   BYTE PTR es:[rdi],al
  4268d9:	rex.XB or BYTE PTR [r10+0x5d54324b],bpl
  4268e0:	mov    al,0xc5
  4268e2:	cld    
  4268e3:	(bad)  
  4268e5:	sbb    BYTE PTR [rbp+0x2750e68e],ah
  4268eb:	sbb    rsi,QWORD PTR [rbx+rsi*8]
  4268ef:	mov    dh,0x64
  4268f1:	(bad)  
  4268f2:	outs   dx,BYTE PTR ds:[rsi]
  4268f3:	xor    BYTE PTR [rdi-0xc],cl
  4268f6:	adc    eax,0x4d3a769e
  4268fb:	out    0xaa,al
  4268fd:	retf   0x2751
  426900:	xchg   esp,eax
  426901:	iret   
  426902:	je     0x4268a1
  426904:	in     al,dx
  426905:	cdq    
  426906:	jmp    0x4167f4da
  42690b:	mov    ebx,0x4df1b278
  426910:	fstp   QWORD PTR [rbx+0x19f69b1]
  426916:	xor    al,0xa8
  426918:	mov    ecx,0x6af074b4
  42691d:	(bad)  
  42691e:	enter  0xc7c0,0x3
  426922:	je     0x42691c
  426924:	(bad)  
  426925:	(bad)  
  426926:	imul   DWORD PTR [rdi]
  426928:	fmul   DWORD PTR [rax-0x199697ca]
  42692e:	cmc    
  42692f:	rex.WX int 0x3e
  426932:	cdq    
  426933:	fldenv [rsi-0x42]
  426936:	gs ja  0x4268dc
  426939:	mov    ecx,0xd1e86cdb
  42693e:	test   BYTE PTR [rsi+0x10],al
  426941:	add    al,0x2d
  426943:	stc    
  426944:	ins    DWORD PTR es:[rdi],dx
  426945:	(bad)  
  426947:	and    edx,esp
  426949:	retf   0xce46
  42694c:	and    ah,BYTE PTR [rdi]
  42694e:	jb     0x42699a
  426950:	shr    cl,1
  426952:	jg     0x426914
  426954:	cdq    
  426955:	scas   al,BYTE PTR es:[rdi]
  426956:	sar    DWORD PTR [rdx+0x36],cl
  426959:	enter  0x62bb,0xfc
  42695d:	sbb    BYTE PTR [rax-0x4fd674dc],bh
  426963:	mov    ebx,0x3a3134d0
  426968:	sbb    al,0x9d
  42696a:	jbe    0x426937
  42696c:	enter  0xa3af,0x73
  426970:	fld    TBYTE PTR [rbx+0x6b]
  426973:	cmp    al,0xbf
  426975:	add    DWORD PTR [rbx-0x6d],esp
  426978:	jp     0x426963
  42697a:	jmp    0x3beb4a9d
  42697f:	rol    DWORD PTR [rdx-0x3f],0x1
  426983:	mov    dh,0xaa
  426985:	rex
  426986:	rex.XB jge 0x426909
  426989:	(bad)  
  42698a:	cmp    esp,DWORD PTR [rsi-0x55]
  42698d:	movabs al,ds:0xd1d737f402084c2b
  426996:	(bad)  
  426997:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  426998:	data16 test BYTE PTR [rsp+riz*2],dh
  42699c:	mov    edx,0x87825023
  4269a1:	loop   0x426a14
  4269a3:	rex.WR add r12b,BYTE PTR [rbp-0x656ee0dd]
  4269aa:	rex.WRX in eax,0x60
  4269ad:	(bad)  
  4269ae:	nop
  4269af:	adc    eax,0xa2d9bcab
  4269b4:	rex.WX (bad) 
  4269b6:	js     0x426952
  4269b8:	(bad)  
  4269b9:	add    eax,0x2c2f9f4d
  4269be:	sub    ebp,DWORD PTR [rax-0x62e8f258]
  4269c4:	(bad)  
  4269c5:	xchg   edx,eax
  4269c6:	rcl    DWORD PTR [rax+0x36039092],0x57
  4269cd:	pop    rsp
  4269ce:	int3   
  4269cf:	rex.XB jnp 0x4269b2
  4269d2:	mov    ch,0xd9
  4269d4:	adc    eax,0x604cf990
  4269d9:	rex.WB jg 0x426a37
  4269dc:	out    0xe6,al
  4269de:	jbe    0x426982
  4269e0:	add    al,0x8e
  4269e2:	(bad)  
  4269e3:	repnz (bad) 
  4269e5:	loope  0x426a0c
  4269e7:	push   rdx
  4269e8:	adc    DWORD PTR [rbx-0x795f1c35],eax
  4269ee:	(bad)  
  4269ef:	adc    DWORD PTR [rbp+0x45],0x41
  4269f3:	xor    al,0x1d
  4269f5:	or     BYTE PTR [rcx+rbp*8-0x5a],bh
  4269f9:	rex.XB je 0x426a0e
  4269fc:	movabs eax,ds:0x9b9edd4475539aba
  426a05:	xchg   ebx,eax
  426a06:	(bad)  
  426a07:	ror    DWORD PTR [rbx+rbp*4+0x15403711],cl
  426a0e:	rex.W
  426a0f:	lock push rcx
  426a11:	push   rcx
  426a12:	rol    DWORD PTR [rax],0xbe
  426a15:	(bad)  
  426a16:	(bad)  
  426a17:	rex.XB xor esi,DWORD PTR [r8-0x78be1d21]
  426a1e:	pop    rcx
  426a1f:	and    al,0x36
  426a21:	rex
  426a22:	rex.XB xor al,0xfa
  426a25:	cmp    r11b,r11b
  426a28:	loope  0x426a74
  426a2a:	(bad)  
  426a2b:	rex.RX int3 
  426a2d:	int3   
  426a2e:	test   al,0x9f
  426a30:	(bad)  
  426a31:	xchg   edx,eax
  426a32:	(bad)  
  426a33:	jl     0x426a1d
  426a35:	(bad)  
  426a36:	int    0x3a
  426a38:	or     dh,BYTE PTR [rbx+rbx*2-0x474cdc66]
  426a3f:	jrcxz  0x4269f3
  426a41:	push   rsi
  426a42:	cli    
  426a43:	xor    edx,ebx
  426a45:	mov    al,0x19
  426a47:	push   0x6b
  426a49:	jae    0x2e8450a3
  426a4f:	(bad)  
  426a50:	ss rex.RXB (bad) 
  426a53:	xchg   edi,eax
  426a54:	mov    esp,0x8084907a
  426a59:	fisttp WORD PTR [rax]
  426a5b:	jmp    0x4269e1
  426a5d:	std    
  426a5e:	(bad)  
  426a5f:	sbb    al,BYTE PTR [rdx]
  426a61:	iret   
  426a62:	cmc    
  426a63:	push   0x59
  426a65:	push   rsi
  426a66:	enter  0xb374,0xb8
  426a6a:	and    eax,0x32b42281
  426a6f:	repnz push rcx
  426a71:	jnp    0x4269fc
  426a73:	rex.X
  426a74:	rex.XB xchg r9d,eax
  426a76:	mov    edx,0x97016610
  426a7b:	xchg   edx,eax
  426a7c:	out    0x3c,eax
  426a7e:	cdq    
  426a7f:	sbb    DWORD PTR [rcx],eax
  426a81:	sbb    esi,DWORD PTR [rcx+0x826b4ef]
  426a87:	xchg   ecx,eax
  426a88:	int    0xf4
  426a8a:	mov    ebx,0xd25eac22
  426a8f:	jne    0x426ad0
  426a91:	pop    rbx
  426a92:	shl    BYTE PTR [rdi-0x1a77fb47],cl
  426a98:	pop    rcx
  426a99:	shl    esp,1
  426a9b:	int3   
  426a9c:	push   0x66cb3339
  426aa1:	rex out 0xc2,eax
  426aa4:	movsxd ebp,DWORD PTR [rbx]
  426aa6:	pop    rdx
  426aa7:	push   0x5
  426aa9:	and    DWORD PTR [rbp+0x1be71fb],esp
  426aaf:	rex.WRX (bad) 
  426ab1:	sbb    al,0xfe
  426ab3:	or     esp,DWORD PTR [rbp-0x16c94c16]
  426ab9:	mov    ecx,0xaafd0ed0
  426abe:	sub    eax,0x8f6e3e92
  426ac3:	lods   al,BYTE PTR ds:[rsi]
  426ac4:	rex mov ecx,0x123dd2fe
  426aca:	loope  0x426aae
  426acc:	jns    0x426b3e
  426ace:	xchg   edi,eax
  426acf:	mov    al,0xfe
  426ad1:	(bad)  
  426ad2:	(bad)  
  426ad3:	imul   ecx,DWORD PTR [rdi+0x76e3c9a4],0x26ddda49
  426add:	xchg   ecx,eax
  426ade:	(bad)  
  426adf:	jl     0x426ae0
  426ae1:	rcr    bl,cl
  426ae3:	clc    
  426ae4:	repz (bad) 
  426ae6:	in     eax,dx
  426ae7:	or     BYTE PTR [rsi],bl
  426ae9:	stos   BYTE PTR es:[rdi],al
  426aea:	shl    DWORD PTR [rbp-0x2374166f],0x5c
  426af1:	push   rdi
  426af2:	pop    rbp
  426af3:	(bad)  
  426af4:	add    ebx,0xf8ac85ba
  426afa:	jp     0x426b30
  426afc:	sbb    bl,BYTE PTR [rsi+rbx*4]
  426aff:	lahf   
  426b00:	clc    
  426b01:	lods   al,BYTE PTR ds:[rsi]
  426b02:	test   BYTE PTR [rdx-0x5a],al
  426b05:	(bad)
  426b08:	pushf  
  426b09:	stos   BYTE PTR es:[rdi],al
  426b0a:	rex.RXB stos DWORD PTR es:[rdi],eax
  426b0c:	int3   
  426b0d:	rex.WRXB add al,0x38
  426b10:	adc    al,0x64
  426b12:	(bad)  
  426b13:	and    ebp,DWORD PTR [rdi+0x38]
  426b16:	fnstcw WORD PTR [rbx-0xf]
  426b19:	jl     0x426aea
  426b1b:	rex.W out dx,al
  426b1d:	jnp    0x426b45
  426b1f:	mov    esp,0xe9ff791
  426b24:	lahf   
  426b25:	in     al,dx
  426b26:	push   rax
  426b27:	xchg   ebp,eax
  426b28:	iret   
  426b29:	mov    esp,0xd276dcf1
  426b2e:	mov    esi,0xb8916dd9
  426b33:	sbb    BYTE PTR [rbp-0x15],dh
  426b36:	(bad)  
  426b38:	push   rcx
  426b39:	ret    0x7ac1
  426b3c:	rcr    BYTE PTR [rdi+0x130e8024],1
  426b42:	(bad)  
  426b43:	pop    rcx
  426b44:	(bad)  
  426b45:	or     ecx,DWORD PTR [rax+0x1e46d0dd]
  426b4b:	stos   BYTE PTR es:[rdi],al
  426b4c:	cmp    eax,0xa81b53cb
  426b51:	push   rsp
  426b52:	shl    DWORD PTR [rsp-0x56],0x11
  426b57:	and    BYTE PTR [rbx-0x51],bl
  426b5a:	mov    al,0x3d
  426b5c:	movabs eax,ds:0x5222cccc81cac6fd
  426b65:	xor    al,0xca
  426b67:	lahf   
  426b68:	xchg   ebx,eax
  426b69:	rex.RXB
  426b6a:	repnz cmp BYTE PTR [rdx+0x71],dl
  426b6e:	movabs ds:0xc6350ac84aa3ebd5,eax
  426b77:	mov    ecx,0x456d0218
  426b7c:	mul    BYTE PTR [rbx+0x4cc80d82]
  426b82:	(bad)  
  426b83:	int3   
  426b84:	lods   eax,DWORD PTR ds:[rsi]
  426b85:	vpsubsw ymm11{k7}{z},ymm17,QWORD PTR [rdx+0x78]{1to4}
  426b8c:	pop    rbp
  426b8d:	push   rsp
  426b8e:	sub    ecx,DWORD PTR [rdx-0x1a9294a4]
  426b94:	xchg   ebx,edi
  426b96:	cs (bad) 
  426b98:	rex.RB xchg r12d,eax
  426b9a:	sahf   
  426b9b:	push   rbp
  426b9c:	and    esp,DWORD PTR [rdx+0x45]
  426b9f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  426ba0:	stos   DWORD PTR es:[rdi],eax
  426ba1:	iret   
  426ba2:	movsxd eax,DWORD PTR [rbx]
  426ba4:	sub    al,0x85
  426ba6:	(bad)  
  426ba7:	ins    DWORD PTR es:[rdi],dx
  426ba8:	mov    edx,0x5b6435e3
  426bad:	pop    rdi
  426bae:	xlat   BYTE PTR ds:[rbx]
  426baf:	js     0x426bb5
  426bb1:	nop
  426bb2:	jmp    0xffffffffcca62175
  426bb7:	(bad)  
  426bb8:	cdq    
  426bb9:	mov    esp,0xb2d80a28
  426bbe:	mov    ?,ebp
  426bc0:	repnz or al,BYTE PTR [rsp+rcx*8+0x75]
  426bc5:	rex pop rdi
  426bc7:	jno    0x426bd0
  426bc9:	adc    BYTE PTR [rbp-0x581eb3db],al
  426bcf:	ins    DWORD PTR es:[rdi],dx
  426bd0:	xchg   esp,eax
  426bd1:	shr    BYTE PTR [rbx],1
  426bd3:	or     ebx,DWORD PTR [rdi+0x19]
  426bd6:	mov    ecx,0x59d22f92
  426bdb:	repnz or BYTE PTR [rdx*2-0x5bb60e94],bh
  426be3:	mov    bl,0xf6
  426be5:	cli    
  426be6:	retf   
  426be7:	test   DWORD PTR [rbx+0x5b2504c],edi
  426bed:	idiv   DWORD PTR [rax+0x595f560]
  426bf3:	movsxd rdx,DWORD PTR [rcx+rdx*1]
  426bf7:	fcmovnb st,st(7)
  426bf9:	mov    ecx,0xfe2c295b
  426bfe:	or     dl,bl
  426c00:	mov    dh,0xce
  426c02:	adc    BYTE PTR [r14-0x4e],r12b
  426c06:	(bad)  
  426c07:	mov    edi,0x96787541
  426c0c:	fdiv   DWORD PTR [rbp-0x3f123386]
  426c12:	cld    
  426c13:	jg     0x426c71
  426c15:	and    esp,DWORD PTR [rsi]
  426c17:	(bad)  
  426c18:	adc    dh,BYTE PTR [rax+0x4a]
  426c1b:	(bad)  
  426c1e:	fndisi(8087 only) 
  426c20:	xchg   edi,eax
  426c21:	jae    0x426c83
  426c23:	leave  
  426c24:	(bad)  
  426c25:	sar    DWORD PTR [rbp+0x36],cl
  426c28:	push   rax
  426c29:	add    al,0x3
  426c2b:	outs   dx,DWORD PTR ds:[rsi]
  426c2c:	(bad)  
  426c2d:	sbb    ecx,DWORD PTR [rax-0x77]
  426c30:	add    BYTE PTR [rcx+rax*1],0x63
  426c34:	cdq    
  426c35:	cmp    eax,0x5bfaafac
  426c3a:	(bad)  
  426c3b:	sub    bl,BYTE PTR [rdi]
  426c3d:	rex.WB
  426c3e:	rex mov esp,0x5d06fffe
  426c44:	in     al,0xd9
  426c46:	jrcxz  0x426c3e
  426c48:	fidivr DWORD PTR [rdi+0x335d5f42]
  426c4e:	(bad)
  426c51:	fsubp  st(6),st
  426c53:	mov    ah,ch
  426c55:	xchg   esp,eax
  426c56:	or     DWORD PTR [rdi+0x3b6d1ca1],eax
  426c5c:	jno    0x426ca7
  426c5e:	mov    al,0x45
  426c60:	(bad)  
  426c61:	ror    ecx,0xf9
  426c64:	ja     0x426c35
  426c66:	xchg   ecx,eax
  426c67:	mov    dl,0x38
  426c69:	(bad)  
  426c6a:	jp     0x426c97
  426c6c:	stos   DWORD PTR es:[rdi],eax
  426c6d:	in     al,0xf4
  426c6f:	cmc    
  426c70:	loope  0x426c6b
  426c72:	(bad)  
  426c73:	fdivr  DWORD PTR [rdi-0x46027e81]
  426c79:	enter  0xe9b2,0x80
  426c7d:	cmp    eax,0x8ff12f23
  426c82:	mov    BYTE PTR [rdi],ch
  426c84:	xor    DWORD PTR [rbp+0x8584899],esi
  426c8a:	jb     0x426c24
  426c8c:	test   BYTE PTR [rsi],bh
  426c8e:	pop    rdx
  426c8f:	mov    esp,0x85e56c9c
  426c94:	in     al,0x7
  426c96:	cs push rax
  426c98:	(bad)  
  426c99:	and    al,dl
  426c9b:	mov    ecx,ebx
  426c9d:	(bad)  
  426c9e:	mov    edx,0xf10c45ad
  426ca3:	ins    DWORD PTR es:[rdi],dx
  426ca4:	js     0x426d07
  426ca6:	(bad)  
  426ca7:	mov    ecx,0x9af65b4e
  426cac:	pop    rax
  426cad:	add    al,0x2c
  426caf:	adc    eax,0x870cf78b
  426cb4:	shl    DWORD PTR [rdx+0x377b9e91],cl
  426cba:	adc    al,0x76
  426cbc:	(bad)  
  426cbd:	jo     0x426c6d
  426cbf:	call   QWORD PTR [rbx-0x78aa51a3]
  426cc5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  426cc6:	mov    edi,ds
  426cc8:	xor    DWORD PTR [rbx],esi
  426cca:	test   eax,0xb155f9fb
  426ccf:	(bad)  
  426cd0:	mov    ch,0x53
  426cd2:	jmp    0x6adb186
  426cd7:	leave  
  426cd8:	(bad)  
  426cd9:	cmp    BYTE PTR [rbp+0x56],bl
  426cdc:	and    DWORD PTR [rbx],ebx
  426cde:	jns    0x426cca
  426ce0:	iret   
  426ce1:	(bad)  
  426ce2:	jnp    0x426cab
  426ce4:	mov    ecx,0xed13f6bf
  426ce9:	mov    ecx,0x4d6f9f34
  426cee:	addr32 add al,0x33
  426cf1:	(bad)  
  426cf2:	outs   dx,DWORD PTR ds:[rsi]
  426cf3:	test   DWORD PTR [rdx-0x4],esp
  426cf6:	cs jmp 0x450000cc
  426cfc:	lea    edi,[rdx-0x32]
  426cff:	mov    esi,0xbf9fa491
  426d04:	test   BYTE PTR [rcx],ah
  426d06:	push   rcx
  426d07:	out    dx,eax
  426d08:	cmc    
  426d09:	xchg   DWORD PTR [rdx],ebp
  426d0b:	sbb    dl,BYTE PTR [rbp+rax*2-0x6370cead]
  426d12:	stos   DWORD PTR es:[rdi],eax
  426d13:	lods   eax,DWORD PTR ds:[rsi]
  426d14:	retf   
  426d15:	jle    0x426ce6
  426d17:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  426d18:	push   rdi
  426d19:	sub    DWORD PTR [rcx],esp
  426d1b:	in     eax,0x72
  426d1d:	gs xor al,0x6b
  426d20:	and    DWORD PTR [rbp+0x4bd4014c],esi
  426d26:	(bad)  
  426d27:	rex.WR xchg BYTE PTR [rsi+0x65],r14b
  426d2b:	test   DWORD PTR [r8+0x65],0xd0aab2cc
  426d33:	jp     0x426d44
  426d35:	data16 test BYTE PTR [rbp+0x60c84b2],dl
  426d3c:	repnz pop rsi
  426d3e:	or     BYTE PTR [rax+0x63],dl
  426d41:	(bad)  
  426d42:	dec    DWORD PTR [rdx]
  426d44:	(bad)  
  426d45:	shr    BYTE PTR [rdi+0x8],1
  426d48:	test   BYTE PTR [rax-0x31],bl
  426d4b:	rex.B (bad) 
  426d4d:	fld    TBYTE PTR es:[rax]
  426d50:	xchg   ebp,eax
  426d51:	mov    ebp,0xea290a95
  426d56:	mov    DWORD PTR [rcx+0x49488bc],esp
  426d5c:	mov    ebp,0x8277a59a
  426d61:	shr    esi,0xca
  426d64:	xlat   BYTE PTR ds:[rbx]
  426d65:	shr    ecx,1
  426d67:	adc    ecx,DWORD PTR [rbx+rbp*8-0x1b]
  426d6b:	jmp    0xffffffff945d1538
  426d70:	(bad)  
  426d71:	(bad)  
  426d72:	and    al,0x7c
  426d74:	mov    esi,0x5d1c3e3a
  426d79:	(bad)  
  426d7a:	and    DWORD PTR [rcx],0xffffff9a
  426d7d:	xor    DWORD PTR [rsi+0x30de20d1],eax
  426d83:	sbb    BYTE PTR [rdi],ah
  426d85:	gs or  edi,0x1b227bd2
  426d8c:	adc    esp,edi
  426d8e:	sub    DWORD PTR [rbp-0x72],esi
  426d91:	sti    
  426d92:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  426d93:	lods   eax,DWORD PTR ds:[rsi]
  426d94:	xchg   ebx,eax
  426d95:	outs   dx,BYTE PTR ds:[rsi]
  426d96:	pushf  
  426d97:	xor    bl,BYTE PTR [rsi]
  426d99:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  426d9a:	leave  
  426d9b:	stos   BYTE PTR es:[rdi],al
  426d9c:	nop
  426d9d:	and    eax,eax
  426d9f:	int3   
  426da0:	fnstsw WORD PTR [rax]
  426da2:	lahf   
  426da3:	ror    DWORD PTR [rax],1
  426da5:	rex.WR movabs rdi,0x19b20f981142c6c6
  426daf:	retf   0x8519
  426db2:	xchg   ecx,eax
  426db3:	jmp    0xffffffff862ddaeb
  426db8:	enter  0x248c,0xc5
  426dbc:	movsxd esi,DWORD PTR [rip+0xffffffff9bdcdb60]        # 0xffffffff9c1f4922
  426dc2:	gs popf 
  426dc4:	or     DWORD PTR [rcx+0x4],esp
  426dc7:	mov    ch,0xa1
  426dc9:	jae    0x426d90
  426dcb:	add    eax,0x8ebe2d50
  426dd0:	jae    0x426e13
  426dd2:	sub    ebp,ebx
  426dd4:	sub    eax,0xf5a6c344
  426dd9:	rex.RXB test DWORD PTR [r9+0x4d],r13d
  426ddd:	sbb    al,BYTE PTR [rax-0x15]
  426de0:	shl    DWORD PTR [rbp-0x6204210c],cl
  426de6:	ret    0xb4bc
  426de9:	ror    al,1
  426deb:	sbb    eax,0x175f4c20
  426df0:	(bad)  
  426df1:	repz jge 0x426e42
  426df4:	in     al,dx
  426df5:	imul   ebx,ebx,0x6b
  426df8:	(bad)  
  426df9:	fstp   TBYTE PTR [rdx]
  426dfb:	(bad)  
  426dfc:	mov    DWORD PTR [rdi-0x6a],edx
  426dff:	add    DWORD PTR [rdi-0x6921c478],edx
  426e05:	jno    0x426e3d
  426e07:	outs   dx,DWORD PTR ds:[rsi]
  426e08:	movsxd eax,DWORD PTR [rsi+0x1912e664]
  426e0e:	jp     0x426e29
  426e10:	xor    BYTE PTR [rdi-0x7f726f62],cl
  426e16:	sub    ah,BYTE PTR [rcx]
  426e18:	xor    bh,BYTE PTR [rip+0xffffffff9e4278bf]        # 0xffffffff9e84e6dd
  426e1e:	ds or  eax,0xfecaa427
  426e24:	lea    esi,ss:[rcx+0x53501cb]
  426e2b:	rcl    BYTE PTR [rsi],0x3
  426e2e:	popf   
  426e2f:	cs cwde 
  426e31:	and    cl,BYTE PTR [rdi-0x99c4546]
  426e37:	scas   al,BYTE PTR es:[rdi]
  426e38:	xchg   esp,eax
  426e39:	rex.WRXB int3 
  426e3b:	cmp    al,0xe2
  426e3d:	add    DWORD PTR [rdx+0x31eb92c9],eax
  426e43:	movabs al,ds:0x740d59fb49410483
  426e4c:	jbe    0x426e21
  426e4e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  426e4f:	and    al,0xbd
  426e51:	push   rsi
  426e52:	ds mov dl,0x56
  426e55:	adc    DWORD PTR [rdi],esp
  426e57:	(bad)  
  426e58:	addr32 nop
  426e5a:	or     BYTE PTR [rdi+0x66],dl
  426e5d:	in     al,0xf6
  426e5f:	lock or al,0xa8
  426e62:	or     BYTE PTR [rdi+0x6503d81d],ah
  426e68:	push   0xffffffffffffffbb
  426e6a:	xchg   ebx,eax
  426e6b:	and    DWORD PTR [rbx-0x19],eax
  426e6e:	mov    cl,0xf3
  426e70:	loopne 0x426ed7
  426e72:	hlt    
  426e73:	leave  
  426e74:	and    eax,0xb9831624
  426e79:	(bad)  
  426e7a:	rex.WR
  426e7b:	adc    BYTE PTR [r10+0x26],cl
  426e7f:	mov    fs,WORD PTR [rdx+0x46]
  426e82:	mov    ah,BYTE PTR [rax]
  426e84:	(bad)  
  426e85:	pop    rbx
  426e86:	retf   0x3cb1
  426e89:	jbe    0x426ead
  426e8b:	rex.X loope 0x426e0f
  426e8e:	imul   ebp,DWORD PTR [rcx-0x7],0x4580ed67
  426e95:	(bad)  
  426e96:	stos   DWORD PTR es:[rdi],eax
  426e97:	(bad)  
  426e98:	push   rsi
  426e99:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  426e9a:	add    BYTE PTR [rcx],0xc1
  426e9d:	and    dl,0xc
  426ea0:	rex.X (bad) 
  426ea2:	movsxd esi,DWORD PTR ss:[rcx-0x23]
  426ea6:	xor    ax,WORD PTR [rax]
  426ea9:	loope  0x426e5e
  426eab:	(bad)
  426eb0:	cmp    al,ah
  426eb2:	jmp    0xffffffff8b41a1f6
  426eb7:	add    edi,DWORD PTR gs:[rsi-0x2b]
  426ebb:	sub    BYTE PTR [rsi],bh
  426ebd:	rex.RX fsubr DWORD PTR [rbp-0x79]
  426ec1:	cli    
  426ec2:	(bad)  
  426ec3:	and    eax,0x637ca9f2
  426ec8:	movsxd edx,DWORD PTR [rsi]
  426eca:	rex.WB stos BYTE PTR es:[rdi],al
  426ecc:	in     al,dx
  426ecd:	or     esi,DWORD PTR [rdi-0x322de468]
  426ed3:	push   rbp
  426ed4:	jp     0x426f09
  426ed6:	in     eax,0x8
  426ed8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  426ed9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  426eda:	je     0x426f19
  426edc:	push   rbp
  426edd:	rex.WXB
  426ede:	fs nop
  426ee0:	pop    rbx
  426ee1:	rex iret 
  426ee3:	movabs ds:0x1fbb7613cfbf7ed7,eax
  426eec:	cmp    ah,0x48
  426eef:	and    al,0xbc
  426ef1:	sub    DWORD PTR [rbx+0x612ed649],ebp
  426ef7:	rex.X (bad) 
  426ef9:	push   rsi
  426efa:	mov    edi,ecx
  426efc:	idiv   DWORD PTR [rcx]
  426efe:	mov    gs,WORD PTR [rbx-0x3]
  426f01:	(bad)  
  426f02:	scas   al,BYTE PTR es:[rdi]
  426f03:	outs   dx,BYTE PTR ds:[rsi]
  426f04:	in     eax,0xaa
  426f06:	add    cl,BYTE PTR [rdx-0x693c490c]
  426f0c:	(bad)  
  426f0d:	mov    WORD PTR [rax-0x1b],?
  426f10:	mov    eax,0xd5a0332d
  426f15:	push   rdx
  426f16:	(bad)  
  426f17:	push   rsp
  426f18:	retf   
  426f19:	cwde   
  426f1a:	(bad)  
  426f1b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  426f1c:	outs   dx,DWORD PTR ds:[rsi]
  426f1d:	not    DWORD PTR [rdi-0x6f]
  426f20:	sti    
  426f21:	or     eax,0xfb80d7e5
  426f26:	rex.WRXB mov QWORD PTR [r10+0x248f31d5],r15
  426f2d:	mov    dh,0xfc
  426f2f:	cmovo  ecx,DWORD PTR [rbx]
  426f32:	in     al,0xd3
  426f34:	jp     0x426ef4
  426f36:	neg    ecx
  426f38:	repz in eax,dx
  426f3a:	jne    0x426f31
  426f3c:	rex.WRX mov cl,r13b
  426f3f:	cwde   
  426f40:	rex in eax,0xbc
  426f43:	mov    eax,ebp
  426f45:	pop    rdi
  426f46:	sti    
  426f47:	rex.XB jg 0x426ecc
  426f4a:	cmp    al,0x3a
  426f4c:	push   rsi
  426f4d:	leave  
  426f4e:	ret    
  426f4f:	or     al,0xef
  426f51:	cmp    BYTE PTR [rbx-0x1f],dh
  426f54:	shl    BYTE PTR [rsi+0xa5844c0],1
  426f5a:	rex.WRB fisubr DWORD PTR [r14]
  426f5d:	cmp    al,0x2e
  426f5f:	and    dh,BYTE PTR [rdi]
  426f61:	xchg   ecx,eax
  426f62:	jae    0x426ef2
  426f64:	int    0xdc
  426f66:	mov    ch,0xae
  426f68:	mov    ebx,0x67b364c3
  426f6d:	lock rex.R sti 
  426f70:	shl    bh,0xa7
  426f73:	pop    rdi
  426f74:	add    al,BYTE PTR [rdx+0xfbf8b3b]
  426f7a:	(bad)  
  426f7c:	repnz pop rbp
  426f7e:	shr    BYTE PTR [rsi-0x354ca07f],1
  426f84:	rex.WRXB inc BYTE PTR [rip+0xfffffffffd64fcab]        # 0xfffffffffda76c36
  426f8b:	sub    bh,BYTE PTR [rdi]
  426f8d:	jns    0x426f7b
  426f8f:	sub    bh,BYTE PTR [rdi-0xa]
  426f92:	in     al,dx
  426f93:	stc    
  426f94:	out    0xbf,eax
  426f96:	(bad)  
  426f97:	xchg   ebp,eax
  426f98:	mov    ebp,0xb6bffe19
  426f9d:	retf   0x4ede
  426fa0:	sti    
  426fa1:	jne    0x426f4e
  426fa3:	sub    al,0xc1
  426fa5:	test   eax,0x4d0b1040
  426faa:	xor    BYTE PTR [rip+0xffffffff88e929ef],al        # 0xffffffff892b999f
  426fb0:	rcl    DWORD PTR [rsi],1
  426fb2:	cld    
  426fb3:	lods   al,BYTE PTR ds:[rsi]
  426fb4:	(bad)  
  426fb5:	(bad)  
  426fb6:	fcmove st,st(4)
  426fb8:	outs   dx,BYTE PTR ds:[rsi]
  426fb9:	mov    bl,cl
  426fbb:	test   DWORD PTR [rsi],esp
  426fbd:	mov    dh,0xb1
  426fbf:	(bad)  
  426fc0:	(bad)  
  426fc1:	rdmsr  
  426fc3:	or     edi,DWORD PTR [rdx]
  426fc5:	out    dx,al
  426fc6:	(bad)  
  426fc7:	rex.RX push rsp
  426fc9:	repz fwait
  426fcb:	or     DWORD PTR [rbp+0x35],0xfffffffa
  426fcf:	adc    eax,0xc419abf2
  426fd4:	cld    
  426fd5:	cmp    DWORD PTR [rbx+0xcc2ffd4],esi
  426fdb:	hlt    
  426fdc:	xor    BYTE PTR [rsi-0x19],dh
  426fdf:	rex.RB cmp al,0xfd
  426fe2:	imul   rsp,QWORD PTR [r14],0xffffffffffffff8b
  426fe6:	rcl    DWORD PTR [rbp+0x4a],0xa4
  426fea:	adc    eax,0x25bf001
  426fef:	(bad)  
  426ff1:	imul   edi,DWORD PTR [rax-0x21b0c5c4],0x9b5742a4
  426ffb:	ins    BYTE PTR es:[rdi],dx
  426ffc:	cdq    
  426ffd:	(bad)  
  426fff:	(bad)  
  427001:	mov    ebp,0xb56bdb27
  427006:	mov    ?,WORD PTR [rsi+0x12]
  427009:	es mov esi,0x319455
  42700f:	ret    0xb2e5
  427012:	sub    ch,BYTE PTR [rsp+riz*2]
  427015:	(bad)  
  427016:	jl     0x427001
  427018:	ret    
  427019:	mov    ebx,0xa7c7d7b3
  42701e:	xchg   DWORD PTR [rdi-0x4f],edi
  427021:	cdq    
  427022:	sbb    eax,0x8853234
  427027:	jg     0x427059
  427029:	retf   0xfdfa
  42702c:	(bad)  
  42702d:	movsxd edi,edi
  42702f:	cwde   
  427030:	pop    rdi
  427031:	outs   dx,BYTE PTR ds:[rsi]
  427032:	cmp    eax,0x661426d9
  427037:	push   rax
  427038:	cs loopne 0x427075
  42703b:	imul   esp,edi,0xffffffc3
  42703e:	xor    BYTE PTR [rdx],bl
  427040:	rex.WRB sbb r12b,BYTE PTR fs:[r9-0x1261c046]
  427048:	(bad)  
  427049:	test   DWORD PTR [rbp-0xad7ad6f],0xec78fadc
  427053:	cwde   
  427054:	test   eax,0x88331b24
  427059:	ss add al,0xdb
  42705c:	push   rcx
  42705d:	repnz rex.WRB outs dx,BYTE PTR ds:[rsi]
  427060:	out    dx,al
  427061:	jns    0x4270b5
  427063:	(bad)  
  427064:	push   0x73
  427066:	ror    BYTE PTR [rcx],cl
  427068:	(bad)  
  427069:	rex.XB movabs eax,ds:0xc0b660015f36ab8a
  427073:	lahf   
  427074:	lods   al,BYTE PTR ds:[rsi]
  427075:	cmc    
  427076:	sbb    eax,0x837a37b4
  42707b:	xchg   ebx,eax
  42707c:	xchg   ecx,eax
  42707d:	int    0x8a
  42707f:	lods   al,BYTE PTR ds:[rsi]
  427080:	sbb    DWORD PTR [rax-0x31],ecx
  427083:	pop    rsi
  427084:	(bad)  
  427085:	(bad)  
  427086:	pop    rdi
  427087:	frstor [rsi+0x4dc000b3]
  42708d:	je     0x42708a
  42708f:	xchg   edx,eax
  427090:	xchg   edx,eax
  427091:	loop   0x427035
  427093:	(bad)  
  427094:	hlt    
  427095:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  427096:	rex.RXB (bad) 
  427098:	cmp    DWORD PTR [rdx+0x64fa94bc],esi
  42709e:	pop    rdx
  42709f:	test   DWORD PTR [rbp-0xd0d032],esi
  4270a5:	jb     0x427125
  4270a7:	cld    
  4270a8:	(bad)  
  4270a9:	and    eax,0x20bf98c5
  4270ae:	adc    al,0x51
  4270b0:	fisttp QWORD PTR [rdx]
  4270b2:	cmp    DWORD PTR [rdi],esp
  4270b4:	push   rsp
  4270b5:	adc    al,0x29
  4270b7:	sbb    bl,al
  4270b9:	imul   ecx,DWORD PTR [rdi+0x46]
  4270bd:	out    0xa7,eax
  4270bf:	rex.RXB scas eax,DWORD PTR es:[edi]
  4270c2:	pop    rsi
  4270c3:	inc    BYTE PTR [rax+0x4a]
  4270c6:	mov    ah,0x39
  4270c8:	sub    edi,esi
  4270ca:	fidivr WORD PTR [rbx+0x629667f6]
  4270d0:	(bad)  
  4270d1:	int3   
  4270d2:	cli    
  4270d3:	cmp    esi,edi
  4270d5:	inc    bl
  4270d7:	icebp  
  4270d8:	mov    ebx,0xbcbd5eef
  4270dd:	rex.WRB stos QWORD PTR es:[rdi],rax
  4270df:	lea    ecx,ds:[rdi-0x32aea121]
  4270e6:	movabs ds:0xd63ecf191b48d7b5,al
  4270ef:	stc    
  4270f0:	fbstp  TBYTE PTR [rbx+0x5b3ebcc4]
  4270f6:	xchg   BYTE PTR [rdi+rdx*2],cl
  4270f9:	xchg   edi,eax
  4270fa:	ret    0x6ca3
  4270fd:	add    al,0x15
  4270ff:	imul   edi,DWORD PTR [rdi+0x5f],0x2c4b7e9d
  427106:	sub    dl,dh
  427108:	sub    eax,0xdee26734
  42710d:	in     al,0x8b
  42710f:	addr32 jnp 0x42710d
  427112:	fld    TBYTE PTR [rsi-0x67a7fbf0]
  427118:	rex.WR (bad) 
  42711a:	(bad)  
  42711b:	(bad)  
  42711c:	or     BYTE PTR [rax-0x5ea19841],bh
  427122:	sub    DWORD PTR [r14+0x71],esp
  427126:	(bad)  
  427128:	push   r11
  42712a:	or     ebx,DWORD PTR [rbx]
  42712c:	jmp    0x5435795d
  427131:	sbb    eax,0xa8d90a8d
  427136:	add    DWORD PTR [rbx-0x68720d1f],0xdb95f688
  427140:	jnp    0x4270e8
  427142:	cmp    esp,edx
  427144:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  427145:	pop    rax
  427146:	sub    ecx,DWORD PTR [rsi+rdi*2]
  427149:	rex.RXB
  42714a:	ins    BYTE PTR es:[edi],dx
  42714c:	push   rdi
  42714d:	add    esi,0x64
  427150:	sbb    eax,DWORD PTR [rbx]
  427152:	rex.WXB test BYTE PTR [r15+0x7c],0x9e
  427157:	mov    ebp,0xf2c07072
  42715c:	xchg   ebp,eax
  42715d:	pushf  
  42715e:	mov    dl,0x8f
  427160:	push   rcx
  427161:	(bad)  
  427162:	(bad)  
  427163:	push   rbx
  427164:	lock inc DWORD PTR [rbx]
  427167:	or     esp,DWORD PTR cs:[rbx-0x7a]
  42716b:	push   rsi
  42716c:	movabs al,ds:0xd9675633d673539f
  427175:	jne    0x4271b1
  427177:	mov    ecx,0x5843e4b7
  42717c:	nop
  42717d:	imul   ebx,DWORD PTR [rcx],0x274a5049
  427183:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  427184:	mov    ebx,0x35e9b2ce
  427189:	nop
  42718a:	pushfw 
  42718c:	in     al,dx
  42718d:	mov    BYTE PTR [rbx-0x4b],r11b
  427191:	jno    0x42714c
  427193:	imul   esi,DWORD PTR [rsi],0xffffffa3
  427196:	rex.WXB and QWORD PTR [r14-0x55],rsp
  42719a:	ror    DWORD PTR [rdx-0x4240276a],1
  4271a0:	sti    
  4271a1:	push   0x65175cdb
  4271a6:	mov    ch,0x7e
  4271a8:	rex.WRX lahf 
  4271aa:	mov    dh,0x1d
  4271ac:	test   BYTE PTR [rdi-0x39],bh
  4271af:	and    DWORD PTR [rdi-0x5f07b31c],esp
  4271b5:	pop    rsi
  4271b6:	rcr    BYTE PTR [rdi+0x57],cl
  4271b9:	push   rbx
  4271ba:	mov    ah,0xb1
  4271bc:	xchg   ebp,eax
  4271bd:	(bad)  
  4271be:	(bad)  
  4271bf:	jge    0x42717f
  4271c1:	sahf   
  4271c2:	xor    BYTE PTR [rbx+rbx*4+0x56],ch
  4271c6:	(bad)  
  4271c7:	pushf  
  4271c8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4271c9:	(bad)  
  4271ca:	hlt    
  4271cb:	(bad)  
  4271cc:	cmp    bh,ch
  4271ce:	(bad)  
  4271cf:	cmp    al,0xf5
  4271d1:	fsqrt  
  4271d3:	lock int3 
  4271d5:	test   ah,0x94
  4271d8:	(bad)  
  4271d9:	jns    0x427230
  4271db:	jnp    0x4271f3
  4271dd:	jo     0x4271f7
  4271df:	test   eax,0x4f102a2c
  4271e4:	mov    bh,ch
  4271e6:	mov    ebp,0x2648b6a4
  4271eb:	adc    ch,BYTE PTR [rsi-0x3a]
  4271ee:	int3   
  4271ef:	(bad)  
  4271f0:	(bad)  
  4271f1:	or     ch,BYTE PTR [rdi+rax*1+0x9296e2d]
  4271f8:	mov    ecx,0xbd538878
  4271fd:	(bad)  
  4271fe:	xor    BYTE PTR [rdi-0x7a],cl
  427201:	(bad)  
  427202:	cmp    al,0x6a
  427204:	es jno 0x427213
  427207:	mov    edi,DWORD PTR [rdx+riz*8]
  42720a:	xchg   esi,eax
  42720b:	jno    0x4271d5
  42720d:	je     0x4271c2
  42720f:	(bad)  
  427210:	sub    ebx,DWORD PTR [rax-0x28fa5310]
  427216:	ss push rbp
  427218:	ds xchg edx,eax
  42721a:	rex.W movabs ds:0xc96d7d73912f80a1,al
  427224:	ins    BYTE PTR es:[rdi],dx
  427225:	js     0x427297
  427227:	(bad)  
  427228:	sti    
  427229:	test   DWORD PTR [rsi+0x6d],ecx
  42722c:	int    0x69
  42722e:	xor    BYTE PTR [rdx+0x5f],al
  427231:	(bad)  
  427232:	in     eax,0xa
  427234:	mov    ah,0x2a
  427236:	rex.XB jmp 0x4271db
  427239:	xor    cl,BYTE PTR [rbp+0x4972fbd2]
  42723f:	loope  0x42729b
  427241:	xchg   edx,eax
  427242:	adc    al,0xa
  427244:	xor    al,0xeb
  427246:	int    0x48
  427248:	sub    bh,0x6b
  42724b:	sbb    BYTE PTR [rdi-0x775a422c],ch
  427251:	jno    0x42729d
  427253:	xor    DWORD PTR [rdx-0x2],eax
  427256:	mov    WORD PTR [rsi+0x6b7cd08],?
  42725c:	mov    cs,WORD PTR [rdx]
  42725e:	cmp    ch,BYTE PTR [rdi+0x2c]
  427261:	rex.X cmp BYTE PTR [rdx-0x4ea698eb],dl
  427268:	ins    BYTE PTR es:[rdi],dx
  427269:	ss (bad) 
  42726b:	sti    
  42726c:	jp     0x4272e2
  42726e:	xchg   eax,ecx
  427270:	sahf   
  427271:	movabs al,ds:0x821085579030ed8f
  42727a:	sbb    eax,DWORD PTR [rcx-0x5a]
  42727d:	pop    rax
  42727e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42727f:	mov    cl,0x22
  427281:	mov    ebx,0x6a731bf3
  427286:	xchg   esi,eax
  427287:	ins    DWORD PTR es:[rdi],dx
  427288:	lock div DWORD PTR [rdi+rbp*8+0x3d]
  42728d:	pop    rsp
  42728e:	(bad)  [rdi-0x613632a]
  427294:	mov    al,0x14
  427296:	sbb    bl,ch
  427298:	data16 add BYTE PTR [rbx+0x71],ch
  42729c:	frstor [rcx]
  42729e:	icebp  
  42729f:	mov    ah,0xb5
  4272a1:	test   al,0xc0
  4272a3:	ret    0x1f8c
  4272a6:	frstpm(287 only) 
  4272a8:	fsubp  st(0),st
  4272aa:	loop   0x427268
  4272ac:	xlat   BYTE PTR ds:[rbx]
  4272ad:	(bad)  
  4272ae:	rex.WRXB movabs r11,0x44ce813bfcc0c0f9
  4272b8:	xor    al,0x82
  4272ba:	iret   
  4272bb:	sahf   
  4272bc:	rex.WX loopne 0x427291
  4272bf:	sub    esp,DWORD PTR [rdx-0x4b028ee9]
  4272c5:	stos   DWORD PTR es:[rdi],eax
  4272c6:	cld    
  4272c7:	xor    DWORD PTR [rip+0x34fc63bf],esp        # 0x353ed68c
  4272cd:	(bad)  
  4272ce:	rex.WR jnp 0x427255
  4272d1:	sbb    al,0x82
  4272d3:	(bad)  
  4272d4:	cmp    esi,DWORD PTR [rdx-0x67]
  4272d7:	js     0x4272c8
  4272d9:	ins    BYTE PTR es:[rdi],dx
  4272da:	movabs ds:0x98903e6ea2719531,al
  4272e3:	repnz mov ah,0x33
  4272e6:	movabs ds:0x656fe2ba54c8a1da,eax
  4272ef:	(bad)
  4272f2:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4272f3:	push   rsp
  4272f4:	rcr    DWORD PTR [rdi+rsi*2],cl
  4272f7:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4272f8:	fsub   st,st(6)
  4272fa:	jbe    0x4272aa
  4272fc:	ret    0x6978
  4272ff:	and    cl,BYTE PTR [rcx+0x3aa1c837]
  427305:	movabs ds:0x1eb498f3f9bbae44,eax
  42730e:	(bad)  
  42730f:	nop
  427310:	(bad)  
  427311:	sahf   
  427312:	xor    eax,0x77690e95
  427317:	shr    BYTE PTR [rdi-0x5e0253a3],1
  42731d:	rex.B leave 
  42731f:	cwde   
  427320:	jle    0x427307
  427322:	nop
  427323:	(bad)  
  427324:	loopne 0x427310
  427326:	scas   al,BYTE PTR es:[rdi]
  427327:	cmp    ecx,DWORD PTR [rbp+0x3c180c2c]
  42732d:	push   0xffffffffffffffa0
  42732f:	lods   eax,DWORD PTR ds:[rsi]
  427330:	xchg   ecx,eax
  427331:	sbb    dh,BYTE PTR [rbx+0x69]
  427334:	(bad)  
  427335:	mov    eax,0xdb474f99
  42733a:	mov    DWORD PTR [rdx],ebx
  42733c:	ror    BYTE PTR [rcx-0x1cbe86d3],0xa4
  427343:	loope  0x4272ee
  427345:	or     DWORD PTR [rsi+rdi*8+0x6a],ecx
  427349:	leave  
  42734a:	movabs eax,ds:0x5fedc7d71095f767
  427353:	jp     0x4273a8
  427355:	mov    edi,ecx
  427357:	(bad)  
  427358:	and    BYTE PTR [rcx+0x3b],0x2e
  42735c:	xor    r15,rbp
  42735f:	movabs ds:0xd9edeeede8588c3d,al
  427368:	cli    
  427369:	mov    cl,0xb6
  42736b:	jg     0x4273c9
  42736d:	adc    eax,0xe1efb7e7
  427372:	(bad)  
  427373:	scas   eax,DWORD PTR es:[rdi]
  427374:	sahf   
  427375:	ret    
  427376:	std    
  427377:	jg     0x42734a
  427379:	sbb    al,0x3e
  42737b:	stc    
  42737c:	jne    0x4273f1
  42737e:	clc    
  42737f:	in     al,0x37
  427381:	fwait
  427382:	rex.XB push r15
  427384:	jns    0x42730b
  427386:	(bad)  
  427387:	movabs ds:0xa296c93a23baf396,al
  427390:	movabs ds:0x1e697591630a631d,al
  427399:	and    al,0x8c
  42739b:	jns    0x427323
  42739d:	sbb    dl,BYTE PTR [rbx*4+0x35363701]
  4273a4:	(bad)  
  4273a5:	pushf  
  4273a6:	scas   al,BYTE PTR es:[rdi]
  4273a7:	push   rbp
  4273a8:	outs   dx,BYTE PTR ds:[rsi]
  4273a9:	xchg   ebx,eax
  4273aa:	popf   
  4273ab:	rex.W fadd st(1),st
  4273ae:	ret    0xc235
  4273b1:	icebp  
  4273b2:	stos   DWORD PTR es:[rdi],eax
  4273b3:	xchg   edx,eax
  4273b4:	xor    al,0x7
  4273b6:	repnz mov ebp,0x6efeddd0
  4273bc:	xor    al,0xc2
  4273be:	(bad)  
  4273bf:	jg     0x427402
  4273c1:	(bad)  
  4273c2:	(bad)  
  4273c3:	repz cmp BYTE PTR [rbp+rbx*8+0x44],al
  4273c8:	(bad)  
  4273c9:	cmp    ebx,esp
  4273cb:	idiv   ah
  4273cd:	jge    0x4273d9
  4273cf:	std    
  4273d0:	imul   r11d,ebp,0x44
  4273d4:	fiadd  WORD PTR [rdx+rsi*4]
  4273d7:	(bad)  
  4273d8:	xchg   esp,eax
  4273d9:	xor    esp,DWORD PTR [rsi]
  4273db:	cmp    ah,bh
  4273dd:	scas   al,BYTE PTR es:[rdi]
  4273de:	(bad)  
  4273df:	(bad)  [rbp+0x64]
  4273e2:	rex.WRXB retf 
  4273e4:	(bad)  
  4273e5:	hlt    
  4273e6:	in     al,dx
  4273e7:	jge    0x4273fa
  4273e9:	adc    dh,cl
  4273eb:	mov    ch,0xd3
  4273ed:	icebp  
  4273ee:	in     eax,dx
  4273ef:	js     0x42746f
  4273f1:	xchg   esp,eax
  4273f2:	movabs al,ds:0x1e75fa8ec76ad29e
  4273fb:	jo     0x4273e8
  4273fd:	mov    ah,0x50
  4273ff:	or     ch,BYTE PTR [rbx]
  427401:	sbb    al,0x3b
  427403:	jno    0x4273cc
  427405:	rex.WRB jmp 0x427467
  427408:	sub    eax,0xd537e14
  42740d:	xchg   esp,eax
  42740e:	(bad)  
  42740f:	xor    cl,BYTE PTR [rsi-0x5]
  427412:	loope  0x427468
  427414:	fisttp QWORD PTR [rcx+0x39]
  427417:	xchg   DWORD PTR [rdx],eax
  427419:	fs (bad) 
  42741b:	hlt    
  42741c:	push   rdx
  42741d:	sub    al,0xab
  42741f:	shl    DWORD PTR [rcx-0x57f1444],0x1c
  427426:	rex pop rcx
  427428:	pop    rcx
  427429:	in     eax,dx
  42742a:	ret    
  42742b:	data16 xor al,0x28
  42742e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42742f:	pushf  
  427430:	rex.RXB pop r9
  427432:	jae    0x4274b0
  427434:	push   0x59
  427436:	call   0xffffffff9daaf882
  42743b:	mov    WORD PTR [rsi],?
  42743d:	rex.WRX lods rax,QWORD PTR ds:[rsi]
  42743f:	or     dl,BYTE PTR [rsi-0x258e6d8b]
  427445:	rex.WRB (bad) 
  427447:	nop
  427448:	push   0x6f1ede7e
  42744d:	cmp    cl,cl
  42744f:	(bad)  
  427450:	imul   edi,DWORD PTR [rip+0x6eb8f3c9],0xf0187ec9        # 0x6efb6823
  42745a:	es es push rdi
  42745d:	rex.WXB jb 0x4273ef
  427460:	jrcxz  0x427477
  427462:	rcl    DWORD PTR [rdi-0x3a5e831b],cl
  427468:	and    eax,0x529242f2
  42746d:	test   al,0xd3
  42746f:	in     eax,0xb2
  427471:	mov    ecx,0xecc4d52e
  427476:	(bad)  
  427477:	stos   BYTE PTR es:[rdi],al
  427478:	stos   BYTE PTR es:[rdi],al
  427479:	(bad)  
  42747a:	mov    esp,0xa933cb33
  42747f:	repnz add eax,0x63d98b2
  427485:	retf   
  427486:	mov    esi,0xe500f22d
  42748b:	rex.WRXB sub r9b,0x5c
  42748f:	repz loopne 0x42750f
  427492:	nop
  427493:	(bad)  
  427494:	rcr    BYTE PTR [rbx],1
  427496:	hlt    
  427497:	shl    QWORD PTR [rsi+0x5de67fb4],1
  42749e:	(bad)  
  42749f:	pushf  
  4274a0:	loopne 0x427446
  4274a2:	push   rsp
  4274a3:	jle    0x4274ba
  4274a5:	xor    eax,0xc17b5674
  4274aa:	(bad)  
  4274ab:	mov    al,0x36
  4274ad:	pop    rbx
  4274ae:	call   0xffffffffc04fbe11
  4274b3:	ins    BYTE PTR es:[rdi],dx
  4274b4:	(bad)  
  4274b5:	push   rbx
  4274b6:	rol    DWORD PTR [rdi-0x7734cc4e],cl
  4274bc:	(bad)  
  4274bd:	and    ch,BYTE PTR [rcx]
  4274bf:	add    eax,0x7d937956
  4274c4:	(bad)  
  4274c5:	hlt    
  4274c6:	addr32 test al,0x37
  4274c9:	mov    cl,0xa0
  4274cb:	mov    ecx,0xe1e46451
  4274d0:	call   0xffffffff85e759bd
  4274d5:	adc    al,0xa5
  4274d7:	imul   esp,ebx,0xe48668c4
  4274dd:	xlat   BYTE PTR ds:[rbx]
  4274de:	xchg   esp,eax
  4274df:	and    ecx,DWORD PTR [rsi]
  4274e1:	and    al,0x3f
  4274e3:	mov    edx,0xb235231b
  4274e8:	(bad)
  4274eb:	mov    ah,0xce
  4274ed:	xchg   ebp,eax
  4274ee:	jbe    0x427528
  4274f0:	adc    eax,0xdd30a74d
  4274f5:	int3   
  4274f6:	sub    DWORD PTR [rbx-0x4b969915],ebp
  4274fc:	cld    
  4274fd:	fistp  QWORD PTR [rdi]
  4274ff:	and    DWORD PTR [rip+0xffffffffd9934a0e],0xffffffe2        # 0xffffffffd9d5bf14
  427506:	jae    0x4274ed
  427508:	mov    ebx,0x16bdc2ff
  42750d:	(bad)  
  42750e:	adc    BYTE PTR [rdx],bh
  427510:	scas   eax,DWORD PTR es:[rdi]
  427511:	test   BYTE PTR [rbx+0x16],ah
  427514:	test   eax,0x8569246b
  427519:	add    eax,0x50a12a88
  42751e:	(bad)  
  42751f:	sub    eax,0xab866e37
  427524:	rex.WRX
  427525:	rex.RB mov r8b,0x9d
  427528:	pop    rax
  427529:	ja     0x427572
  42752b:	xlat   BYTE PTR ds:[rbx]
  42752c:	adc    ah,BYTE PTR [rax-0x39]
  42752f:	rex.WRX movabs rbp,0xb585f0bcbdd5abd6
  427539:	(bad)  
  42753a:	and    ch,ah
  42753c:	std    
  42753d:	iret   
  42753e:	rex.WRXB cli 
  427540:	mov    ebx,0x367f6ddf
  427545:	in     al,dx
  427546:	in     al,dx
  427547:	add    eax,edi
  427549:	lahf   
  42754a:	jns    0x42754e
  42754c:	add    al,0x9b
  42754e:	(bad)  
  42754f:	sti    
  427550:	movsxd ebp,DWORD PTR [rdi+0x5]
  427553:	(bad)  
  427554:	(bad)  
  427555:	and    ebx,edx
  427557:	imul   esp,ebp,0x776bfc61
  42755d:	pop    rdx
  42755e:	and    al,0x31
  427560:	(bad)  
  427561:	adc    esp,DWORD PTR [rdx-0x2]
  427564:	(bad)  
  427565:	cs mov edi,esp
  427568:	adc    edx,DWORD PTR [rax]
  42756a:	push   rbp
  42756b:	out    0x96,al
  42756d:	jg     0x4275b8
  42756f:	adc    al,0x77
  427571:	sub    ebx,DWORD PTR [rax-0x794b7164]
  427577:	lahf   
  427578:	sub    eax,0xfc3e68dc
  42757d:	fidivr WORD PTR [rsp+rbp*2-0x46c63594]
  427584:	xlat   BYTE PTR ds:[rbx]
  427585:	mov    ecx,0xa74fbe8d
  42758a:	add    DWORD PTR [rcx+0x17cf711e],esi
  427590:	pop    rcx
  427591:	rex.XB clc 
  427593:	xchg   DWORD PTR [rbp-0x496942],esi
  427599:	(bad)  
  42759a:	adc    dh,BYTE PTR [rbp+rbp*4+0xb]
  42759e:	rex.X in eax,dx
  4275a0:	lods   al,BYTE PTR ds:[rsi]
  4275a1:	sub    DWORD PTR [rdi],eax
  4275a3:	or     cl,0x70
  4275a6:	adc    BYTE PTR [rcx+0x71eb41b6],bl
  4275ac:	pop    rsp
  4275ad:	imul   eax,DWORD PTR [rcx],0x11068d22
  4275b3:	std    
  4275b4:	imul   edi,DWORD PTR [rdx+rdx*4],0x1cce8960
  4275bb:	rex.WRB (bad) 
  4275bd:	fidiv  WORD PTR [rbp-0x18bbbe6c]
  4275c3:	sbb    al,0x8a
  4275c5:	rex.X loop 0x427583
  4275c8:	xchg   esi,eax
  4275c9:	mov    ecx,DWORD PTR fs:[rcx+0x7a7d1cd1]
  4275d0:	mov    ecx,DWORD PTR [rsi+0x11]
  4275d3:	mov    DWORD PTR [rax-0xc97307],edx
  4275d9:	mov    ?,WORD PTR [rdx]
  4275db:	fsub   QWORD PTR [rdi+0x21]
  4275de:	clc    
  4275df:	(bad)
  4275e2:	shl    BYTE PTR [rdx+0x7083c08e],0xba
  4275e9:	sar    DWORD PTR [rdi+0x4aa4c491],1
  4275ef:	rex.R jnp 0x427606
  4275f2:	int3   
  4275f3:	(bad)  
  4275f4:	sbb    ebp,DWORD PTR [rbp-0x2ee1396b]
  4275fa:	sbb    ebp,DWORD PTR [rdx]
  4275fc:	frstor [rax+0x2378aafd]
  427602:	mov    dh,0x8b
  427604:	jae    0x4275ae
  427606:	xchg   ebx,eax
  427607:	(bad)  
  427608:	movsxd esi,ebp
  42760a:	mov    edx,DWORD PTR [rdi+rbp*2+0x2f8e55b2]
  427611:	ins    DWORD PTR es:[rdi],dx
  427612:	cmc    
  427613:	test   DWORD PTR [rcx],edi
  427615:	and    DWORD PTR [rdi],esi
  427617:	mov    DWORD PTR [rdi-0x76],esi
  42761a:	ret    0x9664
  42761d:	sub    DWORD PTR [rsi+0x392bd617],ebx
  427623:	(bad)  
  427624:	cmp    bl,ch
  427626:	sub    DWORD PTR [rdi],esi
  427628:	lods   al,BYTE PTR ds:[rsi]
  427629:	add    eax,0x29a9c25c
  42762e:	ins    DWORD PTR es:[rdi],dx
  42762f:	(bad)  
  427631:	sub    eax,0x396b3ea3
  427636:	cs push 0xffffffffffffff91
  427639:	cmp    BYTE PTR [rbx-0x7f49a2a4],ah
  42763f:	std    
  427640:	push   0x78b269d5
  427645:	push   rsp
  427646:	(bad)  
  427647:	push   rcx
  427648:	and    al,0x3a
  42764a:	mov    dh,0x6c
  42764c:	fnsave [rbx+0x72]
  42764f:	fisubr WORD PTR [rbx+rbp*4+0x72]
  427653:	imul   ecx,DWORD PTR [rsi-0x407a188],0xebba8d3d
  42765d:	pop    rax
  42765e:	sub    BYTE PTR [rip+0xffffffff92484287],ah        # 0xffffffff928ab8eb
  427664:	int    0xee
  427666:	sti    
  427667:	(bad)  [rdi+0xc]
  42766a:	lea    edx,[rcx+rbx*8-0x497592b6]
  427671:	movabs al,ds:0x78a97bab0a03b6d5
  42767a:	out    0xc0,eax
  42767c:	mov    dl,0x3e
  42767e:	pop    rcx
  42767f:	(bad)  
  427680:	jne    0x427637
  427682:	shl    DWORD PTR [rip+0xae01b00],cl        # 0xb229188
  427688:	cmovg  esp,DWORD PTR [rdx]
  42768b:	xor    cl,BYTE PTR [rbx]
  42768d:	(bad)  
  42768e:	ds adc al,al
  427691:	or     bl,cl
  427693:	jmp    0x427625
  427695:	mov    eax,0x4b03c6ae
  42769a:	xor    al,0xcd
  42769c:	push   rdx
  42769d:	out    0x36,eax
  42769f:	loope  0x4276f7
  4276a1:	sbb    ah,BYTE PTR [rdi+0x61]
  4276a4:	jae    0x427662
  4276a6:	mov    BYTE PTR [rcx-0x1a7402b7],dl
  4276ac:	mov    bh,0x56
  4276ae:	and    al,0x2a
  4276b0:	rex.WB mov r13b,0xf0
  4276b3:	rex.W pop rbx
  4276b5:	pop    rsi
  4276b6:	push   rbx
  4276b7:	loop   0x4276bb
  4276b9:	je     0x427697
  4276bb:	sub    al,0x2b
  4276bd:	mov    DWORD PTR [rsi+rax*4+0x1d3d31c9],edi
  4276c4:	ss hlt 
  4276c6:	(bad)  
  4276c7:	mov    ah,0x40
  4276c9:	hlt    
  4276ca:	ss (bad) 
  4276cc:	ins    DWORD PTR es:[rdi],dx
  4276cd:	xor    DWORD PTR [rdi-0x6988f700],edx
  4276d3:	in     al,dx
  4276d4:	cmp    eax,0x829636f1
  4276d9:	int3   
  4276da:	(bad)  
  4276db:	or     ch,BYTE PTR [rip+0xffffffffaaee291f]        # 0xffffffffab30a000
  4276e1:	ins    DWORD PTR es:[rdi],dx
  4276e2:	es mov ebp,0x1e3959eb
  4276e8:	fwait
  4276e9:	xchg   ecx,eax
  4276ea:	not    DWORD PTR [rdi+rcx*2+0x31]
  4276ee:	fisttp WORD PTR [rsi]
  4276f0:	pop    rsp
  4276f1:	rex.X jle 0x427743
  4276f4:	shr    dl,cl
  4276f6:	sbb    ch,dh
  4276f8:	mov    dh,0x3e
  4276fa:	sub    al,0x7
  4276fc:	mov    DWORD PTR ss:[rax+0x5bf28e17],ebp
  427703:	(bad)  
  427704:	scas   eax,DWORD PTR es:[rdi]
  427705:	and    eax,0xd3722e8
  42770a:	mov    ebx,0xa416ed3f
  42770f:	mov    cl,0x79
  427711:	cwde   
  427712:	movabs ds:0x84bddaa7e85d998c,eax
  42771b:	sub    esp,DWORD PTR [rbp+rbp*4+0x2228392e]
  427722:	or     al,0x82
  427724:	rex.WXB
  427725:	rex.W push rbx
  427727:	repz mov al,0x9a
  42772a:	sbb    DWORD PTR [rdi+0x41],ecx
  42772d:	jnp    0x42776f
  42772f:	mov    ebp,0xf63fa6ff
  427734:	cli    
  427735:	hlt    
  427736:	(bad)  
  427738:	jg     0x42772e
  42773a:	mov    ah,0x4e
  42773c:	cld    
  42773d:	fstp   st(5)
  42773f:	fst    QWORD PTR [rax+0x8]
  427742:	mov    edx,0x36c96686
  427747:	rex.X
  427748:	lock sub eax,0xf8ae4125
  42774e:	shl    BYTE PTR [rbp-0x2e],0xcb
  427752:	out    0xd7,eax
  427754:	(bad)  
  427755:	out    dx,al
  427756:	or     eax,0x777776f6
  42775b:	jg     0x42777b
  42775d:	cs push 0xffffffffacd0af7e
  427763:	stc    
  427764:	scas   eax,DWORD PTR es:[rdi]
  427765:	fucomip st,st(4)
  427767:	(bad)  
  427768:	mul    DWORD PTR [rdi+riz*1-0x66]
  42776c:	push   rdi
  42776d:	(bad)  
  42776e:	mov    edi,0xc0faf573
  427773:	hlt    
  427774:	(bad)  
  427775:	cmp    edi,ecx
  427777:	rcl    BYTE PTR [rbx],0x32
  42777a:	in     al,dx
  42777b:	(bad)  [rbx+rdx*1+0x1f]
  42777f:	cli    
  427780:	fst    QWORD PTR [rip+0xffffffff915370fb]        # 0xffffffff9195e881
  427786:	(bad)  
  427787:	lock fst DWORD PTR [rbx+0x5584fdfd]
  42778e:	(bad)  
  42778f:	rex.RX mov BYTE PTR [rdx+0x1a489d83],r14b
  427796:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  427797:	and    al,BYTE PTR [rdx]
  427799:	fbld   TBYTE PTR [rsi+0x54]
  42779c:	(bad)  
  42779d:	xchg   edx,eax
  42779e:	(bad)  
  42779f:	out    0xb1,eax
  4277a1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4277a2:	fmul   QWORD PTR [rbp-0x7a]
  4277a5:	add    cl,ah
  4277a7:	(bad)  
  4277a8:	jae    0x4277ca
  4277aa:	cdq    
  4277ab:	mov    edx,edx
  4277ad:	pop    rsp
  4277ae:	in     eax,0xe5
  4277b0:	hlt    
  4277b1:	fidiv  WORD PTR [rbp-0x66edfa56]
  4277b7:	mov    ch,0xd8
  4277b9:	stos   DWORD PTR es:[rdi],eax
  4277ba:	ficom  WORD PTR [rbp+0x4022ab8a]
  4277c0:	hlt    
  4277c1:	or     bl,dl
  4277c3:	adc    esi,edi
  4277c5:	sbb    al,0x92
  4277c7:	lock mov edx,DWORD PTR [rdx+0x78]
  4277cb:	stc    
  4277cc:	loope  0x427819
  4277ce:	mov    esi,0x8f42565a
  4277d3:	(bad)  
  4277d4:	out    0xfb,eax
  4277d6:	pop    rbp
  4277d7:	fisubr DWORD PTR [rdx]
  4277d9:	test   DWORD PTR [rbx+0x33],ecx
  4277dc:	(bad)  
  4277dd:	sar    ah,cl
  4277df:	addr32 push rbp
  4277e1:	and    eax,0x692e521d
  4277e6:	(bad)  
  4277e7:	loope  0x427811
  4277e9:	pop    rsp
  4277ea:	gs int 0xe4
  4277ed:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4277ee:	rex.WXB add QWORD PTR [r10],0x7b7a6e19
  4277f5:	movsxd eax,DWORD PTR [rsi]
  4277f7:	je     0x427868
  4277f9:	sub    eax,DWORD PTR [rax+0x44]
  4277fc:	leave  
  4277fd:	push   0x4b
  4277ff:	jnp    0x4277e3
  427801:	rex.WRB xchg r11,rax
  427803:	(bad)  
  427804:	(bad)  
  427805:	and    eax,0x7ea9c565
  42780a:	(bad)
  42780d:	mov    eax,0xc64be399
  427812:	div    edx
  427814:	pop    rdx
  427815:	mov    cl,0xe8
  427817:	xchg   ebx,eax
  427818:	fwait
  427819:	ins    BYTE PTR es:[rdi],dx
  42781a:	xor    dh,BYTE PTR cs:[rbx+0x4b]
  42781e:	sub    ebx,DWORD PTR [rax-0x9f09b09]
  427824:	and    al,BYTE PTR [rdx+rdx*8]
  427827:	mov    ebp,0x1995fd2b
  42782c:	leave  
  42782d:	cmp    ebx,DWORD PTR ss:[rsi-0x23]
  427831:	rex.RB (bad) 
  427833:	sbb    al,0x7a
  427835:	xlat   BYTE PTR ds:[rbx]
  427836:	rex.WXB xor bl,BYTE PTR [rip+0x28dca9c7]        # 0x291f2204
  42783d:	(bad)  
  42783e:	(bad)  
  42783f:	xor    BYTE PTR [rbx+rax*2-0x33af73f5],cl
  427846:	sub    bl,BYTE PTR [rbx+riz*2-0xb]
  42784a:	jb     0x427888
  42784c:	adc    ch,bl
  42784e:	(bad)  
  42784f:	cmp    eax,0x4e83c042
  427854:	jmp    0x427841
  427856:	xchg   ebx,eax
  427857:	and    esp,DWORD PTR [rdx]
  427859:	xor    eax,0xe044e144
  42785e:	(bad)  
  42785f:	int3   
  427860:	(bad)  
  427861:	add    al,0x3e
  427863:	nop    DWORD PTR [rsi]
  427866:	or     esp,eax
  427868:	xchg   dl,bl
  42786a:	cmp    ch,BYTE PTR [rdi+0x51]
  42786d:	ins    BYTE PTR es:[rdi],dx
  42786e:	push   rbp
  42786f:	(bad)  
  427870:	push   rdi
  427871:	test   eax,0x94b6fd0b
  427876:	mov    edi,0x159bc7be
  42787b:	and    DWORD PTR [rsp+rbp*2],ebx
  42787e:	jmp    0xfffffffffe9caf0c
  427883:	hlt    
  427884:	fnstenv [rax-0x69]
  427887:	xchg   eax,ebp
  427889:	or     bl,bh
  42788b:	adc    eax,0x4f1f092e
  427890:	sub    eax,0xae91374
  427895:	stos   BYTE PTR es:[rdi],al
  427896:	sbb    al,0xed
  427898:	rex.WX (bad) 
  42789a:	(bad)  
  42789b:	jbe    0x4278b2
  42789d:	(bad)  
  42789e:	cmp    cl,dl
  4278a0:	fistp  QWORD PTR [rdx+0x21]
  4278a3:	cld    
  4278a4:	(bad)  
  4278a5:	and    al,BYTE PTR [rdx+0x79717b7a]
  4278ab:	adc    BYTE PTR [rsi+0x69],0x53
  4278af:	sub    DWORD PTR [rbx-0x2dd5a687],edi
  4278b5:	cdq    
  4278b6:	test   DWORD PTR [rax+0xc],esi
  4278b9:	mov    cl,0x2a
  4278bb:	jnp    0x4278ff
  4278bd:	sbb    BYTE PTR [rbx],0x7d
  4278c0:	rex.RXB push r15
  4278c2:	pop    rax
  4278c3:	shr    BYTE PTR [rip+0x60963720],cl        # 0x60d8afe9
  4278c9:	inc    DWORD PTR [rax+0x2a]
  4278cc:	in     eax,dx
  4278cd:	pop    rax
  4278ce:	pop    rcx
  4278cf:	movsxd ebx,DWORD PTR [rdx]
  4278d1:	rex.WX rol BYTE PTR [rip+0xa4af839],0x3        # 0xa8d7112
  4278d9:	mov    al,0xa6
  4278db:	sbb    al,0x43
  4278dd:	pop    rdi
  4278de:	(bad)  
  4278df:	sub    eax,0x42f82db7
  4278e4:	int3   
  4278e5:	push   rdi
  4278e6:	stos   DWORD PTR es:[rdi],eax
  4278e7:	ja     0x42788b
  4278e9:	(bad)  
  4278ea:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4278eb:	xchg   esp,eax
  4278ec:	int    0x6c
  4278ee:	cmp    ah,BYTE PTR [rbp+0x24]
  4278f1:	add    dl,BYTE PTR [rax-0x346ea21]
  4278f7:	cmp    al,0x88
  4278f9:	ins    DWORD PTR es:[rdi],dx
  4278fa:	retf   0x1ebb
  4278fd:	jnp    0x4278ff
  4278ff:	(bad)  
  427900:	(bad)  
  427901:	cld    
  427902:	push   rbx
  427903:	mov    ebp,0xfa1f933f
  427908:	(bad)  
  427909:	(bad)  
  42790a:	outs   dx,DWORD PTR ds:[rsi]
  42790b:	fcomp  DWORD PTR [rsi+0x61e518d4]
  427911:	int    0xf2
  427913:	lods   eax,DWORD PTR ds:[rsi]
  427914:	ins    DWORD PTR es:[rdi],dx
  427915:	(bad)  
  427916:	mov    BYTE PTR [rbx+riz*1-0x47],cl
  42791a:	lahf   
  42791b:	jge    0x427987
  42791d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  42791e:	sub    BYTE PTR [rbx],ah
  427920:	enter  0x8bf2,0x27
  427924:	sti    
  427925:	rex.WB jge 0x427997
  427928:	je     0x4278b2
  42792a:	mov    ecx,0xeadd093f
  42792f:	or     BYTE PTR [rcx-0x11],dl
  427932:	jnp    0x4278bf
  427934:	loop   0x4278cb
  427936:	rex.RB xlat BYTE PTR ds:[rbx]
  427938:	jnp    0x4279b4
  42793a:	in     eax,0x10
  42793c:	scas   eax,DWORD PTR es:[rdi]
  42793d:	or     BYTE PTR [rcx],ah
  42793f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  427940:	(bad)  
  427941:	nop
  427942:	(bad)  
  427943:	push   rcx
  427944:	jb     0x4278e9
  427946:	push   rsp
  427947:	and    DWORD PTR [rsi],esi
  427949:	sahf   
  42794a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  42794b:	(bad)
  42794e:	sub    bl,dl
  427950:	push   0xffffffffd6444fa8
  427955:	mov    ebp,fs
  427957:	jbe    0x427998
  427959:	adc    al,0xef
  42795b:	sbb    eax,0x72d18c5f
  427960:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  427961:	data16 xlat BYTE PTR ds:[rbx]
  427963:	push   rbp
  427964:	cmp    cl,0xfe
  427967:	(bad)  
  427968:	(bad)  
  427969:	(bad)  
  42796a:	sar    DWORD PTR [rcx+0x7e3e0575],1
  427970:	mov    edi,0x6752d870
  427975:	fisttp QWORD PTR [rax+0x68]
  427978:	repz fild WORD PTR [rbx]
  42797b:	lea    esi,[rax]
  42797d:	lods   al,BYTE PTR ds:[rsi]
  42797e:	stos   DWORD PTR es:[rdi],eax
  42797f:	jp     0x427907
  427981:	(bad)  
  427982:	ins    DWORD PTR es:[rdi],dx
  427983:	sub    eax,0xf0931b06
  427988:	fnstenv [rbp+0x71739b59]
  42798e:	nop
  42798f:	sbb    BYTE PTR [rsi],bl
  427991:	jp     0x42792b
  427993:	pushf  
  427994:	cmp    ebx,esp
  427996:	mov    cl,0xe8
  427998:	cmp    DWORD PTR [rdx+riz*4-0x57],0x26
  42799d:	(bad)  
  42799e:	cmp    ah,dl
  4279a0:	out    dx,eax
  4279a1:	add    ebp,DWORD PTR [rip+0x402d1394]        # 0x406f8d3b
  4279a7:	or     al,0x8d
  4279a9:	(bad)  
  4279aa:	push   rbp
  4279ab:	ja     0x42799b
  4279ad:	popf   
  4279ae:	sahf   
  4279af:	out    0x5d,eax
  4279b1:	rex.WR jecxz 0x4279a1
  4279b5:	fs scas eax,DWORD PTR es:[rdi]
  4279b7:	xchg   ecx,eax
  4279b8:	and    al,ah
  4279ba:	ja     0x427948
  4279bc:	in     al,dx
  4279bd:	rol    BYTE PTR [rax],cl
  4279bf:	sbb    al,ah
  4279c1:	or     DWORD PTR [rax-0x383a2d6e],0x2b
  4279c8:	in     eax,0xb0
  4279ca:	(bad)  
  4279cb:	xor    esi,DWORD PTR [rbx-0x1]
  4279ce:	adc    DWORD PTR [rcx],edi
  4279d0:	je     0x427a2b
  4279d2:	fcomp  st(2)
  4279d4:	movabs eax,ds:0xfd1657109432044
  4279dd:	push   rdx
  4279de:	xor    cl,al
  4279e0:	jmp    0x427a0d
  4279e2:	cs mov cl,BYTE PTR es:[rdx-0x31]
  4279e7:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4279e8:	mov    al,0x80
  4279ea:	gs (bad) 
  4279ec:	rex.WRXB stc 
  4279ee:	rex.WRB fisttp QWORD PTR [r10+0x300fe3ee]
  4279f5:	movabs al,ds:0x7d76d9862e9e7f33
  4279fe:	xchg   ch,cl
  427a00:	(bad)  
  427a01:	sub    DWORD PTR [rcx-0x8],esi
  427a04:	call   0xfffffffff5eee588
  427a09:	lods   al,BYTE PTR ds:[rsi]
  427a0a:	sub    ch,bl
  427a0c:	in     al,0xbb
  427a0e:	sbb    ch,BYTE PTR [edx]
  427a11:	xchg   esi,eax
  427a12:	jb     0x427a1e
  427a14:	jb     0x427a4d
  427a16:	pop    rcx
  427a17:	mov    ebp,0x7895defc
  427a1c:	mov    bh,BYTE PTR [rdx+0x4ea7344d]
  427a22:	pop    rdi
  427a23:	imul   DWORD PTR [rdi]
  427a25:	test   eax,0x5ec848ee
  427a2a:	(bad)  
  427a2b:	repnz adc al,BYTE PTR [rbp+0x722aca6c]
  427a32:	fistp  QWORD PTR [rcx]
  427a34:	(bad)  
  427a35:	je     0x427a8e
  427a37:	mov    edi,0x8c3f4a9b
  427a3c:	test   eax,0x5d41eb4
  427a41:	fcomi  st,st(1)
  427a43:	in     al,0x32
  427a45:	(bad)  
  427a46:	(bad)  
  427a47:	rcl    al,0xee
  427a4a:	mov    BYTE PTR [rax],ah
  427a4c:	clc    
  427a4d:	rex.WR movabs rax,0x844e96ba3a7e8900
  427a57:	mov    ?,esp
  427a59:	mov    bh,dl
  427a5b:	xchg   BYTE PTR [rsi+0x6031ba66],ch
  427a61:	clc    
  427a62:	(bad)
  427a65:	test   BYTE PTR [rip+0xffffffffe9e5dde7],dh        # 0xffffffffea285852
  427a6b:	pop    rbx
  427a6c:	or     esi,edi
  427a6e:	mov    edx,0xceaa09f5
  427a73:	leave  
  427a74:	(bad)  
  427a75:	movsxd r9,DWORD PTR [rcx+rcx*2]
  427a79:	fisub  WORD PTR [rax+rbp*1-0x1e]
  427a7d:	xchg   ebx,eax
  427a7e:	rol    DWORD PTR [rax+rbp*2+0x282fada],cl
  427a85:	scas   eax,DWORD PTR es:[rdi]
  427a86:	add    al,0x4b
  427a88:	test   al,0x26
  427a8a:	(bad)  
  427a8b:	rex.WR push 0xffffffffffffffc4
  427a8e:	mov    ebx,0x1a8b7049
  427a93:	jle    0x427a97
  427a95:	cwde   
  427a96:	iret   
  427a97:	rex.RX rcl BYTE PTR [rax+0x39],1
  427a9b:	(bad)  
  427a9c:	rex.RXB (bad) 
  427a9e:	sbb    ebp,esi
  427aa0:	jmp    0x427a54
  427aa2:	jae    0x427b08
  427aa4:	cld    
  427aa5:	add    eax,0x14c86da3
  427aaa:	rex.WRB leave 
  427aac:	jmp    0x427aa0
  427aae:	scas   al,BYTE PTR es:[rdi]
  427aaf:	sbb    BYTE PTR [rdx+rdx*1+0x2d393c28],bl
  427ab6:	scas   eax,DWORD PTR es:[rdi]
  427ab7:	int    0x54
  427ab9:	mov    ebp,0xeff25a8b
  427abe:	iret   
  427abf:	fbld   TBYTE PTR [rip+0xffffffff9389245b]        # 0xffffffff93cb9f20
  427ac5:	jae    0x427a62
  427ac7:	cmp    al,0x4c
  427ac9:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
  427acb:	mov    edx,edx
  427acd:	imul   eax,esp,0x9bd71be1
  427ad3:	jle    0x427b47
  427ad5:	cld    
  427ad6:	ret    
  427ad7:	loope  0x427ab4
  427ad9:	repz shl ebx,cl
  427adc:	lahf   
  427add:	cmp    BYTE PTR [rdx+0x1b],cl
  427ae0:	or     al,0x87
  427ae2:	jle    0x427ae0
  427ae4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  427ae5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  427ae6:	test   ebx,eax
  427ae8:	imul   ecx,DWORD PTR [rdi-0x2f],0x27
  427aec:	ror    DWORD PTR [rdi-0x7f4d2a05],cl
  427af2:	(bad)  
  427af3:	(bad)  
  427af4:	outs   dx,BYTE PTR ds:[rsi]
  427af5:	rcl    ecx,0xe8
  427af8:	cld    
  427af9:	fs and ch,ah
  427afc:	ret    
  427afd:	test   ch,dh
  427aff:	cwde   
  427b00:	rex.WXB
  427b01:	rex.WRX jrcxz 0x427b18
  427b04:	or     ebp,DWORD PTR [rdi-0x7f9e482a]
  427b0a:	rex.X
  427b0b:	rex.WRXB
  427b0c:	rex.R (bad) 
  427b0e:	jns    0x427ab7
  427b10:	cmp    BYTE PTR fs:[rbp-0x54],bh
  427b14:	cmp    ch,bl
  427b16:	icebp  
  427b17:	scas   eax,DWORD PTR es:[rdi]
  427b18:	repz imul eax,DWORD PTR [rcx+rbx*1],0xffffffda
  427b1d:	sti    
  427b1e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  427b1f:	rcr    DWORD PTR [rdx-0x7df64b9c],1
  427b25:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  427b26:	jp     0x427b1a
  427b28:	rex.R fiadd DWORD PTR [rax]
  427b2b:	(bad)  
  427b2c:	popf   
  427b2d:	int    0xd8
  427b2f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  427b30:	mov    ch,0x52
  427b32:	mov    es,WORD PTR [rdx]
  427b34:	rex.WRX (bad) 
  427b36:	gs and al,0x34
  427b39:	pop    rbx
  427b3a:	adc    BYTE PTR [rsi],bh
  427b3c:	adc    DWORD PTR [rbx+rbx*8-0x28],esi
  427b40:	(bad)  
  427b41:	ins    BYTE PTR es:[rdi],dx
  427b42:	(bad)  
  427b43:	cmp    eax,0xcb08f795
  427b48:	(bad)  
  427b49:	mov    ecx,0x3870ac64
  427b4e:	xor    BYTE PTR [rsi-0x6],dh
  427b51:	xor    bh,BYTE PTR [rcx]
  427b53:	call   0xffffffff895a0a55
  427b58:	out    dx,eax
  427b59:	std    
  427b5a:	mov    edx,eax
  427b5c:	xor    ecx,DWORD PTR [rdx+0x14]
  427b5f:	rex.RB fld QWORD PTR [r11-0x3538c364]
  427b66:	lods   eax,DWORD PTR ds:[rsi]
  427b67:	jp     0x427bc9
  427b69:	fdivr  st,st(7)
  427b6b:	imul   ecx,DWORD PTR [rsi-0x59dbdf46],0x7d7978d9
  427b75:	sbb    eax,0xf943b1c9
  427b7a:	imul   DWORD PTR [rbx+riz*2]
  427b7d:	enter  0xd1b5,0x5a
  427b81:	test   al,0x8
  427b83:	mov    ?,eax
  427b85:	jne    0x427b54
  427b87:	sbb    BYTE PTR [rdx-0x78],bh
  427b8a:	push   rdi
  427b8b:	mov    DWORD PTR [rdx+0x5d],ecx
  427b8e:	rex.WRX jnp 0x427be5
  427b91:	sbb    BYTE PTR [rsi],al
  427b93:	pop    rsi
  427b94:	imul   edx,esp,0xc39b0b65
  427b9a:	pop    rsp
  427b9b:	ins    DWORD PTR es:[rdi],dx
  427b9c:	jle    0x427b4f
  427b9e:	sub    DWORD PTR [rcx-0x3723614a],eax
  427ba4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  427ba5:	shl    esp,1
  427ba7:	pop    rax
  427ba8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  427ba9:	movabs eax,ds:0x5f37e2737bd4ae52
  427bb2:	outs   dx,BYTE PTR ds:[rsi]
  427bb3:	repnz movabs al,es:0x3ec24f783815d93e
  427bbe:	pop    rdx
  427bbf:	or     BYTE PTR [rsi+0x56],dl
  427bc2:	pop    rdi
  427bc3:	lock (bad) 
  427bc5:	(bad)  
  427bc6:	stc    
  427bc7:	je     0x427b63
  427bc9:	mov    DWORD PTR [rdi+0x39689884],esp
  427bcf:	pop    rcx
  427bd0:	lahf   
  427bd1:	add    ecx,DWORD PTR [rbx-0x23]
  427bd4:	mov    ebp,DWORD PTR [rcx-0x14168c2b]
  427bda:	jg     0x427c44
  427bdc:	pop    rdi
  427bdd:	cmp    eax,0x5372769a
  427be2:	cmp    esi,esi
  427be4:	(bad)  
  427be5:	xor    ebx,edx
  427be7:	jl     0x427bb0
  427be9:	xchg   esi,eax
  427bea:	fwait
  427beb:	jbe    0x427c16
  427bed:	(bad)  
  427bef:	xor    BYTE PTR [rdi-0x4a56e460],dl
  427bf5:	sub    BYTE PTR [rdx-0x66],dh
  427bf8:	adc    eax,0x399cb35a
  427bfd:	push   0x23bc4553
  427c02:	(bad)  
  427c03:	adc    DWORD PTR [rdx-0x4efa874c],edi
  427c09:	jns    0x427bb3
  427c0b:	(bad)  
  427c0c:	pop    rsi
  427c0d:	rex.RB jl 0x427b91
  427c10:	pop    rsp
  427c11:	mov    ch,0x83
  427c13:	js     0x427c7b
  427c15:	push   rdi
  427c16:	popf   
  427c17:	push   rsp
  427c18:	jne    0x427c11
  427c1a:	mov    ecx,0x1e19c79d
  427c1f:	mov    ah,bl
  427c21:	and    bl,BYTE PTR [rbx+0xc]
  427c24:	pcmpgtd mm0,QWORD PTR [rip+0xffffffffeda2bf1c]        # 0xffffffffede53b47
  427c2b:	test   ebx,0x32e64314
  427c31:	gs mov cl,0xac
  427c34:	rol    DWORD PTR [rdx],0x90
  427c37:	xchg   esp,eax
  427c38:	cli    
  427c39:	icebp  
  427c3a:	xor    eax,DWORD PTR [rbp+0x6f5cc561]
  427c40:	add    bh,BYTE PTR ds:[rdx-0x11d4f433]
  427c47:	rex.WRB
  427c48:	lock cmp eax,0x6354c6ad
  427c4e:	(bad)  
  427c4f:	fdivr  QWORD PTR [rcx*1-0x2495d8a9]
  427c56:	inc    ch
  427c58:	push   rcx
  427c59:	cmp    eax,0x77f95751
  427c5e:	jb     0x427c0a
  427c60:	and    ah,BYTE PTR [rax-0x50]
  427c63:	xlat   BYTE PTR ds:[rbx]
  427c64:	adc    cl,BYTE PTR [rcx+rbp*2+0x55]
  427c68:	cdq    
  427c69:	movsxd eax,DWORD PTR [rbx+rsi*1-0x5]
  427c6d:	xchg   ecx,eax
  427c6e:	or     ah,BYTE PTR [rip+0xffffffffd1eb1c85]        # 0xffffffffd22d98f9
  427c74:	rex.XB hlt 
  427c76:	cmp    BYTE PTR [rdi-0x39e14839],al
  427c7c:	sub    eax,edi
  427c7e:	rex jne 0x427c42
  427c81:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  427c82:	ror    DWORD PTR [rbx+0x5282ca5d],cl
  427c88:	test   BYTE PTR [rbp-0x65],al
  427c8b:	and    ch,al
  427c8d:	adc    al,0xe7
  427c8f:	fisttp DWORD PTR [r14+0x7b70db84]
  427c96:	cmp    al,0xb1
  427c98:	in     eax,0x8e
  427c9a:	int3   
  427c9b:	xchg   ebx,eax
  427c9c:	push   rbp
  427c9d:	pop    rdx
  427c9e:	jno    0x427ca5
  427ca0:	and    dl,0xa3
  427ca3:	(bad)  
  427ca4:	pop    rsi
  427ca5:	mov    eax,0x5936616e
  427caa:	ss ins DWORD PTR es:[rdi],dx
  427cac:	movabs al,ds:0xb69745b6c927d7ae
  427cb5:	jo     0x427cc7
  427cb7:	(bad)  
  427cb8:	rex cmp edi,edx
  427cbb:	push   rsp
  427cbc:	leave  
  427cbd:	sbb    esi,0xffffffb6
  427cc0:	rex.R idiv BYTE PTR [rax]
  427cc3:	(bad)  
  427cc4:	movsxd esi,DWORD PTR [rbx+0x28]
  427cc7:	movsxd esi,DWORD PTR [rcx]
  427cc9:	cmp    ebp,ebp
  427ccb:	jb     0x427c62
  427ccd:	mov    cl,0x83
  427ccf:	int    0x5
  427cd1:	mov    al,0xa3
  427cd3:	lahf   
  427cd4:	out    0x92,eax
  427cd6:	rex.WRB xchg r9,rax
  427cd8:	scas   eax,DWORD PTR es:[rdi]
  427cd9:	mov    edi,0xf78c6f61
  427cde:	jno    0x427cab
  427ce0:	shr    BYTE PTR [rsi+rcx*4],0x9a
  427ce4:	cmp    bh,BYTE PTR [rax]
  427ce6:	retf   0x97c1
  427ce9:	push   rcx
  427cea:	add    ecx,eax
  427cec:	or     BYTE PTR [rax],ch
  427cee:	pop    rbx
  427cef:	sub    eax,DWORD PTR [rbx+0x5f]
  427cf2:	(bad)  
  427cf3:	leave  
  427cf4:	nop    DWORD PTR [rdi+riz*1-0x19]
  427cf9:	mov    bh,0xcf
  427cfb:	(bad)
  427cfe:	cli    
  427cff:	(bad)  
  427d00:	fnstsw WORD PTR [rax-0x8]
  427d03:	xchg   ecx,eax
  427d04:	xchg   ebp,eax
  427d05:	clc    
  427d06:	shr    DWORD PTR [rax],0x3e
  427d09:	push   rsi
  427d0a:	jrcxz  0x427cb3
  427d0c:	out    0x8f,al
  427d0e:	outs   dx,DWORD PTR ds:[rsi]
  427d0f:	jmp    0x1278a8a3
  427d14:	and    eax,0x733d9f77
  427d19:	loope  0x427cf1
  427d1b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  427d1c:	cmp    al,0x95
  427d1e:	(bad)  
  427d1f:	rex.WRXB jbe 0x427d23
  427d22:	(bad)  
  427d23:	xchg   ebx,eax
  427d24:	loopne 0x427cfa
  427d26:	xchg   esp,eax
  427d27:	call   0xffffffffa196b01b
  427d2c:	jmp    FWORD PTR [rdx+0x33]
  427d2f:	fs sub al,0x91
  427d32:	push   0x1b
  427d34:	add    al,0xae
  427d36:	in     al,0x7f
  427d38:	and    al,0x69
  427d3a:	rex.RX pushf 
  427d3c:	fild   WORD PTR es:[rdi+0x6cc46217]
  427d43:	cmc    
  427d44:	gs or  al,0xe5
  427d47:	outs   dx,BYTE PTR ds:[rsi]
  427d48:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  427d49:	(bad)  
  427d4a:	out    dx,eax
  427d4b:	adc    al,0x9b
  427d4d:	rol    DWORD PTR [rdx],1
  427d4f:	pop    rbx
  427d50:	or     DWORD PTR [rdx],ecx
  427d52:	mov    esi,0x11ac2dcc
  427d57:	xchg   esi,eax
  427d58:	xchg   ecx,eax
  427d59:	or     eax,0x92c3b3f2
  427d5e:	(bad)  
  427d5f:	sbb    cl,bl
  427d61:	mov    bl,0x7c
  427d63:	rex.RB (bad) 
  427d65:	push   rsi
  427d66:	nop    DWORD PTR [rdi-0x462e0345]
  427d6d:	fcmovbe st,st(7)
  427d6f:	rex.WRX (bad) 
  427d71:	imul   edi,DWORD PTR [rdx+0x13d0d4a2],0xffffffe6
  427d78:	pop    rsp
  427d79:	push   rdx
  427d7a:	fdiv   DWORD PTR [rcx+rbp*4+0x5d]
  427d7e:	rex.WX (bad) 
  427d81:	push   0xffffffffffffffa5
  427d83:	add    ebp,DWORD PTR [rbx+0x39fa2b25]
  427d89:	(bad)  
  427d8a:	jbe    0x427da2
  427d8c:	in     al,0x71
  427d8e:	adc    BYTE PTR [rbx],cl
  427d90:	(bad)  
  427d91:	ins    DWORD PTR es:[rdi],dx
  427d92:	add    al,0x73
  427d94:	sahf   
  427d95:	int    0x29
  427d97:	sbb    al,0x62
  427d99:	outs   dx,DWORD PTR ds:[rsi]
  427d9a:	rex.RX (bad) 
  427d9c:	lods   eax,DWORD PTR ds:[rsi]
  427d9d:	es int 0x8a
  427da0:	ds mov bh,0xa2
  427da3:	ret    0x94f7
  427da6:	mov    ah,0x37
  427da8:	mov    edx,0x136d1965
  427dad:	push   rsp
  427dae:	mov    edx,0x8befac3d
  427db3:	leave  
  427db4:	int    0xeb
  427db6:	ja     0x427d5b
  427db8:	push   rbp
  427db9:	push   rbp
  427dba:	mov    esi,0xd3c383db
  427dbf:	rex.RX or r12d,DWORD PTR [rcx+0x3818c0bd]
  427dc6:	movabs eax,ds:0xbc6dfbd0f79320c9
  427dcf:	mov    ecx,0x39d62bf6
  427dd4:	rex.R (bad) 
  427dd6:	add    eax,0x3c51714b
  427ddb:	loope  0x427d66
  427ddd:	(bad)  
  427dde:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  427ddf:	je     0x427df7
  427de1:	fdiv   DWORD PTR [rbp+0x3b30aab2]
  427de7:	test   DWORD PTR [rax],edx
  427de9:	push   rax
  427dea:	add    DWORD PTR [rip+0x5e1e562d],0xffffffa8        # 0x5e60d41e
  427df1:	mov    ebx,0xa87fc1af
  427df6:	jg     0x427df4
  427df8:	xchg   edx,eax
  427df9:	gs movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  427dfc:	xor    ah,dl
  427dfe:	jmp    0x427e2a
  427e00:	mov    dl,0xe7
  427e02:	sbb    eax,0x10178890
  427e07:	xor    al,0x5b
  427e09:	jne    0x427e51
  427e0b:	scas   eax,DWORD PTR es:[rdi]
  427e0c:	repz cs in eax,dx
  427e0f:	retf   
  427e10:	(bad)
  427e14:	push   rbp
  427e15:	rex.XB xor sil,BYTE PTR [r11-0x4e]
  427e19:	push   rbp
  427e1b:	push   rdi
  427e1c:	loope  0x427e0b
  427e1e:	stc    
  427e1f:	cli    
  427e20:	fisttp QWORD PTR [rdx+0x66fd1cf]
  427e26:	mov    bh,BYTE PTR [rcx+0x16]
  427e29:	(bad)  
  427e2a:	rcl    BYTE PTR [rbx-0x18],0xc3
  427e2e:	mov    ecx,0x78ac5a10
  427e33:	(bad)  
  427e34:	xchg   esp,eax
  427e35:	xor    ebp,ebx
  427e37:	add    DWORD PTR [rcx],ebp
  427e39:	(bad)  
  427e3a:	sahf   
  427e3b:	nop
  427e3c:	(bad)  
  427e3d:	(bad)  
  427e3e:	sub    BYTE PTR ds:[rax-0x29],al
  427e42:	adc    eax,0x8081d7f5
  427e47:	sbb    eax,0x5dabe71
  427e4c:	rex.RXB test r14b,0x45
  427e50:	adc    esi,ebx
  427e52:	pop    rsi
  427e53:	mov    bh,0x46
  427e55:	icebp  
  427e56:	out    0x48,al
  427e58:	mov    esi,0x4984f2c5
  427e5d:	sub    al,0xec
  427e5f:	repz (bad) 
  427e61:	cmp    edi,ebx
  427e63:	(bad)  
  427e64:	mov    al,0x64
  427e66:	sub    ebx,0x6e6a638
  427e6c:	unpckhps xmm0,XMMWORD PTR [rdx+riz*1-0x73bdcb01]
  427e74:	jns    0x427e3b
  427e76:	outs   dx,BYTE PTR ds:[rsi]
  427e77:	rex.RX xor BYTE PTR [rdx+0x73b6d0a3],r11b
  427e7e:	(bad)  
  427e7f:	rex.WRXB (bad) 
  427e81:	(bad)
  427e85:	xor    ebp,ebx
  427e87:	leave  
  427e88:	rex.XB
  427e89:	fwait
  427e8a:	sub    DWORD PTR [rdi-0x450f53a0],ecx
  427e90:	mov    al,0xdf
  427e92:	jne    0x427e2f
  427e94:	jle    0x427f01
  427e96:	xchg   esp,eax
  427e97:	and    al,0xba
  427e99:	pop    rsp
  427e9a:	(bad)  
  427e9b:	mov    ebp,0x6485f549
  427ea0:	imul   ebp,DWORD PTR [rsi+rbp*4+0x6b],0x2f
  427ea5:	mov    bl,0x91
  427ea7:	push   rbp
  427ea8:	in     al,dx
  427ea9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  427eaa:	mov    WORD PTR [rbp-0x72],cs
  427ead:	(bad)  
  427eae:	imul   esp
  427eb0:	repz addr32 rex.WRXB mov r15b,0xb7
  427eb5:	sti    
  427eb6:	(bad)  
  427eb7:	movabs ds:0x9cf339a9318990c1,eax
  427ec0:	and    al,0x17
  427ec2:	(bad)  
  427ec3:	(bad)  
  427ec4:	int3   
  427ec5:	adc    al,0xdf
  427ec7:	xor    BYTE PTR [rax+0x2f],bl
  427ecb:	rex.WR movabs rsp,0x32445a3df4c7ba39
  427ed5:	shl    DWORD PTR [rcx],0xd0
  427ed8:	lods   eax,DWORD PTR ds:[rsi]
  427ed9:	and    DWORD PTR [rdi+rdx*4+0x4d],ecx
  427edd:	(bad)  
  427ede:	addps  xmm6,XMMWORD PTR [rdi]
  427ee1:	cld    
  427ee2:	rex.WX test rax,0xffffffffadedc5c0
  427ee8:	(bad)  
  427ee9:	mov    cl,BYTE PTR [rbx]
  427eeb:	mov    ecx,es
  427eed:	rex.WRX rcr BYTE PTR [rbx+0x3b50cc36],cl
  427ef4:	out    0x6b,eax
  427ef6:	movq   QWORD PTR [rax+0x7a973688],mm2
  427efd:	(bad)
  427f00:	repz in eax,0x78
  427f03:	data16 out dx,al
  427f05:	movabs al,ds:0x52e69c94f9ae9511
  427f0e:	(bad)  
  427f0f:	popf   
  427f10:	jne    0x427f82
  427f12:	pop    rbx
  427f13:	mov    bh,BYTE PTR [rsi+rbx*8]
  427f16:	adc    ecx,DWORD PTR [rbx+rdi*4-0x7c3b2e43]
  427f1d:	call   0x6b86cbf4
  427f22:	rex.WXB jp 0x427f30
  427f25:	(bad)  
  427f26:	adc    BYTE PTR [rip+0x1aac19c9],dl        # 0x1aee98f5
  427f2c:	fsub   DWORD PTR [rdi-0x47330954]
  427f32:	rcr    DWORD PTR [rip+0x60488829],0x24        # 0x608b0762
  427f39:	rex.RXB je 0x427f2e
  427f3c:	xchg   edx,eax
  427f3d:	push   rbp
  427f3e:	shr    DWORD PTR [rax],0x41
  427f41:	ds jae 0x427f7c
  427f44:	rex.WXB outs dx,BYTE PTR ds:[rsi]
  427f46:	xchg   ebp,eax
  427f47:	scas   eax,DWORD PTR es:[rdi]
  427f48:	xor    al,0x42
  427f4a:	std    
  427f4b:	xchg   bl,cl
  427f4d:	xchg   esi,eax
  427f4e:	or     esi,DWORD PTR [rbx]
  427f50:	xor    al,BYTE PTR [rdx+0x78a1966e]
  427f56:	adc    ecx,DWORD PTR [rcx]
  427f58:	mov    dl,0x0
  427f5a:	mov    ah,0xac
  427f5c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  427f5d:	jns    0x427f18
  427f5f:	or     eax,0xf3885271
  427f64:	xchg   ebp,eax
  427f65:	sub    edi,DWORD PTR [rsi+0x23]
  427f68:	and    edx,DWORD PTR [rbp+0x99c35dd]
  427f6e:	leave  
  427f6f:	pop    rsi
  427f70:	(bad)  
  427f71:	mov    bl,0xc8
  427f73:	lahf   
  427f74:	(bad)  
  427f75:	ret    
  427f76:	sub    edi,DWORD PTR [rax+0x48]
  427f79:	sub    bl,BYTE PTR [rdx-0x650c0320]
  427f7f:	mov    ebp,0x14beb755
  427f84:	clc    
  427f85:	pop    rax
  427f86:	and    al,BYTE PTR [rbp+0x3266660b]
  427f8c:	enter  0xed78,0x71
  427f90:	(bad)  
  427f91:	jp     0x427f5b
  427f93:	push   rsi
  427f94:	push   rcx
  427f95:	(bad)  
  427f97:	rex
  427f98:	addr32 push rsp
  427f9a:	mov    ebp,0x8ec38a9f
  427f9f:	fist   DWORD PTR [rsi-0x5396801e]
  427fa5:	mov    eax,0xf7b1f49b
  427faa:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  427fab:	ret    0x7a70
  427fae:	mov    DWORD PTR [rbx+rsi*2-0x7f],edx
  427fb2:	jns    0x427f63
  427fb4:	lock rex.WRXB (bad) [r14-0x1fb6e6cc]
  427fbc:	loop   0x427f46
  427fbe:	mov    ch,BYTE PTR ss:[rcx-0x60]
  427fc2:	mov    esp,0x41cbef64
  427fc7:	(bad)  
  427fc8:	stos   BYTE PTR es:[rdi],al
  427fc9:	jns    0x427fa5
  427fcb:	or     DWORD PTR [rax],esp
  427fcd:	out    dx,al
  427fce:	and    ebx,eax
  427fd0:	movabs eax,ds:0xf199a7713f4cfb2d
  427fd9:	or     ch,0x36
  427fdc:	jns    0x427f91
  427fde:	or     al,0xa5
  427fe0:	jrcxz  0x42803a
  427fe2:	frstor [rdx+0x7dc37848]
  427fe8:	rex.WX mov rsp,rcx
  427feb:	mov    dl,0xd2
  427fed:	(bad)  
  427fee:	(bad)  
  427fef:	adc    DWORD PTR [rsi-0x57],edx
  427ff2:	add    DWORD PTR [rbp-0x6c],ebx
  427ff5:	(bad)  
  427ff6:	data16 loop 0x42802b
  427ff9:	pushf  
  427ffa:	xchg   ebp,eax
  427ffb:	ja     0x427ffe
  427ffd:	repnz xchg esi,eax
  427fff:	add    rbx,r11
  428002:	mov    ebx,0x55020676
  428007:	fdiv   st(3),st
  428009:	outs   dx,DWORD PTR ds:[rsi]
  42800a:	std    
  42800b:	in     eax,0x7
  42800d:	(bad)  
  42800e:	test   eax,0x694ce87f
  428013:	push   0xffffffffaeb20d3f
  428018:	(bad)  
  428019:	add    al,0x27
  42801b:	jg     0x427fe1
  42801d:	lods   al,BYTE PTR ds:[rsi]
  42801e:	cld    
  42801f:	xchg   ebp,eax
  428020:	and    BYTE PTR [rcx],ch
  428022:	cmp    al,0x35
  428024:	sub    ah,ch
  428026:	rex.WRB or rax,0x156871fe
  42802c:	pop    rsi
  42802d:	imul   esp,DWORD PTR [riz*4-0x1a97eddc],0x77c0fbe3
  428038:	rex.R fcomi st,st(0)
  42803b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42803c:	movabs ds:0x28a57b63538fb4f,al
  428045:	rex.WXB
  428046:	rex.R mov cl,0xce
  428049:	stos   DWORD PTR es:[rdi],eax
  42804a:	clc    
  42804b:	push   rbx
  42804c:	and    eax,0xd18d8435
  428051:	(bad)  
  428052:	jp     0x4280a2
  428054:	(bad)  
  428055:	sbb    edi,edi
  428057:	cmp    al,0xb4
  428059:	add    BYTE PTR [rax],cl
  42805b:	sub    eax,0xf8d58073
  428060:	jrcxz  0x428002
  428062:	mov    esi,0x99cb8f9f
  428067:	in     al,dx
  428068:	jne    0x428098
  42806a:	rex.RXB
  42806b:	fwait
  42806c:	call   0x10a3f940
  428071:	fstp   DWORD PTR [rax]
  428073:	js     0x42809e
  428075:	mov    ch,bh
  428077:	sub    BYTE PTR [rcx],al
  428079:	(bad)  
  42807a:	sbb    ebp,DWORD PTR [rcx]
  42807c:	sub    BYTE PTR [rdi],dl
  42807e:	pop    rsp
  42807f:	jno    0x4280fe
  428081:	pop    rsi
  428082:	push   rsp
  428083:	sbb    eax,0x70c263fa
  428088:	sbb    al,0x56
  42808a:	xchg   DWORD PTR [rsi+0x39dd5af0],edx
  428090:	push   rdi
  428091:	in     eax,dx
  428092:	retf   0x8ddc
  428095:	(bad)  
  428096:	ss (bad) 
  428098:	stos   DWORD PTR es:[rdi],eax
  428099:	ret    
  42809a:	(bad)  
  42809b:	rex.WXB fistp WORD PTR [r8+r14*2-0x37f01883]
  4280a3:	adc    eax,0xe4b557e1
  4280a8:	repz and eax,0x73048fd
  4280ae:	(bad)  
  4280af:	sub    al,0x44
  4280b1:	dec    BYTE PTR [rcx*2+0x132a1e7]
  4280b8:	push   rdi
  4280b9:	jno    0x4280e4
  4280bb:	(bad)  
  4280bc:	(bad)  
  4280bd:	xor    edx,DWORD PTR [rcx]
  4280bf:	pop    rax
  4280c0:	fcomp  DWORD PTR [rsi+rbp*8]
  4280c3:	movabs al,ds:0x632c79703e947a9f
  4280cc:	repnz scas eax,DWORD PTR es:[rdi]
  4280ce:	outs   dx,DWORD PTR ds:[rsi]
  4280cf:	or     eax,0x16412a16
  4280d4:	out    0xa9,al
  4280d6:	xchg   esi,eax
  4280d7:	sbb    eax,0xcbd26564
  4280dc:	scas   al,BYTE PTR es:[rdi]
  4280dd:	in     al,0x4c
  4280df:	outs   dx,BYTE PTR ds:[rsi]
  4280e0:	mov    ?,WORD PTR [rsi]
  4280e2:	or     eax,0x518e6a1f
  4280e7:	cmp    eax,0x54088670
  4280ec:	(bad)  
  4280ed:	pushf  
  4280ee:	rex.WRXB stc 
  4280f0:	xchg   ebp,eax
  4280f1:	mov    ebp,0x36729b7e
  4280f6:	gs jl  0x4280ff
  4280f9:	mov    ch,0xfb
  4280fb:	rcr    BYTE PTR [rax+0x4b],0x46
  4280ff:	loop   0x4280b7
  428101:	(bad)  
  428102:	push   rdx
  428103:	(bad)  
  428104:	icebp  
  428105:	rex rol DWORD PTR [rcx+0x51],0xe8
  42810a:	jo     0x428189
  42810c:	jae    0x42813c
  42810e:	scas   al,BYTE PTR es:[rdi]
  42810f:	test   al,0xb5
  428111:	(bad)  
  428112:	push   rcx
  428113:	cmp    eax,0x16bc64a1
  428118:	cli    
  428119:	or     DWORD PTR [rax-0x2],edx
  42811c:	pushf  
  42811d:	jl     0x4280b9
  42811f:	xchg   ecx,eax
  428120:	fcom   DWORD PTR [rcx+0x12]
  428123:	adc    esi,DWORD PTR [rcx+0x2aad3b08]
  428129:	or     al,0xaa
  42812b:	(bad)  
  42812c:	(bad)  
  42812d:	sahf   
  42812e:	mov    ?,ebp
  428130:	int    0xad
  428132:	cs mov ebx,0x3e2cd575
  428138:	push   rax
  428139:	shl    DWORD PTR [rax+0x5d280ffb],1
  42813f:	jnp    0x42812a
  428141:	stc    
  428142:	fdivr  st(1),st
  428144:	add    ecx,DWORD PTR [rbp+rbp*1-0x29]
  428148:	rex.RX pop rbx
  42814a:	cs test al,0x1d
  42814d:	ins    BYTE PTR es:[rdi],dx
  42814e:	icebp  
  42814f:	pop    rcx
  428150:	leave  
  428151:	out    0xcc,al
  428153:	rex.XB ret 
  428155:	nop
  428156:	mov    BYTE PTR [rsi+0x44fcc040],bl
  42815c:	fsubr  DWORD PTR [rbp-0x2c0f2aca]
  428162:	movabs al,ds:0xdd9f5080ffb11463
  42816b:	rex.WR out 0xb2,al
  42816e:	leave  
  42816f:	sub    ch,BYTE PTR [rdx+0x3029dcde]
  428175:	cmp    ch,0xc4
  428178:	je     0x4281a0
  42817a:	adc    al,0xfb
  42817c:	mov    esi,edx
  42817e:	ss jne 0x42817f
  428181:	(bad)  
  428182:	out    dx,eax
  428183:	sub    BYTE PTR [rbx-0x2b],dh
  428186:	xchg   ebx,eax
  428187:	ror    DWORD PTR [rdi-0x1f],cl
  42818a:	(bad)  
  42818b:	or     BYTE PTR [rbx+rbx*4-0x3ef1ed92],dh
  428192:	(bad)  
  428194:	sahf   
  428195:	cmp    al,0x30
  428197:	rex.WRX adc bl,r8b
  42819a:	in     eax,dx
  42819b:	(bad)  
  42819c:	add    al,BYTE PTR [rdi+rcx*8-0x2d]
  4281a0:	(bad)  
  4281a2:	nop
  4281a3:	xchg   DWORD PTR [rax-0x6cfe7add],eax
  4281a9:	outs   dx,BYTE PTR ds:[rsi]
  4281aa:	js     0x4281bf
  4281ac:	jo     0x42821d
  4281ae:	and    eax,0x470a9891
  4281b3:	(bad)  
  4281b4:	scas   al,BYTE PTR es:[rdi]
  4281b5:	retf   0x8ae1
  4281b8:	cdq    
  4281b9:	(bad)  
  4281ba:	test   al,0x65
  4281bc:	ja     0x428224
  4281be:	ficom  DWORD PTR [rbx]
  4281c0:	and    dh,BYTE PTR [rbx]
  4281c2:	loop   0x42822e
  4281c4:	adc    BYTE PTR [rsi+0x30],al
  4281c7:	(bad)  
  4281c8:	rex.WB (bad) 
  4281ca:	jmp    FWORD PTR [rsi]
  4281cc:	push   rbx
  4281cd:	imul   esi,DWORD PTR [rcx+rcx*2+0x668560b9],0x71
  4281d5:	fistp  DWORD PTR [rsi]
  4281d7:	sbb    dh,BYTE PTR [rsi-0x71]
  4281da:	push   rdx
  4281db:	cmp    eax,0xcba3e3a2
  4281e0:	xchg   DWORD PTR [rdx+0x2cea2083],ebx
  4281e6:	clc    
  4281e7:	(bad)  
  4281e8:	stos   BYTE PTR es:[rdi],al
  4281e9:	add    eax,0xa4569d57
  4281ee:	(bad)  
  4281ef:	std    
  4281f0:	sub    al,0xb1
  4281f2:	mov    ch,BYTE PTR [rsi+0x3030a300]
  4281f8:	sub    eax,DWORD PTR [rbx-0x6bb6089a]
  4281fe:	sbb    esi,DWORD PTR [rax-0xc00c00d]
  428204:	iret   
  428205:	(bad)  
  428206:	cmc    
  428207:	loopne 0x428189
  428209:	mov    esp,0x7c2f90fc
  42820e:	loope  0x428285
  428210:	jb     0x428200
  428212:	push   rbp
  428213:	sbb    dh,BYTE PTR [rbx-0x5ce6ab8b]
  428219:	mov    DWORD PTR [rdx],esp
  42821b:	mov    bl,0x5a
  42821d:	(bad)  
  42821e:	mov    ah,0x7c
  428220:	js     0x428278
  428222:	(bad)  
  428223:	enter  0x6440,0xc3
  428227:	fldenv [rbx-0x7557e5f1]
  42822d:	and    al,0x66
  42822f:	hlt    
  428230:	leave  
  428231:	stc    
  428232:	in     eax,dx
  428233:	ror    DWORD PTR [rax],cl
  428235:	and    rax,0x5a957889
  42823b:	and    eax,0x1cac5ef5
  428240:	adc    dl,BYTE PTR [rdi]
  428242:	jb     0x428217
  428244:	and    DWORD PTR [rcx-0x19],ecx
  428247:	jge    0x42821f
  428249:	rex.WXB outs dx,DWORD PTR ds:[rsi]
  42824b:	adc    ch,ch
  42824d:	jle    0x4281fd
  42824f:	out    dx,eax
  428250:	xor    DWORD PTR [rdi],0xffffff88
  428253:	(bad)  
  428254:	jnp    0x4282b8
  428256:	mov    esi,0xcbf2c1f4
  42825b:	cdq    
  42825c:	imul   ebx,edx,0x7e
  42825f:	fsubr  DWORD PTR [rax+0x5]
  428262:	mov    ?,WORD PTR [rax+0xe]
  428265:	xor    eax,0x842d726f
  42826a:	xor    DWORD PTR [rcx-0x2f],eax
  42826d:	xchg   ebp,eax
  42826e:	test   al,0x3e
  428270:	fwait
  428271:	rex.R (bad) 
  428273:	fcmovne st,st(6)
  428275:	(bad)  
  428276:	jp     0x42828a
  428278:	in     eax,dx
  428279:	xor    edx,0xffffffe7
  42827c:	xlat   BYTE PTR ds:[rbx]
  42827d:	mov    dh,0xf
  42827f:	pop    rax
  428280:	push   rsi
  428281:	out    dx,eax
  428282:	(bad)  
  428283:	mov    dl,0xc5
  428285:	call   0xffffffffa56d3ea8
  42828a:	scas   al,BYTE PTR es:[rdi]
  42828b:	(bad)
  42828e:	retf   0x7daa
  428291:	(bad)  
  428292:	test   BYTE PTR [rbx+0x3f],0xf6
  428296:	add    DWORD PTR [rdi+0x5a94e388],eax
  42829c:	(bad)  
  42829d:	(bad)
  4282a0:	rex.WX
  4282a1:	gs ss xor al,0xd6
  4282a5:	cmp    BYTE PTR [rax],bh
  4282a7:	gs mov al,0x55
  4282aa:	cmp    DWORD PTR [rbx+0x60],edi
  4282ad:	or     BYTE PTR cs:[rbp-0x1fdc7897],ah
  4282b4:	adc    dl,BYTE PTR [rbp+0x2e]
  4282b7:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4282b8:	rex.WRX add QWORD PTR [rbp+0x3f],r10
  4282bc:	and    BYTE PTR [rax-0xa2d4ebe],0xcd
  4282c3:	movabs eax,ds:0xd0a318f2d06dbbfa
  4282cc:	adc    BYTE PTR [rdi],al
  4282ce:	ror    ah,1
  4282d0:	mov    ebp,0x515c789d
  4282d5:	(bad)  
  4282d6:	xchg   ecx,eax
  4282d7:	xchg   ebx,eax
  4282d8:	xchg   ecx,eax
  4282d9:	sub    DWORD PTR [rcx-0x41e13e05],esp
  4282df:	rex.WXB (bad) 
  4282e1:	ja     0x428350
  4282e3:	(bad)  
  4282e4:	movabs al,ds:0x5b4f46a37e7fc11e
  4282ed:	pop    rcx
  4282ee:	jne    0x4282be
  4282f0:	rol    DWORD PTR [rbx+0x63],cl
  4282f3:	mov    BYTE PTR [rsi+0x71],ch
  4282f6:	sbb    DWORD PTR [rbx+0xc7f369e],eax
  4282fc:	jmp    rdx
  4282fe:	ret    
  4282ff:	or     BYTE PTR es:[rax],bh
  428302:	pop    rdi
  428303:	or     eax,0x1f9465a3
  428308:	outs   dx,DWORD PTR ds:[rsi]
  428309:	(bad)  
  42830a:	mov    cs,eax
  42830c:	mov    BYTE PTR [rdx],dl
  42830e:	data16 cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  428310:	(bad)  
  428311:	(bad)  
  428312:	mov    esi,0xe800251d
  428317:	push   0x26
  428319:	imul   di,dx,0xffc2
  42831d:	(bad)  
  42831e:	icebp  
  42831f:	(bad)  
  428320:	lods   eax,DWORD PTR ds:[rsi]
  428321:	rex.WRX cmp r11b,BYTE PTR [rsi-0x28]
  428325:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  428326:	cld    
  428327:	out    dx,eax
  428328:	fld    DWORD PTR [rdi]
  42832a:	retf   
  42832b:	test   eax,0x147a9ec9
  428330:	nop
  428331:	jno    0x428348
  428333:	fistp  WORD PTR [rax+0x2eaf830b]
  428339:	cmp    bh,BYTE PTR [rsi-0x6]
  42833c:	je     0x428302
  42833e:	sub    DWORD PTR [rbx-0x6811db2a],eax
  428344:	lods   al,BYTE PTR ds:[rsi]
  428345:	imul   ecx,DWORD PTR [rbp+0x53],0xffffff85
  428349:	ins    BYTE PTR es:[rdi],dx
  42834a:	push   rbx
  42834b:	mov    BYTE PTR [rbp-0x337b8fc3],bl
  428351:	ins    DWORD PTR es:[rdi],dx
  428352:	adc    edi,edi
  428354:	movabs ds:0xdea0261ff5c7ce9e,al
  42835d:	mov    esp,0x9fe8bfeb
  428362:	std    
  428363:	clc    
  428364:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  428365:	adc    eax,0x4fb8fc02
  42836a:	scas   eax,DWORD PTR es:[rdi]
  42836b:	test   BYTE PTR [rcx-0x7d],bl
  42836e:	rex.WRX (bad) 
  428370:	lods   eax,DWORD PTR ds:[rsi]
  428371:	add    esi,DWORD PTR [rbp-0x71bad6b]
  428377:	fisub  DWORD PTR [rbx]
  428379:	cmp    al,0x65
  42837b:	adc    bl,BYTE PTR [rdx-0x59]
  42837e:	movabs ds:0xbc72d1565ebb551b,eax
  428387:	adc    DWORD PTR [rbp-0x49eec2bb],esi
  42838d:	cmp    eax,0x33693ce2
  428392:	mov    cl,0xae
  428394:	call   0xffffffffdfe4a12e
  428399:	sub    edi,ecx
  42839b:	(bad)  
  42839c:	mov    bh,0x4f
  42839e:	scas   al,BYTE PTR es:[rdi]
  42839f:	push   rbx
  4283a0:	mov    edi,0xdedc57b0
  4283a5:	movsxd edi,edx
  4283a7:	push   rsp
  4283a8:	iret   
  4283a9:	sbb    rcx,rcx
  4283ac:	scas   eax,DWORD PTR es:[rdi]
  4283ad:	out    dx,al
  4283ae:	int    0xb2
  4283b0:	xlat   BYTE PTR ds:[rbx]
  4283b1:	(bad)  
  4283b2:	mov    bh,BYTE PTR [rcx-0x7c]
  4283b5:	lods   eax,DWORD PTR ds:[rsi]
  4283b6:	ret    
  4283b7:	pminsw mm4,QWORD PTR [rsi-0x1673875d]
  4283be:	jbe    0x428395
  4283c0:	movabs ds:0xc212557c1193449b,al
  4283c9:	lods   eax,DWORD PTR ds:[rsi]
  4283ca:	pushf  
  4283cb:	(bad)  
  4283cc:	lea    edi,[ecx+0x12f7d521]
  4283d3:	(bad)  
  4283d4:	xchg   esi,eax
  4283d5:	imul   ebp,ebx,0x11
  4283d8:	(bad)  
  4283d9:	rex.R pop rdx
  4283db:	jnp    0x4283a5
  4283dd:	pushf  
  4283de:	(bad)  
  4283df:	sbb    eax,0x24211315
  4283e4:	(bad)  
  4283e5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4283e7:	mov    eax,DWORD PTR [rbp-0x73b86278]
  4283ed:	popf   
  4283ee:	imul   esp,DWORD PTR [rip+0xffffffffb985ddb0],0x51d2cb97        # 0xffffffffb9c861a8
  4283f8:	sbb    edx,ecx
  4283fa:	(bad)  
  4283fb:	in     al,dx
  4283fc:	test   eax,0x5a5e4c61
  428401:	cmp    eax,0xd5571cd0
  428406:	xchg   edx,eax
  428407:	sbb    esp,ebx
  428409:	sbb    DWORD PTR [rbp-0x527d5e42],ecx
  42840f:	push   rsi
  428410:	add    ch,dh
  428412:	cmp    al,ch
  428414:	movd   mm0,esp
  428417:	rex.RXB pop r12
  428419:	int3   
  42841a:	nop
  42841b:	rcr    DWORD PTR [rdi+rdx*2-0x2b],0xcc
  428420:	xor    DWORD PTR [rbp-0x6b],0x3d
  428424:	jbe    0x428440
  428426:	ficomp DWORD PTR [rdx+0x5032eff6]
  42842c:	and    ah,ch
  42842e:	mov    dl,0x9f
  428430:	xchg   ecx,eax
  428431:	push   rcx
  428432:	mov    ecx,0xf299901b
  428437:	mov    bh,0x1e
  428439:	(bad)  
  42843b:	movabs ds:0x8f99111d18c7b7a3,al
  428444:	adc    al,0xf5
  428446:	pop    rdi
  428447:	cs (bad) 
  428449:	(bad)  
  42844a:	sub    eax,0xe57ec2c
  42844f:	add    BYTE PTR [rcx],al
  428451:	and    eax,0x179770f1
  428456:	fs stos DWORD PTR es:[rdi],eax
  428458:	mov    cl,0x39
  42845a:	div    BYTE PTR [rax-0x61]
  42845d:	mov    ecx,0xa3f35ccb
  428462:	(bad)  [rcx+0x71]
  428465:	sbb    dh,BYTE PTR [rdx]
  428467:	lahf   
  428468:	cld    
  428469:	movsxd edi,ebx
  42846b:	in     al,dx
  42846c:	push   rdx
  42846d:	jno    0x4284db
  42846f:	in     eax,dx
  428470:	rex.WB (bad) 
  428472:	xor    ebx,DWORD PTR [rdi+rbx*2-0x4a]
  428476:	rex.X fnstsw WORD PTR [rax]
  428479:	mov    ebx,0xf9478bce
  42847e:	xor    BYTE PTR [rsi+rcx*2],dh
  428481:	lahf   
  428482:	(bad)  
  428483:	mov    eax,0x546d8b60
  428488:	mov    dl,0x91
  42848a:	fcom   DWORD PTR [rip+0xfe8194f]        # 0x102a9ddf
  428490:	mov    cl,BYTE PTR [rcx+0x48c13854]
  428496:	push   rsp
  428497:	js     0x428427
  428499:	mov    ebp,0x14de5a89
  42849e:	int3   
  42849f:	iret   
  4284a0:	(bad)  
  4284a1:	rex.WXB
  4284a2:	rex.WX vpaddq ymm1,ymm14,YMMWORD PTR [rdi]
  4284a7:	or     DWORD PTR [rbp+rsi*2+0x43004a3],ebp
  4284ae:	call   QWORD PTR [rsi]
  4284b0:	jne    0x428448
  4284b2:	jrcxz  0x42851f
  4284b4:	loope  0x42846a
  4284b6:	sar    eax,0x64
  4284b9:	push   rbx
  4284ba:	cmp    DWORD PTR [rax],0xb5a90dec
  4284c0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4284c1:	iret   
  4284c2:	(bad)  
  4284c3:	sub    BYTE PTR [rsi-0x2ba47774],ah
  4284c9:	(bad)  
  4284ca:	rex adc ebx,ebx
  4284cd:	test   BYTE PTR [rdi],dh
  4284cf:	push   0x5f
  4284d1:	iret   
  4284d2:	rex.RXB (bad) 
  4284d4:	jns    0x4284ca
  4284d6:	push   rsi
  4284d7:	sbb    BYTE PTR [rbx],0x53
  4284da:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4284db:	(bad)  
  4284dc:	xor    DWORD PTR [rcx+rax*8],ebx
  4284df:	adc    eax,0xfe370145
  4284e4:	gs retf 0x155a
  4284e8:	sub    eax,0x4bbd43e8
  4284ed:	cdq    
  4284ee:	add    edi,DWORD PTR [rbx+rsi*1-0x26b8d1f5]
  4284f5:	fidiv  WORD PTR [rdx]
  4284f7:	or     BYTE PTR [rax+0x3c],0x4a
  4284fb:	(bad)  
  4284fc:	out    0x52,eax
  4284fe:	cmp    eax,0x127b5345
  428503:	jg     0x4284bb
  428505:	(bad)  
  428506:	pop    rdi
  428507:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  428508:	pop    rcx
  428509:	(bad)  
  42850a:	mov    WORD PTR [rip+0x7f3d1574],cs        # 0x7f7f9a84
  428510:	cld    
  428511:	icebp  
  428512:	stc    
  428513:	pop    rbp
  428514:	mov    ?,WORD PTR [rbx+riz*1]
  428517:	push   rbp
  428518:	rex.W push rcx
  42851a:	mov    DWORD PTR [rsi],ebx
  42851c:	popf   
  42851d:	rex.RXB sbb r15d,DWORD PTR [r10+0x15]
  428521:	push   rsi
  428522:	add    BYTE PTR [rbx-0x2d0ff10e],0x11
  428529:	adc    esp,ebp
  42852b:	(bad)  
  42852c:	(bad)  
  42852d:	sub    ebx,DWORD PTR [rdx]
  42852f:	rex.RX xor al,0x3
  428532:	rex.WRX xchg rdx,rax
  428534:	data16 jno 0x428557
  428537:	rcr    BYTE PTR [rcx-0x1e],1
  42853a:	add    cl,ah
  42853c:	and    al,0xd1
  42853e:	retf   
  42853f:	test   al,0xc8
  428541:	je     0x4285bd
  428543:	(bad)  
  428544:	in     al,dx
  428545:	push   rcx
  428546:	(bad)  
  428547:	or     eax,0x33f1ff5d
  42854c:	ret    
  42854d:	sbb    bl,BYTE PTR [rbx+0x3c5b619b]
  428553:	mov    cl,0x7d
  428555:	je     0x42858b
  428557:	sbb    DWORD PTR [rbx-0x25bfc41f],edx
  42855d:	cmp    eax,0x57911b66
  428562:	xchg   esi,esp
  428564:	rex.RB iret 
  428566:	movabs ds:0xccef8523d1cb7d2b,eax
  42856f:	repz (bad) 
  428571:	int    0xc7
  428573:	pop    rsp
  428574:	lock cmp edx,DWORD PTR [rax-0x40573432]
  42857b:	sbb    bl,ah
  42857d:	lea    ebp,[rdx+0x1]
  428580:	cmp    bl,bh
  428582:	ret    0xe179
  428585:	sub    BYTE PTR [rbx],ah
  428587:	or     BYTE PTR [riz*2-0x2454f09c],ch
  42858e:	(bad)  
  42858f:	(bad)  
  428590:	movaps XMMWORD PTR [rdi],xmm5
  428593:	add    DWORD PTR [rdi-0x2a156aa4],0x25
  42859a:	jl     0x4285b6
  42859c:	adc    dl,BYTE PTR [rbp+0x67]
  42859f:	push   rbx
  4285a0:	(bad)  
  4285a1:	(bad)  
  4285a2:	adc    al,0xab
  4285a4:	cmp    al,0xb1
  4285a6:	add    DWORD PTR fs:[rdi],0xffffffeb
  4285aa:	fwait
  4285ab:	adc    ebp,DWORD PTR [rsp+rbx*8-0xaafb611]
  4285b2:	sub    DWORD PTR [rip+0x3e8a2b87],esi        # 0x3eccb13f
  4285b8:	scas   al,BYTE PTR es:[rdi]
  4285b9:	push   rbx
  4285ba:	scas   al,BYTE PTR es:[rdi]
  4285bb:	fild   QWORD PTR [rdx-0x175beb6f]
  4285c1:	sar    DWORD PTR [rip+0xffffffffd1ccaed2],1        # 0xffffffffd20f3499
  4285c7:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4285c8:	sub    DWORD PTR [rdi+0x6b48329b],ebp
  4285ce:	and    DWORD PTR [rip+0xffffffffb8728292],edx        # 0xffffffffb8b50866
  4285d4:	or     DWORD PTR [rcx+rdi*8-0x3c80dd6a],0xfffffffc
  4285dc:	and    bl,bh
  4285de:	(bad)  
  4285df:	mov    al,0x73
  4285e1:	push   rsi
  4285e2:	sbb    al,0xd9
  4285e4:	(bad)  
  4285e5:	xchg   ebp,eax
  4285e6:	jl     0x428634
  4285e8:	adc    eax,0x57bc5b48
  4285ed:	adc    esp,ecx
  4285ef:	mov    dh,0x24
  4285f1:	leave  
  4285f2:	loopne 0x42865f
  4285f4:	ss fucomi st,st(7)
  4285f7:	shl    esp,cl
  4285f9:	jp     0x428653
  4285fb:	push   rsi
  4285fc:	cmp    DWORD PTR [rbp+0x64],ebx
  4285ff:	or     BYTE PTR [rcx-0x5f8b9497],0xfa
  428606:	adc    BYTE PTR [rsp+riz*2-0x56],dl
  42860a:	(bad)  
  42860b:	(bad)  
  42860c:	xchg   ebx,eax
  42860d:	rol    BYTE PTR [rdx+riz*4+0x24],0x56
  428612:	in     eax,dx
  428613:	jbe    0x4285fc
  428615:	cmp    BYTE PTR [rbx],al
  428617:	mov    BYTE PTR [rcx-0x28],bl
  42861a:	ss add eax,0x2b1e1e02
  428620:	(bad)  
  428621:	or     DWORD PTR [rdi],esp
  428623:	pushf  
  428624:	and    al,0xae
  428626:	add    BYTE PTR [rdi-0x6f122b7a],0xdd
  42862d:	pop    rax
  42862e:	sub    DWORD PTR [rsp+rsi*2-0x69],esi
  428632:	push   rsi
  428633:	rex.W sahf 
  428635:	or     al,0xa2
  428637:	cs jns 0x428697
  42863a:	(bad)  
  42863b:	mov    cl,0x60
  42863d:	outs   dx,DWORD PTR ds:[rsi]
  42863e:	rex.WRX
  42863f:	rex.WRX (bad) 
  428641:	sub    eax,0xecffe666
  428646:	or     al,0x69
  428648:	ret    0x49ab
  42864b:	adc    BYTE PTR [rax],0xe2
  42864e:	pushf  
  42864f:	and    eax,0x924d012f
  428654:	(bad)  
  428655:	mov    esi,0x3b173ed
  42865a:	cld    
  42865b:	mov    eax,0xfc74d195
  428660:	out    dx,al
  428661:	mov    ebx,0x77b38b93
  428666:	outs   dx,DWORD PTR ds:[rsi]
  428667:	(bad)  
  428668:	fistp  WORD PTR [rcx+0x67]
  42866b:	sub    BYTE PTR [rip+0x65b7188a],bl        # 0x65f99efb
  428671:	sbb    eax,0x72734446
  428676:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  428677:	adc    eax,ecx
  428679:	sbb    ah,BYTE PTR [rcx+0x6119c94a]
  42867f:	(bad)  
  428680:	sub    edi,edi
  428682:	sbb    bh,dl
  428684:	int    0x79
  428686:	pop    gs
  428688:	rex.XB xchg r12d,eax
  42868a:	loop   0x428660
  42868c:	or     esi,edx
  42868e:	and    cl,BYTE PTR [rcx+rbp*1+0x2e]
  428692:	xor    eax,0x972a1764
  428697:	leavew 
  428699:	cdq    
  42869a:	pop    rsi
  42869b:	repz shl DWORD PTR [rbx+rdx*4],cl
  42869f:	add    bl,BYTE PTR [rbx+0x54]
  4286a2:	sbb    BYTE PTR [rbx+rax*8+0x4e],ah
  4286a6:	or     DWORD PTR [rdi+0x51],eax
  4286a9:	pop    rsp
  4286aa:	lods   al,BYTE PTR ds:[rsi]
  4286ab:	test   eax,0xb9b709d5
  4286b0:	fild   QWORD PTR [rbx-0x3e]
  4286b3:	push   rcx
  4286b4:	ins    BYTE PTR es:[rdi],dx
  4286b5:	sub    al,0x8c
  4286b7:	mov    gs,WORD PTR [rsi+0x5c]
  4286ba:	sub    DWORD PTR [rdx],0xdf547c4e
  4286c0:	mov    ch,0x78
  4286c2:	or     DWORD PTR [rsp+rax*4-0x67],edi
  4286c6:	retf   
  4286c7:	rex.RXB cmc 
  4286c9:	stos   DWORD PTR es:[rdi],eax
  4286ca:	enter  0xc374,0x62
  4286ce:	fisubr WORD PTR [rax]
  4286d0:	jle    0x428726
  4286d2:	xlat   BYTE PTR ds:[rbx]
  4286d3:	(bad)
  4286d7:	iret   
  4286d8:	sub    BYTE PTR [rdx],dl
  4286da:	hlt    
  4286db:	test   DWORD PTR [rcx+rcx*1+0xa],edx
  4286df:	pop    rcx
  4286e0:	mov    esi,0x2e23af6a
  4286e5:	and    DWORD PTR [rcx+0x33],eax
  4286e8:	pop    rsp
  4286e9:	push   0x4e9dadf
  4286ee:	sub    ah,bl
  4286f0:	ret    
  4286f1:	stc    
  4286f2:	(bad)
  4286f5:	jg     0x4286f0
  4286f7:	lea    edi,[rdi]
  4286f9:	loope  0x42873c
  4286fb:	pop    rcx
  4286fc:	jle    0x428722
  4286fe:	test   BYTE PTR [rdi-0x500c01ca],dl
  428704:	cli    
  428705:	fcmovu st,st(2)
  428707:	iret   
  428708:	mov    ch,0xdb
  42870a:	out    dx,eax
  42870b:	mov    bh,0xab
  42870d:	test   DWORD PTR [rip+0x14483bf9],eax        # 0x148ac30c
  428713:	movabs fs:0x9845b4e6741b4d63,al
  42871d:	add    BYTE PTR [rdi+0x42],al
  428720:	out    dx,al
  428721:	cmc    
  428722:	push   rsi
  428723:	idiv   BYTE PTR [rax+0x18]
  428726:	add    al,BYTE PTR [rsi]
  428728:	sbb    DWORD PTR [rdx],eax
  42872a:	mov    dl,0xd7
  42872c:	sbb    al,0x3e
  42872e:	mov    al,0x2f
  428730:	imul   ecx,DWORD PTR [rsp+rdx*4-0x1b82759],0x766ed01b
  42873b:	ds (bad) 
  42873d:	rex.WRXB
  42873e:	rex.WRXB jg 0x42873e
  428741:	and    al,0x68
  428743:	movabs eax,ds:0xd01d8d32a034f6a7
  42874c:	shr    BYTE PTR [rdx],0xbf
  42874f:	jp     0x428755
  428751:	(bad)  
  428752:	xchg   ecx,eax
  428753:	lods   eax,DWORD PTR ds:[rsi]
  428754:	mov    ebp,0xbcde933b
  428759:	test   dh,dl
  42875b:	cmp    eax,0x2ba333a8
  428760:	push   rbx
  428761:	cmc    
  428762:	rex mov edx,0x53c46103
  428768:	mov    DWORD PTR [rdx+0x2ffe33fa],0xf3c5ab19
  428772:	enter  0x36a9,0xc0
  428776:	rex.X xchg edi,eax
  428778:	xchg   esi,eax
  428779:	inc    DWORD PTR [rdx-0xd5ec2b5]
  42877f:	and    eax,0x7b585d64
  428784:	(bad)  
  428785:	(bad)  
  428786:	add    bl,ch
  428788:	ficom  WORD PTR [rbp+0x5e]
  42878b:	jg     0x428791
  42878d:	push   rdx
  42878e:	pushf  
  42878f:	(bad)  
  428790:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  428791:	(bad)  
  428792:	(bad)  
  428793:	in     eax,0x54
  428795:	push   rcx
  428796:	push   rdx
  428797:	movabs eax,ds:0xeff9b1ee77d315d1
  4287a0:	in     eax,0xd9
  4287a2:	rcr    ecx,1
  4287a4:	test   eax,0x9bf1cbf9
  4287a9:	xchg   ebx,eax
  4287aa:	(bad)  
  4287ab:	pushf  
  4287ac:	push   rax
  4287ad:	jrcxz  0x42882b
  4287af:	rex.WRX movabs rcx,0xbbf9418b44d46d2c
  4287b9:	mov    DWORD PTR [rcx-0x60ab8ce1],esi
  4287bf:	not    BYTE PTR [rsi]
  4287c1:	fwait
  4287c2:	jae    0x42874e
  4287c4:	ss pushf 
  4287c6:	rex.RB test eax,0x9cf524cb
  4287cc:	cld    
  4287cd:	je     0x4287ac
  4287cf:	push   rsp
  4287d0:	mov    eax,0xe009480a
  4287d5:	push   rsi
  4287d6:	sub    eax,0xf2cdd4d2
  4287db:	imul   rax,QWORD PTR [r13-0x7d07ce90],0xffffffffffffffaf
  4287e3:	mov    ebp,0xc429dcb6
  4287e8:	loopne 0x4287dc
  4287ea:	sub    ebp,DWORD PTR [rbx-0x5d]
  4287ed:	stc    
  4287ee:	push   rbp
  4287ef:	jnp    0x428805
  4287f1:	outs   dx,DWORD PTR ds:[rsi]
  4287f2:	(bad)
  4287f7:	jb     0x428855
  4287f9:	fs je  0x428845
  4287fc:	idiv   DWORD PTR [rbp-0x244525bf]
  428802:	push   rbp
  428803:	xchg   BYTE PTR [rbp+0x45],dh
  428806:	pop    rax
  428807:	mov    ebx,0xc1db1495
  42880c:	add    DWORD PTR gs:[rsi-0x70946494],edi
  428813:	rex.WB
  428814:	es rex
  428816:	lock adc ecx,DWORD PTR [rax-0x5e9b5dcb]
  42881d:	mov    edx,eax
  42881f:	(bad)  [rdx+0xa6cd1ad]
  428825:	test   eax,0x5dd44d9a
  42882a:	mov    bh,0x29
  42882c:	xchg   edi,eax
  42882d:	es mov esi,0x3aaa65b2
  428833:	ins    DWORD PTR es:[rdi],dx
  428834:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  428835:	mov    edi,0xddb491aa
  42883a:	retf   0x5fb3
  42883d:	ror    eax,cl
  42883f:	mov    bl,0x4e
  428841:	sbb    esi,DWORD PTR [rdi]
  428843:	mov    edi,0x4f5b11aa
  428848:	rcr    BYTE PTR [rbp+rcx*4+0x3f],1
  42884c:	pushf  
  42884d:	pop    rsp
  42884e:	es rex.RXB
  428850:	scas   eax,DWORD PTR es:[edi]
  428852:	fstp   QWORD PTR [rsi]
  428854:	mov    ebp,0x34b0e8b4
  428859:	sbb    DWORD PTR [rdi],ebp
  42885b:	or     esi,DWORD PTR [rbx-0x74e63b76]
  428861:	cli    
  428862:	(bad)  
  428863:	jo     0x4287fd
  428865:	rex.WX or rax,0xffffffffd6638a66
  42886b:	retf   0x70b8
  42886e:	xchg   ebx,eax
  42886f:	in     eax,0xf8
  428871:	push   rcx
  428872:	(bad)
  428875:	lahf   
  428876:	push   rbx
  428877:	int3   
  428878:	xchg   ebp,eax
  428879:	ins    BYTE PTR es:[rdi],dx
  42887a:	rex.RX mov DWORD PTR [rsi+0xd],r12d
  42887e:	loopne 0x428850
  428880:	(bad)  
  428881:	es xchg edx,eax
  428883:	adc    eax,0xea4af763
  428888:	retf   0xa538
  42888b:	xor    al,0xfa
  42888d:	(bad)  
  42888e:	adc    esi,DWORD PTR [rax]
  428890:	mov    WORD PTR [rsi-0x2c],?
  428893:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  428894:	movabs ds:0x2fae9a84f413f0db,eax
  42889d:	jo     0x428896
  42889f:	mov    esp,0xb4de91
  4288a4:	sbb    DWORD PTR [rbx+0xa],edi
  4288a7:	sub    BYTE PTR [rbp+rbp*8+0x18],ch
  4288ab:	loope  0x42888f
  4288ad:	xchg   dl,dl
  4288af:	rex.WXB loopne 0x428863
  4288b2:	test   eax,0x3771ef62
  4288b7:	(bad)  
  4288b8:	(bad)  
  4288b9:	sbb    al,cl
  4288bb:	mov    ch,0x47
  4288bd:	add    dl,BYTE PTR [rcx]
  4288bf:	gs fwait
  4288c1:	mov    al,0xdf
  4288c3:	(bad)  
  4288c5:	(bad)  
  4288c6:	ficomp WORD PTR [rax-0x383c6565]
  4288cc:	adc    bl,BYTE PTR [rsi-0x22110031]
  4288d2:	ror    DWORD PTR [rdi+0x5c],cl
  4288d5:	mov    ah,0x66
  4288d7:	sahf   
  4288d8:	(bad)  
  4288d9:	push   rax
  4288da:	(bad)  
  4288db:	rex.XB int3 
  4288dd:	cmp    edx,0x4fd268be
  4288e3:	ror    bl,1
  4288e5:	mov    QWORD PTR [r10],rdx
  4288e8:	and    al,BYTE PTR [rcx]
  4288ea:	mul    esi
  4288ec:	push   rbx
  4288ed:	adc    esi,ecx
  4288ef:	mov    DWORD PTR [rbp-0x2c063fd5],esp
  4288f5:	ins    BYTE PTR es:[rdi],dx
  4288f6:	or     BYTE PTR [rdi],ch
  4288f8:	loop   0x428924
  4288fa:	xchg   cx,ax
  4288fc:	jmp    0x71a56f82
  428901:	popf   
  428902:	stos   DWORD PTR es:[rdi],eax
  428903:	(bad)  
  428904:	sub    cl,BYTE PTR [rbp+0x61a3446c]
  42890a:	div    BYTE PTR [rbx+0x5655d59a]
  428910:	adc    bh,BYTE PTR [rbp+0x683aaf05]
  428916:	(bad)  
  428917:	pop    rbp
  428918:	sahf   
  428919:	cmp    ebp,edx
  42891b:	jo     0x428901
  42891d:	sbb    rbp,QWORD PTR [r8+riz*8+0x13392e20]
  428925:	push   rbx
  428926:	and    al,0x9c
  428928:	(bad)  
  428929:	and    bl,dl
  42892b:	push   rdx
  42892c:	rex.W add al,0x29
  42892f:	(bad)  
  428930:	rex.RB jne 0x4288c2
  428933:	int3   
  428934:	(bad)  
  428935:	out    dx,al
  428936:	cdq    
  428937:	sar    DWORD PTR [rip+0x10d7902d],1        # 0x111a196a
  42893d:	adc    al,0x75
  42893f:	xchg   ebp,eax
  428940:	test   DWORD PTR [rcx],edx
  428942:	fdiv   DWORD PTR [rdi-0x1cc0a7bd]
  428948:	(bad)  
  428949:	mov    ss,WORD PTR [rsi+rdx*4+0x6b]
  42894d:	rex.B
  42894e:	rex.B adc eax,0x98de30e2
  428954:	js     0x428996
  428956:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  428957:	(bad)  
  428958:	jnp    0x428941
  42895a:	es sbb al,0x17
  42895d:	movabs ds:0x34678ad2dc2986b1,eax
  428966:	cmp    al,0x5f
  428968:	icebp  
  428969:	sbb    eax,0xb4b814e6
  42896e:	in     al,dx
  42896f:	(bad)  
  428970:	pop    rbp
  428971:	out    0x25,eax
  428973:	mov    ch,0x1f
  428975:	mov    dh,0xf6
  428977:	pop    rcx
  428978:	ja     0x428905
  42897a:	test   al,0x2f
  42897c:	xchg   ecx,eax
  42897d:	test   al,0xa7
  42897f:	rex.WX (bad) 
  428981:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  428982:	lock mov ecx,0x25192758
  428988:	rex.WB enter 0x5a5d,0x65
  42898d:	or     ebp,DWORD PTR [rdx]
  42898f:	xchg   DWORD PTR [rax-0x17],edi
  428992:	repnz cmp BYTE PTR [rcx],dl
  428995:	mov    ecx,0x79818580
  42899a:	sahf   
  42899b:	push   0xffffffffe905cd2f
  4289a0:	sub    eax,DWORD PTR [rdi-0x6b4c1bd1]
  4289a6:	out    dx,al
  4289a7:	sahf   
  4289a8:	ret    0x4cb9
  4289ab:	mov    al,0xd2
  4289ad:	and    dh,BYTE PTR [rdi-0x1db5b0a5]
  4289b3:	loopne 0x4289fc
  4289b5:	add    al,0x19
  4289b7:	rex.B (bad) 
  4289b9:	test   eax,0x8de5bfe
  4289be:	mov    eax,0x2b5e3a56
  4289c3:	sbb    ch,ch
  4289c5:	mov    dl,0xe2
  4289c7:	and    al,0x21
  4289c9:	(bad)  
  4289ca:	(bad)  
  4289cb:	add    al,0x38
  4289cd:	pop    rsi
  4289ce:	pop    rdx
  4289cf:	xor    al,0x3c
  4289d1:	pop    rsp
  4289d2:	(bad)  
  4289d3:	icebp  
  4289d4:	adc    DWORD PTR [rdi],eax
  4289d6:	rex.RB
  4289d7:	repnz ss mov ebx,es
  4289db:	xchg   edi,eax
  4289dc:	push   rdi
  4289dd:	push   rsp
  4289de:	mov    ebx,0x55954241
  4289e3:	cs repz ret 
  4289e6:	cmc    
  4289e7:	gs jno 0x4289e3
  4289ea:	mov    edx,0x9c638546
  4289ef:	outs   dx,DWORD PTR ds:[rsi]
  4289f0:	sbb    BYTE PTR [rbx-0x14],dh
  4289f3:	(bad)  
  4289f4:	imul   BYTE PTR [rbp-0xc8a8934]
  4289fa:	mov    al,0xb7
  4289fc:	addr32 out 0xe1,eax
  4289ff:	(bad)  
  428a00:	adc    edi,DWORD PTR [rbx+0x7e]
  428a03:	cmp    BYTE PTR [rdx],bl
  428a05:	jmp    0x33c7a8be
  428a0a:	sub    cl,dh
  428a0c:	ins    DWORD PTR es:[rdi],dx
  428a0d:	rex.WX xor rax,0xffffffff88fc0cd5
  428a13:	adc    eax,0x62748d24
  428a18:	rex.X jnp 0x428a6a
  428a1b:	fcomp  QWORD PTR [rbx+rbx*8-0x52388271]
  428a22:	cmc    
  428a23:	(bad)  
  428a24:	stc    
  428a25:	mov    cl,0xe8
  428a27:	mov    bh,0xbe
  428a29:	mov    edi,DWORD PTR [rbx+rbp*8+0x69]
  428a2d:	addr32 pop rsp
  428a2f:	sti    
  428a30:	sti    
  428a31:	lahf   
  428a32:	or     DWORD PTR [rdx+0x59cb8d91],ecx
  428a38:	loop   0x428a78
  428a3a:	es pop rdi
  428a3c:	jrcxz  0x428a89
  428a3e:	fstp   TBYTE PTR [rax+rdi*1]
  428a41:	loopne 0x4289df
  428a43:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  428a44:	lock pop rbx
  428a46:	ficomp WORD PTR [rsi]
  428a48:	repz ds cmc 
  428a4b:	int3   
  428a4c:	or     eax,0xd44818cb
  428a51:	(bad)  
  428a52:	xor    DWORD PTR [rcx-0xd],edi
  428a55:	jno    0x428a5f
  428a57:	rex.WRX mov QWORD PTR [rip+0x3d4279ef],r13        # 0x3d85044d
  428a5e:	xor    ecx,DWORD PTR [rdx]
  428a60:	push   rdi
  428a61:	adc    ecx,DWORD PTR [rdi]
  428a63:	shr    DWORD PTR [rbx+0x37],1
  428a66:	mov    esp,0xbf667cef
  428a6b:	movsxd edi,DWORD PTR [rbx+0x4e]
  428a6e:	es or  al,0x27
  428a71:	(bad)  
  428a72:	(bad)  
  428a73:	mov    ebp,0xc47ba913
  428a78:	jns    0x428a8a
  428a7a:	sub    eax,0x65b071d5
  428a7f:	in     eax,0x6d
  428a81:	not    DWORD PTR [rip+0xffffffffb4e7663e]        # 0xffffffffb529f0c5
  428a87:	mov    eax,DWORD PTR [rbp-0x63679433]
  428a8d:	shl    eax,0x6a
  428a90:	xor    DWORD PTR [rax],ebx
  428a92:	ret    0xa5d0
  428a95:	movsxd ebp,DWORD PTR [rbp-0x15]
  428a98:	or     eax,edi
  428a9a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  428a9b:	jp     0x428a8c
  428a9d:	test   DWORD PTR [rdi],esi
  428a9f:	(bad)  
  428aa0:	fisubr DWORD PTR [rip+0xffffffffe8edaa8d]        # 0xffffffffe9303533
  428aa6:	icebp  
  428aa7:	mov    cl,0xa2
  428aa9:	rex.X fisttp QWORD PTR [rdx]
  428aac:	pop    rcx
  428aad:	jb     0x428b20
  428aaf:	jl     0x428b2a
  428ab1:	rex.B loope 0x428ab6
  428ab4:	nop
  428ab5:	xor    BYTE PTR [rsi+0x45],dh
  428ab8:	test   eax,0x96db5339
  428abd:	cmc    
  428abe:	(bad)  
  428abf:	or     dl,BYTE PTR [rdx]
  428ac1:	ret    
  428ac2:	mov    ebx,0x664edc6b
  428ac7:	push   0x4
  428ac9:	fsubr  QWORD PTR [rsi-0x366f6c]
  428acf:	(bad)  
  428ad0:	neg    DWORD PTR [rax]
  428ad2:	popf   
  428ad3:	rex.WB xor rax,0x3afb71aa
  428ad9:	(bad)  
  428ada:	(bad)  
  428adb:	fwait
  428adc:	mov    ah,0x61
  428ade:	jg     0x428abf
  428ae0:	rex.RB (bad) 
  428ae2:	push   rcx
  428ae3:	retf   
  428ae4:	add    ebp,0xffffff97
  428ae7:	sub    BYTE PTR [rsi+0x40784858],0x45
  428aee:	pop    rbx
  428aef:	add    BYTE PTR [rsi-0x68bf573b],0x82
  428af6:	mov    al,0x87
  428af8:	std    
  428af9:	mov    eax,0x4ab774a
  428afe:	cmp    al,dl
  428b00:	sbb    al,0x3e
  428b02:	leave  
  428b03:	(bad)  
  428b04:	gs mov dh,0x8
  428b07:	or     cl,0x9f
  428b0a:	out    dx,al
  428b0b:	out    dx,al
  428b0c:	xchg   ch,cl
  428b0e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  428b0f:	jrcxz  0x428b03
  428b11:	ss xchg ebx,eax
  428b13:	sbb    ebx,DWORD PTR [rbx+0x50]
  428b16:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  428b17:	js     0x428a9e
  428b19:	or     eax,0x3510a864
  428b1e:	test   eax,0xb22b83a3
  428b23:	pop    rax
  428b24:	imul   eax,esi,0xcde459d4
  428b2a:	sbb    ebx,DWORD PTR [rdi-0x7d7e1036]
  428b30:	xchg   ebp,eax
  428b31:	cmp    DWORD PTR [rbx-0x61],ebp
  428b34:	rex.RB (bad) 
  428b36:	enter  0xa96a,0x88
  428b3a:	push   rsp
  428b3b:	(bad)  
  428b3c:	cmp    BYTE PTR [rax+0x2e],cl
  428b3f:	adc    DWORD PTR [rdi+0x47],eax
  428b42:	shl    BYTE PTR [rbx],1
  428b44:	loope  0x428b16
  428b46:	hlt    
  428b47:	ds repz sub al,0xb2
  428b4b:	and    edx,DWORD PTR [rdx+0x45d9e5d1]
  428b51:	and    bl,BYTE PTR [rbx-0x7744ebd4]
  428b57:	movabs ds:0x41291fb76d3613d1,eax
  428b60:	push   0x432ccd13
  428b65:	xchg   edx,eax
  428b66:	not    DWORD PTR [rbp-0x42]
  428b69:	lods   al,BYTE PTR ds:[rsi]
  428b6a:	or     BYTE PTR cs:[rdx],ch
  428b6d:	sub    eax,0x524efb63
  428b72:	retf   
  428b73:	xchg   esp,eax
  428b74:	or     eax,0x7a0d8b4c
  428b79:	(bad)  
  428b7a:	icebp  
  428b7b:	cmp    ebx,DWORD PTR [r11+0x62]
  428b7f:	mov    bl,0x73
  428b81:	sbb    dl,BYTE PTR [rbp*8+0x22884923]
  428b88:	xor    DWORD PTR ss:[rcx+0x12],ecx
  428b8c:	mov    cl,0xb4
  428b8e:	neg    ch
  428b90:	mov    ebp,0xcce887c8
  428b95:	icebp  
  428b96:	mov    ebp,0x19494171
  428b9b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  428b9c:	mov    bl,0x4f
  428b9e:	push   rcx
  428b9f:	pop    rbp
  428ba0:	add    DWORD PTR [rax+0x7c],edi
  428ba3:	rex.R xchg bx,ax
  428ba6:	cmp    eax,0x2c213b84
  428bab:	adc    edi,DWORD PTR [rip+0x32901a31]        # 0x32d2a5e2
  428bb1:	rex mov edi,ebx
  428bb4:	rex.WX push rbp
  428bb6:	rex.X cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  428bb8:	rex.WRB in eax,dx
  428bba:	mov    edx,0xbb3f3e79
  428bbf:	mov    eax,0xac73b44c
  428bc4:	add    al,ah
  428bc6:	rex.RXB popf 
  428bc8:	and    eax,DWORD PTR [rsp+riz*2-0x37]
  428bcc:	mov    al,0xd4
  428bce:	sbb    al,0xc6
  428bd0:	xor    DWORD PTR [rax+0x6bf3453e],esi
  428bd6:	mov    ah,0x9
  428bd8:	ins    DWORD PTR es:[rdi],dx
  428bd9:	sub    DWORD PTR [rbx+rsi*1],0x62
  428bdd:	call   0x748cfe7d
  428be2:	(bad)  
  428be3:	retf   
  428be4:	sbb    al,0xe1
  428be6:	(bad)  
  428be7:	and    BYTE PTR [rcx],al
  428be9:	sbb    eax,0x74e0552f
  428bee:	xchg   edi,eax
  428bef:	(bad)  
  428bf0:	jnp    0x428b83
  428bf2:	fld    QWORD PTR [rcx+0x56]
  428bf5:	(bad)
  428bf9:	movabs ds:0x44e73d05bfe1bcbc,eax
  428c02:	adc    edi,ecx
  428c04:	(bad)  
  428c05:	mov    ah,0xa2
  428c07:	sub    DWORD PTR [rsi+0x7],esi
  428c0a:	jns    0x428bc3
  428c0c:	test   eax,0x6fb53204
  428c11:	mov    bl,0xa5
  428c13:	mov    esp,0x21e27b39
  428c18:	sbb    DWORD PTR [rax],esp
  428c1a:	cmp    DWORD PTR [rbp-0x51],esp
  428c1d:	loopne 0x428baf
  428c1f:	jrcxz  0x428c28
  428c21:	cmp    eax,0xdccf48f9
  428c26:	mov    ecx,0xfc5a287c
  428c2b:	mov    cs,WORD PTR [rdi-0x62]
  428c2e:	jp     0x428c02
  428c30:	(bad)  
  428c31:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  428c32:	mov    ebx,0x95a27034
  428c37:	and    eax,ebp
  428c39:	xchg   DWORD PTR [rbx],eax
  428c3b:	(bad)  [rsi]
  428c3d:	xlat   BYTE PTR ds:[rbx]
  428c3e:	pop    rcx
  428c3f:	movabs eax,ds:0x59b33ced739f831b
  428c48:	xchg   ecx,eax
  428c49:	stos   BYTE PTR es:[rdi],al
  428c4a:	(bad)  
  428c4b:	jns    0x428caa
  428c4d:	movabs eax,ds:0x6d9dcf5919086b1f
  428c56:	mul    esp
  428c58:	mov    ecx,0x18b2459d
  428c5d:	sub    al,0x2a
  428c5f:	(bad)  
  428c60:	xchg   edi,ebp
  428c62:	pop    rbp
  428c63:	rex.RX in al,0xf0
  428c66:	int3   
  428c67:	mov    esp,DWORD PTR [rip+0x48d83b2]        # 0x4d0101f
  428c6d:	rex.WX stos QWORD PTR es:[rdi],rax
  428c6f:	pop    rcx
  428c70:	(bad)  
  428c71:	rex.RX scas al,BYTE PTR es:[rdi]
  428c73:	jno    0x428ca1
  428c75:	(bad)  
  428c77:	(bad)  
  428c78:	and    esp,ebx
  428c7a:	ja     0x428c60
  428c7c:	cmp    bh,BYTE PTR es:[rcx]
  428c7f:	cmp    eax,0x64c5ab76
  428c84:	mov    ah,0x38
  428c86:	leave  
  428c87:	rex.WRX cqo 
  428c89:	movabs ds:0x54e72618baf64e92,eax
  428c92:	stos   BYTE PTR es:[rdi],al
  428c93:	(bad)  
  428c94:	pop    rcx
  428c95:	xchg   ebp,eax
  428c96:	cmc    
  428c97:	jg     0x428c53
  428c99:	(bad)  
  428c9a:	clc    
  428c9b:	mov    al,0xc0
  428c9d:	jmp    0xffffffffe4927b04
  428ca2:	iret   
  428ca3:	in     al,0x85
  428ca5:	pop    rcx
  428ca6:	pop    rsp
  428ca7:	cld    
  428ca8:	test   dh,bh
  428caa:	(bad)  
  428cab:	adc    DWORD PTR [rdi],esp
  428cad:	(bad)  
  428cae:	rex.XB jle 0x428c92
  428cb1:	pop    rsi
  428cb2:	scas   al,BYTE PTR es:[rdi]
  428cb3:	int    0x40
  428cb5:	mov    WORD PTR [rcx-0x2a],cs
  428cb8:	jge    0x428c9e
  428cba:	test   eax,0xaf632dec
  428cbf:	movabs eax,ds:0xad699d33e400fa09
  428cc8:	ss enter 0x5c2d,0xe9
  428ccd:	xor    ebp,DWORD PTR [rdx-0x518c0d51]
  428cd3:	sub    DWORD PTR [rsi-0x6938f1ec],edi
  428cd9:	rex pushf 
  428cdb:	(bad)  
  428cdc:	xchg   rsp,rax
  428cde:	add    al,0x68
  428ce0:	fisubr DWORD PTR [rdx]
  428ce2:	rex.W loop 0x428cb3
  428ce5:	sub    al,0x4b
  428ce7:	xor    ebp,0xfffffffc
  428cea:	xchg   ebx,eax
  428ceb:	int3   
  428cec:	sbb    al,0xeb
  428cee:	loope  0x428c91
  428cf0:	xchg   ecx,eax
  428cf1:	or     al,0x82
  428cf3:	repnz out dx,eax
  428cf5:	sub    eax,0xde53e217
  428cfa:	lea    esi,[rsi-0x15]
  428cfd:	fdivr  DWORD PTR [rbx-0x54]
  428d00:	(bad)  
  428d01:	cmp    eax,ecx
  428d03:	(bad)  
  428d04:	or     DWORD PTR [rcx-0x46c8d2f6],edx
  428d0a:	or     ah,0x35
  428d0d:	out    dx,eax
  428d0e:	imul   esi,DWORD PTR [rdi+0x4f],0xffffff9f
  428d12:	mov    ecx,0xf728aea6
  428d17:	shl    BYTE PTR [rsi-0x1c6f9b1b],0xa9
  428d1e:	int    0xed
  428d20:	movsxd ebp,ebx
  428d22:	rex.WRB (bad) 
  428d24:	idiv   ch
  428d26:	icebp  
  428d27:	hlt    
  428d28:	xor    esp,ecx
  428d2a:	clc    
  428d2b:	movabs al,ds:0x1c86f801dee2f674
  428d34:	rex.W (bad) 
  428d36:	pop    rdi
  428d37:	add    esi,DWORD PTR [rbx+0x1f685b61]
  428d3d:	pop    rbx
  428d3e:	xchg   ebp,eax
  428d3f:	(bad)  
  428d40:	mov    bh,cl
  428d42:	ror    DWORD PTR [rdi-0x3f],cl
  428d45:	push   rbp
  428d46:	(bad)  
  428d47:	pop    rdi
  428d48:	(bad)  
  428d49:	add    eax,0xe97de423
  428d4e:	jae    0x428d01
  428d50:	pop    rdx
  428d51:	mov    ecx,0xf326a3e0
  428d56:	fist   DWORD PTR [rcx-0x5ce97668]
  428d5c:	enter  0xb28b,0x4d
  428d60:	sbb    DWORD PTR [rbp-0x4f],0xda4875b6
  428d67:	rex.X push rsp
  428d69:	sbb    BYTE PTR [rax-0x2baeba70],bh
  428d6f:	mov    eax,0x2ad9a946
  428d74:	adc    bl,BYTE PTR [rcx]
  428d76:	xchg   edx,eax
  428d77:	out    0xf8,eax
  428d79:	push   rdi
  428d7a:	stos   DWORD PTR es:[rdi],eax
  428d7b:	jae    0x428d4e
  428d7d:	stos   DWORD PTR es:[rdi],eax
  428d7e:	in     al,dx
  428d7f:	scas   eax,DWORD PTR es:[rdi]
  428d80:	data16 mov BYTE PTR [rbx+rbx*4],ah
  428d84:	jo     0x428d6f
  428d86:	xor    dh,ch
  428d88:	pushf  
  428d89:	rex.RXB pop r9
  428d8b:	sub    al,0x53
  428d8d:	iret   
  428d8e:	pop    rsp
  428d8f:	jnp    0x428d8b
  428d91:	rex.X pop rsp
  428d93:	adc    ah,BYTE PTR [rdx-0xe]
  428d96:	push   0x51
  428d98:	lods   al,BYTE PTR ds:[rsi]
  428d99:	scas   al,BYTE PTR es:[rdi]
  428d9a:	rex.RXB stc 
  428d9c:	fstp   DWORD PTR [rsi+0x2210eff5]
  428da2:	addr32 mov bl,0x66
  428da5:	jmp    0x4ab56f8a
  428daa:	sub    cl,BYTE PTR [rbx+rdi*8-0xa090db3]
  428db1:	xor    ecx,DWORD PTR [rdx]
  428db3:	(bad)  
  428db4:	pop    rdi
  428db5:	addr32 (bad) 
  428db7:	movabs ds:0x5eb7d9f0f7694b32,al
  428dc0:	movsxd edi,ebx
  428dc2:	pop    rsi
  428dc3:	scas   al,BYTE PTR es:[rdi]
  428dc4:	cmp    ebx,DWORD PTR [rdi-0x4b]
  428dc7:	mov    ecx,0xc7b05e9c
  428dcc:	adc    al,0xf7
  428dce:	xchg   esp,eax
  428dcf:	popf   
  428dd0:	jae    0x428daf
  428dd2:	xchg   edi,eax
  428dd3:	cmp    r9,QWORD PTR [rsi+0x21]
  428dd7:	movabs eax,ds:0x48eb0125fe4af489
  428de0:	rex.RXB mov BYTE PTR [rip+0x1884e27b],r15b        # 0x18c77062
  428de7:	push   rbp
  428de8:	cmc    
  428de9:	and    al,0xde
  428deb:	stos   DWORD PTR es:[rdi],eax
  428dec:	imul   edx,edx,0xffffffa8
  428def:	and    esp,DWORD PTR [rdi]
  428df1:	(bad)  
  428df2:	sbb    DWORD PTR [rbx],ecx
  428df4:	(bad)  
  428df5:	and    edi,DWORD PTR [rsi]
  428df7:	mul    DWORD PTR [rsi+rcx*8+0x4921af86]
  428dfe:	or     BYTE PTR [rcx+0x67bdef0d],dl
  428e04:	mov    esi,0x5c0c48d9
  428e09:	mov    ah,0xc3
  428e0b:	test   BYTE PTR [rdi+0x17],dh
  428e0e:	mov    edx,0x73ecf78a
  428e13:	sti    
  428e14:	sub    al,0xf9
  428e16:	or     dl,dh
  428e18:	ret    0x49e3
  428e1b:	pop    rdi
  428e1c:	icebp  
  428e1d:	xchg   BYTE PTR [rax],ch
  428e1f:	shr    DWORD PTR [rdx+rbx*1-0x29ff05c8],0x7c
  428e27:	mov    esp,0x795ef7b9
  428e2c:	shl    DWORD PTR [rsi+0x6a52418a],1
  428e32:	mov    bh,0x26
  428e34:	(bad)  
  428e35:	xchg   ebp,eax
  428e36:	(bad)  
  428e37:	outs   dx,BYTE PTR ds:[rsi]
  428e38:	cld    
  428e39:	ret    
  428e3a:	stc    
  428e3b:	pushf  
  428e3c:	outs   dx,DWORD PTR ds:[rsi]
  428e3d:	(bad)  
  428e3e:	jae    0x428dc2
  428e40:	pop    rcx
  428e41:	mov    ch,0xd6
  428e43:	push   rbx
  428e44:	test   DWORD PTR [rax-0x1a],esp
  428e47:	out    0xa4,eax
  428e49:	(bad)  
  428e4a:	pop    rcx
  428e4b:	out    0xbd,eax
  428e4d:	jg     0x428ec3
  428e4f:	test   al,0x6f
  428e51:	or     al,0x2
  428e53:	mov    ?,WORD PTR [rsi+rax*8-0x41823eb1]
  428e5a:	(bad)  
  428e5b:	addr32 (bad) 
  428e5d:	or     al,0xb9
  428e5f:	mov    esp,0x67bff22e
  428e64:	(bad)  
  428e65:	scas   al,BYTE PTR es:[rdi]
  428e66:	rex cmp esi,ebp
  428e69:	mov    ebp,0x6045f7c7
  428e6e:	fsub   QWORD PTR [rsi+0x22845cb3]
  428e74:	stc    
  428e75:	retf   
  428e76:	fld    QWORD PTR [rbx]
  428e78:	rex.WRXB
  428e79:	xlat   BYTE PTR fs:[rbx]
  428e7b:	jle    0x428e47
  428e7d:	jmp    0x404d510a
  428e82:	test   DWORD PTR [rcx],ebp
  428e84:	mov    dl,dh
  428e86:	fs sub eax,0xa7f3ded8
  428e8c:	movabs ds:0x450a12f74c92a97b,al
  428e95:	and    ecx,0xffffffa7
  428e98:	sub    esp,DWORD PTR [rsi+0x27d5cb9f]
  428e9e:	rex.WXB sub QWORD PTR [rip+0x31575286],rax        # 0x3199e12b
  428ea5:	cmp    dh,0x7a
  428ea8:	xchg   edi,eax
  428ea9:	(bad)  
  428eaa:	add    ah,BYTE PTR [rbp-0x4180a1f5]
  428eb0:	ret    0x24d5
  428eb3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  428eb4:	xor    al,0x8f
  428eb6:	mov    cl,0x97
  428eb8:	mov    esp,0x27b33fe7
  428ebd:	shl    DWORD PTR [rbx+0x1c5e5247],0xa4
  428ec4:	icebp  
  428ec5:	sub    DWORD PTR [rdi],ecx
  428ec7:	mov    esp,0xfd98241e
  428ecc:	mov    esp,DWORD PTR [rsi]
  428ece:	push   rbx
  428ecf:	xor    dl,ch
  428ed1:	or     BYTE PTR [rcx-0x1b],bh
  428ed4:	xchg   ebp,eax
  428ed5:	std    
  428ed6:	cld    
  428ed7:	lods   al,BYTE PTR ds:[rsi]
  428ed8:	mov    esp,0xdf24fc4e
  428edd:	out    0xbc,eax
  428edf:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  428ee0:	fiadd  WORD PTR [rax+0x1cf5713]
  428ee6:	adc    rdi,QWORD PTR [r15-0x584653c]
  428eed:	test   esp,ebp
  428eef:	or     eax,0x4d552fbd
  428ef4:	pop    rbp
  428ef5:	stc    
  428ef6:	(bad)  
  428ef7:	addr32 mov ebx,0x253ad2be
  428efd:	(bad)  
  428efe:	cmp    al,0xa7
  428f00:	fwait
  428f01:	lods   eax,DWORD PTR ds:[rsi]
  428f02:	jl     0x428e85
  428f04:	ja     0x428ecc
  428f06:	leave  
  428f07:	mov    WORD PTR [rdx+0x6b4cd95],gs
  428f0d:	(bad)  
  428f0e:	shl    bl,cl
  428f10:	mov    eax,0x425bf6c7
  428f15:	not    edx
  428f17:	push   rdi
  428f18:	movabs eax,ds:0xdc4f83ded79392
  428f21:	rcr    DWORD PTR [rcx],cl
  428f23:	imul   eax,DWORD PTR [rbx],0xa888ecf7
  428f29:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  428f2a:	cli    
  428f2b:	(bad)  
  428f2c:	imul   DWORD PTR [rax]
  428f2e:	out    dx,eax
  428f2f:	mov    WORD PTR [rdi+0x25],?
  428f32:	sar    DWORD PTR [rax],cl
  428f34:	(bad)  
  428f35:	inc    BYTE PTR [rbx+0x1c3b7867]
  428f3b:	fstp   QWORD PTR [rax+0xd26d5b]
  428f41:	pop    rdi
  428f42:	push   rsp
  428f43:	push   0xfffffffff6bba054
  428f48:	lahf   
  428f49:	cmp    eax,0x5cacf35f
  428f4e:	(bad)  
  428f4f:	jne    0x428ef5
  428f51:	mov    al,0xf0
  428f53:	addr32 lahf 
  428f55:	test   edi,eax
  428f57:	pop    rsp
  428f58:	int    0x2
  428f5a:	rex.RB
  428f5b:	rex.B retf 0x4b49
  428f5f:	mov    dh,0x28
  428f61:	movabs ds:0x4d411153f3d53fe8,eax
  428f6a:	std    
  428f6b:	lahf   
  428f6c:	jle    0x428fed
  428f6e:	(bad)  
  428f6f:	mov    bh,0xfb
  428f71:	leave  
  428f72:	mov    edx,0x8e0caa7d
  428f77:	loope  0x428fc2
  428f79:	mov    edx,DWORD PTR [rcx+0x318505d6]
  428f7f:	cmp    ebx,DWORD PTR [rsi+0xb]
  428f82:	mov    esp,0x588f46e6
  428f87:	(bad)  
  428f88:	rex.WRX jb 0x428f3b
  428f8b:	and    DWORD PTR [rax],ebp
  428f8d:	or     DWORD PTR [rbx+rdx*2-0x61],edi
  428f91:	retf   
  428f92:	mov    BYTE PTR [rsi+rdi*2-0x33],ah
  428f96:	sbb    al,0x15
  428f98:	sahf   
  428f99:	xchg   ebx,eax
  428f9a:	ins    BYTE PTR es:[rdi],dx
  428f9b:	mov    bh,0x73
  428f9d:	or     al,0xea
  428f9f:	fwait
  428fa0:	and    eax,0x4476de5b
  428fa5:	jle    0x428f6c
  428fa7:	push   0xffffffff93bedafb
  428fac:	pop    rsi
  428fad:	jb     0x428f9c
  428faf:	xor    esp,DWORD PTR [rax+0x52a888f5]
  428fb5:	fnstcw WORD PTR [rdi+rsi*4]
  428fb8:	cmp    al,0xa5
  428fba:	lock test BYTE PTR [rsi+0x25],dl
  428fbe:	shr    esi,cl
  428fc0:	push   rax
  428fc1:	pop    rdx
  428fc2:	call   0xffffffff9f49aa1d
  428fc7:	or     esi,DWORD PTR [rdx]
  428fc9:	sar    ebx,1
  428fcb:	mov    WORD PTR [rax-0x512aebca],gs
  428fd1:	mov    eax,0x191eb944
  428fd6:	fild   DWORD PTR [rsi-0x1c]
  428fd9:	lods   eax,DWORD PTR ds:[rsi]
  428fda:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  428fdb:	jbe    0x429047
  428fdd:	imul   esi,edi,0x771c5f9d
  428fe3:	or     eax,0xef28f701
  428fe8:	(bad)  
  428fe9:	mov    ecx,ebx
  428feb:	sar    ecx,1
  428fed:	add    ebp,esi
  428fef:	xchg   edi,eax
  428ff0:	rex.XB sub eax,0x8d1c40e6
  428ff6:	mov    dl,0xbf
  428ff8:	or     DWORD PTR [rbp+rdi*4+0x5f3f4f76],ecx
  428fff:	icebp  
  429000:	hlt    
  429001:	rex.W test al,0x3f
  429004:	rex.WRX cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  429006:	and    al,0x7d
  429008:	int    0x3a
  42900a:	clc    
  42900b:	(bad)  
  42900c:	jge    0x429034
  42900e:	call   0xffffffffb3240533
  429013:	xrelease mov BYTE PTR [rdx+0x6],bh
  429017:	imul   ecx,DWORD PTR [rax+0x41],0xe7f0f736
  42901e:	(bad)  
  42901f:	addr32 jae 0x428fd5
  429022:	sub    al,0x3e
  429024:	pop    rdx
  429025:	jge    0x429078
  429027:	mov    BYTE PTR [rcx+0x74],bl
  42902a:	sbb    ebp,0x68f42f0b
  429030:	js     0x428fda
  429032:	jns    0x42904f
  429034:	(bad)  
  429035:	out    dx,al
  429036:	mov    esp,DWORD PTR [rdi+0x71adeb42]
  42903c:	mov    eax,cs
  42903e:	enter  0xa5d7,0x37
  429042:	(bad)  
  429043:	(bad)  
  429044:	jbe    0x429033
  429046:	cmc    
  429047:	sub    edi,DWORD PTR [rcx]
  429049:	ficomp WORD PTR [rdi]
  42904b:	mov    bl,0x7b
  42904d:	mov    bh,0xeb
  42904f:	cmp    BYTE PTR [rdi+riz*2],dh
  429052:	(bad)  
  429053:	(bad)
  429056:	rex.RXB test BYTE PTR [r11-0x3c],r15b
  42905a:	ss lock ret 
  42905d:	cvttps2pi mm4,xmm3
  429060:	rex.WXB int 0x82
  429063:	xchg   edi,eax
  429064:	adc    BYTE PTR [rdx+0x32377f65],al
  42906a:	xchg   ecx,eax
  42906b:	stc    
  42906c:	loop   0x429078
  42906e:	sub    eax,0xb3655d7b
  429073:	mov    WORD PTR [rax-0x5b],?
  429076:	fmul   DWORD PTR [rsi-0x3f]
  429079:	(bad)  
  42907a:	(bad)  
  42907b:	add    al,0x36
  42907d:	(bad)  
  42907e:	or     ah,BYTE PTR [rax-0x4f75f390]
  429084:	xor    al,0xf0
  429086:	out    0x15,eax
  429088:	test   BYTE PTR [rcx+0x11],bl
  42908b:	jg     0x429022
  42908d:	pop    rcx
  42908e:	icebp  
  42908f:	ret    
  429090:	not    DWORD PTR [rdi-0x73a26321]
  429096:	xchg   edx,eax
  429097:	sbb    eax,0xbcbad04a
  42909c:	cmp    cl,bh
  42909e:	(bad)  
  42909f:	mov    ebp,0xf86dff31
  4290a4:	in     eax,0x75
  4290a6:	pop    rdx
  4290a7:	in     al,0xe6
  4290a9:	out    0x48,al
  4290ab:	rex.RX
  4290ac:	rex.WRB push r14
  4290ae:	cwde   
  4290af:	test   DWORD PTR [rsi+rdx*2+0x4f707696],edi
  4290b6:	rcr    BYTE PTR [rbp+0x59],1
  4290b9:	push   rsi
  4290ba:	pop    rsp
  4290bb:	test   eax,0x37b20903
  4290c0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4290c1:	lods   al,BYTE PTR ds:[rsi]
  4290c2:	(bad)  
  4290c3:	xor    edi,DWORD PTR [rax+0x28b80c14]
  4290c9:	popf   
  4290ca:	ins    DWORD PTR es:[rdi],dx
  4290cb:	fwait
  4290cc:	mov    bh,0x93
  4290ce:	out    dx,al
  4290cf:	adc    cl,BYTE PTR [rbp-0x2068d95e]
  4290d5:	sbb    al,0xbe
  4290d7:	sti    
  4290d8:	jbe    0x42907e
  4290da:	add    al,0xbe
  4290dc:	fistp  QWORD PTR [rdi-0x1]
  4290df:	mov    ebp,0xfafdd1f
  4290e4:	jbe    0x42915c
  4290e6:	movabs al,ds:0x6ceb0d3e9fa4de63
  4290ef:	movsxd esp,ebx
  4290f1:	lea    ecx,[rbx]
  4290f3:	retf   0x5a39
  4290f6:	out    0x7a,eax
  4290f8:	imul   edx,DWORD PTR [rbx+rcx*1-0xd],0xc1331deb
  429100:	rex.R (bad) 
  429102:	mov    ebp,0x99f26cb3
  429107:	mov    ecx,0x6f1ab291
  42910c:	out    dx,eax
  42910d:	ins    BYTE PTR es:[rdi],dx
  42910e:	ins    BYTE PTR es:[rdi],dx
  42910f:	mov    WORD PTR [rsi-0x2c3c6c71],cs
  429115:	rcr    DWORD PTR [rcx-0x21291109],1
  42911b:	mov    dh,0x51
  42911d:	mov    ebp,0xfcc6b3ae
  429122:	gs movsxd esp,ebx
  429125:	hlt    
  429126:	lock xchg edx,eax
  429128:	ins    BYTE PTR es:[rdi],dx
  429129:	fsubp  st(7),st
  42912b:	mov    gs,WORD PTR [rdi]
  42912d:	rex.RX (bad) 
  42912f:	addr32 out dx,eax
  429131:	push   0x39312879
  429136:	popf   
  429137:	fst    QWORD PTR [rcx]
  429139:	adc    ebx,edx
  42913b:	push   rbp
  42913c:	(bad)  
  42913d:	cwde   
  42913e:	in     eax,0x9d
  429140:	(bad)  
  429141:	xchg   esi,eax
  429142:	adc    eax,0xe556326e
  429147:	sbb    DWORD PTR [rbx],esi
  429149:	jno    0x429192
  42914b:	(bad)  
  42914d:	(bad)  
  42914e:	push   0x20
  429150:	sbb    BYTE PTR [rax-0x271af667],bl
  429156:	(bad)  [rax-0x64]
  429159:	jrcxz  0x4290e6
  42915b:	xchg   ebx,eax
  42915c:	pop    rcx
  42915d:	mov    bl,0x31
  42915f:	xlat   BYTE PTR ds:[rbx]
  429160:	(bad)  
  429161:	in     al,dx
  429162:	xor    edi,DWORD PTR [rax]
  429164:	or     DWORD PTR [rax],edx
  429166:	adc    eax,0x3e37832f
  42916b:	repnz ror DWORD PTR [rcx],1
  42916e:	adc    ebx,ebp
  429170:	and    eax,0x5f8747ef
  429175:	(bad)  
  429176:	shl    DWORD PTR [rbx+0x5b8d675f],cl
  42917c:	adc    BYTE PTR [rsi+0x795f4b80],ch
  429182:	xchg   edi,eax
  429183:	xor    eax,0x645d24f5
  429188:	fwait
  429189:	(bad)  
  42918a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42918b:	icebp  
  42918c:	rex
  42918d:	stos   QWORD PTR es:[rdi],rax
  42918f:	pop    rbp
  429190:	jrcxz  0x4291fe
  429192:	or     eax,0x42eda638
  429197:	sahf   
  429198:	(bad)  
  429199:	(bad)  
  42919a:	mov    dh,0xdf
  42919c:	out    dx,al
  42919d:	vpsraw xmm5,xmm1,xmm3
  4291a1:	mov    bh,0xc7
  4291a3:	pop    rdx
  4291a4:	pop    rsi
  4291a5:	xchg   edx,eax
  4291a6:	outs   dx,DWORD PTR ds:[rsi]
  4291a7:	outs   dx,BYTE PTR ds:[rsi]
  4291a8:	shr    eax,cl
  4291aa:	or     eax,0xbe74dd15
  4291af:	jo     0x429183
  4291b1:	(bad)  
  4291b2:	push   0x506fcdf6
  4291b7:	(bad)  
  4291b9:	cli    
  4291ba:	cmp    DWORD PTR [rdi+0x78767852],esi
  4291c0:	xchg   ebp,eax
  4291c1:	out    dx,eax
  4291c2:	jo     0x4291af
  4291c4:	cli    
  4291c5:	mov    ebp,0xf09ced4
  4291ca:	and    dl,BYTE PTR [rbp-0x73]
  4291cd:	cdq    
  4291ce:	fstp   QWORD PTR [rdx]
  4291d0:	jo     0x429159
  4291d2:	jl     0x429192
  4291d4:	mov    ebx,0x1c66bbbb
  4291d9:	xor    BYTE PTR [rax],ch
  4291db:	in     al,0xde
  4291dd:	xor    eax,0xc7a03943
  4291e2:	ja     0x429240
  4291e4:	sti    
  4291e5:	scas   al,BYTE PTR es:[rdi]
  4291e6:	(bad)  
  4291e7:	mov    ah,0x4b
  4291e9:	mov    cl,0x6e
  4291eb:	push   rdi
  4291ec:	fs nop
  4291ee:	jrcxz  0x4291a6
  4291f0:	(bad)  
  4291f1:	fwait
  4291f2:	sub    al,0xde
  4291f4:	in     eax,0x49
  4291f6:	pop    rcx
  4291f7:	ficom  DWORD PTR [rip+0xffffffffd18e4d68]        # 0xffffffffd1d0df65
  4291fd:	xchg   ecx,eax
  4291fe:	movabs eax,ds:0x8734f8ed2cce38f3
  429207:	sbb    al,0x49
  429209:	stos   DWORD PTR es:[rdi],eax
  42920a:	sti    
  42920b:	outs   dx,BYTE PTR ds:[rsi]
  42920c:	xchg   ebx,eax
  42920d:	hlt    
  42920e:	sbb    edx,ebx
  429210:	es std 
  429212:	xor    DWORD PTR [rbx+rbp*4],ebp
  429215:	jmp    0x4291b4
  429217:	stc    
  429218:	add    DWORD PTR [rdx+rbx*1+0x21bd0f3],edx
  42921f:	ret    0x4625
  429222:	cmp    DWORD PTR [rsi+0x4d35d839],esi
  429228:	ins    BYTE PTR es:[rdi],dx
  429229:	imul   ebp,DWORD PTR [rsi-0x4d],0x17ebf447
  429230:	int3   
  429231:	add    dl,bl
  429233:	addr32 pop rsp
  429235:	jmp    0x55634802
  42923a:	in     al,0x23
  42923c:	mov    ah,0xff
  42923e:	loopne 0x4292b4
  429240:	sbb    al,0x1a
  429242:	adc    DWORD PTR [rdx],esi
  429244:	in     al,0xba
  429246:	jrcxz  0x429220
  429248:	and    ah,dh
  42924a:	scas   eax,DWORD PTR es:[rdi]
  42924b:	xchg   ebp,eax
  42924c:	fnstenv [rdx]
  42924e:	ret    
  42924f:	out    0x13,al
  429251:	and    al,0xaf
  429253:	push   rsp
  429254:	leave  
  429255:	jrcxz  0x4292ab
  429257:	and    eax,0xa82ed58a
  42925c:	mov    al,0x6a
  42925e:	rex.RB fmul QWORD PTR [r10-0x7f8cfa04]
  429265:	rex.W neg BYTE PTR [rbx+rcx*8-0x3c]
  42926a:	add    ecx,esi
  42926c:	rex.XB or eax,0x1839bf77
  429272:	(bad)  
  429273:	call   rsp
  429275:	jbe    0x42922e
  429277:	cmp    al,0xe2
  429279:	jrcxz  0x429259
  42927b:	movabs al,ds:0x33bdbda8b90bf678
  429284:	xor    bh,BYTE PTR [rbp+0x74b5be08]
  42928a:	test   esi,edi
  42928c:	push   0xfffffffffffffffe
  42928e:	pushf  
  42928f:	iret   
  429290:	or     al,0x6f
  429292:	push   rsi
  429293:	movsxd eax,DWORD PTR [rdi]
  429295:	(bad)  
  429296:	mov    al,0x47
  429298:	jg     0x42927d
  42929a:	call   0xffffffff8dd9bbfb
  42929f:	out    dx,al
  4292a0:	cwde   
  4292a1:	(bad)  
  4292a3:	loopne 0x4292ee
  4292a5:	enter  0xc927,0x16
  4292a9:	fld    QWORD PTR [rdx]
  4292ab:	stos   BYTE PTR es:[rdi],al
  4292ac:	call   0xffffffff834616b3
  4292b1:	adc    eax,0x837c1f55
  4292b6:	movsxd ecx,DWORD PTR [rbp+0xf]
  4292b9:	bswap  esp
  4292bb:	(bad)  
  4292bc:	shl    BYTE PTR [rbp-0x7989800e],1
  4292c2:	jne    0x429341
  4292c4:	mov    bl,0x93
  4292c6:	rex.WRXB (bad) 
  4292c8:	push   rsp
  4292c9:	jne    0x429265
  4292cb:	cld    
  4292cc:	mov    ah,0xd1
  4292ce:	rex.WB in eax,0xea
  4292d1:	(bad)  
  4292d2:	loop   0x4292d3
  4292d4:	(bad)  
  4292d5:	(bad)  
  4292d6:	jg     0x4292a9
  4292d8:	rex.WR lods rax,QWORD PTR ds:[rsi]
  4292da:	(bad)  
  4292db:	(bad)
  4292de:	(bad)  
  4292df:	rol    DWORD PTR [rax+0x7d2fd55a],0x30
  4292e6:	(bad)  
  4292e8:	mov    al,0x4c
  4292ea:	cdq    
  4292eb:	mov    edi,0x51117462
  4292f0:	push   0x6a14c906
  4292f5:	rex.RX mov sil,0xc4
  4292f8:	(bad)  
  4292f9:	mov    edx,0xb8ffbdd2
  4292fe:	mov    edi,0xb077bbbb
  429303:	idiv   ecx
  429305:	mov    ebx,ebp
  429307:	cmp    DWORD PTR [rbp-0x7c024243],0xffffffbd
  42930e:	add    DWORD PTR [rbx+0x779fddfd],0x7a
  429315:	stos   DWORD PTR es:[rdi],eax
  429316:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  429317:	out    dx,al
  429318:	in     eax,dx
  429319:	push   rdi
  42931a:	sub    ebx,DWORD PTR [rdx]
  42931c:	xor    al,0xa3
  42931e:	out    dx,al
  42931f:	xor    DWORD PTR [rdi],edi
  429321:	ror    DWORD PTR [rdi+0x76],cl
  429324:	hlt    
  429325:	sbb    ch,dl
  429327:	mov    ah,0x97
  429329:	(bad)  
  42932a:	repz mov cl,0xf9
  42932d:	xchg   esp,eax
  42932e:	sbb    al,0x4e
  429330:	jg     0x429362
  429332:	mov    ch,0xd1
  429334:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  429335:	xor    ebp,DWORD PTR [rdi+0x40]
  429338:	scas   eax,DWORD PTR es:[rdi]
  429339:	iret   
  42933a:	mov    esi,0x767a777f
  42933f:	clc    
  429340:	cmp    bh,BYTE PTR [rcx-0x1ef1b4c4]
  429346:	stc    
  429347:	mov    ecx,eax
  429349:	rex.WB jo 0x4292f8
  42934c:	adc    DWORD PTR [rsi-0x6e],esi
  42934f:	jns    0x429341
  429351:	mov    ebp,0xa6e2307a
  429356:	mov    dl,0x20
  429358:	(bad)  
  429359:	je     0x4292fd
  42935b:	fcmovne st,st(7)
  42935d:	adc    dl,BYTE PTR [rsi-0x43cb4ae3]
  429363:	imul   esp,esi,0x8f08df0f
  429369:	stc    
  42936a:	jb     0x42930b
  42936c:	sub    esi,0xffffffce
  42936f:	js     0x4293b8
  429371:	ja     0x429367
  429373:	in     al,0x4b
  429375:	push   rcx
  429376:	pop    rsi
  429377:	or     DWORD PTR [rcx+0x49],ebp
  42937a:	rcr    dl,0x96
  42937d:	nop
  42937e:	frstor [rdx-0x78]
  429381:	xchg   esi,eax
  429382:	sub    esp,DWORD PTR [rbx-0x3e]
  429385:	in     eax,0x71
  429387:	cmp    dh,BYTE PTR [rax]
  429389:	and    BYTE PTR [rbx+0x68],bl
  42938c:	rex.X adc BYTE PTR [rcx],dl
  42938f:	rcl    BYTE PTR [rdx+0xedd2d48],1
  429395:	(bad)  
  429396:	js     0x42934e
  429398:	jb     0x4293e2
  42939a:	out    0x32,al
  42939c:	iret   
  42939d:	ds (bad) 
  42939f:	(bad)  
  4293a0:	ins    DWORD PTR es:[rdi],dx
  4293a1:	fxch   st(3)
  4293a3:	add    al,0x5e
  4293a5:	outs   dx,BYTE PTR ds:[rsi]
  4293a6:	je     0x429408
  4293a8:	sub    DWORD PTR [rcx+0x77],edx
  4293ab:	rex.R pop rsi
  4293ad:	imul   edx,DWORD PTR [rdi+0x7c8ae581],0x22a3be8e
  4293b7:	fnstcw WORD PTR [rbp-0x7e]
  4293ba:	jle    0x42939f
  4293bc:	(bad)  
  4293be:	cmp    edx,esi
  4293c0:	ret    
  4293c1:	retf   
  4293c2:	sbb    eax,0x793a3f78
  4293c7:	div    DWORD PTR [rip+0xffffffff9fdfb862]        # 0xffffffffa0224c2f
  4293cd:	pop    rbp
  4293ce:	mov    esp,0x4966991e
  4293d3:	ret    
  4293d4:	fld    DWORD PTR [rax-0x5edb706d]
  4293da:	hlt    
  4293db:	mov    cl,bh
  4293dd:	and    eax,0xbc4ffa7d
  4293e2:	popf   
  4293e3:	cli    
  4293e4:	ss sti 
  4293e6:	add    ebp,ebx
  4293e8:	hlt    
  4293e9:	rex.WR (bad) 
  4293eb:	stos   BYTE PTR es:[rdi],al
  4293ec:	rcl    DWORD PTR [rcx],0xbf
  4293ef:	xor    eax,0xe5f8ddbc
  4293f4:	cmp    al,0x9d
  4293f6:	fcom   QWORD PTR [rax+0x159bce8d]
  4293fc:	movabs al,ds:0xb5e990ef92c21dba
  429405:	rcl    DWORD PTR [rax+rbx*8-0x535a9772],cl
  42940c:	sub    al,0x92
  42940e:	stos   DWORD PTR es:[rdi],eax
  42940f:	xor    eax,0xafd7b423
  429414:	jmp    0xd24d
  429418:	sbb    BYTE PTR [rsi],bl
  42941a:	add    ebp,edi
  42941c:	movsxd esi,edx
  42941e:	stc    
  42941f:	(bad)  
  429420:	jle    0x4293b4
  429422:	scas   al,BYTE PTR es:[rdi]
  429423:	or     eax,0xd8277b4
  429428:	or     BYTE PTR [rax+rax*1],0x14
  42942c:	(bad)  
  42942d:	mov    ecx,0x527c2652
  429432:	cmp    edx,DWORD PTR [rcx-0x1b]
  429435:	mov    al,al
  429437:	cmp    eax,esp
  429439:	(bad)  
  42943a:	fldcw  WORD PTR [rbp+0x7e4a8110]
  429440:	rex.WR push rdi
  429442:	imul   edx,DWORD PTR [rbx+rsi*2-0x79],0xfffffff7
  429447:	sar    DWORD PTR [rdx-0x186d2b1d],cl
  42944d:	add    eax,0xd1001daa
  429452:	(bad)  
  429453:	mov    dl,0xe4
  429455:	sub    DWORD PTR [rdi-0x7253ef32],esp
  42945b:	add    DWORD PTR [rsp+rax*4-0x47c2ec94],esi
  429462:	rex.RXB sbb al,0xd0
  429465:	add    al,0x4d
  429467:	jmp    0xffffffff91ae1f4d
  42946c:	jmp    0x429426
  42946e:	and    BYTE PTR [rbx-0x23],dh
  429471:	cwde   
  429472:	scas   al,BYTE PTR es:[rdi]
  429473:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  429474:	(bad)  
  429475:	sub    esi,ecx
  429477:	jne    0x4294e8
  429479:	and    al,0x63
  42947b:	fstp   QWORD PTR [rax]
  42947d:	push   rsp
  42947e:	or     al,0x4d
  429480:	out    dx,al
  429481:	sub    eax,eax
  429483:	test   DWORD PTR [rbx-0x37],ebx
  429486:	imul   ecx,esi,0xfffffffb
  429489:	mov    bh,0x14
  42948b:	(bad)  
  42948c:	je     0x429507
  42948e:	rcl    edi,1
  429490:	fprem1 
  429492:	mov    DWORD PTR [rcx-0x49],ebx
  429495:	mul    DWORD PTR [rbx+rsi*2+0x671dd25e]
  42949c:	(bad)  
  42949d:	js     0x4294c2
  42949f:	sar    BYTE PTR [rcx-0x19],0x8
  4294a3:	xchg   edx,eax
  4294a4:	fisubr WORD PTR [rbx+0x369ad7ad]
  4294aa:	in     eax,0x97
  4294ac:	in     al,0xe6
  4294ae:	rex.W xor dil,BYTE PTR [rbx]
  4294b1:	(bad)  
  4294b2:	lods   al,BYTE PTR ds:[rsi]
  4294b3:	popf   
  4294b4:	ror    DWORD PTR [rip+0x2dec8c80],0x60        # 0x2e2f213b
  4294bb:	xchg   ecx,eax
  4294bc:	xchg   esp,eax
  4294bd:	pop    rsi
  4294be:	and    DWORD PTR [rdx],0x4deeae47
  4294c4:	sbb    eax,ebx
  4294c6:	(bad)  
  4294c7:	fdivr  QWORD PTR [rbx+0x66]
  4294ca:	lea    ebp,[rax-0x4c564357]
  4294d0:	fst    DWORD PTR [rip+0xaf65059]        # 0xb38e52f
  4294d6:	loope  0x429472
  4294d8:	movabs al,ds:0x31859774485e658e
  4294e1:	jo     0x429535
  4294e3:	rex.B ins BYTE PTR es:[rdi],dx
  4294e5:	mov    al,0x2c
  4294e7:	mov    ecx,0x85775886
  4294ec:	mov    bl,bl
  4294ee:	xor    al,BYTE PTR [rbx+riz*8+0x48667fa2]
  4294f5:	xchg   esi,eax
  4294f6:	ins    DWORD PTR es:[rdi],dx
  4294f7:	scas   al,BYTE PTR es:[rdi]
  4294f8:	and    eax,0x313c3c3a
  4294fd:	fistp  QWORD PTR [rdx]
  4294ff:	cmp    dh,BYTE PTR [rdi+0x34]
  429502:	pop    rbx
  429503:	test   DWORD PTR [rbx],0x5820c422
  429509:	test   BYTE PTR [rdi+0x77],dl
  42950c:	rex.WXB or QWORD PTR [r10],rbp
  42950f:	rcl    DWORD PTR [rbx+rbx*4],0x7d
  429513:	and    dh,BYTE PTR [rsi+0x339b1946]
  429519:	rep lods al,BYTE PTR ds:[rsi]
  42951b:	push   rsi
  42951c:	(bad)  
  42951d:	jrcxz  0x4294c4
  42951f:	(bad)  
  429520:	lock jae 0x4294eb
  429523:	rex.X (bad) 
  429525:	ins    DWORD PTR es:[rdi],dx
  429526:	shr    DWORD PTR [rdi+0x50],cl
  429529:	add    BYTE PTR [rbx],cl
  42952b:	out    0x96,al
  42952d:	(bad)  
  42952e:	rex xor eax,0x37b16d0e
  429534:	cs rex.RB (bad) 
  429537:	rex.WR stos BYTE PTR es:[rdi],al
  429539:	mov    dh,0x68
  42953b:	sub    al,dl
  42953d:	scas   eax,DWORD PTR es:[rdi]
  42953e:	sub    DWORD PTR [rbx-0x427daf70],ebx
  429544:	lsl    ebx,bp
  429547:	rex.WRXB out 0xa2,eax
  42954a:	add    eax,0x728d6cca
  42954f:	cmp    DWORD PTR [rsi+0xb],esi
  429552:	rex.WXB jnp 0x429559
  429555:	jo     0x42959d
  429557:	push   0xfffffffffffffff2
  429559:	sub    BYTE PTR [rbp+rax*2-0x21229b5c],ch
  429560:	in     al,dx
  429561:	or     edi,ecx
  429563:	adc    BYTE PTR [rcx],0x28
  429566:	enter  0x586e,0xd6
  42956a:	jbe    0x429553
  42956c:	cwde   
  42956d:	fsqrt  
  42956f:	sub    BYTE PTR [rdi],dl
  429571:	loop   0x429579
  429573:	jo     0x429523
  429575:	movabs eax,ds:0x2c3cde5abbc911b8
  42957e:	push   0xffffffffffffffc2
  429580:	cs test eax,0x67bb38c5
  429586:	imul   edx,DWORD PTR [rax-0x717a14e9],0x1f51e274
  429590:	(bad)  
  429591:	pop    rax
  429592:	rcr    ecx,0x5a
  429595:	jae    0x4295f7
  429597:	(bad)
  42959a:	sbb    esp,ecx
  42959c:	or     DWORD PTR [rcx+rsi*8],0xf5216b0e
  4295a3:	scas   al,BYTE PTR es:[rdi]
  4295a4:	test   DWORD PTR [rdx-0x43187e3a],ecx
  4295aa:	nop
  4295ab:	and    esp,0xffffffab
  4295ae:	mov    ah,0xce
  4295b0:	(bad)  
  4295b1:	jge    0x429554
  4295b3:	adc    eax,0x14719a17
  4295b8:	stos   BYTE PTR es:[rdi],al
  4295b9:	push   rbp
  4295ba:	(bad)  
  4295bb:	icebp  
  4295bc:	mov    ecx,DWORD PTR fs:[rcx]
  4295bf:	sub    esi,DWORD PTR [rdi+0x4af7c987]
  4295c5:	adc    al,0x6f
  4295c7:	mov    WORD PTR [rax-0x1c],cs
  4295ca:	cmp    DWORD PTR [rdx+0x40],edx
  4295cd:	sbb    BYTE PTR [rdx+0x13],0x24
  4295d1:	or     DWORD PTR [rdi+0x7e9fd93d],ebx
  4295d7:	rex.RB outs dx,DWORD PTR ds:[rsi]
  4295d9:	jl     0x42959f
  4295db:	jno    0x429645
  4295dd:	(bad)  
  4295de:	push   rbp
  4295df:	sar    edx,cl
  4295e1:	movabs ds:0x99711444ad61858d,eax
  4295ea:	sbb    DWORD PTR [rsi],esp
  4295ec:	test   BYTE PTR fs:[rdi-0x60],ch
  4295f0:	pop    rsp
  4295f1:	pop    rdx
  4295f2:	or     BYTE PTR [rcx],0xfe
  4295f5:	ins    DWORD PTR es:[rdi],dx
  4295f6:	(bad)  
  4295f7:	scas   eax,DWORD PTR es:[rdi]
  4295f8:	(bad)  
  4295f9:	jns    0x42957b
  4295fb:	(bad)  
  4295fc:	mov    dh,0x16
  4295fe:	add    al,0xa2
  429600:	push   rdi
  429601:	rex.RXB (bad) 
  429603:	cmp    edx,ebx
  429605:	mov    ch,BYTE PTR [rax+0x184cc0c1]
  42960b:	lea    r9,[r8]
  42960e:	shl    BYTE PTR [rbx+0x4b7fe3cb],1
  429614:	(bad)  
  429615:	mov    ebx,0xb1073e1
  42961a:	mov    BYTE PTR [rax],bl
  42961c:	xchg   esi,eax
  42961d:	(bad)  
  42961e:	mov    esi,DWORD PTR [rsi-0x7d]
  429621:	movabs eax,ds:0xcb14b966643a0cef
  42962a:	mov    edi,0xce79a921
  42962f:	rex.WRXB pop r12
  429631:	xchg   edi,eax
  429632:	(bad)  
  429633:	movabs eax,ds:0x54108bc5b2a4946
  42963c:	(bad)  
  42963d:	push   rcx
  42963e:	mov    ebx,DWORD PTR [rcx-0x6f]
  429641:	repz xchg esp,eax
  429643:	xor    esp,ebp
  429645:	lahf   
  429646:	int3   
  429647:	rol    DWORD PTR [rsi-0x3f],0x28
  42964b:	or     BYTE PTR [rax-0x40],dl
  42964e:	lods   eax,DWORD PTR ds:[rsi]
  42964f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  429650:	sbb    al,0x17
  429652:	shl    DWORD PTR [rdx+0x9],0xa0
  429656:	rex.WX cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  429658:	(bad)  
  429659:	push   rbx
  42965a:	xchg   ebx,eax
  42965b:	jb     0x429646
  42965d:	sbb    BYTE PTR [rdi-0x7e927d72],ch
  429663:	jbe    0x429664
  429665:	(bad)  
  429666:	cmp    dh,BYTE PTR [rdx+0x1f]
  429669:	hlt    
  42966a:	(bad)  
  42966c:	sub    edx,DWORD PTR [rax-0x3d2add05]
  429672:	fistp  DWORD PTR [rbx+0x56]
  429675:	(bad)  
  429676:	sbb    eax,0xae766df
  42967b:	cmp    ah,al
  42967d:	rex.X rcl BYTE PTR [rip+0xffffffffe208e400],1        # 0xffffffffe24b7a84
  429684:	out    0xb8,al
  429686:	push   rbx
  429687:	push   rbp
  429688:	push   0xfffffffffffffffa
  42968a:	(bad)  
  42968b:	adc    ebx,DWORD PTR [rax-0x25]
  42968e:	call   0xffffffffa3cd7721
  429693:	ret    0xc6da
  429696:	lock outs dx,BYTE PTR ds:[rsi]
  429698:	shr    DWORD PTR [rdx+0x1b],cl
  42969b:	xchg   esp,eax
  42969c:	lss    eax,FWORD PTR [rdi-0x34]
  4296a0:	sub    dh,ch
  4296a2:	(bad)  
  4296a3:	je     0x42971b
  4296a5:	hlt    
  4296a6:	in     eax,dx
  4296a7:	test   al,0x95
  4296a9:	adc    al,0x50
  4296ab:	jae    0x4296f6
  4296ad:	(bad)  
  4296ae:	imul   r13d,DWORD PTR [rdi+0x74],0x36
  4296b3:	mov    ah,0x91
  4296b5:	xchg   BYTE PTR [rdi],ah
  4296b7:	rex.WRB
  4296b8:	rex.RXB cmp al,0x59
  4296bb:	ds xor al,0xf
  4296be:	lea    ecx,[rdx-0x69]
  4296c1:	rex.WRB stos QWORD PTR es:[rdi],rax
  4296c3:	pop    rcx
  4296c4:	movabs ds:0x6e51639d1e649fa8,al
  4296cd:	js     0x429706
  4296cf:	(bad)  
  4296d0:	out    dx,eax
  4296d1:	lahf   
  4296d2:	mov    dl,0x56
  4296d4:	cdq    
  4296d5:	enter  0x7f64,0xcc
  4296d9:	or     edi,DWORD PTR [rsi]
  4296db:	(bad)  
  4296dc:	cwde   
  4296dd:	mov    esi,0x5e12ecc4
  4296e2:	rex.RB
  4296e3:	fs lahf 
  4296e5:	ror    DWORD PTR [rcx],1
  4296e7:	in     al,0x9d
  4296e9:	cmp    edi,eax
  4296eb:	out    0xde,al
  4296ed:	jo     0x4296aa
  4296ef:	fwait
  4296f0:	out    dx,al
  4296f1:	movabs al,ds:0xea6eda6a1224e355
  4296fa:	xor    DWORD PTR [rdi-0x2b],esp
  4296fd:	or     DWORD PTR [rip+0x1f7c84bc],edx        # 0x1fbf1bbf
  429703:	fisub  WORD PTR [rbx]
  429705:	jmp    0x3451443f
  42970a:	fcmovnb st,st(2)
  42970c:	(bad)  
  42970d:	pop    rcx
  42970e:	scas   al,BYTE PTR es:[rdi]
  42970f:	outs   dx,BYTE PTR ds:[rsi]
  429710:	(bad)  
  429711:	or     DWORD PTR [rbx],0x30
  429714:	xchg   rdx,rax
  429716:	sub    ebx,edx
  429718:	fs jle 0x42974a
  42971b:	rex.WB sub BYTE PTR [r10+0x29101b],spl
  429722:	mov    esp,0x1e7f9f12
  429727:	call   0xffffffffd42f36ae
  42972c:	(bad)  
  42972d:	out    0xd7,al
  42972f:	sahf   
  429730:	mul    DWORD PTR [rbx+0x46]
  429733:	push   rax
  429734:	adc    esi,edx
  429736:	rex lgs ebp,FWORD PTR ss:[rsi]
  42973b:	nop
  42973c:	mov    BYTE PTR [rbp-0x1e496a1f],al
  429742:	(bad)  
  429743:	fcmove st,st(0)
  429745:	rex.WR mov al,0xcb
  429748:	cli    
  429749:	rex.WRX out dx,al
  42974b:	outs   dx,DWORD PTR ds:[rsi]
  42974c:	mov    al,0x79
  42974e:	int    0x1d
  429750:	imul   r8,QWORD PTR [r14-0x33cf52d4],0x54
  429758:	rex.WR jbe 0x4297d6
  42975b:	jmp    0x4297c6
  42975d:	int    0x46
  42975f:	jae    0x429780
  429761:	shl    BYTE PTR [rbp-0x573fb9b6],cl
  429767:	xchg   esp,eax
  429768:	xchg   BYTE PTR [rcx-0x6e],ch
  42976b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  42976c:	xor    esi,DWORD PTR [rsi+0x77]
  42976f:	je     0x429767
  429771:	xchg   ecx,eax
  429772:	lods   eax,DWORD PTR ds:[rsi]
  429773:	sub    ebx,esp
  429775:	fs (bad) 
  429777:	sti    
  429778:	(bad)  
  429779:	fnstsw WORD PTR [rcx-0x1]
  42977c:	imul   edi,DWORD PTR [rdx+0x4dac9873],0xffffffc6
  429783:	rol    BYTE PTR [rcx+rsi*4],0xc4
  429787:	scas   eax,DWORD PTR es:[rdi]
  429788:	and    eax,0xb12d3abc
  42978d:	stos   DWORD PTR es:[rdi],eax
  42978e:	push   rbp
  42978f:	out    dx,eax
  429790:	loope  0x4297cb
  429792:	rex.X push rcx
  429794:	xchg   DWORD PTR [rsi],ecx
  429796:	in     eax,dx
  429797:	fs call 0x7e8cc035
  42979d:	sbb    al,BYTE PTR [rsi+0xd]
  4297a0:	mov    ch,0xdf
  4297a2:	xlat   BYTE PTR ds:[rbx]
  4297a3:	scas   al,BYTE PTR es:[rdi]
  4297a4:	cmp    al,0xb6
  4297a6:	mov    ebx,0x66cc8952
  4297ab:	pop    rsp
  4297ac:	jne    0x4297c0
  4297ae:	sub    DWORD PTR [rcx+rax*8],esp
  4297b1:	imul   ebp,DWORD PTR [rdi-0x48],0x3657ebeb
  4297b8:	in     eax,dx
  4297b9:	test   eax,0x4d141642
  4297be:	icebp  
  4297bf:	xchg   BYTE PTR [rdi+0x70a52ca2],ah
  4297c5:	xlat   BYTE PTR ds:[rbx]
  4297c6:	rex.WRX out 0x35,eax
  4297c9:	stc    
  4297ca:	fstp   DWORD PTR [rsi]
  4297cc:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4297cd:	push   rbp
  4297ce:	fwait
  4297cf:	xchg   ebx,eax
  4297d0:	and    al,0xf4
  4297d2:	pop    rbx
  4297d3:	xchg   esp,eax
  4297d4:	(bad)  
  4297d5:	xchg   edi,eax
  4297d6:	int    0x17
  4297d8:	jns    0x3a06bbf4
  4297df:	jp     0x4297cb
  4297e1:	mov    ss,esp
  4297e3:	xor    edi,DWORD PTR [rbx-0x31b82d24]
  4297e9:	(bad)  
  4297ea:	nop
  4297eb:	sub    bh,BYTE PTR [rsi]
  4297ed:	or     al,0xe0
  4297ef:	xchg   edx,esi
  4297f1:	test   eax,0xcacdf984
  4297f6:	push   rsp
  4297f7:	mov    dh,0xa3
  4297f9:	test   DWORD PTR ss:[rdx],esi
  4297fc:	in     eax,dx
  4297fd:	addr32 pop rsp
  4297ff:	mov    dh,0xb6
  429801:	mov    esp,0x4ae6d09c
  429806:	shr    DWORD PTR [rsi],0x6a
  429809:	xchg   ebp,eax
  42980a:	adc    BYTE PTR [rdx-0x2b7cb6ef],bh
  429810:	cmc    
  429811:	or     al,0x75
  429813:	jns    0x4297fd
  429815:	pop    rsp
  429816:	mov    bl,0x7f
  429818:	pushf  
  429819:	mov    dh,0x96
  42981b:	xchg   edx,eax
  42981c:	rex.WRB movabs r10,0xdcb3bb4ccf559be8
  429826:	je     0x429890
  429828:	adc    edi,DWORD PTR [rsi+rbx*1]
  42982b:	pop    rdx
  42982c:	outs   dx,BYTE PTR ds:[rsi]
  42982d:	rex.R
  42982e:	movabs eax,fs:0x11e4aedf519b616e
  429838:	adc    dl,dl
  42983a:	jne    0x4297c1
  42983c:	cs pop rdi
  42983e:	add    edi,ebp
  429840:	fs lock mov edi,0x3d486664
  429847:	(bad)  
  429848:	hlt    
  429849:	sbb    BYTE PTR [rax],ch
  42984b:	push   rdi
  42984c:	(bad)  
  42984d:	pop    rsi
  42984e:	fidivr DWORD PTR [rbp-0x1fbe0bdc]
  429854:	adc    esi,DWORD PTR [rsp+rdx*2]
  429857:	(bad)  
  429858:	loope  0x4297ef
  42985a:	cwde   
  42985b:	in     eax,0x6c
  42985d:	and    al,cl
  42985f:	(bad)  
  429860:	sbb    eax,0x4b759e7b
  429865:	lods   al,BYTE PTR ds:[rsi]
  429866:	mov    BYTE PTR [rax+0x5c36e6e0],ch
  42986c:	sub    DWORD PTR [rdx-0x20],eax
  42986f:	add    eax,0x8bdb0e83
  429874:	in     al,dx
  429875:	sub    esp,DWORD PTR [rdx+0x8]
  429878:	cmp    eax,0x5a7f532a
  42987d:	(bad)  
  42987e:	xchg   esi,eax
  42987f:	fcmovnbe st,st(0)
  429881:	sahf   
  429882:	repnz out 0xb7,al
  429885:	scas   al,BYTE PTR es:[rdi]
  429886:	or     al,0x26
  429888:	outs   dx,BYTE PTR ds:[rsi]
  429889:	(bad)  
  42988a:	cwde   
  42988b:	(bad)  
  42988c:	(bad)  
  42988d:	out    dx,eax
  42988e:	vpsllw ymm4,ymm12,XMMWORD PTR [rip+0xffffffffbf08617f]        # 0xffffffffbf4afa15
  429896:	cmp    edi,DWORD PTR [rdi-0x1f]
  429899:	pushf  
  42989a:	fidiv  DWORD PTR [rdx+0x4bc81c0f]
  4298a0:	(bad)  
  4298a1:	neg    ah
  4298a3:	adc    ecx,DWORD PTR [rdi+0x4e]
  4298a6:	jnp    0x4298fe
  4298a8:	clc    
  4298a9:	jns    0x429910
  4298ab:	sub    esi,0x14
  4298ae:	test   esp,eax
  4298b0:	and    ebx,esp
  4298b2:	mov    edi,0x3c62bbf2
  4298b7:	ficom  WORD PTR [rbx+0x13]
  4298ba:	rex.XB (bad) 
  4298bc:	xlat   BYTE PTR ds:[rbx]
  4298bd:	mov    ebp,edi
  4298bf:	gs jg  0x429931
  4298c2:	xchg   DWORD PTR [rbx],edi
  4298c4:	movabs ds:0x307496c9d7a11cb5,eax
  4298cd:	adc    BYTE PTR [rsp+rax*1],bl
  4298d0:	xchg   esp,eax
  4298d1:	pop    rbp
  4298d2:	jno    0x4298d7
  4298d4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4298d5:	ins    BYTE PTR es:[rdi],dx
  4298d6:	add    BYTE PTR [rdx-0x55463311],al
  4298dc:	xor    eax,0xd5d2baf3
  4298e1:	fs out dx,al
  4298e3:	pop    rdx
  4298e4:	lock jnp 0x429930
  4298e7:	retf   0x3122
  4298ea:	pop    rdi
  4298eb:	fadd   DWORD PTR [rip+0x6f955bea]        # 0x6fd7f4db
  4298f1:	xchg   ebx,eax
  4298f2:	stos   BYTE PTR es:[rdi],al
  4298f3:	and    bh,bl
  4298f5:	push   rsi
  4298f6:	push   rbx
  4298f7:	rex.RX sbb DWORD PTR [rax-0x10e87aec],0x1d1cb66c
  429902:	je     0x429892
  429904:	mov    al,0x9b
  429906:	sbb    eax,0xeef8717d
  42990b:	jmp    0x429970
  42990d:	push   0x74ed9002
  429912:	rex jae 0x4298ef
  429915:	in     eax,dx
  429916:	shl    DWORD PTR [rip+0x33336cd7],cl        # 0x337605f3
  42991c:	(bad)  
  42991d:	hlt    
  42991e:	pop    rbx
  42991f:	cmp    eax,0x4e4a6494
  429924:	push   rbp
  429925:	rex.W
  429926:	gs repz (bad) 
  429929:	mov    ecx,0x91b6d305
  42992e:	test   al,0x47
  429930:	adc    eax,0x8c19041a
  429935:	(bad)  
  429936:	or     al,0x50
  429938:	(bad)  
  429939:	mov    ch,0x7f
  42993b:	mov    esp,0xd8032d40
  429940:	addr32 rex.WRX int3 
  429943:	test   al,0x9f
  429945:	fdivr  DWORD PTR gs:[rsi]
  429948:	mov    ebx,DWORD PTR [rbx]
  42994a:	(bad)  
  42994b:	enter  0x6d62,0xfa
  42994f:	or     dh,BYTE PTR [rsi]
  429951:	std    
  429952:	shl    bh,1
  429954:	stos   BYTE PTR es:[rdi],al
  429955:	jno    0x42999d
  429957:	(bad)  
  429958:	fsubp  st(6),st
  42995a:	scas   al,BYTE PTR es:[rdi]
  42995b:	jrcxz  0x4299a7
  42995d:	rex.WX ins DWORD PTR es:[rdi],dx
  42995f:	add    DWORD PTR [rcx-0x226d534c],0xffffffc1
  429966:	mov    edx,DWORD PTR [rdi]
  429968:	stos   DWORD PTR es:[rdi],eax
  429969:	add    al,0xa1
  42996b:	ins    DWORD PTR es:[rdi],dx
  42996c:	adc    al,0xc9
  42996e:	ror    bh,cl
  429970:	(bad)  
  429971:	fucom  st(6)
  429973:	sbb    BYTE PTR [rsi],0x5d
  429976:	(bad)  
  429977:	(bad)
  42997c:	rcl    DWORD PTR es:[rbx],0xd6
  429980:	push   rsi
  429981:	imul   edx,DWORD PTR [rcx],0xf
  429984:	cmova  ebp,DWORD PTR [rbx+0x10]
  429988:	sub    ebp,DWORD PTR ds:[rcx+rbx*2-0x1e46acbd]
  429990:	rex.WX (bad) 
  429992:	xor    DWORD PTR [rbx+0xb419d40],0x36e61482
  42999c:	mov    bh,bl
  42999e:	test   al,0x89
  4299a0:	icebp  
  4299a1:	or     al,0xf8
  4299a3:	adc    eax,0x8e157453
  4299a8:	rex.RX push rbp
  4299aa:	(bad)  
  4299ab:	mul    edi
  4299ad:	in     al,0xff
  4299af:	cmp    edi,DWORD PTR [rcx-0x9]
  4299b2:	xor    eax,0x6d8c43bb
  4299b7:	maxps  xmm7,xmm2
  4299ba:	rex.WRX (bad) 
  4299bc:	sar    BYTE PTR [rdi-0x31],cl
  4299bf:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4299c0:	rex.RXB add al,0x27
  4299c3:	add    eax,0x9ef9837c
  4299c8:	repz rex.X
  4299ca:	rex.WX movabs rsp,0x3265e55f71557aba
  4299d4:	lock xchg esp,eax
  4299d6:	adc    esp,DWORD PTR [rcx+0x3c]
  4299d9:	and    cl,ch
  4299db:	fs jle 0x42998d
  4299de:	xchg   esi,eax
  4299df:	xchg   ecx,eax
  4299e0:	jl     0x4299e3
  4299e2:	lods   eax,DWORD PTR ds:[rsi]
  4299e3:	imul   esp,DWORD PTR [rsi+rax*8+0x36],0xffffffcb
  4299e8:	jbe    0x429a18
  4299ea:	fwait
  4299eb:	out    0xd8,eax
  4299ed:	sub    DWORD PTR [r14+0x12],0x67f24f9
  4299f5:	out    0xbb,eax
  4299f7:	movabs ds:0xb6f6a4692bae3c89,eax
  429a00:	cmp    al,BYTE PTR [rdx]
  429a02:	jb     0x429a2e
  429a04:	call   0xffffffffaee2582d
  429a09:	sbb    edx,DWORD PTR [rdx+0x52f931cb]
  429a0f:	popf   
  429a10:	push   rsi
  429a11:	sbb    ebp,DWORD PTR [rsp+rax*8+0x65]
  429a15:	stc    
  429a16:	iret   
  429a17:	div    DWORD PTR [rbx+0x4d]
  429a1a:	psubsw mm4,QWORD PTR [rax-0x1890e28e]
  429a21:	shl    eax,cl
  429a23:	push   0x5d
  429a25:	rex.RXB mov r14d,0xd3f9f78d
  429a2b:	imul   edi,esp,0x4ebefc73
  429a31:	rex.WRB in al,0x0
  429a34:	nop
  429a35:	sub    rbx,QWORD PTR [rax+r11*2+0x6d54c936]
  429a3d:	sbb    edx,edx
  429a3f:	ret    0x3921
  429a42:	repnz mov dh,0x5a
  429a45:	mov    dl,0x91
  429a47:	rex.W
  429a48:	cmp    ecx,DWORD PTR ss:[rax]
  429a4b:	mov    bl,0x68
  429a4d:	jno    0xffffffffd7d99b94
  429a53:	(bad)  
  429a54:	pop    rsp
  429a55:	pop    rax
  429a56:	sub    al,0x97
  429a58:	rex.RB xchg r9d,eax
  429a5a:	xchg   ecx,eax
  429a5b:	xchg   ecx,eax
  429a5c:	mov    al,BYTE PTR [rdx]
  429a5e:	fidivr DWORD PTR [rcx]
  429a60:	fisttp DWORD PTR [rbx]
  429a62:	jge    0x429adf
  429a64:	mov    ch,BYTE PTR [rdx+0x544d4a5]
  429a6a:	shl    DWORD PTR ds:[rsi+rdi*1-0x53],0x6f
  429a70:	add    BYTE PTR [rsp+rsi*4],bl
  429a73:	scas   al,BYTE PTR es:[rdi]
  429a74:	test   al,0x50
  429a76:	mov    ebp,0x5db9e7c2
  429a7b:	shl    BYTE PTR [rdi+0x72829958],cl
  429a81:	fstp   QWORD PTR [rdx+0x6c0cf68a]
  429a87:	ins    BYTE PTR es:[rdi],dx
  429a88:	nop
  429a89:	adc    edi,DWORD PTR [rsi-0x79]
  429a8c:	pop    rsp
  429a8d:	icebp  
  429a8e:	movabs ds:0xef1fd6be97d50270,eax
  429a97:	(bad)  
  429a98:	or     al,0xf
  429a9a:	js     0x429a82
  429a9c:	cmp    eax,0x4f63c9ef
  429aa1:	sbb    al,0xeb
  429aa3:	out    dx,eax
  429aa4:	xchg   ecx,eax
  429aa5:	mov    eax,0x279d0e22
  429aaa:	enter  0x5ba2,0xbd
  429aae:	in     eax,dx
  429aaf:	rex.WRB
  429ab0:	rep ins DWORD PTR es:[rdi],dx
  429ab2:	add    DWORD PTR [rax],edi
  429ab4:	jge    0x429b16
  429ab6:	cdq    
  429ab7:	xor    DWORD PTR [rsi-0x42],0xd8305cb3
  429abe:	push   rcx
  429abf:	scas   al,BYTE PTR es:[rdi]
  429ac0:	pushf  
  429ac1:	pop    rcx
  429ac2:	ins    BYTE PTR es:[rdi],dx
  429ac3:	push   rsp
  429ac4:	mov    esp,0xfc38b5fb
  429ac9:	ret    0x907b
  429acc:	data16 movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  429ace:	pop    rbx
  429acf:	mov    al,0xf9
  429ad1:	mov    ebx,DWORD PTR [rax+0x37]
  429ad4:	out    0xc9,eax
  429ad6:	loope  0x429a73
  429ad8:	sbb    BYTE PTR [rcx],ah
  429ada:	ja     0x429a6c
  429adc:	test   eax,0x3e91180d
  429ae1:	mov    edx,0xae023724
  429ae6:	ds mov ch,0x47
  429ae9:	mov    edi,0xeaf8be3b
  429aee:	ins    BYTE PTR es:[rdi],dx
  429aef:	je     0x429b5d
  429af1:	(bad)  
  429af2:	jrcxz  0x429ae9
  429af4:	icebp  
  429af5:	push   rdi
  429af6:	out    dx,eax
  429af7:	rex.WB push 0xffffffffffffffd1
  429afa:	out    dx,al
  429afb:	(bad)  
  429afc:	xlat   BYTE PTR ds:[rbx]
  429afd:	xor    esi,DWORD PTR [rcx+0x1f]
  429b00:	mov    bh,bh
  429b02:	mov    ecx,edx
  429b04:	and    ah,BYTE PTR [rdx]
  429b06:	imul   ecx,DWORD PTR [rdx],0x20f594db
  429b0c:	sub    eax,0x3c556789
  429b11:	cs in  al,dx
  429b13:	(bad)  
  429b14:	retf   
  429b15:	fcom   DWORD PTR [rdi-0x67]
  429b18:	and    ecx,DWORD PTR [rip+0x243e4981]        # 0x2480e49f
  429b1e:	jrcxz  0x429b27
  429b20:	shl    BYTE PTR gs:[rax+0x5e],0xca
  429b25:	push   rcx
  429b26:	(bad)  
  429b27:	(bad)  
  429b28:	(bad)  
  429b2a:	sar    BYTE PTR [rcx],0x35
  429b2d:	outs   dx,DWORD PTR ds:[rsi]
  429b2e:	fnstenv [rbx]
  429b30:	sub    eax,0x2f15cf87
  429b35:	add    esp,ebx
  429b37:	or     BYTE PTR [rsi],dh
  429b39:	out    dx,eax
  429b3a:	xchg   ecx,eax
  429b3b:	(bad)  
  429b3c:	movabs ds:0x7a89adf256637385,eax
  429b45:	pop    rbx
  429b46:	test   al,0xf4
  429b48:	(bad)  
  429b49:	jg     0x429baf
  429b4b:	sub    DWORD PTR [rbx],0xffffff9c
  429b4e:	or     eax,0x55fd290a
  429b53:	repz out 0xe6,al
  429b56:	cmp    al,BYTE PTR [rdi-0x4334c17c]
  429b5c:	stos   BYTE PTR es:[rdi],al
  429b5d:	outs   dx,DWORD PTR ds:[rsi]
  429b5e:	xor    eax,0xdc99e1b4
  429b63:	ficom  DWORD PTR [rdx]
  429b65:	packuswb mm6,QWORD PTR [rdi+rbp*4-0x7692f7f0]
  429b6d:	adc    DWORD PTR [rdi+rax*4+0x71],edi
  429b71:	or     al,bh
  429b73:	(bad)  
  429b74:	xlat   BYTE PTR ds:[rbx]
  429b75:	(bad)  
  429b76:	push   rdx
  429b77:	stos   BYTE PTR es:[rdi],al
  429b78:	rex.WRB int3 
  429b7a:	mov    esp,0xb780c85f
  429b7f:	(bad)  
  429b80:	in     eax,dx
  429b81:	push   0xffffffffffffffd1
  429b83:	jae    0x429b4e
  429b85:	and    esp,DWORD PTR [rip+0x22b073f]        # 0x26da2ca
  429b8b:	rex.X cmp al,BYTE PTR [rcx+0x24a777e]
  429b92:	cmp    BYTE PTR [rip+0xffffffffe52ecf85],al        # 0xffffffffe5716b1d
  429b98:	adc    al,0x78
  429b9a:	es in  al,0xea
  429b9d:	push   0x5b
  429b9f:	stos   BYTE PTR es:[rdi],al
  429ba0:	int    0x4a
  429ba2:	or     cl,0xa5
  429ba5:	adc    esi,DWORD PTR [rcx+0x1e201570]
  429bab:	sub    eax,0x49024229
  429bb0:	mov    bh,0x12
  429bb2:	mov    eax,0x1d6e779c
  429bb7:	inc    ebp
  429bb9:	sbb    ebp,esi
  429bbb:	add    ah,BYTE PTR [rdi]
  429bbd:	sbb    ebx,DWORD PTR [rbx]
  429bbf:	sbb    ebp,DWORD PTR [rdi+0x4f0f2f8f]
  429bc5:	rex.WRX (bad) 
  429bc7:	pop    rdi
  429bc8:	(bad)  
  429bc9:	(bad)  
  429bca:	out    dx,eax
  429bcb:	ficomp WORD PTR [rbp+rbx*2+0x14bc3dbc]
  429bd2:	cmp    dh,al
  429bd4:	imul   ebp,ebx,0xffffff91
  429bd7:	jae    0x429c4e
  429bd9:	mov    ah,BYTE PTR [rax+rbx*1-0x3c521879]
  429be0:	(bad)  
  429be1:	ss stos DWORD PTR es:[rdi],eax
  429be3:	js     0x429c12
  429be5:	jne    0x429b6f
  429be7:	jns    0x429c03
  429be9:	mov    dl,0xd6
  429beb:	sbb    al,0x6c
  429bed:	push   0xffffffffd757065d
  429bf2:	mov    esp,esi
  429bf4:	(bad)  
  429bf5:	sbb    eax,0xea1f7b1b
  429bfa:	je     0x429c56
  429bfc:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  429bfd:	adc    eax,0xdb5d4262
  429c02:	xchg   esp,eax
  429c03:	sub    eax,0x2277c7d3
  429c08:	sub    eax,0x63fa2727
  429c0d:	rex.WRXB (bad) 
  429c0f:	rex.WRX jbe 0x429bca
  429c12:	and    BYTE PTR [rdi+rax*2+0x3b94adfa],ch
  429c19:	enter  0xa7db,0x76
  429c1d:	cmp    al,0x8a
  429c1f:	lea    ebp,[rbx-0x40ed57ee]
  429c25:	rex.WRB
  429c26:	rex.WXB sbb al,0x81
  429c29:	adc    eax,0xa3005a35
  429c2e:	jg     0x429be8
  429c30:	sub    al,0x92
  429c32:	mov    bh,0xbe
  429c34:	cmp    DWORD PTR [rdi-0x7ee67b3],edx
  429c3a:	or     BYTE PTR [rax-0x56beddde],bl
  429c40:	int    0x4a
  429c42:	fnstenv [rbx+0x2b16620e]
  429c48:	mov    al,0x35
  429c4a:	cmp    ah,BYTE PTR [rdi]
  429c4c:	and    al,0x99
  429c4e:	jle    0x429ca3
  429c50:	pop    rbx
  429c51:	ss pop rsi
  429c53:	outs   dx,DWORD PTR ds:[rsi]
  429c54:	xor    al,0xa6
  429c56:	ror    DWORD PTR [rcx+0x5cd2ba50],0x6c
  429c5d:	outs   dx,DWORD PTR ds:[rsi]
  429c5e:	movabs al,ds:0x4016596ca15dc68a
  429c67:	(bad)  
  429c68:	sub    al,0xfe
  429c6a:	jl     0x429c33
  429c6c:	sub    ebx,DWORD PTR [rbp-0x31192c7a]
  429c72:	lods   eax,DWORD PTR ds:[rsi]
  429c73:	(bad)  
  429c74:	clc    
  429c75:	sbb    BYTE PTR [rsi+rsi*1-0xc68b2f1],bh
  429c7c:	rex.RB mov r11d,0xf2fb2e5a
  429c82:	je     0x429c8d
  429c84:	pop    rcx
  429c85:	imul   eax,DWORD PTR [rbx-0x3038fe0e],0x1e03991b
  429c8f:	(bad)  
  429c90:	div    BYTE PTR [rdi-0x5d]
  429c93:	movabs eax,ds:0xfd6ebbd1b46b9440
  429c9c:	mov    ebx,0x982e6b6
  429ca1:	sbb    ecx,ebx
  429ca3:	addr32 mov ebx,0x752f305
  429ca9:	push   rcx
  429caa:	ret    0x6ffc
  429cad:	sub    DWORD PTR [rcx+0x10],eax
  429cb0:	ins    DWORD PTR es:[rdi],dx
  429cb1:	pop    rcx
  429cb2:	imul   edx,DWORD PTR [rax-0x52],0xd8f8308a
  429cb9:	sbb    dl,BYTE PTR [rdi+rdi*8-0x1c2de49e]
  429cc0:	rex.WXB jp 0x429cc0
  429cc3:	mov    ah,0xe3
  429cc5:	ret    
  429cc6:	jmp    0xffffffffb8e6ddc1
  429ccb:	xchg   ecx,eax
  429ccc:	(bad)  
  429ccd:	test   DWORD PTR [rdx+0x15],0x806e644f
  429cd4:	sbb    edx,DWORD PTR [rcx-0x15e6eb4d]
  429cda:	and    ch,BYTE PTR [rcx]
  429cdc:	adc    DWORD PTR [rax],edx
  429cde:	shr    ebp,cl
  429ce0:	mov    ebx,0xf979ff04
  429ce5:	xchg   ecx,eax
  429ce6:	ins    BYTE PTR es:[rdi],dx
  429ce7:	jns    0x429c96
  429ce9:	jnp    0x429cd3
  429ceb:	gs loope 0x429d1f
  429cee:	clc    
  429cef:	rex.WR cmp BYTE PTR [rsi+0xd8af420],r14b
  429cf6:	in     eax,0xea
  429cf8:	rcl    DWORD PTR [rdi-0x16f73dec],1
  429cfe:	iret   
  429cff:	mov    ch,0x9a
  429d01:	and    esp,esp
  429d03:	leave  
  429d04:	test   al,0xce
  429d06:	rcr    BYTE PTR [rdx],cl
  429d08:	(bad)  
  429d09:	adc    eax,0xcef87172
  429d0e:	mov    al,0x6e
  429d10:	pop    rax
  429d11:	rex.RXB jmp 0x429cf8
  429d14:	adc    eax,0x9e888282
  429d19:	es (bad) 
  429d1b:	jmp    0xffffffffd1103f79
  429d20:	rex.XB sar DWORD PTR [r8+0x68adb7b],0x38
  429d28:	xor    r11,QWORD PTR [rbx+rcx*8-0x67]
  429d2d:	shl    DWORD PTR [rdi+riz*8+0x1aaa40f4],1
  429d34:	jle    0x429d05
  429d36:	(bad)  
  429d37:	in     al,dx
  429d38:	call   0x380f0b6a
  429d3d:	jp     0x429ce7
  429d3f:	rex.WRXB fimul WORD PTR [r13+r9*2+0x3a0103d7]
  429d47:	in     eax,0xc7
  429d49:	pop    rdi
  429d4a:	pop    rbp
  429d4b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  429d4c:	push   rdi
  429d4d:	imul   esi,DWORD PTR [rsi],0xeefee3fb
  429d53:	sub    BYTE PTR [rbp+0x7fd2ce5e],bh
  429d59:	(bad)  
  429d5a:	mov    ebp,DWORD PTR [rdi-0x2026c362]
  429d60:	std    
  429d61:	in     al,dx
  429d62:	repz fstp QWORD PTR [rsi+0x17]
  429d66:	jge    0x429d88
  429d68:	mov    BYTE PTR [rax*2+0x64dd0d8],ch
  429d6f:	mov    ecx,0x270cef8b
  429d74:	xlat   BYTE PTR ds:[rbx]
  429d75:	cmp    DWORD PTR [rdx+rdi*1+0xe649452],ecx
  429d7c:	push   rdx
  429d7d:	mov    dh,0x26
  429d7f:	and    DWORD PTR [rsi],esp
  429d81:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  429d82:	pushf  
  429d83:	sahf   
  429d84:	mov    ecx,0xfebecd71
  429d89:	ret    
  429d8a:	fiadd  WORD PTR [rcx]
  429d8c:	mov    esi,DWORD PTR [rdx+0x53df386b]
  429d92:	fidiv  WORD PTR [rcx+0x30bccbc9]
  429d98:	(bad)  
  429d99:	rcl    BYTE PTR [rdi],1
  429d9b:	xchg   r11,rax
  429d9d:	pop    rsi
  429d9e:	fstp   TBYTE PTR [rbp+0x69f3792a]
  429da4:	jrcxz  0x429d3c
  429da6:	mov    bl,0x41
  429da8:	mov    BYTE PTR [rdx-0x4d9e54ac],bl
  429dae:	add    eax,0x1acd8476
  429db3:	rex.WX (bad) 
  429db5:	and    ch,BYTE PTR [rbx-0x4506fcb0]
  429dbb:	rex.WX out 0x9a,eax
  429dbe:	stos   DWORD PTR es:[rdi],eax
  429dbf:	rex.X out dx,eax
  429dc1:	adc    ebp,DWORD PTR [rbp+rbp*2-0x48]
  429dc5:	cwde   
  429dc6:	imul   ebx,DWORD PTR [rip+0xffffffffe45bf67a],0x16cdc36e        # 0xffffffffe49e944a
  429dd0:	mov    ch,0x2b
  429dd2:	(bad)  
  429dd3:	(bad)  
  429dd4:	xlat   BYTE PTR ds:[rbx]
  429dd5:	int    0x89
  429dd7:	push   rsp
  429dd8:	in     eax,0xd9
  429dda:	and    al,0x97
  429ddc:	rex.WX (bad) 
  429dde:	jge    0x429e0a
  429de0:	cmp    eax,0x6458a8c
  429de5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  429de6:	fst    DWORD PTR [rdi+rax*2+0x3a]
  429dea:	(bad)  
  429deb:	ffreep st(1)
  429ded:	pause  
  429def:	xor    dl,BYTE PTR [rbx]
  429df1:	pop    rcx
  429df2:	outs   dx,DWORD PTR ds:[rsi]
  429df3:	rcr    DWORD PTR [rcx+0xb42b6d5],0x3b
  429dfa:	fcomip st,st(2)
  429dfc:	(bad)  
  429dfd:	mov    eax,0x4cd98752
  429e02:	pop    rsi
  429e03:	stos   BYTE PTR es:[rdi],al
  429e04:	xchg   edi,eax
  429e05:	push   0xffffffffd8578bef
  429e0a:	adc    BYTE PTR [rbx+0x5f],bh
  429e0d:	cld    
  429e0e:	mov    ebx,0xfcbed9fd
  429e13:	ins    BYTE PTR es:[rdi],dx
  429e14:	dec    DWORD PTR [rbx-0x2ef1e081]
  429e1a:	(bad)  
  429e1b:	fisub  DWORD PTR [rcx]
  429e1d:	fwait
  429e1e:	cli    
  429e1f:	jmp    0x429e6e
  429e21:	loope  0x429e78
  429e23:	rex.WB in eax,0x8
  429e26:	repz mov edi,0x5e6e2d6c
  429e2c:	jmp    0x429dcc
  429e2e:	jle    0x429e09
  429e30:	lahf   
  429e31:	in     eax,0xbe
  429e33:	rex.R push rsp
  429e35:	lods   eax,DWORD PTR ds:[rsi]
  429e36:	fmul   st(2),st
  429e38:	imul   ebx,DWORD PTR [rdi+0x4d8eaa9c],0xffffffba
  429e3f:	lea    eax,[rbx+0x5f411da0]
  429e45:	loop   0x429e2c
  429e47:	jmp    QWORD PTR [rax+0x1b1ffa9d]
  429e4d:	mov    DWORD PTR [rdi+rsi*1+0x69],eax
  429e51:	cmp    esi,ebp
  429e53:	adc    eax,esi
  429e55:	shr    BYTE PTR [rbp+0x6b],1
  429e58:	(bad)  
  429e59:	sbb    r12,QWORD PTR [r9]
  429e5c:	movs   DWORD PTR es:[rdi],DWORD PTR fs:[rsi]
  429e5e:	xchg   esi,eax
  429e5f:	sub    DWORD PTR [rcx],eax
  429e61:	test   dh,ch
  429e63:	rex scas eax,DWORD PTR es:[rdi]
  429e65:	rex.RX leave 
  429e67:	lahf   
  429e68:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  429e69:	lods   al,BYTE PTR ds:[rsi]
  429e6a:	and    ebp,DWORD PTR [rdi]
  429e6c:	clc    
  429e6d:	rex.RX (bad) 
  429e6f:	lahf   
  429e70:	loope  0x429eb6
  429e72:	sbb    DWORD PTR [rbx+0x1d243463],esp
  429e78:	lock in al,dx
  429e7a:	(bad)  
  429e7b:	jg     0x429e75
  429e7d:	rex.B adc al,0x2a
  429e80:	repz (bad) 
  429e82:	jmp    0x45d42c80
  429e87:	push   rbx
  429e88:	and    ebx,esi
  429e8a:	out    0x28,al
  429e8c:	jp     0x429eae
  429e8e:	test   DWORD PTR [rbp-0x1c],esp
  429e91:	retf   0x92bf
  429e94:	xchg   ecx,eax
  429e95:	jb     0x429eba
  429e97:	imul   di,WORD PTR [rcx+0xdf53cc8],0x7a93
  429ea0:	int3   
  429ea1:	(bad)  
  429ea2:	or     al,0x7b
  429ea4:	jae    0x429eb1
  429ea6:	adc    BYTE PTR [rdi],cl
  429ea8:	(bad)  
  429ea9:	rex.WXB hlt 
  429eab:	mov    bh,0x3e
  429ead:	lods   eax,DWORD PTR ds:[rsi]
  429eae:	sbb    eax,0xdfbb1d96
  429eb3:	xor    al,0xa6
  429eb5:	(bad)  
  429eb6:	mov    eax,0x2cf6252c
  429ebb:	imul   edi,DWORD PTR [rcx],0xffffffaf
  429ebe:	jp     0x429ebc
  429ec0:	loopne 0x429f37
  429ec2:	ficom  WORD PTR [rbx-0x5b00e9e0]
  429ec8:	out    0x68,eax
  429eca:	jb     0x429f44
  429ecc:	cmp    eax,0x58af68b0
  429ed1:	jne    0x429e9d
  429ed3:	call   FWORD PTR [rsi-0x72242543]
  429ed9:	(bad)  
  429eda:	sub    DWORD PTR [rax-0x4428f5d3],0xe7bae080
  429ee4:	repz sub DWORD PTR [rdi],edi
  429ee7:	sub    eax,0x1f515925
  429eec:	out    0x55,eax
  429eee:	outs   dx,DWORD PTR ds:[rsi]
  429eef:	rex.WR (bad) 
  429ef1:	sub    al,0xfd
  429ef3:	call   QWORD PTR [rip+0x4ac440fd]        # 0x4b06dff6
  429ef9:	sahf   
  429efa:	lods   eax,DWORD PTR ds:[rsi]
  429efb:	xchg   edi,eax
  429efc:	jrcxz  0x429f77
  429efe:	fsubp  st(2),st
  429f00:	lock (bad) 
  429f02:	or     eax,0xf01a0bf0
  429f07:	neg    DWORD PTR [rcx-0x56e6e223]
  429f0d:	jbe    0x429ebb
  429f0f:	sti    
  429f10:	ins    DWORD PTR es:[rdi],dx
  429f11:	pop    rsi
  429f12:	xchg   ebp,eax
  429f13:	in     eax,0x38
  429f15:	lods   eax,DWORD PTR ds:[rsi]
  429f16:	ss and eax,0xdcfda39c
  429f1c:	(bad)  
  429f1e:	jg     0x429f12
  429f20:	hlt    
  429f21:	(bad)  
  429f23:	push   rax
  429f24:	hlt    
  429f25:	xor    al,0x88
  429f27:	mov    dh,al
  429f29:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  429f2a:	movabs ds:0x91ad8302892c26e0,al
  429f33:	(bad)  
  429f34:	(bad)  
  429f35:	or     ebp,DWORD PTR [rsi-0x305ceb6e]
  429f3b:	mov    ebp,0x3bfdafe2
  429f40:	jge    0x429f29
  429f42:	adc    eax,0xf9eff13e
  429f47:	hlt    
  429f48:	xchg   ebp,eax
  429f49:	sbb    eax,0x58d3bfe1
  429f4e:	pop    rsi
  429f4f:	leave  
  429f50:	and    ah,cl
  429f52:	mov    edx,0xbd621a6a
  429f57:	mov    ebp,0xd16b9511
  429f5c:	korb   k3,k5,k4
  429f60:	shl    BYTE PTR [rax+0x4c186081],0x39
  429f67:	cli    
  429f68:	add    DWORD PTR [rbp-0x2b],ebp
  429f6b:	in     eax,0xe0
  429f6d:	in     eax,dx
  429f6e:	jl     0x429f8a
  429f70:	cwde   
  429f71:	push   rsi
  429f72:	(bad)  
  429f73:	(bad)  
  429f74:	retf   0x9c0
  429f77:	ins    BYTE PTR es:[rdi],dx
  429f78:	lock mov ecx,0xfa21680d
  429f7e:	xchg   edx,eax
  429f7f:	mov    BYTE PTR [rcx],bh
  429f81:	adc    DWORD PTR [rdi-0x4d7eabbb],0x4
  429f88:	or     al,ah
  429f8a:	call   0x190337a
  429f8f:	fidiv  WORD PTR [rax-0x6702767]
  429f95:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  429f96:	sub    eax,0x2e9270c4
  429f9b:	call   0x42670f94
  429fa0:	xchg   BYTE PTR [rcx-0x417b71ee],bl
  429fa6:	retf   
  429fa7:	pop    rcx
  429fa8:	shl    esi,cl
  429faa:	movsxd esi,DWORD PTR [rdx-0x15]
  429fad:	int3   
  429fae:	enter  0x5de3,0x31
  429fb2:	rcr    DWORD PTR [rdi+rdx*8+0x5a97998c],cl
  429fb9:	add    BYTE PTR [rip+0x6c2cf988],ah        # 0x6c6f9947
  429fbf:	ret    0xe0e5
  429fc2:	lea    ecx,[rip+0x3f04da7a]        # 0x3f477a42
  429fc8:	jns    0x429f9e
  429fca:	cld    
  429fcb:	mov    ah,ch
  429fcd:	mov    DWORD PTR [rdx-0x74af2178],ecx
  429fd3:	out    dx,al
  429fd4:	repnz rex.WRX
  429fd6:	lock movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  429fd8:	(bad)  
  429fd9:	adc    bh,bh
  429fdb:	(bad)  
  429fdc:	cdq    
  429fdd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  429fde:	imul   esi,DWORD PTR [rdx+0x431584db],0x6d2f9f92
  429fe8:	lods   eax,DWORD PTR ds:[rsi]
  429fe9:	test   eax,0xda10122f
  429fee:	repnz pop rbx
  429ff0:	adc    dh,BYTE PTR [rdi+0x6c]
  429ff3:	(bad)  
  429ff4:	jle    0x429fbc
  429ff6:	rex.WXB (bad) 
  429ff8:	(bad)  
  429ff9:	fcom   DWORD PTR [rax]
  429ffb:	cwde   
  429ffc:	xchg   esi,eax
  429ffe:	adc    ebp,eax
  42a000:	shl    BYTE PTR [rdi-0x7420e42c],0xb3
  42a007:	sbb    DWORD PTR [rdx-0x28],0xc10e33fc
  42a00e:	rex.WXB pop r10
  42a010:	(bad)  
  42a011:	cld    
  42a012:	cli    
  42a013:	mov    ecx,ebp
  42a015:	or     eax,0x6ac56c5b
  42a01a:	out    dx,al
  42a01b:	popf   
  42a01c:	add    BYTE PTR [rdx],dh
  42a01e:	outs   dx,DWORD PTR ds:[rsi]
  42a01f:	push   rax
  42a020:	jg     0x42a05e
  42a022:	rex.RX movabs eax,ds:0x3a088c6d643be56
  42a02c:	rex.WR hlt 
  42a02e:	rex.RX
  42a02f:	fwait
  42a030:	(bad)  
  42a031:	push   rcx
  42a032:	mov    edx,0xcd41cb73
  42a037:	lea    ebx,[rbx-0x4fa24fa1]
  42a03d:	rex.WB push 0x69b7bc55
  42a043:	jmp    0xffffffff8576815b
  42a048:	shr    BYTE PTR [rbx-0x475f52ce],0x21
  42a04f:	mov    ecx,edi
  42a051:	rex.WRX
  42a052:	fwait
  42a053:	test   DWORD PTR [rdi],0x83ca7b56
  42a059:	rex.WXB jae 0x42a0c0
  42a05c:	(bad)  
  42a05d:	(bad)  
  42a05e:	loopne 0x429fe8
  42a060:	mov    esp,0xf9621ca1
  42a065:	call   0xffffffffbe313a95
  42a06a:	loope  0x42a0e1
  42a06c:	jle    0x42a033
  42a06e:	xchg   ebx,eax
  42a06f:	(bad)  
  42a070:	rex.R in al,0x75
  42a073:	mov    dh,0x63
  42a075:	(bad)  
  42a076:	fnstenv [rdi]
  42a078:	(bad)  
  42a079:	fbld   TBYTE PTR [rdi]
  42a07b:	lods   eax,DWORD PTR ds:[rsi]
  42a07c:	mov    esi,?
  42a07e:	repnz add al,0x78
  42a081:	sub    al,0xff
  42a083:	out    dx,al
  42a084:	test   esi,0xf4173d86
  42a08a:	xchg   edi,eax
  42a08b:	(bad)  
  42a08d:	stc    
  42a08e:	adc    dl,ch
  42a090:	xchg   ecx,eax
  42a091:	pop    rsi
  42a092:	(bad)  
  42a093:	xchg   esp,eax
  42a094:	rcl    DWORD PTR [rax],1
  42a096:	leave  
  42a097:	jne    0x42a043
  42a099:	push   0xfffffffffffffffa
  42a09b:	movabs al,ds:0x56525d24c8b43212
  42a0a4:	mov    eax,DWORD PTR [rip+0x4290088f]        # 0x42d2a939
  42a0aa:	adc    al,0x75
  42a0ac:	sar    BYTE PTR [rbx+0x50cf7173],cl
  42a0b2:	(bad)  
  42a0b3:	adc    BYTE PTR [rsi-0x2a],ch
  42a0b6:	in     al,dx
  42a0b7:	outs   dx,BYTE PTR ds:[rsi]
  42a0b8:	mov    ebx,0x8d6d23ef
  42a0bd:	js     0x42a07e
  42a0bf:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  42a0c0:	mov    esp,0x9fbdd9fa
  42a0c5:	xchg   ecx,eax
  42a0c6:	rex.WB lahf 
  42a0c8:	fist   WORD PTR [rdx-0x3b3b9b3e]
  42a0ce:	(bad)  
  42a0cf:	cdq    
  42a0d0:	(bad)  
  42a0d1:	pop    rax
  42a0d2:	out    0xbc,al
  42a0d4:	mov    ebx,0x5ee2ed82
  42a0d9:	or     al,0xe4
  42a0db:	retf   
  42a0dc:	jmp    0x42a144
  42a0de:	fwait
  42a0df:	ds xchg ebx,eax
  42a0e1:	int    0x6a
  42a0e3:	fsubr  st,st(2)
  42a0e5:	push   rdx
  42a0e6:	(bad)  
  42a0e7:	rex.WRXB movabs r15,0xf67fa6d0fe03c02a
  42a0f1:	retf   
  42a0f2:	xchg   r11,rax
  42a0f4:	sbb    DWORD PTR [rbx-0x69],ebx
  42a0f7:	clc    
  42a0f8:	mov    bl,0xe6
  42a0fa:	sub    al,0xe7
  42a0fc:	mov    fs,edi
  42a0fe:	rex.WR xchg BYTE PTR [rdx-0xfe4c3d3],r9b
  42a105:	in     eax,dx
  42a106:	sub    DWORD PTR [rdx],ebp
  42a108:	shl    eax,1
  42a10a:	int    0x30
  42a10c:	cmp    DWORD PTR [rip+0xffffffff994ebc62],eax        # 0xffffffff99915d74
  42a112:	movabs eax,ds:0xb0eb660ddd586f45
  42a11b:	(bad)  
  42a11c:	mov    esi,0x88dc35c1
  42a121:	adc    al,0x43
  42a123:	mov    bh,0x14
  42a125:	test   al,0xe9
  42a127:	pushf  
  42a128:	ror    ecx,1
  42a12a:	cli    
  42a12b:	test   eax,ebp
  42a12d:	and    edi,DWORD PTR [rbp-0x8]
  42a130:	ret    0x73ed
  42a133:	lock stc 
  42a135:	(bad)  [rdx]
  42a137:	in     al,dx
  42a138:	fiadd  WORD PTR [rsi-0x2f9ee50b]
  42a13e:	xchg   esi,eax
  42a13f:	sub    BYTE PTR [rax-0x7848a762],ah
  42a145:	and    BYTE PTR [rcx],0x95
  42a148:	sbb    DWORD PTR [rbx],edi
  42a14a:	pop    rbp
  42a14b:	mov    BYTE PTR [rbp+0x10626881],bl
  42a151:	adc    esi,DWORD PTR [rsi]
  42a153:	lods   eax,DWORD PTR ds:[rsi]
  42a154:	(bad)  
  42a155:	xchg   edi,eax
  42a156:	push   rcx
  42a157:	leave  
  42a158:	xor    eax,0xd83d46da
  42a15d:	lea    esi,[rbx-0x4328e534]
  42a163:	push   rsi
  42a164:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  42a165:	test   DWORD PTR [rbx-0x7bdce83d],ebx
  42a16b:	pushf  
  42a16c:	ss pop rsp
  42a16e:	rex.RXB popf 
  42a170:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  42a171:	jle    0x42a118
  42a173:	mov    bh,0xe6
  42a175:	(bad)  
  42a176:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  42a177:	pushf  
  42a178:	lea    ebp,[rbx]
  42a17a:	mov    bl,0xea
  42a17c:	pop    rcx
  42a17d:	(bad)
  42a180:	movsxd eax,DWORD PTR [rsp+rdi*4+0x5cdf73fa]
  42a187:	mov    esi,0xe9944d3d
  42a18c:	out    0xca,al
  42a18e:	test   eax,0xc4cc8a8a
  42a193:	adc    ch,al
  42a195:	xor    eax,edx
  42a197:	cli    
  42a198:	nop
  42a199:	cmp    al,0xc5
  42a19b:	mov    bh,0x1c
  42a19d:	iret   
  42a19e:	sub    eax,0xa827cae5
  42a1a3:	rex.XB out dx,eax
  42a1a5:	(bad)  
  42a1a6:	pop    rcx
  42a1a7:	out    dx,eax
  42a1a8:	or     DWORD PTR [rsi-0x6b],edi
  42a1ab:	not    BYTE PTR [rcx+0x349b26d9]
  42a1b1:	add    eax,0x9364fd9b
  42a1b6:	mov    edx,0xc4d8bf4a
  42a1bb:	jl     0x42a19f
  42a1bd:	(bad)  
  42a1be:	fdivrp st(4),st
  42a1c0:	ins    DWORD PTR es:[rdi],dx
  42a1c1:	(bad)  
  42a1c2:	and    esp,DWORD PTR [rdi-0xa866170]
  42a1c8:	imul   edx,DWORD PTR gs:[rsi-0x15928c10],0x15
  42a1d0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42a1d1:	cdq    
  42a1d2:	add    al,0x3a
  42a1d4:	mov    bh,0xbe
  42a1d6:	jmp    0x42a18d
  42a1d8:	(bad)  
  42a1d9:	(bad)  
  42a1da:	test   al,0x24
  42a1dc:	cs rex.X stos BYTE PTR es:[rdi],al
  42a1df:	outs   dx,DWORD PTR ds:[rsi]
  42a1e0:	out    0x60,eax
  42a1e2:	scas   al,BYTE PTR es:[rdi]
  42a1e3:	adc    edi,ebx
  42a1e5:	mov    bl,0x1c
  42a1e7:	cmp    DWORD PTR [rbx-0x60f0bcbf],esi
  42a1ed:	loop   0x42a23a
  42a1ef:	adc    eax,0xca021645
  42a1f4:	ror    BYTE PTR [rbp+0x5e4a80b7],cl
  42a1fa:	mov    bl,0x9a
  42a1fc:	cmp    ebx,ebx
  42a1fe:	jge    0x42a277
  42a200:	and    eax,0x39900cbc
  42a205:	jnp    0x42a24a
  42a207:	in     al,0x50
  42a209:	cmp    dl,BYTE PTR [rsi+0x66]
  42a20c:	fild   DWORD PTR [rax-0x678421cb]
  42a212:	rcr    BYTE PTR [rsi+0x49aae545],1
  42a218:	scas   eax,DWORD PTR es:[rdi]
  42a219:	mov    bl,0x1c
  42a21b:	xchg   ebx,eax
  42a21c:	pop    rbp
  42a21d:	mov    edi,DWORD PTR [rdx+rax*4+0x62]
  42a221:	shr    DWORD PTR [rdi-0x28696342],1
  42a227:	and    al,0xb9
  42a229:	cli    
  42a22a:	out    0xa0,al
  42a22c:	rcr    DWORD PTR [rdi-0x3410dc00],1
  42a232:	rex.RXB mov r9d,0xac2b38c3
  42a238:	(bad)
  42a23b:	push   rdi
  42a23c:	rex push rsp
  42a23e:	fist   WORD PTR [rax+0x6d22742b]
  42a244:	(bad)  [rsi-0x4b3c287]
  42a24a:	not    BYTE PTR [rdi]
  42a24c:	(bad)  
  42a24d:	mov    bh,0x74
  42a24f:	jb     0x42a2a3
  42a251:	imul   ebx,DWORD PTR [rcx+0x214a0ceb],0x2dbdd9c6
  42a25b:	cmp    eax,DWORD PTR [rbx]
  42a25d:	(bad)  
  42a25e:	(bad)  
  42a25f:	adc    DWORD PTR [rbx],ebp
  42a261:	repz mov ebp,0xbec49335
  42a267:	int    0x2f
  42a269:	(bad)  
  42a26a:	cmp    DWORD PTR [rdi+0x60],eax
  42a26d:	repz in eax,0x26
  42a270:	and    al,0x18
  42a272:	leave  
  42a273:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  42a274:	stc    
  42a275:	cmp    BYTE PTR [rbx-0x6],al
  42a278:	cdq    
  42a279:	pop    rsp
  42a27a:	rex.WRX
  42a27b:	fwait
  42a27c:	jl     0x42a2a9
  42a27e:	(bad)  
  42a27f:	pop    rax
  42a280:	ja     0x42a292
  42a282:	outs   dx,BYTE PTR ds:[rsi]
  42a283:	(bad)  
  42a284:	ja     0x42a2c6
  42a286:	jo     0x42a2b5
  42a288:	cmp    esi,DWORD PTR [rbx]
  42a28a:	rol    BYTE PTR [rdi],cl
  42a28c:	rex.WRXB ret 0x804d
  42a290:	add    al,BYTE PTR [rdi]
  42a292:	call   0xffffffff8ed833ac
  42a297:	sbb    eax,DWORD PTR [rsi]
  42a299:	retf   0xa5c8
  42a29c:	or     esi,DWORD PTR [rbp+0x54297c0c]
  42a2a2:	int3   
  42a2a3:	rex.R fcomp QWORD PTR [rbx+rcx*8-0xe26be9e]
  42a2ab:	adc    edx,DWORD PTR [rsi+riz*1+0x4c34b397]
  42a2b2:	ficom  WORD PTR [rdi]
  42a2b4:	push   rbx
  42a2b5:	cs rex.WRX
  42a2b7:	rex.WR (bad) 
  42a2b9:	jb     0x42a319
  42a2bb:	rex.WRB xchg r14,rax
  42a2bd:	jae    0x42a331
  42a2bf:	push   rbp
  42a2c0:	rex.WR enter 0x8641,0x8b
  42a2c5:	xchg   ebp,edx
  42a2c7:	adc    DWORD PTR [rsi+0x78],0xffffffde
  42a2cb:	out    dx,eax
  42a2cc:	xor    BYTE PTR [rbx],bh
  42a2ce:	rex.RXB fsub DWORD PTR [r9+0x2e]
  42a2d2:	fild   WORD PTR [rip+0x58008514]        # 0x584327ec
  42a2d8:	loop   0x42a2ea
  42a2da:	xchg   DWORD PTR [rsi+0x60],edx
  42a2dd:	jns    0x42a332
  42a2df:	add    BYTE PTR [rcx+0x64],r10b
  42a2e3:	lock clc 
  42a2e5:	int    0xf1
  42a2e7:	vpsllw ymm0,ymm7,XMMWORD PTR [rip+0xffffffffa761f7cd]        # 0xffffffffa7a49abc
  42a2ef:	mov    esi,0xbaa5128f
  42a2f4:	push   rax
  42a2f5:	movabs ds:0xa50a2cf0e2c37ec2,eax
  42a2fe:	(bad)  
  42a2ff:	(bad)  
  42a300:	sub    al,0x8
  42a302:	data16 or ah,BYTE PTR [rdx-0x62]
  42a306:	jne    0x42a2e7
  42a308:	mov    ebp,0xdb7d808
  42a30d:	sbb    eax,DWORD PTR [rax]
  42a30f:	(bad)  
  42a310:	add    eax,0xb74b6407
  42a315:	jo     0x42a344
  42a317:	push   rsp
  42a318:	rex.X mov ebp,0xfc9cd4bd
  42a31e:	fwait
  42a31f:	lods   al,BYTE PTR ds:[rsi]
  42a320:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  42a321:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42a322:	(bad)  
  42a323:	add    eax,0x30499ba9
  42a328:	jge    0x42a390
  42a32a:	std    
  42a32b:	adc    ebx,DWORD PTR [rax]
  42a32d:	repnz adc eax,0x9db2519d
  42a333:	xor    BYTE PTR [rcx],bl
  42a335:	jne    0x42a2ea
  42a337:	pop    rsp
  42a338:	in     al,0x53
  42a33a:	jmp    0x42a329
  42a33c:	xor    eax,0x5fea373f
  42a341:	ret    0xbca7
  42a344:	push   rsi
  42a345:	lods   al,BYTE PTR ds:[rsi]
  42a346:	or     esp,DWORD PTR [rdx-0xf731566]
  42a34c:	mov    ebp,0xaf629d6d
  42a351:	or     edx,esi
  42a353:	in     eax,0x18
  42a355:	xor    al,0xa6
  42a357:	(bad)  
  42a358:	(bad)  
  42a359:	in     eax,dx
  42a35a:	in     al,dx
  42a35b:	jb     0x42a336
  42a35d:	sti    
  42a35e:	sbb    DWORD PTR [rsp+rcx*4+0x7e142d24],edi
  42a365:	jrcxz  0x42a3b2
  42a367:	(bad)  
  42a368:	repnz gs int 0x1d
  42a36c:	(bad)  
  42a36e:	adc    eax,0x5240bc87
  42a373:	imul   esi,DWORD PTR [rbp-0x70],0x93e758fc
  42a37a:	lahf   
  42a37b:	fucom  st(5)
  42a37d:	xor    esp,0x6749071f
  42a383:	bsr    ebx,DWORD PTR [rcx]
  42a386:	mov    esp,0xc318944c
  42a38b:	pushf  
  42a38c:	int3   
  42a38d:	std    
  42a38e:	jle    0x42a404
  42a390:	jl     0x42a323
  42a392:	sbb    al,0x7e
  42a394:	rex.WRB pushf 
  42a396:	mov    edi,0xd302e4ff
  42a39b:	jae    0x42a40f
  42a39d:	cmp    ebp,DWORD PTR [rax+rcx*1-0x39]
  42a3a1:	(bad)  
  42a3a2:	mov    al,0x9b
  42a3a4:	fs (bad) 
  42a3a6:	or     dl,BYTE PTR [rdi+0x6d4752da]
  42a3ac:	sbb    BYTE PTR [rbx],0xf7
  42a3af:	retf   0xa1a3
  42a3b2:	push   0xbb921ad
  42a3b7:	(bad)  
  42a3b8:	pop    rax
  42a3b9:	(bad)
  42a3bc:	and    DWORD PTR [rip+0xffffffff99157f32],ebx        # 0xffffffff995822f4
  42a3c2:	(bad)  
  42a3c3:	mov    DWORD PTR [rbx+0x12],eax
  42a3c6:	mov    edx,0x3afbd236
  42a3cb:	xor    BYTE PTR [rbx],bh
  42a3cd:	jns    0x42a364
  42a3cf:	(bad)  
  42a3d0:	xchg   ebx,eax
  42a3d1:	int    0xb7
  42a3d3:	in     eax,0xdf
  42a3d5:	lea    esi,[rdx]
  42a3d7:	nop
  42a3d8:	out    dx,al
  42a3d9:	cmp    al,0x19
  42a3db:	out    dx,al
  42a3dc:	es pop rbx
  42a3de:	(bad)  
  42a3e0:	(bad)
  42a3e3:	jg     0x42a433
  42a3e5:	rex.WRX mov sil,0x37
  42a3e8:	pop    rbx
  42a3e9:	(bad)  
  42a3ea:	jle    0x42a39a
  42a3ec:	xor    BYTE PTR gs:[rsi-0x75],cl
  42a3f0:	(bad)  
  42a3f1:	jbe    0x42a3bc
  42a3f3:	(bad)  
  42a3f4:	jo     0x42a3a8
  42a3f6:	sbb    DWORD PTR [rdi+riz*1-0x32],edx
  42a3fa:	xchg   DWORD PTR [rdx-0x49a840f7],ebx
  42a400:	mov    ah,dl
  42a402:	rex.WRXB leave 
  42a404:	or     ecx,DWORD PTR [rax-0x42]
  42a407:	mov    bl,0x25
  42a409:	xchg   edx,eax
  42a40a:	leave  
  42a40b:	retf   0x4f37
  42a40e:	imul   r13,r10,0xffffffff9a0b3c5e
  42a415:	js     0x42a481
  42a417:	fstp   TBYTE PTR [rax-0x31]
  42a41a:	ins    DWORD PTR es:[rdi],dx
  42a41b:	cld    
  42a41c:	ret    0xf626
  42a41f:	xchg   DWORD PTR [rbx-0x26293605],edi
  42a425:	push   0x10b6df67
  42a42a:	ss mov cl,0x8f
  42a42d:	es call 0x500e9ad4
  42a433:	jmp    0xffffffffc5a8e433
  42a438:	iret   
  42a439:	leave  
  42a43a:	(bad)  
  42a43b:	(bad)  
  42a43d:	jnp    0x42a3e5
  42a43f:	cmp    DWORD PTR [rdi],0x3f278727
  42a445:	and    al,0x4f
  42a447:	xchg   DWORD PTR [rsi-0x5216884f],esp
  42a44d:	xor    al,0x27
  42a44f:	mov    ah,0xb5
  42a451:	and    esi,DWORD PTR [rdx+riz*2]
  42a454:	jle    0x42a475
  42a456:	mov    ah,0xf1
  42a458:	lods   al,BYTE PTR ds:[rsi]
  42a459:	rol    esi,cl
  42a45b:	test   eax,0x993f0bb1
  42a460:	imul   esp,DWORD PTR [rbp+0x77],0xfffffff8
  42a464:	fs (bad) 
  42a466:	leave  
  42a467:	lahf   
  42a468:	jge    0x42a468
  42a46a:	pop    rsp
  42a46b:	sbb    edx,DWORD PTR [rdx-0x49040fca]
  42a471:	mov    bh,0x92
  42a473:	or     DWORD PTR [rbx-0x74],edx
  42a476:	stos   BYTE PTR es:[rdi],al
  42a477:	jae    0x42a475
  42a479:	leave  
  42a47a:	or     BYTE PTR [rax+rcx*4],dh
  42a47d:	mov    BYTE PTR [rdx+0x6937853c],cl
  42a483:	xor    eax,0x4546ed95
  42a488:	(bad)  
  42a489:	int3   
  42a48a:	rex.WX or QWORD PTR [rcx+0x74],rbp
  42a48e:	(bad)  
  42a48f:	mov    bh,0xa5
  42a491:	mov    ecx,0xee820f38
  42a496:	nop
  42a497:	ins    DWORD PTR es:[rdi],dx
  42a498:	stos   BYTE PTR es:[rdi],al
  42a499:	(bad)  
  42a49a:	(bad)  
  42a49b:	cmp    DWORD PTR [rcx+0x3b],edi
  42a49e:	cmp    bh,BYTE PTR [rcx]
  42a4a0:	ss and ebx,edx
  42a4a3:	xor    eax,0xc873735d
  42a4a8:	sbb    eax,0xb930afc2
  42a4ad:	(bad)  
  42a4ae:	sar    BYTE PTR [rdi],0x2a
  42a4b1:	ins    DWORD PTR es:[rdi],dx
  42a4b2:	test   al,0xce
  42a4b4:	int    0x40
  42a4b6:	push   rsi
  42a4b7:	mov    bl,0xe9
  42a4b9:	int3   
  42a4ba:	vpavgw ymm15,ymm4,YMMWORD PTR [rbx+0x1c194904]
  42a4c2:	pop    rsi
  42a4c3:	xchg   ebx,eax
  42a4c4:	or     ecx,eax
  42a4c6:	push   rdi
  42a4c7:	sub    eax,0x596dfd3e
  42a4cc:	cwde   
  42a4cd:	movsxd edx,DWORD PTR [rdx-0x6b]
  42a4d0:	adc    eax,0x5b36a721
  42a4d5:	fcmovb st,st(2)
  42a4d7:	mov    bh,0xaf
  42a4d9:	(bad)  
  42a4da:	cmp    DWORD PTR [rcx+0x185a6dfe],ebp
  42a4e0:	sbb    DWORD PTR [rcx-0x1c],ecx
  42a4e3:	pop    rax
  42a4e4:	cmc    
  42a4e5:	rex.RXB mov r15b,r15b
  42a4e8:	jae    0x42a522
  42a4ea:	xchg   edi,ebx
  42a4ec:	(bad)  
  42a4ed:	mov    ebp,0x75993e2f
  42a4f2:	cld    
  42a4f3:	ins    BYTE PTR es:[rdi],dx
  42a4f4:	mov    eax,0xb26d9047
  42a4f9:	jp     0x42a4da
  42a4fb:	mov    esp,0x7bdeff35
  42a500:	mov    edx,0xdaafd099
  42a505:	(bad)  
  42a506:	mov    esp,0xa38dd79e
  42a50b:	mov    bl,0xb3
  42a50d:	outs   dx,DWORD PTR ds:[rsi]
  42a50e:	rex.WRXB sbb BYTE PTR [r8],r8b
  42a511:	jb     0x42a537
  42a513:	outs   dx,BYTE PTR ds:[rsi]
  42a514:	push   rbp
  42a515:	push   rdx
  42a516:	scas   al,BYTE PTR es:[rdi]
  42a517:	lods   al,BYTE PTR ds:[rsi]
  42a518:	push   rbp
  42a519:	int3   
  42a51a:	rcl    ch,cl
  42a51c:	pop    rax
  42a51d:	outs   dx,DWORD PTR ds:[rsi]
  42a51e:	cs pop rbx
  42a520:	or     ecx,eax
  42a522:	mov    eax,0x20b6598f
  42a527:	xor    al,0x42
  42a529:	rcl    DWORD PTR [rcx+0x68c88d08],cl
  42a52f:	mov    ebp,DWORD PTR [rbp+0x22]
  42a532:	cmc    
  42a533:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42a534:	ret    
  42a535:	(bad)  
  42a536:	fcom   st(4)
  42a538:	(bad)  
  42a539:	test   DWORD PTR [rbx],edi
  42a53b:	mov    esi,0xa91dc4b7
  42a540:	sub    ebx,ebp
  42a542:	mov    BYTE PTR [rsi],ch
  42a544:	fisubr DWORD PTR [rbp+rax*1+0x75]
  42a548:	movsxd eax,DWORD PTR [r13-0x27796357]
  42a54f:	mov    esi,0xdda3239b
  42a554:	jae    0x42a4fd
  42a556:	pinsrw mm5,WORD PTR [rbx-0x45],0xe9
  42a55b:	mov    cl,0x48
  42a55d:	rex.XB movabs ds:0x1040c8d4430eba45,eax
  42a567:	loopne 0x42a525
  42a569:	enter  0x5466,0xd6
  42a56d:	int    0x0
  42a56f:	iret   
  42a570:	jnp    0x42a5e9
  42a572:	clc    
  42a573:	idiv   al
  42a575:	(bad)  
  42a576:	ja     0x42a4ff
  42a578:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42a579:	out    dx,eax
  42a57a:	(bad)  
  42a57b:	int    0x2b
  42a57d:	cmp    DWORD PTR [rdx+0x7e],ebp
  42a580:	pop    rbx
  42a581:	or     BYTE PTR [rdi],bl
  42a583:	cli    
  42a584:	cmp    bh,cl
  42a586:	(bad)  
  42a587:	in     eax,0x8c
  42a589:	movabs ds:0x797860dcde7f9b4c,al
  42a592:	shl    BYTE PTR [rbx+0x35f8f6b7],cl
  42a598:	mov    bl,0x2f
  42a59a:	call   0xffffffffb03fa0fe
  42a59f:	std    
  42a5a0:	(bad)  
  42a5a1:	div    DWORD PTR [rsi-0x53f17ca5]
  42a5a7:	fisubr DWORD PTR fs:[rdi]
  42a5aa:	ja     0x42a608
  42a5ac:	lods   al,BYTE PTR ds:[rsi]
  42a5ad:	or     al,0x75
  42a5af:	rex.WX xchg rcx,rax
  42a5b1:	mov    ebx,0xd3d2b3c1
  42a5b6:	sbb    BYTE PTR [rbp-0x130b9222],cl
  42a5bc:	(bad)  
  42a5bd:	clc    
  42a5be:	fidiv  WORD PTR [rdi-0x2d0b843f]
  42a5c4:	sub    ebp,DWORD PTR [rax]
  42a5c6:	sbb    BYTE PTR [rbp+0x3955beed],bh
  42a5cc:	adc    BYTE PTR [rdx],ch
  42a5ce:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42a5cf:	ss mov ah,0x89
  42a5d2:	in     al,dx
  42a5d3:	rol    DWORD PTR [rdx+0x3d5b9110],cl
  42a5d9:	dec    bl
  42a5db:	stos   DWORD PTR es:[rdi],eax
  42a5dc:	xlat   BYTE PTR ds:[rbx]
  42a5dd:	xchg   DWORD PTR [rdi+0x7e82f4c7],edx
  42a5e3:	pop    rsi
  42a5e4:	ror    BYTE PTR [rax-0x57d72ca],1
  42a5ea:	mov    bl,0x25
  42a5ec:	movabs eax,ds:0x32c736dea03457e9
  42a5f5:	adc    BYTE PTR [rdi+rbp*8-0xc],dl
  42a5f9:	stos   DWORD PTR es:[rdi],eax
  42a5fa:	sub    al,0x14
  42a5fc:	mov    eax,0x6bd512ed
  42a601:	rex.RB lods al,BYTE PTR ds:[rsi]
  42a603:	ins    BYTE PTR es:[rdi],dx
  42a604:	cmc    
  42a605:	clc    
  42a606:	ja     0x42a645
  42a608:	jmp    0x42a5cb
  42a60a:	xchg   ebp,eax
  42a60b:	jp     0x42a615
  42a60d:	adc    ch,BYTE PTR [rsi+0x22c9229c]
  42a613:	enter  0x65ac,0x48
  42a617:	(bad)  
  42a618:	pop    rbx
  42a619:	(bad)  
  42a61a:	or     DWORD PTR [rsi-0x50],edx
  42a61d:	(bad)  
  42a61e:	leave  
  42a61f:	jrcxz  0x42a5f6
  42a621:	mov    dh,0xb
  42a623:	(bad)  
  42a624:	cdq    
  42a625:	lock in al,0x63
  42a628:	sub    cl,bl
  42a62a:	mov    ebp,0xc67f27fd
  42a62f:	jl     0x42a5ef
  42a631:	(bad)  
  42a632:	in     eax,dx
  42a633:	cwde   
  42a634:	mov    ebx,0xfa67f7a1
  42a639:	je     0x42a619
  42a63b:	js     0x42a682
  42a63d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42a63e:	in     al,0x33
  42a640:	fs rex.WRXB leave 
  42a643:	mov    fs,WORD PTR [rdx-0x48]
  42a646:	or     al,0xad
  42a648:	mov    edx,0x983efc7
  42a64d:	mov    ebp,0x65312ce3
  42a652:	(bad)  
  42a653:	push   rcx
  42a654:	lock add dh,dl
  42a657:	or     edx,ebp
  42a659:	jb     0x42a69b
  42a65b:	fmul   st,st(7)
  42a65d:	rex.WRX pop rbp
  42a65f:	jl     0x42a62f
  42a661:	mov    edi,0x2efcfa3f
  42a666:	(bad)  
  42a667:	push   rcx
  42a668:	sbb    BYTE PTR [rax+rbp*8+0x4d7bf39b],al
  42a66f:	and    al,0xc3
  42a671:	mov    bh,0xa0
  42a673:	xchg   ebx,eax
  42a674:	repz (bad) 
  42a676:	add    eax,0x7c58f19a
  42a67b:	cmp    ebp,DWORD PTR [rdx-0x74]
  42a67e:	rex (bad) 
  42a680:	xor    BYTE PTR [rdx+0x128a1ee5],ah
  42a686:	rol    BYTE PTR [rsi],1
  42a688:	ds enter 0xef42,0xec
  42a68d:	je     0x42a6db
  42a68f:	pop    rcx
  42a690:	out    0x36,al
  42a692:	xor    eax,0xedcab3c6
  42a697:	(bad)  
  42a698:	jmp    0x42a68b
  42a69a:	retf   
  42a69b:	cmp    eax,0x28ba266e
  42a6a0:	jns    0x42a6d0
  42a6a2:	imul   ebp,ebx,0x43
  42a6a5:	rex.X mov spl,0x51
  42a6a8:	sahf   
  42a6a9:	ins    DWORD PTR es:[rdi],dx
  42a6aa:	scas   eax,DWORD PTR es:[rdi]
  42a6ab:	push   rbx
  42a6ac:	(bad)  
  42a6ad:	(bad)  
  42a6ae:	or     eax,0x9e9360c3
  42a6b3:	in     eax,dx
  42a6b4:	movsxd esp,DWORD PTR [rbx]
  42a6b6:	push   0xffffffffffffff8a
  42a6b8:	lods   al,BYTE PTR ds:[rsi]
  42a6b9:	pop    rdx
  42a6ba:	or     esi,DWORD PTR [rax+0x30a30488]
  42a6c0:	rex.R psubsw mm0,QWORD PTR [rax-0x11]
  42a6c5:	or     al,0x87
  42a6c7:	rex.XB imul ebp,r14d,0x20
  42a6cb:	nop
  42a6cc:	xor    DWORD PTR es:[rax],ebp
  42a6cf:	xchg   esp,eax
  42a6d0:	stc    
  42a6d1:	lock cwde 
  42a6d3:	(bad)
  42a6d8:	out    0xa1,al
  42a6da:	push   rax
  42a6db:	outs   dx,DWORD PTR ds:[rsi]
  42a6dc:	or     esi,eax
  42a6de:	rex.RX cld 
  42a6e0:	add    al,0xf6
  42a6e2:	push   0x4d8e3e78
  42a6e7:	stc    
  42a6e8:	in     al,dx
  42a6e9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42a6ea:	shl    BYTE PTR [rsi],cl
  42a6ec:	jl     0x42a67a
  42a6ee:	sub    eax,0xb1be9ac2
  42a6f3:	out    dx,eax
  42a6f4:	push   rcx
  42a6f5:	retf   0x5864
  42a6f8:	cmp    DWORD PTR [rbp-0x26],edx
  42a6fb:	mov    ecx,0x4c1da0
  42a700:	jb     0x42a6b0
  42a702:	adc    dh,BYTE PTR [rbp+0x6f]
  42a705:	retf   
  42a706:	movsxd ebp,DWORD PTR [rax+0x57]
  42a709:	cli    
  42a70a:	mov    WORD PTR [rip+0xffffffffde572120],?        # 0xffffffffde99c830
  42a710:	add    DWORD PTR [rsi],0x840b6401
  42a716:	cmp    eax,0xa03dd829
  42a71b:	(bad)  
  42a71c:	enter  0xaac2,0xcd
  42a720:	ror    BYTE PTR [rsi-0x326cf950],cl
  42a726:	or     al,0xdd
  42a728:	pop    rdi
  42a729:	mov    dl,0x1c
  42a72b:	test   DWORD PTR [rax+0x1e24d6a6],edx
  42a731:	movabs ds:0xcef064bd847395b6,eax
  42a73a:	pop    rbp
  42a73b:	rex.RB push 0xffffffffba5301b3
  42a741:	push   0xf4aa222
  42a746:	and    ebp,esi
  42a748:	pop    rax
  42a749:	(bad)  
  42a74a:	(bad)  
  42a74b:	lahf   
  42a74c:	push   0xffffffffde58368b
  42a751:	cdq    
  42a752:	sbb    esi,DWORD PTR [rdi+0x2b]
  42a755:	mov    bh,0x45
  42a757:	xchg   edi,eax
  42a758:	cdq    
  42a759:	push   rcx
  42a75a:	imul   BYTE PTR [rsi]
  42a75c:	xor    edi,DWORD PTR [rcx-0x7a]
  42a75f:	xchg   ebx,eax
  42a760:	jnp    0x42a7ab
  42a762:	jp     0x42a7cb
  42a764:	scas   al,BYTE PTR es:[rdi]
  42a765:	sahf   
  42a766:	and    ah,BYTE PTR [rbx]
  42a768:	jl     0x42a790
  42a76a:	nop
  42a76b:	(bad)  
  42a76c:	lock retf 0x7a9c
  42a770:	jle    0x42a7b8
  42a772:	cmp    eax,DWORD PTR [rdx-0x53]
  42a775:	movabs ds:0x1a1b16c92a32ba92,al
  42a77e:	rex.WR cdqe 
  42a780:	stos   DWORD PTR es:[rdi],eax
  42a781:	(bad)  
  42a782:	cmp    eax,0x355bc052
  42a787:	stos   DWORD PTR es:[rdi],eax
  42a788:	(bad)  
  42a789:	cmp    al,0xa7
  42a78b:	sahf   
  42a78c:	sbb    edx,DWORD PTR [rcx]
  42a78e:	cmp    eax,0x3937d92
  42a793:	xchg   edi,eax
  42a794:	rex.W jle 0x42a7a5
  42a797:	(bad)  
  42a798:	push   rbp
  42a799:	call   0x7724190a
  42a79e:	std    
  42a79f:	mov    BYTE PTR [rbp-0x760474b1],cl
  42a7a5:	loopne 0x42a764
  42a7a7:	vandps xmm10,xmm15,XMMWORD PTR [rdi]
  42a7ab:	sbb    dl,BYTE PTR [rdx]
  42a7ad:	(bad)  
  42a7ae:	repz (bad) 
  42a7b0:	cli    
  42a7b1:	(bad)  
  42a7b2:	lods   eax,DWORD PTR ds:[rsi]
  42a7b3:	mov    dh,0xa4
  42a7b5:	cmp    esi,DWORD PTR [rax+rdi*8+0x59a53b26]
  42a7bc:	and    DWORD PTR [rsp+rsi*8],edx
  42a7bf:	std    
  42a7c0:	stos   BYTE PTR es:[rdi],al
  42a7c1:	fnstcw WORD PTR [rsp+rsi*4-0x143b43eb]
  42a7c8:	rcr    dl,cl
  42a7ca:	int3   
  42a7cb:	sbb    dl,BYTE PTR [rbx+0x6c6b75e4]
  42a7d1:	rcl    BYTE PTR [rip+0x31da3412],cl        # 0x321cdbe9
  42a7d7:	in     al,0xb3
  42a7d9:	mov    ecx,DWORD PTR [rip+0x1c284894]        # 0x1c6af073
  42a7df:	and    DWORD PTR [rbx-0x607c5d2],eax
  42a7e5:	sbb    al,0x2
  42a7e7:	(bad)
  42a7ea:	out    dx,eax
  42a7eb:	sub    al,0xd4
  42a7ed:	or     bl,bl
  42a7ef:	xor    eax,0xe4cea719
  42a7f4:	fimul  DWORD PTR [rax+0x5a]
  42a7f7:	(bad)  
  42a7f9:	sbb    dl,ch
  42a7fb:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42a7fc:	rex.RB (bad) 
  42a7fe:	xchg   ebp,eax
  42a7ff:	mov    bh,0x99
  42a801:	and    ecx,DWORD PTR [rcx+0x47470e74]
  42a807:	in     al,dx
  42a808:	sub    esp,DWORD PTR [rdi+0x4e930adf]
  42a80e:	adc    bh,0xca
  42a811:	sub    ecx,DWORD PTR [rdx+rsi*4]
  42a814:	xor    ebp,DWORD PTR [rbx]
  42a816:	ret    
  42a817:	(bad)  
  42a818:	imul   edx,DWORD PTR [rdx+0x2fa5255d],0xffffffe2
  42a81f:	mov    ecx,0xd6b7126f
  42a824:	(bad)  
  42a825:	jns    0x42a7b6
  42a827:	xor    cl,cl
  42a829:	mov    esp,DWORD PTR [rdi-0x66]
  42a82c:	jo     0x42a8a7
  42a82e:	adc    ebp,esp
  42a830:	(bad)  
  42a831:	mov    bh,0x18
  42a833:	cmp    eax,0x51d5ff17
  42a838:	imul   ah
  42a83a:	and    dh,ch
  42a83c:	mov    ah,0xfa
  42a83e:	add    BYTE PTR [rsi],dh
  42a840:	add    esi,esi
  42a842:	add    BYTE PTR [rcx],ch
  42a844:	je     0x42a87c
  42a846:	test   BYTE PTR [rdi+0x29],bh
  42a849:	jmp    0x42a7cf
  42a84b:	popf   
  42a84c:	or     al,0xf
  42a84e:	pop    rdx
  42a84f:	rex.RXB xchg r8d,eax
  42a851:	(bad)  
  42a852:	addr32 (bad) 
  42a854:	rex.X xor al,0x90
  42a857:	xchg   DWORD PTR [rdx-0x54],eax
  42a85a:	mov    esi,0x8c182b84
  42a85f:	(bad)  
  42a860:	cmp    bh,bl
  42a862:	push   0xffffffffbe895130
  42a867:	sahf   
  42a868:	mov    al,0x60
  42a86a:	fdivr  QWORD PTR [rdx]
  42a86c:	cwde   
  42a86d:	setge  bl
  42a870:	repz mov esi,DWORD PTR [rbx+0x478e2faf]
  42a877:	movabs ds:0xc97fadb25f1ede4,eax
  42a880:	mov    ebp,0x5ac946bb
  42a885:	(bad)  
  42a886:	sbb    dl,BYTE PTR [rbx+rax*8-0x15d8deb7]
  42a88d:	rex.W
  42a88e:	rex (bad) 
  42a890:	adc    edx,DWORD PTR [rbp+0x63]
  42a893:	(bad)
  42a896:	rex.RX cld 
  42a898:	rex.WR adc BYTE PTR [rbx+0x37],r15b
  42a89c:	lock test BYTE PTR [rbx],0xd3
  42a8a0:	test   BYTE PTR [rax+0x3b9e75a4],al
  42a8a6:	(bad)  
  42a8a7:	sub    dl,BYTE PTR [rbx+riz*2]
  42a8aa:	rex.RX cmp ecx,r11d
  42a8ad:	pushf  
  42a8ae:	rex.XB out 0x42,eax
  42a8b1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42a8b2:	sub    ebx,ebx
  42a8b4:	cld    
  42a8b5:	mov    ecx,esp
  42a8b7:	std    
  42a8b8:	ror    esp,1
  42a8ba:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42a8bb:	(bad)  
  42a8bc:	lahf   
  42a8bd:	cli    
  42a8be:	movabs ds:0xc1f931fc53657e31,eax
  42a8c7:	mov    ah,0x39
  42a8c9:	xor    eax,0xdb14abc6
  42a8ce:	sbb    al,0xa1
  42a8d0:	retf   0xaba6
  42a8d3:	add    eax,0x64557b96
  42a8d8:	adc    ecx,DWORD PTR [rsi+0x31]
  42a8db:	lods   al,BYTE PTR ds:[rsi]
  42a8dc:	(bad)  
  42a8dd:	sub    BYTE PTR [rax+0x7],dh
  42a8e0:	mov    bl,BYTE PTR [rcx]
  42a8e2:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42a8e3:	cmp    eax,0xfd9d4c12
  42a8e8:	mov    dl,0x54
  42a8ea:	and    ecx,DWORD PTR [rdx-0x6e]
  42a8ed:	shr    esp,cl
  42a8ef:	or     ah,BYTE PTR [rip+0xffffffffd339f172]        # 0xffffffffd37c9a67
  42a8f5:	fsubr  QWORD PTR [rsi]
  42a8f7:	icebp  
  42a8f8:	(bad)  
  42a8f9:	out    dx,eax
  42a8fa:	mov    ebp,0x26ed1fa5
  42a8ff:	rex.WRXB
  42a900:	ds jg  0x42a8c1
  42a903:	sti    
  42a904:	cmp    edi,edi
  42a906:	push   rbp
  42a907:	(bad)  
  42a908:	sti    
  42a909:	loop   0x42a8f4
  42a90b:	scas   al,BYTE PTR es:[rdi]
  42a90c:	lock movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  42a90e:	fwait
  42a90f:	jg     0x42a94e
  42a911:	cmp    eax,0x4077ba78
  42a916:	hlt    
  42a917:	mov    ?,WORD PTR [rbx-0x1944f9]
  42a91d:	(bad)  
  42a91e:	xchg   ebp,eax
  42a91f:	lahf   
  42a920:	adc    BYTE PTR [rdi-0x3002741b],al
  42a926:	(bad)  
  42a927:	add    ebx,DWORD PTR [rdx]
  42a929:	xchg   dh,dh
  42a92b:	(bad)  
  42a92c:	int3   
  42a92d:	jl     0x42a993
  42a92f:	rcl    BYTE PTR [rbx+rax*1-0xcbeb350],1
  42a936:	stc    
  42a937:	movsxd ebx,ebx
  42a939:	adc    ecx,DWORD PTR [rcx-0x1f]
  42a93c:	jne    0x42a968
  42a93e:	mov    edi,0xc5b7034b
  42a943:	(bad)  
  42a944:	(bad)  
  42a945:	stos   DWORD PTR es:[rdi],eax
  42a946:	retf   0x37c4
  42a949:	jle    0x42a914
  42a94b:	xor    al,0x3b
  42a94d:	or     al,0x79
  42a94f:	fwait
  42a950:	sub    edi,DWORD PTR [rax-0x7f]
  42a953:	mov    dh,0xad
  42a955:	cmc    
  42a956:	(bad)  
  42a957:	add    ecx,ebp
  42a959:	cmp    eax,0xfa5fb886
  42a95e:	imul   ecx,DWORD PTR [rbp+0x24],0x9bef00df
  42a965:	sub    al,0x95
  42a967:	mov    esp,0x4e82d137
  42a96c:	jle    0x42a9b3
  42a96e:	fisttp DWORD PTR [rsi+0x19]
  42a971:	fcomp  DWORD PTR [rdi-0x6]
  42a974:	cmp    eax,0x5bd15cf6
  42a979:	mov    dl,0x1b
  42a97b:	xchg   edx,eax
  42a97c:	lock imul esi,DWORD PTR [rsi],0x17
  42a980:	and    edx,esi
  42a982:	lods   eax,DWORD PTR ds:[rsi]
  42a983:	(bad)  
  42a984:	out    0xd9,al
  42a986:	jo     0x42a953
  42a988:	out    dx,eax
  42a989:	retfw  0xe72b
  42a98d:	push   0x73
  42a98f:	mov    eax,0x646ba0b8
  42a994:	enter  0x7341,0xef
  42a998:	(bad)  
  42a999:	jle    0x42aa16
  42a99b:	(bad)
  42a99f:	or     BYTE PTR [rbx],bh
  42a9a1:	fsubr  DWORD PTR [rsi-0x63a43f24]
  42a9a7:	pushf  
  42a9a8:	sub    DWORD PTR [rbp-0x4a],0x8af29f62
  42a9af:	fisub  DWORD PTR [rdx-0x56]
  42a9b2:	js     0x42a989
  42a9b4:	outs   dx,BYTE PTR ds:[rsi]
  42a9b5:	fld    DWORD PTR [rcx]
  42a9b7:	mov    edi,0xcda73a21
  42a9bc:	mov    eax,DWORD PTR [rbx-0x5f]
  42a9bf:	rex.R pop rsp
  42a9c1:	icebp  
  42a9c2:	cld    
  42a9c3:	mov    esp,0x53e0ecee
  42a9c8:	mov    ah,0x1b
  42a9ca:	mov    ebp,0x7037c9ef
  42a9cf:	sahf   
  42a9d0:	in     al,dx
  42a9d1:	movabs eax,ds:0x7162d7ad87343b5b
  42a9da:	mov    ebx,fs
  42a9dc:	(bad)  
  42a9dd:	repnz sbb eax,0x39ee923b
  42a9e3:	rcl    bh,0x6d
  42a9e6:	jae    0x42a9e6
  42a9e8:	in     eax,dx
  42a9e9:	xor    eax,DWORD PTR [rbx]
  42a9eb:	cmp    DWORD PTR [rax],0x17
  42a9ee:	shl    BYTE PTR [rax],0xba
  42a9f1:	push   rdx
  42a9f2:	(bad)  
  42a9f3:	neg    edi
  42a9f5:	push   rsi
  42a9f6:	adc    DWORD PTR [rsi],esi
  42a9f8:	clc    
  42a9f9:	add    DWORD PTR [rbp+0x6332e16d],0x58
  42aa00:	sbb    esi,DWORD PTR [rip+0xfffffffff339f345]        # 0xfffffffff37c9d4b
  42aa06:	jae    0x42aa71
  42aa08:	lods   eax,DWORD PTR ds:[rsi]
  42aa09:	mov    ah,0x1b
  42aa0b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42aa0c:	push   rbp
  42aa0d:	mov    eax,DWORD PTR [rbp+0x7f]
  42aa10:	sub    DWORD PTR [rbx-0x2a1467ba],0x5c
  42aa17:	(bad)  
  42aa18:	rex.W ja 0x42aa7f
  42aa1b:	cmp    eax,0x3636dfe2
  42aa20:	rex.RX out 0xc7,eax
  42aa23:	(bad)  
  42aa24:	scas   eax,DWORD PTR es:[rdi]
  42aa25:	xchg   ebx,eax
  42aa26:	rcl    DWORD PTR [rbx-0x6168d849],cl
  42aa2c:	(bad)  
  42aa2d:	outs   dx,BYTE PTR ds:[rsi]
  42aa2e:	outs   dx,DWORD PTR ds:[rsi]
  42aa2f:	pmaddwd mm6,QWORD PTR [rdx+rbp*2+0x74cea97d]
  42aa37:	cmp    dh,dl
  42aa39:	data16 (bad) 
  42aa3b:	sahf   
  42aa3c:	(bad)  
  42aa3e:	repz rex.WR mov dl,0x28
  42aa42:	data16 (bad) 
  42aa45:	(bad)  
  42aa46:	outs   dx,DWORD PTR ds:[rsi]
  42aa47:	sbb    ecx,0xffffff89
  42aa4a:	mov    bh,bh
  42aa4c:	jp     0x42aaa8
  42aa4e:	pop    rsp
  42aa4f:	ins    DWORD PTR es:[rdi],dx
  42aa50:	xor    al,0x1a
  42aa52:	sar    DWORD PTR [rbx+0xc0bb301],cl
  42aa58:	(bad)  
  42aa59:	and    bh,BYTE PTR [rax]
  42aa5b:	lea    esi,[rsi-0x4c1bdb46]
  42aa61:	movs   DWORD PTR es:[rdi],DWORD PTR ss:[rsi]
  42aa63:	rex.RXB mov r8b,0xad
  42aa66:	popf   
  42aa67:	pop    rsi
  42aa68:	rcr    esp,1
  42aa6a:	xor    bp,WORD PTR [rcx+0x72dd6eae]
  42aa71:	sub    ch,0xdd
  42aa74:	gs (bad) 
  42aa76:	cmp    ebx,DWORD PTR [rax-0x16946319]
  42aa7c:	movsxd ecx,DWORD PTR [rdx+0x6e42dc51]
  42aa82:	cmp    al,0xc8
  42aa84:	jno    0x42aa85
  42aa86:	mov    ebx,esi
  42aa88:	jmp    0xfffffffffd9d2b3d
  42aa8d:	push   rsi
  42aa8e:	int    0x15
  42aa90:	mov    ebx,0xc91404cc
  42aa95:	xchg   ebx,eax
  42aa96:	pop    rbp
  42aa97:	fwait
  42aa98:	scas   al,BYTE PTR es:[rdi]
  42aa99:	mov    al,0x80
  42aa9b:	int3   
  42aa9c:	adc    ebp,edi
  42aa9e:	sahf   
  42aa9f:	ds mov dh,0x97
  42aaa2:	sbb    BYTE PTR [rip+0x7caa4964],ah        # 0x7cecf40c
  42aaa8:	mov    ch,0x2c
  42aaaa:	(bad)  
  42aaab:	jmp    0x42aa9b
  42aaad:	(bad)  
  42aaae:	cld    
  42aaaf:	scas   al,BYTE PTR es:[rdi]
  42aab0:	sbb    edi,edi
  42aab2:	repz pop rbp
  42aab4:	pop    rsp
  42aab5:	outs   dx,DWORD PTR ds:[rsi]
  42aab6:	push   rdi
  42aab7:	imul   esi,DWORD PTR [rip+0xfffffffffdd6ea30],0xbcaa5d40        # 0xfffffffffe1994f1
  42aac1:	and    eax,DWORD PTR [rdi+rbp*2]
  42aac4:	int3   
  42aac5:	(bad)  
  42aac6:	sahf   
  42aac7:	int3   
  42aac8:	push   rbp
  42aac9:	ret    0xa8eb
  42aacc:	mov    BYTE PTR [rsi],ch
  42aace:	out    0xa4,eax
  42aad0:	rex.R pop rsp
  42aad2:	jb     0x42aafa
  42aad4:	(bad)  
  42aad5:	add    BYTE PTR [rsi-0x154166b2],0xe1
  42aadc:	je     0x42aae8
  42aade:	mov    fs,WORD PTR [rbx]
  42aae0:	es (bad) 
  42aae2:	push   rbp
  42aae3:	je     0x42ab17
  42aae5:	mov    dh,BYTE PTR [rdx]
  42aae7:	adc    BYTE PTR [rax],ah
  42aae9:	push   rsi
  42aaea:	test   eax,0x29869cd5
  42aaef:	movsxd ecx,DWORD PTR [rcx]
  42aaf1:	cmc    
  42aaf2:	jmp    0x3a3a5d70
  42aaf7:	(bad)  
  42aaf8:	jrcxz  0x42ab6b
  42aafa:	jrcxz  0x42ab75
  42aafc:	push   rbx
  42aafd:	push   rsi
  42aafe:	adc    ebx,DWORD PTR [rbx-0x3ee4f3ad]
  42ab04:	rex.WXB xor r13b,spl
  42ab07:	mov    ah,0x8
  42ab09:	push   rsp
  42ab0a:	gs loop 0x42aae6
  42ab0d:	push   rbp
  42ab0e:	push   rax
  42ab0f:	sub    al,0x40
  42ab11:	jnp    0x42ab77
  42ab13:	xchg   esp,eax
  42ab14:	rex.W cmp al,0x1d
  42ab17:	out    dx,al
  42ab18:	sub    BYTE PTR [rax+rdi*4],al
  42ab1b:	pop    rcx
  42ab1c:	sub    eax,0xe646bba2
  42ab21:	(bad)
  42ab24:	pop    rax
  42ab25:	fld    DWORD PTR [rsp+rdx*2]
  42ab28:	sahf   
  42ab29:	(bad)  
  42ab2a:	jb     0x42aab5
  42ab2c:	cwde   
  42ab2d:	mov    ebp,0xa14f9776
  42ab32:	rex.WX cmp rcx,QWORD PTR [rdx-0x43a14cc6]
  42ab39:	stc    
  42ab3a:	sbb    BYTE PTR [rbx],ch
  42ab3c:	lea    ebx,[rax-0x49627ddb]
  42ab42:	addr32 mov ds:0x96b4d0c0,al
  42ab48:	lock sub BYTE PTR [rax-0x2b],bh
  42ab4c:	fsubr  QWORD PTR [rbp+0x13f64381]
  42ab52:	mov    esi,esp
  42ab54:	sahf   
  42ab55:	sti    
  42ab56:	or     ah,ch
  42ab58:	or     dh,BYTE PTR [rcx*8+0x6f099d4c]
  42ab5f:	in     eax,dx
  42ab60:	(bad)  
  42ab61:	outs   dx,BYTE PTR ds:[rsi]
  42ab62:	(bad)  
  42ab63:	cdq    
  42ab64:	cwde   
  42ab65:	pop    rdx
  42ab66:	mov    esp,0x1aedef61
  42ab6b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  42ab6c:	jne    0x42abc4
  42ab6e:	mov    ?,WORD PTR [rbx]
  42ab70:	mov    ch,0xb2
  42ab72:	rex.XB
  42ab73:	rex.WXB adc al,0xc3
  42ab76:	sbb    ah,BYTE PTR [rax+0x76]
  42ab79:	div    BYTE PTR [rsi-0x41]
  42ab7c:	pop    rbp
  42ab7d:	cmp    eax,0x5fb920eb
  42ab82:	sti    
  42ab83:	repnz (bad) 
  42ab85:	shl    DWORD PTR [rip+0xffffffffc156768b],cl        # 0xffffffffc1992216
  42ab8b:	sbb    bh,cl
  42ab8d:	adc    al,0x3
  42ab8f:	or     DWORD PTR [rbp-0x30],eax
  42ab92:	rex.RB pop r14
  42ab94:	(bad)  
  42ab95:	xor    ebx,DWORD PTR gs:[rbx]
  42ab98:	(bad)  
  42ab99:	mov    ebx,0x7473514e
  42ab9e:	rex.WRB out dx,eax
  42aba0:	xor    eax,0x95d3a427
  42aba5:	mov    bh,0x82
  42aba7:	retf   0x5fe6
  42abaa:	(bad)  
  42abab:	in     al,0x16
  42abad:	pop    rbx
  42abae:	and    BYTE PTR [rax+0x36aed9cf],0x9d
  42abb5:	pushf  
  42abb6:	mov    ecx,0x59b7bc19
  42abbb:	jb     0x42abb3
  42abbd:	fild   DWORD PTR [rdx+0x42]
  42abc0:	ja     0x42ac11
  42abc2:	xchg   ebp,eax
  42abc3:	pop    rbp
  42abc4:	(bad)  
  42abc5:	cdq    
  42abc6:	or     DWORD PTR [rbx-0x760a49c],esp
  42abcc:	lods   al,BYTE PTR ds:[rsi]
  42abcd:	in     eax,0xbc
  42abcf:	sbb    bl,cl
  42abd1:	rex.WR
  42abd2:	lock and esi,ebx
  42abd5:	rex.WRXB adc BYTE PTR [r11+r10*4+0x29565554],r15b
  42abdd:	sbb    bl,dl
  42abdf:	mov    ecx,0x3b29c818
  42abe4:	sub    edi,esp
  42abe6:	push   rdx
  42abe7:	(bad)  
  42abe8:	nop
  42abe9:	(bad)  
  42abea:	push   rdi
  42abeb:	loope  0x42ac12
  42abed:	div    BYTE PTR [rbx]
  42abef:	(bad)  
  42abf0:	jrcxz  0x42ac02
  42abf2:	cdq    
  42abf3:	mov    esi,0xb0ac51bc
  42abf8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42abf9:	mov    ah,0x32
  42abfb:	mov    al,BYTE PTR [rsi+0x40161c35]
  42ac01:	add    edi,DWORD PTR [rbp-0x27]
  42ac04:	mov    ch,0x68
  42ac06:	leave  
  42ac07:	jle    0x42ab93
  42ac09:	and    al,0x7e
  42ac0b:	lods   eax,DWORD PTR ds:[rsi]
  42ac0c:	(bad)  
  42ac0d:	cdq    
  42ac0e:	rex.WR mov bl,0x4f
  42ac11:	(bad)  
  42ac12:	(bad)  
  42ac13:	movabs ds:0x4654b6be4e6f77b3,eax
  42ac1c:	sub    al,0xc4
  42ac1e:	pop    rbx
  42ac1f:	adc    al,0x1b
  42ac21:	in     al,dx
  42ac22:	mul    BYTE PTR ds:[rbx]
  42ac25:	fst    QWORD PTR [rdx+0x76]
  42ac28:	push   rcx
  42ac29:	shl    BYTE PTR [rdi-0xf82c3ba],1
  42ac2f:	jg     0x42ac31
  42ac31:	add    DWORD PTR [rdx+0x3c],edx
  42ac34:	and    DWORD PTR [rdi],eax
  42ac36:	cmp    ebx,esi
  42ac38:	jg     0x42ac0e
  42ac3a:	fcmovne st,st(6)
  42ac3c:	fst    st(0)
  42ac3e:	movabs eax,ds:0xb966ab48d2ce3aa
  42ac47:	or     esp,DWORD PTR [rdx]
  42ac49:	hlt    
  42ac4a:	retf   0xa36
  42ac4d:	add    DWORD PTR [rdi+0x172fa2a6],esi
  42ac53:	sub    al,0x9a
  42ac55:	and    al,0xa1
  42ac57:	mov    ah,0xe5
  42ac59:	int    0xe5
  42ac5b:	cmp    eax,DWORD PTR [rax-0x5a3df624]
  42ac61:	and    dl,BYTE PTR [rdi]
  42ac63:	or     bl,0x99
  42ac67:	adc    DWORD PTR [rbx-0x59],esp
  42ac6a:	(bad)  
  42ac6b:	xchg   edi,eax
  42ac6c:	xlat   BYTE PTR ds:[rbx]
  42ac6d:	clc    
  42ac6e:	int    0x34
  42ac70:	lods   eax,DWORD PTR ds:[rsi]
  42ac71:	outs   dx,DWORD PTR ds:[rsi]
  42ac72:	js     0x42ac14
  42ac74:	mov    eax,0x69867234
  42ac79:	and    edx,esi
  42ac7b:	xchg   esi,eax
  42ac7c:	rex.WRX leave 
  42ac7e:	push   rax
  42ac7f:	ja     0x42ace1
  42ac81:	sbb    al,0x8b
  42ac83:	(bad)  
  42ac84:	jne    0x42ac77
  42ac86:	movabs eax,ds:0x34d24f8b07acd13a
  42ac8f:	(bad)  
  42ac90:	adc    al,0xa1
  42ac92:	rex.WX (bad) 
  42ac94:	cmp    dh,cl
  42ac96:	xchg   ebx,eax
  42ac97:	push   rdi
  42ac98:	adc    al,0x96
  42ac9a:	cmp    DWORD PTR [rax],esp
  42ac9c:	(bad)  
  42ac9d:	cli    
  42ac9e:	cmp    DWORD PTR [rbx],edx
  42aca0:	retf   0xe9f9
  42aca3:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42aca4:	and    ah,BYTE PTR [rip+0xffffffffc9fc591d]        # 0xffffffffca3f05c7
  42acaa:	xchg   ebp,eax
  42acab:	xchg   edi,eax
  42acac:	rol    esi,1
  42acae:	cmp    BYTE PTR [rcx-0x23],al
  42acb1:	je     0x42ac9f
  42acb3:	and    esp,DWORD PTR [rsi]
  42acb5:	(bad)  
  42acb6:	retf   
  42acb7:	out    0x1f,al
  42acb9:	ss (bad) 
  42acbb:	cmc    
  42acbc:	std    
  42acbd:	jl     0x42ad1b
  42acbf:	(bad)  
  42acc0:	xor    al,0xf1
  42acc2:	ret    0x4812
  42acc5:	call   0xffffffffb54c2b0d
  42acca:	test   BYTE PTR [rbx],ah
  42accc:	mov    ch,0x8d
  42acce:	out    0x96,eax
  42acd0:	je     0x42ad2a
  42acd2:	sub    edi,edx
  42acd4:	jg     0x42ad04
  42acd6:	rex.XB test r8b,sil
  42acd9:	nop
  42acda:	mov    es,WORD PTR [rdx]
  42acdc:	fdivr  QWORD PTR [rsi]
  42acde:	and    al,0xe3
  42ace0:	mov    bl,0x62
  42ace2:	xor    ch,BYTE PTR [rbx]
  42ace4:	gs push rdi
  42ace6:	push   rbx
  42ace7:	(bad)  
  42ace8:	cmp    DWORD PTR [rsi-0x56],esp
  42aceb:	cmp    eax,0x95f88a74
  42acf0:	rex.WXB
  42acf1:	bnd jo 0x42ac94
  42acf4:	hlt    
  42acf5:	mov    BYTE PTR [rcx+0x77],dl
  42acf8:	jp     0x42acbc
  42acfa:	test   al,0x81
  42acfc:	add    edx,edx
  42acfe:	(bad)  
  42ad00:	or     eax,DWORD PTR [rcx-0x1b]
  42ad03:	jnp    0x42ad01
  42ad05:	ss pop rsp
  42ad07:	stos   DWORD PTR es:[rdi],eax
  42ad08:	(bad)  
  42ad09:	je     0x42ad00
  42ad0b:	(bad)  
  42ad0c:	jbe    0x42ad36
  42ad0e:	jb     0x42acec
  42ad10:	out    dx,eax
  42ad11:	(bad)  
  42ad12:	cli    
  42ad13:	jno    0x42ad92
  42ad15:	mov    ah,0x33
  42ad17:	cmc    
  42ad18:	data16 (bad) 
  42ad1a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  42ad1b:	(bad)  
  42ad1c:	mov    ch,0xb0
  42ad1e:	hlt    
  42ad1f:	rex.WB and al,0xd
  42ad22:	rex.RX movabs ds:0x5894a4931d6320ad,al
  42ad2c:	(bad)  
  42ad2d:	or     al,0xd4
  42ad2f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42ad30:	and    eax,0xc64a14e7
  42ad35:	adc    eax,0x46ed24bb
  42ad3a:	hlt    
  42ad3b:	and    al,0xce
  42ad3d:	(bad)  
  42ad3e:	sub    al,0x16
  42ad40:	and    eax,0x56997775
  42ad45:	mov    dh,0x70
  42ad47:	(bad)  
  42ad48:	pop    rcx
  42ad49:	mov    ecx,0xc8d7bccc
  42ad4e:	mov    DWORD PTR [rdi],eax
  42ad50:	rex.WXB cmp BYTE PTR [r11],dl
  42ad53:	(bad)  
  42ad54:	or     DWORD PTR [rdi+0x4a],edi
  42ad57:	rex.WXB ins BYTE PTR es:[rdi],dx
  42ad59:	xor    esp,DWORD PTR [rbp+0x26bb566e]
  42ad5f:	clc    
  42ad60:	imul   DWORD PTR [rdi+0x399572a4]
  42ad66:	iret   
  42ad67:	ret    0x2294
  42ad6a:	hlt    
  42ad6b:	sbb    DWORD PTR [rdi-0x52047511],0x9d6ab811
  42ad75:	sbb    al,0x5e
  42ad77:	sbb    al,0x1b
  42ad79:	int    0xf6
  42ad7b:	mov    edx,0xd1454700
  42ad80:	push   0x48565d52
  42ad85:	test   eax,0x7cf42ac
  42ad8a:	jge    0x42ad7c
  42ad8c:	(bad)  
  42ad8d:	jnp    0x42ad22
  42ad8f:	ss xchg ebx,eax
  42ad91:	add    BYTE PTR [rbx],al
  42ad93:	cmp    BYTE PTR [rdi-0x25],bh
  42ad96:	ins    DWORD PTR es:[rdi],dx
  42ad97:	mov    ecx,0x4309d289
  42ad9c:	(bad)  
  42ad9d:	adc    BYTE PTR [rbp+0x2],cl
  42ada0:	outs   dx,DWORD PTR ds:[rsi]
  42ada1:	sub    DWORD PTR [rdx],ecx
  42ada3:	xchg   ecx,eax
  42ada4:	cwde   
  42ada5:	rex.WRXB xchg r13,rax
  42ada7:	rex.WX and rax,0x75881e7c
  42adad:	lahf   
  42adae:	rex.XB pop r8
  42adb0:	out    0x1a,eax
  42adb2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42adb3:	fisub  DWORD PTR [rbp-0x76b203de]
  42adb9:	cmp    ebp,esp
  42adbb:	pop    rbx
  42adbc:	lods   eax,DWORD PTR ds:[rsi]
  42adbd:	mov    al,0xa7
  42adbf:	fisttp DWORD PTR [rsi-0x3]
  42adc2:	mov    eax,0xb86fe8cb
  42adc7:	addr32 rex.W (bad) 
  42adca:	jmp    0x45dbb3b9
  42adcf:	fdiv   DWORD PTR [rbx+0x29ea7af7]
  42add5:	mov    edi,0x1848029c
  42adda:	imul   esi,DWORD PTR [rsi+0x4c],0xb
  42adde:	adc    edx,DWORD PTR [rax+0x1cd875f8]
  42ade4:	cwde   
  42ade5:	retf   0xa559
  42ade8:	pop    rbp
  42ade9:	rex.B jo 0x42adcd
  42adec:	xor    DWORD PTR [rcx+0x5647d25],esi
  42adf2:	rcl    BYTE PTR [rdi-0x1120aeb1],0x1f
  42adf9:	in     al,dx
  42adfa:	push   0xffffffffbc361f5d
  42adff:	retf   0x66cb
  42ae02:	xchg   r13,rax
  42ae04:	fisttp QWORD PTR [rsi+0xfa4317a]
  42ae0a:	rex.B movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  42ae0c:	and    ah,BYTE PTR [rsi+0x4a]
  42ae0f:	jg     0x42add2
  42ae11:	pop    QWORD PTR [rcx+0x53ba537a]
  42ae17:	sbb    rax,0x4a55a14b
  42ae1d:	rex.WR (bad) 
  42ae1f:	jne    0x42ada5
  42ae21:	add    edi,DWORD PTR [rbx-0x70]
  42ae24:	shl    BYTE PTR [rbx+0x5f],1
  42ae27:	xor    eax,0xa3bb7c1e
  42ae2c:	adc    eax,0x437fc96f
  42ae31:	or     esp,eax
  42ae33:	jp     0x42ae15
  42ae35:	jmp    0x42ade3
  42ae37:	push   rbp
  42ae38:	and    dl,bh
  42ae3a:	data16 or dh,ch
  42ae3d:	(bad)  
  42ae3e:	cmp    eax,0xa89b1733
  42ae43:	cli    
  42ae44:	add    bl,BYTE PTR cs:[rdi+0x1f]
  42ae48:	movabs ds:0x764498539d524555,eax
  42ae51:	push   rcx
  42ae52:	cmp    eax,0x8a56fb8e
  42ae57:	add    edx,DWORD PTR [rip+0x200ca32e]        # 0x204f518b
  42ae5d:	rex.WXB in al,dx
  42ae5f:	test   DWORD PTR [rcx+rdx*1],esi
  42ae62:	add    BYTE PTR [rsi+rbp*2],0xf3
  42ae66:	pop    rdx
  42ae67:	or     DWORD PTR [rdi+0x184f6f66],0x13
  42ae6e:	shl    DWORD PTR [rax],1
  42ae70:	and    DWORD PTR [rcx-0x2a],eax
  42ae73:	rex.WR movabs rsp,0xcd6a63253726cca9
  42ae7d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  42ae7e:	jns    0x42ae19
  42ae80:	sahf   
  42ae81:	mov    ebp,0x1ecb7fe4
  42ae86:	clc    
  42ae87:	(bad)  
  42ae88:	and    eax,0x1846d1ed
  42ae8d:	xor    cl,BYTE PTR [rdi]
  42ae8f:	in     eax,0xd0
  42ae91:	ins    DWORD PTR es:[rdi],dx
  42ae92:	mov    bl,ah
  42ae94:	(bad)  
  42ae95:	cs (bad) 
  42ae97:	(bad)  
  42ae98:	xchg   ebx,eax
  42ae99:	outs   dx,DWORD PTR ds:[rsi]
  42ae9a:	mov    cs,WORD PTR [rdi]
  42ae9c:	pop    rdi
  42ae9d:	(bad)  
  42ae9e:	pop    rdi
  42ae9f:	mov    WORD PTR [rdx],?
  42aea1:	xchg   edi,eax
  42aea2:	mov    esi,0x43583fc0
  42aea7:	and    esp,DWORD PTR [rdi]
  42aea9:	xor    BYTE PTR [rbx+riz*2+0x25],dl
  42aead:	(bad)  
  42aeae:	adc    ah,bl
  42aeb0:	mov    esi,0x79b33d4a
  42aeb5:	call   0x423647da
  42aeba:	(bad)  
  42aebb:	adc    DWORD PTR [rdi+0xb],eax
  42aebe:	sar    BYTE PTR [rbx+0x5c],0x43
  42aec2:	fcomp  st(0)
  42aec4:	ss es rex.RX
  42aec7:	rex.X adc DWORD PTR [rax+0x7ee65d41],ecx
  42aece:	(bad)  
  42aecf:	mov    ebx,fs
  42aed1:	(bad)  
  42aed2:	jae    0x42ae6b
  42aed4:	leave  
  42aed5:	mov    ah,0xd4
  42aed7:	fs shl dh,0xca
  42aedb:	jge    0x42aec0
  42aedd:	repnz mov ebp,0x9725b13d
  42aee3:	mov    WORD PTR [rax+0xd],?
  42aee6:	jnp    0x42af27
  42aee8:	or     al,0xcc
  42aeea:	ja     0x42aef3
  42aeec:	data16 repnz (bad) 
  42aeef:	rex.R out 0x78,al
  42aef2:	lahf   
  42aef3:	(bad)  
  42aef4:	mov    ebp,0xfdb00b8e
  42aef9:	jns    0x42aec3
  42aefb:	call   0x7d679feb
  42af00:	adc    ebp,DWORD PTR [rbp-0x77]
  42af03:	rex.WRX xlat BYTE PTR ds:[rbx]
  42af05:	mov    WORD PTR [rdx+0x2b],cs
  42af08:	jne    0x42af37
  42af0a:	or     BYTE PTR [rdx+rbp*4-0x62],bl
  42af0e:	xchg   edx,eax
  42af0f:	sub    al,0x27
  42af11:	sub    BYTE PTR [rax+0x6f],cl
  42af14:	adc    DWORD PTR [rax+0x5333392],eax
  42af1a:	jbe    0xffffffffa05377ae
  42af20:	jmp    0x42aeba
  42af22:	mov    bl,0xc7
  42af24:	xchg   edi,eax
  42af25:	cli    
  42af26:	mov    WORD PTR [rcx],gs
  42af28:	(bad)  
  42af29:	fldenv [rbx+0x66]
  42af2c:	mov    edx,0xf7f90f25
  42af31:	add    eax,DWORD PTR [rdx]
  42af33:	and    BYTE PTR [rdx-0xea4503f],al
  42af39:	push   rcx
  42af3a:	jno    0x42aec2
  42af3c:	rex.X
  42af3d:	addr32 mov al,0xcd
  42af40:	push   rcx
  42af41:	(bad)  
  42af42:	in     al,dx
  42af43:	sahf   
  42af44:	push   rdi
  42af45:	call   0xb952c88
  42af4a:	mov    ecx,eax
  42af4c:	mov    ebx,0xa323028c
  42af51:	(bad)  
  42af52:	dec    BYTE PTR [rbp-0x52]
  42af55:	rex.R retf 0x8e5
  42af59:	pop    rcx
  42af5a:	mov    al,0x79
  42af5c:	mov    ecx,0x4666fe40
  42af61:	adc    eax,0xedc7a034
  42af66:	jae    0x42afc1
  42af68:	repnz rex.WRB pop r9
  42af6b:	jrcxz  0x42af9b
  42af6d:	or     BYTE PTR [rdi],bl
  42af6f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42af70:	rex.WXB
  42af71:	ds ss std 
  42af74:	js     0x42afb9
  42af76:	loop   0x42afd3
  42af78:	xchg   esi,eax
  42af79:	and    al,0x16
  42af7b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  42af7c:	retf   0x5f10
  42af7f:	out    0x87,eax
  42af81:	xchg   edi,eax
  42af82:	fbld   TBYTE PTR [rax]
  42af84:	mov    edx,0x1afc2d8a
  42af89:	mov    WORD PTR [rcx],gs
  42af8b:	sbb    dl,BYTE PTR [rbx+0xb]
  42af8e:	push   rbx
  42af8f:	mov    dl,0xac
  42af91:	add    edi,eax
  42af93:	cli    
  42af94:	scas   eax,DWORD PTR es:[rdi]
  42af95:	adc    dh,BYTE PTR [rbx]
  42af97:	stos   BYTE PTR es:[rdi],al
  42af98:	ds mov eax,ebp
  42af9b:	pop    rbp
  42af9c:	(bad)  
  42af9d:	rex movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  42af9f:	sbb    DWORD PTR [rdi+0x7f],edx
  42afa2:	test   DWORD PTR [rsi+rbp*2-0xbfc192b],ecx
  42afa9:	fucom  st(6)
  42afab:	fistp  DWORD PTR [rcx-0x44]
  42afae:	in     eax,0x26
  42afb0:	(bad)  
  42afb1:	ret    0xf26f
  42afb4:	cwde   
  42afb5:	mov    al,0xe9
  42afb7:	rex.WB cqo 
  42afb9:	and    ecx,DWORD PTR [rbx-0x39e19839]
  42afbf:	(bad)  
  42afc0:	sub    bl,dl
  42afc2:	cdq    
  42afc3:	add    edx,DWORD PTR [rax-0x2d]
  42afc6:	xor    cl,dh
  42afc8:	jnp    0x42afb2
  42afca:	sbb    eax,0xf7e72fe9
  42afcf:	ret    
  42afd0:	nop
  42afd1:	and    BYTE PTR [rdi],0xf9
  42afd4:	push   0xffffffffffffffd9
  42afd6:	mov    ah,0xc5
  42afd8:	rex.WX xchg rdi,rdi
  42afdb:	fsubr  DWORD PTR [rdx-0x6a]
  42afde:	push   rbp
  42afdf:	pop    rcx
  42afe0:	ss pop rsi
  42afe2:	(bad)  
  42afe3:	movabs al,ds:0xe4b826689c8da4fd
  42afec:	mov    esi,0xe8855350
  42aff1:	fnstsw WORD PTR [rsi-0x1471679e]
  42aff7:	jb     0x42afaf
  42aff9:	ins    BYTE PTR es:[rdi],dx
  42affa:	cmp    al,0xf4
  42affc:	cmc    
  42affd:	(bad)  
  42affe:	jmp    0x42afb3
  42b000:	xlat   BYTE PTR ds:[rbx]
  42b001:	jmp    0xffffffff92e443b3
  42b006:	jge    0x42b01e
  42b008:	rex.WR push rcx
  42b00a:	addr32 sub al,0x7d
  42b00d:	movabs ds:0x7cbb459558d8225e,eax
  42b016:	sbb    al,0x80
  42b018:	(bad)  
  42b01a:	sbb    ebx,DWORD PTR [rbx]
  42b01c:	and    ebx,DWORD PTR [rbp+0x6c]
  42b01f:	movabs ds:0xd493687bfd170d7b,al
  42b028:	(bad)  
  42b029:	(bad)  
  42b02a:	(bad)  
  42b02b:	rex.WR int3 
  42b02d:	pop    rdi
  42b02e:	xchg   esp,eax
  42b02f:	add    al,0x2e
  42b031:	jrcxz  0x42b068
  42b033:	test   DWORD PTR [rax],ecx
  42b035:	out    0x35,eax
  42b037:	(bad)  
  42b038:	jmp    0x42b030
  42b03a:	movabs al,ds:0xcbb2fcd0ae1b2bf0
  42b043:	push   rdx
  42b044:	test   eax,0xe75c25fc
  42b049:	sub    r11d,DWORD PTR ss:[rbx]
  42b04d:	ds retf 0x4d30
  42b051:	xchg   edi,eax
  42b052:	adc    dh,0x14
  42b055:	mov    dh,0x70
  42b057:	pop    rsp
  42b058:	(bad)  
  42b059:	in     al,0xce
  42b05b:	(bad)  
  42b05c:	(bad)  [rcx-0x6]
  42b05f:	pop    rsp
  42b060:	(bad)  
  42b061:	and    BYTE PTR [rdx-0x26],al
  42b064:	mov    bl,0x4c
  42b066:	(bad)  
  42b067:	(bad)  
  42b068:	add    BYTE PTR [rsi+0x9],bl
  42b06b:	mov    ebp,0x6c39b52f
  42b070:	adc    ecx,eax
  42b072:	(bad)  
  42b073:	lea    ecx,[rcx]
  42b075:	jne    0x42b0ca
  42b077:	rex.WRB fsub st(6),st
  42b07a:	(bad)  
  42b07b:	fiadd  DWORD PTR [rcx+0x76]
  42b07e:	rex.RXB test BYTE PTR [r11+0x174208da],0xc2
  42b086:	gs jge 0x42b0b6
  42b089:	add    DWORD PTR [rbx],edx
  42b08b:	call   0x57ef5ec6
  42b090:	(bad)
  42b094:	sbb    eax,0x51eb564a
  42b099:	test   DWORD PTR [rcx-0x3d],ecx
  42b09c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42b09d:	pushf  
  42b09e:	push   rcx
  42b09f:	outs   dx,DWORD PTR ds:[rsi]
  42b0a0:	in     eax,dx
  42b0a1:	idiv   BYTE PTR [rdx]
  42b0a3:	test   eax,0x9353fe4b
  42b0a8:	mov    es,WORD PTR [rax+rbx*8]
  42b0ab:	and    eax,0xeeabdfdb
  42b0b0:	out    0x95,eax
  42b0b2:	mov    edi,0xa329c455
  42b0b7:	jmp    0xffffffff9debccf0
  42b0bc:	push   rsp
  42b0bd:	sub    eax,0xa095a280
  42b0c2:	mov    ch,0x14
  42b0c4:	out    0x11,al
  42b0c6:	rex.X xchg edx,eax
  42b0c8:	adc    DWORD PTR [rdi+0x536d2731],eax
  42b0ce:	fld    QWORD PTR [rsi-0x4b]
  42b0d1:	fs hlt 
  42b0d3:	rex.WX (bad) 
  42b0d5:	xor    al,0x8e
  42b0d7:	or     eax,0x77365abf
  42b0dc:	pop    rdi
  42b0dd:	out    dx,al
  42b0de:	jle    0x42b104
  42b0e0:	loope  0x42b105
  42b0e2:	xor    dh,BYTE PTR [rdi-0x69]
  42b0e5:	adc    cl,BYTE PTR [rdi-0x66]
  42b0e8:	push   rbx
  42b0e9:	or     DWORD PTR [rax+rcx*2+0x52],esi
  42b0ed:	loope  0x42b084
  42b0ef:	rcr    DWORD PTR [rbx],0x3e
  42b0f2:	and    ch,al
  42b0f4:	and    DWORD PTR [rsi],esi
  42b0f6:	scas   eax,DWORD PTR es:[rdi]
  42b0f7:	sub    ebx,ecx
  42b0f9:	rex.XB pop r12
  42b0fb:	push   rdx
  42b0fc:	ret    0x265
  42b0ff:	call   rdi
  42b101:	rex.WRB
  42b102:	cs mov eax,0x76f59e52
  42b108:	push   rbp
  42b109:	rex.WRB js 0x42b104
  42b10c:	or     BYTE PTR [rdx-0x20],dl
  42b10f:	movabs ds:0xd0cc0f0c30f816aa,al
  42b118:	mov    dl,0xaa
  42b11a:	retf   0x7225
  42b11d:	loop   0x42b106
  42b11f:	xchg   esp,eax
  42b120:	xor    ecx,DWORD PTR [rdx]
  42b122:	ret    
  42b123:	(bad)  
  42b124:	popf   
  42b125:	(bad)  
  42b126:	stc    
  42b127:	jne    0x42b128
  42b129:	xchg   ebx,eax
  42b12a:	add    al,0x62
  42b12c:	sub    eax,0x11204e12
  42b131:	stos   BYTE PTR es:[rdi],al
  42b132:	cmp    BYTE PTR [rdx+0x60f7f650],bh
  42b138:	cwde   
  42b139:	xor    ah,BYTE PTR [rsi+0x3]
  42b13c:	cmp    al,0xa5
  42b13e:	fiadd  DWORD PTR [rdx-0x55]
  42b141:	xchg   BYTE PTR [rbx+0x7ddbf937],bl
  42b147:	cdq    
  42b148:	and    eax,0x212f719b
  42b14d:	data16 (bad) 
  42b14f:	or     edi,DWORD PTR [rbp+0x78ab53b8]
  42b155:	sbb    al,0x67
  42b157:	jno    0x42b130
  42b159:	rex.WRB mov r13b,0x9c
  42b15c:	mov    ah,0x28
  42b15e:	cli    
  42b15f:	mov    al,0x23
  42b161:	pop    rdx
  42b162:	movabs eax,ds:0x9c9fdb6fa5c73b79
  42b16b:	mov    edi,DWORD PTR [rcx-0x31]
  42b16e:	(bad)  
  42b16f:	(bad)  
  42b170:	cmc    
  42b171:	ins    BYTE PTR es:[rdi],dx
  42b172:	sub    ebp,DWORD PTR [rbp+0x25]
  42b175:	mov    ecx,0xfe9f72d8
  42b17a:	ja     0x42b133
  42b17c:	in     eax,dx
  42b17d:	sbb    ebx,DWORD PTR cs:[rbx+rbx*8+0x214efa8c]
  42b185:	js     0x42b151
  42b187:	rex.WRX
  42b188:	lock out dx,al
  42b18a:	pop    rsi
  42b18b:	push   rcx
  42b18c:	(bad)  
  42b18d:	movabs al,ds:0x21ad422f90895478
  42b196:	xchg   edi,eax
  42b197:	in     eax,0x86
  42b199:	and    eax,0x1a5d3448
  42b19e:	or     BYTE PTR [rbp+rdx*4-0x5d],dl
  42b1a2:	mov    edi,0xb522663b
  42b1a7:	rex xchg eax,eax
  42b1a9:	sub    eax,0x923b558e
  42b1ae:	(bad)
  42b1b1:	adc    eax,0x3f564d14
  42b1b6:	adc    al,0xb2
  42b1b8:	cmp    BYTE PTR [rcx+0x5af261bf],bl
  42b1be:	(bad)  
  42b1bf:	test   DWORD PTR [rcx+riz*4-0x55],edi
  42b1c3:	rex.WRX test BYTE PTR [rdi-0x1d],r14b
  42b1c7:	cmp    DWORD PTR [rbx-0x5f],edx
  42b1ca:	add    al,0xfb
  42b1cc:	call   0x2197ac86
  42b1d1:	jb     0x42b203
  42b1d3:	(bad)  
  42b1d4:	fs fld1 
  42b1d7:	and    bl,BYTE PTR [rcx-0x67b02a87]
  42b1dd:	ror    BYTE PTR cs:[rax-0x112698c9],1
  42b1e4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42b1e5:	push   rdi
  42b1e6:	(bad)  [rbx-0x75]
  42b1e9:	jmp    QWORD PTR [rip+0x564b1fac]        # 0x568dd19c
  42b1f0:	enter  0xbde,0x2
  42b1f4:	mov    bh,0x6d
  42b1f6:	rex.RXB mov r10d,0xa5f89a62
  42b1fc:	popf   
  42b1fd:	fnstcw WORD PTR [rbx-0x4f]
  42b200:	(bad)  
  42b201:	fdivr  QWORD PTR [rbx-0x2]
  42b204:	stc    
  42b205:	jo     0x42b27e
  42b207:	mov    eax,0x85f24bb7
  42b20c:	mov    edx,0xe78e75e2
  42b211:	and    eax,0x7bd6a9f2
  42b216:	loope  0x42b24f
  42b218:	fistp  WORD PTR [rip+0x767f7e5f]        # 0x76c2307d
  42b21e:	icebp  
  42b21f:	ins    DWORD PTR es:[rdi],dx
  42b220:	jb     0x42b214
  42b222:	out    dx,al
  42b223:	repnz clc 
  42b225:	loop   0x42b1f4
  42b227:	loope  0x42b1fa
  42b229:	movsxd ecx,DWORD PTR [rcx]
  42b22b:	sti    
  42b22c:	jge    0x42b1e5
  42b22e:	mov    ch,0x57
  42b230:	(bad)
  42b233:	adc    edx,DWORD PTR [rbx]
  42b235:	cli    
  42b236:	(bad)  
  42b237:	fstp   QWORD PTR [rbp+riz*2-0x3e113233]
  42b23e:	ficomp WORD PTR [rdx+0x4a]
  42b241:	(bad)  
  42b242:	mov    BYTE PTR [rbx-0x30],bh
  42b245:	mov    ebp,0xa3da83af
  42b24a:	rex.B lods eax,DWORD PTR ds:[rsi]
  42b24c:	outs   dx,BYTE PTR ds:[rsi]
  42b24d:	(bad)
  42b250:	mov    ds,WORD PTR [rax]
  42b252:	pop    rbx
  42b253:	gs jno 0x42b20f
  42b256:	adc    bl,dh
  42b258:	sub    BYTE PTR [rsi+0x11564604],bl
  42b25e:	in     al,dx
  42b25f:	movsxd esp,DWORD PTR [rsi]
  42b261:	mov    edi,0x215af4e5
  42b266:	cdq    
  42b267:	adc    DWORD PTR [rdx+rdi*4],ecx
  42b26a:	enter  0xddc,0xae
  42b26e:	sbb    ch,bl
  42b270:	mov    BYTE PTR [rbx],bh
  42b272:	test   ecx,ebp
  42b274:	ins    BYTE PTR es:[rdi],dx
  42b275:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42b276:	push   rax
  42b277:	icebp  
  42b278:	push   rsp
  42b279:	sub    cl,BYTE PTR [rbx-0x12]
  42b27c:	sbb    ch,ch
  42b27e:	(bad)  
  42b27f:	test   eax,0x8384ca6f
  42b284:	push   rbx
  42b285:	fwait
  42b286:	(bad)  
  42b287:	(bad)  
  42b288:	pop    rcx
  42b289:	or     BYTE PTR [rsi],dh
  42b28b:	adc    cl,BYTE PTR [rdi+0x4f]
  42b28e:	rex.RXB pop r15
  42b290:	fild   DWORD PTR [rbp-0x41]
  42b293:	jge    0x42b28d
  42b295:	ins    BYTE PTR es:[rdi],dx
  42b296:	xchg   DWORD PTR [rbx-0x4b],edi
  42b299:	push   rsi
  42b29a:	pop    rsp
  42b29b:	xor    eax,DWORD PTR [rsi]
  42b29d:	(bad)  
  42b29e:	jb     0x42b22d
  42b2a0:	(bad)  
  42b2a1:	rex.WB
  42b2a2:	rex.RXB jo 0x42b2bf
  42b2a5:	mov    esp,0xa0a7f0de
  42b2aa:	push   rax
  42b2ab:	adc    DWORD PTR [rcx+0x1a],ecx
  42b2ae:	call   0xffffffffc94f0dd4
  42b2b3:	jl     0x42b2fc
  42b2b5:	and    DWORD PTR [rdi-0x7e],esi
  42b2b8:	cmc    
  42b2b9:	(bad)  
  42b2ba:	sub    eax,0xd7ad416b
  42b2bf:	sub    eax,0xb84c292
  42b2c4:	pop    rdx
  42b2c5:	stc    
  42b2c6:	scas   eax,DWORD PTR es:[rdi]
  42b2c7:	mov    bl,0xaa
  42b2c9:	or     eax,0x4ab4e674
  42b2ce:	out    dx,eax
  42b2cf:	push   rax
  42b2d0:	xchg   ebp,eax
  42b2d1:	and    eax,0x1ba39477
  42b2d6:	in     eax,dx
  42b2d7:	movabs ds:0x8fce4f39b938a45c,al
  42b2e0:	fisttp WORD PTR [rsi]
  42b2e2:	mov    ah,0x9c
  42b2e4:	mov    al,0xf9
  42b2e6:	cmp    edi,DWORD PTR [rbx]
  42b2e8:	movabs ds:0xa159167b73925f94,eax
  42b2f1:	pop    rax
  42b2f2:	sbb    cl,al
  42b2f4:	add    edi,r15d
  42b2f7:	clc    
  42b2f8:	add    esp,DWORD PTR [rax+0x28196343]
  42b2fe:	add    eax,0x4b98aa32
  42b303:	(bad)  
  42b304:	sub    eax,0xd272d2ec
  42b309:	jp     0x42b315
  42b30b:	(bad)  
  42b30c:	cmp    ecx,ebx
  42b30e:	mov    dl,0x20
  42b310:	pop    rbp
  42b311:	cli    
  42b312:	(bad)  
  42b313:	nop
  42b314:	test   al,0x40
  42b316:	or     eax,0xa9409858
  42b31b:	cdq    
  42b31c:	xlat   BYTE PTR ds:[rbx]
  42b31d:	out    0xdf,eax
  42b31f:	(bad)  
  42b320:	(bad)  
  42b321:	(bad)  
  42b322:	mov    al,0xb7
  42b324:	(bad)  
  42b325:	fstp   st(1)
  42b327:	push   rsi
  42b328:	stos   DWORD PTR es:[rdi],eax
  42b329:	and    BYTE PTR [rbp+rdx*2+0x37],0x29
  42b32e:	(bad)  
  42b32f:	loop   0x42b30b
  42b331:	out    dx,eax
  42b332:	movabs ds:0x6cb6316380e358a6,eax
  42b33b:	(bad)  
  42b33c:	shl    BYTE PTR [rsi+0x2b],1
  42b33f:	xor    ebp,DWORD PTR [rax-0x7d]
  42b342:	rex.WXB xlat BYTE PTR ds:[rbx]
  42b344:	stos   DWORD PTR es:[rdi],eax
  42b345:	mov    ch,BYTE PTR [rcx-0x35]
  42b348:	std    
  42b349:	push   rdx
  42b34a:	rex.W add al,0x55
  42b34d:	movabs eax,ds:0xa1697ea163532ea4
  42b356:	(bad)  
  42b357:	loop   0x42b2ef
  42b359:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  42b35a:	xor    eax,0x383b90e4
  42b35f:	rex.WXB ja 0x42b32f
  42b362:	imul   edi,DWORD PTR [rsi+0x27896fdd],0x25766e56
  42b36c:	add    al,0x72
  42b36e:	lahf   
  42b36f:	rol    DWORD PTR [rcx],0x10
  42b372:	hlt    
  42b373:	cli    
  42b374:	push   rsp
  42b375:	sub    edi,DWORD PTR [rdi+0xa0eae15]
  42b37b:	cmp    eax,0xca16667d
  42b380:	pushf  
  42b381:	sub    al,0xe6
  42b383:	ins    DWORD PTR es:[rdi],dx
  42b384:	and    BYTE PTR [rcx+0x74c8ce50],ah
  42b38a:	mov    cl,0x8f
  42b38c:	mov    esp,0xcce0a8ae
  42b391:	(bad)  
  42b392:	jno    0x42b338
  42b394:	out    dx,eax
  42b395:	xchg   cl,cl
  42b397:	(bad)  
  42b398:	pop    rcx
  42b399:	mov    r11d,esi
  42b39c:	test   BYTE PTR [rax-0x1fd4232d],bh
  42b3a2:	add    ch,BYTE PTR [rcx-0xeb5db0c]
  42b3a8:	popf   
  42b3a9:	test   ax,0x7270
  42b3ad:	sbb    bl,BYTE PTR [rcx+0x57]
  42b3b0:	mov    bl,0x85
  42b3b2:	stos   DWORD PTR es:[rdi],eax
  42b3b3:	gs test al,0x52
  42b3b6:	rex.X out 0x9,eax
  42b3b9:	sub    DWORD PTR [rax-0x6d9f44db],0xab606a68
  42b3c3:	rex.WRB lods al,BYTE PTR ds:[rsi]
  42b3c5:	mov    DWORD PTR [rdx-0x71b197f8],edx
  42b3cb:	cmp    DWORD PTR [rdx+0x4d],esp
  42b3ce:	loop   0x42b425
  42b3d0:	mov    esi,0x79369d01
  42b3d5:	or     ebx,ecx
  42b3d7:	loop   0x42b44b
  42b3d9:	rex.X
  42b3da:	gs pop rdx
  42b3dc:	fst    QWORD PTR [rax-0x28c95c15]
  42b3e2:	rex.WRB pop r10
  42b3e4:	rex.WR out dx,al
  42b3e6:	xchg   DWORD PTR [rbx-0x5d],edx
  42b3e9:	retf   
  42b3ea:	xchg   edx,eax
  42b3eb:	rep ins BYTE PTR es:[rdi],dx
  42b3ed:	mov    eax,0x1de3b8fc
  42b3f2:	push   rbx
  42b3f3:	adc    bh,cl
  42b3f5:	(bad)  
  42b3f6:	int3   
  42b3f7:	adc    eax,edx
  42b3f9:	jbe    0x42b477
  42b3fb:	imul   ebx,DWORD PTR [rcx+0x2c3a90e3],0x6d
  42b402:	popf   
  42b403:	or     edx,ebx
  42b405:	adc    bl,BYTE PTR [rdx+0x73c7cfed]
  42b40b:	and    eax,0x6271d6c9
  42b410:	sbb    DWORD PTR [rsi+0x22e185a9],ecx
  42b416:	fwait
  42b417:	(bad)  
  42b418:	fsubr  DWORD PTR [rsp+riz*2-0x6b]
  42b41c:	rsqrtps xmm2,XMMWORD PTR [rbp-0x3d]
  42b420:	sbb    dl,BYTE PTR [rsi]
  42b422:	sahf   
  42b423:	xchg   ebx,eax
  42b424:	mov    dh,0xc8
  42b426:	scas   al,BYTE PTR es:[rdi]
  42b427:	addr32 mov ds:0x8ba6f850,al
  42b42d:	ins    DWORD PTR es:[rdi],dx
  42b42e:	and    dl,BYTE PTR [rdx-0x70f93dfe]
  42b434:	adc    al,0x49
  42b436:	(bad)  
  42b437:	(bad)  
  42b438:	outs   dx,BYTE PTR ds:[rsi]
  42b439:	mul    BYTE PTR [rcx+0x23]
  42b43c:	nop
  42b43d:	pop    rdx
  42b43e:	jle    0x42b3f8
  42b440:	and    al,BYTE PTR [rbp-0x33ddca22]
  42b446:	and    DWORD PTR [rax],esp
  42b448:	pop    rbx
  42b449:	rex.RX add eax,0x28f17679
  42b44f:	adc    cl,BYTE PTR [rcx-0x3e]
  42b452:	rex.WRXB
  42b453:	rex.R add al,0x8b
  42b456:	sbb    eax,0x41771a02
  42b45b:	and    r15d,r8d
  42b45e:	test   eax,0xacf984a5
  42b463:	cwde   
  42b464:	pop    rdi
  42b465:	fistp  QWORD PTR [rsi]
  42b467:	and    DWORD PTR [rdi+0x48e9e5f7],ecx
  42b46d:	movabs ds:0x3d2e2d6de7764522,eax
  42b476:	and    bl,bh
  42b478:	(bad)  
  42b479:	sbb    al,0x40
  42b47b:	rex.WR test rax,0xfffffffff403b60c
  42b481:	test   BYTE PTR [rbp-0x466cf47e],ah
  42b487:	in     al,0x7
  42b489:	popf   
  42b48a:	add    al,0x81
  42b48c:	adc    DWORD PTR [rbx+0x57],edx
  42b48f:	mov    ah,0xe2
  42b491:	sbb    DWORD PTR [rbx],ebp
  42b493:	rex.XB xchg r14d,eax
  42b495:	jmp    0xffffffff8d3e6d1f
  42b49a:	mov    dl,0xf4
  42b49c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  42b49d:	lahf   
  42b49e:	or     al,0xf6
  42b4a0:	rcr    DWORD PTR [rdi-0x3b61284d],0xb4
  42b4a7:	(bad)  
  42b4a8:	(bad)  
  42b4a9:	rex push 0xffffffffffffffc3
  42b4ac:	mov    ah,0xa4
  42b4ae:	lods   eax,DWORD PTR ds:[rsi]
  42b4af:	mov    BYTE PTR [rax],bh
  42b4b1:	fcom   DWORD PTR [rdx-0x219482d3]
  42b4b7:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42b4b8:	(bad)  
  42b4b9:	mul    BYTE PTR [rbp+0x40]
  42b4bc:	mov    bh,0x7b
  42b4be:	rex ins BYTE PTR es:[rdi],dx
  42b4c0:	xor    ebp,DWORD PTR [rdi-0x1b]
  42b4c3:	in     al,dx
  42b4c4:	ds push rsp
  42b4c6:	sbb    esi,esi
  42b4c8:	xlat   BYTE PTR ds:[rbx]
  42b4c9:	scas   al,BYTE PTR es:[rdi]
  42b4ca:	sub    dh,BYTE PTR [rdx+0x23]
  42b4cd:	out    dx,al
  42b4ce:	jb     0x42b51b
  42b4d0:	and    ch,cl
  42b4d2:	adc    r12d,r8d
  42b4d5:	or     dl,BYTE PTR [rip+0xffffffff80ed504a]        # 0xffffffff81300525
  42b4db:	cdq    
  42b4dc:	rex.X jno 0x42b551
  42b4df:	(bad)  
  42b4e0:	leave  
  42b4e1:	in     eax,dx
  42b4e2:	mov    esi,0x37e99ac6
  42b4e7:	cmp    ch,BYTE PTR [rdi-0x14]
  42b4ea:	lods   al,BYTE PTR ds:[rsi]
  42b4eb:	ja     0x42b52f
  42b4ed:	and    al,0x48
  42b4ef:	pop    rbx
  42b4f0:	and    al,0x94
  42b4f2:	fwait
  42b4f3:	mov    bh,0x6b
  42b4f5:	sub    ebx,ebp
  42b4f7:	leave  
  42b4f8:	in     al,dx
  42b4f9:	pop    rcx
  42b4fa:	and    eax,DWORD PTR [rbp+0x5a]
  42b4fd:	push   rdx
  42b4fe:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42b4ff:	sub    al,0xc4
  42b501:	lods   eax,DWORD PTR ds:[rsi]
  42b502:	shr    BYTE PTR [rcx],0xef
  42b505:	int3   
  42b506:	rex.RXB
  42b507:	rex.WRXB (bad) 
  42b509:	mov    esp,0xf2027307
  42b50e:	fild   DWORD PTR [rbx+0x44]
  42b511:	sahf   
  42b512:	adc    al,0x36
  42b514:	push   rcx
  42b515:	rex.X pop rsp
  42b517:	stc    
  42b518:	movabs al,ds:0x98ece4dff2c3e8
  42b521:	(bad)  
  42b522:	adc    al,0xd7
  42b524:	mov    ecx,0x899bf939
  42b529:	cmp    DWORD PTR [rbx+rcx*2-0x6e],ecx
  42b52d:	clc    
  42b52e:	lea    ebp,[rip+0x6a6236bf]        # 0x6aa4ebf3
  42b534:	iret   
  42b535:	rex.WRB pop r15
  42b537:	int3   
  42b538:	or     eax,0xd4a1a0be
  42b53d:	fwait
  42b53e:	outs   dx,BYTE PTR ds:[rsi]
  42b53f:	in     al,dx
  42b540:	rex.X jno 0x42b521
  42b543:	(bad)  
  42b544:	mov    ah,al
  42b546:	cmp    DWORD PTR [rax+riz*8+0x65a579d8],esi
  42b54d:	(bad)  
  42b54e:	(bad)  
  42b54f:	(bad)  
  42b550:	(bad)  
  42b551:	xchg   ecx,eax
  42b552:	mov    ?,WORD PTR [rbx+0x5fe25f29]
  42b558:	jae    0x42b5a8
  42b55a:	(bad)  
  42b55b:	out    0xe8,al
  42b55d:	cld    
  42b55e:	in     al,0x1d
  42b560:	push   rdi
  42b561:	or     dh,BYTE PTR [rdi-0x15dcde99]
  42b567:	(bad)
  42b56a:	jb     0x42b4fb
  42b56c:	(bad)  
  42b56d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  42b56e:	retf   0xcf01
  42b571:	mov    fs,WORD PTR [rbx]
  42b573:	fidiv  DWORD PTR [rbx]
  42b575:	mov    ah,0xc7
  42b577:	jae    0x42b572
  42b579:	(bad)  
  42b57a:	(bad)
  42b57d:	mov    esi,0x5d5cf749
  42b582:	iret   
  42b583:	ss cmp edx,ebp
  42b586:	outs   dx,DWORD PTR ds:[rsi]
  42b587:	in     eax,dx
  42b588:	(bad)  
  42b589:	je     0x42b5b9
  42b58b:	adc    al,0xeb
  42b58d:	xchg   ecx,eax
  42b58e:	(bad)  
  42b58f:	rex.WR popf 
  42b591:	(bad)  
  42b592:	lahf   
  42b593:	and    al,0xd2
  42b595:	rex.WX
  42b596:	rex.WXB (bad) 
  42b598:	cmc    
  42b599:	cmp    ebx,DWORD PTR [rcx-0x3d44172]
  42b59f:	bswap  ecx
  42b5a1:	jo     0x42b56a
  42b5a3:	jl     0x42b555
  42b5a5:	(bad)  
  42b5a7:	(bad)  
  42b5a8:	(bad)  
  42b5a9:	(bad)  
  42b5aa:	(bad)  
  42b5ab:	mov    ch,0xb9
  42b5ad:	loope  0x42b5d7
  42b5af:	lods   eax,DWORD PTR ds:[rsi]
  42b5b0:	test   DWORD PTR [rdi+0x18],0xd30e58e4
  42b5b7:	jrcxz  0x42b5a2
  42b5b9:	iret   
  42b5ba:	leave  
  42b5bb:	(bad)  
  42b5bc:	xor    al,bl
  42b5be:	clc    
  42b5bf:	adc    dl,BYTE PTR [rdx+rbx*8+0x3cacd1fe]
  42b5c6:	cmp    eax,0xc35db3f1
  42b5cb:	(bad)  
  42b5cc:	cmp    DWORD PTR [rbp+0x1d7d4fb7],ebx
  42b5d2:	cli    
  42b5d3:	sbb    DWORD PTR [rbx],ebx
  42b5d5:	or     al,0xcc
  42b5d7:	outs   dx,DWORD PTR ds:[rsi]
  42b5d8:	fwait
  42b5d9:	sbb    al,0x4e
  42b5db:	outs   dx,DWORD PTR ds:[rsi]
  42b5dc:	sub    ecx,ebp
  42b5de:	outs   dx,BYTE PTR ds:[rsi]
  42b5df:	sub    bh,bh
  42b5e1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  42b5e2:	icebp  
  42b5e3:	sbb    al,0x17
  42b5e5:	test   al,0x50
  42b5e7:	mov    dl,BYTE PTR [rcx+0x4a2e63a6]
  42b5ed:	(bad)  
  42b5ee:	pop    rbp
  42b5ef:	outs   dx,BYTE PTR ds:[rsi]
  42b5f0:	mov    WORD PTR [rsi+0x417e8ea3],cs
  42b5f6:	stc    
  42b5f7:	jg     0x42b5cd
  42b5f9:	mov    r12d,0x9352fde5
  42b5ff:	cmp    edx,edi
  42b601:	xchg   edx,eax
  42b602:	mov    bl,0xe0
  42b604:	movabs al,ds:0x57c986e9699d24a5
  42b60d:	adc    al,0xe3
  42b60f:	lods   al,BYTE PTR ds:[rsi]
  42b610:	xor    cl,BYTE PTR [rdi+0x3e2e55fd]
  42b616:	scas   al,BYTE PTR es:[rdi]
  42b617:	in     al,0x47
  42b619:	mov    edx,DWORD PTR [rcx-0x2f3b00ce]
  42b61f:	mov    fs,WORD PTR [rax+rcx*8]
  42b622:	xor    DWORD PTR [rcx+0x69bfb263],0xd2fd0e0f
  42b62c:	xchg   esp,eax
  42b62d:	jbe    0x42b662
  42b62f:	adc    al,0xcd
  42b631:	xchg   edi,eax
  42b632:	rex.W (bad) 
  42b634:	movabs eax,ds:0xa730be43dc94bc78
  42b63d:	cdq    
  42b63e:	not    BYTE PTR es:[rdi+0x7a8a9b3e]
  42b645:	mov    ss,ecx
  42b647:	xchg   esp,eax
  42b648:	push   0x4
  42b64a:	jbe    0x42b697
  42b64c:	loopne 0x42b65c
  42b64e:	ja     0x42b60d
  42b650:	ds mov edx,0xb339a231
  42b656:	pop    rbp
  42b657:	sbb    eax,0xbb4f4bb1
  42b65c:	cmp    BYTE PTR [rdx-0x3ee8b5c5],ah
  42b662:	(bad)  
  42b663:	push   rdx
  42b664:	mov    bl,0x23
  42b666:	movabs eax,ds:0x67977bb2ecb0ee85
  42b66f:	mov    bh,0x3d
  42b671:	add    al,0x4a
  42b673:	push   0x1c
  42b675:	mov    ebp,0x4da54b7f
  42b67a:	push   rax
  42b67b:	mov    eax,0xf0e2f2fa
  42b680:	fucomp st(0)
  42b682:	or     eax,0x4b2fc6bb
  42b687:	push   rdi
  42b688:	adc    bl,BYTE PTR [rbx-0x4]
  42b68b:	rex.B
  42b68c:	ss jle 0x42b6fb
  42b68f:	imul   esp,edx,0x86deb8ee
  42b695:	loop   0x42b680
  42b697:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  42b698:	pop    rax
  42b699:	jbe    0x42b65a
  42b69b:	retf   
  42b69c:	mov    bh,0xcf
  42b69e:	(bad)
  42b6a1:	ss test al,0x6b
  42b6a4:	pop    rbx
  42b6a5:	movabs ds:0x5736517ed508ab6d,eax
  42b6ae:	mov    al,0x5e
  42b6b0:	cdq    
  42b6b1:	movabs eax,ds:0xfe8ced23969a21e5
  42b6ba:	xchg   esp,eax
  42b6bb:	out    dx,eax
  42b6bc:	ficom  WORD PTR [rbp-0x39b85b9c]
  42b6c2:	push   rsp
  42b6c3:	sbb    al,0x48
  42b6c5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  42b6c6:	sbb    ch,BYTE PTR [rdi-0x588a62fc]
  42b6cc:	repnz (bad) [rbx]
  42b6cf:	push   rsp
  42b6d0:	jle    0x42b688
  42b6d2:	jno    0x42b713
  42b6d4:	out    dx,eax
  42b6d5:	push   rbx
  42b6d6:	fdivp  st(2),st
  42b6d9:	(bad)  
  42b6da:	mov    ebp,0x97f378ed
  42b6df:	mov    edi,0xdf78f9b4
  42b6e4:	(bad)  
  42b6e5:	ss jae 0x42b711
  42b6e8:	rex.RB pop r11
  42b6ea:	push   QWORD PTR [rcx+0x4476bdbf]
  42b6f0:	jle    0x42b748
  42b6f2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  42b6f3:	sti    
  42b6f4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42b6f5:	jns    0x42b67a
  42b6f7:	cmp    bl,BYTE PTR [rbx+0x6663e2bc]
  42b6fd:	jne    0x42b725
  42b6ff:	mov    edx,eax
  42b701:	icebp  
  42b702:	clc    
  42b703:	xchg   BYTE PTR [rbx-0x7c],bl
  42b706:	sbb    eax,0x9ab6db04
  42b70b:	mov    edx,0x7649bc0b
  42b710:	leave  
  42b711:	leave  
  42b712:	push   QWORD PTR [rbx-0x14]
  42b715:	ror    DWORD PTR [rax+0x16],cl
  42b718:	fwait
  42b719:	lea    edi,[rdi+0x45]
  42b71c:	adc    DWORD PTR [rbx],edi
  42b71e:	rex pop rbp
  42b720:	(bad)  
  42b721:	icebp  
  42b722:	in     eax,dx
  42b723:	std    
  42b724:	xor    eax,0xf3a376df
  42b729:	fcom   QWORD PTR [rdx]
  42b72b:	adc    al,0xc5
  42b72d:	sbb    BYTE PTR es:[rdx+rsi*4+0x3677cb61],bl
  42b735:	pop    rsp
  42b736:	movabs eax,ds:0x4c7b793cbbdfd5f5
  42b73f:	lods   al,BYTE PTR ds:[rsi]
  42b740:	fldcw  WORD PTR [rdi+0x6e7c884f]
  42b746:	and    al,0xf4
  42b748:	(bad)
  42b74c:	mov    WORD PTR [rsi+rdi*2-0x10f1eb4b],?
  42b753:	pop    rdx
  42b754:	mov    ah,0x99
  42b756:	xchg   ebp,eax
  42b757:	sbb    al,0x76
  42b759:	and    eax,0x8182d3e8
  42b75e:	scas   al,BYTE PTR es:[rdi]
  42b75f:	xor    eax,0x6ae4f2d3
  42b764:	lock mov dh,0x9c
  42b767:	ret    0x1e4a
  42b76a:	mov    WORD PTR [rax],es
  42b76c:	adc    eax,0x1f996f34
  42b771:	mov    esi,0x1fade62f
  42b776:	mov    db3,rcx
  42b779:	mov    edx,0xf28aab1b
  42b77e:	cld    
  42b77f:	jge    0x42b7e8
  42b781:	xor    BYTE PTR [rax-0x29e7f332],ah
  42b787:	and    eax,0x3f169dc1
  42b78c:	xchg   DWORD PTR [rdx-0x6beccea],ecx
  42b792:	in     al,dx
  42b793:	sahf   
  42b794:	or     DWORD PTR [rax],0xb98f83a9
  42b79a:	in     al,dx
  42b79b:	int    0x6b
  42b79d:	retf   0x7320
  42b7a0:	cs ds jbe 0x42b786
  42b7a4:	ins    DWORD PTR es:[rdi],dx
  42b7a5:	clc    
  42b7a6:	in     al,0xa5
  42b7a8:	xor    BYTE PTR [rdx+rsi*4-0x6d8078c5],ah
  42b7af:	stos   BYTE PTR es:[rdi],al
  42b7b0:	int    0xe5
  42b7b2:	loop   0x42b7d2
  42b7b4:	movabs ds:0xbfd5f1a22b416bbc,eax
  42b7bd:	repz cmp ebp,DWORD PTR [rbp+0x31c25432]
  42b7c4:	in     eax,dx
  42b7c5:	in     eax,dx
  42b7c6:	rex stc 
  42b7c8:	mov    DWORD PTR [rbp+rbp*2+0x3a],edx
  42b7cc:	stos   DWORD PTR es:[rdi],eax
  42b7cd:	mov    esp,0xadba4aeb
  42b7d2:	(bad)  
  42b7d3:	in     eax,dx
  42b7d4:	cmp    al,0x62
  42b7d6:	push   rbx
  42b7d7:	pop    QWORD PTR [rdi-0x60b0224b]
  42b7dd:	add    al,0xb6
  42b7df:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  42b7e0:	(bad)  
  42b7e1:	xlat   BYTE PTR ds:[rbx]
  42b7e2:	xlat   BYTE PTR ds:[rbx]
  42b7e3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  42b7e4:	or     eax,0xb3b1198e
  42b7e9:	push   0x12ce45d7
  42b7ee:	rex.WRB
  42b7ef:	repnz out 0x1c,al
  42b7f2:	dec    ch
  42b7f4:	shl    DWORD PTR [rsi],0xea
  42b7f7:	xor    ah,ah
  42b7f9:	rex.RB
  42b7fa:	xor    BYTE PTR fs:[rbx+0x209a3e5f],al
  42b801:	hlt    
  42b802:	(bad)  
  42b803:	hlt    
  42b804:	scas   al,BYTE PTR es:[rdi]
  42b805:	mov    BYTE PTR [rax],cl
  42b807:	and    edx,0x58
  42b80a:	cmp    eax,0xc4f300ee
  42b80f:	lock out 0x32,al
  42b812:	(bad)  
  42b813:	add    al,0xc9
  42b815:	xor    eax,0xa8d92435
  42b81a:	mov    dh,0xc8
  42b81c:	pop    rax
  42b81d:	jmp    0x42b843
  42b81f:	scas   eax,DWORD PTR es:[edi]
  42b821:	and    al,0x9
  42b823:	shl    ch,cl
  42b825:	(bad)  
  42b826:	or     dl,BYTE PTR [rax+0x6]
  42b829:	ret    
  42b82a:	push   rcx
  42b82b:	dec    DWORD PTR [rbx-0x4544eb8]
  42b831:	outs   dx,DWORD PTR fs:[rsi]
  42b833:	mov    edi,0xeeefec9f
  42b838:	in     eax,dx
  42b839:	rex.RXB (bad) 
  42b83b:	sar    bl,1
  42b83d:	(bad)  
  42b83e:	add    al,BYTE PTR [rbp-0x13]
  42b841:	jrcxz  0x42b81a
  42b843:	mov    ebp,0xe5c28ec7
  42b848:	xor    esp,eax
  42b84a:	es xchg ecx,eax
  42b84c:	int3   
  42b84d:	pop    rdi
  42b84e:	and    edi,DWORD PTR [rax+rbp*1+0x3e]
  42b852:	or     esp,DWORD PTR [rdx]
  42b854:	data16 adc al,0x4b
  42b857:	(bad)  
  42b858:	popf   
  42b859:	sbb    eax,0x12762dae
  42b85e:	push   0xffffffffffffff8d
  42b860:	rex.WRB pop r11
  42b862:	cmp    ch,BYTE PTR [rdx+rcx*4+0x4a]
  42b866:	cmp    bl,BYTE PTR [rdi+rbp*4+0x16]
  42b86a:	enter  0xeb17,0x29
  42b86e:	sub    r10,QWORD PTR [r8+rdx*1+0x6d]
  42b873:	scas   eax,DWORD PTR es:[rdi]
  42b874:	push   rcx
  42b875:	fsubp  st(0),st
  42b877:	mov    dl,0x10
  42b879:	mov    ah,0x86
  42b87b:	(bad)  
  42b87c:	(bad)  
  42b87d:	in     al,dx
  42b87e:	not    edi
  42b880:	(bad)  
  42b881:	rex.RXB xchg r15d,eax
  42b883:	retf   0x7877
  42b886:	rex.RB retf 0x7553
  42b88a:	(bad)  
  42b88b:	mov    eax,0x9f6b8c62
  42b890:	cdq    
  42b891:	(bad)  
  42b892:	fsub   QWORD PTR [rsi+rax*2-0x73]
  42b896:	cs (bad) 
  42b898:	retf   
  42b899:	jmp    0x42b81e
  42b89b:	mov    edi,0x5975d5a6
  42b8a0:	cmp    al,0xf4
  42b8a2:	cld    
  42b8a3:	adc    al,0x9
  42b8a5:	gs (bad) 
  42b8a7:	rex.RX
  42b8a8:	rex.X in eax,dx
  42b8aa:	mov    ebp,0xfc827bd8
  42b8af:	out    dx,eax
  42b8b0:	pop    rcx
  42b8b1:	mov    es,WORD PTR [rdx+0x36202440]
  42b8b7:	out    0x9b,eax
  42b8b9:	rex.WR mov al,0x81
  42b8bc:	xor    al,0x9
  42b8be:	retf   
  42b8bf:	stos   BYTE PTR es:[rdi],al
  42b8c0:	push   rcx
  42b8c1:	rex.WR (bad) 
  42b8c3:	stc    
  42b8c4:	mov    edx,0xa767fd4f
  42b8c9:	repnz sub al,0xa7
  42b8cc:	sahf   
  42b8cd:	outs   dx,DWORD PTR ds:[rsi]
  42b8ce:	rex.WX scas al,BYTE PTR es:[rdi]
  42b8d0:	ret    0xa526
  42b8d3:	imul   ebp,DWORD PTR [rsi],0x8a6d9b17
  42b8d9:	clc    
  42b8da:	(bad)  
  42b8db:	(bad)  
  42b8dc:	rex.WX lahf 
  42b8de:	mov    al,0xb5
  42b8e0:	(bad)  
  42b8e1:	(bad)  
  42b8e2:	sub    al,0xf1
  42b8e4:	cmp    eax,0x2caa8832
  42b8e9:	std    
  42b8ea:	call   0xfffffffff67de099
  42b8ef:	or     eax,0xbc5c790d
  42b8f4:	cmp    DWORD PTR [rdx+0x6],esp
  42b8f7:	push   rbx
  42b8f8:	int    0x97
  42b8fa:	ret    0x2754
  42b8fd:	(bad)  
  42b8fe:	xor    eax,0x7cbd4db5
  42b903:	loopne 0x42b900
  42b905:	xchg   esp,eax
  42b906:	(bad)  [rax+0x30]
  42b909:	sbb    eax,0x7321e23f
  42b90e:	out    dx,al
  42b90f:	cwde   
  42b910:	sub    al,0xee
  42b912:	mov    al,0x5d
  42b914:	jp     0x42b89d
  42b916:	or     al,0x35
  42b918:	(bad)  
  42b919:	psrlw  mm6,QWORD PTR [rdx]
  42b91c:	leave  
  42b91d:	pop    rbx
  42b91e:	pop    rsp
  42b91f:	mov    DWORD PTR [rsi+0x35d40e23],edx
  42b925:	sub    eax,0x1ddead40
  42b92a:	shr    DWORD PTR [rdi-0x56],cl
  42b92d:	repnz cli 
  42b92f:	cli    
  42b930:	lock fdiv QWORD PTR [rbx]
  42b933:	je     0x42b996
  42b935:	rex.W cmp spl,BYTE PTR [rdi-0x79b8c2e2]
  42b93c:	(bad)  
  42b93d:	sub    dh,BYTE PTR [rcx-0x4159cab5]
  42b943:	xor    edx,DWORD PTR [rcx+0x1a]
  42b946:	enter  0xd249,0x8d
  42b94a:	add    BYTE PTR [rax-0x7ec11ad1],dl
  42b950:	dec    DWORD PTR [rcx]
  42b952:	(bad)  
  42b953:	or     al,0x66
  42b955:	rcl    DWORD PTR [rcx+rax*4],cl
  42b958:	push   rax
  42b959:	mov    ecx,0xa173a085
  42b95e:	lods   eax,DWORD PTR ds:[rsi]
  42b95f:	pop    rsp
  42b960:	rcl    BYTE PTR [rax+0x66],1
  42b963:	ins    DWORD PTR es:[rdi],dx
  42b964:	ds and eax,0xd921c492
  42b96a:	sub    dl,BYTE PTR [rdx+0x6f]
  42b96d:	add    al,0x8f
  42b96f:	push   rcx
  42b970:	push   rsi
  42b971:	repnz mov ebp,0xb3e5800e
  42b977:	jmp    0x34c213f8
  42b97c:	movabs ds:0xc084b9ebe6f80394,al
  42b985:	leave  
  42b986:	jmp    0xffffffff86d2ed1e
  42b98b:	fmul   QWORD PTR [rdi-0x20]
  42b98e:	rex.B push 0x2d
  42b991:	sbb    BYTE PTR [rdi+0x41],bl
  42b994:	fs jno 0x42b965
  42b997:	(bad)  
  42b998:	mov    WORD PTR [rcx+0xb],ds
  42b99b:	rex.B movabs ds:0x8a1a58305a331143,eax
  42b9a5:	test   DWORD PTR [rax],r10d
  42b9a8:	movabs al,ds:0xf49facf67fdfddb5
  42b9b1:	enter  0xa75b,0x5
  42b9b5:	jmp    0x1ddc2523
  42b9ba:	fimul  DWORD PTR [rbx-0x56225a2a]
  42b9c0:	scas   al,BYTE PTR es:[rdi]
  42b9c1:	es hlt 
  42b9c3:	jg     0x42b9b9
  42b9c5:	sahf   
  42b9c6:	xchg   esi,eax
  42b9c7:	movsxd edi,DWORD PTR [rsp+rdx*4+0x26ea15f4]
  42b9ce:	rex.X xchg ebx,eax
  42b9d0:	xchg   esi,eax
  42b9d1:	fs xchg bh,dl
  42b9d4:	xchg   DWORD PTR [rsi+0x77],edi
  42b9d7:	(bad)  
  42b9d8:	sbb    eax,0x597d1432
  42b9dd:	fs in  eax,0x42
  42b9e0:	ret    
  42b9e1:	lods   al,BYTE PTR ds:[rsi]
  42b9e2:	jae    0x42ba0d
  42b9e4:	mov    ah,0x81
  42b9e6:	out    dx,eax
  42b9e7:	jnp    0x42b99a
  42b9e9:	sub    DWORD PTR [rsi+rax*8],eax
  42b9ec:	sbb    DWORD PTR [rdi+0x26],edx
  42b9ef:	ins    BYTE PTR es:[rdi],dx
  42b9f0:	add    dh,ch
  42b9f2:	jb     0x42ba30
  42b9f4:	nop
  42b9f5:	mov    ah,0x5a
  42b9f7:	ss iret 
  42b9f9:	jb     0x42ba6e
  42b9fb:	add    al,0xcc
  42b9fd:	(bad)  
  42b9fe:	addr32 (bad) 
  42ba00:	test   DWORD PTR [rsi],0x4957db44
  42ba06:	rex.WRXB (bad) 
  42ba08:	mov    esi,edi
  42ba0a:	sbb    BYTE PTR [rdx],ah
  42ba0c:	rex.WX (bad) 
  42ba0e:	rex.WRB push 0xfffffffff92be518
  42ba14:	(bad)  
  42ba15:	jg     0x42ba15
  42ba17:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42ba18:	imul   esi,esi,0x5795a93f
  42ba1e:	call   QWORD PTR [rcx+0x37]
  42ba21:	(bad)  
  42ba22:	fidiv  WORD PTR [rbx]
  42ba24:	cmp    eax,0x2e2739d9
  42ba29:	rex.RX or al,0xdc
  42ba2c:	(bad)  
  42ba2d:	clc    
  42ba2e:	pop    rdx
  42ba2f:	xchg   ecx,eax
  42ba30:	std    
  42ba31:	cmc    
  42ba32:	not    BYTE PTR [rsp+rax*2+0x5b]
  42ba36:	fistp  WORD PTR [rbx]
  42ba38:	pop    rdi
  42ba39:	mov    ?,WORD PTR [rsp+rdi*1-0x27a5c90a]
  42ba40:	vunpcklps ymm15,ymm5,YMMWORD PTR [rdi-0x2460d733]
  42ba48:	sub    al,0x2
  42ba4a:	call   0xffffffffaf387147
  42ba4f:	ds jle 0x42ba49
  42ba52:	(bad)  
  42ba54:	(bad)
  42ba57:	mov    bh,0xc7
  42ba59:	out    dx,eax
  42ba5a:	cs xchg ebx,eax
  42ba5c:	out    dx,eax
  42ba5d:	(bad)  
  42ba5e:	(bad)  
  42ba5f:	rex.WRX (bad) 
  42ba61:	mov    edi,0x71b4953a
  42ba66:	sbb    al,BYTE PTR [rdx]
  42ba68:	movabs eax,ds:0x197aa9d0ed895865
  42ba71:	cmp    eax,0x9d1c22d1
  42ba76:	cli    
  42ba77:	ret    0x841f
  42ba7a:	or     ebx,DWORD PTR [rdx+rbp*1]
  42ba7d:	std    
  42ba7e:	(bad)  
  42ba7f:	(bad)  
  42ba80:	adc    ebp,edx
  42ba82:	xchg   ebx,eax
  42ba83:	(bad)  
  42ba84:	test   DWORD PTR [rcx+0x4b],0x7215910b
  42ba8b:	out    dx,eax
  42ba8c:	and    eax,0x87901322
  42ba91:	mov    dh,0x94
  42ba93:	(bad)  
  42ba94:	je     0x42baed
  42ba96:	push   rsp
  42ba97:	iret   
  42ba98:	push   rsi
  42ba99:	test   eax,0xd9739af8
  42ba9e:	mov    ch,0x64
  42baa0:	xchg   DWORD PTR [rsi+0x2964358a],edi
  42baa6:	in     eax,dx
  42baa7:	cli    
  42baa8:	jo     0x42bb22
  42baaa:	jp     0x42ba96
  42baac:	ds mov ch,0xbe
  42baaf:	(bad)  
  42bab0:	mov    esi,eax
  42bab2:	sbb    BYTE PTR [rcx+0x16],dh
  42bab5:	adc    al,0x1a
  42bab7:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  42bab8:	or     bl,bl
  42baba:	jne    0x42baa5
  42babc:	mov    ch,cl
  42babe:	mov    edi,DWORD PTR [rbx-0x61]
  42bac1:	ret    
  42bac2:	pushf  
  42bac3:	ds xchg si,ax
  42bac6:	movsxd ecx,DWORD PTR [rbx-0x23d7d7f7]
  42bacc:	push   0xffffffffffffffac
  42bace:	mov    cl,0xbc
  42bad0:	(bad)  
  42bad1:	fmul   DWORD PTR [rdi+0x36]
  42bad4:	jmp    QWORD PTR [rbx+0x53]
  42bad7:	rex.WX jb 0x42ba5d
  42bada:	jne    0x42ba73
  42badc:	imul   eax,ebp,0x6c
  42badf:	mov    ebx,0x733bbd4e
  42bae4:	jge    0x42ba78
  42bae6:	or     BYTE PTR [rdx-0x2e827f13],ah
  42baec:	(bad)  
  42baef:	push   rbp
  42baf0:	or     al,0x0
  42baf2:	mov    esp,0x414b8f74
  42baf7:	add    eax,0x7b2f579b
  42bafc:	xchg   esp,eax
  42bafd:	and    al,BYTE PTR [rcx+rdx*8+0x77]
  42bb01:	(bad)  
  42bb02:	(bad)  
  42bb03:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  42bb04:	adc    ecx,DWORD PTR [rdi+0x2d63195c]
  42bb0a:	enter  0x6067,0x8b
  42bb0e:	pop    rsp
  42bb0f:	test   eax,0x354ccd5b
  42bb14:	cmp    edi,eax
  42bb16:	and    al,0x2e
  42bb18:	mov    bh,0xac
  42bb1a:	rex.RB adc al,0x61
  42bb1d:	push   rdi
  42bb1e:	jge    0x42bafa
  42bb20:	rcr    DWORD PTR [rdx+0x11d60831],1
  42bb26:	mov    al,0xbe
  42bb28:	retf   0x42a7
  42bb2b:	(bad)  
  42bb2c:	(bad)  
  42bb2d:	fst    QWORD PTR [rip+0x2e78c443]        # 0x2ebb7f76
  42bb33:	mov    es,eax
  42bb35:	ins    DWORD PTR es:[rdi],dx
  42bb36:	pop    rsi
  42bb37:	push   rax
  42bb38:	jne    0x42bb7d
  42bb3a:	push   rdi
  42bb3b:	xchg   ebx,eax
  42bb3c:	add    ah,BYTE PTR [rax]
  42bb3e:	pop    rsp
  42bb3f:	movsxd eax,ebp
  42bb41:	push   rsi
  42bb42:	xchg   esp,eax
  42bb43:	fst    DWORD PTR [rsi-0x38]
  42bb46:	ins    DWORD PTR es:[rdi],dx
  42bb47:	(bad)  
  42bb48:	(bad)  
  42bb49:	sub    edx,DWORD PTR [rbp+rbx*8+0x4554baf4]
  42bb50:	ss mov ch,0xd1
  42bb53:	addr32 pop rbx
  42bb55:	mov    ecx,0x2d8e53cb
  42bb5a:	add    edx,DWORD PTR [rdi+0x4e21fdf5]
  42bb60:	lods   eax,DWORD PTR ds:[rsi]
  42bb61:	sahf   
  42bb62:	jbe    0x42bb26
  42bb64:	imul   edx,ecx,0xe6256b92
  42bb6a:	fcmove st,st(3)
  42bb6c:	jno    0x42bbe4
  42bb6e:	imul   eax,DWORD PTR [rax],0xed184b24
  42bb74:	scas   al,BYTE PTR es:[rdi]
  42bb75:	xchg   esp,eax
  42bb76:	pop    rax
  42bb77:	movabs al,ds:0x2dd10620689cd321
  42bb80:	jp     0x42bb92
  42bb82:	rex.WRB or r15b,r8b
  42bb85:	adc    ecx,DWORD PTR [rbp-0x56]
  42bb88:	adc    ebx,eax
  42bb8a:	pushf  
  42bb8b:	sahf   
  42bb8c:	sbb    DWORD PTR [rbp+0x62],esp
  42bb8f:	test   eax,0x71934a24
  42bb94:	jle    0x42bb63
  42bb96:	mov    ecx,0x4dc894f5
  42bb9b:	mov    ebx,0xc6695404
  42bba0:	rex.X cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42bba2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  42bba3:	add    dl,BYTE PTR [rcx]
  42bba5:	sbb    dl,BYTE PTR [rax+riz*8-0x4c198d65]
  42bbac:	jne    0x42bb97
  42bbae:	rex.W push 0xffffffffffffffa9
  42bbb1:	rex.WB cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42bbb3:	ds rex.R (bad) 
  42bbb6:	adc    BYTE PTR [rsi-0x14f570cc],dl
  42bbbc:	adc    bl,BYTE PTR [rdx-0x6e46fe91]
  42bbc2:	jae    0x42bbde
  42bbc4:	pushf  
  42bbc5:	add    DWORD PTR [rip+0x27346a52],0x19        # 0x2777261e
  42bbcc:	repz movabs al,ds:0xbd51487016926000
  42bbd6:	(bad)  
  42bbd7:	sub    eax,0xad4dd3cb
  42bbdc:	rex.WR cdqe 
  42bbde:	jmp    0xffffffff877ff277
  42bbe3:	data16 fild DWORD PTR [rbp-0x7b4e9b8b]
  42bbea:	or     edx,0xffffffec
  42bbed:	or     edx,ebp
  42bbef:	mov    ah,0x99
  42bbf1:	test   eax,0x14f04f2d
  42bbf6:	mov    si,ax
  42bbf9:	movsxd ebp,DWORD PTR [rcx+rcx*4-0x37]
  42bbfd:	mov    edi,0x9826b606
  42bc02:	add    al,0x70
  42bc04:	mov    bh,0x5d
  42bc06:	add    BYTE PTR [rdi-0x5225ac51],bl
  42bc0c:	adc    ebp,DWORD PTR [rcx+0x375088ca]
  42bc12:	xchg   ebp,eax
  42bc13:	xchg   esp,eax
  42bc14:	add    al,0xb1
  42bc16:	push   rdx
  42bc17:	retf   
  42bc18:	mov    DWORD PTR [rdi+0x6ccae268],edx
  42bc1e:	out    0x11,al
  42bc20:	jne    0x42bbd5
  42bc22:	pop    rbp
  42bc23:	lahf   
  42bc24:	(bad)  
  42bc25:	xchg   edi,eax
  42bc26:	cmp    BYTE PTR [rbp+0x59],al
  42bc29:	xchg   BYTE PTR [rcx+rax*1],ch
  42bc2c:	sbb    BYTE PTR [rdx-0x3d],al
  42bc2f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  42bc30:	mov    esi,0x9c0440de
  42bc35:	rex.WRB push 0x4e
  42bc38:	(bad)  
  42bc39:	(bad)  
  42bc3a:	call   0x334ff048
  42bc3f:	sti    
  42bc40:	(bad)  
  42bc41:	xchg   ebx,eax
  42bc42:	(bad)  
  42bc43:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  42bc44:	enter  0x39d3,0x2b
  42bc48:	(bad)  
  42bc49:	outs   dx,BYTE PTR ds:[rsi]
  42bc4a:	test   ebp,0xb7be19ef
  42bc50:	mov    cl,0x71
  42bc52:	hlt    
  42bc53:	jle    0x42bcc9
  42bc55:	jns    0x42bc4d
  42bc57:	cmp    DWORD PTR ss:[rbx+0x7f],edi
  42bc5b:	jns    0x42bc5b
  42bc5d:	(bad)  
  42bc5e:	push   rdx
  42bc5f:	outs   dx,BYTE PTR ds:[rsi]
  42bc60:	scas   al,BYTE PTR es:[rdi]
  42bc61:	xor    DWORD PTR [rbx-0x3ffde661],eax
  42bc67:	mov    bh,0xa9
  42bc69:	cs out 0x5c,al
  42bc6c:	add    ah,ch
  42bc6e:	shr    BYTE PTR [rdx-0x6c],0xa0
  42bc72:	out    0xf3,eax
  42bc74:	cwde   
  42bc75:	jns    0x42bce3
  42bc77:	jb     0x42bc8c
  42bc79:	cmp    BYTE PTR [rbx+0x5317f798],ch
  42bc7f:	jle    0x42bce8
  42bc81:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42bc82:	sbb    al,0x89
  42bc84:	test   eax,0xae6988f0
  42bc89:	adc    al,0xec
  42bc8b:	(bad)  
  42bc8c:	cmp    eax,0x2f9aed6b
  42bc91:	imul   DWORD PTR [rbp+0x7b]
  42bc94:	add    BYTE PTR [rcx-0x12],dl
  42bc97:	adc    edx,DWORD PTR ss:[rdx-0x626d85a1]
  42bc9e:	and    al,0xce
  42bca0:	xchg   edx,esp
  42bca2:	movsxd esp,DWORD PTR [rbx]
  42bca4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  42bca5:	jo     0x42bc4c
  42bca7:	jp     0x42bd1b
  42bca9:	adc    eax,0x4ecc0a9e
  42bcae:	cmp    eax,DWORD PTR [rbx-0x31]
  42bcb1:	rex.WRXB adc al,0x6c
  42bcb4:	rex.WX xor rax,rdx
  42bcb7:	sbb    ecx,DWORD PTR [rbx]
  42bcb9:	sub    eax,0x200e3827
  42bcbe:	jne    0x42bc4c
  42bcc0:	and    spl,r13b
  42bcc3:	sbb    ch,BYTE PTR [rbx+0x22a0c6de]
  42bcc9:	fistp  QWORD PTR [rdi+0x70]
  42bccc:	retf   
  42bccd:	fisub  WORD PTR [rip+0x7e67df9b]        # 0x7eaa9c6e
  42bcd3:	cmp    DWORD PTR [rdi-0x4],0x6f
  42bcd7:	retf   0xfc7f
  42bcda:	movabs al,ds:0x1362a7f27f07f93f
  42bce3:	rex.W mov spl,0x76
  42bce6:	enter  0xdbf9,0xe3
  42bcea:	mov    ebp,DWORD PTR [rdi+0x46ce2f8e]
  42bcf0:	nop
  42bcf1:	(bad)  
  42bcf2:	(bad)  
  42bcf3:	(bad)  
  42bcf4:	or     dh,bh
  42bcf6:	cli    
  42bcf7:	(bad)  
  42bcf8:	lods   al,BYTE PTR ds:[rsi]
  42bcf9:	sbb    ah,BYTE PTR [rdi+0x55]
  42bcfc:	sub    ebp,esi
  42bcfe:	test   al,0xf4
  42bd00:	pop    rdi
  42bd01:	iret   
  42bd02:	jbe    0x42bcc2
  42bd04:	(bad)  
  42bd05:	lea    ecx,[rsi]
  42bd07:	iret   
  42bd08:	rex.WRXB ins BYTE PTR es:[rdi],dx
  42bd0a:	(bad)
  42bd0d:	mov    ebp,eax
  42bd0f:	mov    dh,0x46
  42bd11:	sar    DWORD PTR [rcx+0x7d7e3482],0xc5
  42bd18:	in     al,dx
  42bd19:	mov    ecx,ecx
  42bd1b:	rex.RXB
  42bd1c:	rex.RX call 0x75a07e28
  42bd22:	push   rax
  42bd23:	push   rbx
  42bd24:	push   rsp
  42bd25:	push   rdi
  42bd26:	adc    dh,ah
  42bd28:	test   al,0x61
  42bd2a:	gs push rsp
  42bd2c:	repnz pop rcx
  42bd2e:	fistp  DWORD PTR [rcx-0x156362a2]
  42bd34:	jge    0x42bd41
  42bd36:	gs sti 
  42bd38:	pop    rax
  42bd39:	lea    ecx,[rbp-0x5706c1d7]
  42bd3f:	add    eax,0xc0a13990
  42bd44:	mov    BYTE PTR [rdx+0x46],cl
  42bd47:	sbb    bh,BYTE PTR [rbx]
  42bd49:	movabs ds:0xe748f9df92d523fd,eax
  42bd52:	sub    DWORD PTR [rdx+0x2c86cc91],0xffffffdd
  42bd59:	stc    
  42bd5a:	rex sub DWORD PTR [rsp+rdx*4+0x44],edi
  42bd5f:	in     al,dx
  42bd60:	cmp    dl,BYTE PTR [rsi+0x5b35f307]
  42bd66:	rex.X xchg eax,eax
  42bd68:	sbb    eax,0x4f27e647
  42bd6d:	sub    eax,0x8f5f95dd
  42bd72:	sti    
  42bd73:	retf   0xb268
  42bd76:	mov    edi,DWORD PTR [rbx+0x60225ca9]
  42bd7c:	jnp    0x42bdac
  42bd7e:	fmul   st,st(7)
  42bd80:	iret   
  42bd81:	xor    bh,BYTE PTR [rbx+rbx*1-0x78cd5e17]
  42bd88:	enter  0x107c,0x5c
  42bd8c:	ja     0x42bdc0
  42bd8e:	sahf   
  42bd8f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  42bd90:	(bad)
  42bd93:	mov    ax,0xc89f
  42bd97:	jbe    0x42bdec
  42bd99:	adc    ah,BYTE PTR [rdi]
  42bd9b:	sub    bh,BYTE PTR [rdi]
  42bd9d:	mov    eax,eax
  42bd9f:	sahf   
  42bda0:	lock sub al,BYTE PTR [rax+0x9]
  42bda4:	pushf  
  42bda5:	xchg   ecx,eax
  42bda6:	jo     0x42bd63
  42bda8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bdaa:	mov    eax,0x42f2aae5
  42bdaf:	pop    rax
  42bdb0:	cmp    BYTE PTR [rsi+0x6e],cl
  42bdb3:	adc    cl,al
  42bdb5:	(bad)  
  42bdb6:	jae    0x42be34
  42bdb8:	push   0x2e
  42bdba:	es fwait
  42bdbc:	lods   eax,DWORD PTR ds:[rsi]
  42bdbd:	add    DWORD PTR [rbx+0x37],ebx
  42bdc0:	fwait
  42bdc1:	xchg   ecx,eax
  42bdc2:	rex.WRXB push r13
  42bdc4:	movabs eax,ds:0xf4b1904398a09c35
  42bdcd:	push   rax
  42bdce:	and    dh,BYTE PTR [rdx+0x4]
  42bdd1:	(bad)  
  42bdd2:	mov    al,0x5d
  42bdd4:	nop
  42bdd5:	xchg   DWORD PTR [rcx-0x25],ebx
  42bdd8:	jb     0x42bdf7
  42bdda:	and    bh,BYTE PTR [rcx+0x65818859]
  42bde0:	rcl    DWORD PTR [rbp-0x11],cl
  42bde3:	lock jmp 0x42bdae
  42bde6:	or     BYTE PTR [rsi-0x13],ch
  42bde9:	enter  0x6b01,0x6c
  42bded:	(bad)  
  42bdee:	sub    eax,0x4b5384ee
  42bdf3:	ins    DWORD PTR es:[rdi],dx
  42bdf4:	test   al,0xae
  42bdf6:	xchg   ebp,eax
  42bdf7:	es mov dl,0x72
  42bdfa:	cdq    
  42bdfb:	clc    
  42bdfc:	cmc    
  42bdfd:	cwde   
  42bdfe:	xor    eax,0x5360e4cd
  42be03:	or     DWORD PTR [rax+rbx*2],ebx
  42be06:	pop    rsi
  42be07:	sbb    eax,0xf1b6fec5
  42be0c:	mov    dh,0xda
  42be0e:	jno    0x42be1e
  42be10:	stos   DWORD PTR es:[rdi],eax
  42be11:	xchg   ebx,eax
  42be12:	(bad)  
  42be13:	je     0x42bdeb
  42be15:	push   0x51580df4
  42be1a:	mov    ecx,0x44299b81
  42be1f:	rex.WRX (bad) 
  42be21:	movabs ds:0x2700fd4cae61f57c,al
  42be2a:	sbb    esp,DWORD PTR [rdi]
  42be2c:	rcr    BYTE PTR ds:[rsi],0xb0
  42be30:	cli    
  42be31:	in     eax,dx
  42be32:	loopne 0x42be51
  42be34:	pop    rbp
  42be35:	(bad)  
  42be36:	in     eax,0x60
  42be38:	mov    esp,0x15e38184
  42be3d:	mov    esp,0x634864e2
  42be42:	div    DWORD PTR [rax]
  42be44:	sub    ebx,DWORD PTR [rcx]
  42be46:	jle    0x42be97
  42be48:	sbb    DWORD PTR [rip+0xffffffffac7399a4],0x6d877907        # 0xffffffffacb657f6
  42be52:	(bad)  
  42be53:	sbb    cl,bl
  42be55:	push   rbx
  42be56:	ret    0x7e60
  42be59:	push   rdi
  42be5a:	mov    edi,edx
  42be5c:	(bad)  
  42be5d:	push   rax
  42be5e:	(bad)  
  42be5f:	fld    st(2)
  42be61:	out    dx,al
  42be62:	or     ch,BYTE PTR [rcx]
  42be64:	xchg   edi,eax
  42be65:	mov    dl,BYTE PTR [rax]
  42be67:	sbb    r15d,DWORD PTR [r10-0x71da724]
  42be6e:	rex.WXB test al,0x9
  42be71:	cdq    
  42be72:	shr    BYTE PTR [rcx+0x3359262b],1
  42be78:	and    BYTE PTR [rsi+0x1b],ch
  42be7b:	sub    dl,cl
  42be7d:	(bad)  
  42be7e:	adc    al,0xb
  42be80:	jmp    0xffffffffaca0aa11
  42be85:	mov    esp,0x3530f84a
  42be8a:	xchg   edi,eax
  42be8b:	xchg   edi,eax
  42be8c:	jg     0x42bec7
  42be8e:	(bad)  
  42be8f:	jle    0x42be36
  42be91:	outs   dx,DWORD PTR ds:[rsi]
  42be92:	scas   al,BYTE PTR es:[rdi]
  42be93:	pop    rbx
  42be94:	xor    esp,DWORD PTR [rsi+0x1e]
  42be97:	add    edi,eax
  42be99:	and    al,0x13
  42be9b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42be9c:	rex.WRXB scas rax,QWORD PTR es:[rdi]
  42be9e:	enter  0xd9b4,0x64
  42bea2:	add    DWORD PTR [rsi-0x7d],0xffffffe2
  42bea6:	cld    
  42bea7:	cdq    
  42bea8:	rex.B
  42bea9:	bnd ret 
  42beab:	jmp    0x42be40
  42bead:	sar    ecx,1
  42beaf:	jmp    0xffffffff97ee908d
  42beb4:	(bad)  
  42beb5:	test   al,0x48
  42beb7:	inc    BYTE PTR [rdx-0x58531284]
  42bebd:	fstp   DWORD PTR [rdi+0x79046639]
  42bec3:	out    dx,eax
  42bec4:	(bad)  
  42bec6:	neg    DWORD PTR [rdi]
  42bec8:	mov    WORD PTR [rbp-0x10],?
  42becb:	mov    bh,al
  42becd:	sar    ebx,1
  42becf:	mov    bh,0xe9
  42bed1:	rex.WR pop rsi
  42bed3:	and    dl,BYTE PTR [rbx]
  42bed5:	sub    esp,DWORD PTR [rdx+0x54db0ddb]
  42bedb:	jbe    0x42beba
  42bedd:	mov    DWORD PTR [rbp-0x1fe2c18b],esi
  42bee3:	call   FWORD PTR [rsi-0xf]
  42bee6:	push   0xffffffffb4a7495e
  42beeb:	xchg   ebp,eax
  42beec:	lahf   
  42beed:	sbb    ch,BYTE PTR [rcx-0x511436]
  42bef3:	int    0x86
  42bef5:	ror    DWORD PTR [rcx+0x43f78b14],0xdc
  42befc:	add    BYTE PTR [rax+0x301c6fca],al
  42bf02:	push   rsi
  42bf03:	js     0x42be8d
  42bf05:	sub    eax,DWORD PTR [rdx-0x7e]
  42bf08:	pop    rax
  42bf09:	and    al,BYTE PTR [rdi+0x29]
  42bf0c:	cmc    
  42bf0d:	mov    eax,fs
  42bf0f:	mov    cl,0xb0
  42bf11:	cmp    eax,0x6111850a
  42bf16:	push   rcx
  42bf17:	adc    eax,0x4c72ae96
  42bf1c:	push   rsp
  42bf1d:	sbb    bl,bl
  42bf1f:	xchg   edi,eax
  42bf20:	push   rsp
  42bf21:	mov    ecx,esi
  42bf23:	movabs ds:0x7464e8c5f1f9cdb2,al
  42bf2c:	rex.WB
  42bf2d:	xchg   sp,ax
  42bf2f:	push   rsp
  42bf30:	adc    al,0x67
  42bf33:	scas   al,BYTE PTR es:[rdi]
  42bf34:	xchg   esi,eax
  42bf35:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42bf36:	add    al,0xf9
  42bf38:	rex.B
  42bf39:	fwait
  42bf3a:	mov    eax,0xd1baafd3
  42bf3f:	cmp    dl,cl
  42bf41:	push   rsi
  42bf42:	int3   
  42bf43:	mov    ch,0xb3
  42bf45:	and    ecx,ebp
  42bf47:	(bad)  
  42bf48:	loopne 0x42bf5e
  42bf4a:	rex.WXB push r10
  42bf4c:	rex.R cdq 
  42bf4e:	jle    0x42bf86
  42bf50:	mov    ebp,0xca5c03d2
  42bf55:	(bad)  
  42bf56:	call   0xffffffffe1835e6f
  42bf5b:	sbb    BYTE PTR [rsi+rcx*8+0x257b1f2c],ch
  42bf62:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42bf63:	(bad)  [rcx+0xbf30a58]
  42bf69:	(bad)  
  42bf6a:	test   DWORD PTR [rdi-0x7c],edi
  42bf6d:	(bad)  
  42bf6e:	mov    cl,0xec
  42bf70:	push   rdx
  42bf71:	mov    WORD PTR [rbp+0x6b5cae28],fs
  42bf77:	xchg   edx,eax
  42bf78:	(bad)  
  42bf79:	call   0x439d41a5
  42bf7e:	adc    eax,0xfc5f89c6
  42bf83:	sbb    edi,DWORD PTR [rdi]
  42bf85:	cmc    
  42bf86:	rcr    BYTE PTR [rdx+rax*8+0x57e2049e],1
  42bf8d:	adc    ecx,ebx
  42bf8f:	and    al,0x94
  42bf91:	jae    0x42bfe1
  42bf93:	jmp    0xffffffffd1c84eba
  42bf98:	pop    rdx
  42bf99:	nop
  42bf9a:	movabs ds:0x4441502c8c8dc00e,al
  42bfa3:	jne    0x42bf61
  42bfa5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42bfa6:	pop    rsp
  42bfa7:	xor    BYTE PTR [rax+0x54],dl
  42bfaa:	rex.WRB
  42bfab:	rex.WB fild WORD PTR [r10-0x670034d5]
  42bfb2:	pop    rsi
  42bfb3:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42bfb4:	xor    al,0x83
  42bfb6:	jrcxz  0x42bf5d
  42bfb8:	pop    rdi
  42bfb9:	push   rdx
  42bfba:	int    0xf6
  42bfbc:	sahf   
  42bfbd:	stos   DWORD PTR es:[rdi],eax
  42bfbe:	jnp    0x42c020
  42bfc0:	loop   0x42bfc3
  42bfc2:	xor    eax,0x40702b4c
  42bfc7:	ss rex.X mov ecx,0xe08f86ae
  42bfce:	(bad)  
  42bfcf:	xchg   DWORD PTR [rbp+0x36],ebp
  42bfd2:	sbb    al,0xdd
  42bfd4:	xchg   edi,eax
  42bfd5:	pop    rdx
  42bfd6:	div    BYTE PTR [rbx-0x23]
  42bfd9:	mov    WORD PTR [rdx+0x35],?
  42bfdc:	sbb    BYTE PTR [rcx-0x5],ch
  42bfdf:	push   rsi
  42bfe0:	cdq    
  42bfe1:	add    al,BYTE PTR [rax-0x6caf3228]
  42bfe7:	out    0xbe,eax
  42bfe9:	cwde   
  42bfea:	fmul   st,st(3)
  42bfec:	cwde   
  42bfed:	mov    dl,0x77
  42bfef:	sub    BYTE PTR [rax+0x57],dl
  42bff2:	or     ebx,edx
  42bff4:	nop
  42bff5:	adc    DWORD PTR [rdi-0x1c],edi
  42bff8:	movabs ds:0x95f0a6345446e145,al
  42c001:	mov    dl,0xd0
  42c003:	cmp    DWORD PTR [rsp+rsi*1],edi
  42c006:	rex.WRXB mov r15b,0xb7
  42c009:	lods   eax,DWORD PTR ds:[rsi]
  42c00a:	fmul   DWORD PTR [rdi+0x7d]
  42c00d:	(bad)  
  42c00e:	(bad)  
  42c00f:	mov    ah,0x99
  42c011:	out    0xba,al
  42c013:	pop    rax
  42c014:	jge    0x42c064
  42c016:	pop    rsp
  42c017:	rex.WX xchg rcx,rax
  42c019:	(bad)  
  42c01a:	movabs ds:0x562c96b2df2f520e,eax
  42c023:	sbb    esp,edi
  42c025:	test   eax,eax
  42c027:	imul   edx,DWORD PTR [rbp-0x51],0xffffffa5
  42c02b:	shl    DWORD PTR [rbp-0x40b9939e],1
  42c031:	pop    rsp
  42c032:	movabs al,ds:0xb57e81d8b844d114
  42c03b:	or     eax,0x26e225ea
  42c040:	retf   
  42c041:	int3   
  42c042:	(bad)  
  42c043:	fcomi  st,st(7)
  42c045:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42c046:	xchg   edi,eax
  42c047:	(bad)  
  42c048:	out    0x7e,eax
  42c04a:	sbb    al,0x2f
  42c04c:	stc    
  42c04d:	(bad)  
  42c04e:	in     al,0xf2
  42c050:	sbb    esp,DWORD PTR [rbx-0x21b1704b]
  42c056:	jge    0x42c0d5
  42c058:	rex.WX rcl QWORD PTR [rdx-0x20f09049],0x51
  42c060:	(bad)  
  42c061:	(bad)  
  42c062:	cmp    eax,DWORD PTR [rax+0x4]
  42c065:	punpcklwd mm7,DWORD PTR [rax]
  42c068:	nop
  42c069:	cmp    BYTE PTR [rdx],dh
  42c06b:	push   rbx
  42c06c:	rex.WR jnp 0x42bff6
  42c06f:	adc    bh,BYTE PTR [rax-0x41305e05]
  42c075:	jae    0x42c073
  42c077:	mov    eax,0x9ed1713a
  42c07c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  42c07d:	or     eax,0x65869ad4
  42c082:	jo     0x42c0d3
  42c084:	mov    ds,WORD PTR [rip+0xffffffffb6325b1c]        # 0xffffffffb6751ba6
  42c08a:	push   0xffffffffec24bba2
  42c08f:	rex.W (bad) 
  42c091:	fs or  eax,0xbe68f11d
  42c097:	mov    ebx,0x2b001c5d
  42c09c:	push   0x29
  42c09e:	pop    rsp
  42c09f:	(bad)  
  42c0a0:	(bad)  
  42c0a1:	sbb    BYTE PTR [rbp-0x7944ef57],bl
  42c0a7:	out    dx,eax
  42c0a8:	retf   
  42c0a9:	ss js  0x42c08b
  42c0ac:	jl     0x42c0bf
  42c0ae:	pop    rbp
  42c0af:	rex.X
  42c0b0:	rex mov esi,0xb235ae74
  42c0b6:	cmp    cl,cl
  42c0b8:	push   0x2ff538be
  42c0bd:	(bad)  
  42c0be:	(bad)  
  42c0bf:	stos   DWORD PTR es:[rdi],eax
  42c0c0:	jbe    0x42c059
  42c0c2:	loop   0x42c0b0
  42c0c4:	scas   al,BYTE PTR es:[rdi]
  42c0c5:	retf   
  42c0c6:	int3   
  42c0c7:	popf   
  42c0c8:	fadd   st(1),st
  42c0ca:	cdq    
  42c0cb:	movabs ss:0x480cb97c6198547e,eax
  42c0d5:	scas   al,BYTE PTR es:[rdi]
  42c0d6:	or     eax,0xdb6c92cc
  42c0db:	jp     0x42c11a
  42c0dd:	loop   0x42c11d
  42c0df:	cmp    esp,DWORD PTR [rax-0x4b]
  42c0e2:	rcl    BYTE PTR [rdx+0x3b996b14],cl
  42c0e8:	rcr    DWORD PTR [rsi+rsi*4+0xe982c],cl
  42c0ef:	fwait
  42c0f0:	and    eax,0xcc6483f
  42c0f5:	imul   ebp,DWORD PTR [rcx-0x642d4a71],0x533bbef9
  42c0ff:	(bad)  
  42c100:	mov    edi,0x2d987e6
  42c105:	push   0x2e
  42c107:	add    al,0x89
  42c109:	adc    ah,BYTE PTR [rbp+0x65]
  42c10c:	cmp    esp,ecx
  42c10e:	ds gs adc al,0x2d
  42c112:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  42c113:	mov    edi,0xed7175fe
  42c118:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42c119:	mov    ?,WORD PTR [rcx-0x7f]
  42c11c:	out    0x45,al
  42c11e:	ins    BYTE PTR es:[rdi],dx
  42c11f:	test   DWORD PTR gs:[rcx],edx
  42c122:	cdq    
  42c123:	(bad)  
  42c124:	and    ch,BYTE PTR [rcx]
  42c126:	or     dl,bh
  42c128:	(bad)  
  42c129:	adc    DWORD PTR [rdx+rdi*2-0x25],0xf941f55b
  42c131:	std    
  42c132:	jle    0x42c12c
  42c134:	sti    
  42c135:	jge    0x42c1ad
  42c137:	cmp    ebx,DWORD PTR [rsi-0x48c12064]
  42c13d:	rex.WR movabs ds:0xd014aa6fabed109c,al
  42c147:	(bad)  
  42c148:	movabs ds:0x13b2265949cef947,eax
  42c151:	popf   
  42c152:	movabs al,ds:0xfe04789e890acb58
  42c15b:	push   rsi
  42c15c:	(bad)  
  42c15d:	iret   
  42c15e:	add    ch,BYTE PTR [rbp-0x28bac6fa]
  42c164:	xchg   ebp,eax
  42c165:	imul   edx,eax,0x5a9fefc
  42c16b:	mov    ch,0x3b
  42c16d:	cdq    
  42c16e:	xchg   BYTE PTR [rdx+0x67],ah
  42c171:	xchg   edx,eax
  42c172:	push   rsi
  42c173:	xor    al,0xc8
  42c175:	(bad)  
  42c176:	mov    bh,0x5a
  42c178:	sub    eax,0xb9f5fcd7
  42c17d:	sub    eax,0x82b75374
  42c182:	cmp    eax,0x155ed62d
  42c187:	(bad)  
  42c188:	call   0x24c8b1a9
  42c18d:	sbb    DWORD PTR [rcx+rdx*4-0x29a8162f],ebx
  42c194:	rex.RX
  42c195:	ss jnp 0x42c17d
  42c198:	ds xchg ecx,eax
  42c19a:	cmp    eax,0x298a4331
  42c19f:	in     al,0x91
  42c1a1:	(bad)  
  42c1a2:	pop    rsp
  42c1a3:	jl     0x42c16b
  42c1a5:	jl     0x42c200
  42c1a7:	cmc    
  42c1a8:	(bad)  
  42c1a9:	div    DWORD PTR [rdi+0x77]
  42c1ac:	test   DWORD PTR [rsi],0xb17f3ef6
  42c1b2:	jnp    0x42c164
  42c1b4:	mov    bh,0xb7
  42c1b6:	mov    bh,0x7f
  42c1b8:	mov    al,0x77
  42c1ba:	jo     0x42c16c
  42c1bc:	mov    edi,0xf90ef3fb
  42c1c1:	(bad)  
  42c1c2:	outs   dx,BYTE PTR ds:[rsi]
  42c1c3:	repz in al,dx
  42c1c5:	and    r15,QWORD PTR [rsp+r11*4]
  42c1c9:	(bad)  
  42c1ca:	xchg   BYTE PTR [rbp-0x33],ch
  42c1cd:	push   rbp
  42c1ce:	iret   
  42c1cf:	(bad)
  42c1d2:	cmp    edx,DWORD PTR [rdi+0x35]
  42c1d5:	(bad)  
  42c1d6:	rex.WXB iretq 
  42c1d8:	rcr    al,0x73
  42c1db:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42c1dc:	(bad)  
  42c1dd:	pop    rbx
  42c1de:	mov    eax,0x419c4d94
  42c1e3:	(bad)  
  42c1e4:	sbb    bh,BYTE PTR cs:[rbp+0x4692dbfa]
  42c1eb:	cmp    ah,BYTE PTR [rsi]
  42c1ed:	jne    0x42c1ef
  42c1ef:	cmp    cl,BYTE PTR [rbp+0x6d]
  42c1f2:	adc    esp,esp
  42c1f4:	scas   al,BYTE PTR es:[rdi]
  42c1f5:	addr32 in eax,0x78
  42c1f8:	mov    WORD PTR [rax+rax*1],ss
  42c1fb:	fwait
  42c1fc:	and    edi,DWORD PTR [rdx]
  42c1fe:	rex.WR mov BYTE PTR [rbx+0x96f23f4],r10b
  42c205:	jno    0x42c1c8
  42c207:	add    ebx,DWORD PTR [rbp-0x3222f839]
  42c20d:	(bad)  
  42c20e:	sub    ebx,DWORD PTR [rsi-0x7e]
  42c211:	rex.W sahf 
  42c213:	xchg   esp,eax
  42c214:	(bad)  
  42c215:	iret   
  42c216:	(bad)  
  42c217:	and    eax,0xa92664a1
  42c21c:	mov    dl,0xb9
  42c21e:	and    ecx,ecx
  42c220:	push   rbp
  42c221:	idiv   cl
  42c223:	out    dx,al
  42c224:	rol    DWORD PTR [rcx],0x95
  42c227:	sar    al,1
  42c229:	jrcxz  0x42c289
  42c22b:	pop    rdi
  42c22c:	adc    BYTE PTR [rbp+0x6fbc5a3e],0xaf
  42c233:	(bad)  
  42c234:	outs   dx,BYTE PTR ds:[rsi]
  42c235:	or     esp,0xf
  42c238:	jg     0x42c1d6
  42c23a:	(bad)
  42c23d:	push   rbp
  42c23e:	(bad)  
  42c23f:	adc    BYTE PTR [rcx+0x1640ac22],ah
  42c245:	ret    0xcde9
  42c248:	pop    rsp
  42c249:	gs (bad) 
  42c24b:	ss jmp 0x472c9cf1
  42c251:	(bad)  
  42c252:	(bad)  
  42c253:	push   rbp
  42c254:	fwait
  42c255:	int    0xcd
  42c257:	mov    esp,0xb6886e3b
  42c25c:	ins    DWORD PTR es:[rdi],dx
  42c25d:	xchg   esp,eax
  42c25e:	xchg   ecx,eax
  42c25f:	add    eax,ebp
  42c261:	mov    DWORD PTR [rbx+0x42],esi
  42c264:	cmp    BYTE PTR [rbx],bl
  42c266:	xchg   bh,ch
  42c268:	pop    rbx
  42c269:	xchg   ecx,eax
  42c26a:	or     al,0x38
  42c26c:	pop    rsp
  42c26d:	add    eax,0xc7a50697
  42c272:	pop    rcx
  42c273:	xchg   DWORD PTR [rdi+0x6e53c4c7],eax
  42c279:	and    eax,0x6f47e611
  42c27e:	mov    al,0xfb
  42c280:	iret   
  42c281:	idiv   BYTE PTR [rsi+0x66]
  42c284:	fcomp  QWORD PTR [rdi]
  42c286:	sbb    eax,0x526b3708
  42c28b:	push   rsi
  42c28c:	ins    DWORD PTR es:[rdi],dx
  42c28d:	(bad)  
  42c28e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42c28f:	cmp    ch,al
  42c291:	rex.RX fcmove st,st(2)
  42c294:	xchg   bh,dl
  42c296:	rex.XB (bad) 
  42c298:	sub    al,ah
  42c29a:	fcmovnu st,st(0)
  42c29c:	not    ecx
  42c29e:	xlat   BYTE PTR ds:[rbx]
  42c29f:	int3   
  42c2a0:	test   ebp,0xa7617f05
  42c2a6:	test   eax,0xc21d4943
  42c2ab:	in     al,dx
  42c2ac:	int3   
  42c2ad:	ins    BYTE PTR es:[rdi],dx
  42c2ae:	(bad)  
  42c2af:	(bad)  
  42c2b0:	xor    DWORD PTR [rdi],esi
  42c2b2:	int3   
  42c2b3:	icebp  
  42c2b4:	in     eax,0xa1
  42c2b6:	mov    ecx,0xd0dbe3c
  42c2bb:	std    
  42c2bc:	mov    bh,0x99
  42c2be:	mov    cl,0xca
  42c2c0:	imul   esi,DWORD PTR [rcx+0x6e1e70b7],0xcd2ecb2d
  42c2ca:	fst    st(3)
  42c2cc:	mov    eax,DWORD PTR fs:[rdx+0x7f3ecf16]
  42c2d3:	div    BYTE PTR [rbx+rbx*4+0x4b]
  42c2d7:	sbb    dh,al
  42c2d9:	imul   ebx,DWORD PTR [rcx],0x25
  42c2dc:	pop    rdx
  42c2dd:	shr    BYTE PTR [rbx],0x29
  42c2e0:	sub    al,0x2f
  42c2e2:	in     al,0x4e
  42c2e4:	mov    dh,0x22
  42c2e6:	jmp    0x1f4c88e8
  42c2eb:	jmp    0x6809110b
  42c2f0:	movabs ds:0x3253d6fb86cacbb7,eax
  42c2f9:	out    0x39,al
  42c2fb:	xor    DWORD PTR [rsi],eax
  42c2fd:	and    cl,BYTE PTR [rcx-0x64b9d167]
  42c303:	rex.R (bad) 
  42c305:	sbb    edx,esi
  42c307:	sbb    al,0xd0
  42c309:	adc    al,BYTE PTR [rbp+0x127ea4fe]
  42c30f:	cmp    al,BYTE PTR [rbx]
  42c311:	mov    al,BYTE PTR [rcx+0x62]
  42c314:	cmp    BYTE PTR [rbp+0x302d667d],dl
  42c31a:	mov    dl,0x83
  42c31c:	pop    rax
  42c31d:	(bad)  
  42c31e:	mov    cl,0xf4
  42c320:	out    dx,eax
  42c321:	mov    al,0x5a
  42c323:	outs   dx,DWORD PTR ds:[rsi]
  42c324:	jae    0x42c30e
  42c326:	sbb    al,0x4a
  42c328:	and    DWORD PTR [rbp+0x43],ebp
  42c32b:	repz movabs al,ds:0xa72eb4adc7a93062
  42c335:	ins    DWORD PTR es:[rdi],dx
  42c336:	jp     0x42c31c
  42c338:	rex.W retf 0x228b
  42c33c:	movabs ds:0x16781b85c7214ec8,al
  42c345:	repz xchg esi,eax
  42c347:	retf   
  42c348:	rex.RXB xchg r10d,eax
  42c34a:	rcl    BYTE PTR [rcx-0x1113f1e4],cl
  42c350:	fcomp  QWORD PTR [rdi+rax*2-0x2b]
  42c354:	mov    ebp,0x1330d868
  42c359:	ins    BYTE PTR es:[rdi],dx
  42c35a:	pop    rbp
  42c35b:	mov    dl,0x4e
  42c35d:	fs popf 
  42c35f:	jmp    0xffffffffba8b3f7b
  42c364:	gs (bad) 
  42c366:	push   rcx
  42c367:	movabs ds:0xf5cc1fd89681d5b9,eax
  42c370:	push   rdi
  42c371:	(bad)  
  42c372:	lock (bad) 
  42c374:	iret   
  42c375:	rcl    edx,cl
  42c377:	mov    edi,0x261e73eb
  42c37c:	xor    ebp,ebp
  42c37e:	(bad)  
  42c37f:	ins    BYTE PTR es:[rdi],dx
  42c380:	rex.RB xlat BYTE PTR ds:[rbx]
  42c382:	cwde   
  42c383:	cdq    
  42c384:	adc    bh,BYTE PTR [rax]
  42c386:	and    al,0x6b
  42c388:	std    
  42c389:	ins    BYTE PTR es:[rdi],dx
  42c38a:	movabs eax,ds:0xbf237a2bdb3b3b27
  42c393:	mov    ?,WORD PTR [rbp-0x3]
  42c396:	sbb    al,0xe4
  42c398:	(bad)  
  42c399:	pop    rsi
  42c39a:	push   0xffffffffffffffa4
  42c39c:	pop    rcx
  42c39d:	repz jbe 0x42c383
  42c3a0:	xor    al,0xb5
  42c3a2:	jns    0x42c3f1
  42c3a4:	sub    edi,DWORD PTR [rcx]
  42c3a6:	adc    eax,0x51bb2980
  42c3ab:	(bad)  
  42c3ac:	mov    esp,0xf0abcee2
  42c3b1:	push   0xf
  42c3b3:	rex.X xor BYTE PTR [rip+0xffffffffd5c4b64a],bpl        # 0xffffffffd6077a04
  42c3ba:	cdq    
  42c3bb:	cmp    DWORD PTR [rsi+0x38],ecx
  42c3be:	rex.WR (bad) 
  42c3c0:	imul   esi,DWORD PTR [rdi],0x75ec3eb4
  42c3c6:	pop    rcx
  42c3c7:	std    
  42c3c8:	mov    ecx,0x4aae1fca
  42c3cd:	lods   al,BYTE PTR ds:[rsi]
  42c3ce:	jne    0x42c3b7
  42c3d0:	cmc    
  42c3d1:	mov    ebp,0xa79aaa5f
  42c3d6:	mov    ecx,0x3bd9d6f5
  42c3db:	(bad)  
  42c3dc:	cwde   
  42c3dd:	rex.RXB (bad) 
  42c3df:	rex.WX
  42c3e0:	rex.WRX (bad) 
  42c3e2:	(bad)  
  42c3e3:	cmp    BYTE PTR [rdi],ch
  42c3e5:	pop    rdx
  42c3e6:	add    eax,0x4411a537
  42c3eb:	mov    ebp,gs
  42c3ed:	and    BYTE PTR [rax+0x39],al
  42c3f0:	pop    rax
  42c3f1:	sub    DWORD PTR [rbp+0xf845fad],edx
  42c3f7:	test   eax,0x670e82fc
  42c3fc:	(bad)
  42c3ff:	(bad)  
  42c400:	(bad)  
  42c401:	pop    rbx
  42c402:	mov    ?,WORD PTR [rcx+0x7b]
  42c405:	mov    ch,0xe6
  42c407:	movabs ds:0x355c0c00d19e3bcf,eax
  42c410:	xchg   DWORD PTR [rsp+rax*1+0x29c9e1c6],eax
  42c417:	ror    ebx,0x4e
  42c41a:	lea    ecx,[rcx+0x9555237]
  42c420:	jo     0x42c46d
  42c422:	add    bh,bl
  42c424:	mov    bl,BYTE PTR [rsp+rdx*8-0x23d2410b]
  42c42b:	movabs eax,ds:0xa6c7b8285bb04759
  42c434:	mov    edi,0xd599ed90
  42c439:	xor    bh,dl
  42c43b:	push   rdx
  42c43c:	int    0x4e
  42c43e:	pop    rbx
  42c43f:	adc    cl,bl
  42c441:	adc    al,ch
  42c443:	sti    
  42c444:	ins    DWORD PTR es:[rdi],dx
  42c445:	sub    edx,DWORD PTR ss:[rdi]
  42c448:	xor    BYTE PTR [rcx+0x6ea34c59],ch
  42c44e:	push   rax
  42c44f:	xchg   ebp,eax
  42c450:	int    0xb2
  42c452:	pop    rbx
  42c453:	icebp  
  42c454:	scas   al,BYTE PTR es:[rdi]
  42c455:	xor    ch,BYTE PTR [rip+0xffffffffc312d7e8]        # 0xffffffffc3559c43
  42c45b:	in     al,0xc2
  42c45d:	movabs eax,ds:0x747d293883c3a08d
  42c466:	xchg   ecx,ebx
  42c468:	push   rbp
  42c469:	sbb    al,0x69
  42c46b:	(bad)  
  42c46c:	jge    0x42c44d
  42c46e:	xchg   ecx,eax
  42c46f:	fstp   DWORD PTR [rbx-0x179b4de7]
  42c475:	add    esi,DWORD PTR [rdx]
  42c477:	jb     0x42c47e
  42c479:	and    al,0xfa
  42c47b:	mov    esi,0x2e845e16
  42c480:	(bad)  
  42c481:	(bad)  
  42c482:	popf   
  42c483:	test   DWORD PTR [rdx+0x7b],ebx
  42c486:	mov    ?,WORD PTR [rbp+0x1ba57def]
  42c48c:	out    0x90,al
  42c48e:	add    ebp,ebx
  42c490:	cmp    al,0x7d
  42c492:	repnz (bad) 
  42c494:	jb     0x42c4c3
  42c496:	jne    0x42c4fb
  42c498:	xchg   ecx,eax
  42c499:	push   rcx
  42c49a:	(bad)  
  42c49b:	mov    DWORD PTR [rsi],edi
  42c49d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42c49e:	(bad)  
  42c49f:	(bad)
  42c4a4:	rex.WRXB add BYTE PTR [r11-0x619755e8],r10b
  42c4ab:	and    eax,0x1b0f54ba
  42c4b0:	push   0xfffffffffffffffe
  42c4b2:	leave  
  42c4b3:	imul   eax,DWORD PTR [rip+0x55342ff2],0xdbcac12d        # 0x5576f4af
  42c4bd:	out    0xdb,eax
  42c4bf:	nop
  42c4c0:	movabs ds:0x73d12f7b6864cd8e,al
  42c4c9:	out    dx,al
  42c4ca:	jmp    FWORD PTR [rbx-0x62]
  42c4cd:	rex.WX sbb al,BYTE PTR [rbx+r13*8]
  42c4d1:	and    DWORD PTR [rbp-0x5b],esp
  42c4d4:	ror    ebx,cl
  42c4d6:	retf   
  42c4d7:	xor    dh,ah
  42c4d9:	push   rdx
  42c4da:	sbb    DWORD PTR [rdi+0x2d],0xb661a29
  42c4e1:	loope  0x42c533
  42c4e3:	(bad)  
  42c4e4:	out    0x74,al
  42c4e6:	(bad)  
  42c4e7:	gs pop rsp
  42c4e9:	xchg   ebp,eax
  42c4ea:	shl    DWORD PTR [rsi],cl
  42c4ec:	rex.WRX
  42c4ed:	es fst st(2)
  42c4f0:	sub    al,0x2f
  42c4f2:	mov    bh,0x7e
  42c4f4:	pop    rdx
  42c4f5:	ficom  WORD PTR [rcx+0x49]
  42c4f8:	shr    DWORD PTR [rbx+0x1427cab],1
  42c4fe:	outs   dx,BYTE PTR ds:[rsi]
  42c4ff:	(bad)  
  42c500:	mov    esi,0x1f9e324b
  42c505:	pushf  
  42c506:	imul   edx,DWORD PTR [rip+0x64b63323],0xffffffb1        # 0x64f8f830
  42c50d:	sbb    al,0xcf
  42c50f:	int3   
  42c510:	lods   eax,DWORD PTR gs:[rsi]
  42c512:	mov    eax,0x30aa7370
  42c517:	rex.WXB (bad) 
  42c519:	fiadd  DWORD PTR [rdx+0x73]
  42c51c:	adc    r8,QWORD PTR [rsi]
  42c51f:	xor    DWORD PTR [rbx+0x3a964583],0xffffffeb
  42c526:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  42c527:	(bad)  
  42c528:	iret   
  42c529:	push   rcx
  42c52a:	pop    rbx
  42c52b:	xchg   ebp,eax
  42c52c:	add    BYTE PTR [rbx-0x4b2f4d0d],bh
  42c532:	xchg   edx,eax
  42c533:	gs int 0xb4
  42c536:	mov    WORD PTR [rdx-0x6c],ds
  42c539:	jge    0x42c4be
  42c53b:	rex.XB adc edi,r9d
  42c53e:	rex.WR enter 0xc5cf,0x34
  42c543:	(bad)  
  42c544:	sbb    edi,esi
  42c546:	(bad)  
  42c547:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42c548:	add    ebp,0xffffffcd
  42c54b:	rex.X push rdi
  42c54d:	pop    rdx
  42c54e:	adc    eax,0x2496d622
  42c553:	xchg   ecx,eax
  42c554:	add    DWORD PTR [rdi-0x11],eax
  42c557:	cld    
  42c558:	fwait
  42c559:	repz (bad) 
  42c55b:	jb     0x42c5a9
  42c55d:	sub    eax,0xd1449f71
  42c562:	test   DWORD PTR [rdi+0xccefcc6],ecx
  42c568:	neg    BYTE PTR [rdx-0x754c4fd2]
  42c56e:	inc    BYTE PTR [rbp-0x13681b2a]
  42c574:	xchg   esi,eax
  42c575:	(bad)
  42c578:	pop    rdi
  42c579:	xor    eax,0xf95c290d
  42c57e:	sbb    al,0x7f
  42c580:	(bad)  
  42c581:	vmaxps xmm6,xmm10,XMMWORD PTR [esi-0x67]
  42c587:	fcom   QWORD PTR [rdi]
  42c589:	retf   0x45aa
  42c58c:	(bad)
  42c591:	sub    eax,DWORD PTR [rbx-0x38474a92]
  42c597:	cli    
  42c598:	jns    0x42c55c
  42c59a:	xchg   ecx,eax
  42c59b:	cmc    
  42c59c:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
  42c59e:	rcr    bl,0x5a
  42c5a1:	mov    dl,0xfd
  42c5a3:	sub    al,0x10
  42c5a5:	mov    cs,WORD PTR [rdi]
  42c5a7:	push   rsi
  42c5a8:	(bad)
  42c5ab:	push   rbp
  42c5ac:	es mov al,0xc1
  42c5af:	push   rdx
  42c5b0:	ret    0xeca4
  42c5b3:	shr    DWORD PTR [rax-0xa86314d],1
  42c5b9:	in     al,dx
  42c5ba:	(bad)  
  42c5bb:	std    
  42c5bc:	add    eax,0x17d4dd99
  42c5c1:	movabs ds:0x17ffc6e182598b5,eax
  42c5ca:	sbb    BYTE PTR [rbp+0x77],ch
  42c5cd:	repnz sbb edx,ecx
  42c5d0:	add    al,BYTE PTR [rax]
	...
  42c5fe:	add    BYTE PTR [rax],al
  42c600:	imul   esp,DWORD PTR fs:[rbx+0x74],0x6c696600
  42c608:	add    BYTE PTR gs:[rsi+0x74],ah
  42c60c:	jo     0x42c60e
  42c60e:	data16 je 0x42c681
  42c611:	jae    0x42c613
  42c613:	outs   dx,DWORD PTR ds:[esi]
  42c615:	jo     0x42c67f
  42c617:	gs jb  0x42c61a
  42c61a:	push   0x707474
  42c61f:	push   0x73707474
  42c624:	add    BYTE PTR [rcx+0x6d],ch
  42c627:	(bad)  
  42c628:	jo     0x42c62a
  42c62a:	imul   ebp,DWORD PTR [rbp+0x61],0x6c007370
  42c631:	fs (bad) 
  42c633:	jo     0x42c635
  42c635:	ins    BYTE PTR es:[rdi],dx
  42c636:	fs (bad) 
  42c638:	jo     0x42c6ad
  42c63a:	add    BYTE PTR [rax+0x6f],dh
  42c63d:	jo     0x42c672
  42c63f:	add    BYTE PTR [rax+0x6f],dh
  42c642:	jo     0x42c677
  42c644:	jae    0x42c646
  42c646:	jb     0x42c6bc
  42c648:	ins    DWORD PTR es:[rdi],dx
  42c649:	jo     0x42c64b
  42c64b:	jb     0x42c6c1
  42c64d:	jae    0x42c6bf
  42c64f:	add    BYTE PTR [rbx+0x63],dh
  42c652:	jo     0x42c654
  42c654:	jae    0x42c6bc
  42c656:	je     0x42c6c8
  42c658:	add    BYTE PTR [rbx+0x6d],dh
  42c65b:	(bad)  
  42c65c:	add    BYTE PTR [rbx+0x6d],dh
  42c65f:	(bad)  
  42c661:	add    BYTE PTR [rbx+0x6d],dh
  42c664:	je     0x42c6d6
  42c666:	add    BYTE PTR [rbx+0x6d],dh
  42c669:	je     0x42c6db
  42c66b:	jae    0x42c66d
  42c66d:	je     0x42c6d4
  42c66f:	ins    BYTE PTR es:[rdi],dx
  42c670:	outs   dx,BYTE PTR ds:[rsi]
  42c671:	gs je  0x42c674
  42c674:	je     0x42c6dc
  42c676:	je     0x42c6e8
	...
  42c680:	add    dh,al
  42c682:	rex.X add BYTE PTR [rax],al
  42c685:	add    BYTE PTR [rax],al
  42c687:	add    BYTE PTR [rax],al
  42c689:	add    al,BYTE PTR [rax]
  42c68b:	add    BYTE PTR [rax],al
  42c68d:	add    BYTE PTR [rax],al
  42c68f:	add    BYTE PTR [rip+0x42c6],al        # 0x43095b
  42c695:	add    BYTE PTR [rax],al
  42c697:	add    BYTE PTR [rax],al
  42c699:	add    al,0x0
  42c69b:	add    BYTE PTR [rax],al
  42c69d:	add    BYTE PTR [rax],al
  42c69f:	add    BYTE PTR [rdx],cl
  42c6a1:	mov    BYTE PTR [rdx+0x0],0x0
  42c6a5:	add    BYTE PTR [rax],al
  42c6a7:	add    BYTE PTR [rax+rax*1],al
  42c6aa:	add    BYTE PTR [rax],al
  42c6ac:	add    BYTE PTR [rax],al
  42c6ae:	add    BYTE PTR [rax],al
  42c6b0:	(bad)  
  42c6b1:	mov    BYTE PTR [rdx+0x0],0x0
  42c6b5:	add    BYTE PTR [rax],al
  42c6b7:	add    BYTE PTR [rax],cl
  42c6b9:	add    BYTE PTR [rax],al
  42c6bb:	add    BYTE PTR [rax],al
  42c6bd:	add    BYTE PTR [rax],al
  42c6bf:	add    BYTE PTR [rbx],dl
  42c6c1:	mov    BYTE PTR [rdx+0x0],0x0
  42c6c5:	add    BYTE PTR [rax],al
  42c6c7:	add    BYTE PTR [rax],al
  42c6c9:	add    BYTE PTR [rax],al
  42c6cb:	add    al,BYTE PTR [rax]
  42c6cd:	add    BYTE PTR [rax],al
  42c6cf:	add    BYTE PTR [rdx],bl
  42c6d1:	mov    BYTE PTR [rdx+0x0],0x0
  42c6d5:	add    BYTE PTR [rax],al
  42c6d7:	add    BYTE PTR [rcx],al
  42c6d9:	add    BYTE PTR [rax],al
  42c6db:	add    BYTE PTR [rax],al
  42c6dd:	add    BYTE PTR [rax],al
  42c6df:	add    BYTE PTR [rdi],bl
  42c6e1:	mov    BYTE PTR [rdx+0x0],0x0
  42c6e5:	add    BYTE PTR [rax],al
  42c6e7:	add    BYTE PTR [rdx],al
  42c6e9:	add    BYTE PTR [rax],al
  42c6eb:	add    BYTE PTR [rax],al
  42c6ed:	add    BYTE PTR [rax],al
  42c6ef:	add    BYTE PTR [rip+0x42c6],ah        # 0x4309bb
  42c6f5:	add    BYTE PTR [rax],al
  42c6f7:	add    BYTE PTR [rax],al
  42c6f9:	adc    BYTE PTR [rax],al
  42c6fb:	add    BYTE PTR [rax],al
  42c6fd:	add    BYTE PTR [rax],al
  42c6ff:	add    BYTE PTR [rdx],ch
  42c701:	mov    BYTE PTR [rdx+0x0],0x0
  42c705:	add    BYTE PTR [rax],al
  42c707:	add    BYTE PTR [rax],al
  42c709:	and    BYTE PTR [rax],al
  42c70b:	add    BYTE PTR [rax],al
  42c70d:	add    BYTE PTR [rax],al
  42c70f:	add    BYTE PTR [rax],dh
  42c711:	mov    BYTE PTR [rdx+0x0],0x0
  42c715:	add    BYTE PTR [rax],al
  42c717:	add    BYTE PTR [rax+0x0],al
  42c71d:	add    BYTE PTR [rax],al
  42c71f:	add    BYTE PTR [rip+0x42c6],dh        # 0x4309eb
  42c725:	add    BYTE PTR [rax],al
  42c727:	add    BYTE PTR [rax],al
  42c729:	add    DWORD PTR [rax],eax
  42c72b:	add    BYTE PTR [rax],al
  42c72d:	add    BYTE PTR [rax],al
  42c72f:	add    BYTE PTR [rbx],bh
  42c731:	mov    BYTE PTR [rdx+0x0],0x0
  42c735:	add    BYTE PTR [rax],al
  42c737:	add    BYTE PTR [rax],al
  42c739:	add    BYTE PTR [rax],al
  42c73c:	add    BYTE PTR [rax],al
  42c73e:	add    BYTE PTR [rax],al
  42c740:	rex mov BYTE PTR [rdx+0x0],0x0
  42c745:	add    BYTE PTR [rax],al
  42c747:	add    BYTE PTR [rax],al
  42c749:	add    BYTE PTR [rax],0x0
  42c74c:	add    BYTE PTR [rax],al
  42c74e:	add    BYTE PTR [rax],al
  42c750:	rex.RX mov BYTE PTR [rdx+0x0],0x0
  42c755:	add    BYTE PTR [rax],al
  42c757:	add    BYTE PTR [rax],al
  42c759:	add    BYTE PTR [rax],cl
  42c75b:	add    BYTE PTR [rax],al
  42c75d:	add    BYTE PTR [rax],al
  42c75f:	add    BYTE PTR [rbx-0x3a],cl
  42c762:	rex.X add BYTE PTR [rax],al
  42c765:	add    BYTE PTR [rax],al
  42c767:	add    BYTE PTR [rax],al
  42c769:	add    BYTE PTR [rax+rax*1],al
  42c76c:	add    BYTE PTR [rax],al
  42c76e:	add    BYTE PTR [rax],al
  42c770:	push   rax
  42c771:	mov    BYTE PTR [rdx+0x0],0x0
  42c775:	add    BYTE PTR [rax],al
  42c777:	add    BYTE PTR [rax],dl
  42c779:	add    BYTE PTR [rax],al
  42c77b:	add    BYTE PTR [rax],al
  42c77d:	add    BYTE PTR [rax],al
  42c77f:	add    BYTE PTR [rsi+rax*8+0x42],dl
  42c783:	add    BYTE PTR [rax],al
  42c785:	add    BYTE PTR [rax],al
  42c787:	add    BYTE PTR [rax],ah
  42c789:	add    BYTE PTR [rax],al
  42c78b:	add    BYTE PTR [rax],al
  42c78d:	add    BYTE PTR [rax],al
  42c78f:	add    BYTE PTR [rcx-0x3a],bl
  42c792:	rex.X add BYTE PTR [rax],al
  42c795:	add    BYTE PTR [rax],al
  42c797:	add    BYTE PTR [rax],al
  42c799:	add    BYTE PTR [rax],al
  42c79b:	add    al,0x0
  42c79d:	add    BYTE PTR [rax],al
  42c79f:	add    BYTE PTR [rbp-0x3a],bl
  42c7a2:	rex.X add BYTE PTR [rax],al
  42c7a5:	add    BYTE PTR [rax],al
  42c7a7:	add    BYTE PTR [rax],al
  42c7a9:	add    BYTE PTR [rax],al
  42c7ab:	or     BYTE PTR [rax],al
  42c7ad:	add    BYTE PTR [rax],al
  42c7af:	add    BYTE PTR [rdx-0x3a],ah
  42c7b2:	rex.X add BYTE PTR [rax],al
  42c7b5:	add    BYTE PTR [rax],al
  42c7b7:	add    BYTE PTR [rax],al
  42c7b9:	add    BYTE PTR [rcx],al
  42c7bb:	add    BYTE PTR [rax],al
  42c7bd:	add    BYTE PTR [rax],al
  42c7bf:	add    BYTE PTR [rdi-0x3a],ah
  42c7c2:	rex.X add BYTE PTR [rax],al
  42c7c5:	add    BYTE PTR [rax],al
  42c7c7:	add    BYTE PTR [rax],al
  42c7c9:	add    BYTE PTR [rdx],al
  42c7cb:	add    BYTE PTR [rax],al
  42c7cd:	add    BYTE PTR [rax],al
  42c7cf:	add    BYTE PTR [rbp-0x3a],ch
  42c7d2:	rex.X add BYTE PTR [rax],al
  42c7d5:	add    BYTE PTR [rax],al
  42c7d7:	add    BYTE PTR [rax+0x0],al
  42c7da:	add    BYTE PTR [rax],al
  42c7dc:	add    BYTE PTR [rax],al
  42c7de:	add    BYTE PTR [rax],al
  42c7e0:	je     0x42c7a8
  42c7e2:	rex.X add BYTE PTR [rax],al
  42c7e5:	add    BYTE PTR [rax],al
  42c7e7:	add    BYTE PTR [rax],al
  42c7e9:	or     BYTE PTR [rax],al
	...
  42c7ff:	add    BYTE PTR [rbp+0x72],ah
  42c802:	jb     0x42c873
  42c804:	jb     0x42c826
  42c806:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
  42c80d:	imul   edi,DWORD PTR [rdx+0x69],0x6320676e
  42c814:	jne    0x42c888
  42c816:	ins    BYTE PTR es:[rdi],dx
  42c817:	and    BYTE PTR [rbp+0x61],ah
  42c81a:	jae    0x42c895
  42c81c:	and    BYTE PTR [rax+0x61],ch
  42c81f:	outs   dx,BYTE PTR ds:[rsi]
  42c820:	fs ins BYTE PTR es:[rdi],dx
  42c822:	or     al,BYTE PTR gs:[rax]
  42c825:	add    BYTE PTR [rax],al
  42c827:	add    BYTE PTR [rbp+0x72],ah
  42c82a:	jb     0x42c89b
  42c82c:	jb     0x42c84e
  42c82e:	jb     0x42c895
  42c830:	je     0x42c8a4
  42c832:	imul   esp,DWORD PTR [rbp+0x76],0x20676e69
  42c839:	movsxd esi,DWORD PTR [rbp+0x72]
  42c83c:	ins    BYTE PTR es:[rdi],dx
  42c83d:	and    BYTE PTR [rcx+rbp*2+0x62],ch
  42c841:	jb     0x42c8a4
  42c843:	jb     0x42c8be
  42c845:	and    BYTE PTR [rcx+0x6e],ch
  42c848:	outs   dx,WORD PTR ds:[rsi]
  42c84a:	jb     0x42c8b9
  42c84c:	(bad)  
  42c84d:	je     0x42c8b8
  42c84f:	outs   dx,DWORD PTR ds:[rsi]
  42c850:	outs   dx,BYTE PTR ds:[rsi]
  42c851:	or     al,BYTE PTR [rax]
  42c853:	add    BYTE PTR [rax],al
  42c855:	add    BYTE PTR [rax],al
  42c857:	add    BYTE PTR [rbp+0x72],ah
  42c85a:	jb     0x42c8cb
  42c85c:	jb     0x42c87e
  42c85e:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
  42c865:	imul   edi,DWORD PTR [rdx+0x69],0x6320676e
  42c86c:	jne    0x42c8e0
  42c86e:	ins    BYTE PTR es:[rdi],dx
  42c86f:	and    BYTE PTR [rcx+rbp*2+0x62],ch
  42c873:	jb     0x42c8d6
  42c875:	jb     0x42c8f0
  42c877:	or     al,BYTE PTR [rax]
  42c879:	gs jb  0x42c8ee
  42c87c:	outs   dx,DWORD PTR ds:[rsi]
  42c87d:	jb     0x42c89f
  42c87f:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
  42c886:	imul   edi,DWORD PTR [rdx+0x69],0x6320676e
  42c88d:	jne    0x42c901
  42c88f:	ins    BYTE PTR es:[rdi],dx
  42c890:	or     al,BYTE PTR [rax]
	...
  42c89e:	add    BYTE PTR [rax],al
  42c8a0:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  42c8a2:	je     0x42c909
  42c8a4:	cmp    ah,BYTE PTR [rax]
  42c8a6:	add    BYTE PTR [rdi+0x61],dl
  42c8a9:	jb     0x42c919
  42c8ab:	imul   ebp,DWORD PTR [rsi+0x67],0x6300203a
  42c8b2:	jne    0x42c926
  42c8b4:	ins    BYTE PTR es:[rdi],dx
  42c8b5:	cmp    ah,BYTE PTR [rax]
  42c8b7:	add    BYTE PTR [rbx+0x75],ah
  42c8ba:	jb     0x42c928
  42c8bc:	cmp    ah,BYTE PTR [rax]
  42c8be:	je     0x42c932
  42c8c0:	jns    0x42c8e2
  42c8c2:	(bad)  
  42c8c3:	movsxd esi,DWORD PTR [rbp+0x72]
  42c8c6:	ins    BYTE PTR es:[rdi],dx
  42c8c7:	and    BYTE PTR [rip+0x6c65682d],ch        # 0x6ca830fa
  42c8cd:	jo     0x42c8f6
  42c8cf:	and    BYTE PTR [rdi+0x72],ch
  42c8d2:	and    BYTE PTR [rdi],ah
  42c8d4:	movsxd esi,DWORD PTR [rbp+0x72]
  42c8d7:	ins    BYTE PTR es:[rdi],dx
  42c8d8:	and    BYTE PTR [rip+0x6e616d2d],ch        # 0x6ea4360b
  42c8de:	jne    0x42c941
  42c8e0:	ins    BYTE PTR es:[rdi],dx
  42c8e1:	(bad)  
  42c8e2:	and    BYTE PTR [rsi+0x6f],ah
  42c8e5:	jb     0x42c907
  42c8e7:	ins    DWORD PTR es:[rdi],dx
  42c8e8:	outs   dx,DWORD PTR ds:[rsi]
  42c8e9:	jb     0x42c950
  42c8eb:	and    BYTE PTR [rcx+0x6e],ch
  42c8ee:	outs   dx,WORD PTR ds:[rsi]
  42c8f0:	jb     0x42c95f
  42c8f2:	(bad)  
  42c8f3:	je     0x42c95e
  42c8f5:	outs   dx,DWORD PTR ds:[rsi]
  42c8f6:	outs   dx,BYTE PTR ds:[rsi]
  42c8f7:	or     al,BYTE PTR [rax]
  42c8f9:	add    BYTE PTR [rax],al
  42c8fb:	add    BYTE PTR [rax],al
  42c8fd:	add    BYTE PTR [rax],al
  42c8ff:	add    BYTE PTR [rbx+rsi*2],bh
  42c902:	je     0x42c968
  42c904:	outs   dx,DWORD PTR ds:[rsi]
  42c905:	jne    0x42c97b
  42c907:	add    BYTE PTR ds:[rax],al
  42c90a:	add    BYTE PTR [rax],al
  42c90c:	add    BYTE PTR [rax],al
  42c90e:	add    BYTE PTR [rax],al
  42c910:	push   rbx
  42c911:	push   rbx
  42c912:	rex.WR pop rdi
  42c914:	rex.XB
  42c915:	rex.RB push r10
  42c917:	push   rsp
  42c918:	pop    rdi
  42c919:	rex.R
  42c91a:	rex.WB push r10
  42c91c:	and    BYTE PTR [rbp+0x6e],ah
  42c91f:	jbe    0x42c98a
  42c921:	jb     0x42c992
  42c923:	outs   dx,BYTE PTR ds:[rsi]
  42c924:	ins    DWORD PTR es:[rdi],dx
  42c925:	outs   dx,BYTE PTR gs:[rsi]
  42c927:	je     0x42c949
  42c929:	jbe    0x42c98c
  42c92b:	jb     0x42c996
  42c92d:	(bad)  
  42c92e:	(bad)  
  42c92f:	ins    BYTE PTR es:[rdi],dx
  42c930:	add    BYTE PTR gs:[rip+0x7061632d],ch        # 0x70a42c64
  42c937:	(bad)  
  42c938:	je     0x42c9a2
  42c93a:	add    BYTE PTR [rsi+0x6f],ch
  42c93d:	and    BYTE PTR [rbp+0x52],dl
  42c940:	rex.WR and BYTE PTR [rbx+0x70],r14b
  42c944:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  42c948:	imul   esp,DWORD PTR [rbp+0x64],0x43000a21
  42c94f:	push   rbp
  42c950:	push   rdx
  42c951:	rex.WR pop rdi
  42c953:	rex.XB
  42c954:	pop    r15
  42c956:	rex.X push rbp
  42c958:	rex.WRX
  42c959:	rex.R
  42c95a:	rex.WR
  42c95b:	add    BYTE PTR [r15+0x75],r13b
  42c95f:	je     0x42c981
  42c961:	outs   dx,DWORD PTR ds:[rsi]
  42c962:	data16 and BYTE PTR [rbp+0x65],ch
  42c966:	ins    DWORD PTR es:[rdi],dx
  42c967:	outs   dx,DWORD PTR ds:[rsi]
  42c968:	jb     0x42c9e3
  42c96a:	or     al,BYTE PTR [rax]
  42c96c:	push   rbx
  42c96d:	push   rbx
  42c96e:	rex.WR pop rdi
  42c970:	rex.XB
  42c971:	rex.RB push r10
  42c973:	push   rsp
  42c974:	pop    rdi
  42c975:	rex.R
  42c976:	rex.WB push r10
  42c978:	add    BYTE PTR [rbx+0x53],dl
  42c97b:	rex.WR pop rdi
  42c97d:	rex.XB
  42c97e:	rex.RB push r10
  42c980:	push   rsp
  42c981:	pop    rdi
  42c982:	rex.RX
  42c983:	rex.WB
  42c984:	rex.WR
  42c985:	add    BYTE PTR [rip+0x627700],r13b        # 0xa5408c
  42c98c:	rex.RX (bad) 
  42c98e:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  42c996:	outs   dx,DWORD PTR ds:[rsi]
  42c997:	jo     0x42c9fe
  42c999:	outs   dx,BYTE PTR ds:[rsi]
  42c99a:	and    BYTE PTR [rip+0xa73],ah        # 0x42d413
  42c9a0:	push   rdx
  42c9a1:	gs ins DWORD PTR es:[rdi],dx
  42c9a3:	outs   dx,DWORD PTR ds:[rsi]
  42c9a4:	je     0x42ca0b
  42c9a6:	and    BYTE PTR [rsi+0x69],ah
  42c9a9:	ins    BYTE PTR es:[rdi],dx
  42c9aa:	and    BYTE PTR gs:[rsi+0x61],ch
  42c9ae:	ins    DWORD PTR es:[rdi],dx
  42c9af:	and    BYTE PTR gs:[rax+0x61],ch
  42c9b3:	jae    0x42c9d5
  42c9b5:	outs   dx,BYTE PTR ds:[rsi]
  42c9b6:	outs   dx,DWORD PTR ds:[rsi]
  42c9b7:	and    BYTE PTR [rbp+riz*2+0x6e],ch
  42c9bb:	addr32 je 0x42ca26
  42c9be:	and    DWORD PTR [rdx],ecx
  42c9c0:	add    BYTE PTR [rdx+0x61],ah
  42c9c3:	and    BYTE PTR fs:[rdi+0x75],ch
  42c9c7:	je     0x42ca39
  42c9c9:	jne    0x42ca3f
  42c9cb:	and    BYTE PTR [rdi+0x6c],ah
  42c9ce:	outs   dx,DWORD PTR ds:[rsi]
  42c9cf:	(bad)  
  42c9d1:	or     al,BYTE PTR [rax]
  42c9d3:	(bad)  
  42c9d4:	(bad)  
  42c9d5:	add    BYTE PTR [rbx+0x61],al
  42c9d8:	outs   dx,BYTE PTR ds:[rsi]
  42c9d9:	(bad)  
  42c9da:	je     0x42c9fc
  42c9dc:	outs   dx,DWORD PTR ds:[rsi]
  42c9dd:	jo     0x42ca44
  42c9df:	outs   dx,BYTE PTR ds:[rsi]
  42c9e0:	and    BYTE PTR [rdi],ah
  42c9e2:	and    eax,0xa212773
  42c9e7:	add    BYTE PTR [rbp+0x73],dl
  42c9ea:	imul   ebp,DWORD PTR [rsi+0x67],0x612d2d20
  42c9f1:	outs   dx,BYTE PTR ds:[rsi]
  42c9f2:	jns    0x42ca55
  42c9f4:	jne    0x42ca6a
  42c9f6:	push   0x20726f20
  42c9fb:	sub    eax,0x6f72702d
  42ca00:	js     0x42ca7b
  42ca02:	sub    eax,0x61796e61
  42ca07:	jne    0x42ca7d
  42ca09:	push   0x74697720
  42ca0e:	push   0x6c707520
  42ca13:	outs   dx,DWORD PTR ds:[rsi]
  42ca14:	(bad)  
  42ca15:	and    BYTE PTR fs:[rsi+0x72],ah
  42ca19:	outs   dx,DWORD PTR ds:[rsi]
  42ca1a:	ins    DWORD PTR es:[rdi],dx
  42ca1b:	and    BYTE PTR [rbx+0x74],dh
  42ca1e:	imul   ebp,DWORD PTR fs:[rsi+0x20],0x6f766e69
  42ca26:	ins    BYTE PTR es:[rdi],dx
  42ca27:	jbe    0x42ca8e
  42ca29:	jae    0x42ca4b
  42ca2b:	(bad)  
  42ca2c:	and    BYTE PTR [rdx+0x69],ah
  42ca2f:	and    BYTE PTR [edx+0x69],dh
  42ca33:	jae    0x42caa0
  42ca35:	and    BYTE PTR [rdi+0x66],ch
  42ca38:	and    BYTE PTR [rcx+0x74],ch
  42ca3b:	and    BYTE PTR [rsi+0x6f],ch
  42ca3e:	je     0x42ca60
  42ca40:	ja     0x42cab1
  42ca42:	jb     0x42caaf
  42ca44:	imul   ebp,DWORD PTR [rsi+0x67],0x7355202e
  42ca4b:	and    BYTE PTR gs:[rcx+0x20],ah
  42ca4f:	je     0x42cab6
  42ca51:	ins    DWORD PTR es:[rdi],dx
  42ca52:	jo     0x42cac3
  42ca54:	jb     0x42cab7
  42ca56:	jb     0x42cad1
  42ca58:	and    BYTE PTR [rsi+0x69],ah
  42ca5b:	ins    BYTE PTR es:[rdi],dx
  42ca5c:	and    BYTE PTR gs:[rdi+0x72],ch
  42ca60:	and    BYTE PTR [rcx+0x20],ah
  42ca63:	imul   di,WORD PTR [rax+0x65],0x2064
  42ca69:	(bad)  
  42ca6a:	jne    0x42cae0
  42ca6c:	push   0x70797420
  42ca71:	and    BYTE PTR gs:[rcx+0x6e],ch
  42ca75:	jae    0x42caeb
  42ca77:	gs (bad) 
  42ca79:	and    DWORD PTR fs:[rdx],ecx
  42ca7c:	add    BYTE PTR [rsi],ch
  42ca7e:	add    BYTE PTR [rsi+0x63],ah
  42ca81:	outs   dx,BYTE PTR ds:[rsi]
  42ca82:	je     0x42caf0
  42ca84:	and    BYTE PTR [rsi+0x61],ah
  42ca87:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206e6f20
  42ca8f:	fs cmp ax,0x6425
  42ca94:	cmp    ah,BYTE PTR [rax]
  42ca96:	and    eax,0xa000a73
  42ca9b:	pop    rbx
  42ca9c:	and    eax,0x252f756c
  42caa1:	ins    BYTE PTR es:[rdi],dx
  42caa2:	jne    0x42cb01
  42caa4:	cmp    ah,BYTE PTR [rax]
  42caa6:	and    eax,0x2d2d2073
  42caab:	and    BYTE PTR ds:[rip+0x2d000a73],ah        # 0x2d42d525
  42cab2:	sub    eax,0x7275635f
  42cab7:	ins    BYTE PTR es:[rdi],dx
  42cab8:	pop    rdi
  42cab9:	sub    eax,0x7325002d
  42cabe:	and    eax,0x3a000a73
  42cac3:	(bad)  
  42cac4:	(bad)  
  42cac5:	add    BYTE PTR [rbx+0x55],al
  42cac8:	push   rdx
  42cac9:	rex.WR
  42caca:	rex.WRXB push r8
  42cacc:	push   rsp
  42cacd:	pop    rdi
  42cace:	push   rsp
  42cacf:	rex.XB push r8
  42cad1:	pop    rdi
  42cad2:	rex.WRX
  42cad3:	rex.WRXB
  42cad4:	rex.R
  42cad5:	rex.RB
  42cad6:	rex.WR
  42cad7:	pop    r9
  42cad9:	add    BYTE PTR [rbx+0x55],al
  42cadc:	push   rdx
  42cadd:	rex.WR
  42cade:	rex.WRXB push r8
  42cae0:	push   rsp
  42cae1:	pop    rdi
  42cae2:	push   rdi
  42cae3:	push   rdx
  42cae4:	rex.WB push r12
  42cae6:	rex.RB
  42cae7:	rex.R
  42cae8:	push   r12
  42caea:	add    BYTE PTR [r11+0x55],al
  42caee:	push   rdx
  42caef:	rex.WR
  42caf0:	rex.WRXB push r8
  42caf2:	push   rsp
  42caf3:	pop    rdi
  42caf4:	push   rsp
  42caf5:	rex.XB push r8
  42caf7:	pop    rdi
  42caf8:	rex.RX
  42caf9:	push   r11
  42cafb:	push   rsp
  42cafc:	rex.WRXB push r8
  42cafe:	rex.RB
  42caff:	rex.WRX add BYTE PTR [rbx+0x55],r8b
  42cb03:	push   rdx
  42cb04:	rex.WR
  42cb05:	rex.WRXB push r8
  42cb07:	push   rsp
  42cb08:	pop    rdi
  42cb09:	rex.WB
  42cb0a:	rex.WRX push rsp
  42cb0c:	rex.RB push r10
  42cb0e:	rex.WR
  42cb0f:	rex.RB
  42cb10:	push   r14
  42cb12:	rex.RB
  42cb13:	rex.R
  42cb14:	push   r12
  42cb16:	add    BYTE PTR [r11+0x55],al
  42cb1a:	push   rdx
  42cb1b:	rex.WR
  42cb1c:	rex.WRXB push r8
  42cb1e:	push   rsp
  42cb1f:	pop    rdi
  42cb20:	push   rdx
  42cb21:	rex.RB
  42cb22:	rex.B
  42cb23:	rex.R
  42cb24:	rex.R
  42cb25:	push   r12
  42cb27:	add    BYTE PTR [r11+0x55],al
  42cb2b:	push   rdx
  42cb2c:	rex.WR
  42cb2d:	rex.WRXB push r8
  42cb2f:	push   rsp
  42cb30:	pop    rdi
  42cb31:	push   rdi
  42cb32:	push   rdx
  42cb33:	rex.WB push r12
  42cb35:	rex.RB
  42cb36:	rex.RX push rbp
  42cb38:	rex.WRX
  42cb39:	rex.XB push r12
  42cb3b:	rex.WB
  42cb3c:	rex.WRXB
  42cb3d:	rex.WRX add BYTE PTR [rbx+0x55],r8b
  42cb41:	push   rdx
  42cb42:	rex.WR
  42cb43:	rex.WRXB push r8
  42cb45:	push   rsp
  42cb46:	pop    rdi
  42cb47:	push   rdx
  42cb48:	rex.RB
  42cb49:	rex.B
  42cb4a:	rex.R
  42cb4b:	rex.RX push rbp
  42cb4d:	rex.WRX
  42cb4e:	rex.XB push r12
  42cb50:	rex.WB
  42cb51:	rex.WRXB
  42cb52:	rex.WRX add BYTE PTR [rbx+0x55],r8b
  42cb56:	push   rdx
  42cb57:	rex.WR
  42cb58:	rex.WRXB push r8
  42cb5a:	push   rsp
  42cb5b:	pop    rdi
  42cb5c:	push   rbx
  42cb5d:	rex.RB
  42cb5e:	rex.RB
  42cb5f:	rex.WXB
  42cb60:	rex.R
  42cb61:	push   r12
  42cb63:	add    BYTE PTR [r11+0x55],al
  42cb67:	push   rdx
  42cb68:	rex.WR
  42cb69:	rex.WRXB push r8
  42cb6b:	push   rsp
  42cb6c:	pop    rdi
  42cb6d:	push   rbx
  42cb6e:	rex.RB
  42cb6f:	rex.RB
  42cb70:	rex.WXB
  42cb71:	rex.RX push rbp
  42cb73:	rex.WRX
  42cb74:	rex.XB push r12
  42cb76:	rex.WB
  42cb77:	rex.WRXB
  42cb78:	rex.WRX add BYTE PTR [rbx+0x55],r8b
  42cb7c:	push   rdx
  42cb7d:	rex.WR
  42cb7e:	rex.WRXB push r8
  42cb80:	push   rsp
  42cb81:	pop    rdi
  42cb82:	rex.X push rbp
  42cb84:	rex.RX
  42cb85:	rex.RX
  42cb86:	rex.RB push r10
  42cb88:	push   rbx
  42cb89:	rex.WB pop r10
  42cb8b:	add    BYTE PTR [r11+0x55],r8b
  42cb8f:	push   rdx
  42cb90:	rex.WR
  42cb91:	rex.WRXB push r8
  42cb93:	push   rsp
  42cb94:	pop    rdi
  42cb95:	push   rbp
  42cb96:	push   rdx
  42cb97:	rex.WR add BYTE PTR [rbx+0x55],r8b
  42cb9b:	push   rdx
  42cb9c:	rex.WR
  42cb9d:	rex.WRXB push r8
  42cb9f:	push   rsp
  42cba0:	pop    rdi
  42cba1:	rex.WB
  42cba2:	rex.WRX
  42cba3:	rex.RX
  42cba4:	rex.WB
  42cba5:	rex.WR
  42cba6:	rex.RB push r11
  42cba8:	rex.WB pop r10
  42cbaa:	rex.RB pop r15
  42cbac:	rex.WR
  42cbad:	push   r10
  42cbaf:	rex.RXB
  42cbb0:	add    BYTE PTR [r11+0x55],r8b
  42cbb4:	push   rdx
  42cbb5:	rex.WR
  42cbb6:	rex.WRXB push r8
  42cbb8:	push   rsp
  42cbb9:	pop    rdi
  42cbba:	rex.WRX
  42cbbb:	rex.WRXB push r8
  42cbbd:	push   rdx
  42cbbe:	rex.WRXB
  42cbbf:	rex.RXB push r10
  42cbc1:	rex.RB push r11
  42cbc3:	push   rbx
  42cbc4:	add    BYTE PTR [rbx+0x55],al
  42cbc7:	push   rdx
  42cbc8:	rex.WR
  42cbc9:	rex.WRXB push r8
  42cbcb:	push   rsp
  42cbcc:	pop    rdi
  42cbcd:	rex.WRX
  42cbce:	rex.WRXB
  42cbcf:	rex.X
  42cbd0:	rex.WRXB
  42cbd1:	rex.R pop rcx
  42cbd3:	add    BYTE PTR [rbx+0x55],al
  42cbd6:	push   rdx
  42cbd7:	rex.WR
  42cbd8:	rex.WRXB push r8
  42cbda:	push   rsp
  42cbdb:	pop    rdi
  42cbdc:	rex.W
  42cbdd:	rex.RB
  42cbde:	rex.B
  42cbdf:	rex.R
  42cbe0:	rex.RB push r10
  42cbe2:	add    BYTE PTR [rbx+0x55],al
  42cbe5:	push   rdx
  42cbe6:	rex.WR
  42cbe7:	rex.WRXB push r8
  42cbe9:	push   rsp
  42cbea:	pop    rdi
  42cbeb:	push   rax
  42cbec:	push   rdx
  42cbed:	rex.WRXB pop r8
  42cbef:	pop    rcx
  42cbf0:	add    BYTE PTR [rbx+0x55],al
  42cbf3:	push   rdx
  42cbf4:	rex.WR
  42cbf5:	rex.WRXB push r8
  42cbf7:	push   rsp
  42cbf8:	pop    rdi
  42cbf9:	pop    rax
  42cbfa:	rex.WRXB
  42cbfb:	push   r13
  42cbfd:	push   rsp
  42cbfe:	rex.W xor bl,BYTE PTR [rdi+0x42]
  42cc02:	rex.RB
  42cc03:	push   r10
  42cc05:	rex.RB push r10
  42cc07:	add    BYTE PTR [rbx+0x55],al
  42cc0a:	push   rdx
  42cc0b:	rex.WR
  42cc0c:	rex.WRXB push r8
  42cc0e:	push   rsp
  42cc0f:	pop    rdi
  42cc10:	push   rax
  42cc11:	push   rdx
  42cc12:	rex.WRXB pop r8
  42cc14:	pop    rcx
  42cc15:	push   rbp
  42cc16:	push   rbx
  42cc17:	rex.RB push r10
  42cc19:	push   rax
  42cc1a:	push   rdi
  42cc1b:	add    BYTE PTR [rbx+0x55],r8b
  42cc1f:	push   rdx
  42cc20:	rex.WR
  42cc21:	rex.WRXB push r8
  42cc23:	push   rsp
  42cc24:	pop    rdi
  42cc25:	push   rax
  42cc26:	push   rdx
  42cc27:	rex.WRXB pop r8
  42cc29:	pop    rcx
  42cc2a:	push   rsp
  42cc2b:	pop    rcx
  42cc2c:	push   rax
  42cc2d:	add    BYTE PTR [r11+0x55],r8b
  42cc31:	push   rdx
  42cc32:	rex.WR
  42cc33:	rex.WRXB push r8
  42cc35:	push   rsp
  42cc36:	pop    rdi
  42cc37:	rex.W push rsp
  42cc39:	push   rsp
  42cc3a:	push   rax
  42cc3b:	push   rax
  42cc3c:	push   rdx
  42cc3d:	rex.WRXB pop r8
  42cc3f:	pop    rcx
  42cc40:	push   rsp
  42cc41:	push   rbp
  42cc42:	rex.WRX
  42cc43:	rex.WRX
  42cc44:	rex.RB
  42cc45:	rex.WR add BYTE PTR [rbx+0x55],r8b
  42cc49:	push   rdx
  42cc4a:	rex.WR
  42cc4b:	rex.WRXB push r8
  42cc4d:	push   rsp
  42cc4e:	pop    rdi
  42cc4f:	push   rax
  42cc50:	push   rdx
  42cc51:	rex.RB pop r15
  42cc53:	push   rax
  42cc54:	push   rdx
  42cc55:	rex.WRXB pop r8
  42cc57:	pop    rcx
  42cc58:	add    BYTE PTR [rbx+0x55],al
  42cc5b:	push   rdx
  42cc5c:	rex.WR
  42cc5d:	rex.WRXB push r8
  42cc5f:	push   rsp
  42cc60:	pop    rdi
  42cc61:	push   rax
  42cc62:	push   rdx
  42cc63:	rex.WRXB pop r8
  42cc65:	pop    rcx
  42cc66:	push   r13
  42cc68:	push   rsp
  42cc69:	rex.W add BYTE PTR [rbx+0x55],al
  42cc6d:	push   rdx
  42cc6e:	rex.WR
  42cc6f:	rex.WRXB push r8
  42cc71:	push   rsp
  42cc72:	pop    rdi
  42cc73:	rex.WRX
  42cc74:	rex.WRXB push r8
  42cc76:	push   rdx
  42cc77:	rex.WRXB pop r8
  42cc79:	pop    rcx
  42cc7a:	add    BYTE PTR [rbx+0x55],al
  42cc7d:	push   rdx
  42cc7e:	rex.WR
  42cc7f:	rex.WRXB push r8
  42cc81:	push   rsp
  42cc82:	pop    rdi
  42cc83:	rex.RX
  42cc84:	rex.B
  42cc85:	rex.WB
  42cc86:	rex.WR
  42cc87:	rex.WRXB
  42cc88:	rex.WRX
  42cc89:	rex.RB push r10
  42cc8b:	push   rdx
  42cc8c:	rex.WRXB push r10
  42cc8e:	add    BYTE PTR [rbx+0x55],al
  42cc91:	push   rdx
  42cc92:	rex.WR
  42cc93:	rex.WRXB push r8
  42cc95:	push   rsp
  42cc96:	pop    rdi
  42cc97:	push   rbp
  42cc98:	push   rax
  42cc99:	rex.WR
  42cc9a:	rex.WRXB
  42cc9b:	rex.B
  42cc9c:	add    BYTE PTR [rbx+0x55],r8b
  42cca0:	push   rdx
  42cca1:	rex.WR
  42cca2:	rex.WRXB push r8
  42cca4:	push   rsp
  42cca5:	pop    rdi
  42cca6:	rex.R
  42cca7:	rex.WB push r10
  42cca9:	rex.WR
  42ccaa:	rex.WB push r11
  42ccac:	push   rsp
  42ccad:	rex.WRXB
  42ccae:	rex.WRX
  42ccaf:	rex.WR pop rcx
  42ccb1:	add    BYTE PTR [rbx+0x55],al
  42ccb4:	push   rdx
  42ccb5:	rex.WR
  42ccb6:	rex.WRXB push r8
  42ccb8:	push   rsp
  42ccb9:	pop    rdi
  42ccba:	push   r8
  42ccbc:	push   rax
  42ccbd:	rex.RB
  42ccbe:	rex.WRX
  42ccbf:	add    BYTE PTR [rbx+0x55],r8b
  42ccc3:	push   rdx
  42ccc4:	rex.WR
  42ccc5:	rex.WRXB push r8
  42ccc7:	push   rsp
  42ccc8:	pop    rdi
  42ccc9:	rex.WRX
  42ccca:	rex.RB push r12
  42cccc:	push   rdx
  42cccd:	rex.XB add BYTE PTR [r11+0x55],al
  42ccd1:	push   rdx
  42ccd2:	rex.WR
  42ccd3:	rex.WRXB push r8
  42ccd5:	push   rsp
  42ccd6:	pop    rdi
  42ccd7:	push   rsp
  42ccd8:	push   rdx
  42ccd9:	rex.B
  42ccda:	rex.WRX push rbx
  42ccdc:	rex.RX
  42ccdd:	rex.RB push r10
  42ccdf:	push   rsp
  42cce0:	rex.RB pop r8
  42cce2:	push   rsp
  42cce3:	add    BYTE PTR [rbx+0x55],al
  42cce6:	push   rdx
  42cce7:	rex.WR
  42cce8:	rex.WRXB push r8
  42ccea:	push   rsp
  42cceb:	pop    rdi
  42ccec:	rex.WRX
  42cced:	rex.RB push r12
  42ccef:	push   rdx
  42ccf0:	rex.XB pop r15
  42ccf2:	rex.RX
  42ccf3:	rex.WB
  42ccf4:	rex.WR
  42ccf5:	add    BYTE PTR [r11+0x55],r8b
  42ccf9:	push   rdx
  42ccfa:	rex.WR
  42ccfb:	rex.WRXB push r8
  42ccfd:	push   rsp
  42ccfe:	pop    rdi
  42ccff:	push   rbp
  42cd00:	push   rbx
  42cd01:	rex.RB push r10
  42cd03:	push   rax
  42cd04:	push   rdi
  42cd05:	add    BYTE PTR [rbx+0x55],r8b
  42cd09:	push   rdx
  42cd0a:	rex.WR
  42cd0b:	rex.WRXB push r8
  42cd0d:	push   rsp
  42cd0e:	pop    rdi
  42cd0f:	rex.WR
  42cd10:	rex.WRXB
  42cd11:	rex.RXB
  42cd12:	rex.WB
  42cd13:	rex.WRX pop rdi
  42cd15:	rex.WRXB push r8
  42cd17:	push   rsp
  42cd18:	rex.WB
  42cd19:	rex.WRXB
  42cd1a:	rex.WRX push rbx
  42cd1c:	add    BYTE PTR [rbx+0x55],al
  42cd1f:	push   rdx
  42cd20:	rex.WR
  42cd21:	rex.WRXB push r8
  42cd23:	push   rsp
  42cd24:	pop    rdi
  42cd25:	push   rdx
  42cd26:	rex.B
  42cd27:	rex.WRX
  42cd28:	rex.RXB
  42cd29:	add    BYTE PTR [r11+0x55],r8b
  42cd2d:	push   rdx
  42cd2e:	rex.WR
  42cd2f:	rex.WRXB push r8
  42cd31:	push   rsp
  42cd32:	pop    rdi
  42cd33:	rex.RB push r10
  42cd35:	push   rdx
  42cd36:	rex.WRXB push r10
  42cd38:	rex.X push rbp
  42cd3a:	rex.RX
  42cd3b:	rex.RX
  42cd3c:	rex.RB push r10
  42cd3e:	add    BYTE PTR [rbx+0x55],al
  42cd41:	push   rdx
  42cd42:	rex.WR
  42cd43:	rex.WRXB push r8
  42cd45:	push   rsp
  42cd46:	pop    rdi
  42cd47:	push   rsp
  42cd48:	rex.WB
  42cd49:	rex.WRB
  42cd4a:	rex.RB
  42cd4b:	rex.WRXB push r13
  42cd4d:	push   rsp
  42cd4e:	pop    rdi
  42cd4f:	rex.WRB push r11
  42cd51:	add    BYTE PTR [rbx+0x55],al
  42cd54:	push   rdx
  42cd55:	rex.WR
  42cd56:	rex.WRXB push r8
  42cd58:	push   rsp
  42cd59:	pop    rdi
  42cd5a:	rex.RX push rsp
  42cd5c:	push   rax
  42cd5d:	push   rax
  42cd5e:	rex.WRXB push r10
  42cd60:	push   rsp
  42cd61:	add    BYTE PTR [rbx+0x55],al
  42cd64:	push   rdx
  42cd65:	rex.WR
  42cd66:	rex.WRXB push r8
  42cd68:	push   rsp
  42cd69:	pop    rdi
  42cd6a:	rex.RX
  42cd6b:	rex.WRXB
  42cd6c:	rex.WR
  42cd6d:	rex.WR
  42cd6e:	rex.WRXB push r15
  42cd70:	rex.WR
  42cd71:	rex.WRXB
  42cd72:	rex.XB
  42cd73:	push   r12
  42cd75:	rex.WB
  42cd76:	rex.WRXB
  42cd77:	rex.WRX add BYTE PTR [rbx+0x55],r8b
  42cd7b:	push   rdx
  42cd7c:	rex.WR
  42cd7d:	rex.WRXB push r8
  42cd7f:	push   rsp
  42cd80:	pop    rdi
  42cd81:	push   rbp
  42cd82:	rex.WRX push rdx
  42cd84:	rex.RB push r11
  42cd86:	push   rsp
  42cd87:	push   rdx
  42cd88:	rex.WB
  42cd89:	rex.XB push r12
  42cd8b:	rex.RB
  42cd8c:	rex.R pop rdi
  42cd8e:	push   r13
  42cd90:	push   rsp
  42cd91:	rex.W add BYTE PTR [rbx+0x55],al
  42cd95:	push   rdx
  42cd96:	rex.WR
  42cd97:	rex.WRXB push r8
  42cd99:	push   rsp
  42cd9a:	pop    rdi
  42cd9b:	push   rax
  42cd9c:	rex.WRXB push r11
  42cd9e:	push   rsp
  42cd9f:	rex.RX
  42cda0:	rex.WB
  42cda1:	rex.RB
  42cda2:	rex.WR
  42cda3:	rex.R push rbx
  42cda5:	add    BYTE PTR [rbx+0x55],al
  42cda8:	push   rdx
  42cda9:	rex.WR
  42cdaa:	rex.WRXB push r8
  42cdac:	push   rsp
  42cdad:	pop    rdi
  42cdae:	push   rax
  42cdaf:	rex.WRXB push r11
  42cdb1:	push   rsp
  42cdb2:	rex.RX
  42cdb3:	rex.WB
  42cdb4:	rex.RB
  42cdb5:	rex.WR
  42cdb6:	rex.R push rbx
  42cdb8:	rex.WB pop r10
  42cdba:	rex.RB pop r15
  42cdbc:	rex.WR
  42cdbd:	push   r10
  42cdbf:	rex.RXB
  42cdc0:	add    BYTE PTR [r11+0x55],r8b
  42cdc4:	push   rdx
  42cdc5:	rex.WR
  42cdc6:	rex.WRXB push r8
  42cdc8:	push   rsp
  42cdc9:	pop    rdi
  42cdca:	rex.W push rsp
  42cdcc:	push   rsp
  42cdcd:	push   rax
  42cdce:	push   rax
  42cdcf:	rex.WRXB push r11
  42cdd1:	push   rsp
  42cdd2:	add    BYTE PTR [rbx+0x55],al
  42cdd5:	push   rdx
  42cdd6:	rex.WR
  42cdd7:	rex.WRXB push r8
  42cdd9:	push   rsp
  42cdda:	pop    rdi
  42cddb:	push   rdx
  42cddc:	rex.RB
  42cddd:	rex.RX
  42cdde:	rex.RB push r10
  42cde0:	rex.RB push r10
  42cde2:	add    BYTE PTR [rbx+0x55],al
  42cde5:	push   rdx
  42cde6:	rex.WR
  42cde7:	rex.WRXB push r8
  42cde9:	push   rsp
  42cdea:	pop    rdi
  42cdeb:	push   r13
  42cded:	push   rsp
  42cdee:	rex.WRXB push r10
  42cdf0:	rex.RB
  42cdf1:	rex.RX
  42cdf2:	rex.RB push r10
  42cdf4:	rex.RB push r10
  42cdf6:	add    BYTE PTR [rbx+0x55],al
  42cdf9:	push   rdx
  42cdfa:	rex.WR
  42cdfb:	rex.WRXB push r8
  42cdfd:	push   rsp
  42cdfe:	pop    rdi
  42cdff:	push   rbp
  42ce00:	push   rbx
  42ce01:	rex.RB push r10
  42ce03:	rex.B
  42ce04:	rex.RXB
  42ce05:	rex.RB
  42ce06:	rex.WRX push rsp
  42ce08:	add    BYTE PTR [rbx+0x55],al
  42ce0b:	push   rdx
  42ce0c:	rex.WR
  42ce0d:	rex.WRXB push r8
  42ce0f:	push   rsp
  42ce10:	pop    rdi
  42ce11:	rex.W push rsp
  42ce13:	push   rsp
  42ce14:	push   rax
  42ce15:	rex.W
  42ce16:	rex.RB
  42ce17:	rex.B
  42ce18:	rex.R
  42ce19:	rex.RB push r10
  42ce1b:	add    BYTE PTR [rbx+0x55],al
  42ce1e:	push   rdx
  42ce1f:	rex.WR
  42ce20:	rex.WRXB push r8
  42ce22:	push   rsp
  42ce23:	pop    rdi
  42ce24:	rex.WRB
  42ce25:	pop    r8
  42ce27:	push   rdx
  42ce28:	rex.RB
  42ce29:	rex.R
  42ce2a:	rex.WB push r10
  42ce2c:	push   rbx
  42ce2d:	add    BYTE PTR [rbx+0x55],al
  42ce30:	push   rdx
  42ce31:	rex.WR
  42ce32:	rex.WRXB push r8
  42ce34:	push   rsp
  42ce35:	pop    rdi
  42ce36:	push   rax
  42ce37:	push   rdx
  42ce38:	rex.WRXB pop r8
  42ce3a:	pop    rcx
  42ce3b:	rex.W
  42ce3c:	rex.RB
  42ce3d:	rex.B
  42ce3e:	rex.R
  42ce3f:	rex.RB push r10
  42ce41:	add    BYTE PTR [rbx+0x55],al
  42ce44:	push   rdx
  42ce45:	rex.WR
  42ce46:	rex.WRXB push r8
  42ce48:	push   rsp
  42ce49:	pop    rdi
  42ce4a:	rex.W
  42ce4b:	rex.RB
  42ce4c:	rex.B
  42ce4d:	rex.R
  42ce4e:	rex.RB push r10
  42ce50:	rex.WRXB push r8
  42ce52:	push   rsp
  42ce53:	add    BYTE PTR [rbx+0x55],al
  42ce56:	push   rdx
  42ce57:	rex.WR
  42ce58:	rex.WRXB push r8
  42ce5a:	push   rsp
  42ce5b:	pop    rdi
  42ce5c:	rex.W push rsp
  42ce5e:	push   rsp
  42ce5f:	push   rax
  42ce60:	pop    rdi
  42ce61:	push   rsi
  42ce62:	rex.RB push r10
  42ce64:	push   rbx
  42ce65:	rex.WB
  42ce66:	rex.WRXB
  42ce67:	rex.WRX add BYTE PTR [rbx+0x55],r8b
  42ce6b:	push   rdx
  42ce6c:	rex.WR
  42ce6d:	rex.WRXB push r8
  42ce6f:	push   rsp
  42ce70:	pop    rdi
  42ce71:	rex.W push rsp
  42ce73:	push   rsp
  42ce74:	push   rax
  42ce75:	push   r13
  42ce77:	push   rsp
  42ce78:	rex.W add BYTE PTR [rbx+0x55],al
  42ce7c:	push   rdx
  42ce7d:	rex.WR
  42ce7e:	rex.WRXB push r8
  42ce80:	push   rsp
  42ce81:	pop    rdi
  42ce82:	push   rax
  42ce83:	rex.WRXB push r11
  42ce85:	push   rsp
  42ce86:	push   rdx
  42ce87:	rex.RB
  42ce88:	rex.R
  42ce89:	rex.WB push r10
  42ce8b:	add    BYTE PTR [rbx+0x55],al
  42ce8e:	push   rdx
  42ce8f:	rex.WR
  42ce90:	rex.WRXB push r8
  42ce92:	push   rsp
  42ce93:	pop    rdi
  42ce94:	rex.B
  42ce95:	rex.XB
  42ce96:	rex.XB
  42ce97:	rex.RB push r8
  42ce99:	push   rsp
  42ce9a:	pop    rdi
  42ce9b:	rex.RB
  42ce9c:	rex.WRX
  42ce9d:	rex.XB
  42ce9e:	rex.WRXB
  42ce9f:	rex.R
  42cea0:	rex.WB
  42cea1:	rex.WRX
  42cea2:	rex.RXB add BYTE PTR [r8],r8b
  42cea5:	rex.XB push r13
  42cea7:	push   rdx
  42cea8:	rex.WR
  42cea9:	rex.WRXB push r8
  42ceab:	push   rsp
  42ceac:	pop    rdi
  42cead:	push   rsp
  42ceae:	push   rdx
  42ceaf:	rex.B
  42ceb0:	rex.WRX push rbx
  42ceb2:	rex.RX
  42ceb3:	rex.RB push r10
  42ceb5:	pop    rdi
  42ceb6:	rex.RB
  42ceb7:	rex.WRX
  42ceb8:	rex.XB
  42ceb9:	rex.WRXB
  42ceba:	rex.R
  42cebb:	rex.WB
  42cebc:	rex.WRX
  42cebd:	rex.RXB add BYTE PTR [r11+0x55],r8b
  42cec1:	push   rdx
  42cec2:	rex.WR
  42cec3:	rex.WRXB push r8
  42cec5:	push   rsp
  42cec6:	pop    rdi
  42cec7:	rex.WR
  42cec8:	rex.WRXB push r15
  42ceca:	pop    rdi
  42cecb:	push   rbx
  42cecc:	push   rax
  42cecd:	rex.RB
  42cece:	rex.RB
  42cecf:	rex.R pop rdi
  42ced1:	rex.WR
  42ced2:	rex.WB
  42ced3:	rex.WRB
  42ced4:	rex.WB push r12
  42ced6:	add    BYTE PTR [rbx+0x55],al
  42ced9:	push   rdx
  42ceda:	rex.WR
  42cedb:	rex.WRXB push r8
  42cedd:	push   rsp
  42cede:	pop    rdi
  42cedf:	rex.WR
  42cee0:	rex.WRXB push r15
  42cee2:	pop    rdi
  42cee3:	push   rbx
  42cee4:	push   rax
  42cee5:	rex.RB
  42cee6:	rex.RB
  42cee7:	rex.R pop rdi
  42cee9:	push   rsp
  42ceea:	rex.WB
  42ceeb:	rex.WRB
  42ceec:	add    BYTE PTR [r11+0x55],r8b
  42cef0:	push   rdx
  42cef1:	rex.WR
  42cef2:	rex.WRXB push r8
  42cef4:	push   rsp
  42cef5:	pop    rdi
  42cef6:	rex.WRB
  42cef7:	pop    r8
  42cef9:	pop    rdi
  42cefa:	push   rbx
  42cefb:	rex.RB
  42cefc:	rex.WRX
  42cefd:	rex.R pop rdi
  42ceff:	push   rbx
  42cf00:	push   rax
  42cf01:	rex.RB
  42cf02:	rex.RB
  42cf03:	rex.R pop rdi
  42cf05:	rex.WR
  42cf06:	push   r10
  42cf08:	rex.RXB
  42cf09:	add    BYTE PTR [r11+0x55],r8b
  42cf0d:	push   rdx
  42cf0e:	rex.WR
  42cf0f:	rex.WRXB push r8
  42cf11:	push   rsp
  42cf12:	pop    rdi
  42cf13:	rex.WRB
  42cf14:	pop    r8
  42cf16:	pop    rdi
  42cf17:	push   rdx
  42cf18:	rex.RB
  42cf19:	rex.XB push r14
  42cf1b:	pop    rdi
  42cf1c:	push   rbx
  42cf1d:	push   rax
  42cf1e:	rex.RB
  42cf1f:	rex.RB
  42cf20:	rex.R pop rdi
  42cf22:	rex.WR
  42cf23:	push   r10
  42cf25:	rex.RXB
  42cf26:	add    BYTE PTR [r11+0x55],r8b
  42cf2a:	push   rdx
  42cf2b:	rex.WR
  42cf2c:	rex.WRXB push r8
  42cf2e:	push   rsp
  42cf2f:	pop    rdi
  42cf30:	push   rdx
  42cf31:	rex.RB push r11
  42cf33:	push   rbp
  42cf34:	rex.WRB
  42cf35:	rex.RB pop r15
  42cf37:	rex.RX push rdx
  42cf39:	rex.WRXB
  42cf3a:	rex.WRB pop r15
  42cf3c:	rex.WR
  42cf3d:	push   r10
  42cf3f:	rex.RXB
  42cf40:	add    BYTE PTR [r11+0x55],r8b
  42cf44:	push   rdx
  42cf45:	rex.WR
  42cf46:	rex.WRXB push r8
  42cf48:	push   rsp
  42cf49:	pop    rdi
  42cf4a:	rex.WXB
  42cf4b:	rex.RB pop r9
  42cf4d:	push   rax
  42cf4e:	push   r11
  42cf50:	push   rbx
  42cf51:	push   rdi
  42cf52:	add    BYTE PTR [rbx+0x55],r8b
  42cf56:	push   rdx
  42cf57:	rex.WR
  42cf58:	rex.WRXB push r8
  42cf5a:	push   rsp
  42cf5b:	pop    rdi
  42cf5c:	push   rax
  42cf5d:	push   rdx
  42cf5e:	rex.WRXB pop r8
  42cf60:	pop    rcx
  42cf61:	pop    rdi
  42cf62:	rex.WXB
  42cf63:	rex.RB pop r9
  42cf65:	push   rax
  42cf66:	push   r11
  42cf68:	push   rbx
  42cf69:	push   rdi
  42cf6a:	add    BYTE PTR [rbx+0x55],r8b
  42cf6e:	push   rdx
  42cf6f:	rex.WR
  42cf70:	rex.WRXB push r8
  42cf72:	push   rsp
  42cf73:	pop    rdi
  42cf74:	push   rbx
  42cf75:	push   rbx
  42cf76:	rex.W pop rdi
  42cf78:	push   rax
  42cf79:	push   rdx
  42cf7a:	rex.WB push r14
  42cf7c:	push   r12
  42cf7e:	rex.RB pop r15
  42cf80:	rex.WXB
  42cf81:	rex.RB pop r9
  42cf83:	rex.RX
  42cf84:	rex.WB
  42cf85:	rex.WR
  42cf86:	add    BYTE PTR [r11+0x55],r8b
  42cf8a:	push   rdx
  42cf8b:	rex.WR
  42cf8c:	rex.WRXB push r8
  42cf8e:	push   rsp
  42cf8f:	pop    rdi
  42cf90:	push   rbx
  42cf91:	push   rbx
  42cf92:	rex.W pop rdi
  42cf94:	push   rax
  42cf95:	push   rbp
  42cf96:	rex.X
  42cf97:	rex.WR
  42cf98:	rex.WB
  42cf99:	rex.XB pop r15
  42cf9b:	rex.WXB
  42cf9c:	rex.RB pop r9
  42cf9e:	rex.RX
  42cf9f:	rex.WB
  42cfa0:	rex.WR
  42cfa1:	add    BYTE PTR [r8],r8b
  42cfa4:	add    BYTE PTR [rax],al
  42cfa6:	add    BYTE PTR [rax],al
  42cfa8:	rex.XB push r13
  42cfaa:	push   rdx
  42cfab:	rex.WR
  42cfac:	rex.WRXB push r8
  42cfae:	push   rsp
  42cfaf:	pop    rdi
  42cfb0:	push   rbx
  42cfb1:	push   rbx
  42cfb2:	rex.W pop rdi
  42cfb4:	rex.W
  42cfb5:	rex.WRXB push r11
  42cfb7:	push   rsp
  42cfb8:	pop    rdi
  42cfb9:	push   rax
  42cfba:	push   rbp
  42cfbb:	rex.X
  42cfbc:	rex.WR
  42cfbd:	rex.WB
  42cfbe:	rex.XB pop r15
  42cfc0:	rex.WXB
  42cfc1:	rex.RB pop r9
  42cfc3:	pop    rdi
  42cfc4:	rex.WRB
  42cfc5:	rex.R xor eax,0x52554300
  42cfcb:	rex.WR
  42cfcc:	rex.WRXB push r8
  42cfce:	push   rsp
  42cfcf:	pop    rdi
  42cfd0:	rex.XB
  42cfd1:	rex.B
  42cfd2:	rex.WB
  42cfd3:	rex.WRX
  42cfd4:	rex.RX
  42cfd5:	rex.WRXB add BYTE PTR [r11+0x55],r8b
  42cfd9:	push   rdx
  42cfda:	rex.WR
  42cfdb:	rex.WRXB push r8
  42cfdd:	push   rsp
  42cfde:	pop    rdi
  42cfdf:	push   rax
  42cfe0:	push   rdx
  42cfe1:	rex.WRXB pop r8
  42cfe3:	pop    rcx
  42cfe4:	pop    rdi
  42cfe5:	rex.XB
  42cfe6:	rex.B
  42cfe7:	rex.WB
  42cfe8:	rex.WRX
  42cfe9:	rex.RX
  42cfea:	rex.WRXB add BYTE PTR [r11+0x55],r8b
  42cfee:	push   rdx
  42cfef:	rex.WR
  42cff0:	rex.WRXB push r8
  42cff2:	push   rsp
  42cff3:	pop    rdi
  42cff4:	rex.XB
  42cff5:	push   r8
  42cff7:	push   r12
  42cff9:	rex.W add BYTE PTR [rax],al
  42cffc:	add    BYTE PTR [rax],al
  42cffe:	add    BYTE PTR [rax],al
  42d000:	imul   esp,DWORD PTR [rdi+0x6e],0x6e69726f
  42d007:	and    BYTE PTR [eip+0x6e202c73],ah        # 0x6e62fc81
  42d00e:	outs   dx,DWORD PTR ds:[rsi]
  42d00f:	je     0x42d031
  42d011:	jae    0x42d088
  42d013:	jo     0x42d085
  42d015:	outs   dx,DWORD PTR ds:[rsi]
  42d016:	jb     0x42d08c
  42d018:	gs and BYTE PTR fs:[rdx+0x79],ah
  42d01d:	and    BYTE PTR [rcx+rbp*2+0x62],ch
  42d021:	movsxd esi,DWORD PTR [rbp+0x72]
  42d024:	ins    BYTE PTR es:[rdi],dx
  42d025:	or     al,BYTE PTR [rax]
  42d027:	rex.XB push r13
  42d029:	push   rdx
  42d02a:	rex.WR
  42d02b:	rex.WRXB push r8
  42d02d:	push   rsp
  42d02e:	pop    rdi
  42d02f:	push   rax
  42d030:	push   rdx
  42d031:	rex.WRXB pop r8
  42d033:	pop    rcx
  42d034:	pop    rdi
  42d035:	rex.XB
  42d036:	push   r8
  42d038:	push   r12
  42d03a:	rex.W add BYTE PTR [rbx+0x55],al
  42d03e:	push   rdx
  42d03f:	rex.WR
  42d040:	rex.WRXB push r8
  42d042:	push   rsp
  42d043:	pop    rdi
  42d044:	rex.XB push r10
  42d046:	rex.WR
  42d047:	rex.RX
  42d048:	rex.WB
  42d049:	rex.WR
  42d04a:	add    BYTE PTR [r11+0x55],r8b
  42d04e:	push   rdx
  42d04f:	rex.WR
  42d050:	rex.WRXB push r8
  42d052:	push   rsp
  42d053:	pop    rdi
  42d054:	push   rax
  42d055:	push   rdx
  42d056:	rex.WRXB pop r8
  42d058:	pop    rcx
  42d059:	pop    rdi
  42d05a:	rex.XB push r10
  42d05c:	rex.WR
  42d05d:	rex.RX
  42d05e:	rex.WB
  42d05f:	rex.WR
  42d060:	add    BYTE PTR [r11+0x55],r8b
  42d064:	push   rdx
  42d065:	rex.WR
  42d066:	rex.WRXB push r8
  42d068:	push   rsp
  42d069:	pop    rdi
  42d06a:	push   rax
  42d06b:	rex.WB
  42d06c:	rex.WRX
  42d06d:	rex.WRX
  42d06e:	rex.RB
  42d06f:	rex.R push rax
  42d071:	push   rbp
  42d072:	rex.X
  42d073:	rex.WR
  42d074:	rex.WB
  42d075:	rex.XB
  42d076:	rex.WXB
  42d077:	rex.RB pop r9
  42d079:	add    BYTE PTR [rbx+0x55],al
  42d07c:	push   rdx
  42d07d:	rex.WR
  42d07e:	rex.WRXB push r8
  42d080:	push   rsp
  42d081:	pop    rdi
  42d082:	push   rbx
  42d083:	push   rbx
  42d084:	rex.WR
  42d085:	rex.XB
  42d086:	rex.RB push r10
  42d088:	push   rsp
  42d089:	add    BYTE PTR [rbx+0x55],al
  42d08c:	push   rdx
  42d08d:	rex.WR
  42d08e:	rex.WRXB push r8
  42d090:	push   rsp
  42d091:	pop    rdi
  42d092:	push   rax
  42d093:	push   rdx
  42d094:	rex.WRXB pop r8
  42d096:	pop    rcx
  42d097:	pop    rdi
  42d098:	push   rbx
  42d099:	push   rbx
  42d09a:	rex.WR
  42d09b:	rex.XB
  42d09c:	rex.RB push r10
  42d09e:	push   rsp
  42d09f:	add    BYTE PTR [rbx+0x55],al
  42d0a2:	push   rdx
  42d0a3:	rex.WR
  42d0a4:	rex.WRXB push r8
  42d0a6:	push   rsp
  42d0a7:	pop    rdi
  42d0a8:	push   rbx
  42d0a9:	push   rbx
  42d0aa:	rex.WR
  42d0ab:	rex.XB
  42d0ac:	rex.RB push r10
  42d0ae:	push   rsp
  42d0af:	push   rsp
  42d0b0:	pop    rcx
  42d0b1:	push   rax
  42d0b2:	add    BYTE PTR [r11+0x55],r8b
  42d0b6:	push   rdx
  42d0b7:	rex.WR
  42d0b8:	rex.WRXB push r8
  42d0ba:	push   rsp
  42d0bb:	pop    rdi
  42d0bc:	push   rax
  42d0bd:	push   rdx
  42d0be:	rex.WRXB pop r8
  42d0c0:	pop    rcx
  42d0c1:	pop    rdi
  42d0c2:	push   rbx
  42d0c3:	push   rbx
  42d0c4:	rex.WR
  42d0c5:	rex.XB
  42d0c6:	rex.RB push r10
  42d0c8:	push   rsp
  42d0c9:	push   rsp
  42d0ca:	pop    rcx
  42d0cb:	push   rax
  42d0cc:	add    BYTE PTR [r11+0x55],r8b
  42d0d0:	push   rdx
  42d0d1:	rex.WR
  42d0d2:	rex.WRXB push r8
  42d0d4:	push   rsp
  42d0d5:	pop    rdi
  42d0d6:	push   rbx
  42d0d7:	push   rbx
  42d0d8:	rex.WR
  42d0d9:	rex.WXB
  42d0da:	rex.RB pop r9
  42d0dc:	add    BYTE PTR [rbx+0x55],al
  42d0df:	push   rdx
  42d0e0:	rex.WR
  42d0e1:	rex.WRXB push r8
  42d0e3:	push   rsp
  42d0e4:	pop    rdi
  42d0e5:	push   rax
  42d0e6:	push   rdx
  42d0e7:	rex.WRXB pop r8
  42d0e9:	pop    rcx
  42d0ea:	pop    rdi
  42d0eb:	push   rbx
  42d0ec:	push   rbx
  42d0ed:	rex.WR
  42d0ee:	rex.WXB
  42d0ef:	rex.RB pop r9
  42d0f1:	add    BYTE PTR [rbx+0x55],al
  42d0f4:	push   rdx
  42d0f5:	rex.WR
  42d0f6:	rex.WRXB push r8
  42d0f8:	push   rsp
  42d0f9:	pop    rdi
  42d0fa:	push   rbx
  42d0fb:	push   rbx
  42d0fc:	rex.WR
  42d0fd:	rex.WXB
  42d0fe:	rex.RB pop r9
  42d100:	push   rsp
  42d101:	pop    rcx
  42d102:	push   rax
  42d103:	add    BYTE PTR [r11+0x55],r8b
  42d107:	push   rdx
  42d108:	rex.WR
  42d109:	rex.WRXB push r8
  42d10b:	push   rsp
  42d10c:	pop    rdi
  42d10d:	push   rax
  42d10e:	push   rdx
  42d10f:	rex.WRXB pop r8
  42d111:	pop    rcx
  42d112:	pop    rdi
  42d113:	push   rbx
  42d114:	push   rbx
  42d115:	rex.WR
  42d116:	rex.WXB
  42d117:	rex.RB pop r9
  42d119:	push   rsp
  42d11a:	pop    rcx
  42d11b:	push   rax
  42d11c:	add    BYTE PTR [r11+0x55],r8b
  42d120:	push   rdx
  42d121:	rex.WR
  42d122:	rex.WRXB push r8
  42d124:	push   rsp
  42d125:	pop    rdi
  42d126:	push   rbx
  42d127:	push   rbx
  42d128:	rex.WR pop rdi
  42d12a:	push   rsi
  42d12b:	rex.RB push r10
  42d12d:	rex.WB
  42d12e:	rex.RX pop rcx
  42d130:	push   rax
  42d131:	rex.RB
  42d132:	rex.RB push r10
  42d134:	add    BYTE PTR [rbx+0x55],al
  42d137:	push   rdx
  42d138:	rex.WR
  42d139:	rex.WRXB push r8
  42d13b:	push   rsp
  42d13c:	pop    rdi
  42d13d:	push   rbx
  42d13e:	push   rbx
  42d13f:	rex.WR pop rdi
  42d141:	push   rsi
  42d142:	rex.RB push r10
  42d144:	rex.WB
  42d145:	rex.RX pop rcx
  42d147:	rex.W
  42d148:	rex.WRXB push r11
  42d14a:	push   rsp
  42d14b:	add    BYTE PTR [rbx+0x55],al
  42d14e:	push   rdx
  42d14f:	rex.WR
  42d150:	rex.WRXB push r8
  42d152:	push   rsp
  42d153:	pop    rdi
  42d154:	push   rax
  42d155:	push   rdx
  42d156:	rex.WRXB pop r8
  42d158:	pop    rcx
  42d159:	pop    rdi
  42d15a:	push   rbx
  42d15b:	push   rbx
  42d15c:	rex.WR pop rdi
  42d15e:	push   rsi
  42d15f:	rex.RB push r10
  42d161:	rex.WB
  42d162:	rex.RX pop rcx
  42d164:	push   rax
  42d165:	rex.RB
  42d166:	rex.RB push r10
  42d168:	add    BYTE PTR [rbx+0x55],al
  42d16b:	push   rdx
  42d16c:	rex.WR
  42d16d:	rex.WRXB push r8
  42d16f:	push   rsp
  42d170:	pop    rdi
  42d171:	push   rax
  42d172:	push   rdx
  42d173:	rex.WRXB pop r8
  42d175:	pop    rcx
  42d176:	pop    rdi
  42d177:	push   rbx
  42d178:	push   rbx
  42d179:	rex.WR pop rdi
  42d17b:	push   rsi
  42d17c:	rex.RB push r10
  42d17e:	rex.WB
  42d17f:	rex.RX pop rcx
  42d181:	rex.W
  42d182:	rex.WRXB push r11
  42d184:	push   rsp
  42d185:	add    BYTE PTR [rbx+0x55],al
  42d188:	push   rdx
  42d189:	rex.WR
  42d18a:	rex.WRXB push r8
  42d18c:	push   rsp
  42d18d:	pop    rdi
  42d18e:	push   rbx
  42d18f:	push   rbx
  42d190:	rex.WR pop rdi
  42d192:	push   rsi
  42d193:	rex.RB push r10
  42d195:	rex.WB
  42d196:	rex.RX pop rcx
  42d198:	push   rbx
  42d199:	push   rsp
  42d19a:	push   r12
  42d19c:	push   rbp
  42d19d:	push   rbx
  42d19e:	add    BYTE PTR [rbx+0x55],al
  42d1a1:	push   rdx
  42d1a2:	rex.WR
  42d1a3:	rex.WRXB push r8
  42d1a5:	push   rsp
  42d1a6:	pop    rdi
  42d1a7:	push   rbx
  42d1a8:	push   rbx
  42d1a9:	rex.WR push rsi
  42d1ab:	rex.RB push r10
  42d1ad:	push   rbx
  42d1ae:	rex.WB
  42d1af:	rex.WRXB
  42d1b0:	rex.WRX add BYTE PTR [rbx+0x55],r8b
  42d1b4:	push   rdx
  42d1b5:	rex.WR
  42d1b6:	rex.WRXB push r8
  42d1b8:	push   rsp
  42d1b9:	pop    rdi
  42d1ba:	push   rbx
  42d1bb:	push   rbx
  42d1bc:	rex.WR pop rdi
  42d1be:	rex.RX
  42d1bf:	rex.B
  42d1c0:	rex.WR push rbx
  42d1c2:	rex.RB push r11
  42d1c4:	push   rsp
  42d1c5:	push   r10
  42d1c7:	push   rsp
  42d1c8:	add    BYTE PTR [rbx+0x55],al
  42d1cb:	push   rdx
  42d1cc:	rex.WR
  42d1cd:	rex.WRXB push r8
  42d1cf:	push   rsp
  42d1d0:	pop    rdi
  42d1d1:	push   rax
  42d1d2:	push   rdx
  42d1d3:	rex.WRXB pop r8
  42d1d5:	pop    rcx
  42d1d6:	pop    rdi
  42d1d7:	push   rbx
  42d1d8:	push   rbx
  42d1d9:	rex.WR push rsi
  42d1db:	rex.RB push r10
  42d1dd:	push   rbx
  42d1de:	rex.WB
  42d1df:	rex.WRXB
  42d1e0:	rex.WRX add BYTE PTR [rbx+0x55],r8b
  42d1e4:	push   rdx
  42d1e5:	rex.WR
  42d1e6:	rex.WRXB push r8
  42d1e8:	push   rsp
  42d1e9:	pop    rdi
  42d1ea:	push   rax
  42d1eb:	push   r12
  42d1ed:	rex.W pop rdi
  42d1ef:	push   r11
  42d1f1:	pop    rdi
  42d1f2:	rex.WB push r11
  42d1f4:	add    BYTE PTR [rdi+0x0],bl
  42d1f7:	and    eax,0x73252f73
  42d1fc:	jae    0x42d271
  42d1fe:	push   0x6f6e6b2f
  42d203:	ja     0x42d273
  42d205:	pop    rdi
  42d206:	push   0x7374736f
  42d20b:	add    BYTE PTR [rbx+0x55],al
  42d20e:	push   rdx
  42d20f:	rex.WR
  42d210:	rex.WRXB push r8
  42d212:	push   rsp
  42d213:	pop    rdi
  42d214:	push   rbx
  42d215:	push   rbx
  42d216:	rex.W pop rdi
  42d218:	rex.WXB
  42d219:	rex.WRX
  42d21a:	rex.WRXB push r15
  42d21c:	rex.WRX
  42d21d:	rex.W
  42d21e:	rex.WRXB push r11
  42d220:	push   rsp
  42d221:	push   rbx
  42d222:	add    BYTE PTR [rbx+0x55],al
  42d225:	push   rdx
  42d226:	rex.WR
  42d227:	rex.WRXB push r8
  42d229:	push   rsp
  42d22a:	pop    rdi
  42d22b:	rex.XB push r10
  42d22d:	rex.WR
  42d22e:	rex.RX add BYTE PTR [rbx+0x55],r8b
  42d232:	push   rdx
  42d233:	rex.WR
  42d234:	rex.WRXB push r8
  42d236:	push   rsp
  42d237:	pop    rdi
  42d238:	rex.RX
  42d239:	rex.WB
  42d23a:	rex.WR
  42d23b:	rex.RB push r12
  42d23d:	rex.WB
  42d23e:	rex.WRB
  42d23f:	add    BYTE PTR [r11+0x55],r8b
  42d243:	push   rdx
  42d244:	rex.WR
  42d245:	rex.WRXB push r8
  42d247:	push   rsp
  42d248:	pop    rdi
  42d249:	push   rcx
  42d24a:	push   rbp
  42d24b:	rex.WRXB push r12
  42d24d:	add    BYTE PTR [r11+0x55],r8b
  42d251:	push   rdx
  42d252:	rex.WR
  42d253:	rex.WRXB push r8
  42d255:	push   rsp
  42d256:	pop    rdi
  42d257:	push   rax
  42d258:	rex.WRXB push r11
  42d25a:	push   rsp
  42d25b:	push   rcx
  42d25c:	push   rbp
  42d25d:	rex.WRXB push r12
  42d25f:	add    BYTE PTR [r11+0x55],r8b
  42d263:	push   rdx
  42d264:	rex.WR
  42d265:	rex.WRXB push r8
  42d267:	push   rsp
  42d268:	pop    rdi
  42d269:	push   rax
  42d26a:	push   rdx
  42d26b:	rex.RB push r9
  42d26d:	push   rbp
  42d26e:	rex.WRXB push r12
  42d270:	add    BYTE PTR [r11+0x55],r8b
  42d274:	push   rdx
  42d275:	rex.WR
  42d276:	rex.WRXB push r8
  42d278:	push   rsp
  42d279:	pop    rdi
  42d27a:	rex.XB
  42d27b:	rex.WRXB
  42d27c:	rex.WRXB
  42d27d:	rex.WXB
  42d27e:	rex.WB
  42d27f:	add    BYTE PTR [r11+0x55],r8b
  42d283:	push   rdx
  42d284:	rex.WR
  42d285:	rex.WRXB push r8
  42d287:	push   rsp
  42d288:	pop    rdi
  42d289:	rex.XB
  42d28a:	rex.WRXB
  42d28b:	rex.WRXB
  42d28c:	rex.WXB
  42d28d:	rex.WB
  42d28e:	rex.RB
  42d28f:	rex.RX
  42d290:	rex.WB
  42d291:	rex.WR
  42d292:	add    BYTE PTR [r11+0x55],r8b
  42d296:	push   rdx
  42d297:	rex.WR
  42d298:	rex.WRXB push r8
  42d29a:	push   rsp
  42d29b:	pop    rdi
  42d29c:	rex.XB
  42d29d:	rex.WRXB
  42d29e:	rex.WRXB
  42d29f:	rex.WXB
  42d2a0:	rex.WB
  42d2a1:	rex.RB push r11
  42d2a3:	rex.RB push r11
  42d2a5:	push   rbx
  42d2a6:	rex.WB
  42d2a7:	rex.WRXB
  42d2a8:	rex.WRX add BYTE PTR [rbx+0x55],r8b
  42d2ac:	push   rdx
  42d2ad:	rex.WR
  42d2ae:	rex.WRXB push r8
  42d2b0:	push   rsp
  42d2b1:	pop    rdi
  42d2b2:	rex.XB
  42d2b3:	rex.WRXB
  42d2b4:	rex.WRXB
  42d2b5:	rex.WXB
  42d2b6:	rex.WB
  42d2b7:	rex.RB
  42d2b8:	rex.WX
  42d2b9:	push   r10
  42d2bb:	add    BYTE PTR [rbx+0x55],al
  42d2be:	push   rdx
  42d2bf:	rex.WR
  42d2c0:	rex.WRXB push r8
  42d2c2:	push   rsp
  42d2c3:	pop    rdi
  42d2c4:	push   rsp
  42d2c5:	rex.WB
  42d2c6:	rex.WRB
  42d2c7:	rex.RB
  42d2c8:	rex.XB
  42d2c9:	rex.WRXB
  42d2ca:	rex.WRX
  42d2cb:	rex.R
  42d2cc:	rex.WB push r12
  42d2ce:	rex.WB
  42d2cf:	rex.WRXB
  42d2d0:	rex.WRX add BYTE PTR [rbx+0x55],r8b
  42d2d4:	push   rdx
  42d2d5:	rex.WR
  42d2d6:	rex.WRXB push r8
  42d2d8:	push   rsp
  42d2d9:	pop    rdi
  42d2da:	push   rsp
  42d2db:	rex.WB
  42d2dc:	rex.WRB
  42d2dd:	rex.RB push r14
  42d2df:	rex.B
  42d2e0:	rex.WR push rbp
  42d2e2:	add    BYTE PTR [r11+0x55],r8b
  42d2e6:	push   rdx
  42d2e7:	rex.WR
  42d2e8:	rex.WRXB push r8
  42d2ea:	push   rsp
  42d2eb:	pop    rdi
  42d2ec:	rex.XB push r13
  42d2ee:	push   rbx
  42d2ef:	push   rsp
  42d2f0:	rex.WRXB
  42d2f1:	rex.WRB push r10
  42d2f3:	rex.RB push r9
  42d2f5:	push   rbp
  42d2f6:	rex.RB push r11
  42d2f8:	push   rsp
  42d2f9:	add    BYTE PTR [rbx+0x55],al
  42d2fc:	push   rdx
  42d2fd:	rex.WR
  42d2fe:	rex.WRXB push r8
  42d300:	push   rsp
  42d301:	pop    rdi
  42d302:	push   rbx
  42d303:	push   rsp
  42d304:	rex.R
  42d305:	rex.RB push r10
  42d307:	push   rdx
  42d308:	add    BYTE PTR [rbx+0x55],al
  42d30b:	push   rdx
  42d30c:	rex.WR
  42d30d:	rex.WRXB push r8
  42d30f:	push   rsp
  42d310:	pop    rdi
  42d311:	rex.WB
  42d312:	rex.WRX push rsp
  42d314:	rex.RB push r10
  42d316:	rex.RX
  42d317:	rex.B
  42d318:	rex.XB
  42d319:	add    BYTE PTR [r11+0x55],r8b
  42d31d:	push   rdx
  42d31e:	rex.WR
  42d31f:	rex.WRXB push r8
  42d321:	push   rsp
  42d322:	pop    rdi
  42d323:	rex.WXB push r10
  42d325:	rex.X
  42d326:	rex.WR
  42d327:	rex.RB push r14
  42d329:	rex.RB
  42d32a:	rex.WR add BYTE PTR [rbx+0x55],r8b
  42d32e:	push   rdx
  42d32f:	rex.WR
  42d330:	rex.WRXB push r8
  42d332:	push   rsp
  42d333:	pop    rdi
  42d334:	pop    rax
  42d335:	rex.RX
  42d336:	rex.RB push r10
  42d338:	rex.WB
  42d339:	rex.WRX
  42d33a:	rex.RX
  42d33b:	rex.WRXB
  42d33c:	rex.RX push rbp
  42d33e:	rex.WRX
  42d33f:	rex.XB push r12
  42d341:	rex.WB
  42d342:	rex.WRXB
  42d343:	rex.WRX add BYTE PTR [rbx+0x55],r8b
  42d347:	push   rdx
  42d348:	rex.WR
  42d349:	rex.WRXB push r8
  42d34b:	push   rsp
  42d34c:	pop    rdi
  42d34d:	pop    rax
  42d34e:	rex.RX
  42d34f:	rex.RB push r10
  42d351:	rex.WB
  42d352:	rex.WRX
  42d353:	rex.RX
  42d354:	rex.WRXB
  42d355:	rex.R
  42d356:	push   r12
  42d358:	add    BYTE PTR [r11+0x55],al
  42d35c:	push   rdx
  42d35d:	rex.WR
  42d35e:	rex.WRXB push r8
  42d360:	push   rsp
  42d361:	pop    rdi
  42d362:	rex.R
  42d363:	rex.WRX push rbx
  42d365:	pop    rdi
  42d366:	push   rbx
  42d367:	rex.RB push r10
  42d369:	push   rsi
  42d36a:	rex.RB push r10
  42d36c:	push   rbx
  42d36d:	add    BYTE PTR [rbx+0x55],al
  42d370:	push   rdx
  42d371:	rex.WR
  42d372:	rex.WRXB push r8
  42d374:	push   rsp
  42d375:	pop    rdi
  42d376:	rex.R
  42d377:	rex.WRX push rbx
  42d379:	pop    rdi
  42d37a:	rex.WB
  42d37b:	rex.WRX push rsp
  42d37d:	rex.RB push r10
  42d37f:	rex.RX
  42d380:	rex.B
  42d381:	rex.XB
  42d382:	add    BYTE PTR [r11+0x55],r8b
  42d386:	push   rdx
  42d387:	rex.WR
  42d388:	rex.WRXB push r8
  42d38a:	push   rsp
  42d38b:	pop    rdi
  42d38c:	rex.R
  42d38d:	rex.WRX push rbx
  42d38f:	pop    rdi
  42d390:	rex.WR
  42d391:	rex.WRXB
  42d392:	rex.XB
  42d393:	rex.B
  42d394:	rex.WR pop rdi
  42d396:	rex.WB push r8
  42d398:	xor    al,0x0
  42d39a:	rex.XB push r13
  42d39c:	push   rdx
  42d39d:	rex.WR
  42d39e:	rex.WRXB push r8
  42d3a0:	push   rsp
  42d3a1:	pop    rdi
  42d3a2:	push   rsp
  42d3a3:	rex.RB
  42d3a4:	rex.WR
  42d3a5:	rex.WRX
  42d3a6:	rex.RB push r12
  42d3a8:	rex.WRXB push r8
  42d3aa:	push   rsp
  42d3ab:	rex.WB
  42d3ac:	rex.WRXB
  42d3ad:	rex.WRX push rbx
  42d3af:	add    BYTE PTR [rbx+0x55],al
  42d3b2:	push   rdx
  42d3b3:	rex.WR
  42d3b4:	rex.WRXB push r8
  42d3b6:	push   rsp
  42d3b7:	pop    rdi
  42d3b8:	rex.R
  42d3b9:	rex.WRX push rbx
  42d3bb:	pop    rdi
  42d3bc:	rex.WR
  42d3bd:	rex.WRXB
  42d3be:	rex.XB
  42d3bf:	rex.B
  42d3c0:	rex.WR pop rdi
  42d3c2:	rex.WB push r8
  42d3c4:	add    BYTE PTR ss:[rbx+0x55],al
  42d3c8:	push   rdx
  42d3c9:	rex.WR
  42d3ca:	rex.WRXB push r8
  42d3cc:	push   rsp
  42d3cd:	pop    rdi
  42d3ce:	push   rdx
  42d3cf:	rex.B
  42d3d0:	rex.WRX
  42d3d1:	rex.R
  42d3d2:	rex.WRXB
  42d3d3:	rex.WRB pop r15
  42d3d5:	rex.RX
  42d3d6:	rex.WB
  42d3d7:	rex.WR
  42d3d8:	add    BYTE PTR [r11+0x55],r8b
  42d3dc:	push   rdx
  42d3dd:	rex.WR
  42d3de:	rex.WRXB push r8
  42d3e0:	push   rsp
  42d3e1:	pop    rdi
  42d3e2:	rex.RB
  42d3e3:	rex.RXB
  42d3e4:	rex.R push rbx
  42d3e6:	rex.WRXB
  42d3e7:	rex.XB
  42d3e8:	rex.WXB
  42d3e9:	rex.RB push r12
  42d3eb:	add    BYTE PTR [rbx+0x55],al
  42d3ee:	push   rdx
  42d3ef:	rex.WR
  42d3f0:	rex.WRXB push r8
  42d3f2:	push   rsp
  42d3f3:	pop    rdi
  42d3f4:	rex.XB
  42d3f5:	rex.WRXB
  42d3f6:	rex.WRX
  42d3f7:	rex.WRX
  42d3f8:	rex.RB
  42d3f9:	rex.XB push r12
  42d3fb:	push   rsp
  42d3fc:	rex.WB
  42d3fd:	rex.WRB
  42d3fe:	rex.RB
  42d3ff:	rex.WRXB push r13
  42d401:	push   rsp
  42d402:	pop    rdi
  42d403:	rex.WRB push r11
  42d405:	add    BYTE PTR [rbx+0x55],al
  42d408:	push   rdx
  42d409:	rex.WR
  42d40a:	rex.WRXB push r8
  42d40c:	push   rsp
  42d40d:	pop    rdi
  42d40e:	push   rbx
  42d40f:	push   rbx
  42d410:	rex.WR pop rdi
  42d412:	rex.XB
  42d413:	rex.WB push r8
  42d415:	rex.W
  42d416:	rex.RB push r10
  42d418:	pop    rdi
  42d419:	rex.WR
  42d41a:	rex.WB push r11
  42d41c:	push   rsp
  42d41d:	add    BYTE PTR [rbx+0x55],al
  42d420:	push   rdx
  42d421:	rex.WR
  42d422:	rex.WRXB push r8
  42d424:	push   rsp
  42d425:	pop    rdi
  42d426:	push   rax
  42d427:	push   rdx
  42d428:	rex.WRXB pop r8
  42d42a:	pop    rcx
  42d42b:	pop    rdi
  42d42c:	push   rbx
  42d42d:	push   rbx
  42d42e:	rex.WR pop rdi
  42d430:	rex.XB
  42d431:	rex.WB push r8
  42d433:	rex.W
  42d434:	rex.RB push r10
  42d436:	pop    rdi
  42d437:	rex.WR
  42d438:	rex.WB push r11
  42d43a:	push   rsp
  42d43b:	add    BYTE PTR [rbx+0x55],al
  42d43e:	push   rdx
  42d43f:	rex.WR
  42d440:	rex.WRXB push r8
  42d442:	push   rsp
  42d443:	pop    rdi
  42d444:	rex.RX push rsp
  42d446:	push   rax
  42d447:	pop    rdi
  42d448:	push   rbp
  42d449:	push   rbx
  42d44a:	rex.RB pop r15
  42d44c:	rex.RB push r8
  42d44e:	push   rbx
  42d44f:	push   rsi
  42d450:	add    BYTE PTR [rbx+0x55],al
  42d453:	push   rdx
  42d454:	rex.WR
  42d455:	rex.WRXB push r8
  42d457:	push   rsp
  42d458:	pop    rdi
  42d459:	rex.RX push rsp
  42d45b:	push   rax
  42d45c:	pop    rdi
  42d45d:	push   rbp
  42d45e:	push   rbx
  42d45f:	rex.RB pop r15
  42d461:	rex.RB push r8
  42d463:	push   rdx
  42d464:	push   rsp
  42d465:	add    BYTE PTR [rbx+0x55],al
  42d468:	push   rdx
  42d469:	rex.WR
  42d46a:	rex.WRXB push r8
  42d46c:	push   rsp
  42d46d:	pop    rdi
  42d46e:	rex.R
  42d46f:	rex.RB
  42d470:	rex.X push rbp
  42d472:	rex.RXB
  42d473:	rex.RX push rbp
  42d475:	rex.WRX
  42d476:	rex.XB push r12
  42d478:	rex.WB
  42d479:	rex.WRXB
  42d47a:	rex.WRX add BYTE PTR [rbx+0x55],r8b
  42d47e:	push   rdx
  42d47f:	rex.WR
  42d480:	rex.WRXB push r8
  42d482:	push   rsp
  42d483:	pop    rdi
  42d484:	rex.R
  42d485:	rex.RB
  42d486:	rex.X push rbp
  42d488:	rex.RXB
  42d489:	rex.R
  42d48a:	push   r12
  42d48c:	add    BYTE PTR [r11+0x55],al
  42d490:	push   rdx
  42d491:	rex.WR
  42d492:	rex.WRXB push r8
  42d494:	push   rsp
  42d495:	pop    rdi
  42d496:	push   rsi
  42d497:	rex.RB push r10
  42d499:	rex.X
  42d49a:	rex.WRXB push r11
  42d49c:	add    BYTE PTR [r11+0x55],r8b
  42d4a0:	push   rdx
  42d4a1:	rex.WR
  42d4a2:	rex.WRXB push r8
  42d4a4:	push   rsp
  42d4a5:	pop    rdi
  42d4a6:	push   rbx
  42d4a7:	push   rbx
  42d4a8:	rex.WR
  42d4a9:	rex.RB
  42d4aa:	rex.WRX
  42d4ab:	rex.RXB
  42d4ac:	rex.WB
  42d4ad:	rex.WRX
  42d4ae:	add    BYTE PTR [r11+0x55],r8b
  42d4b2:	push   rdx
  42d4b3:	rex.WR
  42d4b4:	rex.WRXB push r8
  42d4b6:	push   rsp
  42d4b7:	pop    rdi
  42d4b8:	rex.RX push rsp
  42d4ba:	push   rax
  42d4bb:	pop    rdi
  42d4bc:	rex.XB push r10
  42d4be:	rex.RB
  42d4bf:	push   r12
  42d4c1:	rex.RB pop r15
  42d4c3:	rex.WRB
  42d4c4:	rex.WB push r11
  42d4c6:	push   rbx
  42d4c7:	rex.WB
  42d4c8:	rex.WRX
  42d4c9:	rex.RXB pop r15
  42d4cb:	rex.R
  42d4cc:	rex.WB push r10
  42d4ce:	push   rbx
  42d4cf:	add    BYTE PTR [rbx+0x55],al
  42d4d2:	push   rdx
  42d4d3:	rex.WR
  42d4d4:	rex.WRXB push r8
  42d4d6:	push   rsp
  42d4d7:	pop    rdi
  42d4d8:	rex.WRB
  42d4d9:	pop    r8
  42d4db:	rex.RX
  42d4dc:	rex.WB
  42d4dd:	rex.WR
  42d4de:	rex.RB push r11
  42d4e0:	rex.WB pop r10
  42d4e2:	rex.RB pop r15
  42d4e4:	rex.WR
  42d4e5:	push   r10
  42d4e7:	rex.RXB
  42d4e8:	add    BYTE PTR [r11+0x55],r8b
  42d4ec:	push   rdx
  42d4ed:	rex.WR
  42d4ee:	rex.WRXB push r8
  42d4f0:	push   rsp
  42d4f1:	pop    rdi
  42d4f2:	rex.WB push r8
  42d4f4:	push   rdx
  42d4f5:	rex.RB push r11
  42d4f7:	rex.WRXB
  42d4f8:	rex.WR push rsi
  42d4fa:	add    BYTE PTR [r11+0x55],r8b
  42d4fe:	push   rdx
  42d4ff:	rex.WR
  42d500:	rex.WRXB push r8
  42d502:	push   rsp
  42d503:	pop    rdi
  42d504:	push   rbp
  42d505:	push   rbx
  42d506:	rex.RB pop r15
  42d508:	push   rbx
  42d509:	push   rbx
  42d50a:	rex.WR add BYTE PTR [rbx+0x55],r8b
  42d50e:	push   rdx
  42d50f:	rex.WR
  42d510:	rex.WRXB push r8
  42d512:	push   rsp
  42d513:	pop    rdi
  42d514:	rex.RX push rsp
  42d516:	push   rax
  42d517:	pop    rdi
  42d518:	push   rbx
  42d519:	push   rbx
  42d51a:	rex.WR pop rdi
  42d51c:	rex.XB
  42d51d:	rex.XB
  42d51e:	rex.XB add BYTE PTR [r11+0x55],al
  42d522:	push   rdx
  42d523:	rex.WR
  42d524:	rex.WRXB push r8
  42d526:	push   rsp
  42d527:	pop    rdi
  42d528:	push   rbx
  42d529:	rex.WRXB
  42d52a:	rex.XB
  42d52b:	rex.WXB push r11
  42d52d:	xor    eax,0x5353475f
  42d532:	push   r8
  42d534:	rex.WB pop r15
  42d536:	rex.WRX
  42d537:	rex.RB
  42d538:	rex.XB add BYTE PTR [r11+0x55],al
  42d53c:	push   rdx
  42d53d:	rex.WR
  42d53e:	rex.WRXB push r8
  42d540:	push   rsp
  42d541:	pop    rdi
  42d542:	push   rax
  42d543:	push   rdx
  42d544:	rex.WRXB pop r8
  42d546:	pop    rcx
  42d547:	pop    rdi
  42d548:	push   rbx
  42d549:	rex.RB push r10
  42d54b:	push   rsi
  42d54c:	rex.WB
  42d54d:	rex.XB
  42d54e:	rex.RB pop r15
  42d550:	rex.WRX
  42d551:	rex.B
  42d552:	rex.WRB
  42d553:	add    BYTE PTR [r11+0x55],r8b
  42d557:	push   rdx
  42d558:	rex.WR
  42d559:	rex.WRXB push r8
  42d55b:	push   rsp
  42d55c:	pop    rdi
  42d55d:	rex.RX push rsp
  42d55f:	push   rax
  42d560:	pop    rdi
  42d561:	rex.B
  42d562:	rex.XB
  42d563:	rex.XB
  42d564:	rex.WRXB push r13
  42d566:	rex.WRX push rsp
  42d568:	add    BYTE PTR [rbx+0x55],al
  42d56b:	push   rdx
  42d56c:	rex.WR
  42d56d:	rex.WRXB push r8
  42d56f:	push   rsp
  42d570:	pop    rdi
  42d571:	push   rbx
  42d572:	rex.RB push r10
  42d574:	push   rsi
  42d575:	rex.WB
  42d576:	rex.XB
  42d577:	rex.RB pop r15
  42d579:	rex.WRX
  42d57a:	rex.B
  42d57b:	rex.WRB
  42d57c:	add    BYTE PTR [r11+0x55],r8b
  42d580:	push   rdx
  42d581:	rex.WR
  42d582:	rex.WRXB push r8
  42d584:	push   rsp
  42d585:	pop    rdi
  42d586:	rex.WB
  42d587:	rex.RXB
  42d588:	rex.WRX
  42d589:	rex.WRXB push r10
  42d58b:	rex.RB pop r15
  42d58d:	rex.XB
  42d58e:	rex.WRXB
  42d58f:	rex.WRX push rsp
  42d591:	rex.RB
  42d592:	rex.WRX push rsp
  42d594:	pop    rdi
  42d595:	rex.WR
  42d596:	rex.RB
  42d597:	rex.WRX
  42d598:	rex.RXB push r12
  42d59a:	rex.W add BYTE PTR [rbx+0x55],al
  42d59e:	push   rdx
  42d59f:	rex.WR
  42d5a0:	rex.WRXB push r8
  42d5a2:	push   rsp
  42d5a3:	pop    rdi
  42d5a4:	rex.RX push rsp
  42d5a6:	push   rax
  42d5a7:	pop    rdi
  42d5a8:	push   rbx
  42d5a9:	rex.WXB
  42d5aa:	rex.WB push r8
  42d5ac:	pop    rdi
  42d5ad:	push   rax
  42d5ae:	push   r11
  42d5b0:	push   rsi
  42d5b1:	pop    rdi
  42d5b2:	rex.WB push r8
  42d5b4:	add    BYTE PTR [rbx+0x55],al
  42d5b7:	push   rdx
  42d5b8:	rex.WR
  42d5b9:	rex.WRXB push r8
  42d5bb:	push   rsp
  42d5bc:	pop    rdi
  42d5bd:	rex.RX push rsp
  42d5bf:	push   rax
  42d5c0:	pop    rdi
  42d5c1:	rex.RX
  42d5c2:	rex.WB
  42d5c3:	rex.WR
  42d5c4:	rex.RB
  42d5c5:	rex.WRB
  42d5c6:	rex.RB push r12
  42d5c8:	rex.W
  42d5c9:	rex.WRXB
  42d5ca:	add    BYTE PTR [rax],r8b
  42d5cd:	add    BYTE PTR [rax],al
  42d5cf:	add    BYTE PTR [rbx+0x55],al
  42d5d2:	push   rdx
  42d5d3:	rex.WR
  42d5d4:	rex.WRXB push r8
  42d5d6:	push   rsp
  42d5d7:	pop    rdi
  42d5d8:	rex.RX push rsp
  42d5da:	push   rax
  42d5db:	pop    rdi
  42d5dc:	rex.B
  42d5dd:	rex.WR push rsp
  42d5df:	rex.RB push r10
  42d5e1:	rex.WRX
  42d5e2:	push   r12
  42d5e4:	rex.WB push r14
  42d5e6:	rex.RB pop r15
  42d5e8:	push   rsp
  42d5e9:	rex.WRXB pop r15
  42d5eb:	push   rbp
  42d5ec:	push   rbx
  42d5ed:	rex.RB push r10
  42d5ef:	add    BYTE PTR [rbx+0x55],al
  42d5f2:	push   rdx
  42d5f3:	rex.WR
  42d5f4:	rex.WRXB push r8
  42d5f6:	push   rsp
  42d5f7:	pop    rdi
  42d5f8:	rex.WR
  42d5f9:	rex.WRXB
  42d5fa:	rex.XB
  42d5fb:	rex.B
  42d5fc:	rex.WR push rax
  42d5fe:	rex.WRXB push r10
  42d600:	push   rsp
  42d601:	add    BYTE PTR [rbx+0x55],al
  42d604:	push   rdx
  42d605:	rex.WR
  42d606:	rex.WRXB push r8
  42d608:	push   rsp
  42d609:	pop    rdi
  42d60a:	rex.WR
  42d60b:	rex.WRXB
  42d60c:	rex.XB
  42d60d:	rex.B
  42d60e:	rex.WR push rax
  42d610:	rex.WRXB push r10
  42d612:	push   rsp
  42d613:	push   rdx
  42d614:	rex.B
  42d615:	rex.WRX
  42d616:	rex.RXB
  42d617:	add    BYTE PTR [r11+0x55],r8b
  42d61b:	push   rdx
  42d61c:	rex.WR
  42d61d:	rex.WRXB push r8
  42d61f:	push   rsp
  42d620:	pop    rdi
  42d621:	push   rbx
  42d622:	push   rbx
  42d623:	rex.WR pop rdi
  42d625:	push   rbx
  42d626:	rex.RB push r11
  42d628:	push   rbx
  42d629:	rex.WB
  42d62a:	rex.WRXB
  42d62b:	rex.WRX
  42d62c:	rex.WB
  42d62d:	rex.R pop rdi
  42d62f:	rex.XB
  42d630:	rex.B
  42d631:	rex.XB
  42d632:	rex.W
  42d633:	add    BYTE PTR [r11+0x55],r8b
  42d637:	push   rdx
  42d638:	rex.WR
  42d639:	rex.WRXB push r8
  42d63b:	push   rsp
  42d63c:	pop    rdi
  42d63d:	rex.W push rsp
  42d63f:	push   rsp
  42d640:	push   rax
  42d641:	pop    rdi
  42d642:	rex.XB
  42d643:	rex.WRXB
  42d644:	rex.WRX push rsp
  42d646:	rex.RB
  42d647:	rex.WRX push rsp
  42d649:	pop    rdi
  42d64a:	rex.R
  42d64b:	rex.RB
  42d64c:	rex.XB
  42d64d:	rex.WRXB
  42d64e:	rex.R
  42d64f:	rex.WB
  42d650:	rex.WRX
  42d651:	rex.RXB add BYTE PTR [r8],r8b
  42d654:	add    BYTE PTR [rax],al
  42d656:	add    BYTE PTR [rax],al
  42d658:	rex.XB push r13
  42d65a:	push   rdx
  42d65b:	rex.WR
  42d65c:	rex.WRXB push r8
  42d65e:	push   rsp
  42d65f:	pop    rdi
  42d660:	rex.W push rsp
  42d662:	push   rsp
  42d663:	push   rax
  42d664:	pop    rdi
  42d665:	push   rsp
  42d666:	push   rdx
  42d667:	rex.B
  42d668:	rex.WRX push rbx
  42d66a:	rex.RX
  42d66b:	rex.RB push r10
  42d66d:	pop    rdi
  42d66e:	rex.R
  42d66f:	rex.RB
  42d670:	rex.XB
  42d671:	rex.WRXB
  42d672:	rex.R
  42d673:	rex.WB
  42d674:	rex.WRX
  42d675:	rex.RXB add BYTE PTR [r11+0x55],r8b
  42d679:	push   rdx
  42d67a:	rex.WR
  42d67b:	rex.WRXB push r8
  42d67d:	push   rsp
  42d67e:	pop    rdi
  42d67f:	push   rsp
  42d680:	rex.XB push r8
  42d682:	pop    rdi
  42d683:	rex.WXB
  42d684:	rex.RB
  42d685:	rex.RB push r8
  42d687:	rex.B
  42d688:	rex.WR
  42d689:	rex.WB push r14
  42d68b:	add    BYTE PTR [r11+0x55],r8b
  42d68f:	push   rdx
  42d690:	rex.WR
  42d691:	rex.WRXB push r8
  42d693:	push   rsp
  42d694:	pop    rdi
  42d695:	push   rsp
  42d696:	rex.XB push r8
  42d698:	pop    rdi
  42d699:	rex.WXB
  42d69a:	rex.RB
  42d69b:	rex.RB push r8
  42d69d:	rex.WB
  42d69e:	rex.R
  42d69f:	rex.WR
  42d6a0:	add    BYTE PTR [r11+0x55],r8b
  42d6a4:	push   rdx
  42d6a5:	rex.WR
  42d6a6:	rex.WRXB push r8
  42d6a8:	push   rsp
  42d6a9:	pop    rdi
  42d6aa:	push   rsp
  42d6ab:	rex.XB push r8
  42d6ad:	pop    rdi
  42d6ae:	rex.WXB
  42d6af:	rex.RB
  42d6b0:	rex.RB push r8
  42d6b2:	rex.WB
  42d6b3:	rex.WRX push rsp
  42d6b5:	push   rsi
  42d6b6:	rex.WR add BYTE PTR [rbx+0x55],r8b
  42d6ba:	push   rdx
  42d6bb:	rex.WR
  42d6bc:	rex.WRXB push r8
  42d6be:	push   rsp
  42d6bf:	pop    rdi
  42d6c0:	push   rsp
  42d6c1:	rex.RX push rsp
  42d6c3:	push   rax
  42d6c4:	pop    rdi
  42d6c5:	rex.X
  42d6c6:	rex.WR
  42d6c7:	rex.WXB push r11
  42d6c9:	rex.WB pop r10
  42d6cb:	add    BYTE PTR [r11+0x55],r8b
  42d6cf:	push   rdx
  42d6d0:	rex.WR
  42d6d1:	rex.WRXB push r8
  42d6d3:	push   rsp
  42d6d4:	pop    rdi
  42d6d5:	rex.WRB
  42d6d6:	rex.B
  42d6d7:	rex.WB
  42d6d8:	rex.WR pop rdi
  42d6da:	rex.RX push rdx
  42d6dc:	rex.WRXB
  42d6dd:	rex.WRB add BYTE PTR [r11+0x55],r8b
  42d6e1:	push   rdx
  42d6e2:	rex.WR
  42d6e3:	rex.WRXB push r8
  42d6e5:	push   rsp
  42d6e6:	pop    rdi
  42d6e7:	rex.WRB
  42d6e8:	rex.B
  42d6e9:	rex.WB
  42d6ea:	rex.WR pop rdi
  42d6ec:	push   rdx
  42d6ed:	rex.XB push r8
  42d6ef:	push   rsp
  42d6f0:	add    BYTE PTR [rbx+0x55],al
  42d6f3:	push   rdx
  42d6f4:	rex.WR
  42d6f5:	rex.WRXB push r8
  42d6f7:	push   rsp
  42d6f8:	pop    rdi
  42d6f9:	rex.RX push rsp
  42d6fb:	push   rax
  42d6fc:	pop    rdi
  42d6fd:	push   rbp
  42d6fe:	push   rbx
  42d6ff:	rex.RB pop r15
  42d701:	push   rax
  42d702:	push   rdx
  42d703:	rex.RB push r12
  42d705:	add    BYTE PTR [rbx+0x55],al
  42d708:	push   rdx
  42d709:	rex.WR
  42d70a:	rex.WRXB push r8
  42d70c:	push   rsp
  42d70d:	pop    rdi
  42d70e:	push   rax
  42d70f:	push   rdx
  42d710:	rex.WRXB push r12
  42d712:	rex.WRXB
  42d713:	rex.XB
  42d714:	rex.WRXB
  42d715:	rex.WR push rbx
  42d717:	add    BYTE PTR [rbx+0x55],al
  42d71a:	push   rdx
  42d71b:	rex.WR
  42d71c:	rex.WRXB push r8
  42d71e:	push   rsp
  42d71f:	pop    rdi
  42d720:	push   rdx
  42d721:	rex.RB
  42d722:	rex.R
  42d723:	rex.WB push r10
  42d725:	pop    rdi
  42d726:	push   rax
  42d727:	push   rdx
  42d728:	rex.WRXB push r12
  42d72a:	rex.WRXB
  42d72b:	rex.XB
  42d72c:	rex.WRXB
  42d72d:	rex.WR push rbx
  42d72f:	add    BYTE PTR [rbx+0x55],al
  42d732:	push   rdx
  42d733:	rex.WR
  42d734:	rex.WRXB push r8
  42d736:	push   rsp
  42d737:	pop    rdi
  42d738:	rex.W
  42d739:	rex.RB
  42d73a:	rex.B
  42d73b:	rex.R
  42d73c:	rex.RB push r10
  42d73e:	rex.RX push rbp
  42d740:	rex.WRX
  42d741:	rex.XB push r12
  42d743:	rex.WB
  42d744:	rex.WRXB
  42d745:	rex.WRX add BYTE PTR [rbx+0x55],r8b
  42d749:	push   rdx
  42d74a:	rex.WR
  42d74b:	rex.WRXB push r8
  42d74d:	push   rsp
  42d74e:	pop    rdi
  42d74f:	rex.W
  42d750:	rex.RB
  42d751:	rex.B
  42d752:	rex.R
  42d753:	rex.RB push r10
  42d755:	rex.R
  42d756:	push   r12
  42d758:	add    BYTE PTR [r11+0x55],al
  42d75c:	push   rdx
  42d75d:	rex.WR
  42d75e:	rex.WRXB push r8
  42d760:	push   rsp
  42d761:	pop    rdi
  42d762:	push   rdx
  42d763:	rex.RB push r11
  42d765:	rex.WRXB
  42d766:	rex.WR push rsi
  42d768:	add    BYTE PTR [r11+0x55],r8b
  42d76c:	push   rdx
  42d76d:	rex.WR
  42d76e:	rex.WRXB push r8
  42d770:	push   rsp
  42d771:	pop    rdi
  42d772:	rex.XB
  42d773:	rex.WRXB
  42d774:	rex.WRX
  42d775:	rex.WRX
  42d776:	rex.RB
  42d777:	rex.XB push r12
  42d779:	pop    rdi
  42d77a:	push   rsp
  42d77b:	rex.WRXB add BYTE PTR [r11+0x55],r8b
  42d77f:	push   rdx
  42d780:	rex.WR
  42d781:	rex.WRXB push r8
  42d783:	push   rsp
  42d784:	pop    rdi
  42d785:	push   rsp
  42d786:	rex.WR push rbx
  42d788:	push   r13
  42d78a:	push   rsp
  42d78b:	rex.W pop rdi
  42d78d:	push   rbp
  42d78e:	push   rbx
  42d78f:	rex.RB push r10
  42d791:	rex.WRX
  42d792:	rex.B
  42d793:	rex.WRB
  42d794:	add    BYTE PTR [r11+0x55],r8b
  42d798:	push   rdx
  42d799:	rex.WR
  42d79a:	rex.WRXB push r8
  42d79c:	push   rsp
  42d79d:	pop    rdi
  42d79e:	push   rsp
  42d79f:	rex.WR push rbx
  42d7a1:	push   r13
  42d7a3:	push   rsp
  42d7a4:	rex.W pop rdi
  42d7a6:	push   rax
  42d7a7:	push   r11
  42d7a9:	push   rbx
  42d7aa:	push   rdi
  42d7ab:	rex.WRXB push r10
  42d7ad:	add    BYTE PTR [rbx+0x55],r8b
  42d7b1:	push   rdx
  42d7b2:	rex.WR
  42d7b3:	rex.WRXB push r8
  42d7b5:	push   rsp
  42d7b6:	pop    rdi
  42d7b7:	push   rsp
  42d7b8:	rex.WR push rbx
  42d7ba:	push   r13
  42d7bc:	push   rsp
  42d7bd:	rex.W pop rdi
  42d7bf:	push   rsp
  42d7c0:	pop    rcx
  42d7c1:	push   rax
  42d7c2:	add    BYTE PTR [r8],r8b
  42d7c5:	add    BYTE PTR [rax],al
  42d7c7:	add    BYTE PTR [rbx+0x55],al
  42d7ca:	push   rdx
  42d7cb:	rex.WR
  42d7cc:	rex.WRXB push r8
  42d7ce:	push   rsp
  42d7cf:	pop    rdi
  42d7d0:	push   rax
  42d7d1:	push   rdx
  42d7d2:	rex.WRXB pop r8
  42d7d4:	pop    rcx
  42d7d5:	pop    rdi
  42d7d6:	push   rsp
  42d7d7:	rex.WR push rbx
  42d7d9:	push   r13
  42d7db:	push   rsp
  42d7dc:	rex.W pop rdi
  42d7de:	push   rbp
  42d7df:	push   rbx
  42d7e0:	rex.RB push r10
  42d7e2:	rex.WRX
  42d7e3:	rex.B
  42d7e4:	rex.WRB
  42d7e5:	add    BYTE PTR [r8],r8b
  42d7e8:	rex.XB push r13
  42d7ea:	push   rdx
  42d7eb:	rex.WR
  42d7ec:	rex.WRXB push r8
  42d7ee:	push   rsp
  42d7ef:	pop    rdi
  42d7f0:	push   rax
  42d7f1:	push   rdx
  42d7f2:	rex.WRXB pop r8
  42d7f4:	pop    rcx
  42d7f5:	pop    rdi
  42d7f6:	push   rsp
  42d7f7:	rex.WR push rbx
  42d7f9:	push   r13
  42d7fb:	push   rsp
  42d7fc:	rex.W pop rdi
  42d7fe:	push   rax
  42d7ff:	push   r11
  42d801:	push   rbx
  42d802:	push   rdi
  42d803:	rex.WRXB push r10
  42d805:	add    BYTE PTR [rbx+0x55],r8b
  42d809:	push   rdx
  42d80a:	rex.WR
  42d80b:	rex.WRXB push r8
  42d80d:	push   rsp
  42d80e:	pop    rdi
  42d80f:	push   rax
  42d810:	push   rdx
  42d811:	rex.WRXB pop r8
  42d813:	pop    rcx
  42d814:	pop    rdi
  42d815:	push   rsp
  42d816:	rex.WR push rbx
  42d818:	push   r13
  42d81a:	push   rsp
  42d81b:	rex.W pop rdi
  42d81d:	push   rsp
  42d81e:	pop    rcx
  42d81f:	push   rax
  42d820:	add    BYTE PTR [r11+0x55],r8b
  42d824:	push   rdx
  42d825:	rex.WR
  42d826:	rex.WRXB push r8
  42d828:	push   rsp
  42d829:	pop    rdi
  42d82a:	rex.RXB push r11
  42d82c:	push   rbx
  42d82d:	push   r8
  42d82f:	rex.WB pop r15
  42d831:	rex.R
  42d832:	rex.RB
  42d833:	rex.WR
  42d834:	rex.RB
  42d835:	rex.RXB
  42d836:	push   r12
  42d838:	rex.WB
  42d839:	rex.WRXB
  42d83a:	rex.WRX add BYTE PTR [rbx+0x55],r8b
  42d83e:	push   rdx
  42d83f:	rex.WR
  42d840:	rex.WRXB push r8
  42d842:	push   rsp
  42d843:	pop    rdi
  42d844:	push   rbx
  42d845:	push   rbx
  42d846:	rex.WR pop rdi
  42d848:	rex.WRXB push r8
  42d84a:	push   rsp
  42d84b:	rex.WB
  42d84c:	rex.WRXB
  42d84d:	rex.WRX push rbx
  42d84f:	add    BYTE PTR [rbx+0x55],al
  42d852:	push   rdx
  42d853:	rex.WR
  42d854:	rex.WRXB push r8
  42d856:	push   rsp
  42d857:	pop    rdi
  42d858:	push   rax
  42d859:	push   rdx
  42d85a:	rex.WRXB pop r8
  42d85c:	pop    rcx
  42d85d:	pop    rdi
  42d85e:	push   rbx
  42d85f:	push   rbx
  42d860:	rex.WR pop rdi
  42d862:	rex.WRXB push r8
  42d864:	push   rsp
  42d865:	rex.WB
  42d866:	rex.WRXB
  42d867:	rex.WRX push rbx
  42d869:	add    BYTE PTR [rbx+0x55],al
  42d86c:	push   rdx
  42d86d:	rex.WR
  42d86e:	rex.WRXB push r8
  42d870:	push   rsp
  42d871:	pop    rdi
  42d872:	rex.WRB
  42d873:	rex.B
  42d874:	rex.WB
  42d875:	rex.WR pop rdi
  42d877:	push   r13
  42d879:	push   rsp
  42d87a:	rex.W add BYTE PTR [rbx+0x55],al
  42d87e:	push   rdx
  42d87f:	rex.WR
  42d880:	rex.WRXB push r8
  42d882:	push   rsp
  42d883:	pop    rdi
  42d884:	push   rbx
  42d885:	push   r11
  42d887:	rex.WR pop rdi
  42d889:	rex.WB push r10
  42d88b:	add    BYTE PTR [rbx+0x55],al
  42d88e:	push   rdx
  42d88f:	rex.WR
  42d890:	rex.WRXB push r8
  42d892:	push   rsp
  42d893:	pop    rdi
  42d894:	push   rbx
  42d895:	push   rbx
  42d896:	rex.WR pop rdi
  42d898:	rex.RB
  42d899:	rex.WRX
  42d89a:	rex.B
  42d89b:	rex.X
  42d89c:	rex.WR
  42d89d:	rex.RB pop r15
  42d89f:	rex.WRX push rax
  42d8a1:	rex.WRX add BYTE PTR [rbx+0x55],r8b
  42d8a5:	push   rdx
  42d8a6:	rex.WR
  42d8a7:	rex.WRXB push r8
  42d8a9:	push   rsp
  42d8aa:	pop    rdi
  42d8ab:	push   rbx
  42d8ac:	push   rbx
  42d8ad:	rex.WR pop rdi
  42d8af:	rex.RB
  42d8b0:	rex.WRX
  42d8b1:	rex.B
  42d8b2:	rex.X
  42d8b3:	rex.WR
  42d8b4:	rex.RB pop r15
  42d8b6:	rex.B
  42d8b7:	rex.WR push rax
  42d8b9:	rex.WRX add BYTE PTR [rbx+0x55],r8b
  42d8bd:	push   rdx
  42d8be:	rex.WR
  42d8bf:	rex.WRXB push r8
  42d8c1:	push   rsp
  42d8c2:	pop    rdi
  42d8c3:	push   rbp
  42d8c4:	rex.WRX
  42d8c5:	rex.WB pop r8
  42d8c7:	pop    rdi
  42d8c8:	push   rbx
  42d8c9:	rex.WRXB
  42d8ca:	rex.XB
  42d8cb:	rex.WXB
  42d8cc:	rex.RB push r12
  42d8ce:	pop    rdi
  42d8cf:	push   rax
  42d8d0:	push   r12
  42d8d2:	rex.W add BYTE PTR [rbx+0x55],al
  42d8d6:	push   rdx
  42d8d7:	rex.WR
  42d8d8:	rex.WRXB push r8
  42d8da:	push   rsp
  42d8db:	pop    rdi
  42d8dc:	rex.R
  42d8dd:	rex.RB
  42d8de:	rex.RX
  42d8df:	push   r13
  42d8e1:	rex.WR push rsp
  42d8e3:	pop    rdi
  42d8e4:	push   rax
  42d8e5:	push   rdx
  42d8e6:	rex.WRXB push r12
  42d8e8:	rex.WRXB
  42d8e9:	rex.XB
  42d8ea:	rex.WRXB
  42d8eb:	rex.WR add BYTE PTR [rbx+0x55],r8b
  42d8ef:	push   rdx
  42d8f0:	rex.WR
  42d8f1:	rex.WRXB push r8
  42d8f3:	push   rsp
  42d8f4:	pop    rdi
  42d8f5:	rex.RB pop r8
  42d8f7:	push   rax
  42d8f8:	rex.RB
  42d8f9:	rex.XB push r12
  42d8fb:	pop    rdi
  42d8fc:	xor    DWORD PTR [rax],esi
  42d8fe:	xor    BYTE PTR [rdi+0x54],bl
  42d901:	rex.WB
  42d902:	rex.WRB
  42d903:	rex.RB
  42d904:	rex.WRXB push r13
  42d906:	push   rsp
  42d907:	pop    rdi
  42d908:	rex.WRB push r11
  42d90a:	add    BYTE PTR [rbx+0x55],al
  42d90d:	push   rdx
  42d90e:	rex.WR
  42d90f:	rex.WRXB push r8
  42d911:	push   rsp
  42d912:	pop    rdi
  42d913:	push   rsp
  42d914:	rex.RX push rsp
  42d916:	push   rax
  42d917:	pop    rdi
  42d918:	rex.WRX
  42d919:	rex.WRXB pop r15
  42d91b:	rex.WRXB push r8
  42d91d:	push   rsp
  42d91e:	rex.WB
  42d91f:	rex.WRXB
  42d920:	rex.WRX push rbx
  42d922:	add    BYTE PTR [rbx+0x75],ah
  42d925:	jb     0x42d993
  42d927:	cmp    ah,BYTE PTR [rax]
  42d929:	push   rbx
  42d92a:	(bad)  
  42d92b:	jbe    0x42d992
  42d92d:	and    BYTE PTR fs:[rdi+rbp*2+0x20],dh
  42d932:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6d61
  42d939:	and    BYTE PTR gs:[rdi],ah
  42d93c:	and    eax,0xa2773
  42d941:	push   0x707474
  42d946:	add    BYTE PTR [rax],al
  42d948:	push   rsp
  42d949:	jb     0x42d9ac
  42d94b:	outs   dx,BYTE PTR ds:[rsi]
  42d94c:	jae    0x42d9b7
  42d94e:	outs   dx,BYTE PTR gs:[rsi]
  42d950:	je     0x42d972
  42d952:	jo     0x42d9c6
  42d954:	outs   dx,DWORD PTR ds:[rsi]
  42d955:	(bad)  
  42d956:	ins    BYTE PTR es:[rdi],dx
  42d957:	gs ins DWORD PTR es:[rdi],dx
  42d959:	cmp    ah,BYTE PTR [rax]
  42d95b:	and    eax,0x69572073
  42d960:	ins    BYTE PTR es:[rdi],dx
  42d961:	ins    BYTE PTR es:[rdi],dx
  42d962:	and    BYTE PTR [rdx+0x65],dh
  42d965:	je     0x42d9d9
  42d967:	jns    0x42d989
  42d969:	imul   ebp,DWORD PTR [rsi+0x20],0x20646c25
  42d970:	jae    0x42d9d7
  42d972:	movsxd ebp,DWORD PTR [rdi+0x6e]
  42d975:	fs jae 0x42d9a6
  42d978:	and    BYTE PTR [rip+0x7220646c],ah        # 0x72633dea
  42d97e:	gs je  0x42d9f3
  42d981:	imul   esp,DWORD PTR [rbp+0x73],0x66656c20
  42d988:	je     0x42d9b8
  42d98a:	or     al,BYTE PTR [rax]
  42d98c:	push   rsp
  42d98d:	push   0x69776f72
  42d992:	outs   dx,BYTE PTR ds:[rsi]
  42d993:	and    BYTE PTR [ecx+0x77],ah
  42d997:	(bad)  
  42d998:	jns    0x42d9ba
  42d99a:	and    eax,0x64343649
  42d99f:	and    BYTE PTR [rdx+0x79],ah
  42d9a2:	je     0x42da09
  42d9a4:	jae    0x42d9b0
  42d9a6:	add    BYTE PTR [rsi+0x61],ah
  42d9a9:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  42d9b1:	je     0x42da25
  42d9b3:	jne    0x42da23
  42d9b5:	movsxd esp,DWORD PTR [rcx+0x74]
  42d9b8:	gs sub al,0x20
  42d9bb:	gs js  0x42da27
  42d9be:	je     0x42da29
  42d9c0:	outs   dx,BYTE PTR ds:[rsi]
  42d9c1:	or     al,BYTE PTR [eax]
  42d9c4:	add    BYTE PTR [rax],al
  42d9c6:	add    BYTE PTR [rax],al
  42d9c8:	rex.WRB
  42d9c9:	gs je  0x42da2d
  42d9cc:	ins    BYTE PTR es:[rdi],dx
  42d9cd:	imul   ebp,DWORD PTR [rsi+0x6b],0x6566203a
  42d9d4:	je     0x42da39
  42d9d6:	push   0x20676e69
  42d9db:	sub    BYTE PTR [rip+0x66202973],ah        # 0x66630354
  42d9e1:	jb     0x42da52
  42d9e3:	ins    DWORD PTR es:[rdi],dx
  42d9e4:	and    BYTE PTR [rax],ch
  42d9e6:	and    eax,0x46202973
  42d9eb:	rex.B
  42d9ec:	rex.WB
  42d9ed:	rex.WR
  42d9ee:	rex.RB
  42d9ef:	and    BYTE PTR [rax],r13b
  42d9f2:	rex.W push rsp
  42d9f4:	push   rsp
  42d9f5:	push   rax
  42d9f6:	and    BYTE PTR [rbx+0x74],dh
  42d9f9:	(bad)  
  42d9fa:	je     0x42da71
  42d9fc:	jae    0x42da1e
  42d9fe:	movsxd ebp,DWORD PTR [rdi+0x64]
  42da01:	and    BYTE PTR gs:[rip+0xa2964],ah        # 0x4d036c
  42da08:	rex.WRB
  42da09:	gs je  0x42da6d
  42da0c:	ins    BYTE PTR es:[rdi],dx
  42da0d:	imul   ebp,DWORD PTR [rsi+0x6b],0x6566203a
  42da14:	je     0x42da79
  42da16:	push   0x20676e69
  42da1b:	sub    BYTE PTR [rip+0x66202973],ah        # 0x66630394
  42da21:	jb     0x42da92
  42da23:	ins    DWORD PTR es:[rdi],dx
  42da24:	and    BYTE PTR [rax],ch
  42da26:	and    eax,0x46202973
  42da2b:	rex.B
  42da2c:	rex.WB
  42da2d:	rex.WR
  42da2e:	rex.RB
  42da2f:	and    BYTE PTR [rax],r13b
  42da32:	and    eax,0xa2973
  42da37:	add    BYTE PTR [rbp+0x65],cl
  42da3a:	je     0x42da9d
  42da3c:	ins    BYTE PTR es:[rdi],dx
  42da3d:	imul   ebp,DWORD PTR [rsi+0x6b],0x6566203a
  42da44:	je     0x42daa9
  42da46:	push   0x20676e69
  42da4b:	sub    BYTE PTR [rip+0x66202973],ah        # 0x666303c4
  42da51:	jb     0x42dac2
  42da53:	ins    DWORD PTR es:[rdi],dx
  42da54:	and    BYTE PTR [rax],ch
  42da56:	and    eax,0x4f202973
  42da5b:	rex.WXB or al,BYTE PTR [r8]
  42da5e:	movsxd esi,DWORD PTR [rbp+0x72]
  42da61:	ins    BYTE PTR es:[rdi],dx
  42da62:	cmp    ah,BYTE PTR [rax]
  42da64:	sub    BYTE PTR [rip+0x25202964],ah        # 0x256303ce
  42da6a:	jae    0x42da76
  42da6c:	add    BYTE PTR [rax],al
  42da6e:	add    BYTE PTR [rax],al
  42da70:	rex.WB
  42da71:	data16 and BYTE PTR [rax+rbp*2+0x69],dh
  42da76:	jae    0x42da98
  42da78:	rex.W push rsp
  42da7a:	push   rsp
  42da7b:	push   rax
  42da7c:	push   rbx
  42da7d:	and    BYTE PTR [rbx+0x65],dh
  42da80:	jb     0x42daf8
  42da82:	gs jb  0x42daa5
  42da85:	jne    0x42dafa
  42da87:	gs jae 0x42daaa
  42da8a:	(bad)  
  42da8b:	and    BYTE PTR [rbx+0x65],ah
  42da8e:	jb     0x42db04
  42da90:	imul   esp,DWORD PTR [rsi+0x69],0x65746163
  42da97:	and    BYTE PTR [rbx+0x69],dh
  42da9a:	outs   dx,BYTE PTR ds:[esi]
  42da9c:	gs and BYTE PTR fs:[rdx+0x79],ah
  42daa1:	and    BYTE PTR [rcx+0x20],ah
  42daa4:	rex.XB
  42daa5:	and    BYTE PTR [r10+0x65],sil
  42daa9:	jo     0x42db1d
  42daab:	gs jae 0x42db13
  42daae:	outs   dx,BYTE PTR ds:[rsi]
  42daaf:	je     0x42db16
  42dab1:	and    BYTE PTR fs:[rcx+0x6e],ch
  42dab5:	or     ah,BYTE PTR [rax]
  42dab7:	je     0x42db21
  42dab9:	and    BYTE PTR gs:[rdx+0x75],ah
  42dabd:	outs   dx,BYTE PTR ds:[rsi]
  42dabe:	fs ins BYTE PTR es:[rdi],dx
  42dac0:	gs sub al,0x20
  42dac3:	je     0x42db2d
  42dac5:	and    BYTE PTR gs:[rbx+0x65],ah
  42dac9:	jb     0x42db3f
  42dacb:	imul   esp,DWORD PTR [rsi+0x69],0x65746163
  42dad2:	and    BYTE PTR [rsi+0x65],dh
  42dad5:	jb     0x42db40
  42dad7:	imul   sp,WORD PTR [rbx+0x61],0x6974
  42dadd:	outs   dx,DWORD PTR ds:[rsi]
  42dade:	outs   dx,BYTE PTR ds:[rsi]
  42dadf:	and    BYTE PTR [rax+0x72],dh
  42dae2:	outs   dx,DWORD PTR ds:[rsi]
  42dae3:	(bad)  
  42dae5:	(bad)  
  42dae6:	ins    BYTE PTR es:[rdi],dx
  42dae7:	jns    0x42db09
  42dae9:	data16 (bad) 
  42daeb:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x65756420
  42daf3:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  42daf7:	(bad)  
  42daf8:	or     ah,BYTE PTR [rax]
  42dafa:	jo     0x42db6e
  42dafc:	outs   dx,DWORD PTR ds:[rsi]
  42dafd:	(bad)  
  42dafe:	ins    BYTE PTR es:[rdi],dx
  42daff:	gs ins DWORD PTR es:[rdi],dx
  42db01:	and    BYTE PTR [rdi+0x69],dh
  42db04:	je     0x42db6e
  42db06:	and    BYTE PTR [rax+rbp*2+0x65],dh
  42db0a:	and    BYTE PTR [rbx+0x65],ah
  42db0d:	jb     0x42db83
  42db0f:	imul   esp,DWORD PTR [rsi+0x69],0x65746163
  42db16:	and    BYTE PTR [rax],ch
  42db18:	imul   esi,DWORD PTR [rax+riz*1+0x6d],0x74686769
  42db20:	and    BYTE PTR [rdx+0x65],ah
  42db23:	and    BYTE PTR [rbp+0x78],ah
  42db26:	jo     0x42db91
  42db28:	jb     0x42db8f
  42db2a:	fs sub al,0x20
  42db2d:	outs   dx,DWORD PTR ds:[rsi]
  42db2e:	jb     0x42db50
  42db30:	je     0x42db9a
  42db32:	and    BYTE PTR gs:[rsi+0x61],ch
  42db36:	ins    DWORD PTR es:[rdi],dx
  42db37:	and    BYTE PTR gs:[rbp+0x69],ch
  42db3b:	addr32 push 0x6e200a74
  42db41:	outs   dx,DWORD PTR ds:[rsi]
  42db42:	je     0x42db64
  42db44:	ins    DWORD PTR es:[rdi],dx
  42db45:	(bad)  
  42db46:	je     0x42dbab
  42db48:	push   0x65687420
  42db4d:	and    BYTE PTR [rdi+rbp*2+0x6d],ah
  42db51:	(bad)  
  42db52:	imul   ebp,DWORD PTR [rsi+0x20],0x656d616e
  42db59:	and    BYTE PTR [rcx+0x6e],ch
  42db5c:	and    BYTE PTR [rax+rbp*2+0x65],dh
  42db60:	and    BYTE PTR [rbp+0x52],dl
  42db63:	sub    QWORD PTR [rsi],r13
  42db66:	or     cl,BYTE PTR [rcx+0x66]
  42db69:	and    BYTE PTR [rcx+0x6f],bh
  42db6c:	jne    0x42db95
  42db6e:	and    BYTE PTR fs:[rcx+rbp*2+0x6b],ch
  42db73:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  42db78:	je     0x42dbef
  42db7a:	jb     0x42dbea
  42db7c:	and    BYTE PTR [rdi+0x66],ch
  42db7f:	data16 and BYTE PTR [rbx+0x75],ah
  42db83:	jb     0x42dbf1
  42db85:	(bad)  
  42db86:	jae    0x42dba8
  42db88:	jbe    0x42dbef
  42db8a:	jb     0x42dbf5
  42db8c:	imul   sp,WORD PTR [rbx+0x61],0x6974
  42db92:	outs   dx,DWORD PTR ds:[rsi]
  42db93:	outs   dx,BYTE PTR ds:[rsi]
  42db94:	and    BYTE PTR [rdi+0x66],ch
  42db97:	and    BYTE PTR [rax+rbp*2+0x65],dh
  42db9b:	and    BYTE PTR [rbx+0x65],ah
  42db9e:	jb     0x42dc14
  42dba0:	imul   esp,DWORD PTR [rsi+0x69],0x65746163
  42dba7:	sub    al,0x20
  42dba9:	jne    0x42dc1e
  42dbab:	or     ah,BYTE PTR gs:[rax]
  42dbae:	je     0x42dc18
  42dbb0:	and    BYTE PTR gs:[rip+0x6f28206b],ch        # 0x6f6afc22
  42dbb7:	jb     0x42dbd9
  42dbb9:	sub    eax,0x736e692d
  42dbbe:	movsxd esi,DWORD PTR gs:[rbp+0x72]
  42dbc2:	sub    DWORD PTR gs:[rax],esp
  42dbc5:	outs   dx,DWORD PTR ds:[rsi]
  42dbc6:	jo     0x42dc3c
  42dbc8:	imul   ebp,DWORD PTR [rdi+0x6e],0xa2e
  42dbcf:	add    BYTE PTR [rbp+0x6f],cl
  42dbd2:	jb     0x42dc39
  42dbd4:	and    BYTE PTR [rbp+riz*2+0x74],ah
  42dbd8:	(bad)  
  42dbd9:	imul   ebp,DWORD PTR [rbx+rsi*2+0x20],0x65726568
  42dbe1:	cmp    ah,BYTE PTR [rax]
  42dbe3:	push   0x73707474
  42dbe8:	cmp    ch,BYTE PTR [rdi]
  42dbea:	(bad)  
  42dbeb:	movsxd esi,DWORD PTR [rbp+0x72]
  42dbee:	ins    BYTE PTR es:[rdi],dx
  42dbef:	cs push 0x2e787861
  42dbf5:	jae    0x42dc5c
  42dbf7:	(bad)  
  42dbf8:	outs   dx,DWORD PTR fs:[rsi]
  42dbfa:	movsxd esi,DWORD PTR [rbx+0x2f]
  42dbfd:	jae    0x42dc72
  42dbff:	ins    BYTE PTR es:[rdi],dx
  42dc00:	movsxd esp,DWORD PTR [rbp+0x72]
  42dc03:	je     0x42dc78
  42dc05:	cs push 0xa6c6d74
  42dc0b:	or     ah,BYTE PTR [rbx+0x75]
  42dc0e:	jb     0x42dc7c
  42dc10:	and    BYTE PTR [rax+0x65],dh
  42dc13:	jb     0x42dc7b
  42dc15:	outs   dx,DWORD PTR ds:[rsi]
  42dc16:	jb     0x42dc85
  42dc18:	jae    0x42dc3a
  42dc1a:	push   rbx
  42dc1b:	push   rbx
  42dc1c:	rex.WR and BYTE PTR [rbx+0x65],r12b
  42dc20:	jb     0x42dc96
  42dc22:	imul   esp,DWORD PTR [rsi+0x69],0x65746163
  42dc29:	and    BYTE PTR [rsi+0x65],dh
  42dc2c:	jb     0x42dc97
  42dc2e:	imul   sp,WORD PTR [rbx+0x61],0x6974
  42dc34:	outs   dx,DWORD PTR ds:[rsi]
  42dc35:	outs   dx,BYTE PTR ds:[rsi]
  42dc36:	and    BYTE PTR [rdx+0x79],ah
  42dc39:	and    BYTE PTR [rbp+riz*2+0x66],ah
  42dc3d:	(bad)  
  42dc3e:	jne    0x42dcac
  42dc40:	je     0x42dc6e
  42dc42:	and    BYTE PTR [rbp+0x73],dh
  42dc45:	imul   ebp,DWORD PTR [rsi+0x67],0x22206120
  42dc4c:	(bad)  
  42dc4d:	jne    0x42dcbd
  42dc4f:	fs ins BYTE PTR es:[rdi],dx
  42dc51:	and    cl,BYTE PTR gs:[rdx]
  42dc54:	and    BYTE PTR [rdi+0x66],ch
  42dc57:	and    BYTE PTR [rbx+0x65],al
  42dc5a:	jb     0x42dcd0
  42dc5c:	imul   esp,DWORD PTR [rsi+0x69],0x65746163
  42dc63:	and    BYTE PTR [rcx+0x75],al
  42dc66:	je     0x42dcd0
  42dc68:	outs   dx,DWORD PTR ds:[rsi]
  42dc69:	jb     0x42dcd4
  42dc6b:	je     0x42dce6
  42dc6d:	and    BYTE PTR [rax],ch
  42dc6f:	rex.XB
  42dc70:	sub    DWORD PTR [r8],esp
  42dc73:	jo     0x42dcea
  42dc75:	(bad)  
  42dc76:	ins    BYTE PTR es:[rdi],dx
  42dc77:	imul   esp,DWORD PTR [rbx+0x20],0x7379656b
  42dc7e:	and    BYTE PTR [rax],ch
  42dc80:	rex.XB
  42dc81:	and    BYTE PTR [r11+0x65],spl
  42dc85:	jb     0x42dcfb
  42dc87:	jae    0x42dcb2
  42dc89:	and    BYTE PTR cs:[rcx+0x66],cl
  42dc8d:	and    BYTE PTR [rax+rbp*2+0x65],dh
  42dc91:	and    BYTE PTR [rbp+riz*2+0x66],ah
  42dc95:	(bad)  
  42dc96:	jne    0x42dd04
  42dc98:	je     0x42dca4
  42dc9a:	and    BYTE PTR [rdx+0x75],ah
  42dc9d:	outs   dx,BYTE PTR ds:[rsi]
  42dc9e:	fs ins BYTE PTR es:[rdi],dx
  42dca0:	and    BYTE PTR gs:[rsi+0x69],ah
  42dca4:	ins    BYTE PTR es:[rdi],dx
  42dca5:	and    BYTE PTR gs:[rcx+0x73],ch
  42dca9:	outs   dx,BYTE PTR ds:[rsi]
  42dcaa:	(bad)  
  42dcab:	je     0x42dccd
  42dcad:	(bad)  
  42dcae:	fs gs jno 0x42dd27
  42dcb2:	(bad)  
  42dcb3:	je     0x42dd1a
  42dcb5:	sub    al,0x20
  42dcb7:	jns    0x42dd28
  42dcb9:	jne    0x42dcdb
  42dcbb:	movsxd esp,DWORD PTR [rcx+0x6e]
  42dcbe:	and    BYTE PTR [rbx+0x70],dh
  42dcc1:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  42dcc5:	jns    0x42dce7
  42dcc7:	(bad)  
  42dcc8:	outs   dx,BYTE PTR ds:[rsi]
  42dcc9:	and    BYTE PTR [rcx+0x6c],ah
  42dccc:	je     0x42dd33
  42dcce:	jb     0x42dd3e
  42dcd0:	(bad)  
  42dcd1:	je     0x42dd38
  42dcd3:	and    BYTE PTR [rsi+0x69],ah
  42dcd6:	ins    BYTE PTR es:[rdi],dx
  42dcd7:	or     ah,BYTE PTR gs:[rax]
  42dcda:	jne    0x42dd4f
  42dcdc:	imul   ebp,DWORD PTR [rsi+0x67],0x65687420
  42dce3:	and    BYTE PTR [rip+0x6361632d],ch        # 0x63a44016
  42dce9:	gs jb  0x42dd60
  42dcec:	and    BYTE PTR [rdi+0x70],ch
  42dcef:	je     0x42dd5a
  42dcf1:	outs   dx,DWORD PTR ds:[rsi]
  42dcf2:	outs   dx,BYTE PTR ds:[rsi]
  42dcf3:	or     al,BYTE PTR cs:[rax]
  42dcf6:	and    eax,0x732573
  42dcfb:	add    BYTE PTR [rax],al
  42dcfd:	add    BYTE PTR [rax],al
  42dcff:	add    BYTE PTR [rbp+0x72],al
  42dd02:	jb     0x42dd73
  42dd04:	jb     0x42dd26
  42dd06:	jae    0x42dd6d
  42dd08:	je     0x42dd7e
  42dd0a:	imul   ebp,DWORD PTR [rsi+0x67],0x74786520
  42dd11:	outs   dx,BYTE PTR gs:[rsi]
  42dd13:	fs gs and BYTE PTR fs:[rcx+0x74],ah
  42dd19:	je     0x42dd8d
  42dd1b:	imul   esp,DWORD PTR [rdx+0x75],0x3a736574
  42dd22:	and    BYTE PTR [rip+0x28000a73],ah        # 0x2842e79b
  42dd28:	and    eax,0x46202964
  42dd2d:	(bad)  
  42dd2e:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x69727720
  42dd36:	je     0x42dda1
  42dd38:	outs   dx,BYTE PTR ds:[rsi]
  42dd39:	and    BYTE PTR [edx+0x6f],ah
  42dd3d:	fs jns 0x42dd4a
  42dd40:	add    BYTE PTR [rbx+0x75],ah
  42dd43:	jb     0x42ddb1
  42dd45:	sub    eax,0x622d6163
  42dd4a:	jne    0x42ddba
  42dd4c:	fs ins BYTE PTR es:[rdi],dx
  42dd4e:	gs movsxd esi,DWORD PTR cs:[rdx+0x74]
  42dd53:	add    BYTE PTR [rip+0x25632573],ah        # 0x25a602cc
  42dd59:	jae    0x42dd5b
  42dd5b:	and    eax,0x253f2f73
  42dd60:	jae    0x42dd62
  42dd62:	sub    eax,0x2d2d0071
  42dd67:	imul   esi,DWORD PTR fs:[rbx+0x61],0x656c62
  42dd6f:	je     0x42ddda
  42dd71:	ins    DWORD PTR es:[rdi],dx
  42dd72:	outs   dx,DWORD PTR gs:[rsi]
  42dd74:	jne    0x42ddea
  42dd76:	add    BYTE PTR [rbx+0x6f],ah
  42dd79:	outs   dx,BYTE PTR ds:[rsi]
  42dd7a:	outs   dx,BYTE PTR ds:[rsi]
  42dd7b:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  42dd80:	outs   dx,BYTE PTR ds:[rsi]
  42dd81:	and    BYTE PTR [rdx+0x65],dh
  42dd84:	data16 jne 0x42ddfa
  42dd87:	gs add BYTE PTR fs:[rax+0x54],cl
  42dd8c:	push   rsp
  42dd8d:	push   rax
  42dd8e:	and    BYTE PTR [rbp+0x72],ah
  42dd91:	jb     0x42de02
  42dd93:	jb     0x42dd95
  42dd95:	rex.RX push rsp
  42dd97:	push   rax
  42dd98:	and    BYTE PTR [rbp+0x72],ah
  42dd9b:	jb     0x42de0c
  42dd9d:	jb     0x42dd9f
	...
  42dda7:	add    BYTE PTR [rdi-0x23],ch
  42ddaa:	rex.X add BYTE PTR [rax],al
  42ddad:	add    BYTE PTR [rax],al
  42ddaf:	add    BYTE PTR [rdi-0x23],dh
  42ddb2:	rex.X add BYTE PTR [rax],al
  42ddb5:	add    BYTE PTR [rax],al
  42ddb7:	add    BYTE PTR [rdx+0x42dd],cl
  42ddbd:	add    BYTE PTR [rax],al
  42ddbf:	add    BYTE PTR [rbp+0x42dd],dl
	...
  42ddcd:	rex pop QWORD PTR [rax+0x0]
	...
  42dddd:	add    BYTE PTR [rax],al
  42dddf:	add    BYTE PTR [rax+0x74],ch
  42dde2:	je     0x42de54
  42dde4:	cmp    ch,BYTE PTR [rdi]
  42dde6:	(bad)  
  42dde7:	add    BYTE PTR [rax+0x74],ch
  42ddea:	je     0x42de5c
  42ddec:	jae    0x42de28
  42ddee:	(bad)  
  42ddef:	(bad)  
  42ddf0:	add    BYTE PTR [rip+0x3a002e00],ch        # 0x3a430bf6
  42ddf6:	(bad)  
  42ddf7:	(bad)  
  42ddf8:	add    BYTE PTR [rip+0x732573],ah        # 0xb60371
  42ddfe:	and    eax,0x73252f73
	...
  42de3f:	add    BYTE PTR [rbp+0x6e],al
  42de42:	je     0x42dea9
  42de44:	jb     0x42de66
  42de46:	and    eax,0x61702073
  42de4b:	jae    0x42dec0
  42de4d:	ja     0x42debe
  42de4f:	jb     0x42deb5
  42de51:	and    BYTE PTR [rsi+0x6f],ah
  42de54:	jb     0x42de76
  42de56:	jne    0x42decb
  42de58:	gs jb  0x42de7b
  42de5b:	(bad)  
  42de5c:	and    eax,0x3a2773
  42de61:	add    BYTE PTR [rax],al
  42de63:	add    BYTE PTR [rax],al
  42de65:	add    BYTE PTR [rax],al
  42de67:	add    BYTE PTR [rbp+0x6e],al
  42de6a:	je     0x42ded1
  42de6c:	jb     0x42de8e
  42de6e:	and    eax,0x61702073
  42de73:	jae    0x42dee8
  42de75:	ja     0x42dee6
  42de77:	jb     0x42dedd
  42de79:	and    BYTE PTR [rsi+0x6f],ah
  42de7c:	jb     0x42de9e
  42de7e:	jne    0x42def3
  42de80:	gs jb  0x42dea3
  42de83:	(bad)  
  42de84:	and    eax,0x6f202773
  42de89:	outs   dx,BYTE PTR ds:[rsi]
  42de8a:	and    BYTE PTR [rbp+0x52],dl
  42de8d:	rex.WR and BYTE PTR [rbx],r12b
  42de90:	and    eax,0x75343649
  42de95:	cmp    al,BYTE PTR [rax]
  42de97:	(bad)  
  42de98:	ins    BYTE PTR es:[rdi],dx
  42de99:	ins    BYTE PTR es:[rdi],dx
  42de9a:	add    BYTE PTR [rax+rax*1],ch
  42de9d:	jne    0x42df0d
  42de9f:	jb     0x42df06
  42dea1:	movsxd ebp,DWORD PTR [rdi+0x67]
  42dea4:	outs   dx,BYTE PTR ds:[rsi]
  42dea5:	imul   edi,DWORD PTR [rdx+0x65],0x72702064
  42deac:	outs   dx,DWORD PTR ds:[rsi]
  42dead:	je     0x42df1e
  42deaf:	movsxd ebp,DWORD PTR [rdi+0x6c]
  42deb2:	and    BYTE PTR [rdi],ah
  42deb4:	and    eax,0xa2773
  42deb9:	jae    0x42df24
  42debb:	outs   dx,BYTE PTR ds:[rsi]
  42debc:	ins    BYTE PTR es:[edi],dx
  42debe:	movsxd esi,DWORD PTR gs:[rdi+0x64]
  42dec2:	add    BYTE PTR [rsi+0x6f],ch
  42dec5:	movsxd esi,DWORD PTR [rdi+0x64]
  42dec8:	add    BYTE PTR [rbp+0x75],ch
  42decb:	ins    BYTE PTR es:[rdi],dx
  42decc:	je     0x42df37
  42dece:	movsxd esi,DWORD PTR [rdi+0x64]
  42ded1:	add    BYTE PTR [rax],al
  42ded3:	add    BYTE PTR [rax],al
  42ded5:	add    BYTE PTR [rax],al
  42ded7:	add    BYTE PTR [rbp+0x6e],dh
  42deda:	jb     0x42df41
  42dedc:	movsxd ebp,DWORD PTR [rdi+0x67]
  42dedf:	outs   dx,BYTE PTR ds:[rsi]
  42dee0:	imul   edi,DWORD PTR [rdx+0x65],0x74662064
  42dee7:	jo     0x42df09
  42dee9:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x656d
  42def0:	je     0x42df5a
  42def2:	outs   dx,DWORD PTR ds:[rsi]
  42def3:	and    BYTE PTR fs:[rdi],ah
  42def6:	and    eax,0x202c2773
  42defb:	jne    0x42df70
  42defd:	imul   ebp,DWORD PTR [rsi+0x67],0x66656420
  42df04:	(bad)  
  42df05:	jne    0x42df73
  42df07:	je     0x42df13
  42df09:	add    BYTE PTR [rax+0x61],dh
  42df0c:	jae    0x42df81
  42df0e:	imul   esi,DWORD PTR [rsi+0x65],0x74636100
  42df15:	imul   esi,DWORD PTR [rsi+0x65],0x0
  42df1c:	add    BYTE PTR [rax],al
  42df1e:	add    BYTE PTR [rax],al
  42df20:	jne    0x42df90
  42df22:	jb     0x42df89
  42df24:	movsxd ebp,DWORD PTR [rdi+0x67]
  42df27:	outs   dx,BYTE PTR ds:[rsi]
  42df28:	imul   edi,DWORD PTR [rdx+0x65],0x74662064
  42df2f:	jo     0x42df51
  42df31:	rex.XB
  42df32:	rex.XB
  42df33:	rex.XB and BYTE PTR [r13+0x65],bpl
  42df37:	je     0x42dfa1
  42df39:	outs   dx,DWORD PTR ds:[rsi]
  42df3a:	and    BYTE PTR fs:[rdi],ah
  42df3d:	and    eax,0x202c2773
  42df42:	jne    0x42dfb7
  42df44:	imul   ebp,DWORD PTR [rsi+0x67],0x66656420
  42df4b:	(bad)  
  42df4c:	jne    0x42dfba
  42df4e:	je     0x42df5a
  42df50:	add    BYTE PTR [rsi+0x6f],ch
  42df53:	outs   dx,BYTE PTR ds:[rsi]
  42df54:	add    BYTE PTR gs:[rax+0x6f],dh
  42df58:	ins    BYTE PTR es:[rdi],dx
  42df59:	imul   esp,DWORD PTR [rbx+0x79],0x776c6100
  42df60:	(bad)  
  42df61:	jns    0x42dfd6
  42df63:	add    BYTE PTR [rax],al
  42df65:	add    BYTE PTR [rax],al
  42df67:	add    BYTE PTR [rbp+0x6e],dh
  42df6a:	jb     0x42dfd1
  42df6c:	movsxd ebp,DWORD PTR [rdi+0x67]
  42df6f:	outs   dx,BYTE PTR ds:[rsi]
  42df70:	imul   edi,DWORD PTR [rdx+0x65],0x65642064
  42df77:	ins    BYTE PTR es:[rdi],dx
  42df78:	gs addr32 (bad) 
  42df7b:	je     0x42dfe6
  42df7d:	outs   dx,DWORD PTR ds:[rsi]
  42df7e:	outs   dx,BYTE PTR ds:[rsi]
  42df7f:	and    BYTE PTR [rbp+0x65],ch
  42df82:	je     0x42dfec
  42df84:	outs   dx,DWORD PTR ds:[rsi]
  42df85:	and    BYTE PTR fs:[rdi],ah
  42df88:	and    eax,0x202c2773
  42df8d:	jne    0x42e002
  42df8f:	imul   ebp,DWORD PTR [rsi+0x67],0x6e6f6e20
  42df96:	or     al,BYTE PTR gs:[rax]
  42df99:	push   0x74736f
  42df9e:	jo     0x42e012
  42dfa0:	outs   dx,DWORD PTR ds:[rsi]
  42dfa1:	js     0x42e01c
  42dfa3:	add    BYTE PTR [rbx+0x75],ah
  42dfa6:	jb     0x42e014
  42dfa8:	(bad)  
  42dfa9:	(bad)  
  42dfaa:	cs xor eax,0x312e32
  42dfb0:	outs   dx,DWORD PTR ds:[rsi]
  42dfb1:	jne    0x42e027
  42dfb3:	and    BYTE PTR [rdi+0x66],ch
  42dfb6:	and    BYTE PTR [rbp+0x65],ch
  42dfb9:	ins    DWORD PTR es:[rdi],dx
  42dfba:	outs   dx,DWORD PTR ds:[rsi]
  42dfbb:	jb     0x42e036
  42dfbd:	or     al,BYTE PTR [rax]
  42dfbf:	push   0x707474
  42dfc4:	push   0x73707474
  42dfc9:	add    BYTE PTR [rsi+0x74],ah
  42dfcc:	jo     0x42dfce
  42dfce:	data16 je 0x42e041
  42dfd1:	jae    0x42dfd3
  42dfd3:	jae    0x42e038
  42dfd5:	jo     0x42dfd7
  42dfd7:	jae    0x42e03f
  42dfd9:	je     0x42e04b
  42dfdb:	add    BYTE PTR [rbp+riz*2+0x6c],dh
  42dfdf:	outs   dx,BYTE PTR ds:[rsi]
  42dfe0:	gs je  0x42dfe3
  42dfe3:	ins    BYTE PTR es:[rdi],dx
  42dfe4:	fs (bad) 
  42dfe6:	jo     0x42dfe8
  42dfe8:	ins    BYTE PTR es:[rdi],dx
  42dfe9:	fs (bad) 
  42dfeb:	jo     0x42e060
  42dfed:	add    BYTE PTR [rcx+rbp*2+0x63],ah
  42dff1:	je     0x42dff3
  42dff3:	imul   bp,WORD PTR [rbp+riz*2+0x0],0x6674
  42dffa:	je     0x42e06c
  42dffc:	add    BYTE PTR [rcx+0x6d],ch
  42dfff:	(bad)  
  42e000:	jo     0x42e002
  42e002:	imul   ebp,DWORD PTR [rbp+0x61],0x70007370
  42e009:	outs   dx,DWORD PTR ds:[rsi]
  42e00a:	jo     0x42e03f
  42e00c:	add    BYTE PTR [rax+0x6f],dh
  42e00f:	jo     0x42e044
  42e011:	jae    0x42e013
  42e013:	jae    0x42e082
  42e015:	je     0x42e087
  42e017:	add    BYTE PTR [rbx+0x6d],dh
  42e01a:	je     0x42e08c
  42e01c:	jae    0x42e01e
  42e01e:	jb     0x42e094
  42e020:	jae    0x42e092
  42e022:	add    BYTE PTR [rdi+0x6f],ah
  42e025:	jo     0x42e08f
  42e027:	gs jb  0x42e02a
  42e02a:	jae    0x42e099
  42e02c:	(bad)  
  42e02d:	add    BYTE PTR [rbx+0x6d],dh
  42e030:	(bad)  
	...
  42e03e:	add    BYTE PTR [rax],al
  42e040:	xchg   edi,eax
  42e041:	fiadd  WORD PTR [rdx+0x0]
  42e044:	add    BYTE PTR [rax],al
  42e046:	add    BYTE PTR [rax],al
  42e048:	(bad)  
  42e049:	(bad)  
  42e04a:	(bad)  
  42e04b:	inc    DWORD PTR [rax]
  42e04d:	add    BYTE PTR [rax],al
  42e04f:	add    BYTE PTR [rdi+0x42df],bh
  42e055:	add    BYTE PTR [rax],al
  42e057:	add    BYTE PTR [rcx],al
  42e059:	add    BYTE PTR [rax],al
  42e05b:	add    BYTE PTR [rax],al
  42e05d:	add    BYTE PTR [rax],al
  42e05f:	add    ah,al
  42e061:	fild   WORD PTR [rdx+0x0]
  42e064:	add    BYTE PTR [rax],al
  42e066:	add    BYTE PTR [rax],al
  42e068:	add    al,BYTE PTR [rax]
  42e06a:	add    BYTE PTR [rax],al
  42e06c:	add    BYTE PTR [rax],al
  42e06e:	add    BYTE PTR [rax],al
  42e070:	retf   0x42df
  42e073:	add    BYTE PTR [rax],al
  42e075:	add    BYTE PTR [rax],al
  42e077:	add    BYTE PTR [rax+rax*1],al
  42e07a:	add    BYTE PTR [rax],al
  42e07c:	add    BYTE PTR [rax],al
  42e07e:	add    BYTE PTR [rax],al
  42e080:	(bad)  
  42e081:	fild   WORD PTR [rdx+0x0]
  42e084:	add    BYTE PTR [rax],al
  42e086:	add    BYTE PTR [rax],al
  42e088:	or     BYTE PTR [rax],al
  42e08a:	add    BYTE PTR [rax],al
  42e08c:	add    BYTE PTR [rax],al
  42e08e:	add    BYTE PTR [rax],al
  42e090:	rcr    edi,cl
  42e092:	rex.X add BYTE PTR [rax],al
  42e095:	add    BYTE PTR [rax],al
  42e097:	add    BYTE PTR [rax],dl
  42e099:	add    BYTE PTR [rax],al
  42e09b:	add    BYTE PTR [rax],al
  42e09d:	add    BYTE PTR [rax],al
  42e09f:	add    bh,dl
  42e0a1:	fild   WORD PTR [rdx+0x0]
  42e0a4:	add    BYTE PTR [rax],al
  42e0a6:	add    BYTE PTR [rax],al
  42e0a8:	and    BYTE PTR [rax],al
  42e0aa:	add    BYTE PTR [rax],al
  42e0ac:	add    BYTE PTR [rax],al
  42e0ae:	add    BYTE PTR [rax],al
  42e0b0:	(bad)  
  42e0b2:	rex.X add BYTE PTR [rax],al
  42e0b5:	add    BYTE PTR [rax],al
  42e0b7:	add    BYTE PTR [rax+0x0],al
  42e0ba:	add    BYTE PTR [rax],al
  42e0bc:	add    BYTE PTR [rax],al
  42e0be:	add    BYTE PTR [rax],al
  42e0c0:	jrcxz  0x42e0a1
  42e0c2:	rex.X add BYTE PTR [rax],al
  42e0c5:	add    BYTE PTR [rax],al
  42e0c7:	add    BYTE PTR [rax+0x0],al
  42e0cd:	add    BYTE PTR [rax],al
  42e0cf:	add    al,ch
  42e0d1:	fild   WORD PTR [rdx+0x0]
  42e0d4:	add    BYTE PTR [rax],al
  42e0d6:	add    BYTE PTR [rax],al
  42e0d8:	add    BYTE PTR [rcx],al
  42e0da:	add    BYTE PTR [rax],al
  42e0dc:	add    BYTE PTR [rax],al
  42e0de:	add    BYTE PTR [rax],al
  42e0e0:	out    dx,al
  42e0e1:	fild   WORD PTR [rdx+0x0]
  42e0e4:	add    BYTE PTR [rax],al
  42e0e6:	add    BYTE PTR [rax],al
  42e0e8:	add    BYTE PTR [rdx],al
  42e0ea:	add    BYTE PTR [rax],al
  42e0ec:	add    BYTE PTR [rax],al
  42e0ee:	add    BYTE PTR [rax],al
  42e0f0:	repz fild WORD PTR [rdx+0x0]
  42e0f4:	add    BYTE PTR [rax],al
  42e0f6:	add    BYTE PTR [rax],al
  42e0f8:	add    BYTE PTR [rax+rax*1],al
  42e0fb:	add    BYTE PTR [rax],al
  42e0fd:	add    BYTE PTR [rax],al
  42e0ff:	add    al,bh
  42e101:	fild   WORD PTR [rdx+0x0]
  42e104:	add    BYTE PTR [rax],al
  42e106:	add    BYTE PTR [rax],al
  42e108:	add    BYTE PTR [rax],cl
  42e10a:	add    BYTE PTR [rax],al
  42e10c:	add    BYTE PTR [rax],al
  42e10e:	add    BYTE PTR [rax],al
  42e110:	std    
  42e111:	fild   WORD PTR [rdx+0x0]
  42e114:	add    BYTE PTR [rax],al
  42e116:	add    BYTE PTR [rax],al
  42e118:	add    BYTE PTR [rax],dl
  42e11a:	add    BYTE PTR [rax],al
  42e11c:	add    BYTE PTR [rax],al
  42e11e:	add    BYTE PTR [rax],al
  42e120:	add    ah,al
  42e122:	rex.X add BYTE PTR [rax],al
  42e125:	add    BYTE PTR [rax],al
  42e127:	add    BYTE PTR [rax],al
  42e129:	and    BYTE PTR [rax],al
  42e12b:	add    BYTE PTR [rax],al
  42e12d:	add    BYTE PTR [rax],al
  42e12f:	add    BYTE PTR [rax],cl
  42e131:	loopne 0x42e175
  42e133:	add    BYTE PTR [rax],al
  42e135:	add    BYTE PTR [rax],al
  42e137:	add    BYTE PTR [rax],al
  42e139:	add    BYTE PTR [rax],al
  42e13c:	add    BYTE PTR [rax],al
  42e13e:	add    BYTE PTR [rax],al
  42e140:	or     eax,0x42e0
  42e145:	add    BYTE PTR [rax],al
  42e147:	add    BYTE PTR [rax],al
  42e149:	add    BYTE PTR [rax],0x0
  42e14c:	add    BYTE PTR [rax],al
  42e14e:	add    BYTE PTR [rax],al
  42e150:	adc    esp,eax
  42e152:	rex.X add BYTE PTR [rax],al
  42e155:	add    BYTE PTR [rax],al
  42e157:	add    BYTE PTR [rax],al
  42e159:	add    BYTE PTR [rcx],al
  42e15b:	add    BYTE PTR [rax],al
  42e15d:	add    BYTE PTR [rax],al
  42e15f:	add    BYTE PTR [rax],bl
  42e161:	loopne 0x42e1a5
  42e163:	add    BYTE PTR [rax],al
  42e165:	add    BYTE PTR [rax],al
  42e167:	add    BYTE PTR [rax],al
  42e169:	add    BYTE PTR [rdx],al
  42e16b:	add    BYTE PTR [rax],al
  42e16d:	add    BYTE PTR [rax],al
  42e16f:	add    BYTE PTR [rsi],bl
  42e171:	loopne 0x42e1b5
  42e173:	add    BYTE PTR [rax],al
  42e175:	add    BYTE PTR [rax],al
  42e177:	add    BYTE PTR [rax],al
  42e179:	add    BYTE PTR [rax+rax*1],al
  42e17c:	add    BYTE PTR [rax],al
  42e17e:	add    BYTE PTR [rax],al
  42e180:	and    esp,eax
  42e182:	rex.X add BYTE PTR [rax],al
  42e185:	add    BYTE PTR [rax],al
  42e187:	add    BYTE PTR [rax],al
  42e189:	add    BYTE PTR [rax],al
  42e18b:	add    al,BYTE PTR [rax]
  42e18d:	add    BYTE PTR [rax],al
  42e18f:	add    BYTE PTR [rdx],ch
  42e191:	loopne 0x42e1d5
	...
  42e19b:	add    al,0x0
  42e19d:	add    BYTE PTR [rax],al
  42e19f:	add    BYTE PTR [rsi],ch
  42e1a1:	loopne 0x42e1e5
	...
  42e1ab:	or     BYTE PTR [rax],al
	...
  42e1bd:	add    BYTE PTR [rax],al
  42e1bf:	add    BYTE PTR [rdi+0x63],bl
  42e1c2:	jne    0x42e236
  42e1c4:	ins    BYTE PTR es:[rdi],dx
  42e1c5:	jb     0x42e22a
  42e1c7:	add    BYTE PTR [rbx+rsi*2],bh
  42e1ca:	je     0x42e230
  42e1cc:	imul   ebp,DWORD PTR [rsi+0x3e],0x25732500
  42e1d3:	jae    0x42e1fa
  42e1d5:	jae    0x42e1d7
  42e1d7:	pop    rsp
  42e1d8:	add    BYTE PTR [rdx+0x74],dh
  42e1db:	add    BYTE PTR [rip+0x732573],ah        # 0xb60754
  42e1e1:	sub    eax,0x0
  42e1e6:	add    BYTE PTR [rax],al
  42e1e8:	and    eax,0x64253a73
  42e1ed:	cmp    ah,BYTE PTR [rax]
  42e1ef:	ja     0x42e252
  42e1f1:	jb     0x42e261
  42e1f3:	imul   ebp,DWORD PTR [rsi+0x67],0x2527203a
  42e1fa:	jae    0x42e223
  42e1fc:	and    BYTE PTR [rbp+0x73],dh
  42e1ff:	gs jae 0x42e222
  42e202:	jne    0x42e272
  42e204:	jno    0x42e27b
  42e206:	outs   dx,DWORD PTR ds:[rsi]
  42e207:	je     0x42e26e
  42e209:	and    BYTE PTR fs:[rdi+0x68],dh
  42e20d:	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x63617073
  42e215:	and    BYTE PTR gs:[rcx+0x6e],ch
  42e219:	and    BYTE PTR [rax+rbp*2+0x65],dh
  42e21d:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
  42e221:	and    BYTE PTR gs:[rax+rbp*2+0x61],dh
  42e226:	je     0x42e248
  42e228:	ins    DWORD PTR es:[rdi],dx
  42e229:	(bad)  
  42e22a:	jns    0x42e24c
  42e22c:	movsxd esp,DWORD PTR [rcx+0x75]
  42e22f:	jae    0x42e296
  42e231:	and    BYTE PTR [rbx+0x69],dh
  42e234:	fs gs sub eax,0x65666665
  42e23b:	movsxd esi,DWORD PTR [rbx+rsi*2+0x21]
  42e23f:	or     al,BYTE PTR [rax]
  42e241:	and    eax,0x64253a73
  42e246:	cmp    ah,BYTE PTR [rax]
  42e248:	ja     0x42e2ab
  42e24a:	jb     0x42e2ba
  42e24c:	imul   ebp,DWORD PTR [rsi+0x67],0x2527203a
  42e253:	jae    0x42e27c
  42e255:	and    BYTE PTR [rip+0xa73],ah        # 0x42ecce
	...
  42e27f:	add    BYTE PTR [rbp+riz*1+0x30],bl
  42e283:	xor    ebp,DWORD PTR [rdi+0x0]
  42e286:	add    BYTE PTR [rax],al
  42e288:	movsxd esi,DWORD PTR [rbp+0x72]
  42e28b:	ins    BYTE PTR es:[rdi],dx
  42e28c:	pop    rdi
  42e28d:	gs (bad) 
  42e28f:	jae    0x42e30a
  42e291:	pop    rdi
  42e292:	jae    0x42e2f9
  42e294:	je     0x42e305
  42e296:	jo     0x42e30c
  42e298:	sub    BYTE PTR [rax+0x6e],ch
  42e29b:	fs sub al,0x20
  42e29e:	and    eax,0x28202c73
  42e2a3:	ins    BYTE PTR es:[rdi],dx
  42e2a4:	outs   dx,DWORD PTR ds:[rsi]
  42e2a5:	outs   dx,BYTE PTR ds:[rsi]
  42e2a6:	sub    DWORD PTR [eip+0x3b2973],esp        # 0x7e0c20
  42e2ad:	add    BYTE PTR [rax],al
  42e2af:	add    BYTE PTR [rbx+0x75],ah
  42e2b2:	jb     0x42e320
  42e2b4:	pop    rdi
  42e2b5:	gs (bad) 
  42e2b7:	jae    0x42e332
  42e2b9:	pop    rdi
  42e2ba:	jae    0x42e321
  42e2bc:	je     0x42e32d
  42e2be:	jo     0x42e334
  42e2c0:	sub    BYTE PTR [rax+0x6e],ch
  42e2c3:	fs sub al,0x20
  42e2c6:	and    eax,0x25202c73
  42e2cb:	ins    BYTE PTR es:[rdi],dx
  42e2cc:	sub    QWORD PTR fs:[rbx],r15
  42e2d0:	add    BYTE PTR [rbx+0x75],ah
  42e2d3:	jb     0x42e341
  42e2d5:	pop    rdi
  42e2d6:	gs (bad) 
  42e2d8:	jae    0x42e353
  42e2da:	pop    rdi
  42e2db:	jae    0x42e342
  42e2dd:	je     0x42e34e
  42e2df:	jo     0x42e355
  42e2e1:	sub    BYTE PTR [rax+0x6e],ch
  42e2e4:	fs sub al,0x20
  42e2e7:	and    eax,0x202c73
  42e2ec:	and    eax,0x732a
  42e2f1:	and    eax,0x646c2573
  42e2f6:	sub    QWORD PTR [rbx],r15
  42e2f9:	add    BYTE PTR [rip+0x6f6c2873],ah        # 0x6faf0b72
  42e2ff:	outs   dx,BYTE PTR ds:[rsi]
  42e300:	sub    DWORD PTR [eip+0x732573],esp        # 0xb6087a
  42e307:	and    BYTE PTR [rax+rax*1+0x29],bh
  42e30b:	cmp    eax,DWORD PTR [rax]
  42e30d:	and    eax,0x756c2573
  42e312:	push   rbp
  42e313:	sub    QWORD PTR [rbx],r15
  42e316:	add    BYTE PTR [rbx+0x74],dh
  42e319:	jb     0x42e390
  42e31b:	movsxd esi,DWORD PTR [rax+riz*1+0x63]
  42e31f:	jne    0x42e393
  42e321:	ins    BYTE PTR es:[rdi],dx
  42e322:	pop    rdi
  42e323:	push   0x70707474
  42e328:	outs   dx,DWORD PTR ds:[rsi]
  42e329:	jae    0x42e39f
  42e32b:	and    BYTE PTR [rdx],ch
  42e32d:	jo     0x42e39e
  42e32f:	jae    0x42e3a5
  42e331:	and    eax,0x70003b64
  42e336:	outs   dx,DWORD PTR ds:[rsi]
  42e337:	jae    0x42e3ad
  42e339:	and    eax,0x203d2064
  42e33e:	rex.WRX push rbp
  42e340:	rex.WR
  42e341:	cmp    r8,QWORD PTR [rax]
  42e344:	movsxd esi,DWORD PTR [rbp+0x72]
  42e347:	ins    BYTE PTR es:[rdi],dx
  42e348:	pop    rdi
  42e349:	outs   dx,WORD PTR ds:[rsi]
  42e34b:	jb     0x42e3ba
  42e34d:	data16 jb 0x42e3b5
  42e350:	sub    BYTE PTR gs:[rax+0x6f],dh
  42e354:	jae    0x42e3ca
  42e356:	and    eax,0x3b2964
  42e35b:	add    BYTE PTR [rax],al
  42e35d:	add    BYTE PTR [rax],al
  42e35f:	add    BYTE PTR [rbx+0x74],dh
  42e362:	jb     0x42e3d9
  42e364:	movsxd esi,DWORD PTR [rax+riz*1+0x63]
  42e368:	jne    0x42e3dc
  42e36a:	ins    BYTE PTR es:[rdi],dx
  42e36b:	pop    rdi
  42e36c:	push   0x70707474
  42e371:	outs   dx,DWORD PTR ds:[rsi]
  42e372:	jae    0x42e3e8
  42e374:	and    BYTE PTR [rdx],ch
  42e376:	jo     0x42e3e7
  42e378:	jae    0x42e3ee
  42e37a:	outs   dx,BYTE PTR gs:[rsi]
  42e37c:	cmp    eax,DWORD PTR fs:[rax]
  42e37f:	add    BYTE PTR [rbx+0x75],ah
  42e382:	jb     0x42e3f0
  42e384:	pop    rdi
  42e385:	outs   dx,WORD PTR ds:[rsi]
  42e387:	jb     0x42e3f6
  42e389:	(bad)  
  42e38a:	fs sub BYTE PTR fs:[rsi],ah
  42e38e:	jo     0x42e3ff
  42e390:	jae    0x42e406
  42e392:	and    eax,0x26202c64
  42e397:	jo     0x42e408
  42e399:	jae    0x42e40f
  42e39b:	outs   dx,BYTE PTR gs:[rsi]
  42e39d:	fs sub al,0x0
  42e3a0:	and    BYTE PTR [rax],ah
  42e3a2:	and    BYTE PTR [rax],ah
  42e3a4:	and    BYTE PTR [rax],ah
  42e3a6:	and    BYTE PTR [rax],ah
  42e3a8:	and    BYTE PTR [rax],ah
  42e3aa:	and    BYTE PTR [rax],ah
  42e3ac:	and    BYTE PTR [rbx+0x55],al
  42e3af:	push   rdx
  42e3b0:	rex.WR
  42e3b1:	rex.RX
  42e3b2:	rex.WRXB push r10
  42e3b4:	rex.WRB pop r15
  42e3b6:	rex.XB
  42e3b7:	rex.WRXB push r8
  42e3b9:	pop    rcx
  42e3ba:	rex.WRX
  42e3bb:	rex.B
  42e3bc:	rex.WRB
  42e3bd:	rex.RB sub al,0x20
  42e3c0:	and    ah,BYTE PTR [rip+0x2c2273]        # 0x6f0639
  42e3c6:	add    BYTE PTR [rax],al
  42e3c8:	and    BYTE PTR [rax],ah
  42e3ca:	and    BYTE PTR [rax],ah
  42e3cc:	and    BYTE PTR [rax],ah
  42e3ce:	and    BYTE PTR [rax],ah
  42e3d0:	and    BYTE PTR [rax],ah
  42e3d2:	and    BYTE PTR [rax],ah
  42e3d4:	and    BYTE PTR [rbx+0x55],al
  42e3d7:	push   rdx
  42e3d8:	rex.WR
  42e3d9:	rex.RX
  42e3da:	rex.WRXB push r10
  42e3dc:	rex.WRB pop r15
  42e3de:	rex.RX
  42e3df:	rex.WB
  42e3e0:	rex.WR
  42e3e1:	rex.RB sub al,0x20
  42e3e4:	and    ah,BYTE PTR [rip+0x2c2273]        # 0x6f065d
  42e3ea:	add    BYTE PTR [rax],al
  42e3ec:	add    BYTE PTR [rax],al
  42e3ee:	add    BYTE PTR [rax],al
  42e3f0:	and    BYTE PTR [rax],ah
  42e3f2:	and    BYTE PTR [rax],ah
  42e3f4:	and    BYTE PTR [rax],ah
  42e3f6:	and    BYTE PTR [rax],ah
  42e3f8:	and    BYTE PTR [rax],ah
  42e3fa:	and    BYTE PTR [rax],ah
  42e3fc:	and    BYTE PTR [rbx+0x55],al
  42e3ff:	push   rdx
  42e400:	rex.WR
  42e401:	rex.RX
  42e402:	rex.WRXB push r10
  42e404:	rex.WRB pop r15
  42e406:	rex.RX
  42e407:	rex.WB
  42e408:	rex.WR
  42e409:	rex.RB
  42e40a:	rex.XB
  42e40b:	rex.WRXB
  42e40c:	rex.WRX push rsp
  42e40e:	rex.RB
  42e40f:	rex.WRX push rsp
  42e411:	sub    al,0x20
  42e413:	and    ah,BYTE PTR [rip+0x2c2273]        # 0x6f068c
  42e419:	add    BYTE PTR [rax],al
  42e41b:	add    BYTE PTR [rax],al
  42e41d:	add    BYTE PTR [rax],al
  42e41f:	add    BYTE PTR [rax],ah
  42e421:	and    BYTE PTR [rax],ah
  42e423:	and    BYTE PTR [rax],ah
  42e425:	and    BYTE PTR [rax],ah
  42e427:	and    BYTE PTR [rax],ah
  42e429:	and    BYTE PTR [rax],ah
  42e42b:	and    BYTE PTR [rax],ah
  42e42d:	rex.XB push r13
  42e42f:	push   rdx
  42e430:	rex.WR
  42e431:	rex.RX
  42e432:	rex.WRXB push r10
  42e434:	rex.WRB pop r15
  42e436:	rex.XB
  42e437:	rex.WRXB push r8
  42e439:	pop    rcx
  42e43a:	rex.XB
  42e43b:	rex.WRXB
  42e43c:	rex.WRX push rsp
  42e43e:	rex.RB
  42e43f:	rex.WRX push rsp
  42e441:	push   rbx
  42e442:	sub    al,0x20
  42e444:	and    ah,BYTE PTR [rip+0x2c2273]        # 0x6f06bd
  42e44a:	add    BYTE PTR [rax],al
  42e44c:	add    BYTE PTR [rax],al
  42e44e:	add    BYTE PTR [rax],al
  42e450:	and    BYTE PTR [rax],ah
  42e452:	and    BYTE PTR [rax],ah
  42e454:	and    BYTE PTR [rax],ah
  42e456:	and    BYTE PTR [rax],ah
  42e458:	and    BYTE PTR [rax],ah
  42e45a:	and    BYTE PTR [rax],ah
  42e45c:	and    BYTE PTR [rbx+0x55],al
  42e45f:	push   rdx
  42e460:	rex.WR
  42e461:	rex.RX
  42e462:	rex.WRXB push r10
  42e464:	rex.WRB pop r15
  42e466:	rex.RX
  42e467:	rex.WB
  42e468:	rex.WR
  42e469:	rex.RB
  42e46a:	rex.WRX
  42e46b:	rex.B
  42e46c:	rex.WRB
  42e46d:	rex.RB sub al,0x20
  42e470:	and    ah,BYTE PTR [rip+0x2c2273]        # 0x6f06e9
  42e476:	add    BYTE PTR [rax],al
  42e478:	and    BYTE PTR [rax],ah
  42e47a:	and    BYTE PTR [rax],ah
  42e47c:	and    BYTE PTR [rax],ah
  42e47e:	and    BYTE PTR [rax],ah
  42e480:	and    BYTE PTR [rax],ah
  42e482:	and    BYTE PTR [rax],ah
  42e484:	and    BYTE PTR [rbx+0x55],al
  42e487:	push   rdx
  42e488:	rex.WR
  42e489:	rex.RX
  42e48a:	rex.WRXB push r10
  42e48c:	rex.WRB pop r15
  42e48e:	rex.XB
  42e48f:	rex.WRXB
  42e490:	rex.WRX push rsp
  42e492:	rex.RB
  42e493:	rex.WRX push rsp
  42e495:	push   rsp
  42e496:	pop    rcx
  42e497:	push   rax
  42e498:	rex.RB sub al,0x20
  42e49b:	and    ah,BYTE PTR [rip+0x2c2273]        # 0x6f0714
  42e4a1:	and    BYTE PTR [rax],ah
  42e4a3:	and    BYTE PTR [rax],ah
  42e4a5:	and    BYTE PTR [rax],ah
  42e4a7:	and    BYTE PTR [rax],ah
  42e4a9:	and    BYTE PTR [rax],ah
  42e4ab:	and    BYTE PTR [rax],ah
  42e4ad:	and    BYTE PTR [rbx+0x55],al
  42e4b0:	push   rdx
  42e4b1:	rex.WR
  42e4b2:	rex.RX
  42e4b3:	rex.WRXB push r10
  42e4b5:	rex.WRB pop r15
  42e4b7:	rex.RB
  42e4b8:	rex.WRX
  42e4b9:	sub    DWORD PTR [rbx],r15d
  42e4bc:	add    BYTE PTR [rax],al
  42e4be:	add    BYTE PTR [rax],al
  42e4c0:	movsxd esi,DWORD PTR [rbp+0x72]
  42e4c3:	ins    BYTE PTR es:[rdi],dx
  42e4c4:	pop    rdi
  42e4c5:	gs (bad) 
  42e4c7:	jae    0x42e542
  42e4c9:	pop    rdi
  42e4ca:	jae    0x42e531
  42e4cc:	je     0x42e53d
  42e4ce:	jo     0x42e544
  42e4d0:	sub    BYTE PTR [rax+0x6e],ch
  42e4d3:	fs sub al,0x20
  42e4d6:	and    eax,0x70202c73
  42e4db:	outs   dx,DWORD PTR ds:[rsi]
  42e4dc:	jae    0x42e552
  42e4de:	and    eax,0x3b2964
  42e4e3:	jo     0x42e554
  42e4e5:	jae    0x42e55b
  42e4e7:	outs   dx,BYTE PTR gs:[rsi]
  42e4e9:	and    BYTE PTR fs:[rip+0x4c554e20],bh        # 0x4c983310
  42e4f0:	cmp    r8,QWORD PTR [rax]
  42e4f3:	jae    0x42e569
  42e4f5:	jb     0x42e56c
  42e4f7:	movsxd esi,DWORD PTR [rax+riz*1+0x63]
  42e4fb:	jne    0x42e56f
  42e4fd:	ins    BYTE PTR es:[rdi],dx
  42e4fe:	pop    rdi
  42e4ff:	jae    0x42e56d
  42e501:	imul   esi,DWORD PTR [rbx+0x74],0x6c732a20
  42e508:	imul   esi,DWORD PTR [rbx+0x74],0x3b6425
  42e50f:	jae    0x42e57d
  42e511:	imul   esi,DWORD PTR [rbx+0x74],0x3d206425
  42e518:	and    BYTE PTR [rsi+0x55],cl
  42e51b:	rex.WR
  42e51c:	cmp    r8,QWORD PTR [rax]
  42e51f:	movsxd esi,DWORD PTR [rbp+0x72]
  42e522:	ins    BYTE PTR es:[rdi],dx
  42e523:	pop    rdi
  42e524:	jae    0x42e592
  42e526:	imul   esi,DWORD PTR [rbx+0x74],0x6572665f
  42e52d:	gs pop rdi
  42e52f:	(bad)  
  42e530:	ins    BYTE PTR es:[rdi],dx
  42e531:	ins    BYTE PTR es:[rdi],dx
  42e532:	sub    BYTE PTR [rbx+0x6c],dh
  42e535:	imul   esi,DWORD PTR [rbx+0x74],0x3b296425
  42e53c:	add    BYTE PTR [rax],al
  42e53e:	add    BYTE PTR [rax],al
  42e540:	jae    0x42e5ae
  42e542:	imul   esi,DWORD PTR [rbx+0x74],0x3d206425
  42e549:	and    BYTE PTR [rbx+0x75],ah
  42e54c:	jb     0x42e5ba
  42e54e:	pop    rdi
  42e54f:	jae    0x42e5bd
  42e551:	imul   esi,DWORD PTR [rbx+0x74],0x7070615f
  42e558:	outs   dx,BYTE PTR gs:[rsi]
  42e55a:	sub    BYTE PTR fs:[rbx+0x6c],dh
  42e55e:	imul   esi,DWORD PTR [rbx+0x74],0x202c6425
  42e565:	and    ah,BYTE PTR [rip+0x3b292273]        # 0x3b6c07de
  42e56b:	add    BYTE PTR [rax],al
  42e56d:	add    BYTE PTR [rax],al
  42e56f:	add    BYTE PTR [rbx+0x75],ah
  42e572:	jb     0x42e5e0
  42e574:	pop    rdi
  42e575:	gs (bad) 
  42e577:	jae    0x42e5f2
  42e579:	pop    rdi
  42e57a:	jae    0x42e5e1
  42e57c:	je     0x42e5ed
  42e57e:	jo     0x42e5f4
  42e580:	sub    BYTE PTR [rax+0x6e],ch
  42e583:	fs sub al,0x20
  42e586:	and    eax,0x73202c73
  42e58b:	ins    BYTE PTR es:[rdi],dx
  42e58c:	imul   esi,DWORD PTR [rbx+0x74],0x3b296425
  42e593:	add    BYTE PTR [rbx+0x55],al
  42e596:	push   rdx
  42e597:	rex.WR
  42e598:	rex.WRXB push r8
  42e59a:	push   rsp
  42e59b:	pop    rdi
  42e59c:	push   rbx
  42e59d:	push   rbx
  42e59e:	rex.WR pop rdi
  42e5a0:	push   rsi
  42e5a1:	rex.RB push r10
  42e5a3:	rex.WB
  42e5a4:	rex.RX pop rcx
  42e5a6:	push   rax
  42e5a7:	rex.RB
  42e5a8:	rex.RB push r10
  42e5aa:	add    BYTE PTR [rsi+0x75],ah
  42e5ad:	outs   dx,BYTE PTR ds:[rsi]
  42e5ae:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  42e5b2:	outs   dx,BYTE PTR ds:[rsi]
  42e5b3:	jo     0x42e624
  42e5b5:	imul   ebp,DWORD PTR [rsi+0x74],0x6f007265
  42e5bc:	(bad)  
  42e5bd:	push   0x65
  42e5bf:	movsxd esi,DWORD PTR [rax+rsi*2+0x6f]
  42e5c3:	imul   ebp,DWORD PTR [rsi+0x74],0x28007265
  42e5ca:	movsxd esi,DWORD PTR [rbp+0x72]
  42e5cd:	ins    BYTE PTR es:[rdi],dx
  42e5ce:	pop    rdi
  42e5cf:	outs   dx,DWORD PTR ds:[rsi]
  42e5d0:	data16 pop di
  42e5d3:	je     0x42e5fe
  42e5d5:	and    eax,0x64343649
  42e5da:	add    BYTE PTR [rip+0x65732073],ah        # 0x65b60653
  42e5e0:	je     0x42e602
  42e5e2:	je     0x42e653
  42e5e4:	and    BYTE PTR [rcx+0x20],ah
  42e5e7:	and    eax,0x73
  42e5ec:	add    BYTE PTR [rax],al
  42e5ee:	add    BYTE PTR [rax],al
  42e5f0:	movsxd esi,DWORD PTR [rbp+0x72]
  42e5f3:	ins    BYTE PTR es:[rdi],dx
  42e5f4:	pop    rdi
  42e5f5:	gs (bad) 
  42e5f7:	jae    0x42e672
  42e5f9:	pop    rdi
  42e5fa:	jae    0x42e661
  42e5fc:	je     0x42e66d
  42e5fe:	jo     0x42e674
  42e600:	sub    BYTE PTR [rax+0x6e],ch
  42e603:	fs sub al,0x20
  42e606:	and    eax,0x22202c73
  42e60b:	and    eax,0x3b292273
	...
  42e618:	movsxd esi,DWORD PTR [rbp+0x72]
  42e61b:	ins    BYTE PTR es:[rdi],dx
  42e61c:	pop    rdi
  42e61d:	gs (bad) 
  42e61f:	jae    0x42e69a
  42e621:	pop    rdi
  42e622:	jae    0x42e689
  42e624:	je     0x42e695
  42e626:	jo     0x42e69c
  42e628:	sub    BYTE PTR [rax+0x6e],ch
  42e62b:	fs sub al,0x20
  42e62e:	and    eax,0x25202c73
  42e633:	jae    0x42e65e
  42e635:	cmp    eax,DWORD PTR [rax]
  42e637:	and    eax,0x4c646c
  42e63c:	rex.XB push r13
  42e63e:	push   rdx
  42e63f:	rex.WR
  42e640:	rex.WRXB push r8
  42e642:	push   rsp
  42e643:	pop    rdi
  42e644:	push   rbx
  42e645:	push   rbx
  42e646:	rex.WR pop rdi
  42e648:	push   rsi
  42e649:	rex.RB push r10
  42e64b:	rex.WB
  42e64c:	rex.RX pop rcx
  42e64e:	rex.W
  42e64f:	rex.WRXB push r11
  42e651:	push   rsp
  42e652:	add    BYTE PTR [rbx+0x55],al
  42e655:	push   rdx
  42e656:	rex.WR
  42e657:	rex.WRXB push r8
  42e659:	push   rsp
  42e65a:	pop    rdi
  42e65b:	push   rbx
  42e65c:	push   rbx
  42e65d:	rex.WR pop rdi
  42e65f:	rex.RB
  42e660:	rex.WRX
  42e661:	rex.B
  42e662:	rex.X
  42e663:	rex.WR
  42e664:	rex.RB pop r15
  42e666:	rex.WRX push rax
  42e668:	rex.WRX add BYTE PTR [rbx+0x55],r8b
  42e66c:	push   rdx
  42e66d:	rex.WR
  42e66e:	rex.WRXB push r8
  42e670:	push   rsp
  42e671:	pop    rdi
  42e672:	push   rbx
  42e673:	push   rbx
  42e674:	rex.WR pop rdi
  42e676:	rex.RB
  42e677:	rex.WRX
  42e678:	rex.B
  42e679:	rex.X
  42e67a:	rex.WR
  42e67b:	rex.RB pop r15
  42e67d:	rex.B
  42e67e:	rex.WR push rax
  42e680:	rex.WRX add BYTE PTR [rbx+0x55],r8b
  42e684:	push   rdx
  42e685:	rex.WR
  42e686:	rex.WRXB push r8
  42e688:	push   rsp
  42e689:	pop    rdi
  42e68a:	push   rsp
  42e68b:	rex.XB push r8
  42e68d:	pop    rdi
  42e68e:	rex.WRX
  42e68f:	rex.WRXB
  42e690:	rex.R
  42e691:	rex.RB
  42e692:	rex.WR
  42e693:	pop    r9
  42e695:	add    BYTE PTR [rbx+0x55],al
  42e698:	push   rdx
  42e699:	rex.WR
  42e69a:	rex.WRXB push r8
  42e69c:	push   rsp
  42e69d:	pop    rdi
  42e69e:	push   rax
  42e69f:	push   rdx
  42e6a0:	rex.WRXB pop r8
  42e6a2:	pop    rcx
  42e6a3:	pop    rdi
  42e6a4:	push   rbx
  42e6a5:	push   rbx
  42e6a6:	rex.WR pop rdi
  42e6a8:	push   rsi
  42e6a9:	rex.RB push r10
  42e6ab:	rex.WB
  42e6ac:	rex.RX pop rcx
  42e6ae:	push   rax
  42e6af:	rex.RB
  42e6b0:	rex.RB push r10
  42e6b2:	add    BYTE PTR [rbx+0x55],al
  42e6b5:	push   rdx
  42e6b6:	rex.WR
  42e6b7:	rex.WRXB push r8
  42e6b9:	push   rsp
  42e6ba:	pop    rdi
  42e6bb:	push   rax
  42e6bc:	push   rdx
  42e6bd:	rex.WRXB pop r8
  42e6bf:	pop    rcx
  42e6c0:	pop    rdi
  42e6c1:	push   rbx
  42e6c2:	push   rbx
  42e6c3:	rex.WR pop rdi
  42e6c5:	push   rsi
  42e6c6:	rex.RB push r10
  42e6c8:	rex.WB
  42e6c9:	rex.RX pop rcx
  42e6cb:	rex.W
  42e6cc:	rex.WRXB push r11
  42e6ce:	push   rsp
	...
  42e6ff:	add    BYTE PTR [rbp+riz*8+0x42],dl
  42e706:	add    BYTE PTR [rax],al
  42e708:	add    DWORD PTR [rax],eax
  42e70a:	add    BYTE PTR [rax],al
  42e70c:	add    BYTE PTR [rax],al
  42e70e:	add    BYTE PTR [rax],al
  42e710:	cmp    al,0xe6
  42e712:	rex.X add BYTE PTR [rax],al
  42e715:	add    BYTE PTR [rax],al
  42e717:	add    BYTE PTR [rcx],al
  42e719:	add    BYTE PTR [rax],al
  42e71b:	add    BYTE PTR [rax],al
  42e71d:	add    BYTE PTR [rax],al
  42e71f:	add    BYTE PTR [rbx-0x1a],dl
  42e722:	rex.X add BYTE PTR [rax],al
  42e725:	add    BYTE PTR [rax],al
  42e727:	add    BYTE PTR [rcx],al
  42e729:	add    BYTE PTR [rax],al
  42e72b:	add    BYTE PTR [rax],al
  42e72d:	add    BYTE PTR [rax],al
  42e72f:	add    BYTE PTR [rdx-0x1a],ch
  42e732:	rex.X add BYTE PTR [rax],al
  42e735:	add    BYTE PTR [rax],al
  42e737:	add    BYTE PTR [rcx],al
  42e739:	add    BYTE PTR [rax],al
  42e73b:	add    BYTE PTR [rax],al
  42e73d:	add    BYTE PTR [rax],al
  42e73f:	add    BYTE PTR [rdx+0x42e6],al
  42e745:	add    BYTE PTR [rax],al
  42e747:	add    BYTE PTR [rcx],al
  42e749:	add    BYTE PTR [rax],al
  42e74b:	add    BYTE PTR [rax],al
  42e74d:	add    BYTE PTR [rax],al
  42e74f:	add    BYTE PTR [rsi+0x42e6],dl
  42e755:	add    BYTE PTR [rax],al
  42e757:	add    BYTE PTR [rcx],al
  42e759:	add    BYTE PTR [rax],al
  42e75b:	add    BYTE PTR [rax],al
  42e75d:	add    BYTE PTR [rax],al
  42e75f:	add    BYTE PTR [rbx+0x42e6],dh
  42e765:	add    BYTE PTR [rax],al
  42e767:	add    BYTE PTR [rcx],al
	...
  42e77d:	add    BYTE PTR [rax],al
  42e77f:	add    BYTE PTR [rbx+0x55],al
  42e782:	push   rdx
  42e783:	rex.WR push rax
  42e785:	push   rdx
  42e786:	rex.WRXB push r12
  42e788:	rex.WRXB pop r15
  42e78a:	rex.B
  42e78b:	rex.WR
  42e78c:	rex.WR add BYTE PTR [rbx+0x55],r8b
  42e790:	push   rdx
  42e791:	rex.WR push rax
  42e793:	push   rdx
  42e794:	rex.WRXB push r12
  42e796:	rex.WRXB pop r15
  42e798:	rex.R
  42e799:	rex.WB
  42e79a:	rex.XB push r12
  42e79c:	add    BYTE PTR [rbx+0x55],al
  42e79f:	push   rdx
  42e7a0:	rex.WR push rax
  42e7a2:	push   rdx
  42e7a3:	rex.WRXB push r12
  42e7a5:	rex.WRXB pop r15
  42e7a7:	rex.RX
  42e7a8:	rex.WB
  42e7a9:	rex.WR
  42e7aa:	add    BYTE PTR [r11+0x55],r8b
  42e7ae:	push   rdx
  42e7af:	rex.WR push rax
  42e7b1:	push   rdx
  42e7b2:	rex.WRXB push r12
  42e7b4:	rex.WRXB pop r15
  42e7b6:	rex.RX push rsp
  42e7b8:	push   rax
  42e7b9:	add    BYTE PTR [rbx+0x55],al
  42e7bc:	push   rdx
  42e7bd:	rex.WR push rax
  42e7bf:	push   rdx
  42e7c0:	rex.WRXB push r12
  42e7c2:	rex.WRXB pop r15
  42e7c4:	rex.RX push rsp
  42e7c6:	push   rax
  42e7c7:	push   rbx
  42e7c8:	add    BYTE PTR [rbx+0x55],al
  42e7cb:	push   rdx
  42e7cc:	rex.WR push rax
  42e7ce:	push   rdx
  42e7cf:	rex.WRXB push r12
  42e7d1:	rex.WRXB pop r15
  42e7d3:	rex.RXB
  42e7d4:	rex.WRXB push r8
  42e7d6:	rex.W
  42e7d7:	rex.RB push r10
  42e7d9:	add    BYTE PTR [rbx+0x55],al
  42e7dc:	push   rdx
  42e7dd:	rex.WR push rax
  42e7df:	push   rdx
  42e7e0:	rex.WRXB push r12
  42e7e2:	rex.WRXB pop r15
  42e7e4:	rex.W push rsp
  42e7e6:	push   rsp
  42e7e7:	push   rax
  42e7e8:	add    BYTE PTR [rbx+0x55],al
  42e7eb:	push   rdx
  42e7ec:	rex.WR push rax
  42e7ee:	push   rdx
  42e7ef:	rex.WRXB push r12
  42e7f1:	rex.WRXB pop r15
  42e7f3:	rex.W push rsp
  42e7f5:	push   rsp
  42e7f6:	push   rax
  42e7f7:	push   rbx
  42e7f8:	add    BYTE PTR [rbx+0x55],al
  42e7fb:	push   rdx
  42e7fc:	rex.WR push rax
  42e7fe:	push   rdx
  42e7ff:	rex.WRXB push r12
  42e801:	rex.WRXB pop r15
  42e803:	rex.WB
  42e804:	rex.WRB
  42e805:	push   r8
  42e807:	add    BYTE PTR [rbx+0x55],al
  42e80a:	push   rdx
  42e80b:	rex.WR push rax
  42e80d:	push   rdx
  42e80e:	rex.WRXB push r12
  42e810:	rex.WRXB pop r15
  42e812:	rex.WB
  42e813:	rex.WRB
  42e814:	push   r8
  42e816:	push   rbx
  42e817:	add    BYTE PTR [rbx+0x55],al
  42e81a:	push   rdx
  42e81b:	rex.WR push rax
  42e81d:	push   rdx
  42e81e:	rex.WRXB push r12
  42e820:	rex.WRXB pop r15
  42e822:	rex.WR
  42e823:	rex.R
  42e824:	push   r8
  42e826:	add    BYTE PTR [rbx+0x55],al
  42e829:	push   rdx
  42e82a:	rex.WR push rax
  42e82c:	push   rdx
  42e82d:	rex.WRXB push r12
  42e82f:	rex.WRXB pop r15
  42e831:	rex.WR
  42e832:	rex.R
  42e833:	push   r8
  42e835:	push   rbx
  42e836:	add    BYTE PTR [rbx+0x55],al
  42e839:	push   rdx
  42e83a:	rex.WR push rax
  42e83c:	push   rdx
  42e83d:	rex.WRXB push r12
  42e83f:	rex.WRXB pop r15
  42e841:	push   rax
  42e842:	rex.WRXB push r8
  42e844:	xor    eax,DWORD PTR [rax]
  42e846:	rex.XB push r13
  42e848:	push   rdx
  42e849:	rex.WR push rax
  42e84b:	push   rdx
  42e84c:	rex.WRXB push r12
  42e84e:	rex.WRXB pop r15
  42e850:	push   rax
  42e851:	rex.WRXB push r8
  42e853:	xor    edx,DWORD PTR [rbx+0x0]
  42e856:	rex.XB push r13
  42e858:	push   rdx
  42e859:	rex.WR push rax
  42e85b:	push   rdx
  42e85c:	rex.WRXB push r12
  42e85e:	rex.WRXB pop r15
  42e860:	push   rdx
  42e861:	push   rsp
  42e862:	push   rbx
  42e863:	push   rax
  42e864:	add    BYTE PTR [rbx+0x55],al
  42e867:	push   rdx
  42e868:	rex.WR push rax
  42e86a:	push   rdx
  42e86b:	rex.WRXB push r12
  42e86d:	rex.WRXB pop r15
  42e86f:	push   rbx
  42e870:	rex.XB push r8
  42e872:	add    BYTE PTR [rbx+0x55],al
  42e875:	push   rdx
  42e876:	rex.WR push rax
  42e878:	push   rdx
  42e879:	rex.WRXB push r12
  42e87b:	rex.WRXB pop r15
  42e87d:	push   rbx
  42e87e:	rex.RX push rsp
  42e880:	push   rax
  42e881:	add    BYTE PTR [rbx+0x55],al
  42e884:	push   rdx
  42e885:	rex.WR push rax
  42e887:	push   rdx
  42e888:	rex.WRXB push r12
  42e88a:	rex.WRXB pop r15
  42e88c:	push   rbx
  42e88d:	rex.WRB
  42e88e:	rex.X add BYTE PTR [rbx+0x55],al
  42e892:	push   rdx
  42e893:	rex.WR push rax
  42e895:	push   rdx
  42e896:	rex.WRXB push r12
  42e898:	rex.WRXB pop r15
  42e89a:	push   rbx
  42e89b:	rex.WRB
  42e89c:	rex.X push rbx
  42e89e:	add    BYTE PTR [rbx+0x55],al
  42e8a1:	push   rdx
  42e8a2:	rex.WR push rax
  42e8a4:	push   rdx
  42e8a5:	rex.WRXB push r12
  42e8a7:	rex.WRXB pop r15
  42e8a9:	push   rbx
  42e8aa:	rex.WRB push r12
  42e8ac:	push   rax
  42e8ad:	add    BYTE PTR [rbx+0x55],al
  42e8b0:	push   rdx
  42e8b1:	rex.WR push rax
  42e8b3:	push   rdx
  42e8b4:	rex.WRXB push r12
  42e8b6:	rex.WRXB pop r15
  42e8b8:	push   rbx
  42e8b9:	rex.WRB push r12
  42e8bb:	push   rax
  42e8bc:	push   rbx
  42e8bd:	add    BYTE PTR [rbx+0x55],al
  42e8c0:	push   rdx
  42e8c1:	rex.WR push rax
  42e8c3:	push   rdx
  42e8c4:	rex.WRXB push r12
  42e8c6:	rex.WRXB pop r15
  42e8c8:	push   rsp
  42e8c9:	rex.RB
  42e8ca:	rex.WR
  42e8cb:	rex.WRX
  42e8cc:	rex.RB push r12
  42e8ce:	add    BYTE PTR [rbx+0x55],al
  42e8d1:	push   rdx
  42e8d2:	rex.WR push rax
  42e8d4:	push   rdx
  42e8d5:	rex.WRXB push r12
  42e8d7:	rex.WRXB pop r15
  42e8d9:	push   rsp
  42e8da:	rex.RX push rsp
  42e8dc:	push   rax
	...
  42e8fd:	add    BYTE PTR [rax],al
  42e8ff:	add    BYTE PTR [rax+0x42e7],al
  42e905:	add    BYTE PTR [rax],al
  42e907:	add    bh,bh
  42e909:	(bad)  
  42e90a:	(bad)  
  42e90b:	inc    DWORD PTR [rax]
  42e90d:	add    BYTE PTR [rax],al
  42e90f:	add    BYTE PTR [rsi+0x42e7],cl
  42e915:	add    BYTE PTR [rax],al
  42e917:	add    BYTE PTR [rax],al
  42e919:	add    al,BYTE PTR [rax]
  42e91b:	add    BYTE PTR [rax],al
  42e91d:	add    BYTE PTR [rax],al
  42e91f:	add    BYTE PTR [rbp+0x42e7],bl
  42e925:	add    BYTE PTR [rax],al
  42e927:	add    BYTE PTR [rax],al
  42e929:	add    al,0x0
  42e92b:	add    BYTE PTR [rax],al
  42e92d:	add    BYTE PTR [rax],al
  42e92f:	add    BYTE PTR [rdi+riz*8+0x42],ch
  42e936:	add    BYTE PTR [rax],al
  42e938:	add    al,0x0
  42e93a:	add    BYTE PTR [rax],al
  42e93c:	add    BYTE PTR [rax],al
  42e93e:	add    BYTE PTR [rax],al
  42e940:	mov    edx,0x42e7
  42e945:	add    BYTE PTR [rax],al
  42e947:	add    BYTE PTR [rax],cl
  42e949:	add    BYTE PTR [rax],al
  42e94b:	add    BYTE PTR [rax],al
  42e94d:	add    BYTE PTR [rax],al
  42e94f:	add    cl,cl
  42e951:	out    0x42,eax
	...
  42e95b:	add    al,BYTE PTR [rax]
  42e95d:	add    BYTE PTR [rax],al
  42e95f:	add    dl,bl
  42e961:	out    0x42,eax
  42e963:	add    BYTE PTR [rax],al
  42e965:	add    BYTE PTR [rax],al
  42e967:	add    BYTE PTR [rcx],al
  42e969:	add    BYTE PTR [rax],al
  42e96b:	add    BYTE PTR [rax],al
  42e96d:	add    BYTE PTR [rax],al
  42e96f:	add    cl,ch
  42e971:	out    0x42,eax
  42e973:	add    BYTE PTR [rax],al
  42e975:	add    BYTE PTR [rax],al
  42e977:	add    BYTE PTR [rdx],al
  42e979:	add    BYTE PTR [rax],al
  42e97b:	add    BYTE PTR [rax],al
  42e97d:	add    BYTE PTR [rax],al
  42e97f:	add    cl,bh
  42e981:	out    0x42,eax
  42e983:	add    BYTE PTR [rax],al
  42e985:	add    BYTE PTR [rax],al
  42e987:	add    BYTE PTR [rax],al
  42e989:	adc    BYTE PTR [rax],al
  42e98b:	add    BYTE PTR [rax],al
  42e98d:	add    BYTE PTR [rax],al
  42e98f:	add    BYTE PTR [rax],cl
  42e991:	call   0x42e9d8
  42e996:	add    BYTE PTR [rax],al
  42e998:	add    BYTE PTR [rax],ah
  42e99a:	add    BYTE PTR [rax],al
  42e99c:	add    BYTE PTR [rax],al
  42e99e:	add    BYTE PTR [rax],al
  42e9a0:	sbb    al,ch
  42e9a2:	rex.X add BYTE PTR [rax],al
  42e9a5:	add    BYTE PTR [rax],al
  42e9a7:	add    BYTE PTR [rax+0x0],al
  42e9ad:	add    BYTE PTR [rax],al
  42e9af:	add    BYTE PTR [rdi],ah
  42e9b1:	call   0x42e9f8
  42e9b6:	add    BYTE PTR [rax],al
  42e9b8:	add    BYTE PTR [rcx],al
  42e9ba:	add    BYTE PTR [rax],al
  42e9bc:	add    BYTE PTR [rax],al
  42e9be:	add    BYTE PTR [rax],al
  42e9c0:	(bad)  
  42e9c1:	call   0x42ea08
  42e9c6:	add    BYTE PTR [rax],al
  42e9c8:	add    BYTE PTR [rax+0x0],al
  42e9cb:	add    BYTE PTR [rax],al
  42e9cd:	add    BYTE PTR [rax],al
  42e9cf:	add    BYTE PTR [rsi-0x18],al
  42e9d2:	rex.X add BYTE PTR [rax],al
  42e9d5:	add    BYTE PTR [rax],al
  42e9d7:	add    BYTE PTR [rax],al
  42e9d9:	add    BYTE PTR [rax],0x0
  42e9dc:	add    BYTE PTR [rax],al
  42e9de:	add    BYTE PTR [rax],al
  42e9e0:	push   rsi
  42e9e1:	call   0x42ea28
  42e9e6:	add    BYTE PTR [rax],al
  42e9e8:	add    BYTE PTR [rax],al
  42e9ea:	add    al,0x0
  42e9ec:	add    BYTE PTR [rax],al
  42e9ee:	add    BYTE PTR [rax],al
  42e9f0:	gs call 0x42ea38
  42e9f6:	add    BYTE PTR [rax],al
  42e9f8:	adc    BYTE PTR [rax],al
  42e9fa:	add    BYTE PTR [rax],al
  42e9fc:	add    BYTE PTR [rax],al
  42e9fe:	add    BYTE PTR [rax],al
  42ea00:	jae    0x42e9ea
  42ea02:	rex.X add BYTE PTR [rax],al
  42ea05:	add    BYTE PTR [rax],al
  42ea07:	add    BYTE PTR [rax],ah
  42ea09:	add    BYTE PTR [rax],al
  42ea0b:	add    BYTE PTR [rax],al
  42ea0d:	add    BYTE PTR [rax],al
  42ea0f:	add    BYTE PTR [rdx+0x42e8],al
  42ea15:	add    BYTE PTR [rax],al
  42ea17:	add    BYTE PTR [rax],al
  42ea19:	add    BYTE PTR [rax],al
  42ea1b:	add    al,0x0
  42ea1d:	add    BYTE PTR [rax],al
  42ea1f:	add    BYTE PTR [rax+0x42e8],dl
  42ea25:	add    BYTE PTR [rax],al
  42ea27:	add    BYTE PTR [rax],al
  42ea29:	add    BYTE PTR [rax],al
  42ea2b:	or     BYTE PTR [rax],al
  42ea2d:	add    BYTE PTR [rax],al
  42ea2f:	add    BYTE PTR [rdi+0x42e8],bl
  42ea35:	add    BYTE PTR [rax],al
  42ea37:	add    BYTE PTR [rax],al
  42ea39:	add    BYTE PTR [rcx],al
  42ea3b:	add    BYTE PTR [rax],al
  42ea3d:	add    BYTE PTR [rax],al
  42ea3f:	add    BYTE PTR [rsi+0x42e8],ch
  42ea45:	add    BYTE PTR [rax],al
  42ea47:	add    BYTE PTR [rax],al
  42ea49:	add    BYTE PTR [rdx],al
  42ea4b:	add    BYTE PTR [rax],al
  42ea4d:	add    BYTE PTR [rax],al
  42ea4f:	add    BYTE PTR [rsi+0x42e8],bh
  42ea55:	add    BYTE PTR [rax],al
  42ea57:	add    BYTE PTR [rax+0x0],al
  42ea5a:	add    BYTE PTR [rax],al
  42ea5c:	add    BYTE PTR [rax],al
  42ea5e:	add    BYTE PTR [rax],al
  42ea60:	iret   
  42ea61:	call   0x42eaa8
  42ea66:	add    BYTE PTR [rax],al
  42ea68:	add    BYTE PTR [rax],cl
	...
  42ea7e:	add    BYTE PTR [rax],al
  42ea80:	rex.XB push r13
  42ea82:	push   rdx
  42ea83:	rex.WR pop rdi
  42ea85:	rex.WRX
  42ea86:	rex.RB push r12
  42ea88:	push   rdx
  42ea89:	rex.XB pop r15
  42ea8b:	rex.WB
  42ea8c:	rex.RXB
  42ea8d:	rex.WRX
  42ea8e:	rex.WRXB push r10
  42ea90:	rex.RB
  42ea91:	add    BYTE PTR [rbx+0x55],r8b
  42ea95:	push   rdx
  42ea96:	rex.WR pop rdi
  42ea98:	rex.WRX
  42ea99:	rex.RB push r12
  42ea9b:	push   rdx
  42ea9c:	rex.XB pop r15
  42ea9e:	rex.WRXB push r8
  42eaa0:	push   rsp
  42eaa1:	rex.WB
  42eaa2:	rex.WRXB
  42eaa3:	rex.WRX
  42eaa4:	rex.B
  42eaa5:	rex.WR add BYTE PTR [rbx+0x55],r8b
  42eaa9:	push   rdx
  42eaaa:	rex.WR pop rdi
  42eaac:	rex.WRX
  42eaad:	rex.RB push r12
  42eaaf:	push   rdx
  42eab0:	rex.XB pop r15
  42eab2:	push   rdx
  42eab3:	rex.RB push r9
  42eab5:	push   rbp
  42eab6:	rex.WB push r10
  42eab8:	rex.RB
  42eab9:	add    BYTE PTR [rax],r8b
  42eabc:	add    BYTE PTR [rax],al
  42eabe:	add    BYTE PTR [rax],al
  42eac0:	sub    dl,0x42
	...
  42eacf:	add    BYTE PTR [rbx+0x42ea],dl
  42ead5:	add    BYTE PTR [rax],al
  42ead7:	add    BYTE PTR [rcx],al
  42ead9:	add    BYTE PTR [rax],al
  42eadb:	add    BYTE PTR [rax],al
  42eadd:	add    BYTE PTR [rax],al
  42eadf:	add    BYTE PTR [rdi+0x42ea],ah
  42eae5:	add    BYTE PTR [rax],al
  42eae7:	add    BYTE PTR [rdx],al
	...
  42eafd:	add    BYTE PTR [rax],al
  42eaff:	add    BYTE PTR [rbx+0x55],al
  42eb02:	push   rdx
  42eb03:	rex.WR push rbx
  42eb05:	push   rbx
  42eb06:	rex.WR
  42eb07:	rex.WRXB push r8
  42eb09:	push   rsp
  42eb0a:	pop    rdi
  42eb0b:	rex.B
  42eb0c:	rex.WR
  42eb0d:	rex.WR
  42eb0e:	rex.WRXB push r15
  42eb10:	pop    rdi
  42eb11:	rex.X
  42eb12:	rex.RB
  42eb13:	push   r11
  42eb15:	push   rsp
  42eb16:	add    BYTE PTR [rbx+0x55],al
  42eb19:	push   rdx
  42eb1a:	rex.WR push rbx
  42eb1c:	push   rbx
  42eb1d:	rex.WR
  42eb1e:	rex.WRXB push r8
  42eb20:	push   rsp
  42eb21:	pop    rdi
  42eb22:	rex.WRX
  42eb23:	rex.WRXB pop r15
  42eb25:	push   rdx
  42eb26:	rex.RB push r14
  42eb28:	rex.WRXB
  42eb29:	rex.WXB
  42eb2a:	add    BYTE PTR [r8],r8b
	...
  42eb41:	jmp    0x42eb85
  42eb43:	add    BYTE PTR [rax],al
  42eb45:	add    BYTE PTR [rax],al
  42eb47:	add    BYTE PTR [rcx],al
  42eb49:	add    BYTE PTR [rax],al
  42eb4b:	add    BYTE PTR [rax],al
  42eb4d:	add    BYTE PTR [rax],al
  42eb4f:	add    BYTE PTR [rdi],dl
  42eb51:	jmp    0x42eb95
  42eb53:	add    BYTE PTR [rax],al
  42eb55:	add    BYTE PTR [rax],al
  42eb57:	add    BYTE PTR [rdx],al
	...
  42eb6d:	add    BYTE PTR [rax],al
  42eb6f:	add    BYTE PTR [rbx+0x55],al
  42eb72:	push   rdx
  42eb73:	rex.WR push rbp
  42eb75:	push   rbx
  42eb76:	rex.RB push r11
  42eb78:	push   rbx
  42eb79:	rex.WR pop rdi
  42eb7b:	rex.WRX
  42eb7c:	rex.WRXB
  42eb7d:	rex.WRX
  42eb7e:	add    BYTE PTR [r11+0x55],r8b
  42eb82:	push   rdx
  42eb83:	rex.WR push rbp
  42eb85:	push   rbx
  42eb86:	rex.RB push r11
  42eb88:	push   rbx
  42eb89:	rex.WR pop rdi
  42eb8b:	push   rsp
  42eb8c:	push   rdx
  42eb8d:	pop    rcx
  42eb8e:	add    BYTE PTR [rbx+0x55],al
  42eb91:	push   rdx
  42eb92:	rex.WR push rbp
  42eb94:	push   rbx
  42eb95:	rex.RB push r11
  42eb97:	push   rbx
  42eb98:	rex.WR pop rdi
  42eb9a:	rex.XB
  42eb9b:	rex.WRXB
  42eb9c:	rex.WRX push rsp
  42eb9e:	push   rdx
  42eb9f:	rex.WRXB
  42eba0:	rex.WR add BYTE PTR [rbx+0x55],r8b
  42eba4:	push   rdx
  42eba5:	rex.WR push rbp
  42eba7:	push   rbx
  42eba8:	rex.RB push r11
  42ebaa:	push   rbx
  42ebab:	rex.WR pop rdi
  42ebad:	rex.B
  42ebae:	rex.WR
  42ebaf:	rex.WR add BYTE PTR [rax],r8b
	...
  42ebbe:	add    BYTE PTR [rax],al
  42ebc0:	jo     0x42ebad
  42ebc2:	rex.X add BYTE PTR [rax],al
	...
  42ebcd:	add    BYTE PTR [rax],al
  42ebcf:	add    BYTE PTR [rax+0x42eb],al
  42ebd5:	add    BYTE PTR [rax],al
  42ebd7:	add    BYTE PTR [rcx],al
  42ebd9:	add    BYTE PTR [rax],al
  42ebdb:	add    BYTE PTR [rax],al
  42ebdd:	add    BYTE PTR [rax],al
  42ebdf:	add    BYTE PTR [rdi+0x42eb],cl
  42ebe5:	add    BYTE PTR [rax],al
  42ebe7:	add    BYTE PTR [rdx],al
  42ebe9:	add    BYTE PTR [rax],al
  42ebeb:	add    BYTE PTR [rax],al
  42ebed:	add    BYTE PTR [rax],al
  42ebef:	add    BYTE PTR [rdx+0x42eb],ah
  42ebf5:	add    BYTE PTR [rax],al
  42ebf7:	add    BYTE PTR [rbx],al
	...
  42ec0d:	add    BYTE PTR [rax],al
  42ec0f:	add    BYTE PTR [rbx+0x55],al
  42ec12:	push   rdx
  42ec13:	rex.WR
  42ec14:	rex.RX push rsp
  42ec16:	push   rax
  42ec17:	push   rbx
  42ec18:	push   rbx
  42ec19:	rex.WR pop rdi
  42ec1b:	rex.XB
  42ec1c:	rex.XB
  42ec1d:	rex.XB pop r15
  42ec1f:	rex.WRX
  42ec20:	rex.WRXB
  42ec21:	rex.WRX
  42ec22:	add    BYTE PTR [r11+0x55],r8b
  42ec26:	push   rdx
  42ec27:	rex.WR
  42ec28:	rex.RX push rsp
  42ec2a:	push   rax
  42ec2b:	push   rbx
  42ec2c:	push   rbx
  42ec2d:	rex.WR pop rdi
  42ec2f:	rex.XB
  42ec30:	rex.XB
  42ec31:	rex.XB pop r15
  42ec33:	push   rax
  42ec34:	push   r11
  42ec36:	push   rbx
  42ec37:	rex.WB push r14
  42ec39:	add    BYTE PTR [r11+0x55],r8b
  42ec3d:	push   rdx
  42ec3e:	rex.WR
  42ec3f:	rex.RX push rsp
  42ec41:	push   rax
  42ec42:	push   rbx
  42ec43:	push   rbx
  42ec44:	rex.WR pop rdi
  42ec46:	rex.XB
  42ec47:	rex.XB
  42ec48:	rex.XB pop r15
  42ec4a:	rex.B
  42ec4b:	rex.XB push r12
  42ec4d:	rex.WB push r14
  42ec4f:	add    BYTE PTR [r8],r8b
	...
  42ec7e:	add    BYTE PTR [rax],al
  42ec80:	adc    ah,ch
  42ec82:	rex.X add BYTE PTR [rax],al
	...
  42ec8d:	add    BYTE PTR [rax],al
  42ec8f:	add    BYTE PTR [rsp+rbp*8],ah
  42ec92:	rex.X add BYTE PTR [rax],al
  42ec95:	add    BYTE PTR [rax],al
  42ec97:	add    BYTE PTR [rcx],al
  42ec99:	add    BYTE PTR [rax],al
  42ec9b:	add    BYTE PTR [rax],al
  42ec9d:	add    BYTE PTR [rax],al
  42ec9f:	add    BYTE PTR [rbx],bh
  42eca1:	in     al,dx
  42eca2:	rex.X add BYTE PTR [rax],al
  42eca5:	add    BYTE PTR [rax],al
  42eca7:	add    BYTE PTR [rdx],al
	...
  42ecbd:	add    BYTE PTR [rax],al
  42ecbf:	add    BYTE PTR [rbx+0x55],al
  42ecc2:	push   rdx
  42ecc3:	rex.WR pop rdi
  42ecc5:	push   rsp
  42ecc6:	rex.WB
  42ecc7:	rex.WRB
  42ecc8:	rex.RB
  42ecc9:	rex.XB
  42ecca:	rex.WRXB
  42eccb:	rex.WRX
  42eccc:	rex.R pop rdi
  42ecce:	rex.WB
  42eccf:	rex.RX
  42ecd0:	rex.WRB
  42ecd1:	rex.WRXB
  42ecd2:	rex.R push rbx
  42ecd4:	rex.WB
  42ecd5:	rex.WRX
  42ecd6:	rex.XB
  42ecd7:	add    BYTE PTR [r11+0x55],r8b
  42ecdb:	push   rdx
  42ecdc:	rex.WR pop rdi
  42ecde:	push   rsp
  42ecdf:	rex.WB
  42ece0:	rex.WRB
  42ece1:	rex.RB
  42ece2:	rex.XB
  42ece3:	rex.WRXB
  42ece4:	rex.WRX
  42ece5:	rex.R pop rdi
  42ece7:	rex.WB
  42ece8:	rex.RX push rbp
  42ecea:	rex.WRX
  42eceb:	rex.WRB
  42ecec:	rex.WRXB
  42eced:	rex.R push rbx
  42ecef:	rex.WB
  42ecf0:	rex.WRX
  42ecf1:	rex.XB
  42ecf2:	add    BYTE PTR [r11+0x55],r8b
  42ecf6:	push   rdx
  42ecf7:	rex.WR pop rdi
  42ecf9:	push   rsp
  42ecfa:	rex.WB
  42ecfb:	rex.WRB
  42ecfc:	rex.RB
  42ecfd:	rex.XB
  42ecfe:	rex.WRXB
  42ecff:	rex.WRX
  42ed00:	rex.R pop rdi
  42ed02:	rex.WR
  42ed03:	push   r11
  42ed05:	push   rsp
  42ed06:	rex.WRB
  42ed07:	rex.WRXB
  42ed08:	add    BYTE PTR [rbx+0x55],r8b
  42ed0c:	push   rdx
  42ed0d:	rex.WR pop rdi
  42ed0f:	push   rsp
  42ed10:	rex.WB
  42ed11:	rex.WRB
  42ed12:	rex.RB
  42ed13:	rex.XB
  42ed14:	rex.WRXB
  42ed15:	rex.WRX
  42ed16:	rex.R pop rdi
  42ed18:	rex.WRX
  42ed19:	rex.WRXB
  42ed1a:	rex.WRX
  42ed1b:	add    BYTE PTR [r8],r8b
	...
  42ed3e:	add    BYTE PTR [rax],al
  42ed40:	shr    ah,0x42
  42ed43:	add    BYTE PTR [rax],al
  42ed45:	add    BYTE PTR [rax],al
  42ed47:	add    BYTE PTR [rcx],al
  42ed49:	add    BYTE PTR [rax],al
  42ed4b:	add    BYTE PTR [rax],al
  42ed4d:	add    BYTE PTR [rax],al
  42ed4f:	add    cl,bl
  42ed51:	in     al,dx
  42ed52:	rex.X add BYTE PTR [rax],al
  42ed55:	add    BYTE PTR [rax],al
  42ed57:	add    BYTE PTR [rdx],al
  42ed59:	add    BYTE PTR [rax],al
  42ed5b:	add    BYTE PTR [rax],al
  42ed5d:	add    BYTE PTR [rax],al
  42ed5f:	add    ah,dh
  42ed61:	in     al,dx
  42ed62:	rex.X add BYTE PTR [rax],al
  42ed65:	add    BYTE PTR [rax],al
  42ed67:	add    BYTE PTR [rbx],al
  42ed69:	add    BYTE PTR [rax],al
  42ed6b:	add    BYTE PTR [rax],al
  42ed6d:	add    BYTE PTR [rax],al
  42ed6f:	add    BYTE PTR [rdx],cl
  42ed71:	in     eax,dx
  42ed72:	rex.X add BYTE PTR [rax],al
	...
  42ed8d:	add    BYTE PTR [rax],al
  42ed8f:	add    BYTE PTR [rbx+0x55],al
  42ed92:	push   rdx
  42ed93:	rex.WR pop rdi
  42ed95:	push   rbx
  42ed96:	push   rbx
  42ed97:	rex.WR push rsi
  42ed99:	rex.RB push r10
  42ed9b:	push   rbx
  42ed9c:	rex.WB
  42ed9d:	rex.WRXB
  42ed9e:	rex.WRX pop rdi
  42eda0:	rex.R
  42eda1:	rex.RB
  42eda2:	rex.RX
  42eda3:	push   r13
  42eda5:	rex.WR push rsp
  42eda7:	add    BYTE PTR [rbx+0x55],al
  42edaa:	push   rdx
  42edab:	rex.WR pop rdi
  42edad:	push   rbx
  42edae:	push   rbx
  42edaf:	rex.WR push rsi
  42edb1:	rex.RB push r10
  42edb3:	push   rbx
  42edb4:	rex.WB
  42edb5:	rex.WRXB
  42edb6:	rex.WRX pop rdi
  42edb8:	push   rsp
  42edb9:	rex.WR push rbx
  42edbb:	jbe    0x42edee
  42edbd:	add    BYTE PTR [rbx+0x55],al
  42edc0:	push   rdx
  42edc1:	rex.WR pop rdi
  42edc3:	push   rbx
  42edc4:	push   rbx
  42edc5:	rex.WR push rsi
  42edc7:	rex.RB push r10
  42edc9:	push   rbx
  42edca:	rex.WB
  42edcb:	rex.WRXB
  42edcc:	rex.WRX pop rdi
  42edce:	push   rbx
  42edcf:	push   rbx
  42edd0:	rex.WR jbe 0x42ee05
  42edd3:	add    BYTE PTR [rbx+0x55],al
  42edd6:	push   rdx
  42edd7:	rex.WR pop rdi
  42edd9:	push   rbx
  42edda:	push   rbx
  42eddb:	rex.WR push rsi
  42eddd:	rex.RB push r10
  42eddf:	push   rbx
  42ede0:	rex.WB
  42ede1:	rex.WRXB
  42ede2:	rex.WRX pop rdi
  42ede4:	push   rbx
  42ede5:	push   rbx
  42ede6:	rex.WR jbe 0x42ee1c
  42ede9:	add    BYTE PTR [rbx+0x55],al
  42edec:	push   rdx
  42eded:	rex.WR pop rdi
  42edef:	push   rbx
  42edf0:	push   rbx
  42edf1:	rex.WR push rsi
  42edf3:	rex.RB push r10
  42edf5:	push   rbx
  42edf6:	rex.WB
  42edf7:	rex.WRXB
  42edf8:	rex.WRX pop rdi
  42edfa:	push   rsp
  42edfb:	rex.WR push rbx
  42edfd:	jbe    0x42ee30
  42edff:	pop    rdi
  42ee00:	xor    BYTE PTR [rax],al
  42ee02:	rex.XB push r13
  42ee04:	push   rdx
  42ee05:	rex.WR pop rdi
  42ee07:	push   rbx
  42ee08:	push   rbx
  42ee09:	rex.WR push rsi
  42ee0b:	rex.RB push r10
  42ee0d:	push   rbx
  42ee0e:	rex.WB
  42ee0f:	rex.WRXB
  42ee10:	rex.WRX pop rdi
  42ee12:	push   rsp
  42ee13:	rex.WR push rbx
  42ee15:	jbe    0x42ee48
  42ee17:	pop    rdi
  42ee18:	xor    DWORD PTR [rax],eax
  42ee1a:	rex.XB push r13
  42ee1c:	push   rdx
  42ee1d:	rex.WR pop rdi
  42ee1f:	push   rbx
  42ee20:	push   rbx
  42ee21:	rex.WR push rsi
  42ee23:	rex.RB push r10
  42ee25:	push   rbx
  42ee26:	rex.WB
  42ee27:	rex.WRXB
  42ee28:	rex.WRX pop rdi
  42ee2a:	push   rsp
  42ee2b:	rex.WR push rbx
  42ee2d:	jbe    0x42ee60
  42ee2f:	pop    rdi
  42ee30:	xor    al,BYTE PTR [rax]
  42ee32:	rex.XB push r13
  42ee34:	push   rdx
  42ee35:	rex.WR pop rdi
  42ee37:	push   rbx
  42ee38:	push   rbx
  42ee39:	rex.WR push rsi
  42ee3b:	rex.RB push r10
  42ee3d:	push   rbx
  42ee3e:	rex.WB
  42ee3f:	rex.WRXB
  42ee40:	rex.WRX pop rdi
  42ee42:	push   rsp
  42ee43:	rex.WR push rbx
  42ee45:	jbe    0x42ee78
  42ee47:	pop    rdi
  42ee48:	xor    eax,DWORD PTR [rax]
	...
  42ee7e:	add    BYTE PTR [rax],al
  42ee80:	nop
  42ee81:	in     eax,dx
  42ee82:	rex.X add BYTE PTR [rax],al
	...
  42ee8d:	add    BYTE PTR [rax],al
  42ee8f:	add    BYTE PTR [rax+0x42ed],ch
  42ee95:	add    BYTE PTR [rax],al
  42ee97:	add    BYTE PTR [rcx],al
  42ee99:	add    BYTE PTR [rax],al
  42ee9b:	add    BYTE PTR [rax],al
  42ee9d:	add    BYTE PTR [rax],al
  42ee9f:	add    BYTE PTR [rsi+0x42ed],bh
  42eea5:	add    BYTE PTR [rax],al
  42eea7:	add    BYTE PTR [rdx],al
  42eea9:	add    BYTE PTR [rax],al
  42eeab:	add    BYTE PTR [rax],al
  42eead:	add    BYTE PTR [rax],al
  42eeaf:	add    ah,dl
  42eeb1:	in     eax,dx
  42eeb2:	rex.X add BYTE PTR [rax],al
  42eeb5:	add    BYTE PTR [rax],al
  42eeb7:	add    BYTE PTR [rbx],al
  42eeb9:	add    BYTE PTR [rax],al
  42eebb:	add    BYTE PTR [rax],al
  42eebd:	add    BYTE PTR [rax],al
  42eebf:	add    dl,ch
  42eec1:	in     eax,dx
  42eec2:	rex.X add BYTE PTR [rax],al
  42eec5:	add    BYTE PTR [rax],al
  42eec7:	add    BYTE PTR [rax+rax*1],al
  42eeca:	add    BYTE PTR [rax],al
  42eecc:	add    BYTE PTR [rax],al
  42eece:	add    BYTE PTR [rax],al
  42eed0:	add    ch,dh
  42eed2:	rex.X add BYTE PTR [rax],al
  42eed5:	add    BYTE PTR [rax],al
  42eed7:	add    BYTE PTR [rip+0x0],al        # 0x42eedd
  42eedd:	add    BYTE PTR [rax],al
  42eedf:	add    BYTE PTR [rdx],bl
  42eee1:	out    dx,al
  42eee2:	rex.X add BYTE PTR [rax],al
  42eee5:	add    BYTE PTR [rax],al
  42eee7:	add    BYTE PTR [rsi],al
  42eee9:	add    BYTE PTR [rax],al
  42eeeb:	add    BYTE PTR [rax],al
  42eeed:	add    BYTE PTR [rax],al
  42eeef:	add    BYTE PTR [rdx],dh
  42eef1:	out    dx,al
  42eef2:	rex.X add BYTE PTR [rax],al
  42eef5:	add    BYTE PTR [rax],al
  42eef7:	add    BYTE PTR [rdi],al
	...
  42ef0d:	add    BYTE PTR [rax],al
  42ef0f:	add    BYTE PTR [rbx+0x55],al
  42ef12:	push   rdx
  42ef13:	rex.WR pop rdi
  42ef15:	rex.W push rsp
  42ef17:	push   rsp
  42ef18:	push   rax
  42ef19:	pop    rdi
  42ef1a:	push   rsi
  42ef1b:	rex.RB push r10
  42ef1d:	push   rbx
  42ef1e:	rex.WB
  42ef1f:	rex.WRXB
  42ef20:	rex.WRX pop rdi
  42ef22:	rex.WRX
  42ef23:	rex.WRXB
  42ef24:	rex.WRX
  42ef25:	add    BYTE PTR [r11+0x55],r8b
  42ef29:	push   rdx
  42ef2a:	rex.WR pop rdi
  42ef2c:	rex.W push rsp
  42ef2e:	push   rsp
  42ef2f:	push   rax
  42ef30:	pop    rdi
  42ef31:	push   rsi
  42ef32:	rex.RB push r10
  42ef34:	push   rbx
  42ef35:	rex.WB
  42ef36:	rex.WRXB
  42ef37:	rex.WRX pop rdi
  42ef39:	xor    DWORD PTR [rdi+0x30],ebx
  42ef3c:	add    BYTE PTR [rbx+0x55],al
  42ef3f:	push   rdx
  42ef40:	rex.WR pop rdi
  42ef42:	rex.W push rsp
  42ef44:	push   rsp
  42ef45:	push   rax
  42ef46:	pop    rdi
  42ef47:	push   rsi
  42ef48:	rex.RB push r10
  42ef4a:	push   rbx
  42ef4b:	rex.WB
  42ef4c:	rex.WRXB
  42ef4d:	rex.WRX pop rdi
  42ef4f:	xor    DWORD PTR [rdi+0x31],ebx
  42ef52:	add    BYTE PTR [rbx+0x55],al
  42ef55:	push   rdx
  42ef56:	rex.WR pop rdi
  42ef58:	rex.W push rsp
  42ef5a:	push   rsp
  42ef5b:	push   rax
  42ef5c:	pop    rdi
  42ef5d:	push   rsi
  42ef5e:	rex.RB push r10
  42ef60:	push   rbx
  42ef61:	rex.WB
  42ef62:	rex.WRXB
  42ef63:	rex.WRX pop rdi
  42ef65:	xor    bl,BYTE PTR [rdi+0x30]
  42ef68:	add    BYTE PTR [rbx+0x55],al
  42ef6b:	push   rdx
  42ef6c:	rex.WR pop rdi
  42ef6e:	rex.W push rsp
  42ef70:	push   rsp
  42ef71:	push   rax
  42ef72:	pop    rdi
  42ef73:	push   rsi
  42ef74:	rex.RB push r10
  42ef76:	push   rbx
  42ef77:	rex.WB
  42ef78:	rex.WRXB
  42ef79:	rex.WRX pop rdi
  42ef7b:	xor    dl,BYTE PTR [rsp+rcx*2+0x53]
  42ef7f:	add    BYTE PTR [rax],dl
  42ef81:	out    dx,eax
  42ef82:	rex.X add BYTE PTR [rax],al
	...
  42ef8d:	add    BYTE PTR [rax],al
  42ef8f:	add    BYTE PTR [rdi],ah
  42ef91:	out    dx,eax
  42ef92:	rex.X add BYTE PTR [rax],al
  42ef95:	add    BYTE PTR [rax],al
  42ef97:	add    BYTE PTR [rcx],al
  42ef99:	add    BYTE PTR [rax],al
  42ef9b:	add    BYTE PTR [rax],al
  42ef9d:	add    BYTE PTR [rax],al
  42ef9f:	add    BYTE PTR [rip+0x42ef],bh        # 0x433294
  42efa5:	add    BYTE PTR [rax],al
  42efa7:	add    BYTE PTR [rdx],al
  42efa9:	add    BYTE PTR [rax],al
  42efab:	add    BYTE PTR [rax],al
  42efad:	add    BYTE PTR [rax],al
  42efaf:	add    BYTE PTR [rbx-0x11],dl
  42efb2:	rex.X add BYTE PTR [rax],al
  42efb5:	add    BYTE PTR [rax],al
  42efb7:	add    BYTE PTR [rbx],al
  42efb9:	add    BYTE PTR [rax],al
  42efbb:	add    BYTE PTR [rax],al
  42efbd:	add    BYTE PTR [rax],al
  42efbf:	add    BYTE PTR [rcx-0x11],ch
  42efc2:	rex.X add BYTE PTR [rax],al
  42efc5:	add    BYTE PTR [rax],al
  42efc7:	add    BYTE PTR [rax+rax*1],al
	...
  42efde:	add    BYTE PTR [rax],al
  42efe0:	rex.XB push r13
  42efe2:	push   rdx
  42efe3:	rex.WR
  42efe4:	push   r13
  42efe6:	push   rsp
  42efe7:	rex.W pop rdi
  42efe9:	rex.B
  42efea:	rex.WRX pop rcx
  42efec:	add    BYTE PTR [rbx+0x55],al
  42efef:	push   rdx
  42eff0:	rex.WR
  42eff1:	push   r13
  42eff3:	push   rsp
  42eff4:	rex.W pop rdi
  42eff6:	rex.B
  42eff7:	rex.WRX pop rcx
  42eff9:	push   rbx
  42effa:	rex.B
  42effb:	rex.RX
  42effc:	add    BYTE PTR [r11+0x55],r8b
  42f000:	push   rdx
  42f001:	rex.WR
  42f002:	push   r13
  42f004:	push   rsp
  42f005:	rex.W pop rdi
  42f007:	rex.X
  42f008:	push   r11
  42f00a:	rex.WB
  42f00b:	rex.XB add BYTE PTR [r11+0x55],al
  42f00f:	push   rdx
  42f010:	rex.WR
  42f011:	push   r13
  42f013:	push   rsp
  42f014:	rex.W pop rdi
  42f016:	rex.R
  42f017:	rex.WB
  42f018:	rex.RXB
  42f019:	rex.RB push r11
  42f01b:	push   rsp
  42f01c:	add    BYTE PTR [rbx+0x55],al
  42f01f:	push   rdx
  42f020:	rex.WR
  42f021:	push   r13
  42f023:	push   rsp
  42f024:	rex.W pop rdi
  42f026:	rex.RXB push r11
  42f028:	push   rbx
  42f029:	rex.WRX
  42f02a:	rex.RB
  42f02b:	rex.RXB
  42f02c:	rex.WRXB push r12
  42f02e:	rex.WB
  42f02f:	push   r12
  42f031:	add    BYTE PTR [r11+0x55],r8b
  42f035:	push   rdx
  42f036:	rex.WR
  42f037:	push   r13
  42f039:	push   rsp
  42f03a:	rex.W pop rdi
  42f03c:	rex.WRX push rsp
  42f03e:	rex.WR
  42f03f:	rex.WRB add BYTE PTR [r11+0x55],r8b
  42f043:	push   rdx
  42f044:	rex.WR
  42f045:	push   r13
  42f047:	push   rsp
  42f048:	rex.W pop rdi
  42f04a:	rex.R
  42f04b:	rex.WB
  42f04c:	rex.RXB
  42f04d:	rex.RB push r11
  42f04f:	push   rsp
  42f050:	pop    rdi
  42f051:	rex.WB
  42f052:	add    BYTE PTR [r11+0x55],r8b
  42f056:	push   rdx
  42f057:	rex.WR
  42f058:	push   r13
  42f05a:	push   rsp
  42f05b:	rex.W pop rdi
  42f05d:	rex.WRX push rsp
  42f05f:	rex.WR
  42f060:	rex.WRB pop r15
  42f062:	push   rdi
  42f063:	rex.X add BYTE PTR [rbx+0x55],al
  42f067:	push   rdx
  42f068:	rex.WR
  42f069:	push   r13
  42f06b:	push   rsp
  42f06c:	rex.W pop rdi
  42f06e:	rex.WRXB
  42f06f:	rex.WRX
  42f070:	rex.WR pop rcx
  42f072:	add    BYTE PTR [rbx+0x55],al
  42f075:	push   rdx
  42f076:	rex.WR
  42f077:	push   r13
  42f079:	push   rsp
  42f07a:	rex.W pop rdi
  42f07c:	rex.WRX
  42f07d:	rex.WRXB
  42f07e:	rex.WRX
  42f07f:	add    BYTE PTR [r8],r8b
	...
  42f0be:	add    BYTE PTR [rax],al
  42f0c0:	loopne 0x42f0b1
  42f0c2:	rex.X add BYTE PTR [rax],al
  42f0c5:	add    BYTE PTR [rax],al
  42f0c7:	add    bh,ch
  42f0c9:	(bad)  
  42f0ca:	(bad)  
  42f0cb:	inc    DWORD PTR [rax]
  42f0cd:	add    BYTE PTR [rax],al
  42f0cf:	add    ch,ch
  42f0d1:	out    dx,eax
  42f0d2:	rex.X add BYTE PTR [rax],al
  42f0d5:	add    BYTE PTR [rax],al
  42f0d7:	add    dh,ch
  42f0d9:	(bad)  
  42f0da:	(bad)  
  42f0db:	inc    DWORD PTR [rax]
  42f0dd:	add    BYTE PTR [rax],al
  42f0df:	add    dh,bh
  42f0e1:	out    dx,eax
  42f0e2:	rex.X add BYTE PTR [rax],al
  42f0e5:	add    BYTE PTR [rax],al
  42f0e7:	add    BYTE PTR [rcx],al
  42f0e9:	add    BYTE PTR [rax],al
  42f0eb:	add    BYTE PTR [rax],al
  42f0ed:	add    BYTE PTR [rax],al
  42f0ef:	add    BYTE PTR [rip+0x42f0],cl        # 0x4333e5
  42f0f5:	add    BYTE PTR [rax],al
  42f0f7:	add    BYTE PTR [rdx],al
  42f0f9:	add    BYTE PTR [rax],al
  42f0fb:	add    BYTE PTR [rax],al
  42f0fd:	add    BYTE PTR [rax],al
  42f0ff:	add    BYTE PTR [rip+0x42f0],bl        # 0x4333f5
  42f105:	add    BYTE PTR [rax],al
  42f107:	add    BYTE PTR [rax+rax*1],al
  42f10a:	add    BYTE PTR [rax],al
  42f10c:	add    BYTE PTR [rax],al
  42f10e:	add    BYTE PTR [rax],al
  42f110:	xor    esi,eax
  42f112:	rex.X add BYTE PTR [rax],al
  42f115:	add    BYTE PTR [rax],al
  42f117:	add    BYTE PTR [rax],cl
  42f119:	add    BYTE PTR [rax],al
  42f11b:	add    BYTE PTR [rax],al
  42f11d:	add    BYTE PTR [rax],al
  42f11f:	add    BYTE PTR [rcx-0x10],al
  42f122:	rex.X add BYTE PTR [rax],al
  42f125:	add    BYTE PTR [rax],al
  42f127:	add    BYTE PTR [rax],dl
  42f129:	add    BYTE PTR [rax],al
  42f12b:	add    BYTE PTR [rax],al
  42f12d:	add    BYTE PTR [rax],al
  42f12f:	add    BYTE PTR [rax+rsi*8+0x42],dl
  42f133:	add    BYTE PTR [rax],al
  42f135:	add    BYTE PTR [rax],al
  42f137:	add    BYTE PTR [rax],ah
  42f139:	add    BYTE PTR [rax],al
  42f13b:	add    BYTE PTR [rax],al
  42f13d:	add    BYTE PTR [rax],al
  42f13f:	add    BYTE PTR [rbp-0x10],ah
  42f142:	rex.X add BYTE PTR [rax],al
  42f145:	add    BYTE PTR [rax],al
  42f147:	add    BYTE PTR [rax],al
  42f149:	add    BYTE PTR [rax],al
  42f14b:	add    BYTE PTR [rax],0x0
  42f14e:	add    BYTE PTR [rax],al
  42f150:	jae    0x42f142
  42f152:	rex.X add BYTE PTR [rax],al
	...
  42f16d:	add    BYTE PTR [rax],al
  42f16f:	add    BYTE PTR [rbx+0x55],al
  42f172:	push   rdx
  42f173:	rex.WR push rax
  42f175:	push   rdx
  42f176:	rex.WRXB pop r8
  42f178:	pop    rcx
  42f179:	pop    rdi
  42f17a:	push   rbx
  42f17b:	rex.WRXB
  42f17c:	rex.XB
  42f17d:	rex.WXB push r11
  42f17f:	xor    al,0x0
  42f181:	rex.XB push r13
  42f183:	push   rdx
  42f184:	rex.WR push rax
  42f186:	push   rdx
  42f187:	rex.WRXB pop r8
  42f189:	pop    rcx
  42f18a:	pop    rdi
  42f18b:	push   rbx
  42f18c:	rex.WRXB
  42f18d:	rex.XB
  42f18e:	rex.WXB push r11
  42f190:	xor    eax,0x52554300
  42f195:	rex.WR push rax
  42f197:	push   rdx
  42f198:	rex.WRXB pop r8
  42f19a:	pop    rcx
  42f19b:	pop    rdi
  42f19c:	push   rbx
  42f19d:	rex.WRXB
  42f19e:	rex.XB
  42f19f:	rex.WXB push r11
  42f1a1:	xor    al,0x41
  42f1a3:	add    BYTE PTR [rbx+0x55],al
  42f1a6:	push   rdx
  42f1a7:	rex.WR push rax
  42f1a9:	push   rdx
  42f1aa:	rex.WRXB pop r8
  42f1ac:	pop    rcx
  42f1ad:	pop    rdi
  42f1ae:	push   rbx
  42f1af:	rex.WRXB
  42f1b0:	rex.XB
  42f1b1:	rex.WXB push r11
  42f1b3:	xor    eax,0x534f485f
  42f1b8:	push   rsp
  42f1b9:	rex.WRX
  42f1ba:	rex.B
  42f1bb:	rex.WRB
  42f1bc:	add    BYTE PTR [r8],r8b
  42f1bf:	add    BYTE PTR [rax-0xf],dh
  42f1c2:	rex.X add BYTE PTR [rax],al
  42f1c5:	add    BYTE PTR [rax],al
  42f1c7:	add    BYTE PTR [rax+rax*1],al
  42f1ca:	add    BYTE PTR [rax],al
  42f1cc:	add    BYTE PTR [rax],al
  42f1ce:	add    BYTE PTR [rax],al
  42f1d0:	xor    ecx,0x42
  42f1d6:	add    BYTE PTR [rax],al
  42f1d8:	add    eax,0x0
  42f1dd:	add    BYTE PTR [rax],al
  42f1df:	add    BYTE PTR [rdx+0x42f1],dl
  42f1e5:	add    BYTE PTR [rax],al
  42f1e7:	add    BYTE PTR [rsi],al
  42f1e9:	add    BYTE PTR [rax],al
  42f1eb:	add    BYTE PTR [rax],al
  42f1ed:	add    BYTE PTR [rax],al
  42f1ef:	add    BYTE PTR [rcx+rsi*8+0x42],ah
  42f1f6:	add    BYTE PTR [rax],al
  42f1f8:	(bad)  
	...
  42f20d:	add    BYTE PTR [rax],al
  42f20f:	add    BYTE PTR [rbx+0x55],al
  42f212:	push   rdx
  42f213:	rex.WR push rax
  42f215:	push   rdx
  42f216:	rex.WRXB pop r8
  42f218:	pop    rcx
  42f219:	pop    rdi
  42f21a:	rex.W push rsp
  42f21c:	push   rsp
  42f21d:	push   rax
  42f21e:	add    BYTE PTR [rbx+0x55],al
  42f221:	push   rdx
  42f222:	rex.WR push rax
  42f224:	push   rdx
  42f225:	rex.WRXB pop r8
  42f227:	pop    rcx
  42f228:	pop    rdi
  42f229:	rex.W push rsp
  42f22b:	push   rsp
  42f22c:	push   rax
  42f22d:	pop    rdi
  42f22e:	xor    DWORD PTR [rdi+0x30],ebx
  42f231:	add    BYTE PTR [rbx+0x55],al
  42f234:	push   rdx
  42f235:	rex.WR push rax
  42f237:	push   rdx
  42f238:	rex.WRXB pop r8
  42f23a:	pop    rcx
  42f23b:	pop    rdi
  42f23c:	rex.W push rsp
  42f23e:	push   rsp
  42f23f:	push   rax
  42f240:	push   rbx
	...
  42f27d:	add    BYTE PTR [rax],al
  42f27f:	add    BYTE PTR [rax],dl
  42f281:	repnz rex.X add BYTE PTR [rax],al
	...
  42f28d:	add    BYTE PTR [rax],al
  42f28f:	add    BYTE PTR [rdi],bl
  42f291:	repnz rex.X add BYTE PTR [rax],al
  42f295:	add    BYTE PTR [rax],al
  42f297:	add    BYTE PTR [rcx],al
  42f299:	add    BYTE PTR [rax],al
  42f29b:	add    BYTE PTR [rax],al
  42f29d:	add    BYTE PTR [rax],al
  42f29f:	add    BYTE PTR [rdx],dh
  42f2a1:	repnz rex.X add BYTE PTR [rax],al
  42f2a5:	add    BYTE PTR [rax],al
  42f2a7:	add    BYTE PTR [rdx],al
  42f2a9:	add    BYTE PTR [rax],al
  42f2ab:	add    BYTE PTR [rax],al
  42f2ad:	add    BYTE PTR [rax],al
  42f2af:	add    BYTE PTR [rax-0xf],dh
  42f2b2:	rex.X add BYTE PTR [rax],al
  42f2b5:	add    BYTE PTR [rax],al
  42f2b7:	add    BYTE PTR [rax+rax*1],al
  42f2ba:	add    BYTE PTR [rax],al
  42f2bc:	add    BYTE PTR [rax],al
  42f2be:	add    BYTE PTR [rax],al
  42f2c0:	xor    ecx,0x42
  42f2c6:	add    BYTE PTR [rax],al
  42f2c8:	add    eax,0x0
  42f2cd:	add    BYTE PTR [rax],al
  42f2cf:	add    BYTE PTR [rdx+0x42f1],dl
  42f2d5:	add    BYTE PTR [rax],al
  42f2d7:	add    BYTE PTR [rsi],al
  42f2d9:	add    BYTE PTR [rax],al
  42f2db:	add    BYTE PTR [rax],al
  42f2dd:	add    BYTE PTR [rax],al
  42f2df:	add    BYTE PTR [rcx+rsi*8+0x42],ah
  42f2e6:	add    BYTE PTR [rax],al
  42f2e8:	(bad)  
	...
  42f2fd:	add    BYTE PTR [rax],al
  42f2ff:	add    BYTE PTR [rbp+0x6e],dh
  42f302:	ins    DWORD PTR es:[rdi],dx
  42f303:	(bad)  
  42f304:	je     0x42f369
  42f306:	push   0x63206465
  42f30b:	ins    BYTE PTR es:[rdi],dx
  42f30c:	outs   dx,DWORD PTR ds:[rsi]
  42f30d:	jae    0x42f374
  42f30f:	and    BYTE PTR [rdx+0x72],ah
  42f312:	(bad)  
  42f313:	movsxd esp,DWORD PTR [rbp+0x2f]
  42f316:	(bad)  
  42f318:	(bad)  
  42f319:	movsxd ebp,DWORD PTR [rbx+0x65]
  42f31c:	je     0x42f31e
  42f31e:	outs   dx,DWORD PTR ds:[rsi]
  42f31f:	jne    0x42f395
  42f321:	and    BYTE PTR [rdi+0x66],ch
  42f324:	and    BYTE PTR [rbp+0x65],ch
  42f327:	ins    DWORD PTR es:[rdi],dx
  42f328:	outs   dx,DWORD PTR ds:[rsi]
  42f329:	jb     0x42f3a4
  42f32b:	add    BYTE PTR [rbp+0x6e],dh
  42f32e:	ins    DWORD PTR es:[rdi],dx
  42f32f:	(bad)  
  42f330:	je     0x42f395
  42f332:	push   0x62206465
  42f337:	jb     0x42f39a
  42f339:	movsxd esp,DWORD PTR [rbp+0x0]
  42f33c:	outs   dx,BYTE PTR ds:[rsi]
  42f33d:	gs jae 0x42f3b4
  42f340:	gs and BYTE PTR fs:[rdx+0x72],ah
  42f345:	(bad)  
  42f346:	movsxd esp,DWORD PTR [rbp+0x0]
  42f349:	gs ins DWORD PTR es:[rdi],dx
  42f34b:	jo     0x42f3c1
  42f34d:	jns    0x42f36f
  42f34f:	jae    0x42f3c5
  42f351:	jb     0x42f3bc
  42f353:	outs   dx,BYTE PTR ds:[rsi]
  42f354:	and    BYTE PTR [edi+0x69],dh
  42f358:	je     0x42f3c2
  42f35a:	imul   ebp,DWORD PTR [rsi+0x20],0x63617262
  42f361:	gs jae 0x42f364
  42f364:	jne    0x42f3d4
  42f366:	gs js  0x42f3d9
  42f369:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  42f36e:	and    BYTE PTR [rbx+0x6c],ah
  42f371:	outs   dx,DWORD PTR ds:[rsi]
  42f372:	jae    0x42f3d9
  42f374:	and    BYTE PTR [rdx+0x72],ah
  42f377:	(bad)  
  42f378:	movsxd ebp,DWORD PTR [rbx+0x65]
  42f37b:	je     0x42f37d
  42f37d:	and    eax,0x63252d63
  42f382:	and    eax,0x61620063
  42f387:	and    BYTE PTR fs:[rdx+0x61],dh
  42f38b:	outs   dx,BYTE PTR ds:[rsi]
  42f38c:	add    BYTE PTR gs:[edx+0x61],ah
  42f391:	and    BYTE PTR fs:[rdx+0x61],dh
  42f395:	outs   dx,BYTE PTR ds:[rsi]
  42f396:	and    BYTE PTR gs:[ebx+0x70],dh
  42f39b:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  42f39f:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  42f3a6:	add    BYTE PTR [rdi+rbp*2+0x6f],dh
  42f3aa:	and    BYTE PTR [rbp+0x61],ch
  42f3ad:	outs   dx,BYTE PTR ds:[rsi]
  42f3ae:	jns    0x42f3d0
  42f3b0:	ins    BYTE PTR es:[edi],dx
  42f3b2:	outs   dx,DWORD PTR ds:[rsi]
  42f3b3:	(bad)  
  42f3b5:	add    BYTE PTR [rip+0x6e692073],ah        # 0x6eac142e
  42f3bb:	and    BYTE PTR [rbx+0x6f],ah
  42f3be:	ins    BYTE PTR es:[rdi],dx
  42f3bf:	jne    0x42f42e
  42f3c1:	outs   dx,BYTE PTR ds:[rsi]
  42f3c2:	and    BYTE PTR [rip+0x6300757a],ah        # 0x63436942
  42f3c8:	jne    0x42f43c
  42f3ca:	ins    BYTE PTR es:[rdi],dx
  42f3cb:	cmp    ah,BYTE PTR [rax]
  42f3cd:	sub    BYTE PTR [rip+0x5b202964],ah        # 0x5b631d37
  42f3d3:	ins    BYTE PTR es:[edi],dx
  42f3d5:	outs   dx,DWORD PTR ds:[rsi]
  42f3d6:	(bad)  
  42f3d8:	imul   ebp,DWORD PTR [rsi+0x67],0x7325205d
  42f3df:	or     al,BYTE PTR [rax]
  42f3e1:	jb     0x42f444
  42f3e3:	outs   dx,BYTE PTR ds:[rsi]
  42f3e4:	and    BYTE PTR gs:[edi+0x76],ch
  42f3e9:	gs jb  0x42f452
  42f3ec:	ins    BYTE PTR es:[rdi],dx
  42f3ed:	outs   dx,DWORD PTR ds:[rsi]
  42f3ee:	ja     0x42f3f0
  42f3f0:	imul   ebp,DWORD PTR [rsi+0x74],0x616e7265
  42f3f7:	ins    BYTE PTR es:[rdi],dx
  42f3f8:	and    BYTE PTR [rbp+0x72],ah
  42f3fb:	jb     0x42f46c
  42f3fd:	jb     0x42f439
  42f3ff:	and    BYTE PTR [rcx+0x6e],ch
  42f402:	jbe    0x42f465
  42f404:	ins    BYTE PTR es:[rdi],dx
  42f405:	imul   esp,DWORD PTR [rax+riz*1+0x70],0x65747461
  42f40d:	jb     0x42f47d
  42f40f:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  42f413:	and    BYTE PTR gs:[rax],ch
  42f416:	and    eax,0xa2964
  42f41b:	and    eax,0x30250073
  42f420:	sub    ch,BYTE PTR [rsp+riz*2+0x0]
  42f424:	and    eax,0x642a30
	...
  42f431:	add    BYTE PTR [rax],al
  42f433:	add    BYTE PTR [rax+0x412e84],al
  42f439:	add    BYTE PTR [rax],al
  42f43b:	add    BYTE PTR [rax],al
  42f43d:	add    BYTE PTR [rax],al
  42f43f:	add    BYTE PTR [rbp+0x72],dh
  42f442:	ins    BYTE PTR es:[rdi],dx
  42f443:	pop    rdi
  42f444:	gs data16 movsxd si,DWORD PTR gs:[rcx+rbp*2+0x76]
  42f44c:	add    BYTE PTR gs:[rax],dh
  42f44f:	add    BYTE PTR [rcx],dh
  42f451:	xor    BYTE PTR cs:[rax],al
  42f454:	xor    DWORD PTR [rsi],ebp
  42f456:	xor    DWORD PTR [rax],eax
  42f458:	xor    al,BYTE PTR [rax]
  42f45a:	and    eax,0x3025007b
  42f45f:	xor    ebp,DWORD PTR [rsp+riz*2+0x0]
  42f463:	and    eax,0x2500646c
  42f468:	cs data16 add BYTE PTR ss:[rip+0x66302e],ah        # 0xa9249f
  42f471:	and    eax,0x66332e
  42f476:	and    eax,0x73
  42f47b:	add    BYTE PTR [rax],al
  42f47d:	add    BYTE PTR [rax],al
  42f47f:	add    BYTE PTR [rbx+0x75],ah
  42f482:	jb     0x42f4f0
  42f484:	cmp    ah,BYTE PTR [rax]
  42f486:	jne    0x42f4f6
  42f488:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  42f48c:	outs   dx,BYTE PTR ds:[rsi]
  42f48d:	and    BYTE PTR [rip+0x6972772d],ch        # 0x69b56bc0
  42f493:	je     0x42f4fa
  42f495:	sub    eax,0x2074756f
  42f49a:	jbe    0x42f4fd
  42f49c:	jb     0x42f507
  42f49e:	(bad)  
  42f49f:	(bad)  
  42f4a0:	ins    BYTE PTR es:[rdi],dx
  42f4a1:	cmp    ah,BYTE PTR gs:[rax]
  42f4a4:	(bad)  
  42f4a5:	and    eax,0xa2773
  42f4aa:	add    BYTE PTR [rax],al
  42f4ac:	mov    ah,0x6
  42f4ae:	(bad)  
  42f4af:	call   FWORD PTR [rdi]
  42f4b1:	or     al,0xfe
  42f4b3:	(bad)  
  42f4b4:	cli    
  42f4b5:	or     edi,esi
  42f4b7:	call   rbp
  42f4b9:	or     edi,esi
  42f4bb:	push   QWORD PTR [rax-0x740001f5]
  42f4c1:	or     edi,esi
  42f4c3:	jmp    QWORD PTR [rsi+0xb]
  42f4c6:	(bad)  
  42f4c7:	inc    DWORD PTR [rbx+rcx*1-0x2]
  42f4cb:	inc    DWORD PTR [rax]
  42f4cd:	or     edi,esi
  42f4cf:	(bad)  
  42f4d0:	fimul  WORD PTR [rdx]
  42f4d2:	(bad)  
  42f4d3:	call   FWORD PTR [rdx+0x78fffe0a]
  42f4d9:	or     bh,dh
  42f4db:	(bad)  
  42f4dc:	ds or  bh,dh
  42f4df:	call   FWORD PTR [rcx]
  42f4e1:	or     bh,dh
  42f4e3:	push   rsp
  42f4e5:	or     esi,edi
  42f4e7:	dec    edi
  42f4e9:	or     esi,edi
  42f4eb:	jmp    FWORD PTR [rdx-0x7a0001f7]
  42f4f1:	or     esi,edi
  42f4f3:	inc    DWORD PTR [rcx+0x9]
  42f4f6:	(bad)  
  42f4f7:	call   FWORD PTR [rcx+rcx*1]
  42f4fa:	(bad)  
  42f4fb:	(bad)  
  42f4fc:	cli    
  42f4fd:	or     dh,bh
  42f4ff:	(bad)  
  42f500:	mov    edi,0x9afffe08
  42f505:	or     dh,bh
  42f507:	push   QWORD PTR [rbp+0x8]
  42f50a:	(bad)  
  42f50b:	jmp    QWORD PTR [rax+0x8]
  42f50e:	(bad)  
  42f50f:	(bad)  
  42f510:	ds or  dh,bh
  42f513:	call   FWORD PTR [rax+rcx*1]
  42f516:	(bad)  
  42f517:	jmp    rdx
  42f519:	(bad)  
  42f51a:	(bad)  
  42f51b:	jmp    FWORD PTR [rax+0x5bfffe07]
  42f521:	(bad)  
  42f522:	(bad)  
  42f523:	jmp    FWORD PTR [rbp+0x7]
  42f526:	(bad)  
  42f527:	jmp    FWORD PTR [rax+0x74]
  42f52a:	je     0x42f59c
  42f52c:	pop    rdi
  42f52d:	movsxd ebp,DWORD PTR [rdi+0x64]
  42f530:	add    BYTE PTR gs:[rdx+0x65],dh
  42f534:	jae    0x42f5a6
  42f536:	outs   dx,DWORD PTR ds:[rsi]
  42f537:	outs   dx,BYTE PTR ds:[rsi]
  42f538:	jae    0x42f59f
  42f53a:	pop    rdi
  42f53b:	movsxd ebp,DWORD PTR [rdi+0x64]
  42f53e:	add    BYTE PTR gs:[rax+0x74],ch
  42f542:	je     0x42f5b4
  42f544:	pop    rdi
  42f545:	movsxd ebp,DWORD PTR [rdi+0x6e]
  42f548:	outs   dx,BYTE PTR ds:[rsi]
  42f549:	movsxd esi,DWORD PTR gs:[rax+rax*1+0x74]
  42f54e:	imul   ebp,DWORD PTR [rbp+0x65],0x746f745f
  42f555:	(bad)  
  42f556:	ins    BYTE PTR es:[rdi],dx
  42f557:	add    BYTE PTR [rcx+rbp*2+0x6d],dh
  42f55b:	gs pop rdi
  42f55d:	outs   dx,BYTE PTR ds:[rsi]
  42f55e:	(bad)  
  42f55f:	ins    DWORD PTR es:[rdi],dx
  42f560:	gs ins BYTE PTR es:[rdi],dx
  42f562:	outs   dx,DWORD PTR ds:[rsi]
  42f563:	outs   dx,DWORD PTR ds:[rsi]
  42f564:	imul   esi,DWORD PTR [rbp+0x70],0x0
  42f568:	je     0x42f5d3
  42f56a:	ins    DWORD PTR es:[rdi],dx
  42f56b:	gs pop rdi
  42f56d:	movsxd ebp,DWORD PTR [rdi+0x6e]
  42f570:	outs   dx,BYTE PTR ds:[rsi]
  42f571:	movsxd esi,DWORD PTR gs:[rax+rax*1+0x74]
  42f576:	imul   ebp,DWORD PTR [rbp+0x65],0x7070615f
  42f57d:	movsxd ebp,DWORD PTR [rdi+0x6e]
  42f580:	outs   dx,BYTE PTR ds:[rsi]
  42f581:	movsxd esi,DWORD PTR gs:[rax+rax*1+0x74]
  42f586:	imul   ebp,DWORD PTR [rbp+0x65],0x6572705f
  42f58d:	je     0x42f601
  42f58f:	(bad)  
  42f590:	outs   dx,BYTE PTR ds:[rsi]
  42f591:	jae    0x42f5f9
  42f593:	gs jb  0x42f596
  42f596:	je     0x42f601
  42f598:	ins    DWORD PTR es:[rdi],dx
  42f599:	gs pop rdi
  42f59b:	jae    0x42f611
  42f59d:	(bad)  
  42f59e:	jb     0x42f614
  42f5a0:	je     0x42f614
  42f5a2:	(bad)  
  42f5a3:	outs   dx,BYTE PTR ds:[rsi]
  42f5a4:	jae    0x42f60c
  42f5a6:	gs jb  0x42f5a9
  42f5a9:	jae    0x42f614
  42f5ab:	jp     0x42f612
  42f5ad:	pop    rdi
  42f5ae:	push   0x65646165
  42f5b3:	jb     0x42f5b5
  42f5b5:	jae    0x42f620
  42f5b7:	jp     0x42f61e
  42f5b9:	pop    rdi
  42f5ba:	jb     0x42f621
  42f5bc:	jno    0x42f633
  42f5be:	gs jae 0x42f635
  42f5c1:	add    BYTE PTR [rbx+0x69],dh
  42f5c4:	jp     0x42f62b
  42f5c6:	pop    rdi
  42f5c7:	outs   dx,DWORD PTR fs:[rsi]
  42f5c9:	ja     0x42f639
  42f5cb:	ins    BYTE PTR es:[rdi],dx
  42f5cc:	outs   dx,DWORD PTR ds:[rsi]
  42f5cd:	(bad)  
  42f5ce:	add    BYTE PTR fs:[rbx+0x69],dh
  42f5d2:	jp     0x42f639
  42f5d4:	pop    rdi
  42f5d5:	jne    0x42f647
  42f5d7:	ins    BYTE PTR es:[rdi],dx
  42f5d8:	outs   dx,DWORD PTR ds:[rsi]
  42f5d9:	(bad)  
  42f5da:	add    BYTE PTR fs:[rbx+0x70],dh
  42f5de:	gs gs fs pop rdi
  42f5e2:	outs   dx,DWORD PTR fs:[rsi]
  42f5e4:	ja     0x42f654
  42f5e6:	ins    BYTE PTR es:[rdi],dx
  42f5e7:	outs   dx,DWORD PTR ds:[rsi]
  42f5e8:	(bad)  
  42f5e9:	add    BYTE PTR fs:[rbx+0x70],dh
  42f5ed:	gs gs fs pop rdi
  42f5f1:	jne    0x42f663
  42f5f3:	ins    BYTE PTR es:[rdi],dx
  42f5f4:	outs   dx,DWORD PTR ds:[rsi]
  42f5f5:	(bad)  
  42f5f6:	add    BYTE PTR fs:[rbx+0x6f],ah
  42f5fa:	outs   dx,BYTE PTR ds:[rsi]
  42f5fb:	je     0x42f662
  42f5fd:	outs   dx,BYTE PTR ds:[rsi]
  42f5fe:	je     0x42f65f
  42f600:	je     0x42f67b
  42f602:	jo     0x42f669
  42f604:	add    BYTE PTR [rsi+0x75],ch
  42f607:	ins    DWORD PTR es:[rdi],dx
  42f608:	pop    rdi
  42f609:	movsxd ebp,DWORD PTR [rdi+0x6e]
  42f60c:	outs   dx,BYTE PTR ds:[rsi]
  42f60d:	movsxd esi,DWORD PTR gs:[rbx+rsi*2+0x0]
  42f612:	je     0x42f67d
  42f614:	ins    DWORD PTR es:[rdi],dx
  42f615:	gs pop rdi
  42f617:	jb     0x42f67e
  42f619:	imul   esi,DWORD PTR fs:[rdx+0x65],0x6e007463
  42f621:	jne    0x42f690
  42f623:	pop    rdi
  42f624:	jb     0x42f68b
  42f626:	imul   esi,DWORD PTR fs:[rdx+0x65],0x737463
  42f62e:	data16 je 0x42f6a1
  42f631:	pop    rdi
  42f632:	outs   dx,BYTE PTR gs:[rsi]
  42f634:	je     0x42f6a8
  42f636:	jns    0x42f697
  42f638:	jo     0x42f69b
  42f63a:	je     0x42f6a4
  42f63c:	add    BYTE PTR [rdx+0x65],dh
  42f63f:	imul   esi,DWORD PTR fs:[rdx+0x65],0x755f7463
  42f647:	jb     0x42f6b5
  42f649:	add    BYTE PTR [rbx+0x73],dh
  42f64c:	ins    BYTE PTR es:[rdi],dx
  42f64d:	pop    rdi
  42f64e:	jbe    0x42f6b5
  42f650:	jb     0x42f6bb
  42f652:	data16 jns 0x42f6b4
  42f655:	jb     0x42f6bc
  42f657:	jae    0x42f6ce
  42f659:	ins    BYTE PTR es:[rdi],dx
  42f65a:	je     0x42f65c
  42f65c:	jo     0x42f6d0
  42f65e:	outs   dx,DWORD PTR ds:[rsi]
  42f65f:	js     0x42f6da
  42f661:	pop    rdi
  42f662:	jae    0x42f6d7
  42f664:	ins    BYTE PTR es:[rdi],dx
  42f665:	pop    rdi
  42f666:	jbe    0x42f6cd
  42f668:	jb     0x42f6d3
  42f66a:	data16 jns 0x42f6cc
  42f66d:	jb     0x42f6d4
  42f66f:	jae    0x42f6e6
  42f671:	ins    BYTE PTR es:[rdi],dx
  42f672:	je     0x42f674
  42f674:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6d61
  42f67b:	gs pop rdi
  42f67d:	gs data16 movsxd si,DWORD PTR gs:[rcx+rbp*2+0x76]
  42f685:	add    BYTE PTR gs:[rdx+0x65],dh
  42f689:	ins    DWORD PTR es:[rdi],dx
  42f68a:	outs   dx,DWORD PTR ds:[rsi]
  42f68b:	je     0x42f6f2
  42f68d:	pop    rdi
  42f68e:	imul   esi,DWORD PTR [rax+0x0],0x6f6d6572
  42f695:	je     0x42f6fc
  42f697:	pop    rdi
  42f698:	jo     0x42f709
  42f69a:	jb     0x42f710
  42f69c:	add    BYTE PTR [rdi+rbp*2+0x63],ch
  42f6a0:	(bad)  
  42f6a1:	ins    BYTE PTR es:[rdi],dx
  42f6a2:	pop    rdi
  42f6a3:	imul   esi,DWORD PTR [rax+0x0],0x61636f6c
  42f6aa:	ins    BYTE PTR es:[rdi],dx
  42f6ab:	pop    rdi
  42f6ac:	jo     0x42f71d
  42f6ae:	jb     0x42f724
  42f6b0:	add    BYTE PTR [rax+0x74],ch
  42f6b3:	je     0x42f725
  42f6b5:	pop    rdi
  42f6b6:	jbe    0x42f71d
  42f6b8:	jb     0x42f72d
  42f6ba:	imul   ebp,DWORD PTR [rdi+0x6e],0x68637300
  42f6c1:	gs ins DWORD PTR es:[rdi],dx
  42f6c3:	add    BYTE PTR gs:[rax],al
	...
  42f6fe:	add    BYTE PTR [rax],al
  42f700:	rex hlt 
  42f702:	rex.X add BYTE PTR [rax],al
  42f705:	add    BYTE PTR [rax],al
  42f707:	add    BYTE PTR [rdi],cl
  42f709:	add    BYTE PTR [rax],al
  42f70b:	add    BYTE PTR [rax],al
  42f70d:	add    BYTE PTR [rax],al
  42f70f:	add    BYTE PTR [rax],ch
  42f711:	cmc    
  42f712:	rex.X add BYTE PTR [rax],al
  42f715:	add    BYTE PTR [rax],al
  42f717:	add    BYTE PTR [rbx],cl
  42f719:	add    BYTE PTR [rax],al
  42f71b:	add    BYTE PTR [rax],al
  42f71d:	add    BYTE PTR [rax],al
  42f71f:	add    BYTE PTR [rdx],dh
  42f721:	cmc    
  42f722:	rex.X add BYTE PTR [rax],al
  42f725:	add    BYTE PTR [rax],al
  42f727:	add    BYTE PTR [rbx],cl
  42f729:	add    BYTE PTR [rax],al
  42f72b:	add    BYTE PTR [rax],al
  42f72d:	add    BYTE PTR [rax],al
  42f72f:	add    BYTE PTR [rax-0xb],al
  42f732:	rex.X add BYTE PTR [rax],al
  42f735:	add    BYTE PTR [rax],al
  42f737:	add    BYTE PTR [rax+rax*1],cl
  42f73a:	add    BYTE PTR [rax],al
  42f73c:	add    BYTE PTR [rax],al
  42f73e:	add    BYTE PTR [rax],al
  42f740:	rex.WRB cmc 
  42f742:	rex.X add BYTE PTR [rax],al
  42f745:	add    BYTE PTR [rax],al
  42f747:	add    BYTE PTR [rcx],al
  42f749:	add    BYTE PTR [rax],al
  42f74b:	add    BYTE PTR [rax],al
  42f74d:	add    BYTE PTR [rax],al
  42f74f:	add    BYTE PTR [rax-0xb],bl
  42f752:	rex.X add BYTE PTR [rax],al
  42f755:	add    BYTE PTR [rax],al
  42f757:	add    BYTE PTR [rdx],al
  42f759:	add    BYTE PTR [rax],al
  42f75b:	add    BYTE PTR [rax],al
  42f75d:	add    BYTE PTR [rax],al
  42f75f:	add    BYTE PTR [rax-0xb],ch
  42f762:	rex.X add BYTE PTR [rax],al
  42f765:	add    BYTE PTR [rax],al
  42f767:	add    BYTE PTR [rbx],al
  42f769:	add    BYTE PTR [rax],al
  42f76b:	add    BYTE PTR [rax],al
  42f76d:	add    BYTE PTR [rax],al
  42f76f:	add    BYTE PTR [rbp-0xb],dh
  42f772:	rex.X add BYTE PTR [rax],al
  42f775:	add    BYTE PTR [rax],al
  42f777:	add    BYTE PTR [rax+rax*1],al
  42f77a:	add    BYTE PTR [rax],al
  42f77c:	add    BYTE PTR [rax],al
  42f77e:	add    BYTE PTR [rax],al
  42f780:	test   ebp,esi
  42f782:	rex.X add BYTE PTR [rax],al
  42f785:	add    BYTE PTR [rax],al
  42f787:	add    BYTE PTR [rip+0x0],al        # 0x42f78d
  42f78d:	add    BYTE PTR [rax],al
  42f78f:	add    BYTE PTR [rsi+0x42f5],dl
  42f795:	add    BYTE PTR [rax],al
  42f797:	add    BYTE PTR [rsi],al
  42f799:	add    BYTE PTR [rax],al
  42f79b:	add    BYTE PTR [rax],al
  42f79d:	add    BYTE PTR [rax],al
  42f79f:	add    BYTE PTR [rcx+0x42f5],ch
  42f7a5:	add    BYTE PTR [rax],al
  42f7a7:	add    BYTE PTR [rip+0x0],cl        # 0x42f7ad
  42f7ad:	add    BYTE PTR [rax],al
  42f7af:	add    BYTE PTR [rbp+0x42f5],dh
  42f7b5:	add    BYTE PTR [rax],al
  42f7b7:	add    BYTE PTR [rsi],cl
  42f7b9:	add    BYTE PTR [rax],al
  42f7bb:	add    BYTE PTR [rax],al
  42f7bd:	add    BYTE PTR [rax],al
  42f7bf:	add    dl,al
  42f7c1:	cmc    
  42f7c2:	rex.X add BYTE PTR [rax],al
  42f7c5:	add    BYTE PTR [rax],al
  42f7c7:	add    BYTE PTR [rdi],al
  42f7c9:	add    BYTE PTR [rax],al
  42f7cb:	add    BYTE PTR [rax],al
  42f7cd:	add    BYTE PTR [rax],al
  42f7cf:	add    al,dl
  42f7d1:	cmc    
  42f7d2:	rex.X add BYTE PTR [rax],al
  42f7d5:	add    BYTE PTR [rax],al
  42f7d7:	add    BYTE PTR [rax],cl
  42f7d9:	add    BYTE PTR [rax],al
  42f7db:	add    BYTE PTR [rax],al
  42f7dd:	add    BYTE PTR [rax],al
  42f7df:	add    ah,bl
  42f7e1:	cmc    
  42f7e2:	rex.X add BYTE PTR [rax],al
  42f7e5:	add    BYTE PTR [rax],al
  42f7e7:	add    BYTE PTR [rcx],cl
  42f7e9:	add    BYTE PTR [rax],al
  42f7eb:	add    BYTE PTR [rax],al
  42f7ed:	add    BYTE PTR [rax],al
  42f7ef:	add    bl,ch
  42f7f1:	cmc    
  42f7f2:	rex.X add BYTE PTR [rax],al
  42f7f5:	add    BYTE PTR [rax],al
  42f7f7:	add    BYTE PTR [rdx],cl
  42f7f9:	add    BYTE PTR [rax],al
  42f7fb:	add    BYTE PTR [rax],al
  42f7fd:	add    BYTE PTR [rax],al
  42f7ff:	add    al,bh
  42f801:	cmc    
  42f802:	rex.X add BYTE PTR [rax],al
  42f805:	add    BYTE PTR [rax],al
  42f807:	add    BYTE PTR [rax],dl
  42f809:	add    BYTE PTR [rax],al
  42f80b:	add    BYTE PTR [rax],al
  42f80d:	add    BYTE PTR [rax],al
  42f80f:	add    BYTE PTR [rip+0x42f6],al        # 0x433b0b
  42f815:	add    BYTE PTR [rax],al
  42f817:	add    BYTE PTR [rcx],dl
  42f819:	add    BYTE PTR [rax],al
  42f81b:	add    BYTE PTR [rax],al
  42f81d:	add    BYTE PTR [rax],al
  42f81f:	add    BYTE PTR [rdx],dl
  42f821:	test   BYTE PTR [rdx+0x0],0x0
  42f825:	add    BYTE PTR [rax],al
  42f827:	add    BYTE PTR [rdx],dl
  42f829:	add    BYTE PTR [rax],al
  42f82b:	add    BYTE PTR [rax],al
  42f82d:	add    BYTE PTR [rax],al
  42f82f:	add    BYTE PTR [rax],ah
  42f831:	test   BYTE PTR [rdx+0x0],0x0
  42f835:	add    BYTE PTR [rax],al
  42f837:	add    BYTE PTR [rbx],dl
  42f839:	add    BYTE PTR [rax],al
  42f83b:	add    BYTE PTR [rax],al
  42f83d:	add    BYTE PTR [rax],al
  42f83f:	add    BYTE PTR [rsi],ch
  42f841:	test   BYTE PTR [rdx+0x0],0x0
  42f845:	add    BYTE PTR [rax],al
  42f847:	add    BYTE PTR [rax+rax*1],dl
  42f84a:	add    BYTE PTR [rax],al
  42f84c:	add    BYTE PTR [rax],al
  42f84e:	add    BYTE PTR [rax],al
  42f850:	cmp    eax,0x42f6
  42f855:	add    BYTE PTR [rax],al
  42f857:	add    BYTE PTR [rip+0x0],dl        # 0x42f85d
  42f85d:	add    BYTE PTR [rax],al
  42f85f:	add    BYTE PTR [rdx-0xa],cl
  42f862:	rex.X add BYTE PTR [rax],al
  42f865:	add    BYTE PTR [rax],al
  42f867:	add    BYTE PTR [rsi],dl
  42f869:	add    BYTE PTR [rax],al
  42f86b:	add    BYTE PTR [rax],al
  42f86d:	add    BYTE PTR [rax],al
  42f86f:	add    BYTE PTR [rsi+rsi*8+0x42],bl
  42f873:	add    BYTE PTR [rax],al
  42f875:	add    BYTE PTR [rax],al
  42f877:	add    BYTE PTR [rdi],dl
  42f879:	add    BYTE PTR [rax],al
  42f87b:	add    BYTE PTR [rax],al
  42f87d:	add    BYTE PTR [rax],al
  42f87f:	add    BYTE PTR [rsi+rsi*8+0x42],dh
  42f883:	add    BYTE PTR [rax],al
  42f885:	add    BYTE PTR [rax],al
  42f887:	add    BYTE PTR [rax],bl
  42f889:	add    BYTE PTR [rax],al
  42f88b:	add    BYTE PTR [rax],al
  42f88d:	add    BYTE PTR [rax],al
  42f88f:	add    BYTE PTR [rdi+0x42f6],al
  42f895:	add    BYTE PTR [rax],al
  42f897:	add    BYTE PTR [rcx],bl
  42f899:	add    BYTE PTR [rax],al
  42f89b:	add    BYTE PTR [rax],al
  42f89d:	add    BYTE PTR [rax],al
  42f89f:	add    BYTE PTR [rcx+0x42f6],dl
  42f8a5:	add    BYTE PTR [rax],al
  42f8a7:	add    BYTE PTR [rdx],bl
  42f8a9:	add    BYTE PTR [rax],al
  42f8ab:	add    BYTE PTR [rax],al
  42f8ad:	add    BYTE PTR [rax],al
  42f8af:	add    BYTE PTR [rbp+0x42f6],bl
  42f8b5:	add    BYTE PTR [rax],al
  42f8b7:	add    BYTE PTR [rbx],bl
  42f8b9:	add    BYTE PTR [rax],al
  42f8bb:	add    BYTE PTR [rax],al
  42f8bd:	add    BYTE PTR [rax],al
  42f8bf:	add    BYTE PTR [rsi+0x42f6],ah
  42f8c5:	add    BYTE PTR [rax],al
  42f8c7:	add    BYTE PTR [rax+rax*1],bl
  42f8ca:	add    BYTE PTR [rax],al
  42f8cc:	add    BYTE PTR [rax],al
  42f8ce:	add    BYTE PTR [rax],al
  42f8d0:	mov    cl,0xf6
  42f8d2:	rex.X add BYTE PTR [rax],al
  42f8d5:	add    BYTE PTR [rax],al
  42f8d7:	add    BYTE PTR [rip+0x0],bl        # 0x42f8dd
  42f8dd:	add    BYTE PTR [rax],al
  42f8df:	add    BYTE PTR [rsi+0x42f6],bh
  42f8e5:	add    BYTE PTR [rax],al
  42f8e7:	add    BYTE PTR [rsi],bl
	...
  42f8fd:	add    BYTE PTR [rax],al
  42f8ff:	add    al,al
  42f901:	xor    eax,0x43
  42f906:	add    BYTE PTR [rax],al
  42f908:	shl    BYTE PTR [rax],0x43
  42f90b:	add    BYTE PTR [rax],al
  42f90d:	add    BYTE PTR [rax],al
  42f90f:	add    BYTE PTR [rax+0x7],al
  42f912:	add    BYTE PTR [r8],al
	...
  42f91d:	add    BYTE PTR [rax],al
  42f91f:	add    BYTE PTR [rcx+0x72],al
  42f922:	addr32 jne 0x42f992
  42f925:	outs   dx,BYTE PTR gs:[rsi]
  42f927:	je     0x42f949
  42f929:	outs   dx,DWORD PTR fs:[rsi]
  42f92b:	ins    DWORD PTR es:[rdi],dx
  42f92c:	(bad)  
  42f92d:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  42f934:	jb     0x42f956
  42f936:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  42f93a:	rex.B
  42f93b:	rex.WB
  42f93c:	rex.WRX sub QWORD PTR [rax],r8
  42f93f:	rex.B jb 0x42f9a9
  42f942:	jne    0x42f9b1
  42f944:	outs   dx,BYTE PTR gs:[rsi]
  42f946:	je     0x42f968
  42f948:	jae    0x42f9b3
  42f94a:	outs   dx,BYTE PTR ds:[rsi]
  42f94b:	addr32 jne 0x42f9ba
  42f94e:	(bad)  
  42f94f:	jb     0x42f9ba
  42f951:	je     0x42f9cc
  42f953:	and    BYTE PTR [rax],ch
  42f955:	push   rbx
  42f956:	rex.WB
  42f957:	rex.RXB
  42f958:	rex.WRX sub QWORD PTR [rax],r8
  42f95b:	add    BYTE PTR [rax],al
  42f95d:	add    BYTE PTR [rax],al
  42f95f:	add    BYTE PTR [rdi+0x76],cl
  42f962:	gs jb  0x42f9cb
  42f965:	ins    BYTE PTR es:[rdi],dx
  42f966:	outs   dx,DWORD PTR ds:[rsi]
  42f967:	ja     0x42f989
  42f969:	jb     0x42f9cc
  42f96b:	outs   dx,BYTE PTR ds:[rsi]
  42f96c:	and    BYTE PTR gs:[ebp+0x72],ah
  42f971:	jb     0x42f9e2
  42f973:	jb     0x42f995
  42f975:	sub    BYTE PTR [rdi+0x56],cl
  42f978:	rex.RB push r10
  42f97a:	rex.RX
  42f97b:	rex.WR
  42f97c:	rex.WRXB push r15
  42f97e:	sub    DWORD PTR [rax],eax
  42f980:	push   rax
  42f981:	(bad)  
  42f982:	jb     0x42f9f8
  42f984:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  42f98b:	jae    0x42f9ad
  42f98d:	outs   dx,DWORD PTR ds:[rsi]
  42f98e:	data16 and BYTE PTR [rbx+0x69],dh
  42f992:	outs   dx,BYTE PTR ds:[esi]
  42f994:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  42f99b:	and    BYTE PTR gs:[rax],ch
  42f99e:	push   rax
  42f99f:	rex.WR
  42f9a0:	rex.WRXB push r11
  42f9a2:	push   rbx
  42f9a3:	sub    DWORD PTR [rax],eax
  42f9a5:	add    BYTE PTR [rax],al
  42f9a7:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  42f9ab:	(bad)  
  42f9ac:	ins    BYTE PTR es:[rdi],dx
  42f9ad:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  42f9b1:	jae    0x42f9d3
  42f9b3:	outs   dx,DWORD PTR ds:[rsi]
  42f9b4:	data16 and BYTE PTR [rbx+0x69],dh
  42f9b8:	outs   dx,BYTE PTR ds:[esi]
  42f9ba:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  42f9c1:	and    BYTE PTR gs:[rax],ch
  42f9c4:	push   rsp
  42f9c5:	rex.WR
  42f9c6:	rex.WRXB push r11
  42f9c8:	push   rbx
  42f9c9:	sub    DWORD PTR [rax],eax
  42f9cb:	add    BYTE PTR [rax],al
  42f9cd:	add    BYTE PTR [rax],al
  42f9cf:	add    BYTE PTR [rax+rbp*2+0x65],dl
  42f9d3:	and    BYTE PTR [rdx+0x65],dh
  42f9d6:	jae    0x42fa4d
  42f9d8:	ins    BYTE PTR es:[rdi],dx
  42f9d9:	je     0x42f9fb
  42f9db:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  42f9e2:	jae    0x42fa51
  42f9e4:	(bad)  
  42f9e5:	ins    BYTE PTR es:[rdi],dx
  42f9e6:	ins    BYTE PTR es:[rdi],dx
  42f9e7:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  42f9eb:	(bad)  
  42f9ec:	and    BYTE PTR gs:[rdx+0x65],dh
  42f9f0:	jo     0x42fa64
  42f9f2:	gs jae 0x42fa5a
  42f9f5:	outs   dx,BYTE PTR ds:[rsi]
  42f9f6:	je     0x42fa5d
  42f9f8:	and    BYTE PTR fs:[rax],ch
  42f9fb:	push   rbp
  42f9fc:	rex.WRX
  42f9fd:	rex.R
  42f9fe:	rex.RB push r10
  42fa00:	rex.RX
  42fa01:	rex.WR
  42fa02:	rex.WRXB push r15
  42fa04:	sub    DWORD PTR [rax],eax
  42fa06:	push   rbp
  42fa07:	outs   dx,BYTE PTR ds:[rsi]
  42fa08:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  42fa0c:	outs   dx,BYTE PTR ds:[rsi]
  42fa0d:	and    BYTE PTR [rbp+0x72],ah
  42fa10:	jb     0x42fa81
  42fa12:	jb     0x42fa14
  42fa14:	add    BYTE PTR [rax],al
  42fa16:	add    BYTE PTR [rax],al
  42fa18:	pop    rdi
  42fa19:	ins    DWORD PTR es:[rdi],dx
  42fa1a:	(bad)  
  42fa1b:	je     0x42fa85
  42fa1d:	gs jb  0x42fa92
  42fa20:	sub    BYTE PTR [rcx],ch
  42fa22:	cmp    ah,BYTE PTR [rax]
  42fa24:	and    eax,0x6e692073
  42fa29:	and    BYTE PTR [rip+0x67252873],ah        # 0x676822a2
  42fa2f:	sub    al,0x20
  42fa31:	and    eax,0x20202967
  42fa36:	sub    BYTE PTR [rdx+0x65],dh
  42fa39:	je     0x42fab1
  42fa3b:	(bad)  
  42fa3c:	ins    BYTE PTR es:[rdi],dx
  42fa3d:	cmp    eax,0xa296725
  42fa42:	add    BYTE PTR [rax],al
  42fa44:	int3   
  42fa45:	(bad)  
  42fa46:	(bad)  
  42fa47:	dec    DWORD PTR [rip+0x7cfffe0e]        # 0x7d42f85b
  42fa4d:	(bad)  
  42fa4e:	(bad)  
  42fa4f:	dec    DWORD PTR [rsi+rcx*1+0xe9cfffe]
  42fa56:	(bad)  
  42fa57:	jmp    FWORD PTR [rsi+rcx*1+0xebcfffe]
  42fa5e:	(bad)  
  42fa5f:	dec    DWORD PTR [rbp+0x69]
  42fa62:	outs   dx,BYTE PTR ds:[rsi]
  42fa63:	addr32 ja 0x42fa93
  42fa66:	ja     0x42fa9e
  42fa68:	xor    al,0x20
  42fa6a:	jb     0x42fae1
  42fa6c:	outs   dx,BYTE PTR ds:[rsi]
  42fa6d:	je     0x42fad8
  42fa6f:	ins    DWORD PTR es:[rdi],dx
  42fa70:	and    BYTE PTR gs:[rsi+0x61],ah
  42fa74:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  42fa7c:	add    BYTE PTR [rax],al
  42fa7e:	add    BYTE PTR [rax],al
  42fa80:	rex.B
  42fa81:	fs fs jb 0x42faea
  42fa85:	jae    0x42fafa
  42fa87:	and    BYTE PTR [rip+0x61682070],ah        # 0x61ab1afd
  42fa8d:	jae    0x42faaf
  42fa8f:	outs   dx,BYTE PTR ds:[rsi]
  42fa90:	outs   dx,DWORD PTR ds:[rsi]
  42fa91:	and    BYTE PTR [rcx+0x6d],ch
  42fa94:	(bad)  
  42fa95:	addr32 gs sub eax,0x74636573
  42fa9c:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  42faa3:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  42faaa:	jne    0x42fb11
  42faac:	jb     0x42fb27
  42faae:	and    BYTE PTR [rsi+0x61],ah
  42fab1:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  42fab9:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a51b23
  42fabf:	je     0x42fb26
  42fac1:	jae    0x42fae3
  42fac3:	(bad)  
  42fac4:	je     0x42fae6
  42fac6:	(bad)  
  42fac7:	fs fs jb 0x42fb30
  42facb:	jae    0x42fb40
  42facd:	and    BYTE PTR [rip+0x70],ah        # 0x42fb43
  42fad3:	add    BYTE PTR [rax],al
  42fad5:	add    BYTE PTR [rax],al
  42fad7:	add    BYTE PTR [rax],ah
  42fad9:	and    BYTE PTR [rsi+0x69],dl
  42fadc:	jb     0x42fb52
  42fade:	jne    0x42fb41
  42fae0:	ins    BYTE PTR es:[rdi],dx
  42fae1:	push   rax
  42fae2:	jb     0x42fb53
  42fae4:	je     0x42fb4b
  42fae6:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  42faea:	(bad)  
  42faeb:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  42faf3:	push   0x646f6320
  42faf8:	and    BYTE PTR gs:[rax],dh
  42fafb:	js     0x42fb22
  42fafd:	js     0x42faff
  42faff:	add    BYTE PTR [rax],ah
  42fb01:	and    BYTE PTR [rbp+0x6e],dl
  42fb04:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  42fb08:	outs   dx,BYTE PTR ds:[rsi]
  42fb09:	and    BYTE PTR [rax+0x73],dh
  42fb0c:	gs jne 0x42fb73
  42fb0f:	outs   dx,DWORD PTR ds:[rsi]
  42fb10:	and    BYTE PTR [rdx+0x65],dh
  42fb13:	ins    BYTE PTR es:[rdi],dx
  42fb14:	outs   dx,DWORD PTR ds:[rsi]
  42fb15:	movsxd esp,DWORD PTR [rcx+0x74]
  42fb18:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  42fb1f:	je     0x42fb90
  42fb21:	movsxd ebp,DWORD PTR [rdi+0x6c]
  42fb24:	and    BYTE PTR [rsi+0x65],dh
  42fb27:	jb     0x42fb9c
  42fb29:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  42fb30:	or     al,BYTE PTR [rax]
  42fb32:	add    BYTE PTR [rax],al
  42fb34:	add    BYTE PTR [rax],al
  42fb36:	add    BYTE PTR [rax],al
  42fb38:	and    BYTE PTR [rax],ah
  42fb3a:	push   rbp
  42fb3b:	outs   dx,BYTE PTR ds:[rsi]
  42fb3c:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  42fb40:	outs   dx,BYTE PTR ds:[rsi]
  42fb41:	and    BYTE PTR [rax+0x73],dh
  42fb44:	gs jne 0x42fbab
  42fb47:	outs   dx,DWORD PTR ds:[rsi]
  42fb48:	and    BYTE PTR [rdx+0x65],dh
  42fb4b:	ins    BYTE PTR es:[rdi],dx
  42fb4c:	outs   dx,DWORD PTR ds:[rsi]
  42fb4d:	movsxd esp,DWORD PTR [rcx+0x74]
  42fb50:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  42fb57:	and    BYTE PTR [rbx+0x69],dh
  42fb5a:	jp     0x42fbc1
  42fb5c:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4d29c6
	...
  42fb6e:	add    BYTE PTR [rax],al
  42fb70:	cs jo  0x42fbd7
  42fb73:	(bad)  
  42fb74:	je     0x42fbd7
	...
  42fb7e:	add    BYTE PTR [rax],al
  42fb80:	lock sbb eax,0x1df4fffe
  42fb86:	(bad)  
  42fb87:	jmp    QWORD PTR [rax]
  42fb89:	(bad)  
  42fb8a:	(bad)  
  42fb8b:	push   QWORD PTR [rcx]
  42fb8d:	(bad)  
  42fb8e:	(bad)  
  42fb8f:	jmp    rax
  42fb91:	sbb    eax,0x1da0fffe
  42fb96:	(bad)  
  42fb97:	push   rax
  42fb99:	sbb    eax,0xfffe
  42fb9e:	add    BYTE PTR [rax],al
  42fba0:	add    BYTE PTR [rax],al
  42fba2:	(bad)  
  42fba3:	add    BYTE PTR [rax],al
  42fba5:	add    BYTE PTR [rsi],ch
	...
  42fbbf:	add    BYTE PTR [rsi+0x66],ch
  42fbc2:	add    BYTE PTR [rcx+0x6e],ch
  42fbc5:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0xf7006e61
  42fbcd:	sub    edi,esi
  42fbcf:	call   QWORD PTR [rbp+rbp*1+0x2d94fffe]
  42fbd6:	(bad)  
  42fbd7:	call   QWORD PTR [rbp+rbp*1+0x2d94fffe]
  42fbde:	(bad)  
  42fbdf:	call   QWORD PTR [rbp+rbp*1+0x2d94fffe]
  42fbe6:	(bad)  
  42fbe7:	call   QWORD PTR [rbp+rbp*1+0x2d94fffe]
  42fbee:	(bad)  
  42fbef:	push   QWORD PTR [rbp+rbp*1-0x2]
  42fbf3:	push   QWORD PTR [rbp+rbp*1-0x2]
  42fbf7:	push   QWORD PTR [rbp+rbp*1-0x2]
  42fbfb:	push   QWORD PTR [rbp+rbp*1-0x2]
  42fbff:	push   QWORD PTR [rbp+rbp*1-0x2]
  42fc03:	call   QWORD PTR [rbp+rbp*1+0x2d94fffe]
  42fc0a:	(bad)  
  42fc0b:	call   QWORD PTR [rbp+rbp*1+0x2d94fffe]
  42fc12:	(bad)  
  42fc13:	call   QWORD PTR [rbp+rbp*1+0x2d94fffe]
  42fc1a:	(bad)  
  42fc1b:	call   QWORD PTR [rbp+rbp*1+0x2d94fffe]
  42fc22:	(bad)  
  42fc23:	call   QWORD PTR [rbp+rbp*1+0x2d94fffe]
  42fc2a:	(bad)  
  42fc2b:	call   QWORD PTR [rbp+rbp*1+0x2d94fffe]
  42fc32:	(bad)  
  42fc33:	call   QWORD PTR [rbp+rbp*1+0x2d94fffe]
  42fc3a:	(bad)  
  42fc3b:	call   QWORD PTR [rbp+rbp*1+0x2d94fffe]
  42fc42:	(bad)  
  42fc43:	call   QWORD PTR [rbp+rbp*1+0x2d94fffe]
  42fc4a:	(bad)  
  42fc4b:	push   QWORD PTR [rbp+rbp*1-0x2]
  42fc4f:	call   QWORD PTR [rbp+rbp*1+0x2d94fffe]
  42fc56:	(bad)  
  42fc57:	call   QWORD PTR [rbp+rbp*1+0x2d94fffe]
  42fc5e:	(bad)  
  42fc5f:	call   QWORD PTR [rbp+rbp*1+0x2d94fffe]
  42fc66:	(bad)  
  42fc67:	call   QWORD PTR [rbp+rbp*1+0x2d94fffe]
  42fc6e:	(bad)  
  42fc6f:	call   QWORD PTR [rbp+rbp*1+0x2d94fffe]
  42fc76:	(bad)  
  42fc77:	inc    esp
  42fc79:	sub    al,0xfe
  42fc7b:	call   QWORD PTR [rbp+rbp*1+0x2df7fffe]
  42fc82:	(bad)  
  42fc83:	inc    DWORD PTR [rax]
	...
  42fcc1:	add    BYTE PTR [rax],al
  42fcc3:	add    BYTE PTR [rbx],al
  42fcc5:	add    BYTE PTR [rax],al
  42fcc7:	add    BYTE PTR [rip+0x7000000],al        # 0x742fccd
  42fccd:	add    BYTE PTR [rax],al
  42fccf:	add    BYTE PTR [rdx],cl
  42fcd1:	add    BYTE PTR [rax],al
  42fcd3:	add    BYTE PTR [rax+rax*1],cl
  42fcd6:	add    BYTE PTR [rax],al
  42fcd8:	(bad)  
  42fcd9:	add    BYTE PTR [rax],al
  42fcdb:	add    BYTE PTR [rcx],dl
  42fcdd:	add    BYTE PTR [rax],al
  42fcdf:	add    BYTE PTR [rbx],dl
  42fce1:	add    BYTE PTR [rax],al
  42fce3:	add    BYTE PTR [rip+0x18000000],dl        # 0x1842fce9
  42fce9:	add    BYTE PTR [rax],al
  42fceb:	add    BYTE PTR [rdx],bl
  42fced:	add    BYTE PTR [rax],al
  42fcef:	add    BYTE PTR [rax+rax*1],bl
  42fcf2:	add    BYTE PTR [rax],al
  42fcf4:	(bad)  
  42fcf5:	add    BYTE PTR [rax],al
  42fcf7:	add    BYTE PTR [rcx],ah
  42fcf9:	add    BYTE PTR [rax],al
  42fcfb:	add    BYTE PTR [rbx],ah
  42fcfd:	add    BYTE PTR [rax],al
  42fcff:	add    BYTE PTR [rsi],ah
  42fd01:	add    BYTE PTR [rax],al
  42fd03:	add    BYTE PTR [rax],ch
  42fd05:	add    BYTE PTR [rax],al
  42fd07:	add    BYTE PTR [rdx],ch
  42fd09:	add    BYTE PTR [rax],al
  42fd0b:	add    BYTE PTR [rip+0x2f000000],ch        # 0x2f42fd11
  42fd11:	add    BYTE PTR [rax],al
  42fd13:	add    BYTE PTR [rcx],dh
  42fd15:	add    BYTE PTR [rax],al
  42fd17:	add    BYTE PTR [rax+rax*1],dh
	...
  42fd26:	lock (bad) 
	...
  42fd34:	add    BYTE PTR [rax],al
  42fd36:	add    BYTE PTR [rax+0x0],al
  42fd39:	add    BYTE PTR [rax],al
  42fd3b:	add    BYTE PTR [rax],al
  42fd3d:	add    al,ah
  42fd3f:	(bad)  
  42fd40:	add    BYTE PTR [rax],al
  42fd42:	sar    bh,0xff
  42fd45:	(bad)  
  42fd46:	fild   WORD PTR [rcx+0x16]
  42fd49:	push   rsi
  42fd4a:	out    0x9e,eax
  42fd4c:	scas   eax,DWORD PTR es:[rdi]
  42fd4d:	add    eax,edx
  42fd4f:	cmp    al,0x0
  42fd51:	add    BYTE PTR [rax],al
  42fd53:	add    BYTE PTR [rax],al
  42fd55:	add    BYTE PTR [rax],al
  42fd57:	add    BYTE PTR [rax],0x0
	...
  42fd7e:	add    BYTE PTR [rax],al
  42fd80:	rex.B
  42fd81:	rex.X
  42fd82:	rex.XB
  42fd83:	rex.R
  42fd84:	rex.RB
  42fd85:	rex.RX add BYTE PTR [rcx+0x62],r12b
  42fd89:	movsxd esp,DWORD PTR [rbp+riz*2+0x66]
  42fd8d:	add    BYTE PTR [rax],dh
  42fd8f:	xor    DWORD PTR [rdx],esi
  42fd91:	xor    esi,DWORD PTR [rsi*1+0x39383736]
	...
  42fdc0:	add    eax,0x19000000
  42fdc5:	add    BYTE PTR [rax],al
  42fdc7:	add    BYTE PTR [rbp+0x0],bh
	...
  42fe06:	lock (bad) 
  42fe08:	add    BYTE PTR [rax],al
  42fe0a:	add    BYTE PTR [rax],al
  42fe0c:	add    BYTE PTR [rax],al
  42fe0e:	and    al,0x40
  42fe10:	add    BYTE PTR [rax],al
  42fe12:	add    BYTE PTR [rax],al
  42fe14:	add    BYTE PTR [rax],al
  42fe16:	pop    rcx
  42fe17:	add    BYTE PTR [rax],al
  42fe1a:	add    BYTE PTR [rax],al
  42fe1c:	add    BYTE PTR [rax-0x71],al
  42fe1f:	add    BYTE PTR [rax],al
  42fe22:	add    BYTE PTR [rax],al
  42fe24:	add    BYTE PTR [rax+0x40c3],cl
  42fe2a:	add    BYTE PTR [rax],al
  42fe2c:	add    BYTE PTR [rdx-0x8],ch
  42fe2f:	add    BYTE PTR [rax],al
  42fe32:	add    BYTE PTR [rax],al
  42fe34:	add    BYTE PTR [rsi+rbp*1+0x41],0x0
  42fe3c:	rcl    BYTE PTR [rdx],1
  42fe3e:	movsxd eax,DWORD PTR [rcx+0x0]
  42fe41:	add    BYTE PTR [rax],al
  42fe43:	add    BYTE PTR [rdi+rdx*8+0x4197],al
  42fe4a:	add    BYTE PTR [rax],al
  42fe4c:	gs int 0xcd
  42fe4f:	add    BYTE PTR [r8],al
  42fe52:	add    BYTE PTR [rax],ah
  42fe54:	pop    rdi
  42fe55:	movabs al,ds:0x4876e80000004202
  42fe5e:	(bad)  
  42fe5f:	rex.X add BYTE PTR [rax],al
  42fe62:	add    BYTE PTR [rdx+0x426d1a94],ah
  42fe68:	add    BYTE PTR [rax],al
  42fe6a:	rex in eax,0x9c
  42fe6d:	xor    BYTE PTR [rdx-0x6fffffbe],ah
  42fe73:	(bad)  
  42fe74:	(bad)  
  42fe75:	mov    esp,0x42d6
  42fe7a:	xor    al,0x26
  42fe7c:	cmc    
  42fe7d:	imul   ecx,DWORD PTR [rbx+rax*2],0x0
  42fe81:	and    al,0x37
  42fe84:	jns    0x42fe49
  42fe86:	rex.B
  42fe87:	rex.XB add BYTE PTR [r8+0x345785d8],spl
  42fe8e:	jbe    0x42fed3
  42fe90:	add    al,cl
  42fe92:	rex.WRX
  42fe93:	ins    DWORD PTR es:[edi],dx
  42fe95:	shr    DWORD PTR [rbx-0x6ec2ffbd],0x60
  42fe9c:	in     al,0x58
  42fe9e:	loope  0x42fee3
  42fea0:	rex mov WORD PTR [rbp+0x15af1d78],?
  42fea7:	rex.R push rax
  42fea9:	out    dx,eax
  42feaa:	loop   0x42fe82
  42feac:	in     al,0x1a
  42feae:	rex.WXB
  42feaf:	rex.R xchg edx,eax
  42feb1:	(bad)  
  42feb2:	rex.WRB (bad) 
  42feb4:	iret   
  42feb5:	lock add BYTE PTR [rax+rax*1+0x0],0x0
  42febb:	add    BYTE PTR [rax],al
  42febd:	add    BYTE PTR [rax],al
  42febf:	add    BYTE PTR [rcx+rcx*4-0x2d4d6828],bh
  42fec6:	pushf  
  42fec7:	cmp    al,0x33
  42fec9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42feca:	test   al,0xd5
  42fecc:	and    esi,esi
  42fece:	cmp    QWORD PTR [rip+0xfffffffffd44f4a7],rdi        # 0xfffffffffd87f37c
  42fed5:	shld   DWORD PTR [rdx],esi,cl
  42fed8:	popf   
  42fed9:	xchg   edi,eax
  42feda:	mov    edi,cs
  42fedc:	or     BYTE PTR [rdx+0x6f43255b],bh
  42fee2:	lods   al,BYTE PTR ds:[rsi]
  42fee3:	sub    BYTE PTR fs:[rsi],al
  42fee6:	enter  0xa,0x0
	...
  42fefe:	add    BYTE PTR [rax],al
  42ff00:	add    BYTE PTR [rax-0x3c86c820],al
  42ff06:	rex.B
  42ff07:	rex.XB (bad) 
  42ff09:	outs   dx,BYTE PTR ds:[rsi]
  42ff0a:	add    eax,0x93b8b5b5
  42ff0f:	rex.RX cmc 
  42ff11:	stc    
  42ff12:	(bad)  
  42ff13:	jmp    0x4d7b4e1b
  42ff18:	xor    bl,BYTE PTR [rip+0x7748f930]        # 0x778bf84e
  42ff1e:	(bad)  
  42ff1f:	pop    rdx
  42ff20:	cmp    al,0xbf
  42ff22:	jae    0x42ffa3
  42ff24:	fisttp QWORD PTR [rdi+0x15]
  42ff27:	jne    0x42ff29
	...
  42ff3d:	add    BYTE PTR [rax],al
  42ff3f:	add    BYTE PTR [rax+0x70],al
  42ff42:	add    BYTE PTR [r8],al
	...
  42ff4d:	add    BYTE PTR [rax],al
  42ff4f:	add    BYTE PTR [rax+0x70],dh
  42ff52:	add    BYTE PTR [r8],al
	...
  42ff5d:	add    BYTE PTR [rax],al
  42ff5f:	add    BYTE PTR [rax],dl
  42ff61:	push   0x41
	...
  42ff6e:	add    BYTE PTR [rax],al
  42ff70:	xor    BYTE PTR [rip+0x43],cl        # 0x42ffb9
	...
  42ff7e:	add    BYTE PTR [rax],al
  42ff80:	xor    BYTE PTR [rip+0x43],cl        # 0x42ffc9
	...
  42ff8e:	add    BYTE PTR [rax],al
  42ff90:	add    bh,bh
  42ff92:	rex.X add BYTE PTR [rax],al
	...
  42ff9d:	add    BYTE PTR [rax],al
  42ff9f:	add    BYTE PTR [rax],dl
  42ffa1:	stc    
  42ffa2:	rex.X add BYTE PTR [rax],al
	...
  42ffb1:	rex.RB
  42ffb2:	rex.XB add BYTE PTR [r8],al
	...
  42ffc1:	add    BYTE PTR [rax+0x0],al
	...
  42ffd0:	cwde   
  42ffd1:	push   rdi
  42ffd2:	rex.XB add BYTE PTR [r8],al
	...
  42ffdd:	add    BYTE PTR [rax],al
  42ffdf:	add    al,al
  42ffe1:	push   rdi
  42ffe2:	rex.XB add BYTE PTR [r8],al
	...
  42ffed:	add    BYTE PTR [rax],al
  42ffef:	add    al,ah
  42fff1:	push   rdi
  42fff2:	rex.XB add BYTE PTR [r8],al
	...
  42fffd:	add    BYTE PTR [rax],al
  42ffff:	add    BYTE PTR [rax],bl
  430001:	pop    rax
  430002:	rex.XB add BYTE PTR [r8],al
	...
  430011:	(bad)  
  430012:	rex.XB add BYTE PTR [r8],al
	...
  43001d:	add    BYTE PTR [rax],al
  43001f:	add    BYTE PTR [rax+0x4344],bh
	...
  43002d:	add    BYTE PTR [rax],al
  43002f:	add    BYTE PTR [rax+0x4344],dh
	...
  43003d:	add    BYTE PTR [rax],al
  43003f:	add    BYTE PTR [rax+0x4344],ah
	...
  43004d:	add    BYTE PTR [rax],al
  43004f:	add    BYTE PTR [rax+0x4344],ch
	...
  430061:	inc    BYTE PTR [rdx+0x0]
	...
  430070:	sar    dh,0x42
	...
  43007f:	add    BYTE PTR [rax],al
  430081:	jo     0x4300c6
	...
  43008f:	add    BYTE PTR [rax],dl
  430091:	jo     0x4300d6
	...
  43009f:	add    BYTE PTR [rax],bl
  4300a1:	jo     0x4300e6
	...
  4300af:	add    BYTE PTR [rax],dh
  4300b1:	jo     0x4300f6
	...
  4300bf:	add    BYTE PTR [rax+0x4330],ah
	...
  4300cd:	add    BYTE PTR [rax],al
  4300cf:	add    al,dl
  4300d1:	rex.XB add BYTE PTR ss:[r8],al
	...
  4300dd:	add    BYTE PTR [rax],al
  4300df:	add    al,dl
  4300e1:	adc    BYTE PTR [rcx+0x0],al
	...
  4300f0:	and    BYTE PTR [rax],cl
  4300f2:	add    BYTE PTR [r8],al
	...
  4300fd:	add    BYTE PTR [rax],al
  4300ff:	add    BYTE PTR [rax+0x4336],al
	...
  43010d:	add    BYTE PTR [rax],al
  43010f:	add    BYTE PTR [rax+0x4330],al
	...
  43011d:	add    BYTE PTR [rax],al
  43011f:	add    BYTE PTR [rax+0x4330],cl
	...
  43012d:	add    BYTE PTR [rax],al
  43012f:	add    BYTE PTR [rax+0x30],bl
  430132:	rex.XB add BYTE PTR [r8],al
	...
  43013d:	add    BYTE PTR [rax],al
  43013f:	add    BYTE PTR [rax+0x30],ch
  430142:	rex.XB add BYTE PTR [r8],al
	...
  43014d:	add    BYTE PTR [rax],al
  43014f:	add    BYTE PTR [rax+0x30],dh
  430152:	rex.XB add BYTE PTR [r8],al
	...
  43015d:	add    BYTE PTR [rax],al
  43015f:	add    BYTE PTR [rax+0x30],bh
  430162:	rex.XB add BYTE PTR [r8],al
	...
  43016d:	add    BYTE PTR [rax],al
  43016f:	add    BYTE PTR [rax+rsi*1+0x43],dl
	...
  43017f:	add    BYTE PTR [rax+0x30],dl
  430182:	rex.XB add BYTE PTR [r8],al
	...
  43018d:	add    BYTE PTR [rax],al
  43018f:	add    BYTE PTR [rax+0x30],ah
  430192:	rex.XB add BYTE PTR [r8],al
	...
  43019d:	add    BYTE PTR [rax],al
  43019f:	add    BYTE PTR [rax+0x4336],dh
	...
  4301ad:	add    BYTE PTR [rax],al
  4301af:	add    BYTE PTR [rax+0x4330],dh
	...
  4301bd:	add    BYTE PTR [rax],al
  4301bf:	add    BYTE PTR [rax+0x4336],bl
	...
  4301cd:	add    BYTE PTR [rax],al
  4301cf:	add    BYTE PTR [rsi+rsi*1+0x43],dl
	...
  4301de:	add    BYTE PTR [rax],al
  4301e0:	nop
  4301e1:	rex.XB add BYTE PTR ss:[r8],al
	...
  4301ed:	add    BYTE PTR [rax],al
  4301ef:	add    al,al
  4301f1:	lock rex.X add BYTE PTR [rax],al
	...
  4301fd:	add    BYTE PTR [rax],al
  4301ff:	add    BYTE PTR [rax+0x42ec],al
	...
  430211:	jmp    0x430258
	...
  43021e:	add    BYTE PTR [rax],al
  430220:	xor    dl,0x42
	...
  43022f:	add    BYTE PTR [rax-0x15],al
  430232:	rex.X add BYTE PTR [rax],al
	...
  43023d:	add    BYTE PTR [rax],al
  43023f:	add    al,al
  430241:	jmp    0x430285
	...
  43024f:	add    BYTE PTR [rax+0x42ef],al
	...
  43025d:	add    BYTE PTR [rax],al
  43025f:	add    al,al
  430261:	(bad)  
  430262:	rex.X add BYTE PTR [rax],al
	...
  43026d:	add    BYTE PTR [rax],al
  43026f:	add    BYTE PTR [rax+0x42ee],al
	...
  43027d:	add    BYTE PTR [rax],al
  43027f:	add    BYTE PTR [rax-0x13],al
  430282:	rex.X add BYTE PTR [rax],al
	...
  43028d:	add    BYTE PTR [rax],al
  43028f:	add    al,dh
  430291:	adc    eax,0x40
	...
  43029e:	add    BYTE PTR [rax],al
  4302a0:	nop
  4302a1:	sbb    al,0x40
	...
  4302af:	add    BYTE PTR [rax],al
  4302b1:	and    BYTE PTR [rax+0x0],al
	...
  4302c0:	shl    BYTE PTR [rdx],0x40
	...
  4302cf:	add    BYTE PTR [rax],ah
  4302d1:	and    eax,DWORD PTR [rax+0x0]
	...
  4302e0:	push   rax
  4302e1:	and    al,0x40
	...
  4302ef:	add    BYTE PTR [rdi+0x43],al
  4302f2:	rex.XB cmp spl,BYTE PTR [r8]
  4302f5:	sub    BYTE PTR [rdi+0x4e],al
  4302f8:	push   rbp
  4302f9:	sub    DWORD PTR [rax],esp
  4302fb:	xor    al,0x2e
  4302fd:	cmp    DWORD PTR [rsi],ebp
  4302ff:	xor    al,0x0
	...
  43030d:	add    BYTE PTR [rax],al
  43030f:	add    BYTE PTR [rdi+0x43],al
  430312:	rex.XB cmp spl,BYTE PTR [r8]
  430315:	sub    BYTE PTR [rdi+0x4e],al
  430318:	push   rbp
  430319:	sub    DWORD PTR [rax],esp
  43031b:	xor    al,0x2e
  43031d:	cmp    DWORD PTR [rsi],ebp
  43031f:	xor    al,0x0
	...
  43032d:	add    BYTE PTR [rax],al
  43032f:	add    BYTE PTR [rdi+0x43],al
  430332:	rex.XB cmp spl,BYTE PTR [r8]
  430335:	sub    BYTE PTR [rdi+0x4e],al
  430338:	push   rbp
  430339:	sub    DWORD PTR [rax],esp
  43033b:	xor    al,0x2e
  43033d:	cmp    DWORD PTR [rsi],ebp
  43033f:	xor    al,0x0
	...
  43034d:	add    BYTE PTR [rax],al
  43034f:	add    BYTE PTR [rdi+0x43],al
  430352:	rex.XB cmp spl,BYTE PTR [r8]
  430355:	sub    BYTE PTR [rdi+0x4e],al
  430358:	push   rbp
  430359:	sub    DWORD PTR [rax],esp
  43035b:	xor    al,0x2e
  43035d:	cmp    DWORD PTR [rsi],ebp
  43035f:	xor    al,0x0
	...
  43036d:	add    BYTE PTR [rax],al
  43036f:	add    BYTE PTR [rdi+0x43],al
  430372:	rex.XB cmp spl,BYTE PTR [r8]
  430375:	sub    BYTE PTR [rdi+0x4e],al
  430378:	push   rbp
  430379:	sub    DWORD PTR [rax],esp
  43037b:	xor    al,0x2e
  43037d:	cmp    DWORD PTR [rsi],ebp
  43037f:	xor    al,0x0
	...
  43038d:	add    BYTE PTR [rax],al
  43038f:	add    BYTE PTR [rdi+0x43],al
  430392:	rex.XB cmp spl,BYTE PTR [r8]
  430395:	sub    BYTE PTR [rdi+0x4e],al
  430398:	push   rbp
  430399:	sub    DWORD PTR [rax],esp
  43039b:	xor    al,0x2e
  43039d:	cmp    DWORD PTR [rsi],ebp
  43039f:	xor    al,0x0
	...
  4303ad:	add    BYTE PTR [rax],al
  4303af:	add    BYTE PTR [rdi+0x43],al
  4303b2:	rex.XB cmp spl,BYTE PTR [r8]
  4303b5:	sub    BYTE PTR [rdi+0x4e],al
  4303b8:	push   rbp
  4303b9:	sub    DWORD PTR [rax],esp
  4303bb:	xor    al,0x2e
  4303bd:	cmp    DWORD PTR [rsi],ebp
  4303bf:	xor    al,0x0
	...
  4303cd:	add    BYTE PTR [rax],al
  4303cf:	add    BYTE PTR [rdi+0x43],al
  4303d2:	rex.XB cmp spl,BYTE PTR [r8]
  4303d5:	sub    BYTE PTR [rdi+0x4e],al
  4303d8:	push   rbp
  4303d9:	sub    DWORD PTR [rax],esp
  4303db:	xor    al,0x2e
  4303dd:	cmp    DWORD PTR [rsi],ebp
  4303df:	xor    al,0x0
	...
  4303ed:	add    BYTE PTR [rax],al
  4303ef:	add    BYTE PTR [rdi+0x43],al
  4303f2:	rex.XB cmp spl,BYTE PTR [r8]
  4303f5:	sub    BYTE PTR [rdi+0x4e],al
  4303f8:	push   rbp
  4303f9:	sub    DWORD PTR [rax],esp
  4303fb:	xor    al,0x2e
  4303fd:	cmp    DWORD PTR [rsi],ebp
  4303ff:	xor    al,0x0
	...
  43040d:	add    BYTE PTR [rax],al
  43040f:	add    BYTE PTR [rdi+0x43],al
  430412:	rex.XB cmp spl,BYTE PTR [r8]
  430415:	sub    BYTE PTR [rdi+0x4e],al
  430418:	push   rbp
  430419:	sub    DWORD PTR [rax],esp
  43041b:	xor    al,0x2e
  43041d:	cmp    DWORD PTR [rsi],ebp
  43041f:	xor    al,0x0
	...
  43042d:	add    BYTE PTR [rax],al
  43042f:	add    BYTE PTR [rdi+0x43],al
  430432:	rex.XB cmp spl,BYTE PTR [r8]
  430435:	sub    BYTE PTR [rdi+0x4e],al
  430438:	push   rbp
  430439:	sub    DWORD PTR [rax],esp
  43043b:	xor    al,0x2e
  43043d:	cmp    DWORD PTR [rsi],ebp
  43043f:	xor    al,0x0
	...
  43044d:	add    BYTE PTR [rax],al
  43044f:	add    BYTE PTR [rdi+0x43],al
  430452:	rex.XB cmp spl,BYTE PTR [r8]
  430455:	sub    BYTE PTR [rdi+0x4e],al
  430458:	push   rbp
  430459:	sub    DWORD PTR [rax],esp
  43045b:	xor    al,0x2e
  43045d:	cmp    DWORD PTR [rsi],ebp
  43045f:	xor    al,0x0
	...
  43046d:	add    BYTE PTR [rax],al
  43046f:	add    BYTE PTR [rdi+0x43],al
  430472:	rex.XB cmp spl,BYTE PTR [r8]
  430475:	sub    BYTE PTR [rdi+0x4e],al
  430478:	push   rbp
  430479:	sub    DWORD PTR [rax],esp
  43047b:	xor    al,0x2e
  43047d:	cmp    DWORD PTR [rsi],ebp
  43047f:	xor    al,0x0
	...
  43048d:	add    BYTE PTR [rax],al
  43048f:	add    BYTE PTR [rdi+0x43],al
  430492:	rex.XB cmp spl,BYTE PTR [r8]
  430495:	sub    BYTE PTR [rdi+0x4e],al
  430498:	push   rbp
  430499:	sub    DWORD PTR [rax],esp
  43049b:	xor    al,0x2e
  43049d:	cmp    DWORD PTR [rsi],ebp
  43049f:	xor    al,0x0
	...
  4304ad:	add    BYTE PTR [rax],al
  4304af:	add    BYTE PTR [rdi+0x43],al
  4304b2:	rex.XB cmp spl,BYTE PTR [r8]
  4304b5:	sub    BYTE PTR [rdi+0x4e],al
  4304b8:	push   rbp
  4304b9:	sub    DWORD PTR [rax],esp
  4304bb:	xor    al,0x2e
  4304bd:	cmp    DWORD PTR [rsi],ebp
  4304bf:	xor    al,0x0
	...
  4304cd:	add    BYTE PTR [rax],al
  4304cf:	add    BYTE PTR [rdi+0x43],al
  4304d2:	rex.XB cmp spl,BYTE PTR [r8]
  4304d5:	sub    BYTE PTR [rdi+0x4e],al
  4304d8:	push   rbp
  4304d9:	sub    DWORD PTR [rax],esp
  4304db:	xor    al,0x2e
  4304dd:	cmp    DWORD PTR [rsi],ebp
  4304df:	xor    al,0x0
	...
  4304ed:	add    BYTE PTR [rax],al
  4304ef:	add    BYTE PTR [rdi+0x43],al
  4304f2:	rex.XB cmp spl,BYTE PTR [r8]
  4304f5:	sub    BYTE PTR [rdi+0x4e],al
  4304f8:	push   rbp
  4304f9:	sub    DWORD PTR [rax],esp
  4304fb:	xor    al,0x2e
  4304fd:	cmp    DWORD PTR [rsi],ebp
  4304ff:	xor    al,0x0
	...
  43050d:	add    BYTE PTR [rax],al
  43050f:	add    BYTE PTR [rdi+0x43],al
  430512:	rex.XB cmp spl,BYTE PTR [r8]
  430515:	sub    BYTE PTR [rdi+0x4e],al
  430518:	push   rbp
  430519:	sub    DWORD PTR [rax],esp
  43051b:	xor    al,0x2e
  43051d:	cmp    DWORD PTR [rsi],ebp
  43051f:	xor    al,0x0
	...
  43052d:	add    BYTE PTR [rax],al
  43052f:	add    BYTE PTR [rdi+0x43],al
  430532:	rex.XB cmp spl,BYTE PTR [r8]
  430535:	sub    BYTE PTR [rdi+0x4e],al
  430538:	push   rbp
  430539:	sub    DWORD PTR [rax],esp
  43053b:	xor    al,0x2e
  43053d:	cmp    DWORD PTR [rsi],ebp
  43053f:	xor    al,0x0
	...
  43054d:	add    BYTE PTR [rax],al
  43054f:	add    BYTE PTR [rdi+0x43],al
  430552:	rex.XB cmp spl,BYTE PTR [r8]
  430555:	sub    BYTE PTR [rdi+0x4e],al
  430558:	push   rbp
  430559:	sub    DWORD PTR [rax],esp
  43055b:	xor    al,0x2e
  43055d:	cmp    DWORD PTR [rsi],ebp
  43055f:	xor    al,0x0
	...
  43056d:	add    BYTE PTR [rax],al
  43056f:	add    BYTE PTR [rdi+0x43],al
  430572:	rex.XB cmp spl,BYTE PTR [r8]
  430575:	sub    BYTE PTR [rdi+0x4e],al
  430578:	push   rbp
  430579:	sub    DWORD PTR [rax],esp
  43057b:	xor    al,0x2e
  43057d:	cmp    DWORD PTR [rsi],ebp
  43057f:	xor    al,0x0
	...
  43058d:	add    BYTE PTR [rax],al
  43058f:	add    BYTE PTR [rdi+0x43],al
  430592:	rex.XB cmp spl,BYTE PTR [r8]
  430595:	sub    BYTE PTR [rdi+0x4e],al
  430598:	push   rbp
  430599:	sub    DWORD PTR [rax],esp
  43059b:	xor    al,0x2e
  43059d:	cmp    DWORD PTR [rsi],ebp
  43059f:	xor    al,0x0
	...
  4305ad:	add    BYTE PTR [rax],al
  4305af:	add    BYTE PTR [rdi+0x43],al
  4305b2:	rex.XB cmp spl,BYTE PTR [r8]
  4305b5:	sub    BYTE PTR [rdi+0x4e],al
  4305b8:	push   rbp
  4305b9:	sub    DWORD PTR [rax],esp
  4305bb:	xor    al,0x2e
  4305bd:	cmp    DWORD PTR [rsi],ebp
  4305bf:	xor    al,0x0
	...
  4305cd:	add    BYTE PTR [rax],al
  4305cf:	add    BYTE PTR [rdi+0x43],al
  4305d2:	rex.XB cmp spl,BYTE PTR [r8]
  4305d5:	sub    BYTE PTR [rdi+0x4e],al
  4305d8:	push   rbp
  4305d9:	sub    DWORD PTR [rax],esp
  4305db:	xor    al,0x2e
  4305dd:	cmp    DWORD PTR [rsi],ebp
  4305df:	xor    al,0x0
	...
  4305ed:	add    BYTE PTR [rax],al
  4305ef:	add    BYTE PTR [rdi+0x43],al
  4305f2:	rex.XB cmp spl,BYTE PTR [r8]
  4305f5:	sub    BYTE PTR [rdi+0x4e],al
  4305f8:	push   rbp
  4305f9:	sub    DWORD PTR [rax],esp
  4305fb:	xor    al,0x2e
  4305fd:	cmp    DWORD PTR [rsi],ebp
  4305ff:	xor    al,0x0
	...
  43060d:	add    BYTE PTR [rax],al
  43060f:	add    BYTE PTR [rdi+0x43],al
  430612:	rex.XB cmp spl,BYTE PTR [r8]
  430615:	sub    BYTE PTR [rdi+0x4e],al
  430618:	push   rbp
  430619:	sub    DWORD PTR [rax],esp
  43061b:	xor    al,0x2e
  43061d:	cmp    DWORD PTR [rsi],ebp
  43061f:	xor    al,0x0
	...
  43062d:	add    BYTE PTR [rax],al
  43062f:	add    BYTE PTR [rdi+0x43],al
  430632:	rex.XB cmp spl,BYTE PTR [r8]
  430635:	sub    BYTE PTR [rdi+0x4e],al
  430638:	push   rbp
  430639:	sub    DWORD PTR [rax],esp
  43063b:	xor    al,0x2e
  43063d:	cmp    DWORD PTR [rsi],ebp
  43063f:	xor    al,0x0
	...
  43064d:	add    BYTE PTR [rax],al
  43064f:	add    BYTE PTR [rdi+0x43],al
  430652:	rex.XB cmp spl,BYTE PTR [r8]
  430655:	sub    BYTE PTR [rdi+0x4e],al
  430658:	push   rbp
  430659:	sub    DWORD PTR [rax],esp
  43065b:	xor    al,0x2e
  43065d:	cmp    DWORD PTR [rsi],ebp
  43065f:	xor    al,0x0
	...
  43066d:	add    BYTE PTR [rax],al
  43066f:	add    BYTE PTR [rdi+0x43],al
  430672:	rex.XB cmp spl,BYTE PTR [r8]
  430675:	sub    BYTE PTR [rdi+0x4e],al
  430678:	push   rbp
  430679:	sub    DWORD PTR [rax],esp
  43067b:	xor    al,0x2e
  43067d:	cmp    DWORD PTR [rsi],ebp
  43067f:	xor    al,0x0
	...
  43068d:	add    BYTE PTR [rax],al
  43068f:	add    BYTE PTR [rdi+0x43],al
  430692:	rex.XB cmp spl,BYTE PTR [r8]
  430695:	sub    BYTE PTR [rdi+0x4e],al
  430698:	push   rbp
  430699:	sub    DWORD PTR [rax],esp
  43069b:	xor    al,0x2e
  43069d:	cmp    DWORD PTR [rsi],ebp
  43069f:	xor    al,0x0
	...
  4306ad:	add    BYTE PTR [rax],al
  4306af:	add    BYTE PTR [rdi+0x43],al
  4306b2:	rex.XB cmp spl,BYTE PTR [r8]
  4306b5:	sub    BYTE PTR [rdi+0x4e],al
  4306b8:	push   rbp
  4306b9:	sub    DWORD PTR [rax],esp
  4306bb:	xor    al,0x2e
  4306bd:	cmp    DWORD PTR [rsi],ebp
  4306bf:	xor    al,0x0
	...
  4306cd:	add    BYTE PTR [rax],al
  4306cf:	add    BYTE PTR [rdi+0x43],al
  4306d2:	rex.XB cmp spl,BYTE PTR [r8]
  4306d5:	sub    BYTE PTR [rdi+0x4e],al
  4306d8:	push   rbp
  4306d9:	sub    DWORD PTR [rax],esp
  4306db:	xor    al,0x2e
  4306dd:	cmp    DWORD PTR [rsi],ebp
  4306df:	xor    al,0x0
	...
  4306ed:	add    BYTE PTR [rax],al
  4306ef:	add    BYTE PTR [rdi+0x43],al
  4306f2:	rex.XB cmp spl,BYTE PTR [r8]
  4306f5:	sub    BYTE PTR [rdi+0x4e],al
  4306f8:	push   rbp
  4306f9:	sub    DWORD PTR [rax],esp
  4306fb:	xor    al,0x2e
  4306fd:	cmp    DWORD PTR [rsi],ebp
  4306ff:	xor    al,0x0
	...
  43070d:	add    BYTE PTR [rax],al
  43070f:	add    BYTE PTR [rdi+0x43],al
  430712:	rex.XB cmp spl,BYTE PTR [r8]
  430715:	sub    BYTE PTR [rdi+0x4e],al
  430718:	push   rbp
  430719:	sub    DWORD PTR [rax],esp
  43071b:	xor    al,0x2e
  43071d:	cmp    DWORD PTR [rsi],ebp
  43071f:	xor    al,0x0
	...
  43072d:	add    BYTE PTR [rax],al
  43072f:	add    BYTE PTR [rdi+0x43],al
  430732:	rex.XB cmp spl,BYTE PTR [r8]
  430735:	sub    BYTE PTR [rdi+0x4e],al
  430738:	push   rbp
  430739:	sub    DWORD PTR [rax],esp
  43073b:	xor    al,0x2e
  43073d:	cmp    DWORD PTR [rsi],ebp
  43073f:	xor    al,0x0
	...
  43074d:	add    BYTE PTR [rax],al
  43074f:	add    BYTE PTR [rdi+0x43],al
  430752:	rex.XB cmp spl,BYTE PTR [r8]
  430755:	sub    BYTE PTR [rdi+0x4e],al
  430758:	push   rbp
  430759:	sub    DWORD PTR [rax],esp
  43075b:	xor    al,0x2e
  43075d:	cmp    DWORD PTR [rsi],ebp
  43075f:	xor    al,0x0
	...
  43076d:	add    BYTE PTR [rax],al
  43076f:	add    BYTE PTR [rdi+0x43],al
  430772:	rex.XB cmp spl,BYTE PTR [r8]
  430775:	sub    BYTE PTR [rdi+0x4e],al
  430778:	push   rbp
  430779:	sub    DWORD PTR [rax],esp
  43077b:	xor    al,0x2e
  43077d:	cmp    DWORD PTR [rsi],ebp
  43077f:	xor    al,0x0
	...
  43078d:	add    BYTE PTR [rax],al
  43078f:	add    BYTE PTR [rdi+0x43],al
  430792:	rex.XB cmp spl,BYTE PTR [r8]
  430795:	sub    BYTE PTR [rdi+0x4e],al
  430798:	push   rbp
  430799:	sub    DWORD PTR [rax],esp
  43079b:	xor    al,0x2e
  43079d:	cmp    DWORD PTR [rsi],ebp
  43079f:	xor    al,0x0
	...
  4307ad:	add    BYTE PTR [rax],al
  4307af:	add    BYTE PTR [rdi+0x43],al
  4307b2:	rex.XB cmp spl,BYTE PTR [r8]
  4307b5:	sub    BYTE PTR [rdi+0x4e],al
  4307b8:	push   rbp
  4307b9:	sub    DWORD PTR [rax],esp
  4307bb:	xor    al,0x2e
  4307bd:	cmp    DWORD PTR [rsi],ebp
  4307bf:	xor    al,0x0
	...
  4307cd:	add    BYTE PTR [rax],al
  4307cf:	add    BYTE PTR [rdi+0x43],al
  4307d2:	rex.XB cmp spl,BYTE PTR [r8]
  4307d5:	sub    BYTE PTR [rdi+0x4e],al
  4307d8:	push   rbp
  4307d9:	sub    DWORD PTR [rax],esp
  4307db:	xor    al,0x2e
  4307dd:	cmp    DWORD PTR [rsi],ebp
  4307df:	xor    al,0x0
	...
  4307ed:	add    BYTE PTR [rax],al
  4307ef:	add    BYTE PTR [rdi+0x43],al
  4307f2:	rex.XB cmp spl,BYTE PTR [r8]
  4307f5:	sub    BYTE PTR [rdi+0x4e],al
  4307f8:	push   rbp
  4307f9:	sub    DWORD PTR [rax],esp
  4307fb:	xor    al,0x2e
  4307fd:	cmp    DWORD PTR [rsi],ebp
  4307ff:	xor    al,0x0
	...
  43080d:	add    BYTE PTR [rax],al
  43080f:	add    BYTE PTR [rdi+0x43],al
  430812:	rex.XB cmp spl,BYTE PTR [r8]
  430815:	sub    BYTE PTR [rdi+0x4e],al
  430818:	push   rbp
  430819:	sub    DWORD PTR [rax],esp
  43081b:	xor    al,0x2e
  43081d:	cmp    DWORD PTR [rsi],ebp
  43081f:	xor    al,0x0
	...
  43082d:	add    BYTE PTR [rax],al
  43082f:	add    BYTE PTR [rdi+0x43],al
  430832:	rex.XB cmp spl,BYTE PTR [r8]
  430835:	sub    BYTE PTR [rdi+0x4e],al
  430838:	push   rbp
  430839:	sub    DWORD PTR [rax],esp
  43083b:	xor    al,0x2e
  43083d:	cmp    DWORD PTR [rsi],ebp
  43083f:	xor    al,0x0
	...
  43084d:	add    BYTE PTR [rax],al
  43084f:	add    BYTE PTR [rdi+0x43],al
  430852:	rex.XB cmp spl,BYTE PTR [r8]
  430855:	sub    BYTE PTR [rdi+0x4e],al
  430858:	push   rbp
  430859:	sub    DWORD PTR [rax],esp
  43085b:	xor    al,0x2e
  43085d:	cmp    DWORD PTR [rsi],ebp
  43085f:	xor    al,0x0
	...
  43086d:	add    BYTE PTR [rax],al
  43086f:	add    BYTE PTR [rdi+0x43],al
  430872:	rex.XB cmp spl,BYTE PTR [r8]
  430875:	sub    BYTE PTR [rdi+0x4e],al
  430878:	push   rbp
  430879:	sub    DWORD PTR [rax],esp
  43087b:	xor    al,0x2e
  43087d:	cmp    DWORD PTR [rsi],ebp
  43087f:	xor    al,0x0
	...
  43088d:	add    BYTE PTR [rax],al
  43088f:	add    BYTE PTR [rdi+0x43],al
  430892:	rex.XB cmp spl,BYTE PTR [r8]
  430895:	sub    BYTE PTR [rdi+0x4e],al
  430898:	push   rbp
  430899:	sub    DWORD PTR [rax],esp
  43089b:	xor    al,0x2e
  43089d:	cmp    DWORD PTR [rsi],ebp
  43089f:	xor    al,0x0
	...
  4308ad:	add    BYTE PTR [rax],al
  4308af:	add    BYTE PTR [rdi+0x43],al
  4308b2:	rex.XB cmp spl,BYTE PTR [r8]
  4308b5:	sub    BYTE PTR [rdi+0x4e],al
  4308b8:	push   rbp
  4308b9:	sub    DWORD PTR [rax],esp
  4308bb:	xor    al,0x2e
  4308bd:	cmp    DWORD PTR [rsi],ebp
  4308bf:	xor    al,0x0
	...
  4308cd:	add    BYTE PTR [rax],al
  4308cf:	add    BYTE PTR [rdi+0x43],al
  4308d2:	rex.XB cmp spl,BYTE PTR [r8]
  4308d5:	sub    BYTE PTR [rdi+0x4e],al
  4308d8:	push   rbp
  4308d9:	sub    DWORD PTR [rax],esp
  4308db:	xor    al,0x2e
  4308dd:	cmp    DWORD PTR [rsi],ebp
  4308df:	xor    al,0x0
	...
  4308ed:	add    BYTE PTR [rax],al
  4308ef:	add    BYTE PTR [rdi+0x43],al
  4308f2:	rex.XB cmp spl,BYTE PTR [r8]
  4308f5:	sub    BYTE PTR [rdi+0x4e],al
  4308f8:	push   rbp
  4308f9:	sub    DWORD PTR [rax],esp
  4308fb:	xor    al,0x2e
  4308fd:	cmp    DWORD PTR [rsi],ebp
  4308ff:	xor    al,0x0
	...
  43090d:	add    BYTE PTR [rax],al
  43090f:	add    BYTE PTR [rdi+0x43],al
  430912:	rex.XB cmp spl,BYTE PTR [r8]
  430915:	sub    BYTE PTR [rdi+0x4e],al
  430918:	push   rbp
  430919:	sub    DWORD PTR [rax],esp
  43091b:	xor    al,0x2e
  43091d:	cmp    DWORD PTR [rsi],ebp
  43091f:	xor    al,0x0
	...
  43092d:	add    BYTE PTR [rax],al
  43092f:	add    BYTE PTR [rdi+0x43],al
  430932:	rex.XB cmp spl,BYTE PTR [r8]
  430935:	sub    BYTE PTR [rdi+0x4e],al
  430938:	push   rbp
  430939:	sub    DWORD PTR [rax],esp
  43093b:	xor    al,0x2e
  43093d:	cmp    DWORD PTR [rsi],ebp
  43093f:	xor    al,0x0
	...
  43094d:	add    BYTE PTR [rax],al
  43094f:	add    BYTE PTR [rdi+0x43],al
  430952:	rex.XB cmp spl,BYTE PTR [r8]
  430955:	sub    BYTE PTR [rdi+0x4e],al
  430958:	push   rbp
  430959:	sub    DWORD PTR [rax],esp
  43095b:	xor    al,0x2e
  43095d:	cmp    DWORD PTR [rsi],ebp
  43095f:	xor    al,0x0
	...
  43096d:	add    BYTE PTR [rax],al
  43096f:	add    BYTE PTR [rdi+0x43],al
  430972:	rex.XB cmp spl,BYTE PTR [r8]
  430975:	sub    BYTE PTR [rdi+0x4e],al
  430978:	push   rbp
  430979:	sub    DWORD PTR [rax],esp
  43097b:	xor    al,0x2e
  43097d:	cmp    DWORD PTR [rsi],ebp
  43097f:	xor    al,0x0
	...
  43098d:	add    BYTE PTR [rax],al
  43098f:	add    BYTE PTR [rdi+0x43],al
  430992:	rex.XB cmp spl,BYTE PTR [r8]
  430995:	sub    BYTE PTR [rdi+0x4e],al
  430998:	push   rbp
  430999:	sub    DWORD PTR [rax],esp
  43099b:	xor    al,0x2e
  43099d:	cmp    DWORD PTR [rsi],ebp
  43099f:	xor    al,0x0
	...
  4309ad:	add    BYTE PTR [rax],al
  4309af:	add    BYTE PTR [rdi+0x43],al
  4309b2:	rex.XB cmp spl,BYTE PTR [r8]
  4309b5:	sub    BYTE PTR [rdi+0x4e],al
  4309b8:	push   rbp
  4309b9:	sub    DWORD PTR [rax],esp
  4309bb:	xor    al,0x2e
  4309bd:	cmp    DWORD PTR [rsi],ebp
  4309bf:	xor    al,0x0
	...
  4309cd:	add    BYTE PTR [rax],al
  4309cf:	add    BYTE PTR [rdi+0x43],al
  4309d2:	rex.XB cmp spl,BYTE PTR [r8]
  4309d5:	sub    BYTE PTR [rdi+0x4e],al
  4309d8:	push   rbp
  4309d9:	sub    DWORD PTR [rax],esp
  4309db:	xor    al,0x2e
  4309dd:	cmp    DWORD PTR [rsi],ebp
  4309df:	xor    al,0x0
	...
  4309ed:	add    BYTE PTR [rax],al
  4309ef:	add    BYTE PTR [rdi+0x43],al
  4309f2:	rex.XB cmp spl,BYTE PTR [r8]
  4309f5:	sub    BYTE PTR [rdi+0x4e],al
  4309f8:	push   rbp
  4309f9:	sub    DWORD PTR [rax],esp
  4309fb:	xor    al,0x2e
  4309fd:	cmp    DWORD PTR [rsi],ebp
  4309ff:	xor    al,0x0
	...
  430a0d:	add    BYTE PTR [rax],al
  430a0f:	add    BYTE PTR [rdi+0x43],al
  430a12:	rex.XB cmp spl,BYTE PTR [r8]
  430a15:	sub    BYTE PTR [rdi+0x4e],al
  430a18:	push   rbp
  430a19:	sub    DWORD PTR [rax],esp
  430a1b:	xor    al,0x2e
  430a1d:	cmp    DWORD PTR [rsi],ebp
  430a1f:	xor    al,0x0
	...
  430a2d:	add    BYTE PTR [rax],al
  430a2f:	add    BYTE PTR [rdi+0x43],al
  430a32:	rex.XB cmp spl,BYTE PTR [r8]
  430a35:	sub    BYTE PTR [rdi+0x4e],al
  430a38:	push   rbp
  430a39:	sub    DWORD PTR [rax],esp
  430a3b:	xor    al,0x2e
  430a3d:	cmp    DWORD PTR [rsi],ebp
  430a3f:	xor    al,0x0
	...
  430a4d:	add    BYTE PTR [rax],al
  430a4f:	add    BYTE PTR [rdi+0x43],al
  430a52:	rex.XB cmp spl,BYTE PTR [r8]
  430a55:	sub    BYTE PTR [rdi+0x4e],al
  430a58:	push   rbp
  430a59:	sub    DWORD PTR [rax],esp
  430a5b:	xor    al,0x2e
  430a5d:	cmp    DWORD PTR [rsi],ebp
  430a5f:	xor    al,0x0
	...
  430a6d:	add    BYTE PTR [rax],al
  430a6f:	add    BYTE PTR [rdi+0x43],al
  430a72:	rex.XB cmp spl,BYTE PTR [r8]
  430a75:	sub    BYTE PTR [rdi+0x4e],al
  430a78:	push   rbp
  430a79:	sub    DWORD PTR [rax],esp
  430a7b:	xor    al,0x2e
  430a7d:	cmp    DWORD PTR [rsi],ebp
  430a7f:	xor    al,0x0
	...
  430a8d:	add    BYTE PTR [rax],al
  430a8f:	add    BYTE PTR [rdi+0x43],al
  430a92:	rex.XB cmp spl,BYTE PTR [r8]
  430a95:	sub    BYTE PTR [rdi+0x4e],al
  430a98:	push   rbp
  430a99:	sub    DWORD PTR [rax],esp
  430a9b:	xor    al,0x2e
  430a9d:	cmp    DWORD PTR [rsi],ebp
  430a9f:	xor    al,0x0
	...
  430aad:	add    BYTE PTR [rax],al
  430aaf:	add    BYTE PTR [rdi+0x43],al
  430ab2:	rex.XB cmp spl,BYTE PTR [r8]
  430ab5:	sub    BYTE PTR [rdi+0x4e],al
  430ab8:	push   rbp
  430ab9:	sub    DWORD PTR [rax],esp
  430abb:	xor    al,0x2e
  430abd:	cmp    DWORD PTR [rsi],ebp
  430abf:	xor    al,0x0
	...
  430acd:	add    BYTE PTR [rax],al
  430acf:	add    BYTE PTR [rdi+0x43],al
  430ad2:	rex.XB cmp spl,BYTE PTR [r8]
  430ad5:	sub    BYTE PTR [rdi+0x4e],al
  430ad8:	push   rbp
  430ad9:	sub    DWORD PTR [rax],esp
  430adb:	xor    al,0x2e
  430add:	cmp    DWORD PTR [rsi],ebp
  430adf:	xor    al,0x0
	...
  430aed:	add    BYTE PTR [rax],al
  430aef:	add    BYTE PTR [rdi+0x43],al
  430af2:	rex.XB cmp spl,BYTE PTR [r8]
  430af5:	sub    BYTE PTR [rdi+0x4e],al
  430af8:	push   rbp
  430af9:	sub    DWORD PTR [rax],esp
  430afb:	xor    al,0x2e
  430afd:	cmp    DWORD PTR [rsi],ebp
  430aff:	xor    al,0x0
	...
  430b0d:	add    BYTE PTR [rax],al
  430b0f:	add    BYTE PTR [rdi+0x43],al
  430b12:	rex.XB cmp spl,BYTE PTR [r8]
  430b15:	sub    BYTE PTR [rdi+0x4e],al
  430b18:	push   rbp
  430b19:	sub    DWORD PTR [rax],esp
  430b1b:	xor    al,0x2e
  430b1d:	cmp    DWORD PTR [rsi],ebp
  430b1f:	xor    al,0x0
	...
  430b2d:	add    BYTE PTR [rax],al
  430b2f:	add    BYTE PTR [rdi+0x43],al
  430b32:	rex.XB cmp spl,BYTE PTR [r8]
  430b35:	sub    BYTE PTR [rdi+0x4e],al
  430b38:	push   rbp
  430b39:	sub    DWORD PTR [rax],esp
  430b3b:	xor    al,0x2e
  430b3d:	cmp    DWORD PTR [rsi],ebp
  430b3f:	xor    al,0x0
	...
  430b4d:	add    BYTE PTR [rax],al
  430b4f:	add    BYTE PTR [rdi+0x43],al
  430b52:	rex.XB cmp spl,BYTE PTR [r8]
  430b55:	sub    BYTE PTR [rdi+0x4e],al
  430b58:	push   rbp
  430b59:	sub    DWORD PTR [rax],esp
  430b5b:	xor    al,0x2e
  430b5d:	cmp    DWORD PTR [rsi],ebp
  430b5f:	xor    al,0x0
	...
  430b6d:	add    BYTE PTR [rax],al
  430b6f:	add    BYTE PTR [rdi+0x43],al
  430b72:	rex.XB cmp spl,BYTE PTR [r8]
  430b75:	sub    BYTE PTR [rdi+0x4e],al
  430b78:	push   rbp
  430b79:	sub    DWORD PTR [rax],esp
  430b7b:	xor    al,0x2e
  430b7d:	cmp    DWORD PTR [rsi],ebp
  430b7f:	xor    al,0x0
	...
  430b8d:	add    BYTE PTR [rax],al
  430b8f:	add    BYTE PTR [rdi+0x43],al
  430b92:	rex.XB cmp spl,BYTE PTR [r8]
  430b95:	sub    BYTE PTR [rdi+0x4e],al
  430b98:	push   rbp
  430b99:	sub    DWORD PTR [rax],esp
  430b9b:	xor    al,0x2e
  430b9d:	cmp    DWORD PTR [rsi],ebp
  430b9f:	xor    al,0x0
	...
  430bad:	add    BYTE PTR [rax],al
  430baf:	add    BYTE PTR [rdi+0x43],al
  430bb2:	rex.XB cmp spl,BYTE PTR [r8]
  430bb5:	sub    BYTE PTR [rdi+0x4e],al
  430bb8:	push   rbp
  430bb9:	sub    DWORD PTR [rax],esp
  430bbb:	xor    al,0x2e
  430bbd:	cmp    DWORD PTR [rsi],ebp
  430bbf:	xor    al,0x0
	...
  430bcd:	add    BYTE PTR [rax],al
  430bcf:	add    BYTE PTR [rdi+0x43],al
  430bd2:	rex.XB cmp spl,BYTE PTR [r8]
  430bd5:	sub    BYTE PTR [rdi+0x4e],al
  430bd8:	push   rbp
  430bd9:	sub    DWORD PTR [rax],esp
  430bdb:	xor    al,0x2e
  430bdd:	cmp    DWORD PTR [rsi],ebp
  430bdf:	xor    al,0x0
	...
  430bed:	add    BYTE PTR [rax],al
  430bef:	add    BYTE PTR [rdi+0x43],al
  430bf2:	rex.XB cmp spl,BYTE PTR [r8]
  430bf5:	sub    BYTE PTR [rdi+0x4e],al
  430bf8:	push   rbp
  430bf9:	sub    DWORD PTR [rax],esp
  430bfb:	xor    al,0x2e
  430bfd:	cmp    DWORD PTR [rsi],ebp
  430bff:	xor    al,0x0
	...
  430c0d:	add    BYTE PTR [rax],al
  430c0f:	add    BYTE PTR [rdi+0x43],al
  430c12:	rex.XB cmp spl,BYTE PTR [r8]
  430c15:	sub    BYTE PTR [rdi+0x4e],al
  430c18:	push   rbp
  430c19:	sub    DWORD PTR [rax],esp
  430c1b:	xor    al,0x2e
  430c1d:	cmp    DWORD PTR [rsi],ebp
  430c1f:	xor    al,0x0
	...
  430c2d:	add    BYTE PTR [rax],al
  430c2f:	add    BYTE PTR [rdi+0x43],al
  430c32:	rex.XB cmp spl,BYTE PTR [r8]
  430c35:	sub    BYTE PTR [rdi+0x4e],al
  430c38:	push   rbp
  430c39:	sub    DWORD PTR [rax],esp
  430c3b:	xor    al,0x2e
  430c3d:	cmp    DWORD PTR [rsi],ebp
  430c3f:	xor    al,0x0
	...
  430c4d:	add    BYTE PTR [rax],al
  430c4f:	add    BYTE PTR [rdi+0x43],al
  430c52:	rex.XB cmp spl,BYTE PTR [r8]
  430c55:	sub    BYTE PTR [rdi+0x4e],al
  430c58:	push   rbp
  430c59:	sub    DWORD PTR [rax],esp
  430c5b:	xor    al,0x2e
  430c5d:	cmp    DWORD PTR [rsi],ebp
  430c5f:	xor    al,0x0
	...
  430c6d:	add    BYTE PTR [rax],al
  430c6f:	add    BYTE PTR [rdi+0x43],al
  430c72:	rex.XB cmp spl,BYTE PTR [r8]
  430c75:	sub    BYTE PTR [rdi+0x4e],al
  430c78:	push   rbp
  430c79:	sub    DWORD PTR [rax],esp
  430c7b:	xor    al,0x2e
  430c7d:	cmp    DWORD PTR [rsi],ebp
  430c7f:	xor    al,0x0
	...
  430c8d:	add    BYTE PTR [rax],al
  430c8f:	add    BYTE PTR [rdi+0x43],al
  430c92:	rex.XB cmp spl,BYTE PTR [r8]
  430c95:	sub    BYTE PTR [rdi+0x4e],al
  430c98:	push   rbp
  430c99:	sub    DWORD PTR [rax],esp
  430c9b:	xor    al,0x2e
  430c9d:	cmp    DWORD PTR [rsi],ebp
  430c9f:	xor    al,0x0
	...
  430cad:	add    BYTE PTR [rax],al
  430caf:	add    BYTE PTR [rdi+0x43],al
  430cb2:	rex.XB cmp spl,BYTE PTR [r8]
  430cb5:	sub    BYTE PTR [rdi+0x4e],al
  430cb8:	push   rbp
  430cb9:	sub    DWORD PTR [rax],esp
  430cbb:	xor    al,0x2e
  430cbd:	cmp    DWORD PTR [rsi],ebp
  430cbf:	xor    al,0x0
	...
  430ccd:	add    BYTE PTR [rax],al
  430ccf:	add    BYTE PTR [rdi+0x43],al
  430cd2:	rex.XB cmp spl,BYTE PTR [r8]
  430cd5:	sub    BYTE PTR [rdi+0x4e],al
  430cd8:	push   rbp
  430cd9:	sub    DWORD PTR [rax],esp
  430cdb:	xor    al,0x2e
  430cdd:	cmp    DWORD PTR [rsi],ebp
  430cdf:	xor    al,0x0
	...
  430ced:	add    BYTE PTR [rax],al
  430cef:	add    BYTE PTR [rdi+0x43],al
  430cf2:	rex.XB cmp spl,BYTE PTR [r8]
  430cf5:	sub    BYTE PTR [rdi+0x4e],al
  430cf8:	push   rbp
  430cf9:	sub    DWORD PTR [rax],esp
  430cfb:	xor    al,0x2e
  430cfd:	cmp    DWORD PTR [rsi],ebp
  430cff:	xor    al,0x0
	...
  430d0d:	add    BYTE PTR [rax],al
  430d0f:	add    BYTE PTR [rdi+0x43],al
  430d12:	rex.XB cmp spl,BYTE PTR [r8]
  430d15:	sub    BYTE PTR [rdi+0x4e],al
  430d18:	push   rbp
  430d19:	sub    DWORD PTR [rax],esp
  430d1b:	xor    al,0x2e
  430d1d:	cmp    DWORD PTR [rsi],ebp
  430d1f:	xor    al,0x0
	...

Disassembly of section .pdata:

0000000000431000 <.pdata>:
  431000:	add    BYTE PTR [rax],dl
  431002:	add    BYTE PTR [rax],al
  431004:	add    DWORD PTR [rax],edx
  431006:	add    BYTE PTR [rax],al
  431008:	add    BYTE PTR [rax],ah
  43100a:	add    eax,DWORD PTR [rax]
  43100c:	adc    BYTE PTR [rax],dl
  43100e:	add    BYTE PTR [rax],al
  431010:	push   rcx
  431011:	adc    DWORD PTR [rax],eax
  431013:	add    BYTE PTR [rax+riz*1],al
  431016:	add    eax,DWORD PTR [rax]
  431018:	(bad)  
  431019:	adc    DWORD PTR [rax],eax
  43101b:	add    BYTE PTR [rsi+0xc000011],ch
  431021:	and    BYTE PTR [rbx],al
  431023:	add    BYTE PTR [rax-0x31ffffef],dh
  431029:	adc    al,0x0
  43102b:	add    BYTE PTR [rax+riz*1],dl
  43102e:	add    eax,DWORD PTR [rax]
  431030:	rcl    BYTE PTR [rax+rax*1],1
  431033:	add    dl,dh
  431035:	adc    al,0x0
  431037:	add    BYTE PTR [rax],ch
  431039:	and    BYTE PTR [rbx],al
  43103b:	add    BYTE PTR [rax],al
  43103d:	adc    eax,0x15220000
  431042:	add    BYTE PTR [rax],al
  431044:	rex.W and BYTE PTR [rbx],al
  431047:	add    BYTE PTR [rax],dh
  431049:	adc    eax,0x15910000
  43104e:	add    BYTE PTR [rax],al
  431050:	push   0xffffffffa0000320
  431055:	adc    eax,0x15c90000
  43105a:	add    BYTE PTR [rax],al
  43105c:	je     0x43107e
  43105e:	add    eax,DWORD PTR [rax]
  431060:	rcl    BYTE PTR [rip+0x15e90000],1        # 0x162c1066
  431066:	add    BYTE PTR [rax],al
  431068:	jl     0x43108a
  43106a:	add    eax,DWORD PTR [rax]
  43106c:	lock adc eax,0x1c8a0000
  431072:	add    BYTE PTR [rax],al
  431074:	test   BYTE PTR [rax],ah
  431076:	add    eax,DWORD PTR [rax]
  431078:	nop
  431079:	sbb    al,0x0
  43107b:	add    dl,bh
  43107d:	(bad)  
  43107e:	add    BYTE PTR [rax],al
  431080:	pushf  
  431081:	and    BYTE PTR [rbx],al
  431083:	add    BYTE PTR [rax],al
  431085:	and    BYTE PTR [rax],al
  431087:	add    ah,bl
  431089:	and    DWORD PTR [rax],eax
  43108b:	add    BYTE PTR [rax+riz*1+0x21e00003],dh
  431092:	add    BYTE PTR [rax],al
  431094:	mov    ecx,0xcc000022
  431099:	and    BYTE PTR [rbx],al
  43109b:	add    al,al
  43109d:	and    al,BYTE PTR [rax]
  43109f:	add    BYTE PTR [rip+0xffffffffdc000023],bl        # 0xffffffffdc4310c8
  4310a5:	and    BYTE PTR [rbx],al
  4310a7:	add    BYTE PTR [rax],ah
  4310a9:	and    eax,DWORD PTR [rax]
  4310ab:	add    BYTE PTR [rbx+riz*1],bh
  4310ae:	add    BYTE PTR [rax],al
  4310b0:	call   0x404313d5
  4310b5:	and    eax,DWORD PTR [rax]
  4310b7:	add    BYTE PTR [rcx+0x24],cl
  4310ba:	add    BYTE PTR [rax],al
  4310bc:	lock and BYTE PTR [rbx],al
  4310bf:	add    BYTE PTR [rax+0x24],dl
  4310c2:	add    BYTE PTR [rax],al
  4310c4:	push   rbx
  4310c5:	and    eax,0x20fc0000
  4310ca:	add    eax,DWORD PTR [rax]
  4310cc:	(bad)  
  4310cd:	and    eax,0x25d50000
  4310d2:	add    BYTE PTR [rax],al
  4310d4:	adc    BYTE PTR [rcx],ah
  4310d6:	add    eax,DWORD PTR [rax]
  4310d8:	loopne 0x4310ff
  4310da:	add    BYTE PTR [rax],al
  4310dc:	jle    0x43110a
  4310de:	add    BYTE PTR [rax],al
  4310e0:	sbb    BYTE PTR [rcx],ah
  4310e2:	add    eax,DWORD PTR [rax]
  4310e4:	sub    BYTE PTR [rax+rax*1],0x0
  4310e8:	in     eax,dx
  4310e9:	add    BYTE PTR cs:[rax],al
  4310ec:	sub    al,0x21
  4310ee:	add    eax,DWORD PTR [rax]
  4310f0:	lock add BYTE PTR cs:[rax],al
  4310f4:	test   BYTE PTR [rdi],ch
  4310f6:	add    BYTE PTR [rax],al
  4310f8:	and    DWORD PTR [rbx],r8d
  4310fb:	add    BYTE PTR [rax-0x3dffffd1],dl
  431101:	xor    al,BYTE PTR [rax]
  431103:	add    BYTE PTR [rcx+riz*1+0x3],dl
  431107:	add    al,dl
  431109:	xor    al,BYTE PTR [rax]
  43110b:	add    BYTE PTR [rax+0x35],cl
  43110e:	add    BYTE PTR [rax],al
  431110:	ins    BYTE PTR es:[rdi],dx
  431111:	and    DWORD PTR [rbx],eax
  431113:	add    BYTE PTR [rax+0x35],dl
  431116:	add    BYTE PTR [rax],al
  431118:	(bad)  
  431119:	add    BYTE PTR ss:[rax],al
  43111c:	test   BYTE PTR [rcx],ah
  43111e:	add    eax,DWORD PTR [rax]
  431120:	adc    BYTE PTR [rsi],dh
  431122:	add    BYTE PTR [rax],al
  431124:	mov    WORD PTR [rsi],?
  431126:	add    BYTE PTR [rax],al
  431128:	nop
  431129:	and    DWORD PTR [rbx],eax
  43112b:	add    BYTE PTR [rax-0x3fffffca],dl
  431131:	add    BYTE PTR ss:[rax],al
  431134:	cwde   
  431135:	and    DWORD PTR [rbx],eax
  431137:	add    al,al
  431139:	add    BYTE PTR ss:[rax],al
  43113c:	(bad)  
  43113d:	(bad)  
  43113e:	add    BYTE PTR [rax],al
  431140:	movabs al,ds:0x3300003720000321
  431149:	(bad)  
  43114a:	add    BYTE PTR [rax],al
  43114c:	lods   al,BYTE PTR ds:[rsi]
  43114d:	and    DWORD PTR [rbx],eax
  43114f:	add    BYTE PTR [rax+0x37],al
  431152:	add    BYTE PTR [rax],al
  431154:	jae    0x43118e
  431156:	add    BYTE PTR [rax],al
  431158:	mov    al,0x21
  43115a:	add    eax,DWORD PTR [rax]
  43115c:	cmp    BYTE PTR [rax],0x0
  43115f:	add    BYTE PTR [rdi-0x47ffffc8],dh
  431165:	and    DWORD PTR [rbx],eax
  431167:	add    al,al
  431169:	cmp    BYTE PTR [rax],al
  43116b:	add    BYTE PTR [rbp-0x3fffffc6],ah
  431171:	and    DWORD PTR [rbx],eax
  431173:	add    BYTE PTR [rax-0x1ffffc6],dh
  431179:	cmp    eax,DWORD PTR [rax]
  43117b:	add    ah,dl
  43117d:	and    DWORD PTR [rbx],eax
  43117f:	add    BYTE PTR [rax],al
  431181:	cmp    al,0x0
  431183:	add    BYTE PTR [rax+0x44],cl
  431186:	add    BYTE PTR [rax],al
  431188:	in     al,0x21
  43118a:	add    eax,DWORD PTR [rax]
  43118c:	push   rax
  43118d:	add    BYTE PTR [rax],r8b
  431190:	cmp    dh,BYTE PTR [rax+rax*1+0x0]
  431194:	adc    al,0x22
  431196:	add    eax,DWORD PTR [rax]
  431198:	rex je 0x43119b
  43119b:	add    BYTE PTR [rax+0x2c000076],ch
  4311a1:	and    al,BYTE PTR [rbx]
  4311a3:	add    BYTE PTR [rax-0x6effff8a],dh
  4311a9:	ja     0x4311ab
  4311ab:	add    BYTE PTR [rdx+riz*1+0x3],al
  4311af:	add    BYTE PTR [rax-0x34ffff89],ah
  4311b5:	ja     0x4311b7
  4311b7:	add    BYTE PTR [rdx+riz*1+0x3],dl
  4311bb:	add    al,dl
  4311bd:	ja     0x4311bf
  4311bf:	add    BYTE PTR [rdi+0x5c000078],bh
  4311c5:	and    al,BYTE PTR [rbx]
  4311c7:	add    al,al
  4311c9:	js     0x4311cb
  4311cb:	add    BYTE PTR [rcx+rdi*2],dh
  4311ce:	add    BYTE PTR [rax],al
  4311d0:	push   0x40000322
  4311d5:	jns    0x4311d7
  4311d7:	add    BYTE PTR [rax],cl
  4311d9:	jp     0x4311db
  4311db:	add    BYTE PTR [rax+0x22],dh
  4311de:	add    eax,DWORD PTR [rax]
  4311e0:	adc    BYTE PTR [rdx+0x0],bh
  4311e3:	add    BYTE PTR [rsi+0x7400007a],cl
  4311e9:	and    al,BYTE PTR [rbx]
  4311eb:	add    BYTE PTR [rax+0x3d00007a],dl
  4311f1:	jnp    0x4311f3
  4311f3:	add    BYTE PTR [rdx+riz*1+0x3],bh
  4311f7:	add    BYTE PTR [rax+0x7b],al
  4311fa:	add    BYTE PTR [rax],al
  4311fc:	rex.RX jl 0x4311ff
  4311ff:	add    BYTE PTR [rdx+riz*1+0x7c500003],cl
  431206:	add    BYTE PTR [rax],al
  431208:	scas   al,BYTE PTR es:[rdi]
  431209:	jl     0x43120b
  43120b:	add    BYTE PTR [rdx+riz*1+0x7cb00003],bl
  431212:	add    BYTE PTR [rax],al
  431214:	mov    eax,0xa400007c
  431219:	and    al,BYTE PTR [rbx]
  43121b:	add    al,al
  43121d:	jl     0x43121f
  43121f:	add    dl,cl
  431221:	jl     0x431223
  431223:	add    BYTE PTR [rax-0x2ffffcde],ch
  431229:	jl     0x43122b
  43122b:	add    al,al
  43122d:	jge    0x43122f
  43122f:	add    BYTE PTR [rdx+riz*1+0x7dc00003],ch
  431236:	add    BYTE PTR [rax],al
  431238:	push   rsp
  431239:	jle    0x43123b
  43123b:	add    BYTE PTR [rdx+riz*1+0x7e600003],bh
  431242:	add    BYTE PTR [rax],al
  431244:	movabs eax,ds:0xb0000322dc00007e
  43124d:	jle    0x43124f
  43124f:	add    BYTE PTR [rdi-0x17ffff81],ch
  431255:	and    al,BYTE PTR [rbx]
  431257:	add    BYTE PTR [rax-0x4cffff81],dh
  43125d:	add    BYTE PTR [rax],0x0
  431260:	cld    
  431261:	and    al,BYTE PTR [rbx]
  431263:	add    al,al
  431265:	add    BYTE PTR [rax],0x0
  431268:	add    eax,DWORD PTR [rcx+0x23140000]
  43126e:	add    eax,DWORD PTR [rax]
  431270:	adc    BYTE PTR [rcx-0x7eb60000],al
  431276:	add    BYTE PTR [rax],al
  431278:	sbb    al,0x23
  43127a:	add    eax,DWORD PTR [rax]
  43127c:	push   rax
  43127d:	add    DWORD PTR [rax],0x81b800
  431283:	add    BYTE PTR [rbx+riz*1],ah
  431286:	add    eax,DWORD PTR [rax]
  431288:	rol    BYTE PTR [rcx-0x3c360000],0x0
  43128f:	add    BYTE PTR [rax],dh
  431291:	and    eax,DWORD PTR [rbx]
  431293:	add    al,dl
  431295:	ret    
  431296:	add    BYTE PTR [rax],al
  431298:	mov    bh,0xc5
  43129a:	add    BYTE PTR [rax],al
  43129c:	and    r8,QWORD PTR [rbx]
  43129f:	add    al,al
  4312a1:	(bad)
  4312a4:	xor    esi,eax
  4312a6:	add    BYTE PTR [rax],al
  4312a8:	pop    rsp
  4312a9:	and    eax,DWORD PTR [rbx]
  4312ab:	add    BYTE PTR [rax-0x3a],al
  4312ae:	add    BYTE PTR [rax],al
  4312b0:	sahf   
  4312b1:	mov    BYTE PTR [rax],0x0
  4312b4:	push   0xffffffffa0000323
  4312b9:	mov    BYTE PTR [rax],0x0
  4312bc:	faddp  st(6),st
  4312be:	add    BYTE PTR [rax],al
  4312c0:	je     0x4312e5
  4312c2:	add    eax,DWORD PTR [rax]
  4312c4:	loopne 0x43128c
  4312c6:	add    BYTE PTR [rax],al
  4312c8:	cld    
  4312c9:	mov    DWORD PTR [rax],0x3237c00
  4312cf:	add    BYTE PTR [rax],al
  4312d1:	enter  0x0,0xc3
  4312d5:	enter  0x0,0x8c
  4312d9:	and    eax,DWORD PTR [rbx]
  4312db:	add    al,dl
  4312dd:	enter  0x0,0x7b
  4312e1:	retf   0x0
  4312e4:	cwde   
  4312e5:	and    eax,DWORD PTR [rbx]
  4312e7:	add    BYTE PTR [rax-0x29ffff36],al
  4312ed:	retf   0x0
  4312f0:	mov    al,0x23
  4312f2:	add    eax,DWORD PTR [rax]
  4312f4:	loopne 0x4312c0
  4312f6:	add    BYTE PTR [rax],al
  4312f8:	cmp    bl,cl
  4312fa:	add    BYTE PTR [rax],al
  4312fc:	shl    BYTE PTR [rbx],0x3
  4312ff:	add    BYTE PTR [rax-0x35],al
  431302:	add    BYTE PTR [rax],al
  431304:	mov    cl,bl
  431306:	add    BYTE PTR [rax],al
  431308:	shl    BYTE PTR [rbx],1
  43130a:	add    eax,DWORD PTR [rax]
  43130c:	nop
  43130d:	retf   
  43130e:	add    BYTE PTR [rax],al
  431310:	(bad)  
  431311:	int3   
  431312:	add    BYTE PTR [rax],al
  431314:	fsub   DWORD PTR [rbx]
  431316:	add    eax,DWORD PTR [rax]
  431318:	nop
  431319:	int3   
  43131a:	add    BYTE PTR [rax],al
  43131c:	jo     0x4312eb
  43131e:	add    BYTE PTR [rax],al
  431320:	lock and eax,DWORD PTR [rbx]
  431323:	add    BYTE PTR [rax-0x33],dh
  431326:	add    BYTE PTR [rax],al
  431328:	jno    0x4312f7
  43132a:	add    BYTE PTR [rax],al
  43132c:	add    al,0x24
  43132e:	add    eax,DWORD PTR [rax]
  431330:	or     ch,0x0
  431333:	add    BYTE PTR [rsi+0x80000cd],dl
  431339:	and    al,0x3
  43133b:	add    BYTE PTR [rax-0x32ffff33],ah
  431341:	int    0x0
  431343:	add    BYTE PTR [rsp],cl
  431346:	add    eax,DWORD PTR [rax]
  431348:	ror    ch,1
  43134a:	add    BYTE PTR [rax],al
  43134c:	out    0xcd,al
  43134e:	add    BYTE PTR [rax],al
  431350:	adc    al,0x24
  431352:	add    eax,DWORD PTR [rax]
  431354:	lock int 0x0
  431357:	add    BYTE PTR [rcx],ah
  431359:	(bad)  
  43135a:	add    BYTE PTR [rax],al
  43135c:	sbb    BYTE PTR [rbx+rax*1],ah
  43135f:	add    BYTE PTR [rax],dh
  431361:	(bad)  
  431362:	add    BYTE PTR [rax],al
  431364:	test   eax,0x200000cf
  431369:	and    al,0x3
  43136b:	add    BYTE PTR [rax+0x140000cf],dh
  431371:	rol    BYTE PTR [rax],1
  431373:	add    BYTE PTR [rax],bh
  431375:	and    al,0x3
  431377:	add    BYTE PTR [rax],ah
  431379:	rol    BYTE PTR [rax],1
  43137b:	add    BYTE PTR [rdi+0x440000d0],dh
  431381:	and    al,0x3
  431383:	add    al,al
  431385:	rol    BYTE PTR [rax],1
  431387:	add    al,ch
  431389:	rol    BYTE PTR [rax],1
  43138b:	add    BYTE PTR [rax+0x24],dl
  43138e:	add    eax,DWORD PTR [rax]
  431390:	lock rol BYTE PTR [rax],1
  431393:	add    BYTE PTR [rax-0x2f],ah
  431396:	add    BYTE PTR [rax],al
  431398:	pop    rax
  431399:	and    al,0x3
  43139b:	add    BYTE PTR [rax-0x2f],ah
  43139e:	add    BYTE PTR [rax],al
  4313a0:	(bad)  
  4313a1:	rol    DWORD PTR [rax],1
  4313a3:	add    BYTE PTR [rax+0x24],ch
  4313a6:	add    eax,DWORD PTR [rax]
  4313a8:	rcl    cl,1
  4313aa:	add    BYTE PTR [rax],al
  4313ac:	rex.RXB rol BYTE PTR [r8],cl
  4313af:	add    BYTE PTR [rsp+0x3],dh
  4313b3:	add    BYTE PTR [rax-0x2e],dl
  4313b6:	add    BYTE PTR [rax],al
  4313b8:	adc    edx,ebx
  4313ba:	add    BYTE PTR [rax],al
  4313bc:	and    BYTE PTR [rbx+rax*1],0x0
  4313c0:	and    bl,dl
  4313c2:	add    BYTE PTR [rax],al
  4313c4:	adc    bl,bl
  4313c6:	add    BYTE PTR [rax],al
  4313c8:	mov    WORD PTR [rbx+rax*1],fs
  4313cb:	add    BYTE PTR [rax],ah
  4313cd:	fild   DWORD PTR [rax]
  4313cf:	add    BYTE PTR [rcx],ah
  4313d1:	fild   DWORD PTR [rax]
  4313d3:	add    BYTE PTR [rsp-0x24cffffd],ah
  4313da:	add    BYTE PTR [rax],al
  4313dc:	xor    ebx,ebx
  4313de:	add    BYTE PTR [rax],al
  4313e0:	test   al,0x24
  4313e2:	add    eax,DWORD PTR [rax]
  4313e4:	rex fild DWORD PTR [rax]
  4313e7:	add    BYTE PTR [rcx-0x25],al
  4313ea:	add    BYTE PTR [rax],al
  4313ec:	lods   al,BYTE PTR ds:[rsi]
  4313ed:	and    al,0x3
  4313ef:	add    BYTE PTR [rax-0x25],dl
  4313f2:	add    BYTE PTR [rax],al
  4313f4:	push   rcx
  4313f5:	fild   DWORD PTR [rax]
  4313f7:	add    BYTE PTR [rax+0x60000324],dh
  4313fd:	fild   DWORD PTR [rax]
  4313ff:	add    BYTE PTR [rcx-0x25],ah
  431402:	add    BYTE PTR [rax],al
  431404:	mov    ah,0x24
  431406:	add    eax,DWORD PTR [rax]
  431408:	jo     0x4313e5
  43140a:	add    BYTE PTR [rax],al
  43140c:	jno    0x4313e9
  43140e:	add    BYTE PTR [rax],al
  431410:	mov    eax,0x80000324
  431415:	fild   DWORD PTR [rax]
  431417:	add    BYTE PTR [rcx-0x43ffff25],al
  43141d:	and    al,0x3
  43141f:	add    BYTE PTR [rax-0x6effff25],dl
  431425:	fild   DWORD PTR [rax]
  431427:	add    al,al
  431429:	and    al,0x3
  43142b:	add    BYTE PTR [rax-0x5effff25],ah
  431431:	fild   DWORD PTR [rax]
  431433:	add    ah,al
  431435:	and    al,0x3
  431437:	add    BYTE PTR [rax-0x4effff25],dh
  43143d:	fild   DWORD PTR [rax]
  43143f:	add    al,cl
  431441:	and    al,0x3
  431443:	add    al,al
  431445:	fild   DWORD PTR [rax]
  431447:	add    cl,al
  431449:	fild   DWORD PTR [rax]
  43144b:	add    ah,cl
  43144d:	and    al,0x3
  43144f:	add    al,dl
  431451:	fild   DWORD PTR [rax]
  431453:	add    cl,dl
  431455:	fild   DWORD PTR [rax]
  431457:	add    al,dl
  431459:	and    al,0x3
  43145b:	add    al,ah
  43145d:	fild   DWORD PTR [rax]
  43145f:	add    cl,ah
  431461:	fild   DWORD PTR [rax]
  431463:	add    ah,dl
  431465:	and    al,0x3
  431467:	add    al,dh
  431469:	fild   DWORD PTR [rax]
  43146b:	add    cl,dh
  43146d:	fild   DWORD PTR [rax]
  43146f:	add    al,bl
  431471:	and    al,0x3
  431473:	add    BYTE PTR [rax],al
  431475:	fadd   QWORD PTR [rax]
  431477:	add    BYTE PTR [rcx],al
  431479:	fadd   QWORD PTR [rax]
  43147b:	add    ah,bl
  43147d:	and    al,0x3
  43147f:	add    BYTE PTR [rax],dl
  431481:	fadd   QWORD PTR [rax]
  431483:	add    BYTE PTR [rcx],dl
  431485:	fadd   QWORD PTR [rax]
  431487:	add    al,ah
  431489:	and    al,0x3
  43148b:	add    BYTE PTR [rax],ah
  43148d:	fadd   QWORD PTR [rax]
  43148f:	add    BYTE PTR [rcx],ah
  431491:	fadd   QWORD PTR [rax]
  431493:	add    ah,ah
  431495:	and    al,0x3
  431497:	add    BYTE PTR [rax],dh
  431499:	fadd   QWORD PTR [rax]
  43149b:	add    BYTE PTR [rcx],dh
  43149d:	fadd   QWORD PTR [rax]
  43149f:	add    al,ch
  4314a1:	and    al,0x3
  4314a3:	add    BYTE PTR [rax-0x24],al
  4314a6:	add    BYTE PTR [rax],al
  4314a8:	fadd   QWORD PTR [r8]
  4314ab:	add    ah,ch
  4314ad:	and    al,0x3
  4314af:	add    BYTE PTR [rax-0x24],dl
  4314b2:	add    BYTE PTR [rax],al
  4314b4:	push   rcx
  4314b5:	fadd   QWORD PTR [rax]
  4314b7:	add    al,dh
  4314b9:	and    al,0x3
  4314bb:	add    BYTE PTR [rax-0x24],ah
  4314be:	add    BYTE PTR [rax],al
  4314c0:	int    0xdd
  4314c2:	add    BYTE PTR [rax],al
  4314c4:	hlt    
  4314c5:	and    al,0x3
  4314c7:	add    al,dl
  4314c9:	fld    QWORD PTR [rax]
  4314cb:	add    BYTE PTR [rbp-0x22],ah
  4314ce:	add    BYTE PTR [rax],al
  4314d0:	or     BYTE PTR [rip+0xffffffffde700003],ah        # 0xffffffffdeb314d9
  4314d6:	add    BYTE PTR [rax],al
  4314d8:	cli    
  4314d9:	fild   WORD PTR [rax]
  4314db:	add    BYTE PTR [rax],bl
  4314dd:	and    eax,0xe0000003
  4314e2:	add    BYTE PTR [rax],al
  4314e4:	mov    ah,cl
  4314e6:	add    BYTE PTR [rax],al
  4314e8:	sub    al,0x25
  4314ea:	add    eax,DWORD PTR [rax]
  4314ec:	nop
  4314ed:	loope  0x4314ef
  4314ef:	add    BYTE PTR [rbp-0x1c],ch
  4314f2:	add    BYTE PTR [rax],al
  4314f4:	rex and eax,0xe4700003
  4314fa:	add    BYTE PTR [rax],al
  4314fc:	(bad)  
  4314fd:	in     eax,0x0
  4314ff:	add    BYTE PTR [rax+0x25],bl
  431502:	add    eax,DWORD PTR [rax]
  431504:	loopne 0x4314eb
  431506:	add    BYTE PTR [rax],al
  431508:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  431509:	call   0x25ab150e
  43150e:	add    eax,DWORD PTR [rax]
  431510:	mov    al,0xe8
  431512:	add    BYTE PTR [rax],al
  431514:	mov    edx,0x800000e8
  431519:	and    eax,0xe8c00003
  43151e:	add    BYTE PTR [rax],al
  431520:	jo     0x43150b
  431522:	add    BYTE PTR [rax],al
  431524:	test   BYTE PTR [rip+0xffffffffe9700003],ah        # 0xffffffffe9b3152d
  43152a:	add    BYTE PTR [rax],al
  43152c:	(bad)  
  43152d:	repz add BYTE PTR [rax],al
  431530:	xchg   esp,eax
  431531:	and    eax,0xf3d00003
  431536:	add    BYTE PTR [rax],al
  431538:	xlat   BYTE PTR ds:[rbx]
  431539:	cmc    
  43153a:	add    BYTE PTR [rax],al
  43153c:	lods   al,BYTE PTR ds:[rsi]
  43153d:	and    eax,0xf5e00003
  431542:	add    BYTE PTR [rax],al
  431544:	xchg   edx,eax
  431545:	clc    
  431546:	add    BYTE PTR [rax],al
  431548:	(bad)  
  431549:	and    eax,0xf8a00003
  43154e:	add    BYTE PTR [rax],al
  431550:	xlat   BYTE PTR ds:[rbx]
  431551:	clc    
  431552:	add    BYTE PTR [rax],al
  431554:	fsub   QWORD PTR [rip+0xfffffffff8e00003]        # 0xfffffffff923155d
  43155a:	add    BYTE PTR [rax],al
  43155c:	or     edi,ecx
  43155e:	add    BYTE PTR [rax],al
  431560:	in     al,0x25
  431562:	add    eax,DWORD PTR [rax]
  431564:	adc    cl,bh
  431566:	add    BYTE PTR [rax],al
  431568:	pop    rax
  431569:	stc    
  43156a:	add    BYTE PTR [rax],al
  43156c:	call   0x60431896
  431571:	stc    
  431572:	add    BYTE PTR [rax],al
  431574:	movsxd edi,ecx
  431576:	add    BYTE PTR [rax],al
  431578:	in     al,dx
  431579:	and    eax,0xf9700003
  43157e:	add    BYTE PTR [rax],al
  431580:	lock add BYTE PTR [rcx],al
  431583:	add    al,dh
  431585:	and    eax,0xf00003
  43158a:	add    DWORD PTR [rax],eax
  43158c:	repz add BYTE PTR [rcx],al
  43158f:	add    BYTE PTR [rax],cl
  431591:	add    eax,DWORD PTR es:[rax]
  431594:	add    BYTE PTR [rcx],al
  431596:	add    DWORD PTR [rax],eax
  431598:	and    al,0x1
  43159a:	add    DWORD PTR [rax],eax
  43159c:	or     al,0x26
  43159e:	add    eax,DWORD PTR [rax]
  4315a0:	xor    BYTE PTR [rcx],al
  4315a2:	add    DWORD PTR [rax],eax
  4315a4:	xor    eax,DWORD PTR [rcx]
  4315a6:	add    DWORD PTR [rax],eax
  4315a8:	adc    al,0x26
  4315aa:	add    eax,DWORD PTR [rax]
  4315ac:	rex add DWORD PTR [rcx],eax
  4315af:	add    BYTE PTR [rbx+0x1],al
  4315b2:	add    DWORD PTR [rax],eax
  4315b4:	sbb    BYTE PTR [rsi],ah
  4315b6:	add    eax,DWORD PTR [rax]
  4315b8:	push   rax
  4315b9:	add    DWORD PTR [rcx],eax
  4315bb:	add    BYTE PTR [rax+0x1],bl
  4315be:	add    DWORD PTR [rax],eax
  4315c0:	sbb    al,0x26
  4315c2:	add    eax,DWORD PTR [rax]
  4315c4:	(bad)  
  4315c5:	add    DWORD PTR [rcx],eax
  4315c7:	add    BYTE PTR [rsi+0x1],ch
  4315ca:	add    DWORD PTR [rax],eax
  4315cc:	and    BYTE PTR [rsi],ah
  4315ce:	add    eax,DWORD PTR [rax]
  4315d0:	jo     0x4315d3
  4315d2:	add    DWORD PTR [rax],eax
  4315d4:	js     0x4315d7
  4315d6:	add    DWORD PTR [rax],eax
  4315d8:	and    al,0x26
  4315da:	add    eax,DWORD PTR [rax]
  4315dc:	add    BYTE PTR [rcx],0x1
  4315df:	add    BYTE PTR [rbx+0x28000101],al
  4315e5:	add    eax,DWORD PTR es:[rax]
  4315e8:	nop
  4315e9:	add    DWORD PTR [rcx],eax
  4315eb:	add    BYTE PTR [rbx+0x2c000101],dl
  4315f1:	add    eax,DWORD PTR es:[rax]
  4315f4:	movabs al,ds:0x30000101a8000101
  4315fd:	add    eax,DWORD PTR es:[rax]
  431600:	mov    al,0x1
  431602:	add    DWORD PTR [rax],eax
  431604:	mov    bl,0x1
  431606:	add    DWORD PTR [rax],eax
  431608:	xor    al,0x26
  43160a:	add    eax,DWORD PTR [rax]
  43160c:	rol    BYTE PTR [rcx],0x1
  43160f:	add    bl,al
  431611:	add    DWORD PTR [rcx],eax
  431613:	add    BYTE PTR [rax],bh
  431615:	add    eax,DWORD PTR es:[rax]
  431618:	rol    BYTE PTR [rcx],1
  43161a:	add    DWORD PTR [rax],eax
  43161c:	fiadd  WORD PTR [rcx]
  43161e:	add    DWORD PTR [rax],eax
  431620:	cmp    al,0x26
  431622:	add    eax,DWORD PTR [rax]
  431624:	loopne 0x431627
  431626:	add    DWORD PTR [rax],eax
  431628:	in     al,0x1
  43162a:	add    DWORD PTR [rax],eax
  43162c:	rex
  43162d:	add    eax,DWORD PTR es:[rax]
  431630:	lock add DWORD PTR [rcx],eax
  431633:	add    al,bh
  431635:	add    DWORD PTR [rcx],eax
  431637:	add    BYTE PTR [rsi+riz*1+0x3],al
  43163b:	add    BYTE PTR [rax],al
  43163d:	add    al,BYTE PTR [rcx]
  43163f:	add    BYTE PTR [rbx],al
  431641:	add    al,BYTE PTR [rcx]
  431643:	add    BYTE PTR [rax+0x26],cl
  431646:	add    eax,DWORD PTR [rax]
  431648:	adc    BYTE PTR [rdx],al
  43164a:	add    DWORD PTR [rax],eax
  43164c:	adc    eax,DWORD PTR [rdx]
  43164e:	add    DWORD PTR [rax],eax
  431650:	rex.WR
  431651:	add    eax,DWORD PTR es:[rax]
  431654:	and    BYTE PTR [rdx],al
  431656:	add    DWORD PTR [rax],eax
  431658:	sub    BYTE PTR [rdx],al
  43165a:	add    DWORD PTR [rax],eax
  43165c:	push   rax
  43165d:	add    eax,DWORD PTR es:[rax]
  431660:	xor    BYTE PTR [rdx],al
  431662:	add    DWORD PTR [rax],eax
  431664:	xor    al,0x2
  431666:	add    DWORD PTR [rax],eax
  431668:	push   rsp
  431669:	add    eax,DWORD PTR es:[rax]
  43166c:	add    al,BYTE PTR [rcx]
  43166f:	add    BYTE PTR [rbx+0x2],al
  431672:	add    DWORD PTR [rax],eax
  431674:	pop    rax
  431675:	add    eax,DWORD PTR es:[rax]
  431678:	push   rax
  431679:	add    al,BYTE PTR [rcx]
  43167b:	add    BYTE PTR [rdx+rax*1+0x1],dl
  43167f:	add    BYTE PTR [rsi+riz*1+0x3],bl
  431683:	add    BYTE PTR [rax+0x2],ah
  431686:	add    DWORD PTR [rax],eax
  431688:	jo     0x43168c
  43168a:	add    DWORD PTR [rax],eax
  43168c:	(bad)  
  43168d:	add    eax,DWORD PTR es:[rax]
  431690:	jo     0x431694
  431692:	add    DWORD PTR [rax],eax
  431694:	add    BYTE PTR [rdx],0x1
  431697:	add    BYTE PTR [rax+0x26],ch
  43169a:	add    eax,DWORD PTR [rax]
  43169c:	add    BYTE PTR [rbx],0x1
  43169f:	add    BYTE PTR [rdi],ah
  4316a1:	add    al,0x1
  4316a3:	add    BYTE PTR [rax+0x26],dh
  4316a6:	add    eax,DWORD PTR [rax]
  4316a8:	xor    BYTE PTR [rcx+rax*1],al
  4316ab:	add    BYTE PTR [rcx+0x4],cl
  4316ae:	add    DWORD PTR [rax],eax
  4316b0:	js     0x4316d8
  4316b2:	add    eax,DWORD PTR [rax]
  4316b4:	push   rax
  4316b5:	add    al,0x1
  4316b7:	add    BYTE PTR [rbp-0x7ffffefc],al
  4316bd:	add    eax,DWORD PTR es:[rax]
  4316c0:	nop
  4316c1:	add    al,0x1
  4316c3:	add    ch,ah
  4316c5:	add    al,0x1
  4316c7:	add    BYTE PTR [rax-0xffffcda],cl
  4316cd:	add    al,0x1
  4316cf:	add    BYTE PTR [rax*1+0x26940001],cl
  4316d6:	add    eax,DWORD PTR [rax]
  4316d8:	adc    BYTE PTR [rip+0x51a0001],al        # 0x55d16df
  4316de:	add    DWORD PTR [rax],eax
  4316e0:	cwde   
  4316e1:	add    eax,DWORD PTR es:[rax]
  4316e4:	and    BYTE PTR [rip+0x5230001],al        # 0x56616eb
  4316ea:	add    DWORD PTR [rax],eax
  4316ec:	pushf  
  4316ed:	add    eax,DWORD PTR es:[rax]
  4316f0:	xor    BYTE PTR [rip+0x6060001],al        # 0x64916f7
  4316f6:	add    DWORD PTR [rax],eax
  4316f8:	movabs al,ds:0xb00010610000326
  431701:	(bad)  
  431702:	add    DWORD PTR [rax],eax
  431704:	mov    al,0x26
  431706:	add    eax,DWORD PTR [rax]
  431708:	adc    BYTE PTR [rdi],al
  43170a:	add    DWORD PTR [rax],eax
  43170c:	(bad)  
  43170d:	(bad)  
  43170e:	add    DWORD PTR [rax],eax
  431710:	shl    BYTE PTR [rsi],0x3
  431713:	add    BYTE PTR [rax+0x7],al
  431716:	add    DWORD PTR [rax],eax
  431718:	test   eax,0xc8000107
  43171d:	add    eax,DWORD PTR es:[rax]
  431720:	mov    al,0x7
  431722:	add    DWORD PTR [rax],eax
  431724:	mov    bl,0x7
  431726:	add    DWORD PTR [rax],eax
  431728:	(bad)  
  431729:	add    eax,DWORD PTR es:[rax]
  43172c:	rol    BYTE PTR [rdi],0x1
  43172f:	add    BYTE PTR [rcx],al
  431731:	or     BYTE PTR [rcx],al
  431733:	add    al,bl
  431735:	add    eax,DWORD PTR es:[rax]
  431738:	adc    BYTE PTR [rax],cl
  43173a:	add    DWORD PTR [rax],eax
  43173c:	sbb    al,0x8
  43173e:	add    DWORD PTR [rax],eax
  431740:	loopne 0x431768
  431742:	add    eax,DWORD PTR [rax]
  431744:	and    BYTE PTR [rax],cl
  431746:	add    DWORD PTR [rax],eax
  431748:	sbb    al,0x9
  43174a:	add    DWORD PTR [rax],eax
  43174c:	in     al,0x26
  43174e:	add    eax,DWORD PTR [rax]
  431750:	and    BYTE PTR [rcx],cl
  431752:	add    DWORD PTR [rax],eax
  431754:	and    ecx,DWORD PTR [rcx]
  431756:	add    DWORD PTR [rax],eax
  431758:	cld    
  431759:	add    eax,DWORD PTR es:[rax]
  43175c:	xor    BYTE PTR [rcx],cl
  43175e:	add    DWORD PTR [rax],eax
  431760:	xor    al,0x9
  431762:	add    DWORD PTR [rax],eax
  431764:	add    BYTE PTR [rdi],ah
  431766:	add    eax,DWORD PTR [rax]
  431768:	rex or DWORD PTR [rcx],eax
  43176b:	add    BYTE PTR [rcx+rcx*1+0x1],al
  43176f:	add    BYTE PTR [rdi+riz*1],al
  431772:	add    eax,DWORD PTR [rax]
  431774:	push   rax
  431775:	or     DWORD PTR [rcx],eax
  431777:	add    BYTE PTR [rcx+0x8000109],dh
  43177d:	(bad)  
  43177e:	add    eax,DWORD PTR [rax]
  431780:	ror    BYTE PTR [rcx],0x1
  431783:	add    BYTE PTR [rdx],ah
  431785:	or     eax,DWORD PTR [rcx]
  431787:	add    BYTE PTR [rdi+riz*1],dl
  43178a:	add    eax,DWORD PTR [rax]
  43178c:	xor    BYTE PTR [rbx],cl
  43178e:	add    DWORD PTR [rax],eax
  431790:	sub    DWORD PTR [rsi],ecx
  431792:	add    DWORD PTR [rax],eax
  431794:	sub    BYTE PTR [rdi],ah
  431796:	add    eax,DWORD PTR [rax]
  431798:	xor    BYTE PTR [rsi],cl
  43179a:	add    DWORD PTR [rax],eax
  43179c:	(bad)  
  43179d:	sgdt   [rax]
  4317a0:	rex (bad) 
  4317a2:	add    eax,DWORD PTR [rax]
  4317a4:	loopne 0x4317b5
  4317a6:	add    DWORD PTR [rax],eax
  4317a8:	int3   
  4317a9:	adc    BYTE PTR [rcx],al
  4317ab:	add    BYTE PTR [rax+0x27],cl
  4317ae:	add    eax,DWORD PTR [rax]
  4317b0:	rcl    BYTE PTR [rax],1
  4317b2:	add    DWORD PTR [rax],eax
  4317b4:	mov    BYTE PTR [rdx],dl
  4317b6:	add    DWORD PTR [rax],eax
  4317b8:	pop    rax
  4317b9:	(bad)  
  4317ba:	add    eax,DWORD PTR [rax]
  4317bc:	nop
  4317bd:	adc    al,BYTE PTR [rcx]
  4317bf:	add    ch,bh
  4317c1:	adc    al,BYTE PTR [rcx]
  4317c3:	add    BYTE PTR [rax+0x27],ah
  4317c6:	add    eax,DWORD PTR [rax]
  4317c8:	add    BYTE PTR [rbx],dl
  4317ca:	add    DWORD PTR [rax],eax
  4317cc:	jg     0x4317e1
  4317ce:	add    DWORD PTR [rax],eax
  4317d0:	jo     0x4317f9
  4317d2:	add    eax,DWORD PTR [rax]
  4317d4:	adc    BYTE PTR [rbx],0x1
  4317d7:	add    BYTE PTR [rdi],bl
  4317d9:	adc    al,0x1
  4317db:	add    BYTE PTR [rdi+riz*1+0x3],bh
  4317df:	add    BYTE PTR [rax],ah
  4317e1:	adc    al,0x1
  4317e3:	add    dl,bh
  4317e5:	adc    al,0x1
  4317e7:	add    BYTE PTR [rdi+riz*1+0x15000003],al
  4317ee:	add    DWORD PTR [rax],eax
  4317f0:	(bad)  
  4317f1:	adc    eax,0x278c0001
  4317f6:	add    eax,DWORD PTR [rax]
  4317f8:	and    BYTE PTR [rip+0x15320001],dl        # 0x157517ff
  4317fe:	add    DWORD PTR [rax],eax
  431800:	nop
  431801:	(bad)  
  431802:	add    eax,DWORD PTR [rax]
  431804:	rex adc eax,0x15850001
  43180a:	add    DWORD PTR [rax],eax
  43180c:	xchg   esp,eax
  43180d:	(bad)  
  43180e:	add    eax,DWORD PTR [rax]
  431810:	nop
  431811:	adc    eax,0x162e0001
  431816:	add    DWORD PTR [rax],eax
  431818:	cwde   
  431819:	(bad)  
  43181a:	add    eax,DWORD PTR [rax]
  43181c:	xor    BYTE PTR [rsi],dl
  43181e:	add    DWORD PTR [rax],eax
  431820:	jae    0x431838
  431822:	add    DWORD PTR [rax],eax
  431824:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  431825:	(bad)  
  431826:	add    eax,DWORD PTR [rax]
  431828:	adc    BYTE PTR [rsi],0x1
  43182b:	add    BYTE PTR [rbx-0x4ffffeea],bh
  431831:	(bad)  
  431832:	add    eax,DWORD PTR [rax]
  431834:	rcl    BYTE PTR [rsi],0x1
  431837:	add    BYTE PTR [rsi+0x17],cl
  43183a:	add    DWORD PTR [rax],eax
  43183c:	mov    eax,0x50000327
  431841:	(bad)  
  431842:	add    DWORD PTR [rax],eax
  431844:	mov    BYTE PTR [rdi],dl
  431846:	add    DWORD PTR [rax],eax
  431848:	(bad)  
  431849:	(bad)  
  43184a:	add    eax,DWORD PTR [rax]
  43184c:	nop
  43184d:	(bad)  
  43184e:	add    DWORD PTR [rax],eax
  431850:	in     eax,0x17
  431852:	add    DWORD PTR [rax],eax
  431854:	shl    BYTE PTR [rdi],1
  431856:	add    eax,DWORD PTR [rax]
  431858:	lock (bad) 
  43185a:	add    DWORD PTR [rax],eax
  43185c:	sahf   
  43185d:	sbb    BYTE PTR [rcx],al
  43185f:	add    ah,bl
  431861:	(bad)  
  431862:	add    eax,DWORD PTR [rax]
  431864:	loopne 0x43187e
  431866:	add    DWORD PTR [rax],eax
  431868:	rcr    BYTE PTR [rcx],0x1
  43186b:	add    ah,ch
  43186d:	(bad)  
  43186e:	add    eax,DWORD PTR [rax]
  431870:	rcr    BYTE PTR [rcx],0x1
  431873:	add    BYTE PTR [rsi+0x1c],ch
  431876:	add    DWORD PTR [rax],eax
  431878:	hlt    
  431879:	(bad)  
  43187a:	add    eax,DWORD PTR [rax]
  43187c:	jo     0x43189a
  43187e:	add    DWORD PTR [rax],eax
  431880:	retf   0x11e
  431883:	add    BYTE PTR [rax],cl
  431885:	sub    BYTE PTR [rbx],al
  431887:	add    al,dl
  431889:	(bad)  
  43188a:	add    DWORD PTR [rax],eax
  43188c:	nop
  43188d:	and    DWORD PTR [rcx],eax
  43188f:	add    BYTE PTR [rax],ah
  431891:	sub    BYTE PTR [rbx],al
  431893:	add    BYTE PTR [rax+0x3b000121],dl
  431899:	and    al,BYTE PTR [rcx]
  43189b:	add    BYTE PTR [rax],bh
  43189d:	sub    BYTE PTR [rbx],al
  43189f:	add    BYTE PTR [rax+0x22],al
  4318a2:	add    DWORD PTR [rax],eax
  4318a4:	stc    
  4318a5:	and    eax,0x28440001
  4318aa:	add    eax,DWORD PTR [rax]
  4318ac:	add    BYTE PTR [rsi],ah
  4318ae:	add    DWORD PTR [rax],eax
  4318b0:	xor    ah,BYTE PTR [rsi]
  4318b2:	add    DWORD PTR [rax],eax
  4318b4:	pop    rsp
  4318b5:	sub    BYTE PTR [rbx],al
  4318b7:	add    BYTE PTR [rax+0x26],al
  4318ba:	add    DWORD PTR [rax],eax
  4318bc:	jmp    0x604319e7
  4318c1:	sub    BYTE PTR [rbx],al
  4318c3:	add    al,dh
  4318c5:	add    DWORD PTR es:[rax],eax
  4318c8:	cmp    eax,0x68000142
  4318cd:	sub    BYTE PTR [rbx],al
  4318cf:	add    BYTE PTR [rax+0x42],al
  4318d2:	add    DWORD PTR [rax],eax
  4318d4:	fwait
  4318d5:	rex.XB add DWORD PTR [r8],eax
  4318d8:	cwde   
  4318d9:	sub    BYTE PTR [rbx],al
  4318db:	add    BYTE PTR [rax-0x44fffebd],ah
  4318e1:	rex.XB add DWORD PTR [r8],eax
  4318e4:	lods   al,BYTE PTR ds:[rsi]
  4318e5:	sub    BYTE PTR [rbx],al
  4318e7:	add    al,al
  4318e9:	rex.XB add DWORD PTR [r8],eax
  4318ec:	jrcxz  0x431931
  4318ee:	add    DWORD PTR [rax],eax
  4318f0:	mov    ah,0x28
  4318f2:	add    eax,DWORD PTR [rax]
  4318f4:	lock rex.XB add DWORD PTR [r8],eax
  4318f8:	mov    edi,0xbc00014c
  4318fd:	sub    BYTE PTR [rbx],al
  4318ff:	add    al,al
  431901:	add    QWORD PTR [rax],r8
  431904:	mov    ebp,0xd400014d
  431909:	sub    BYTE PTR [rbx],al
  43190b:	add    al,al
  43190d:	add    QWORD PTR [r8],r8
  431910:	dec    BYTE PTR [rbp+0x1]
  431913:	add    al,ah
  431915:	sub    BYTE PTR [rbx],al
  431917:	add    BYTE PTR [rax],al
  431919:	rex.WRX add QWORD PTR [rax],r8
  43191c:	test   BYTE PTR [rsi+0x1],cl
  43191f:	add    ah,ah
  431921:	sub    BYTE PTR [rbx],al
  431923:	add    BYTE PTR [rax+0x4200014e],dl
  431929:	push   rdx
  43192a:	add    DWORD PTR [rax],eax
  43192c:	call   0x50431c59
  431931:	push   rdx
  431932:	add    DWORD PTR [rax],eax
  431934:	sbb    al,0x53
  431936:	add    DWORD PTR [rax],eax
  431938:	add    BYTE PTR [rcx],ch
  43193a:	add    eax,DWORD PTR [rax]
  43193c:	and    BYTE PTR [rbx+0x1],dl
  43193f:	add    BYTE PTR [rdx+0x53],ah
  431942:	add    DWORD PTR [rax],eax
  431944:	or     al,0x29
  431946:	add    eax,DWORD PTR [rax]
  431948:	jo     0x43199d
  43194a:	add    DWORD PTR [rax],eax
  43194c:	jle    0x4319a2
  43194e:	add    DWORD PTR [rax],eax
  431950:	adc    al,0x29
  431952:	add    eax,DWORD PTR [rax]
  431954:	adc    BYTE PTR [rcx+rax*1+0x0],0xe6
  431959:	push   rsp
  43195a:	add    DWORD PTR [rax],eax
  43195c:	and    BYTE PTR [rcx],ch
  43195e:	add    eax,DWORD PTR [rax]
  431960:	lock push rsp
  431962:	add    DWORD PTR [rax],eax
  431964:	movabs ds:0xb000032928000155,al
  43196d:	push   rbp
  43196e:	add    DWORD PTR [rax],eax
  431970:	(bad)  
  431971:	push   rbp
  431972:	add    DWORD PTR [rax],eax
  431974:	cmp    BYTE PTR [rcx],ch
  431976:	add    eax,DWORD PTR [rax]
  431978:	loopne 0x4319cf
  43197a:	add    DWORD PTR [rax],eax
  43197c:	adc    BYTE PTR [rdi+0x1],dl
  43197f:	add    BYTE PTR [rax+0x29],al
  431982:	add    eax,DWORD PTR [rax]
  431984:	adc    BYTE PTR [rdi+0x1],dl
  431987:	add    BYTE PTR [rax+rbx*2+0x1],dh
  43198b:	add    BYTE PTR [rcx+rbp*1+0x3],dl
  43198f:	add    BYTE PTR [rax-0x6cfffea8],al
  431995:	pop    rcx
  431996:	add    DWORD PTR [rax],eax
  431998:	sub    DWORD PTR fs:[rbx],eax
  43199b:	add    BYTE PTR [rax-0x1bfffea7],ah
  4319a1:	pop    rcx
  4319a2:	add    DWORD PTR [rax],eax
  4319a4:	js     0x4319cf
  4319a6:	add    eax,DWORD PTR [rax]
  4319a8:	lock pop rcx
  4319aa:	add    DWORD PTR [rax],eax
  4319ac:	es pop rbx
  4319ae:	add    DWORD PTR [rax],eax
  4319b0:	jl     0x4319db
  4319b2:	add    eax,DWORD PTR [rax]
  4319b4:	xor    BYTE PTR [rbx+0x1],bl
  4319b7:	add    BYTE PTR [rbx+0x5c],al
  4319ba:	add    DWORD PTR [rax],eax
  4319bc:	mov    BYTE PTR [rcx],ch
  4319be:	add    eax,DWORD PTR [rax]
  4319c0:	push   rax
  4319c1:	pop    rsp
  4319c2:	add    DWORD PTR [rax],eax
  4319c4:	pop    rcx
  4319c5:	pop    rbp
  4319c6:	add    DWORD PTR [rax],eax
  4319c8:	xchg   esp,eax
  4319c9:	sub    DWORD PTR [rbx],eax
  4319cb:	add    BYTE PTR [rax+0x5d],ah
  4319ce:	add    DWORD PTR [rax],eax
  4319d0:	test   BYTE PTR [rbp+0x1],bl
  4319d3:	add    BYTE PTR [rax-0x6ffffcd7],ah
  4319d9:	pop    rbp
  4319da:	add    DWORD PTR [rax],eax
  4319dc:	mov    ebx,DWORD PTR [rsi+0x1]
  4319df:	add    BYTE PTR [rcx+rbp*1+0x5e900003],ah
  4319e6:	add    DWORD PTR [rax],eax
  4319e8:	rex.WR pop rdi
  4319ea:	add    DWORD PTR [rax],eax
  4319ec:	mov    eax,0x50000329
  4319f1:	pop    rdi
  4319f2:	add    DWORD PTR [rax],eax
  4319f4:	xchg   ebx,eax
  4319f5:	pop    rdi
  4319f6:	add    DWORD PTR [rax],eax
  4319f8:	enter  0x329,0x0
  4319fc:	movabs al,ds:0xcc0001600200015f
  431a05:	sub    DWORD PTR [rbx],eax
  431a07:	add    BYTE PTR [rax],dl
  431a09:	(bad)  
  431a0a:	add    DWORD PTR [rax],eax
  431a0c:	cdq    
  431a0d:	(bad)  
  431a0e:	add    DWORD PTR [rax],eax
  431a10:	shr    BYTE PTR [rcx],1
  431a12:	add    eax,DWORD PTR [rax]
  431a14:	xor    BYTE PTR [rbx+0x1],ah
  431a17:	add    BYTE PTR [rax],bh
  431a19:	movsxd eax,DWORD PTR [rcx]
  431a1b:	add    ah,dl
  431a1d:	sub    DWORD PTR [rbx],eax
  431a1f:	add    BYTE PTR [rax+0x63],al
  431a22:	add    DWORD PTR [rax],eax
  431a24:	rex.WXB movsxd rax,DWORD PTR [r9]
  431a27:	add    al,bl
  431a29:	sub    DWORD PTR [rbx],eax
  431a2b:	add    BYTE PTR [rax+0x24000164],al
  431a31:	add    WORD PTR [rax],ax
  431a34:	cld    
  431a35:	and    DWORD PTR [rbx],eax
  431a37:	add    BYTE PTR [rax],dh
  431a39:	add    WORD PTR [rax],ax
  431a3c:	adc    BYTE PTR [rax+0x1],ch
  431a3f:	add    al,cl
  431a41:	and    al,BYTE PTR [rbx]
	...

Disassembly of section .xdata:

0000000000432000 <.xdata>:
  432000:	add    DWORD PTR [rax],eax
  432002:	add    BYTE PTR [rax],al
  432004:	add    DWORD PTR [rcx+rax*1],eax
  432007:	add    BYTE PTR [rdx+rax*2],al
  43200a:	add    BYTE PTR [rax],al
  43200c:	add    DWORD PTR [rcx+rax*1],eax
  43200f:	add    BYTE PTR [rdx+riz*2],al
  432012:	add    BYTE PTR [rax],al
  432014:	add    DWORD PTR [rdi],ecx
  432016:	or     BYTE PTR [rax],al
  432018:	lgdt   [rbx]
  43201b:	add    BYTE PTR [rax],cl
  43201d:	xor    BYTE PTR [rdi],al
  43201f:	(bad)  
  432020:	(bad)  
  432021:	jo     0x432028
  432023:	push   rax
  432024:	add    al,0xc0
  432026:	add    dl,al
  432028:	or     DWORD PTR [rcx+rax*1],eax
  43202b:	add    BYTE PTR [rdx+rax*2],al
  43202e:	add    BYTE PTR [rax],al
  432030:	and    BYTE PTR [rbx+0x1],ah
  432033:	add    BYTE PTR [rcx],al
  432035:	add    BYTE PTR [rax],al
  432037:	add    ah,dl
  432039:	adc    al,0x0
  43203b:	add    ah,ch
  43203d:	adc    al,0x0
  43203f:	add    al,dl
  432041:	adc    BYTE PTR [rcx],al
  432043:	add    ah,ch
  432045:	adc    al,0x0
  432047:	add    BYTE PTR [rcx],cl
  432049:	add    al,0x1
  43204b:	add    BYTE PTR [rdx+rax*2],al
  43204e:	add    BYTE PTR [rax],al
  432050:	and    BYTE PTR [rbx+0x1],ah
  432053:	add    BYTE PTR [rcx],al
  432055:	add    BYTE PTR [rax],al
  432057:	add    BYTE PTR [rdx*1+0x151c0000],al
  43205e:	add    BYTE PTR [rax],al
  432060:	rcl    BYTE PTR [rax],1
  432062:	add    DWORD PTR [rax],eax
  432064:	sbb    al,0x15
  432066:	add    BYTE PTR [rax],al
  432068:	add    DWORD PTR [rsi],eax
  43206a:	add    eax,DWORD PTR [rax]
  43206c:	(bad)  
  43206d:	rex.X add sil,BYTE PTR [rax]
  432070:	add    DWORD PTR [rax+0x0],esp
  432073:	add    BYTE PTR [rcx],al
  432075:	add    eax,0x32050002
  43207a:	add    DWORD PTR [rax],esi
  43207c:	add    DWORD PTR [rcx+rax*1],eax
  43207f:	add    BYTE PTR [rdx+rax*2],al
  432082:	add    BYTE PTR [rax],al
  432084:	add    DWORD PTR [rbx],edx
  432086:	or     al,BYTE PTR [rax]
  432088:	adc    eax,DWORD PTR [rcx]
  43208a:	adc    eax,DWORD PTR [rax]
  43208c:	or     al,0x30
  43208e:	or     esp,DWORD PTR [rax+0xa]
  432091:	jo     0x43209c
  432093:	push   rax
  432094:	or     al,al
  432096:	(bad)  
  432097:	rol    BYTE PTR [rax+riz*8],1
  43209a:	add    dh,al
  43209c:	add    DWORD PTR [rax],edx
  43209e:	or     DWORD PTR [rax],eax
  4320a0:	adc    BYTE PTR [rdx+0x600b300c],al
  4320a6:	or     dh,BYTE PTR [rax+0x9]
  4320a9:	push   rax
  4320aa:	or     al,al
  4320ac:	(bad)  
  4320ad:	rol    BYTE PTR [rax+riz*8],1
  4320b0:	add    dh,al
  4320b2:	add    BYTE PTR [rax],al
  4320b4:	add    DWORD PTR [rdi],edx
  4320b6:	or     al,BYTE PTR [rax]
  4320b8:	(bad)  
  4320b9:	push   0x10f0016
  4320be:	(bad)  
  4320bf:	add    BYTE PTR [rax],cl
  4320c1:	xor    BYTE PTR [rdi],al
  4320c3:	(bad)  
  4320c4:	(bad)  
  4320c5:	jo     0x4320cc
  4320c7:	push   rax
  4320c8:	add    al,0xc0
  4320ca:	add    dl,al
  4320cc:	add    DWORD PTR [rdx],ecx
  4320ce:	(bad)  
  4320cf:	add    BYTE PTR [rdx],cl
  4320d1:	push   rdx
  4320d2:	(bad)  
  4320d3:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b32539
  4320d9:	push   rax
  4320da:	add    al,al
  4320dc:	add    DWORD PTR [rsi],eax
  4320de:	add    eax,DWORD PTR [rax]
  4320e0:	(bad)  
  4320e1:	rex.X add sil,BYTE PTR [rax]
  4320e4:	add    DWORD PTR [rax+0x0],esp
  4320e7:	add    BYTE PTR [rcx],al
  4320e9:	add    al,0x1
  4320eb:	add    BYTE PTR [rdx+rax*2],al
  4320ee:	add    BYTE PTR [rax],al
  4320f0:	add    DWORD PTR [rsi],eax
  4320f2:	add    eax,DWORD PTR [rax]
  4320f4:	(bad)  
  4320f5:	rex.X add sil,BYTE PTR [rax]
  4320f8:	add    DWORD PTR [rax+0x0],esp
  4320fb:	add    BYTE PTR [rcx],al
  4320fd:	or     al,0x7
  4320ff:	add    BYTE PTR [rdx+riz*2],cl
  432102:	or     BYTE PTR [rax],dh
  432104:	(bad)  
  432105:	(bad)  
  432106:	(bad)  
  432107:	jo     0x43210e
  432109:	push   rax
  43210a:	add    al,0xc0
  43210c:	add    dl,al
  43210e:	add    BYTE PTR [rax],al
  432110:	add    DWORD PTR [rcx],eax
  432112:	add    DWORD PTR [rax],eax
  432114:	add    DWORD PTR [rax+0x0],esi
  432117:	add    BYTE PTR [rcx],al
  432119:	or     al,0x7
  43211b:	add    BYTE PTR [rdx+rax*2],cl
  43211e:	or     BYTE PTR [rax],dh
  432120:	(bad)  
  432121:	(bad)  
  432122:	(bad)  
  432123:	jo     0x43212a
  432125:	push   rax
  432126:	add    al,0xc0
  432128:	add    dl,al
  43212a:	add    BYTE PTR [rax],al
  43212c:	add    DWORD PTR [rax],edx
  43212e:	or     DWORD PTR [rax],eax
  432130:	adc    BYTE PTR [rdx+0xc],ah
  432133:	xor    BYTE PTR [rbx],cl
  432135:	(bad)  
  432136:	or     dh,BYTE PTR [rax+0x9]
  432139:	push   rax
  43213a:	or     al,al
  43213c:	(bad)  
  43213d:	rol    BYTE PTR [rax+riz*8],1
  432140:	add    dh,al
  432142:	add    BYTE PTR [rax],al
  432144:	add    DWORD PTR [rax],ecx
  432146:	add    eax,0x4420800
  43214b:	xor    BYTE PTR [rbx],al
  43214d:	(bad)  
  43214e:	add    dh,BYTE PTR [rax+0x1]
  432151:	push   rax
  432152:	add    BYTE PTR [rax],al
  432154:	add    DWORD PTR [rbx],edx
  432156:	or     al,BYTE PTR [rax]
  432158:	adc    eax,DWORD PTR [rcx]
  43215a:	(bad)  
  43215b:	add    BYTE PTR [rax+rsi*1],cl
  43215e:	or     esp,DWORD PTR [rax+0xa]
  432161:	jo     0x43216c
  432163:	push   rax
  432164:	or     al,al
  432166:	(bad)  
  432167:	rol    BYTE PTR [rax+riz*8],1
  43216a:	add    dh,al
  43216c:	add    DWORD PTR [rax],edx
  43216e:	or     DWORD PTR [rax],eax
  432170:	adc    BYTE PTR [rdx+0xc],ah
  432173:	xor    BYTE PTR [rbx],cl
  432175:	(bad)  
  432176:	or     dh,BYTE PTR [rax+0x9]
  432179:	push   rax
  43217a:	or     al,al
  43217c:	(bad)  
  43217d:	rol    BYTE PTR [rax+riz*8],1
  432180:	add    dh,al
  432182:	add    BYTE PTR [rax],al
  432184:	add    DWORD PTR [rdi],eax
  432186:	add    al,0x0
  432188:	(bad)  
  432189:	jb     0x43218e
  43218b:	xor    BYTE PTR [rdx],al
  43218d:	(bad)  
  43218e:	add    DWORD PTR [rax+0x1],esi
  432191:	add    al,0x1
  432193:	add    BYTE PTR [rdx+rax*2],al
  432196:	add    BYTE PTR [rax],al
  432198:	add    DWORD PTR [rip+0x32050002],eax        # 0x324821a0
  43219e:	add    DWORD PTR [rax],esi
  4321a0:	add    DWORD PTR [rsi],eax
  4321a2:	add    eax,DWORD PTR [rax]
  4321a4:	(bad)  
  4321a5:	(bad)  
  4321a6:	add    dh,BYTE PTR [rax]
  4321a8:	add    DWORD PTR [rax+0x0],esp
  4321ab:	add    BYTE PTR [rcx],al
  4321ad:	add    BYTE PTR [rax],al
  4321af:	add    BYTE PTR [rcx],al
  4321b1:	add    eax,0x32050002
  4321b6:	add    DWORD PTR [rax],esi
  4321b8:	add    DWORD PTR [rcx+rax*1],eax
  4321bb:	add    BYTE PTR [rdx+rax*2],al
  4321be:	add    BYTE PTR [rax],al
  4321c0:	add    DWORD PTR [rdi+rax*1],ecx
  4321c3:	add    BYTE PTR [rdx+rax*2],cl
  4321c6:	or     BYTE PTR [rax],dh
  4321c8:	(bad)  
  4321c9:	(bad)  
  4321ca:	(bad)  
  4321cb:	jo     0x4321d2
  4321cd:	push   rax
  4321ce:	add    al,0xc0
  4321d0:	add    dl,al
  4321d2:	add    BYTE PTR [rax],al
  4321d4:	add    DWORD PTR [rdx],ecx
  4321d6:	(bad)  
  4321d7:	add    BYTE PTR [rdx],cl
  4321d9:	xor    al,BYTE PTR [rsi]
  4321db:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b32641
  4321e1:	push   rax
  4321e2:	add    al,al
  4321e4:	add    DWORD PTR [rbx],edx
  4321e6:	or     al,BYTE PTR [rax]
  4321e8:	adc    eax,DWORD PTR [rcx]
  4321ea:	pop    rbp
  4321eb:	add    BYTE PTR [rax+rsi*1],cl
  4321ee:	or     esp,DWORD PTR [rax+0xa]
  4321f1:	jo     0x4321fc
  4321f3:	push   rax
  4321f4:	or     al,al
  4321f6:	(bad)  
  4321f7:	rol    BYTE PTR [rax+riz*8],1
  4321fa:	add    dh,al
  4321fc:	add    DWORD PTR [rax],edx
  4321fe:	or     DWORD PTR [rax],eax
  432200:	adc    BYTE PTR [rdx+0xc],ah
  432203:	xor    BYTE PTR [rbx],cl
  432205:	(bad)  
  432206:	or     dh,BYTE PTR [rax+0x9]
  432209:	push   rax
  43220a:	or     al,al
  43220c:	(bad)  
  43220d:	rol    BYTE PTR [rax+riz*8],1
  432210:	add    dh,al
  432212:	add    BYTE PTR [rax],al
  432214:	add    DWORD PTR [rbx],edx
  432216:	or     al,BYTE PTR [rax]
  432218:	adc    eax,DWORD PTR [rcx]
  43221a:	sbb    DWORD PTR [rax],eax
  43221c:	or     al,0x30
  43221e:	or     esp,DWORD PTR [rax+0xa]
  432221:	jo     0x43222c
  432223:	push   rax
  432224:	or     al,al
  432226:	(bad)  
  432227:	rol    BYTE PTR [rax+riz*8],1
  43222a:	add    dh,al
  43222c:	add    DWORD PTR [rax],edx
  43222e:	or     DWORD PTR [rax],eax
  432230:	adc    dl,al
  432232:	or     al,0x30
  432234:	or     esp,DWORD PTR [rax+0xa]
  432237:	jo     0x432242
  432239:	push   rax
  43223a:	or     al,al
  43223c:	(bad)  
  43223d:	rol    BYTE PTR [rax+riz*8],1
  432240:	add    dh,al
  432242:	add    BYTE PTR [rax],al
  432244:	add    DWORD PTR [rdx],ecx
  432246:	(bad)  
  432247:	add    BYTE PTR [rdx],cl
  432249:	xor    al,BYTE PTR [rsi]
  43224b:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b326b1
  432251:	push   rax
  432252:	add    al,al
  432254:	add    DWORD PTR [rip+0x32050002],eax        # 0x3248225c
  43225a:	add    DWORD PTR [rax],esi
  43225c:	add    DWORD PTR [rdi],eax
  43225e:	add    al,0x0
  432260:	(bad)  
  432261:	xor    al,BYTE PTR [rbx]
  432263:	xor    BYTE PTR [rdx],al
  432265:	(bad)  
  432266:	add    DWORD PTR [rax+0x1],esi
  432269:	add    al,0x1
  43226b:	add    BYTE PTR [rdx+riz*2],al
  43226e:	add    BYTE PTR [rax],al
  432270:	add    DWORD PTR [rax],eax
  432272:	add    BYTE PTR [rax],al
  432274:	add    DWORD PTR [rcx+rax*1],eax
  432277:	add    BYTE PTR [rdx+riz*4],al
  43227a:	add    BYTE PTR [rax],al
  43227c:	add    DWORD PTR [rax],ecx
  43227e:	add    eax,0x4a20800
  432283:	xor    BYTE PTR [rbx],al
  432285:	(bad)  
  432286:	add    dh,BYTE PTR [rax+0x1]
  432289:	push   rax
  43228a:	add    BYTE PTR [rax],al
  43228c:	add    DWORD PTR [rdx],ecx
  43228e:	add    eax,0x4010a00
  432293:	add    DWORD PTR [rbx],eax
  432295:	xor    BYTE PTR [rdx],al
  432297:	(bad)  
  432298:	add    DWORD PTR [rax+0x0],esi
  43229b:	add    BYTE PTR [rcx],al
  43229d:	add    al,0x1
  43229f:	add    BYTE PTR [rdx+rax*2],al
  4322a2:	add    BYTE PTR [rax],al
  4322a4:	add    DWORD PTR [rax],eax
  4322a6:	add    BYTE PTR [rax],al
  4322a8:	add    DWORD PTR [rax],eax
  4322aa:	add    BYTE PTR [rax],al
  4322ac:	add    DWORD PTR [rbx],ecx
  4322ae:	(bad)  
  4322af:	add    BYTE PTR [rbx],cl
  4322b1:	add    DWORD PTR [rcx],edx
  4322b3:	add    BYTE PTR [rax+rsi*1],al
  4322b6:	add    esp,DWORD PTR [rax+0x2]
  4322b9:	jo     0x4322bc
  4322bb:	push   rax
  4322bc:	add    DWORD PTR [rdi],eax
  4322be:	add    al,0x0
  4322c0:	(bad)  
  4322c1:	xor    al,BYTE PTR [rbx]
  4322c3:	xor    BYTE PTR [rdx],al
  4322c5:	(bad)  
  4322c6:	add    DWORD PTR [rax+0x1],esi
  4322c9:	or     eax,0x10d0007
  4322ce:	adc    al,BYTE PTR [rax]
  4322d0:	(bad)  
  4322d1:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b32737
  4322d7:	push   rax
  4322d8:	add    al,al
  4322da:	add    BYTE PTR [rax],al
  4322dc:	add    DWORD PTR [rdi],eax
  4322de:	add    al,0x0
  4322e0:	(bad)  
  4322e1:	xor    al,BYTE PTR [rbx]
  4322e3:	xor    BYTE PTR [rdx],al
  4322e5:	(bad)  
  4322e6:	add    DWORD PTR [rax+0x1],esi
  4322e9:	or     al,0x7
  4322eb:	add    BYTE PTR [rdx+rax*2],cl
  4322ee:	or     BYTE PTR [rax],dh
  4322f0:	(bad)  
  4322f1:	(bad)  
  4322f2:	(bad)  
  4322f3:	jo     0x4322fa
  4322f5:	push   rax
  4322f6:	add    al,0xc0
  4322f8:	add    dl,al
  4322fa:	add    BYTE PTR [rax],al
  4322fc:	add    DWORD PTR [rbx],edx
  4322fe:	or     al,BYTE PTR [rax]
  432300:	adc    eax,DWORD PTR [rcx]
  432302:	(bad)  
  432303:	add    BYTE PTR [rax+rsi*1],cl
  432306:	or     esp,DWORD PTR [rax+0xa]
  432309:	jo     0x432314
  43230b:	push   rax
  43230c:	or     al,al
  43230e:	(bad)  
  43230f:	rol    BYTE PTR [rax+riz*8],1
  432312:	add    dh,al
  432314:	add    DWORD PTR [rcx+rax*1],eax
  432317:	add    BYTE PTR [rdx+rax*4],al
  43231a:	add    BYTE PTR [rax],al
  43231c:	add    DWORD PTR [rcx+rax*1],eax
  43231f:	add    BYTE PTR [rdx+rax*4],al
  432322:	add    BYTE PTR [rax],al
  432324:	add    DWORD PTR [rsi],eax
  432326:	add    eax,DWORD PTR [rax]
  432328:	(bad)  
  432329:	(bad)  
  43232b:	xor    BYTE PTR [rcx],al
  43232d:	(bad)  
  43232e:	add    BYTE PTR [rax],al
  432330:	add    DWORD PTR [rbx],ebx
  432332:	or     al,0x0
  432334:	sbb    ebp,DWORD PTR [rax+0x30]
  432337:	add    BYTE PTR [rbx],dl
  432339:	add    DWORD PTR [rbx+0x0],esp
  43233c:	or     al,0x30
  43233e:	or     esp,DWORD PTR [rax+0xa]
  432341:	jo     0x43234c
  432343:	push   rax
  432344:	or     al,al
  432346:	(bad)  
  432347:	rol    BYTE PTR [rax+riz*8],1
  43234a:	add    dh,al
  43234c:	add    DWORD PTR [rax],ecx
  43234e:	add    eax,0x4420800
  432353:	xor    BYTE PTR [rbx],al
  432355:	(bad)  
  432356:	add    dh,BYTE PTR [rax+0x1]
  432359:	push   rax
  43235a:	add    BYTE PTR [rax],al
  43235c:	add    DWORD PTR [rdi],eax
  43235e:	add    al,0x0
  432360:	(bad)  
  432361:	xor    al,BYTE PTR [rbx]
  432363:	xor    BYTE PTR [rdx],al
  432365:	(bad)  
  432366:	add    DWORD PTR [rax+0x1],esi
  432369:	(bad)  
  43236a:	add    eax,DWORD PTR [rax]
  43236c:	(bad)  
  43236d:	rex.X add sil,BYTE PTR [rax]
  432370:	add    DWORD PTR [rax+0x0],esp
  432373:	add    BYTE PTR [rcx],al
  432375:	add    al,BYTE PTR [rdx]
  432377:	add    BYTE PTR [rdx],al
  432379:	(bad)  
  43237a:	add    DWORD PTR [rax+0x1],esi
  43237d:	or     al,BYTE PTR [rsi]
  43237f:	add    BYTE PTR [rdx],cl
  432381:	xor    al,BYTE PTR [rsi]
  432383:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b327e9
  432389:	push   rax
  43238a:	add    al,al
  43238c:	add    DWORD PTR [rdi],eax
  43238e:	add    al,0x0
  432390:	(bad)  
  432391:	push   rdx
  432392:	add    esi,DWORD PTR [rax]
  432394:	add    ah,BYTE PTR [rax+0x1]
  432397:	jo     0x43239a
  432399:	adc    ecx,DWORD PTR [rdx]
  43239b:	add    BYTE PTR [rbx],dl
  43239d:	add    DWORD PTR [rdi+0x0],eax
  4323a0:	or     al,0x30
  4323a2:	or     esp,DWORD PTR [rax+0xa]
  4323a5:	jo     0x4323b0
  4323a7:	push   rax
  4323a8:	or     al,al
  4323aa:	(bad)  
  4323ab:	rol    BYTE PTR [rax+riz*8],1
  4323ae:	add    dh,al
  4323b0:	add    DWORD PTR [rax],ecx
  4323b2:	add    eax,0x4620800
  4323b7:	xor    BYTE PTR [rbx],al
  4323b9:	(bad)  
  4323ba:	add    dh,BYTE PTR [rax+0x1]
  4323bd:	push   rax
  4323be:	add    BYTE PTR [rax],al
  4323c0:	add    DWORD PTR [rsi+rax*1],ecx
  4323c3:	add    BYTE PTR [rax+rbp*2],cl
  4323c6:	add    eax,DWORD PTR [rax]
  4323c8:	(bad)  
  4323c9:	jb     0x4323ce
  4323cb:	xor    BYTE PTR [rdx],al
  4323cd:	(bad)  
  4323ce:	add    DWORD PTR [rax+0x1],esi
  4323d1:	add    eax,0x32050002
  4323d6:	add    DWORD PTR [rax],esi
  4323d8:	add    DWORD PTR [rcx],edx
  4323da:	or     DWORD PTR [rax],eax
  4323dc:	adc    DWORD PTR [rcx],eax
  4323de:	and    al,0x0
  4323e0:	or     dh,BYTE PTR [rax]
  4323e2:	or     DWORD PTR [rax+0x8],esp
  4323e5:	jo     0x4323ee
  4323e7:	push   rax
  4323e8:	(bad)  
  4323e9:	rol    BYTE PTR [rax+rdx*8],0x2
  4323ed:	loopne 0x4323ef
  4323ef:	add    BYTE PTR [rcx],al
  4323f1:	or     al,0x7
  4323f3:	add    BYTE PTR [rdx+rax*2],cl
  4323f6:	or     BYTE PTR [rax],dh
  4323f8:	(bad)  
  4323f9:	(bad)  
  4323fa:	(bad)  
  4323fb:	jo     0x432402
  4323fd:	push   rax
  4323fe:	add    al,0xc0
  432400:	add    dl,al
  432402:	add    BYTE PTR [rax],al
  432404:	add    DWORD PTR [rax],eax
  432406:	add    BYTE PTR [rax],al
  432408:	add    DWORD PTR [rax],eax
  43240a:	add    BYTE PTR [rax],al
  43240c:	add    DWORD PTR [rip+0x32050002],eax        # 0x32482414
  432412:	add    DWORD PTR [rax],esi
  432414:	add    DWORD PTR [rax],eax
  432416:	add    BYTE PTR [rax],al
  432418:	add    DWORD PTR [rip+0x32050002],eax        # 0x32482420
  43241e:	add    DWORD PTR [rax],esi
  432420:	add    DWORD PTR [rax],edx
  432422:	or     DWORD PTR [rax],eax
  432424:	adc    BYTE PTR [rdx+0xc],al
  432427:	xor    BYTE PTR [rbx],cl
  432429:	(bad)  
  43242a:	or     dh,BYTE PTR [rax+0x9]
  43242d:	push   rax
  43242e:	or     al,al
  432430:	(bad)  
  432431:	rol    BYTE PTR [rax+riz*8],1
  432434:	add    dh,al
  432436:	add    BYTE PTR [rax],al
  432438:	add    DWORD PTR [rdi],eax
  43243a:	add    al,0x0
  43243c:	(bad)  
  43243d:	xor    al,BYTE PTR [rbx]
  43243f:	xor    BYTE PTR [rdx],al
  432441:	(bad)  
  432442:	add    DWORD PTR [rax+0x1],esi
  432445:	(bad)  
  432446:	add    eax,DWORD PTR [rax]
  432448:	(bad)  
  432449:	(bad)  
  43244b:	xor    BYTE PTR [rcx],al
  43244d:	(bad)  
  43244e:	add    BYTE PTR [rax],al
  432450:	add    DWORD PTR [rip+0x32050002],eax        # 0x32482458
  432456:	add    DWORD PTR [rax],esi
  432458:	add    DWORD PTR [rax],ecx
  43245a:	add    eax,0x4420800
  43245f:	xor    BYTE PTR [rbx],al
  432461:	(bad)  
  432462:	add    dh,BYTE PTR [rax+0x1]
  432465:	push   rax
  432466:	add    BYTE PTR [rax],al
  432468:	add    DWORD PTR [rdi],eax
  43246a:	add    al,0x0
  43246c:	(bad)  
  43246d:	xor    al,BYTE PTR [rbx]
  43246f:	xor    BYTE PTR [rdx],al
  432471:	(bad)  
  432472:	add    DWORD PTR [rax+0x1],esi
  432475:	(bad)  
  432476:	add    al,0x0
  432478:	(bad)  
  432479:	xor    al,BYTE PTR [rbx]
  43247b:	xor    BYTE PTR [rdx],al
  43247d:	(bad)  
  43247e:	add    DWORD PTR [rax+0x1],esi
  432481:	(bad)  
  432482:	add    al,0x0
  432484:	(bad)  
  432485:	xor    al,BYTE PTR [rbx]
  432487:	xor    BYTE PTR [rdx],al
  432489:	(bad)  
  43248a:	add    DWORD PTR [rax+0x1],esi
  43248d:	sbb    DWORD PTR [rdx],ecx
  43248f:	add    BYTE PTR [rcx],bl
  432491:	add    DWORD PTR [rbp+0x2],ecx
  432494:	adc    DWORD PTR [rax],esi
  432496:	adc    BYTE PTR [rax+0xf],ah
  432499:	jo     0x4324a9
  43249b:	push   rax
  43249c:	or     eax,0x4d00bc0
  4324a1:	loopne 0x4324a5
  4324a3:	lock add DWORD PTR [rax],eax
  4324a6:	add    BYTE PTR [rax],al
  4324a8:	add    DWORD PTR [rax],eax
  4324aa:	add    BYTE PTR [rax],al
  4324ac:	add    DWORD PTR [rax],eax
  4324ae:	add    BYTE PTR [rax],al
  4324b0:	add    DWORD PTR [rax],eax
  4324b2:	add    BYTE PTR [rax],al
  4324b4:	add    DWORD PTR [rax],eax
  4324b6:	add    BYTE PTR [rax],al
  4324b8:	add    DWORD PTR [rax],eax
  4324ba:	add    BYTE PTR [rax],al
  4324bc:	add    DWORD PTR [rax],eax
  4324be:	add    BYTE PTR [rax],al
  4324c0:	add    DWORD PTR [rax],eax
  4324c2:	add    BYTE PTR [rax],al
  4324c4:	add    DWORD PTR [rax],eax
  4324c6:	add    BYTE PTR [rax],al
  4324c8:	add    DWORD PTR [rax],eax
  4324ca:	add    BYTE PTR [rax],al
  4324cc:	add    DWORD PTR [rax],eax
  4324ce:	add    BYTE PTR [rax],al
  4324d0:	add    DWORD PTR [rax],eax
  4324d2:	add    BYTE PTR [rax],al
  4324d4:	add    DWORD PTR [rax],eax
  4324d6:	add    BYTE PTR [rax],al
  4324d8:	add    DWORD PTR [rax],eax
  4324da:	add    BYTE PTR [rax],al
  4324dc:	add    DWORD PTR [rax],eax
  4324de:	add    BYTE PTR [rax],al
  4324e0:	add    DWORD PTR [rax],eax
  4324e2:	add    BYTE PTR [rax],al
  4324e4:	add    DWORD PTR [rax],eax
  4324e6:	add    BYTE PTR [rax],al
  4324e8:	add    DWORD PTR [rax],eax
  4324ea:	add    BYTE PTR [rax],al
  4324ec:	add    DWORD PTR [rax],eax
  4324ee:	add    BYTE PTR [rax],al
  4324f0:	add    DWORD PTR [rax],eax
  4324f2:	add    BYTE PTR [rax],al
  4324f4:	add    DWORD PTR [rsi],ecx
  4324f6:	or     BYTE PTR [rax],al
  4324f8:	(bad)  
  4324f9:	xor    cl,BYTE PTR [rdx]
  4324fb:	xor    BYTE PTR [rcx],cl
  4324fd:	(bad)  
  4324fe:	or     BYTE PTR [rax+0x7],dh
  432501:	push   rax
  432502:	(bad)  
  432503:	rol    BYTE PTR [rax+rdx*8],0x2
  432507:	loopne 0x43250a
  432509:	or     BYTE PTR [rip+0x4420800],al        # 0x4852d0f
  43250f:	xor    BYTE PTR [rbx],al
  432511:	(bad)  
  432512:	add    dh,BYTE PTR [rax+0x1]
  432515:	push   rax
  432516:	add    BYTE PTR [rax],al
  432518:	add    DWORD PTR [rdi],ecx
  43251a:	or     BYTE PTR [rax],al
  43251c:	lgdt   [rcx]
  43251f:	add    BYTE PTR [rax],cl
  432521:	xor    BYTE PTR [rdi],al
  432523:	(bad)  
  432524:	(bad)  
  432525:	jo     0x43252c
  432527:	push   rax
  432528:	add    al,0xc0
  43252a:	add    dl,al
  43252c:	add    DWORD PTR [rdi],ecx
  43252e:	or     BYTE PTR [rax],al
  432530:	lgdt   [rcx]
  432533:	add    BYTE PTR [rax],cl
  432535:	xor    BYTE PTR [rdi],al
  432537:	(bad)  
  432538:	(bad)  
  432539:	jo     0x432540
  43253b:	push   rax
  43253c:	add    al,0xc0
  43253e:	add    dl,al
  432540:	add    DWORD PTR [rax],edx
  432542:	or     DWORD PTR [rax],eax
  432544:	adc    BYTE PTR [rdx+0xc],ah
  432547:	xor    BYTE PTR [rbx],cl
  432549:	(bad)  
  43254a:	or     dh,BYTE PTR [rax+0x9]
  43254d:	push   rax
  43254e:	or     al,al
  432550:	(bad)  
  432551:	rol    BYTE PTR [rax+riz*8],1
  432554:	add    dh,al
  432556:	add    BYTE PTR [rax],al
  432558:	add    DWORD PTR [rbx],ecx
  43255a:	(bad)  
  43255b:	add    BYTE PTR [rbx],cl
  43255d:	jb     0x432566
  43255f:	(bad)  
  432560:	(bad)  
  432561:	jo     0x432568
  432563:	push   rax
  432564:	add    al,0xc0
  432566:	add    dl,al
  432568:	add    DWORD PTR [rbx],edx
  43256a:	or     al,BYTE PTR [rax]
  43256c:	adc    eax,DWORD PTR [rcx]
  43256e:	sub    DWORD PTR [rax],eax
  432570:	or     al,0x30
  432572:	or     esp,DWORD PTR [rax+0xa]
  432575:	jo     0x432580
  432577:	push   rax
  432578:	or     al,al
  43257a:	(bad)  
  43257b:	rol    BYTE PTR [rax+riz*8],1
  43257e:	add    dh,al
  432580:	add    DWORD PTR [rax],eax
  432582:	add    BYTE PTR [rax],al
  432584:	add    DWORD PTR [rdx],ecx
  432586:	(bad)  
  432587:	add    BYTE PTR [rdx],cl
  432589:	xor    al,BYTE PTR [rsi]
  43258b:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b329f1
  432591:	push   rax
  432592:	add    al,al
  432594:	add    DWORD PTR [rbx],edx
  432596:	or     al,BYTE PTR [rax]
  432598:	adc    eax,DWORD PTR [rcx]
  43259a:	(bad)  
  43259b:	add    BYTE PTR [rax+rsi*1],cl
  43259e:	or     esp,DWORD PTR [rax+0xa]
  4325a1:	jo     0x4325ac
  4325a3:	push   rax
  4325a4:	or     al,al
  4325a6:	(bad)  
  4325a7:	rol    BYTE PTR [rax+riz*8],1
  4325aa:	add    dh,al
  4325ac:	add    DWORD PTR [rax],edx
  4325ae:	or     DWORD PTR [rax],eax
  4325b0:	adc    BYTE PTR [rdx+0xc],ah
  4325b3:	xor    BYTE PTR [rbx],cl
  4325b5:	(bad)  
  4325b6:	or     dh,BYTE PTR [rax+0x9]
  4325b9:	push   rax
  4325ba:	or     al,al
  4325bc:	(bad)  
  4325bd:	rol    BYTE PTR [rax+riz*8],1
  4325c0:	add    dh,al
  4325c2:	add    BYTE PTR [rax],al
  4325c4:	add    DWORD PTR [rax],edx
  4325c6:	or     DWORD PTR [rax],eax
  4325c8:	adc    dl,ah
  4325ca:	or     al,0x30
  4325cc:	or     esp,DWORD PTR [rax+0xa]
  4325cf:	jo     0x4325da
  4325d1:	push   rax
  4325d2:	or     al,al
  4325d4:	(bad)  
  4325d5:	rol    BYTE PTR [rax+riz*8],1
  4325d8:	add    dh,al
  4325da:	add    BYTE PTR [rax],al
  4325dc:	add    DWORD PTR [rcx+rax*1],eax
  4325df:	add    BYTE PTR [rdx+rax*2],al
  4325e2:	add    BYTE PTR [rax],al
  4325e4:	add    DWORD PTR [rax],eax
  4325e6:	add    BYTE PTR [rax],al
  4325e8:	add    DWORD PTR [rax],eax
  4325ea:	add    BYTE PTR [rax],al
  4325ec:	add    DWORD PTR [rax],eax
  4325ee:	add    BYTE PTR [rax],al
  4325f0:	add    DWORD PTR [rax],edx
  4325f2:	or     DWORD PTR [rax],eax
  4325f4:	adc    dl,al
  4325f6:	or     al,0x30
  4325f8:	or     esp,DWORD PTR [rax+0xa]
  4325fb:	jo     0x432606
  4325fd:	push   rax
  4325fe:	or     al,al
  432600:	(bad)  
  432601:	rol    BYTE PTR [rax+riz*8],1
  432604:	add    dh,al
  432606:	add    BYTE PTR [rax],al
  432608:	add    DWORD PTR [rax],eax
  43260a:	add    BYTE PTR [rax],al
  43260c:	add    DWORD PTR [rcx+rax*1],eax
  43260f:	add    BYTE PTR [rdx+riz*2],al
  432612:	add    BYTE PTR [rax],al
  432614:	add    DWORD PTR [rax],eax
  432616:	add    BYTE PTR [rax],al
  432618:	add    DWORD PTR [rax],eax
  43261a:	add    BYTE PTR [rax],al
  43261c:	add    DWORD PTR [rax],eax
  43261e:	add    BYTE PTR [rax],al
  432620:	add    DWORD PTR [rax],eax
  432622:	add    BYTE PTR [rax],al
  432624:	add    DWORD PTR [rax],eax
  432626:	add    BYTE PTR [rax],al
  432628:	add    DWORD PTR [rax],eax
  43262a:	add    BYTE PTR [rax],al
  43262c:	add    DWORD PTR [rax],eax
  43262e:	add    BYTE PTR [rax],al
  432630:	add    DWORD PTR [rax],eax
  432632:	add    BYTE PTR [rax],al
  432634:	add    DWORD PTR [rax],eax
  432636:	add    BYTE PTR [rax],al
  432638:	add    DWORD PTR [rax],eax
  43263a:	add    BYTE PTR [rax],al
  43263c:	add    DWORD PTR [rax],eax
  43263e:	add    BYTE PTR [rax],al
  432640:	add    DWORD PTR [rax],eax
  432642:	add    BYTE PTR [rax],al
  432644:	add    DWORD PTR [rax],eax
  432646:	add    BYTE PTR [rax],al
  432648:	add    DWORD PTR [rax],eax
  43264a:	add    BYTE PTR [rax],al
  43264c:	add    DWORD PTR [rax],eax
  43264e:	add    BYTE PTR [rax],al
  432650:	add    DWORD PTR [rax],eax
  432652:	add    BYTE PTR [rax],al
  432654:	add    DWORD PTR [rax],eax
  432656:	add    BYTE PTR [rax],al
  432658:	add    DWORD PTR [rax],eax
  43265a:	add    BYTE PTR [rax],al
  43265c:	add    DWORD PTR [rax],eax
  43265e:	add    BYTE PTR [rax],al
  432660:	add    DWORD PTR [rcx+rax*1],eax
  432663:	add    BYTE PTR [rdx+rax*2],al
  432666:	add    BYTE PTR [rax],al
  432668:	add    DWORD PTR [rcx+rax*1],eax
  43266b:	add    BYTE PTR [rdx+rax*2],al
  43266e:	add    BYTE PTR [rax],al
  432670:	add    DWORD PTR [rip+0x52050002],eax        # 0x52482678
  432676:	add    DWORD PTR [rax],esi
  432678:	add    DWORD PTR [rcx+rax*1],eax
  43267b:	add    BYTE PTR [rdx+rax*2],al
  43267e:	add    BYTE PTR [rax],al
  432680:	add    DWORD PTR [rcx+rax*1],eax
  432683:	add    BYTE PTR [rdx+rax*2],al
  432686:	add    BYTE PTR [rax],al
  432688:	add    DWORD PTR [rsi],eax
  43268a:	add    eax,DWORD PTR [rax]
  43268c:	(bad)  
  43268d:	rex.X add sil,BYTE PTR [rax]
  432690:	add    DWORD PTR [rax+0x0],esp
  432693:	add    BYTE PTR [rcx],al
  432695:	add    BYTE PTR [rax],al
  432697:	add    BYTE PTR [rcx],al
  432699:	add    BYTE PTR [rax],al
  43269b:	add    BYTE PTR [rcx],al
  43269d:	add    BYTE PTR [rax],al
  43269f:	add    BYTE PTR [rcx],al
  4326a1:	or     al,BYTE PTR [rsi]
  4326a3:	add    BYTE PTR [rdx],cl
  4326a5:	jb     0x4326ad
  4326a7:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b32b0d
  4326ad:	push   rax
  4326ae:	add    al,al
  4326b0:	add    DWORD PTR [rdx],ecx
  4326b2:	add    eax,0x6d20a05
  4326b7:	add    eax,DWORD PTR [rbx]
  4326b9:	xor    BYTE PTR [rdx],al
  4326bb:	(bad)  
  4326bc:	add    DWORD PTR [rax+0x0],edx
  4326bf:	add    BYTE PTR [rcx],al
  4326c1:	add    al,0x1
  4326c3:	add    BYTE PTR [rdx+rax*2],al
  4326c6:	add    BYTE PTR [rax],al
  4326c8:	add    DWORD PTR [rsi],eax
  4326ca:	add    eax,DWORD PTR [rax]
  4326cc:	(bad)  
  4326cd:	rex.X add sil,BYTE PTR [rax]
  4326d0:	add    DWORD PTR [rax+0x0],esp
  4326d3:	add    BYTE PTR [rcx],al
  4326d5:	add    BYTE PTR [rax],al
  4326d7:	add    BYTE PTR [rcx],al
  4326d9:	add    al,0x1
  4326db:	add    BYTE PTR [rdx+riz*4],al
  4326de:	add    BYTE PTR [rax],al
  4326e0:	add    DWORD PTR [rax],eax
  4326e2:	add    BYTE PTR [rax],al
  4326e4:	add    DWORD PTR [rsi],edx
  4326e6:	or     DWORD PTR [rax],eax
  4326e8:	(bad)  
  4326e9:	mov    BYTE PTR [rsi],al
  4326eb:	add    BYTE PTR [rax],dl
  4326ed:	js     0x4326f4
  4326ef:	add    BYTE PTR [rbx],cl
  4326f1:	push   0xffffffffe2060004
  4326f6:	add    dh,BYTE PTR [rax]
  4326f8:	add    DWORD PTR [rax+0x0],esp
  4326fb:	add    BYTE PTR [rcx],al
  4326fd:	add    BYTE PTR [rax],al
  4326ff:	add    BYTE PTR [rcx],al
  432701:	add    BYTE PTR [rax],al
  432703:	add    BYTE PTR [rcx],al
  432705:	add    BYTE PTR [rax],al
  432707:	add    BYTE PTR [rcx],al
  432709:	(bad)  
  43270a:	add    eax,DWORD PTR [rax]
  43270c:	(bad)  
  43270d:	(bad)  
  43270f:	xor    BYTE PTR [rcx],al
  432711:	(bad)  
  432712:	add    BYTE PTR [rax],al
  432714:	add    DWORD PTR [rdi+rax*1],ecx
  432717:	add    BYTE PTR [rdx+riz*4],cl
  43271a:	or     BYTE PTR [rax],dh
  43271c:	(bad)  
  43271d:	(bad)  
  43271e:	(bad)  
  43271f:	jo     0x432726
  432721:	push   rax
  432722:	add    al,0xc0
  432724:	add    dl,al
  432726:	add    BYTE PTR [rax],al
  432728:	add    DWORD PTR [rcx],edx
  43272a:	or     DWORD PTR [rip+0x30db211],eax        # 0x350d941
  432730:	or     dh,BYTE PTR [rax]
  432732:	or     DWORD PTR [rax+0x8],esp
  432735:	jo     0x43273e
  432737:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x2232b0e
  43273e:	add    BYTE PTR [rax],al
  432740:	add    DWORD PTR [rcx+rax*1],eax
  432743:	add    BYTE PTR [rdx+rax*2],al
  432746:	add    BYTE PTR [rax],al
  432748:	add    DWORD PTR [rdx],ecx
  43274a:	(bad)  
  43274b:	add    BYTE PTR [rdx],cl
  43274d:	xor    al,BYTE PTR [rsi]
  43274f:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b32bb5
  432755:	push   rax
  432756:	add    al,al
  432758:	add    DWORD PTR [rip+0x32050002],eax        # 0x32482760
  43275e:	add    DWORD PTR [rax],esi
  432760:	add    DWORD PTR [rax],ecx
  432762:	add    eax,0x4420800
  432767:	xor    BYTE PTR [rbx],al
  432769:	(bad)  
  43276a:	add    dh,BYTE PTR [rax+0x1]
  43276d:	push   rax
  43276e:	add    BYTE PTR [rax],al
  432770:	add    DWORD PTR [rdi],eax
  432772:	add    al,0x0
  432774:	(bad)  
  432775:	xor    al,BYTE PTR [rbx]
  432777:	xor    BYTE PTR [rdx],al
  432779:	(bad)  
  43277a:	add    DWORD PTR [rax+0x1],esi
  43277d:	add    eax,0x32050002
  432782:	add    DWORD PTR [rax],esi
  432784:	add    DWORD PTR [rip+0x32050002],eax        # 0x3248278c
  43278a:	add    DWORD PTR [rax],esi
  43278c:	add    DWORD PTR [rax],eax
  43278e:	add    BYTE PTR [rax],al
  432790:	add    DWORD PTR [rax],eax
  432792:	add    BYTE PTR [rax],al
  432794:	add    DWORD PTR [rax],eax
  432796:	add    BYTE PTR [rax],al
  432798:	add    DWORD PTR [rdi],eax
  43279a:	add    al,0x0
  43279c:	(bad)  
  43279d:	xor    al,BYTE PTR [rbx]
  43279f:	xor    BYTE PTR [rdx],al
  4327a1:	(bad)  
  4327a2:	add    DWORD PTR [rax+0x1],esi
  4327a5:	(bad)  
  4327a6:	add    eax,DWORD PTR [rax]
  4327a8:	(bad)  
  4327a9:	rex.X add sil,BYTE PTR [rax]
  4327ac:	add    DWORD PTR [rax+0x0],esp
  4327af:	add    BYTE PTR [rcx],al
  4327b1:	add    eax,0x32050002
  4327b6:	add    DWORD PTR [rax],esi
  4327b8:	add    DWORD PTR [rdi],eax
  4327ba:	add    al,0x0
  4327bc:	(bad)  
  4327bd:	xor    al,BYTE PTR [rbx]
  4327bf:	xor    BYTE PTR [rdx],al
  4327c1:	(bad)  
  4327c2:	add    DWORD PTR [rax+0x1],esi
  4327c5:	(bad)  
  4327c6:	add    eax,DWORD PTR [rax]
  4327c8:	(bad)  
  4327c9:	rex.X add sil,BYTE PTR [rax]
  4327cc:	add    DWORD PTR [rax+0x0],esp
  4327cf:	add    BYTE PTR [rcx],al
  4327d1:	(bad)  
  4327d2:	add    eax,DWORD PTR [rax]
  4327d4:	(bad)  
  4327d5:	rex.X add sil,BYTE PTR [rax]
  4327d8:	add    DWORD PTR [rax+0x0],esp
  4327db:	add    BYTE PTR [rcx],al
  4327dd:	or     BYTE PTR [rip+0x4420800],al        # 0x4852fe3
  4327e3:	xor    BYTE PTR [rbx],al
  4327e5:	(bad)  
  4327e6:	add    dh,BYTE PTR [rax+0x1]
  4327e9:	push   rax
  4327ea:	add    BYTE PTR [rax],al
  4327ec:	add    DWORD PTR [rip+0xffffffffb2050002],eax        # 0xffffffffb24827f4
  4327f2:	add    DWORD PTR [rax],esi
  4327f4:	add    DWORD PTR [rax+rcx*1],edx
  4327f7:	test   DWORD PTR [rbx+rax*1],edx
  4327fa:	or     al,0x42
  4327fc:	or     BYTE PTR [rax],dh
  4327fe:	(bad)  
  4327ff:	(bad)  
  432800:	(bad)  
  432801:	jo     0x432808
  432803:	rol    BYTE PTR [rbx],0xd0
  432806:	add    DWORD PTR [rax+0x1],edx
  432809:	adc    BYTE PTR [rcx],cl
  43280b:	add    BYTE PTR [rax],dl
  43280d:	rex.X or al,0x30
  432810:	or     esp,DWORD PTR [rax+0xa]
  432813:	jo     0x43281e
  432815:	push   rax
  432816:	or     al,al
  432818:	(bad)  
  432819:	rol    BYTE PTR [rax+riz*8],1
  43281c:	add    dh,al
  43281e:	add    BYTE PTR [rax],al
  432820:	add    DWORD PTR [rbx],edx
  432822:	or     al,BYTE PTR [rax]
  432824:	adc    eax,DWORD PTR [rcx]
  432826:	sbb    eax,DWORD PTR [rax]
  432828:	or     al,0x30
  43282a:	or     esp,DWORD PTR [rax+0xa]
  43282d:	jo     0x432838
  43282f:	push   rax
  432830:	or     al,al
  432832:	(bad)  
  432833:	rol    BYTE PTR [rax+riz*8],1
  432836:	add    dh,al
  432838:	add    DWORD PTR [rsi],eax
  43283a:	add    eax,DWORD PTR [rax]
  43283c:	(bad)  
  43283d:	rex.X add sil,BYTE PTR [rax]
  432840:	add    DWORD PTR [rax+0x0],esp
  432843:	add    BYTE PTR [rcx],al
  432845:	adc    BYTE PTR [rcx],cl
  432847:	add    BYTE PTR [rax],dl
  432849:	(bad)  
  43284a:	or     al,0x30
  43284c:	or     esp,DWORD PTR [rax+0xa]
  43284f:	jo     0x43285a
  432851:	push   rax
  432852:	or     al,al
  432854:	(bad)  
  432855:	rol    BYTE PTR [rax+riz*8],1
  432858:	add    dh,al
  43285a:	add    BYTE PTR [rax],al
  43285c:	add    DWORD PTR [rax],eax
  43285e:	add    BYTE PTR [rax],al
  432860:	add    DWORD PTR [rip+0x52050002],eax        # 0x52482868
  432866:	add    DWORD PTR [rax],esi
  432868:	add    DWORD PTR [rdi+0x16],eax
  43286b:	add    BYTE PTR [rdi-0x48],al
  43286e:	adc    al,BYTE PTR [rax]
  432870:	ds test al,0x11
  432873:	add    BYTE PTR [rip+0x2c001098],dh        # 0x2c433911
  432879:	mov    BYTE PTR [rdi],cl
  43287b:	add    BYTE PTR [rbx],ah
  43287d:	js     0x43288d
  43287f:	add    BYTE PTR [rbx],bl
  432881:	push   0x113000d
  432886:	(bad)  
  432887:	add    BYTE PTR [rax+rsi*1],cl
  43288a:	or     esp,DWORD PTR [rax+0xa]
  43288d:	jo     0x432898
  43288f:	push   rax
  432890:	or     al,al
  432892:	(bad)  
  432893:	rol    BYTE PTR [rax+riz*8],1
  432896:	add    dh,al
  432898:	add    DWORD PTR [rdi+rax*1],ecx
  43289b:	add    BYTE PTR [rdx+rax*2],cl
  43289e:	or     BYTE PTR [rax],dh
  4328a0:	(bad)  
  4328a1:	(bad)  
  4328a2:	(bad)  
  4328a3:	jo     0x4328aa
  4328a5:	push   rax
  4328a6:	add    al,0xc0
  4328a8:	add    dl,al
  4328aa:	add    BYTE PTR [rax],al
  4328ac:	add    DWORD PTR [rip+0x32050002],eax        # 0x324828b4
  4328b2:	add    DWORD PTR [rax],esi
  4328b4:	add    DWORD PTR [rip+0x32050002],eax        # 0x324828bc
  4328ba:	add    DWORD PTR [rax],esi
  4328bc:	add    DWORD PTR [rax],edx
  4328be:	or     DWORD PTR [rax],eax
  4328c0:	adc    BYTE PTR [rdx+0xc],al
  4328c3:	xor    BYTE PTR [rbx],cl
  4328c5:	(bad)  
  4328c6:	or     dh,BYTE PTR [rax+0x9]
  4328c9:	push   rax
  4328ca:	or     al,al
  4328cc:	(bad)  
  4328cd:	rol    BYTE PTR [rax+riz*8],1
  4328d0:	add    dh,al
  4328d2:	add    BYTE PTR [rax],al
  4328d4:	add    DWORD PTR [rsp+rax*1],eax
  4328d7:	add    BYTE PTR [rax+rsi*1],al
  4328da:	add    esp,DWORD PTR [rax+0x2]
  4328dd:	jo     0x4328e0
  4328df:	push   rax
  4328e0:	add    DWORD PTR [rax],eax
  4328e2:	add    BYTE PTR [rax],al
  4328e4:	add    DWORD PTR [rax],eax
  4328e6:	add    BYTE PTR [rax],al
  4328e8:	add    DWORD PTR [rax],edx
  4328ea:	or     DWORD PTR [rax],eax
  4328ec:	adc    BYTE PTR [rdx+0x600b300c],al
  4328f2:	or     dh,BYTE PTR [rax+0x9]
  4328f5:	push   rax
  4328f6:	or     al,al
  4328f8:	(bad)  
  4328f9:	rol    BYTE PTR [rax+riz*8],1
  4328fc:	add    dh,al
  4328fe:	add    BYTE PTR [rax],al
  432900:	add    DWORD PTR [rsi],eax
  432902:	add    eax,DWORD PTR [rax]
  432904:	(bad)  
  432905:	rex.X add sil,BYTE PTR [rax]
  432908:	add    DWORD PTR [rax+0x0],esp
  43290b:	add    BYTE PTR [rcx],al
  43290d:	add    eax,0x32050002
  432912:	add    DWORD PTR [rax],esi
  432914:	add    DWORD PTR [rdi],eax
  432916:	add    al,0x0
  432918:	(bad)  
  432919:	xor    al,BYTE PTR [rbx]
  43291b:	xor    BYTE PTR [rdx],al
  43291d:	(bad)  
  43291e:	add    DWORD PTR [rax+0x1],esi
  432921:	add    eax,0x32050002
  432926:	add    DWORD PTR [rax],esi
  432928:	add    DWORD PTR [rax],ecx
  43292a:	add    eax,0x4420800
  43292f:	xor    BYTE PTR [rbx],al
  432931:	(bad)  
  432932:	add    dh,BYTE PTR [rax+0x1]
  432935:	push   rax
  432936:	add    BYTE PTR [rax],al
  432938:	add    DWORD PTR [rip+0x32050002],eax        # 0x32482940
  43293e:	add    DWORD PTR [rax],esi
  432940:	add    DWORD PTR [rsi],ecx
  432942:	or     BYTE PTR [rax],al
  432944:	(bad)  
  432945:	xor    cl,BYTE PTR [rdx]
  432947:	xor    BYTE PTR [rcx],cl
  432949:	(bad)  
  43294a:	or     BYTE PTR [rax+0x7],dh
  43294d:	push   rax
  43294e:	(bad)  
  43294f:	rol    BYTE PTR [rax+rdx*8],0x2
  432953:	loopne 0x432956
  432955:	or     BYTE PTR [rip+0x4420800],al        # 0x485315b
  43295b:	xor    BYTE PTR [rbx],al
  43295d:	(bad)  
  43295e:	add    dh,BYTE PTR [rax+0x1]
  432961:	push   rax
  432962:	add    BYTE PTR [rax],al
  432964:	add    DWORD PTR [rdi+rax*1],ecx
  432967:	add    BYTE PTR [rdx+rax*2],cl
  43296a:	or     BYTE PTR [rax],dh
  43296c:	(bad)  
  43296d:	(bad)  
  43296e:	(bad)  
  43296f:	jo     0x432976
  432971:	push   rax
  432972:	add    al,0xc0
  432974:	add    dl,al
  432976:	add    BYTE PTR [rax],al
  432978:	add    DWORD PTR [rax],eax
  43297a:	add    BYTE PTR [rax],al
  43297c:	add    DWORD PTR [rdi],eax
  43297e:	add    al,0x0
  432980:	(bad)  
  432981:	xor    al,BYTE PTR [rbx]
  432983:	xor    BYTE PTR [rdx],al
  432985:	(bad)  
  432986:	add    DWORD PTR [rax+0x1],esi
  432989:	(bad)  
  43298a:	add    eax,DWORD PTR [rax]
  43298c:	(bad)  
  43298d:	and    al,BYTE PTR [rdx]
  43298f:	xor    BYTE PTR [rcx],al
  432991:	(bad)  
  432992:	add    BYTE PTR [rax],al
  432994:	add    DWORD PTR [rdi],eax
  432996:	add    al,0x0
  432998:	(bad)  
  432999:	xor    al,BYTE PTR [rbx]
  43299b:	xor    BYTE PTR [rdx],al
  43299d:	(bad)  
  43299e:	add    DWORD PTR [rax+0x1],esi
  4329a1:	add    BYTE PTR [rax],al
  4329a3:	add    BYTE PTR [rcx],al
  4329a5:	or     al,0x7
  4329a7:	add    BYTE PTR [rdx+rax*2],cl
  4329aa:	or     BYTE PTR [rax],dh
  4329ac:	(bad)  
  4329ad:	(bad)  
  4329ae:	(bad)  
  4329af:	jo     0x4329b6
  4329b1:	push   rax
  4329b2:	add    al,0xc0
  4329b4:	add    dl,al
  4329b6:	add    BYTE PTR [rax],al
  4329b8:	add    DWORD PTR [rsi+rax*1],ecx
  4329bb:	add    BYTE PTR [rax+rbp*2],cl
  4329be:	add    al,0x0
  4329c0:	(bad)  
  4329c1:	xchg   edx,eax
  4329c2:	add    esi,DWORD PTR [rax]
  4329c4:	add    ah,BYTE PTR [rax+0x1]
  4329c7:	jo     0x4329ca
  4329c9:	add    BYTE PTR [rax],al
  4329cb:	add    BYTE PTR [rcx],al
  4329cd:	add    BYTE PTR [rax],al
  4329cf:	add    BYTE PTR [rcx],al
  4329d1:	add    BYTE PTR [rax],al
  4329d3:	add    BYTE PTR [rcx],al
  4329d5:	add    BYTE PTR [rax],al
  4329d7:	add    BYTE PTR [rcx],al
  4329d9:	add    BYTE PTR [rax],al
	...

Disassembly of section .bss:

0000000000433000 <.bss>:
	...

Disassembly of section .idata:

0000000000435000 <.idata>:
  435000:	js     0x435052
  435002:	add    eax,DWORD PTR [rax]
	...
  43500c:	test   al,0x63
  43500e:	add    eax,DWORD PTR [rax]
  435010:	push   0x60000355
  435015:	push   rcx
  435016:	add    eax,DWORD PTR [rax]
	...
  435020:	rex.WR
  435021:	add    eax,DWORD PTR fs:[rax]
  435024:	push   rax
  435025:	push   rsi
  435026:	add    eax,DWORD PTR [rax]
  435028:	nop
  435029:	push   rdx
  43502a:	add    eax,DWORD PTR [rax]
	...
  435034:	lods   al,BYTE PTR ds:[rsi]
  435035:	add    eax,DWORD PTR gs:[rax]
  435038:	adc    BYTE PTR [rdi+0x3],0x0
  43503c:	cmp    BYTE PTR [rbp+0x3],dl
	...
  435047:	add    BYTE PTR [rbp+riz*2+0x5a280003],bh
  43504e:	add    eax,DWORD PTR [rax]
  435050:	rex.W push rbp
  435052:	add    eax,DWORD PTR [rax]
	...
  43505c:	(bad)  
  43505d:	add    eax,DWORD PTR gs:[rax]
  435060:	cmp    BYTE PTR [rdx+0x3],bl
	...
  435077:	add    BYTE PTR [rax+0x5a],bl
  43507a:	add    eax,DWORD PTR [rax]
  43507c:	add    BYTE PTR [rax],al
  43507e:	add    BYTE PTR [rax],al
  435080:	ins    BYTE PTR es:[rdi],dx
  435081:	pop    rdx
  435082:	add    eax,DWORD PTR [rax]
  435084:	add    BYTE PTR [rax],al
  435086:	add    BYTE PTR [rax],al
  435088:	sbb    BYTE PTR [rdx+0x3],0x0
  43508c:	add    BYTE PTR [rax],al
  43508e:	add    BYTE PTR [rax],al
  435090:	xchg   esp,eax
  435091:	pop    rdx
  435092:	add    eax,DWORD PTR [rax]
  435094:	add    BYTE PTR [rax],al
  435096:	add    BYTE PTR [rax],al
  435098:	test   al,0x5a
  43509a:	add    eax,DWORD PTR [rax]
  43509c:	add    BYTE PTR [rax],al
  43509e:	add    BYTE PTR [rax],al
  4350a0:	mov    esp,0x35a
  4350a5:	add    BYTE PTR [rax],al
  4350a7:	add    al,dl
  4350a9:	pop    rdx
  4350aa:	add    eax,DWORD PTR [rax]
  4350ac:	add    BYTE PTR [rax],al
  4350ae:	add    BYTE PTR [rax],al
  4350b0:	in     al,0x5a
  4350b2:	add    eax,DWORD PTR [rax]
  4350b4:	add    BYTE PTR [rax],al
  4350b6:	add    BYTE PTR [rax],al
  4350b8:	cld    
  4350b9:	pop    rdx
  4350ba:	add    eax,DWORD PTR [rax]
  4350bc:	add    BYTE PTR [rax],al
  4350be:	add    BYTE PTR [rax],al
  4350c0:	or     al,0x5b
  4350c2:	add    eax,DWORD PTR [rax]
  4350c4:	add    BYTE PTR [rax],al
  4350c6:	add    BYTE PTR [rax],al
  4350c8:	sbb    al,0x5b
  4350ca:	add    eax,DWORD PTR [rax]
  4350cc:	add    BYTE PTR [rax],al
  4350ce:	add    BYTE PTR [rax],al
  4350d0:	sub    BYTE PTR [rbx+0x3],bl
  4350d3:	add    BYTE PTR [rax],al
  4350d5:	add    BYTE PTR [rax],al
  4350d7:	add    BYTE PTR [rax],bh
  4350d9:	pop    rbx
  4350da:	add    eax,DWORD PTR [rax]
  4350dc:	add    BYTE PTR [rax],al
  4350de:	add    BYTE PTR [rax],al
  4350e0:	rex.W pop rbx
  4350e2:	add    eax,DWORD PTR [rax]
  4350e4:	add    BYTE PTR [rax],al
  4350e6:	add    BYTE PTR [rax],al
  4350e8:	(bad)  
  4350e9:	pop    rbx
  4350ea:	add    eax,DWORD PTR [rax]
  4350ec:	add    BYTE PTR [rax],al
  4350ee:	add    BYTE PTR [rax],al
  4350f0:	je     0x43514d
  4350f2:	add    eax,DWORD PTR [rax]
  4350f4:	add    BYTE PTR [rax],al
  4350f6:	add    BYTE PTR [rax],al
  4350f8:	test   BYTE PTR [rbx+0x3],bl
  4350fb:	add    BYTE PTR [rax],al
  4350fd:	add    BYTE PTR [rax],al
  4350ff:	add    BYTE PTR [rbx+rbx*2+0x3],dl
  435106:	add    BYTE PTR [rax],al
  435108:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  435109:	pop    rbx
  43510a:	add    eax,DWORD PTR [rax]
  43510c:	add    BYTE PTR [rax],al
  43510e:	add    BYTE PTR [rax],al
  435110:	mov    eax,0x35b
  435115:	add    BYTE PTR [rax],al
  435117:	add    ah,cl
  435119:	pop    rbx
  43511a:	add    eax,DWORD PTR [rax]
  43511c:	add    BYTE PTR [rax],al
  43511e:	add    BYTE PTR [rax],al
  435120:	loopne 0x43517d
  435122:	add    eax,DWORD PTR [rax]
  435124:	add    BYTE PTR [rax],al
  435126:	add    BYTE PTR [rax],al
  435128:	hlt    
  435129:	pop    rbx
  43512a:	add    eax,DWORD PTR [rax]
  43512c:	add    BYTE PTR [rax],al
  43512e:	add    BYTE PTR [rax],al
  435130:	or     BYTE PTR [rbx+rax*1+0x0],bl
  435134:	add    BYTE PTR [rax],al
  435136:	add    BYTE PTR [rax],al
  435138:	and    BYTE PTR [rbx+rax*1+0x0],bl
  43513c:	add    BYTE PTR [rax],al
  43513e:	add    BYTE PTR [rax],al
  435140:	xor    BYTE PTR [rbx+rax*1+0x0],bl
  435144:	add    BYTE PTR [rax],al
  435146:	add    BYTE PTR [rax],al
  435148:	rex.R pop rsp
  43514a:	add    eax,DWORD PTR [rax]
  43514c:	add    BYTE PTR [rax],al
  43514e:	add    BYTE PTR [rax],al
  435150:	push   rsp
  435151:	pop    rsp
  435152:	add    eax,DWORD PTR [rax]
	...
  435160:	push   0x35c
  435165:	add    BYTE PTR [rax],al
  435167:	add    BYTE PTR [rax+0x35c],al
  43516d:	add    BYTE PTR [rax],al
  43516f:	add    BYTE PTR [rax+0x35c],bl
  435175:	add    BYTE PTR [rax],al
  435177:	add    BYTE PTR [rsp+rbx*2+0x3],dh
  43517e:	add    BYTE PTR [rax],al
  435180:	enter  0x35c,0x0
  435184:	add    BYTE PTR [rax],al
  435186:	add    BYTE PTR [rax],al
  435188:	ficomp DWORD PTR [rbx+rax*1+0x0]
  43518c:	add    BYTE PTR [rax],al
  43518e:	add    BYTE PTR [rax],al
  435190:	in     al,dx
  435191:	pop    rsp
  435192:	add    eax,DWORD PTR [rax]
  435194:	add    BYTE PTR [rax],al
  435196:	add    BYTE PTR [rax],al
  435198:	add    BYTE PTR [rbp+0x3],bl
  43519b:	add    BYTE PTR [rax],al
  43519d:	add    BYTE PTR [rax],al
  43519f:	add    BYTE PTR [rsi],dl
  4351a1:	pop    rbp
  4351a2:	add    eax,DWORD PTR [rax]
  4351a4:	add    BYTE PTR [rax],al
  4351a6:	add    BYTE PTR [rax],al
  4351a8:	sub    al,0x5d
  4351aa:	add    eax,DWORD PTR [rax]
  4351ac:	add    BYTE PTR [rax],al
  4351ae:	add    BYTE PTR [rax],al
  4351b0:	rex.X pop rbp
  4351b2:	add    eax,DWORD PTR [rax]
  4351b4:	add    BYTE PTR [rax],al
  4351b6:	add    BYTE PTR [rax],al
  4351b8:	pop    rsp
  4351b9:	pop    rbp
  4351ba:	add    eax,DWORD PTR [rax]
  4351bc:	add    BYTE PTR [rax],al
  4351be:	add    BYTE PTR [rax],al
  4351c0:	jp     0x43521f
  4351c2:	add    eax,DWORD PTR [rax]
  4351c4:	add    BYTE PTR [rax],al
  4351c6:	add    BYTE PTR [rax],al
  4351c8:	mov    bl,BYTE PTR [rbp+0x3]
  4351cb:	add    BYTE PTR [rax],al
  4351cd:	add    BYTE PTR [rax],al
  4351cf:	add    BYTE PTR [rax+0x35d],bl
  4351d5:	add    BYTE PTR [rax],al
  4351d7:	add    BYTE PTR [rax+0x35d],ch
  4351dd:	add    BYTE PTR [rax],al
  4351df:	add    BYTE PTR [rsi+0x35d],bh
  4351e5:	add    BYTE PTR [rax],al
  4351e7:	add    al,dl
  4351e9:	pop    rbp
  4351ea:	add    eax,DWORD PTR [rax]
  4351ec:	add    BYTE PTR [rax],al
  4351ee:	add    BYTE PTR [rax],al
  4351f0:	(bad)  
  4351f1:	pop    rbp
  4351f2:	add    eax,DWORD PTR [rax]
  4351f4:	add    BYTE PTR [rax],al
  4351f6:	add    BYTE PTR [rax],al
  4351f8:	cli    
  4351f9:	pop    rbp
  4351fa:	add    eax,DWORD PTR [rax]
  4351fc:	add    BYTE PTR [rax],al
  4351fe:	add    BYTE PTR [rax],al
  435200:	adc    bl,BYTE PTR [rsi+0x3]
  435203:	add    BYTE PTR [rax],al
  435205:	add    BYTE PTR [rax],al
  435207:	add    BYTE PTR [rsi],ch
  435209:	pop    rsi
  43520a:	add    eax,DWORD PTR [rax]
  43520c:	add    BYTE PTR [rax],al
  43520e:	add    BYTE PTR [rax],al
  435210:	rex.RX pop rsi
  435212:	add    eax,DWORD PTR [rax]
  435214:	add    BYTE PTR [rax],al
  435216:	add    BYTE PTR [rax],al
  435218:	(bad)  
  435219:	pop    rsi
  43521a:	add    eax,DWORD PTR [rax]
  43521c:	add    BYTE PTR [rax],al
  43521e:	add    BYTE PTR [rax],al
  435220:	jbe    0x435280
  435222:	add    eax,DWORD PTR [rax]
  435224:	add    BYTE PTR [rax],al
  435226:	add    BYTE PTR [rax],al
  435228:	mov    bl,BYTE PTR [rsi+0x3]
  43522b:	add    BYTE PTR [rax],al
  43522d:	add    BYTE PTR [rax],al
  43522f:	add    BYTE PTR [rsi+rbx*2+0x3],ah
  435236:	add    BYTE PTR [rax],al
  435238:	mov    eax,0x35e
  43523d:	add    BYTE PTR [rax],al
  43523f:	add    dh,al
  435241:	pop    rsi
  435242:	add    eax,DWORD PTR [rax]
  435244:	add    BYTE PTR [rax],al
  435246:	add    BYTE PTR [rax],al
  435248:	(bad)  
  435249:	pop    rsi
  43524a:	add    eax,DWORD PTR [rax]
  43524c:	add    BYTE PTR [rax],al
  43524e:	add    BYTE PTR [rax],al
  435250:	call   0x4355b3
  435255:	add    BYTE PTR [rax],al
  435257:	add    BYTE PTR [rsi],al
  435259:	pop    rdi
  43525a:	add    eax,DWORD PTR [rax]
  43525c:	add    BYTE PTR [rax],al
  43525e:	add    BYTE PTR [rax],al
  435260:	(bad)  
  435261:	pop    rdi
  435262:	add    eax,DWORD PTR [rax]
  435264:	add    BYTE PTR [rax],al
  435266:	add    BYTE PTR [rax],al
  435268:	and    bl,BYTE PTR [rdi+0x3]
  43526b:	add    BYTE PTR [rax],al
  43526d:	add    BYTE PTR [rax],al
  43526f:	add    BYTE PTR [rax],dh
  435271:	pop    rdi
  435272:	add    eax,DWORD PTR [rax]
  435274:	add    BYTE PTR [rax],al
  435276:	add    BYTE PTR [rax],al
  435278:	rex.WR pop rdi
  43527a:	add    eax,DWORD PTR [rax]
  43527c:	add    BYTE PTR [rax],al
  43527e:	add    BYTE PTR [rax],al
  435280:	pop    rsi
  435281:	pop    rdi
  435282:	add    eax,DWORD PTR [rax]
	...
  435290:	outs   dx,BYTE PTR ds:[rsi]
  435291:	pop    rdi
  435292:	add    eax,DWORD PTR [rax]
  435294:	add    BYTE PTR [rax],al
  435296:	add    BYTE PTR [rax],al
  435298:	xchg   BYTE PTR [rdi+0x3],bl
  43529b:	add    BYTE PTR [rax],al
  43529d:	add    BYTE PTR [rax],al
  43529f:	add    BYTE PTR [rdi+rbx*2+0x3],dl
  4352a6:	add    BYTE PTR [rax],al
  4352a8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4352a9:	pop    rdi
  4352aa:	add    eax,DWORD PTR [rax]
  4352ac:	add    BYTE PTR [rax],al
  4352ae:	add    BYTE PTR [rax],al
  4352b0:	mov    al,0x5f
  4352b2:	add    eax,DWORD PTR [rax]
  4352b4:	add    BYTE PTR [rax],al
  4352b6:	add    BYTE PTR [rax],al
  4352b8:	mov    esi,0x35f
  4352bd:	add    BYTE PTR [rax],al
  4352bf:	add    dh,cl
  4352c1:	pop    rdi
  4352c2:	add    eax,DWORD PTR [rax]
  4352c4:	add    BYTE PTR [rax],al
  4352c6:	add    BYTE PTR [rax],al
  4352c8:	loopne 0x435329
  4352ca:	add    eax,DWORD PTR [rax]
  4352cc:	add    BYTE PTR [rax],al
  4352ce:	add    BYTE PTR [rax],al
  4352d0:	hlt    
  4352d1:	pop    rdi
  4352d2:	add    eax,DWORD PTR [rax]
  4352d4:	add    BYTE PTR [rax],al
  4352d6:	add    BYTE PTR [rax],al
  4352d8:	(bad)  
  4352d9:	pop    rdi
  4352da:	add    eax,DWORD PTR [rax]
  4352dc:	add    BYTE PTR [rax],al
  4352de:	add    BYTE PTR [rax],al
  4352e0:	or     al,0x60
  4352e2:	add    eax,DWORD PTR [rax]
  4352e4:	add    BYTE PTR [rax],al
  4352e6:	add    BYTE PTR [rax],al
  4352e8:	(bad)  
  4352e9:	(bad)  
  4352ea:	add    eax,DWORD PTR [rax]
  4352ec:	add    BYTE PTR [rax],al
  4352ee:	add    BYTE PTR [rax],al
  4352f0:	and    BYTE PTR [rax+0x3],ah
  4352f3:	add    BYTE PTR [rax],al
  4352f5:	add    BYTE PTR [rax],al
  4352f7:	add    BYTE PTR [rdx],ch
  4352f9:	(bad)  
  4352fa:	add    eax,DWORD PTR [rax]
  4352fc:	add    BYTE PTR [rax],al
  4352fe:	add    BYTE PTR [rax],al
  435300:	ss (bad) 
  435302:	add    eax,DWORD PTR [rax]
  435304:	add    BYTE PTR [rax],al
  435306:	add    BYTE PTR [rax],al
  435308:	rex.W (bad) 
  43530a:	add    eax,DWORD PTR [rax]
  43530c:	add    BYTE PTR [rax],al
  43530e:	add    BYTE PTR [rax],al
  435310:	push   rsp
  435311:	(bad)  
  435312:	add    eax,DWORD PTR [rax]
  435314:	add    BYTE PTR [rax],al
  435316:	add    BYTE PTR [rax],al
  435318:	fs (bad) 
  43531a:	add    eax,DWORD PTR [rax]
  43531c:	add    BYTE PTR [rax],al
  43531e:	add    BYTE PTR [rax],al
  435320:	ins    BYTE PTR es:[rdi],dx
  435321:	(bad)  
  435322:	add    eax,DWORD PTR [rax]
  435324:	add    BYTE PTR [rax],al
  435326:	add    BYTE PTR [rax],al
  435328:	js     0x43538a
  43532a:	add    eax,DWORD PTR [rax]
  43532c:	add    BYTE PTR [rax],al
  43532e:	add    BYTE PTR [rax],al
  435330:	(bad)  
  435331:	(bad)  
  435332:	add    eax,DWORD PTR [rax]
  435334:	add    BYTE PTR [rax],al
  435336:	add    BYTE PTR [rax],al
  435338:	mov    fs,WORD PTR [rax+0x3]
  43533b:	add    BYTE PTR [rax],al
  43533d:	add    BYTE PTR [rax],al
  43533f:	add    BYTE PTR [rax+0x360],bl
  435345:	add    BYTE PTR [rax],al
  435347:	add    BYTE PTR [rdx+0x360],ah
  43534d:	add    BYTE PTR [rax],al
  43534f:	add    BYTE PTR [rsi+0x360],ch
  435355:	add    BYTE PTR [rax],al
  435357:	add    BYTE PTR [rsi+0x360],dh
  43535d:	add    BYTE PTR [rax],al
  43535f:	add    al,al
  435361:	(bad)  
  435362:	add    eax,DWORD PTR [rax]
  435364:	add    BYTE PTR [rax],al
  435366:	add    BYTE PTR [rax],al
  435368:	enter  0x360,0x0
  43536c:	add    BYTE PTR [rax],al
  43536e:	add    BYTE PTR [rax],al
  435370:	shl    BYTE PTR [rax+0x3],cl
  435373:	add    BYTE PTR [rax],al
  435375:	add    BYTE PTR [rax],al
  435377:	add    ah,bl
  435379:	(bad)  
  43537a:	add    eax,DWORD PTR [rax]
  43537c:	add    BYTE PTR [rax],al
  43537e:	add    BYTE PTR [rax],al
  435380:	in     al,0x60
  435382:	add    eax,DWORD PTR [rax]
  435384:	add    BYTE PTR [rax],al
  435386:	add    BYTE PTR [rax],al
  435388:	in     al,dx
  435389:	(bad)  
  43538a:	add    eax,DWORD PTR [rax]
  43538c:	add    BYTE PTR [rax],al
  43538e:	add    BYTE PTR [rax],al
  435390:	mul    BYTE PTR [rax+0x3]
  435393:	add    BYTE PTR [rax],al
  435395:	add    BYTE PTR [rax],al
  435397:	add    dh,bh
  435399:	(bad)  
  43539a:	add    eax,DWORD PTR [rax]
  43539c:	add    BYTE PTR [rax],al
  43539e:	add    BYTE PTR [rax],al
  4353a0:	(bad)  
  4353a1:	(bad)  
  4353a2:	add    eax,DWORD PTR [rax]
  4353a4:	add    BYTE PTR [rax],al
  4353a6:	add    BYTE PTR [rax],al
  4353a8:	(bad)  
  4353a9:	(bad)  
  4353aa:	add    eax,DWORD PTR [rax]
  4353ac:	add    BYTE PTR [rax],al
  4353ae:	add    BYTE PTR [rax],al
  4353b0:	(bad)  
  4353b1:	(bad)  
  4353b2:	add    eax,DWORD PTR [rax]
  4353b4:	add    BYTE PTR [rax],al
  4353b6:	add    BYTE PTR [rax],al
  4353b8:	(bad)  
  4353b9:	(bad)  
  4353ba:	add    eax,DWORD PTR [rax]
  4353bc:	add    BYTE PTR [rax],al
  4353be:	add    BYTE PTR [rax],al
  4353c0:	sub    BYTE PTR [rcx+0x3],ah
  4353c3:	add    BYTE PTR [rax],al
  4353c5:	add    BYTE PTR [rax],al
  4353c7:	add    BYTE PTR [rdx],dh
  4353c9:	(bad)  
  4353ca:	add    eax,DWORD PTR [rax]
  4353cc:	add    BYTE PTR [rax],al
  4353ce:	add    BYTE PTR [rax],al
  4353d0:	cmp    al,0x61
  4353d2:	add    eax,DWORD PTR [rax]
  4353d4:	add    BYTE PTR [rax],al
  4353d6:	add    BYTE PTR [rax],al
  4353d8:	rex.RX (bad) 
  4353da:	add    eax,DWORD PTR [rax]
  4353dc:	add    BYTE PTR [rax],al
  4353de:	add    BYTE PTR [rax],al
  4353e0:	push   rax
  4353e1:	(bad)  
  4353e2:	add    eax,DWORD PTR [rax]
  4353e4:	add    BYTE PTR [rax],al
  4353e6:	add    BYTE PTR [rax],al
  4353e8:	pop    rdx
  4353e9:	(bad)  
  4353ea:	add    eax,DWORD PTR [rax]
  4353ec:	add    BYTE PTR [rax],al
  4353ee:	add    BYTE PTR [rax],al
  4353f0:	fs (bad) 
  4353f2:	add    eax,DWORD PTR [rax]
  4353f4:	add    BYTE PTR [rax],al
  4353f6:	add    BYTE PTR [rax],al
  4353f8:	jb     0x43545b
  4353fa:	add    eax,DWORD PTR [rax]
  4353fc:	add    BYTE PTR [rax],al
  4353fe:	add    BYTE PTR [rax],al
  435400:	jl     0x435463
  435402:	add    eax,DWORD PTR [rax]
  435404:	add    BYTE PTR [rax],al
  435406:	add    BYTE PTR [rax],al
  435408:	mov    BYTE PTR [rcx+0x3],ah
  43540b:	add    BYTE PTR [rax],al
  43540d:	add    BYTE PTR [rax],al
  43540f:	add    BYTE PTR [rdx+0x361],dl
  435415:	add    BYTE PTR [rax],al
  435417:	add    BYTE PTR [rcx+riz*2+0x3],bl
  43541e:	add    BYTE PTR [rax],al
  435420:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  435421:	(bad)  
  435422:	add    eax,DWORD PTR [rax]
  435424:	add    BYTE PTR [rax],al
  435426:	add    BYTE PTR [rax],al
  435428:	mov    al,0x61
  43542a:	add    eax,DWORD PTR [rax]
  43542c:	add    BYTE PTR [rax],al
  43542e:	add    BYTE PTR [rax],al
  435430:	mov    eax,0x361
  435435:	add    BYTE PTR [rax],al
  435437:	add    dl,al
  435439:	(bad)  
  43543a:	add    eax,DWORD PTR [rax]
  43543c:	add    BYTE PTR [rax],al
  43543e:	add    BYTE PTR [rax],al
  435440:	(bad)  
  435441:	(bad)  
  435442:	add    eax,DWORD PTR [rax]
  435444:	add    BYTE PTR [rax],al
  435446:	add    BYTE PTR [rax],al
  435448:	fsub   DWORD PTR [rcx+0x3]
  43544b:	add    BYTE PTR [rax],al
  43544d:	add    BYTE PTR [rax],al
  43544f:	add    dl,ah
  435451:	(bad)  
  435452:	add    eax,DWORD PTR [rax]
  435454:	add    BYTE PTR [rax],al
  435456:	add    BYTE PTR [rax],al
  435458:	in     al,dx
  435459:	(bad)  
  43545a:	add    eax,DWORD PTR [rax]
  43545c:	add    BYTE PTR [rax],al
  43545e:	add    BYTE PTR [rax],al
  435460:	mul    BYTE PTR [rcx+0x3]
  435463:	add    BYTE PTR [rax],al
  435465:	add    BYTE PTR [rax],al
  435467:	add    BYTE PTR [rax],al
  435469:	(bad)  
  43546b:	add    BYTE PTR [rax],al
  43546d:	add    BYTE PTR [rax],al
  43546f:	add    BYTE PTR [rdx],cl
  435471:	(bad)  
  435473:	add    BYTE PTR [rax],al
  435475:	add    BYTE PTR [rax],al
  435477:	add    BYTE PTR [rsi],dl
  435479:	(bad)  
  43547b:	add    BYTE PTR [rax],al
  43547d:	add    BYTE PTR [rax],al
  43547f:	add    BYTE PTR [rax],ah
  435481:	(bad)  
  435483:	add    BYTE PTR [rax],al
  435485:	add    BYTE PTR [rax],al
  435487:	add    BYTE PTR [rdx],ch
  435489:	(bad)  
  43548b:	add    BYTE PTR [rax],al
  43548d:	add    BYTE PTR [rax],al
  43548f:	add    BYTE PTR [rdx+riz*2],dh
  435492:	add    eax,DWORD PTR [rax]
  435494:	add    BYTE PTR [rax],al
  435496:	add    BYTE PTR [rax],al
  435498:	ds (bad) 
  43549b:	add    BYTE PTR [rax],al
  43549d:	add    BYTE PTR [rax],al
  43549f:	add    BYTE PTR [rax+0x62],cl
  4354a2:	add    eax,DWORD PTR [rax]
  4354a4:	add    BYTE PTR [rax],al
  4354a6:	add    BYTE PTR [rax],al
  4354a8:	push   rdx
  4354a9:	(bad)  
  4354ab:	add    BYTE PTR [rax],al
  4354ad:	add    BYTE PTR [rax],al
  4354af:	add    BYTE PTR [rdx+riz*2+0x3],bl
  4354b3:	add    BYTE PTR [rax],al
  4354b5:	add    BYTE PTR [rax],al
  4354b7:	add    BYTE PTR [rsi+0x62],ah
  4354ba:	add    eax,DWORD PTR [rax]
  4354bc:	add    BYTE PTR [rax],al
  4354be:	add    BYTE PTR [rax],al
  4354c0:	jo     0x435524
  4354c2:	add    eax,DWORD PTR [rax]
  4354c4:	add    BYTE PTR [rax],al
  4354c6:	add    BYTE PTR [rax],al
  4354c8:	jl     0x43552c
  4354ca:	add    eax,DWORD PTR [rax]
  4354cc:	add    BYTE PTR [rax],al
  4354ce:	add    BYTE PTR [rax],al
  4354d0:	mov    BYTE PTR [rdx+0x3],ah
  4354d3:	add    BYTE PTR [rax],al
  4354d5:	add    BYTE PTR [rax],al
  4354d7:	add    BYTE PTR [rdx+0x362],dl
  4354dd:	add    BYTE PTR [rax],al
  4354df:	add    BYTE PTR [rdx+riz*2+0x3],bl
  4354e6:	add    BYTE PTR [rax],al
  4354e8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4354e9:	(bad)  
  4354eb:	add    BYTE PTR [rax],al
  4354ed:	add    BYTE PTR [rax],al
  4354ef:	add    BYTE PTR [rdx+0x362],dh
  4354f5:	add    BYTE PTR [rax],al
  4354f7:	add    BYTE PTR [rdx+0x362],bh
  4354fd:	add    BYTE PTR [rax],al
  4354ff:	add    dl,al
  435501:	(bad)  
  435503:	add    BYTE PTR [rax],al
  435505:	add    BYTE PTR [rax],al
  435507:	add    ah,cl
  435509:	(bad)  
  43550b:	add    BYTE PTR [rax],al
  43550d:	add    BYTE PTR [rax],al
  43550f:	add    dh,dl
  435511:	(bad)  
  435513:	add    BYTE PTR [rax],al
  435515:	add    BYTE PTR [rax],al
  435517:	add    al,ah
  435519:	(bad)  
  43551b:	add    BYTE PTR [rax],al
  43551d:	add    BYTE PTR [rax],al
  43551f:	add    dl,ch
  435521:	(bad)  
  435523:	add    BYTE PTR [rax],al
  435525:	add    BYTE PTR [rax],al
  435527:	add    ah,dh
  435529:	(bad)  
	...
  435537:	add    dh,bh
  435539:	(bad)  
	...
  435547:	add    BYTE PTR [rbx+riz*2],cl
  43554a:	add    eax,DWORD PTR [rax]
  43554c:	add    BYTE PTR [rax],al
  43554e:	add    BYTE PTR [rax],al
  435550:	sbb    BYTE PTR [rbx+0x3],ah
  435553:	add    BYTE PTR [rax],al
  435555:	add    BYTE PTR [rax],al
  435557:	add    BYTE PTR [rax],ch
  435559:	movsxd eax,DWORD PTR [rbx]
	...
  435567:	add    BYTE PTR [rax+0x5a],bl
  43556a:	add    eax,DWORD PTR [rax]
  43556c:	add    BYTE PTR [rax],al
  43556e:	add    BYTE PTR [rax],al
  435570:	ins    BYTE PTR es:[rdi],dx
  435571:	pop    rdx
  435572:	add    eax,DWORD PTR [rax]
  435574:	add    BYTE PTR [rax],al
  435576:	add    BYTE PTR [rax],al
  435578:	sbb    BYTE PTR [rdx+0x3],0x0
  43557c:	add    BYTE PTR [rax],al
  43557e:	add    BYTE PTR [rax],al
  435580:	xchg   esp,eax
  435581:	pop    rdx
  435582:	add    eax,DWORD PTR [rax]
  435584:	add    BYTE PTR [rax],al
  435586:	add    BYTE PTR [rax],al
  435588:	test   al,0x5a
  43558a:	add    eax,DWORD PTR [rax]
  43558c:	add    BYTE PTR [rax],al
  43558e:	add    BYTE PTR [rax],al
  435590:	mov    esp,0x35a
  435595:	add    BYTE PTR [rax],al
  435597:	add    al,dl
  435599:	pop    rdx
  43559a:	add    eax,DWORD PTR [rax]
  43559c:	add    BYTE PTR [rax],al
  43559e:	add    BYTE PTR [rax],al
  4355a0:	in     al,0x5a
  4355a2:	add    eax,DWORD PTR [rax]
  4355a4:	add    BYTE PTR [rax],al
  4355a6:	add    BYTE PTR [rax],al
  4355a8:	cld    
  4355a9:	pop    rdx
  4355aa:	add    eax,DWORD PTR [rax]
  4355ac:	add    BYTE PTR [rax],al
  4355ae:	add    BYTE PTR [rax],al
  4355b0:	or     al,0x5b
  4355b2:	add    eax,DWORD PTR [rax]
  4355b4:	add    BYTE PTR [rax],al
  4355b6:	add    BYTE PTR [rax],al
  4355b8:	sbb    al,0x5b
  4355ba:	add    eax,DWORD PTR [rax]
  4355bc:	add    BYTE PTR [rax],al
  4355be:	add    BYTE PTR [rax],al
  4355c0:	sub    BYTE PTR [rbx+0x3],bl
  4355c3:	add    BYTE PTR [rax],al
  4355c5:	add    BYTE PTR [rax],al
  4355c7:	add    BYTE PTR [rax],bh
  4355c9:	pop    rbx
  4355ca:	add    eax,DWORD PTR [rax]
  4355cc:	add    BYTE PTR [rax],al
  4355ce:	add    BYTE PTR [rax],al
  4355d0:	rex.W pop rbx
  4355d2:	add    eax,DWORD PTR [rax]
  4355d4:	add    BYTE PTR [rax],al
  4355d6:	add    BYTE PTR [rax],al
  4355d8:	(bad)  
  4355d9:	pop    rbx
  4355da:	add    eax,DWORD PTR [rax]
  4355dc:	add    BYTE PTR [rax],al
  4355de:	add    BYTE PTR [rax],al
  4355e0:	je     0x43563d
  4355e2:	add    eax,DWORD PTR [rax]
  4355e4:	add    BYTE PTR [rax],al
  4355e6:	add    BYTE PTR [rax],al
  4355e8:	test   BYTE PTR [rbx+0x3],bl
  4355eb:	add    BYTE PTR [rax],al
  4355ed:	add    BYTE PTR [rax],al
  4355ef:	add    BYTE PTR [rbx+rbx*2+0x3],dl
  4355f6:	add    BYTE PTR [rax],al
  4355f8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4355f9:	pop    rbx
  4355fa:	add    eax,DWORD PTR [rax]
  4355fc:	add    BYTE PTR [rax],al
  4355fe:	add    BYTE PTR [rax],al
  435600:	mov    eax,0x35b
  435605:	add    BYTE PTR [rax],al
  435607:	add    ah,cl
  435609:	pop    rbx
  43560a:	add    eax,DWORD PTR [rax]
  43560c:	add    BYTE PTR [rax],al
  43560e:	add    BYTE PTR [rax],al
  435610:	loopne 0x43566d
  435612:	add    eax,DWORD PTR [rax]
  435614:	add    BYTE PTR [rax],al
  435616:	add    BYTE PTR [rax],al
  435618:	hlt    
  435619:	pop    rbx
  43561a:	add    eax,DWORD PTR [rax]
  43561c:	add    BYTE PTR [rax],al
  43561e:	add    BYTE PTR [rax],al
  435620:	or     BYTE PTR [rbx+rax*1+0x0],bl
  435624:	add    BYTE PTR [rax],al
  435626:	add    BYTE PTR [rax],al
  435628:	and    BYTE PTR [rbx+rax*1+0x0],bl
  43562c:	add    BYTE PTR [rax],al
  43562e:	add    BYTE PTR [rax],al
  435630:	xor    BYTE PTR [rbx+rax*1+0x0],bl
  435634:	add    BYTE PTR [rax],al
  435636:	add    BYTE PTR [rax],al
  435638:	rex.R pop rsp
  43563a:	add    eax,DWORD PTR [rax]
  43563c:	add    BYTE PTR [rax],al
  43563e:	add    BYTE PTR [rax],al
  435640:	push   rsp
  435641:	pop    rsp
  435642:	add    eax,DWORD PTR [rax]
	...
  435650:	push   0x35c
  435655:	add    BYTE PTR [rax],al
  435657:	add    BYTE PTR [rax+0x35c],al
  43565d:	add    BYTE PTR [rax],al
  43565f:	add    BYTE PTR [rax+0x35c],bl
  435665:	add    BYTE PTR [rax],al
  435667:	add    BYTE PTR [rsp+rbx*2+0x3],dh
  43566e:	add    BYTE PTR [rax],al
  435670:	enter  0x35c,0x0
  435674:	add    BYTE PTR [rax],al
  435676:	add    BYTE PTR [rax],al
  435678:	ficomp DWORD PTR [rbx+rax*1+0x0]
  43567c:	add    BYTE PTR [rax],al
  43567e:	add    BYTE PTR [rax],al
  435680:	in     al,dx
  435681:	pop    rsp
  435682:	add    eax,DWORD PTR [rax]
  435684:	add    BYTE PTR [rax],al
  435686:	add    BYTE PTR [rax],al
  435688:	add    BYTE PTR [rbp+0x3],bl
  43568b:	add    BYTE PTR [rax],al
  43568d:	add    BYTE PTR [rax],al
  43568f:	add    BYTE PTR [rsi],dl
  435691:	pop    rbp
  435692:	add    eax,DWORD PTR [rax]
  435694:	add    BYTE PTR [rax],al
  435696:	add    BYTE PTR [rax],al
  435698:	sub    al,0x5d
  43569a:	add    eax,DWORD PTR [rax]
  43569c:	add    BYTE PTR [rax],al
  43569e:	add    BYTE PTR [rax],al
  4356a0:	rex.X pop rbp
  4356a2:	add    eax,DWORD PTR [rax]
  4356a4:	add    BYTE PTR [rax],al
  4356a6:	add    BYTE PTR [rax],al
  4356a8:	pop    rsp
  4356a9:	pop    rbp
  4356aa:	add    eax,DWORD PTR [rax]
  4356ac:	add    BYTE PTR [rax],al
  4356ae:	add    BYTE PTR [rax],al
  4356b0:	jp     0x43570f
  4356b2:	add    eax,DWORD PTR [rax]
  4356b4:	add    BYTE PTR [rax],al
  4356b6:	add    BYTE PTR [rax],al
  4356b8:	mov    bl,BYTE PTR [rbp+0x3]
  4356bb:	add    BYTE PTR [rax],al
  4356bd:	add    BYTE PTR [rax],al
  4356bf:	add    BYTE PTR [rax+0x35d],bl
  4356c5:	add    BYTE PTR [rax],al
  4356c7:	add    BYTE PTR [rax+0x35d],ch
  4356cd:	add    BYTE PTR [rax],al
  4356cf:	add    BYTE PTR [rsi+0x35d],bh
  4356d5:	add    BYTE PTR [rax],al
  4356d7:	add    al,dl
  4356d9:	pop    rbp
  4356da:	add    eax,DWORD PTR [rax]
  4356dc:	add    BYTE PTR [rax],al
  4356de:	add    BYTE PTR [rax],al
  4356e0:	(bad)  
  4356e1:	pop    rbp
  4356e2:	add    eax,DWORD PTR [rax]
  4356e4:	add    BYTE PTR [rax],al
  4356e6:	add    BYTE PTR [rax],al
  4356e8:	cli    
  4356e9:	pop    rbp
  4356ea:	add    eax,DWORD PTR [rax]
  4356ec:	add    BYTE PTR [rax],al
  4356ee:	add    BYTE PTR [rax],al
  4356f0:	adc    bl,BYTE PTR [rsi+0x3]
  4356f3:	add    BYTE PTR [rax],al
  4356f5:	add    BYTE PTR [rax],al
  4356f7:	add    BYTE PTR [rsi],ch
  4356f9:	pop    rsi
  4356fa:	add    eax,DWORD PTR [rax]
  4356fc:	add    BYTE PTR [rax],al
  4356fe:	add    BYTE PTR [rax],al
  435700:	rex.RX pop rsi
  435702:	add    eax,DWORD PTR [rax]
  435704:	add    BYTE PTR [rax],al
  435706:	add    BYTE PTR [rax],al
  435708:	(bad)  
  435709:	pop    rsi
  43570a:	add    eax,DWORD PTR [rax]
  43570c:	add    BYTE PTR [rax],al
  43570e:	add    BYTE PTR [rax],al
  435710:	jbe    0x435770
  435712:	add    eax,DWORD PTR [rax]
  435714:	add    BYTE PTR [rax],al
  435716:	add    BYTE PTR [rax],al
  435718:	mov    bl,BYTE PTR [rsi+0x3]
  43571b:	add    BYTE PTR [rax],al
  43571d:	add    BYTE PTR [rax],al
  43571f:	add    BYTE PTR [rsi+rbx*2+0x3],ah
  435726:	add    BYTE PTR [rax],al
  435728:	mov    eax,0x35e
  43572d:	add    BYTE PTR [rax],al
  43572f:	add    dh,al
  435731:	pop    rsi
  435732:	add    eax,DWORD PTR [rax]
  435734:	add    BYTE PTR [rax],al
  435736:	add    BYTE PTR [rax],al
  435738:	(bad)  
  435739:	pop    rsi
  43573a:	add    eax,DWORD PTR [rax]
  43573c:	add    BYTE PTR [rax],al
  43573e:	add    BYTE PTR [rax],al
  435740:	call   0x435aa3
  435745:	add    BYTE PTR [rax],al
  435747:	add    BYTE PTR [rsi],al
  435749:	pop    rdi
  43574a:	add    eax,DWORD PTR [rax]
  43574c:	add    BYTE PTR [rax],al
  43574e:	add    BYTE PTR [rax],al
  435750:	(bad)  
  435751:	pop    rdi
  435752:	add    eax,DWORD PTR [rax]
  435754:	add    BYTE PTR [rax],al
  435756:	add    BYTE PTR [rax],al
  435758:	and    bl,BYTE PTR [rdi+0x3]
  43575b:	add    BYTE PTR [rax],al
  43575d:	add    BYTE PTR [rax],al
  43575f:	add    BYTE PTR [rax],dh
  435761:	pop    rdi
  435762:	add    eax,DWORD PTR [rax]
  435764:	add    BYTE PTR [rax],al
  435766:	add    BYTE PTR [rax],al
  435768:	rex.WR pop rdi
  43576a:	add    eax,DWORD PTR [rax]
  43576c:	add    BYTE PTR [rax],al
  43576e:	add    BYTE PTR [rax],al
  435770:	pop    rsi
  435771:	pop    rdi
  435772:	add    eax,DWORD PTR [rax]
	...
  435780:	outs   dx,BYTE PTR ds:[rsi]
  435781:	pop    rdi
  435782:	add    eax,DWORD PTR [rax]
  435784:	add    BYTE PTR [rax],al
  435786:	add    BYTE PTR [rax],al
  435788:	xchg   BYTE PTR [rdi+0x3],bl
  43578b:	add    BYTE PTR [rax],al
  43578d:	add    BYTE PTR [rax],al
  43578f:	add    BYTE PTR [rdi+rbx*2+0x3],dl
  435796:	add    BYTE PTR [rax],al
  435798:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  435799:	pop    rdi
  43579a:	add    eax,DWORD PTR [rax]
  43579c:	add    BYTE PTR [rax],al
  43579e:	add    BYTE PTR [rax],al
  4357a0:	mov    al,0x5f
  4357a2:	add    eax,DWORD PTR [rax]
  4357a4:	add    BYTE PTR [rax],al
  4357a6:	add    BYTE PTR [rax],al
  4357a8:	mov    esi,0x35f
  4357ad:	add    BYTE PTR [rax],al
  4357af:	add    dh,cl
  4357b1:	pop    rdi
  4357b2:	add    eax,DWORD PTR [rax]
  4357b4:	add    BYTE PTR [rax],al
  4357b6:	add    BYTE PTR [rax],al
  4357b8:	loopne 0x435819
  4357ba:	add    eax,DWORD PTR [rax]
  4357bc:	add    BYTE PTR [rax],al
  4357be:	add    BYTE PTR [rax],al
  4357c0:	hlt    
  4357c1:	pop    rdi
  4357c2:	add    eax,DWORD PTR [rax]
  4357c4:	add    BYTE PTR [rax],al
  4357c6:	add    BYTE PTR [rax],al
  4357c8:	(bad)  
  4357c9:	pop    rdi
  4357ca:	add    eax,DWORD PTR [rax]
  4357cc:	add    BYTE PTR [rax],al
  4357ce:	add    BYTE PTR [rax],al
  4357d0:	or     al,0x60
  4357d2:	add    eax,DWORD PTR [rax]
  4357d4:	add    BYTE PTR [rax],al
  4357d6:	add    BYTE PTR [rax],al
  4357d8:	(bad)  
  4357d9:	(bad)  
  4357da:	add    eax,DWORD PTR [rax]
  4357dc:	add    BYTE PTR [rax],al
  4357de:	add    BYTE PTR [rax],al
  4357e0:	and    BYTE PTR [rax+0x3],ah
  4357e3:	add    BYTE PTR [rax],al
  4357e5:	add    BYTE PTR [rax],al
  4357e7:	add    BYTE PTR [rdx],ch
  4357e9:	(bad)  
  4357ea:	add    eax,DWORD PTR [rax]
  4357ec:	add    BYTE PTR [rax],al
  4357ee:	add    BYTE PTR [rax],al
  4357f0:	ss (bad) 
  4357f2:	add    eax,DWORD PTR [rax]
  4357f4:	add    BYTE PTR [rax],al
  4357f6:	add    BYTE PTR [rax],al
  4357f8:	rex.W (bad) 
  4357fa:	add    eax,DWORD PTR [rax]
  4357fc:	add    BYTE PTR [rax],al
  4357fe:	add    BYTE PTR [rax],al
  435800:	push   rsp
  435801:	(bad)  
  435802:	add    eax,DWORD PTR [rax]
  435804:	add    BYTE PTR [rax],al
  435806:	add    BYTE PTR [rax],al
  435808:	fs (bad) 
  43580a:	add    eax,DWORD PTR [rax]
  43580c:	add    BYTE PTR [rax],al
  43580e:	add    BYTE PTR [rax],al
  435810:	ins    BYTE PTR es:[rdi],dx
  435811:	(bad)  
  435812:	add    eax,DWORD PTR [rax]
  435814:	add    BYTE PTR [rax],al
  435816:	add    BYTE PTR [rax],al
  435818:	js     0x43587a
  43581a:	add    eax,DWORD PTR [rax]
  43581c:	add    BYTE PTR [rax],al
  43581e:	add    BYTE PTR [rax],al
  435820:	(bad)  
  435821:	(bad)  
  435822:	add    eax,DWORD PTR [rax]
  435824:	add    BYTE PTR [rax],al
  435826:	add    BYTE PTR [rax],al
  435828:	mov    fs,WORD PTR [rax+0x3]
  43582b:	add    BYTE PTR [rax],al
  43582d:	add    BYTE PTR [rax],al
  43582f:	add    BYTE PTR [rax+0x360],bl
  435835:	add    BYTE PTR [rax],al
  435837:	add    BYTE PTR [rdx+0x360],ah
  43583d:	add    BYTE PTR [rax],al
  43583f:	add    BYTE PTR [rsi+0x360],ch
  435845:	add    BYTE PTR [rax],al
  435847:	add    BYTE PTR [rsi+0x360],dh
  43584d:	add    BYTE PTR [rax],al
  43584f:	add    al,al
  435851:	(bad)  
  435852:	add    eax,DWORD PTR [rax]
  435854:	add    BYTE PTR [rax],al
  435856:	add    BYTE PTR [rax],al
  435858:	enter  0x360,0x0
  43585c:	add    BYTE PTR [rax],al
  43585e:	add    BYTE PTR [rax],al
  435860:	shl    BYTE PTR [rax+0x3],cl
  435863:	add    BYTE PTR [rax],al
  435865:	add    BYTE PTR [rax],al
  435867:	add    ah,bl
  435869:	(bad)  
  43586a:	add    eax,DWORD PTR [rax]
  43586c:	add    BYTE PTR [rax],al
  43586e:	add    BYTE PTR [rax],al
  435870:	in     al,0x60
  435872:	add    eax,DWORD PTR [rax]
  435874:	add    BYTE PTR [rax],al
  435876:	add    BYTE PTR [rax],al
  435878:	in     al,dx
  435879:	(bad)  
  43587a:	add    eax,DWORD PTR [rax]
  43587c:	add    BYTE PTR [rax],al
  43587e:	add    BYTE PTR [rax],al
  435880:	mul    BYTE PTR [rax+0x3]
  435883:	add    BYTE PTR [rax],al
  435885:	add    BYTE PTR [rax],al
  435887:	add    dh,bh
  435889:	(bad)  
  43588a:	add    eax,DWORD PTR [rax]
  43588c:	add    BYTE PTR [rax],al
  43588e:	add    BYTE PTR [rax],al
  435890:	(bad)  
  435891:	(bad)  
  435892:	add    eax,DWORD PTR [rax]
  435894:	add    BYTE PTR [rax],al
  435896:	add    BYTE PTR [rax],al
  435898:	(bad)  
  435899:	(bad)  
  43589a:	add    eax,DWORD PTR [rax]
  43589c:	add    BYTE PTR [rax],al
  43589e:	add    BYTE PTR [rax],al
  4358a0:	(bad)  
  4358a1:	(bad)  
  4358a2:	add    eax,DWORD PTR [rax]
  4358a4:	add    BYTE PTR [rax],al
  4358a6:	add    BYTE PTR [rax],al
  4358a8:	(bad)  
  4358a9:	(bad)  
  4358aa:	add    eax,DWORD PTR [rax]
  4358ac:	add    BYTE PTR [rax],al
  4358ae:	add    BYTE PTR [rax],al
  4358b0:	sub    BYTE PTR [rcx+0x3],ah
  4358b3:	add    BYTE PTR [rax],al
  4358b5:	add    BYTE PTR [rax],al
  4358b7:	add    BYTE PTR [rdx],dh
  4358b9:	(bad)  
  4358ba:	add    eax,DWORD PTR [rax]
  4358bc:	add    BYTE PTR [rax],al
  4358be:	add    BYTE PTR [rax],al
  4358c0:	cmp    al,0x61
  4358c2:	add    eax,DWORD PTR [rax]
  4358c4:	add    BYTE PTR [rax],al
  4358c6:	add    BYTE PTR [rax],al
  4358c8:	rex.RX (bad) 
  4358ca:	add    eax,DWORD PTR [rax]
  4358cc:	add    BYTE PTR [rax],al
  4358ce:	add    BYTE PTR [rax],al
  4358d0:	push   rax
  4358d1:	(bad)  
  4358d2:	add    eax,DWORD PTR [rax]
  4358d4:	add    BYTE PTR [rax],al
  4358d6:	add    BYTE PTR [rax],al
  4358d8:	pop    rdx
  4358d9:	(bad)  
  4358da:	add    eax,DWORD PTR [rax]
  4358dc:	add    BYTE PTR [rax],al
  4358de:	add    BYTE PTR [rax],al
  4358e0:	fs (bad) 
  4358e2:	add    eax,DWORD PTR [rax]
  4358e4:	add    BYTE PTR [rax],al
  4358e6:	add    BYTE PTR [rax],al
  4358e8:	jb     0x43594b
  4358ea:	add    eax,DWORD PTR [rax]
  4358ec:	add    BYTE PTR [rax],al
  4358ee:	add    BYTE PTR [rax],al
  4358f0:	jl     0x435953
  4358f2:	add    eax,DWORD PTR [rax]
  4358f4:	add    BYTE PTR [rax],al
  4358f6:	add    BYTE PTR [rax],al
  4358f8:	mov    BYTE PTR [rcx+0x3],ah
  4358fb:	add    BYTE PTR [rax],al
  4358fd:	add    BYTE PTR [rax],al
  4358ff:	add    BYTE PTR [rdx+0x361],dl
  435905:	add    BYTE PTR [rax],al
  435907:	add    BYTE PTR [rcx+riz*2+0x3],bl
  43590e:	add    BYTE PTR [rax],al
  435910:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  435911:	(bad)  
  435912:	add    eax,DWORD PTR [rax]
  435914:	add    BYTE PTR [rax],al
  435916:	add    BYTE PTR [rax],al
  435918:	mov    al,0x61
  43591a:	add    eax,DWORD PTR [rax]
  43591c:	add    BYTE PTR [rax],al
  43591e:	add    BYTE PTR [rax],al
  435920:	mov    eax,0x361
  435925:	add    BYTE PTR [rax],al
  435927:	add    dl,al
  435929:	(bad)  
  43592a:	add    eax,DWORD PTR [rax]
  43592c:	add    BYTE PTR [rax],al
  43592e:	add    BYTE PTR [rax],al
  435930:	(bad)  
  435931:	(bad)  
  435932:	add    eax,DWORD PTR [rax]
  435934:	add    BYTE PTR [rax],al
  435936:	add    BYTE PTR [rax],al
  435938:	fsub   DWORD PTR [rcx+0x3]
  43593b:	add    BYTE PTR [rax],al
  43593d:	add    BYTE PTR [rax],al
  43593f:	add    dl,ah
  435941:	(bad)  
  435942:	add    eax,DWORD PTR [rax]
  435944:	add    BYTE PTR [rax],al
  435946:	add    BYTE PTR [rax],al
  435948:	in     al,dx
  435949:	(bad)  
  43594a:	add    eax,DWORD PTR [rax]
  43594c:	add    BYTE PTR [rax],al
  43594e:	add    BYTE PTR [rax],al
  435950:	mul    BYTE PTR [rcx+0x3]
  435953:	add    BYTE PTR [rax],al
  435955:	add    BYTE PTR [rax],al
  435957:	add    BYTE PTR [rax],al
  435959:	(bad)  
  43595b:	add    BYTE PTR [rax],al
  43595d:	add    BYTE PTR [rax],al
  43595f:	add    BYTE PTR [rdx],cl
  435961:	(bad)  
  435963:	add    BYTE PTR [rax],al
  435965:	add    BYTE PTR [rax],al
  435967:	add    BYTE PTR [rsi],dl
  435969:	(bad)  
  43596b:	add    BYTE PTR [rax],al
  43596d:	add    BYTE PTR [rax],al
  43596f:	add    BYTE PTR [rax],ah
  435971:	(bad)  
  435973:	add    BYTE PTR [rax],al
  435975:	add    BYTE PTR [rax],al
  435977:	add    BYTE PTR [rdx],ch
  435979:	(bad)  
  43597b:	add    BYTE PTR [rax],al
  43597d:	add    BYTE PTR [rax],al
  43597f:	add    BYTE PTR [rdx+riz*2],dh
  435982:	add    eax,DWORD PTR [rax]
  435984:	add    BYTE PTR [rax],al
  435986:	add    BYTE PTR [rax],al
  435988:	ds (bad) 
  43598b:	add    BYTE PTR [rax],al
  43598d:	add    BYTE PTR [rax],al
  43598f:	add    BYTE PTR [rax+0x62],cl
  435992:	add    eax,DWORD PTR [rax]
  435994:	add    BYTE PTR [rax],al
  435996:	add    BYTE PTR [rax],al
  435998:	push   rdx
  435999:	(bad)  
  43599b:	add    BYTE PTR [rax],al
  43599d:	add    BYTE PTR [rax],al
  43599f:	add    BYTE PTR [rdx+riz*2+0x3],bl
  4359a3:	add    BYTE PTR [rax],al
  4359a5:	add    BYTE PTR [rax],al
  4359a7:	add    BYTE PTR [rsi+0x62],ah
  4359aa:	add    eax,DWORD PTR [rax]
  4359ac:	add    BYTE PTR [rax],al
  4359ae:	add    BYTE PTR [rax],al
  4359b0:	jo     0x435a14
  4359b2:	add    eax,DWORD PTR [rax]
  4359b4:	add    BYTE PTR [rax],al
  4359b6:	add    BYTE PTR [rax],al
  4359b8:	jl     0x435a1c
  4359ba:	add    eax,DWORD PTR [rax]
  4359bc:	add    BYTE PTR [rax],al
  4359be:	add    BYTE PTR [rax],al
  4359c0:	mov    BYTE PTR [rdx+0x3],ah
  4359c3:	add    BYTE PTR [rax],al
  4359c5:	add    BYTE PTR [rax],al
  4359c7:	add    BYTE PTR [rdx+0x362],dl
  4359cd:	add    BYTE PTR [rax],al
  4359cf:	add    BYTE PTR [rdx+riz*2+0x3],bl
  4359d6:	add    BYTE PTR [rax],al
  4359d8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4359d9:	(bad)  
  4359db:	add    BYTE PTR [rax],al
  4359dd:	add    BYTE PTR [rax],al
  4359df:	add    BYTE PTR [rdx+0x362],dh
  4359e5:	add    BYTE PTR [rax],al
  4359e7:	add    BYTE PTR [rdx+0x362],bh
  4359ed:	add    BYTE PTR [rax],al
  4359ef:	add    dl,al
  4359f1:	(bad)  
  4359f3:	add    BYTE PTR [rax],al
  4359f5:	add    BYTE PTR [rax],al
  4359f7:	add    ah,cl
  4359f9:	(bad)  
  4359fb:	add    BYTE PTR [rax],al
  4359fd:	add    BYTE PTR [rax],al
  4359ff:	add    dh,dl
  435a01:	(bad)  
  435a03:	add    BYTE PTR [rax],al
  435a05:	add    BYTE PTR [rax],al
  435a07:	add    al,ah
  435a09:	(bad)  
  435a0b:	add    BYTE PTR [rax],al
  435a0d:	add    BYTE PTR [rax],al
  435a0f:	add    dl,ch
  435a11:	(bad)  
  435a13:	add    BYTE PTR [rax],al
  435a15:	add    BYTE PTR [rax],al
  435a17:	add    ah,dh
  435a19:	(bad)  
	...
  435a27:	add    dh,bh
  435a29:	(bad)  
	...
  435a37:	add    BYTE PTR [rbx+riz*2],cl
  435a3a:	add    eax,DWORD PTR [rax]
  435a3c:	add    BYTE PTR [rax],al
  435a3e:	add    BYTE PTR [rax],al
  435a40:	sbb    BYTE PTR [rbx+0x3],ah
  435a43:	add    BYTE PTR [rax],al
  435a45:	add    BYTE PTR [rax],al
  435a47:	add    BYTE PTR [rax],ch
  435a49:	movsxd eax,DWORD PTR [rbx]
	...
  435a57:	add    BYTE PTR [rax],al
  435a59:	add    BYTE PTR [rbx+0x75],ah
  435a5c:	jb     0x435aca
  435a5e:	pop    rdi
  435a5f:	gs (bad) 
  435a61:	jae    0x435adc
  435a63:	pop    rdi
  435a64:	movsxd ebp,DWORD PTR [rbp+riz*2+0x61]
  435a68:	outs   dx,BYTE PTR ds:[rsi]
  435a69:	jne    0x435adb
  435a6b:	add    BYTE PTR [rdx],al
  435a6d:	add    BYTE PTR [rbx+0x75],ah
  435a70:	jb     0x435ade
  435a72:	pop    rdi
  435a73:	gs (bad) 
  435a75:	jae    0x435af0
  435a77:	pop    rdi
  435a78:	gs jae 0x435ade
  435a7b:	(bad)  
  435a7c:	jo     0x435ae3
  435a7e:	add    BYTE PTR [rax],al
  435a80:	add    eax,DWORD PTR [rax]
  435a82:	movsxd esi,DWORD PTR [rbp+0x72]
  435a85:	ins    BYTE PTR es:[rdi],dx
  435a86:	pop    rdi
  435a87:	gs (bad) 
  435a89:	jae    0x435b04
  435a8b:	pop    rdi
  435a8c:	addr32 gs je 0x435af9
  435a90:	outs   dx,BYTE PTR ds:[rsi]
  435a91:	outs   dx,WORD PTR ds:[rsi]
  435a93:	add    BYTE PTR [rax+rax*1],al
  435a96:	movsxd esi,DWORD PTR [rbp+0x72]
  435a99:	ins    BYTE PTR es:[rdi],dx
  435a9a:	pop    rdi
  435a9b:	gs (bad) 
  435a9d:	jae    0x435b18
  435a9f:	pop    rdi
  435aa0:	imul   ebp,DWORD PTR [rsi+0x69],0x74
  435aa7:	add    BYTE PTR [rip+0x72756300],al        # 0x72b8bdad
  435aad:	ins    BYTE PTR es:[rdi],dx
  435aae:	pop    rdi
  435aaf:	gs (bad) 
  435ab1:	jae    0x435b2c
  435ab3:	pop    rdi
  435ab4:	jo     0x435b17
  435ab6:	jne    0x435b2b
  435ab8:	add    BYTE PTR gs:[rax],al
  435abb:	add    BYTE PTR [rsi],al
  435abd:	add    BYTE PTR [rbx+0x75],ah
  435ac0:	jb     0x435b2e
  435ac2:	pop    rdi
  435ac3:	gs (bad) 
  435ac5:	jae    0x435b40
  435ac7:	pop    rdi
  435ac8:	jo     0x435b2f
  435aca:	jb     0x435b32
  435acc:	outs   dx,DWORD PTR ds:[rsi]
  435acd:	jb     0x435b3c
  435acf:	add    BYTE PTR [rdx],cl
  435ad1:	add    BYTE PTR [rbx+0x75],ah
  435ad4:	jb     0x435b42
  435ad6:	pop    rdi
  435ad7:	gs (bad) 
  435ad9:	jae    0x435b54
  435adb:	pop    rdi
  435adc:	jae    0x435b43
  435ade:	je     0x435b4f
  435ae0:	jo     0x435b56
  435ae2:	add    BYTE PTR [rax],al
  435ae4:	or     eax,DWORD PTR [rax]
  435ae6:	movsxd esi,DWORD PTR [rbp+0x72]
  435ae9:	ins    BYTE PTR es:[rdi],dx
  435aea:	pop    rdi
  435aeb:	gs (bad) 
  435aed:	jae    0x435b68
  435aef:	pop    rdi
  435af0:	jae    0x435b66
  435af2:	jb     0x435b59
  435af4:	jb     0x435b68
  435af6:	outs   dx,DWORD PTR ds:[rsi]
  435af7:	jb     0x435af9
  435af9:	add    BYTE PTR [rax],al
  435afb:	add    BYTE PTR [rsi],cl
  435afd:	add    BYTE PTR [rbx+0x75],ah
  435b00:	jb     0x435b6e
  435b02:	pop    rdi
  435b03:	outs   dx,WORD PTR ds:[rsi]
  435b05:	jb     0x435b74
  435b07:	(bad)  
  435b08:	fs add BYTE PTR fs:[rax],al
  435b0c:	verr   WORD PTR [rbx+0x75]
  435b10:	jb     0x435b7e
  435b12:	pop    rdi
  435b13:	outs   dx,WORD PTR ds:[rsi]
  435b15:	jb     0x435b84
  435b17:	data16 jb 0x435b7f
  435b1a:	add    BYTE PTR gs:[rcx],dl
  435b1d:	add    BYTE PTR [rbx+0x75],ah
  435b20:	jb     0x435b8e
  435b22:	pop    rdi
  435b23:	data16 jb 0x435b8b
  435b26:	add    BYTE PTR gs:[rdx],dl
  435b29:	add    BYTE PTR [rbx+0x75],ah
  435b2c:	jb     0x435b9a
  435b2e:	pop    rdi
  435b2f:	addr32 gs je 0x435b97
  435b33:	(bad)  
  435b34:	je     0x435b9b
  435b36:	add    BYTE PTR [rax],al
  435b38:	adc    eax,DWORD PTR [rax]
  435b3a:	movsxd esi,DWORD PTR [rbp+0x72]
  435b3d:	ins    BYTE PTR es:[rdi],dx
  435b3e:	pop    rdi
  435b3f:	addr32 gs je 0x435ba8
  435b43:	outs   dx,BYTE PTR ds:[rsi]
  435b44:	jbe    0x435b46
  435b46:	add    BYTE PTR [rax],al
  435b48:	adc    al,0x0
  435b4a:	movsxd esi,DWORD PTR [rbp+0x72]
  435b4d:	ins    BYTE PTR es:[rdi],dx
  435b4e:	pop    rdi
  435b4f:	ins    BYTE PTR es:[edi],dx
  435b51:	outs   dx,DWORD PTR ds:[rsi]
  435b52:	(bad)
  435b57:	ins    BYTE PTR es:[rdi],dx
  435b58:	gs (bad) 
  435b5a:	outs   dx,BYTE PTR ds:[rsi]
  435b5b:	jne    0x435bcd
  435b5d:	add    BYTE PTR [rax],al
  435b5f:	add    BYTE PTR [rip+0x72756300],dl        # 0x72b8be65
  435b65:	ins    BYTE PTR es:[rdi],dx
  435b66:	pop    rdi
  435b67:	ins    BYTE PTR es:[edi],dx
  435b69:	outs   dx,DWORD PTR ds:[rsi]
  435b6a:	(bad)
  435b6f:	outs   dx,BYTE PTR ds:[rsi]
  435b70:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x75630017
  435b78:	jb     0x435be6
  435b7a:	pop    rdi
  435b7b:	ins    DWORD PTR es:[rdi],dx
  435b7c:	(bad)  
  435b7d:	jo     0x435bf1
  435b7f:	imul   ebp,DWORD PTR [rsi+0x74],0x180066
  435b86:	movsxd esi,DWORD PTR [rbp+0x72]
  435b89:	ins    BYTE PTR es:[rdi],dx
  435b8a:	pop    rdi
  435b8b:	ins    DWORD PTR es:[rdi],dx
  435b8c:	data16 jo 0x435c01
  435b8f:	imul   ebp,DWORD PTR [rsi+0x74],0x190066
  435b96:	movsxd esi,DWORD PTR [rbp+0x72]
  435b99:	ins    BYTE PTR es:[rdi],dx
  435b9a:	pop    rdi
  435b9b:	ins    DWORD PTR es:[rdi],dx
  435b9c:	jo     0x435c10
  435b9e:	imul   ebp,DWORD PTR [rsi+0x74],0x1a000066
  435ba5:	add    BYTE PTR [rbx+0x75],ah
  435ba8:	jb     0x435c16
  435baa:	pop    rdi
  435bab:	ins    DWORD PTR es:[rdi],dx
  435bac:	jae    0x435c1c
  435bae:	jo     0x435c22
  435bb0:	imul   ebp,DWORD PTR [rsi+0x74],0x66
  435bb7:	add    BYTE PTR [rbx],ch
  435bb9:	add    BYTE PTR [rbx+0x75],ah
  435bbc:	jb     0x435c2a
  435bbe:	pop    rdi
  435bbf:	ins    DWORD PTR es:[rdi],dx
  435bc0:	jbe    0x435c23
  435bc2:	jo     0x435c36
  435bc4:	imul   ebp,DWORD PTR [rsi+0x74],0x66
  435bcb:	add    BYTE PTR [rax+rax*1],ch
  435bce:	movsxd esi,DWORD PTR [rbp+0x72]
  435bd1:	ins    BYTE PTR es:[rdi],dx
  435bd2:	pop    rdi
  435bd3:	ins    DWORD PTR es:[rdi],dx
  435bd4:	jbe    0x435c3c
  435bd6:	jo     0x435c4a
  435bd8:	imul   ebp,DWORD PTR [rsi+0x74],0x66
  435bdf:	add    BYTE PTR [rsi],ch
  435be1:	add    BYTE PTR [rbx+0x75],ah
  435be4:	jb     0x435c52
  435be6:	pop    rdi
  435be7:	ins    DWORD PTR es:[rdi],dx
  435be8:	jbe    0x435c5d
  435bea:	outs   dx,BYTE PTR ds:[rsi]
  435beb:	jo     0x435c5f
  435bed:	imul   ebp,DWORD PTR [rsi+0x74],0x66
  435bf4:	add    BYTE PTR ss:[rbx+0x75],ah
  435bf8:	jb     0x435c66
  435bfa:	pop    rdi
  435bfb:	jae    0x435c69
  435bfd:	imul   esi,DWORD PTR [rbx+0x74],0x7070615f
  435c04:	outs   dx,BYTE PTR gs:[rsi]
  435c06:	add    BYTE PTR fs:[rdi],dh
  435c09:	add    BYTE PTR [rbx+0x75],ah
  435c0c:	jb     0x435c7a
  435c0e:	pop    rdi
  435c0f:	jae    0x435c7d
  435c11:	imul   esi,DWORD PTR [rbx+0x74],0x6572665f
  435c18:	gs pop rdi
  435c1a:	(bad)  
  435c1b:	ins    BYTE PTR es:[rdi],dx
  435c1c:	ins    BYTE PTR es:[rdi],dx
  435c1d:	add    BYTE PTR [rax],al
  435c1f:	add    BYTE PTR [rax],bh
  435c21:	add    BYTE PTR [rbx+0x75],ah
  435c24:	jb     0x435c92
  435c26:	pop    rdi
  435c27:	jae    0x435c9d
  435c29:	jb     0x435c90
  435c2b:	jno    0x435ca2
  435c2d:	(bad)  
  435c2e:	ins    BYTE PTR es:[rdi],dx
  435c2f:	add    BYTE PTR [rcx],bh
  435c31:	add    BYTE PTR [rbx+0x75],ah
  435c34:	jb     0x435ca2
  435c36:	pop    rdi
  435c37:	jae    0x435cad
  435c39:	jb     0x435ca9
  435c3b:	gs jno 0x435cb3
  435c3e:	(bad)  
  435c3f:	ins    BYTE PTR es:[rdi],dx
  435c40:	add    BYTE PTR [rax],al
  435c42:	add    BYTE PTR [rax],al
  435c44:	cmp    eax,DWORD PTR [rax]
  435c46:	movsxd esi,DWORD PTR [rbp+0x72]
  435c49:	ins    BYTE PTR es:[rdi],dx
  435c4a:	pop    rdi
  435c4b:	jbe    0x435cb2
  435c4d:	jb     0x435cc2
  435c4f:	imul   ebp,DWORD PTR [rdi+0x6e],0x3c0000
  435c56:	movsxd esi,DWORD PTR [rbp+0x72]
  435c59:	ins    BYTE PTR es:[rdi],dx
  435c5a:	pop    rdi
  435c5b:	jbe    0x435cc2
  435c5d:	jb     0x435cd2
  435c5f:	imul   ebp,DWORD PTR [rdi+0x6e],0x666e695f
  435c66:	outs   dx,DWORD PTR ds:[rsi]
  435c67:	add    al,bl
  435c69:	add    BYTE PTR [rbp+riz*2+0x6c],al
  435c6d:	gs je  0x435cd5
  435c70:	rex.XB jb 0x435cdc
  435c73:	je     0x435cde
  435c75:	movsxd esp,DWORD PTR [rcx+0x6c]
  435c78:	push   rbx
  435c79:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  435c7e:	outs   dx,BYTE PTR ds:[rsi]
  435c7f:	add    al,bh
  435c81:	add    BYTE PTR [rbp+0x6e],al
  435c84:	je     0x435ceb
  435c86:	jb     0x435ccb
  435c88:	jb     0x435cf3
  435c8a:	je     0x435cf5
  435c8c:	movsxd esp,DWORD PTR [rcx+0x6c]
  435c8f:	push   rbx
  435c90:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  435c95:	outs   dx,BYTE PTR ds:[rsi]
  435c96:	add    BYTE PTR [rax],al
  435c98:	sub    BYTE PTR [rcx],al
  435c9a:	rex.RB js 0x435d0d
  435c9d:	(bad)  
  435c9e:	outs   dx,BYTE PTR ds:[rsi]
  435c9f:	rex.RB outs dx,BYTE PTR fs:[rsi]
  435ca2:	jbe    0x435d0d
  435ca4:	jb     0x435d15
  435ca6:	outs   dx,BYTE PTR ds:[rsi]
  435ca7:	ins    DWORD PTR es:[rdi],dx
  435ca8:	outs   dx,BYTE PTR gs:[rsi]
  435caa:	je     0x435cff
  435cac:	je     0x435d20
  435cae:	imul   ebp,DWORD PTR [rsi+0x67],0x4b004173
  435cb5:	add    DWORD PTR [rsi+0x69],eax
  435cb8:	outs   dx,BYTE PTR ds:[rsi]
  435cb9:	rex.RX imul r14d,DWORD PTR fs:[rdx+0x73],0x6c6f5674
  435cc2:	jne    0x435d31
  435cc4:	gs push rdi
  435cc6:	add    BYTE PTR [rax],al
  435cc8:	push   rsi
  435cc9:	add    DWORD PTR [rsi+0x69],eax
  435ccc:	outs   dx,BYTE PTR ds:[rsi]
  435ccd:	fs rex.WRX
  435ccf:	gs js  0x435d46
  435cd2:	push   rsi
  435cd3:	outs   dx,DWORD PTR ds:[rsi]
  435cd4:	ins    BYTE PTR es:[rdi],dx
  435cd5:	jne    0x435d44
  435cd7:	gs push rdi
  435cd9:	add    BYTE PTR [rcx+rax*1+0x46],bl
  435cdd:	imul   ebp,DWORD PTR [rsi+0x64],0x756c6f56
  435ce4:	ins    DWORD PTR es:[rdi],dx
  435ce5:	gs rex.XB ins BYTE PTR es:[rdi],dx
  435ce8:	outs   dx,DWORD PTR ds:[rsi]
  435ce9:	jae    0x435d50
  435ceb:	add    ch,cl
  435ced:	add    DWORD PTR [rdi+0x65],eax
  435cf0:	je     0x435d35
  435cf2:	jne    0x435d66
  435cf4:	jb     0x435d5b
  435cf6:	outs   dx,BYTE PTR ds:[rsi]
  435cf7:	je     0x435d49
  435cf9:	jb     0x435d6a
  435cfb:	movsxd esp,DWORD PTR [rbp+0x73]
  435cfe:	jae    0x435d00
  435d00:	(bad)  
  435d01:	add    DWORD PTR [rdi+0x65],eax
  435d04:	je     0x435d49
  435d06:	jne    0x435d7a
  435d08:	jb     0x435d6f
  435d0a:	outs   dx,BYTE PTR ds:[rsi]
  435d0b:	je     0x435d5d
  435d0d:	jb     0x435d7e
  435d0f:	movsxd esp,DWORD PTR [rbp+0x73]
  435d12:	jae    0x435d5d
  435d14:	fs add dl,dl
  435d17:	add    DWORD PTR [rdi+0x65],eax
  435d1a:	je     0x435d5f
  435d1c:	jne    0x435d90
  435d1e:	jb     0x435d85
  435d20:	outs   dx,BYTE PTR ds:[rsi]
  435d21:	je     0x435d77
  435d23:	push   0x64616572
  435d28:	rex.WB
  435d29:	add    BYTE PTR fs:[rax],al
  435d2c:	fld    QWORD PTR [rcx]
  435d2e:	rex.RXB
  435d2f:	gs je  0x435d76
  435d32:	imul   esi,DWORD PTR [rbx+0x6b],0x65657246
  435d39:	push   rbx
  435d3a:	jo     0x435d9d
  435d3c:	movsxd esp,DWORD PTR [rbp+0x45]
  435d3f:	js     0x435d98
  435d41:	add    dl,ch
  435d43:	add    DWORD PTR [rdi+0x65],eax
  435d46:	je     0x435d8d
  435d48:	outs   dx,BYTE PTR ds:[rsi]
  435d49:	jbe    0x435db4
  435d4b:	jb     0x435dbc
  435d4d:	outs   dx,BYTE PTR ds:[rsi]
  435d4e:	ins    DWORD PTR es:[rdi],dx
  435d4f:	outs   dx,BYTE PTR gs:[rsi]
  435d51:	je     0x435da9
  435d53:	(bad)  
  435d54:	jb     0x435dbf
  435d56:	(bad)  
  435d57:	(bad)  
  435d58:	ins    BYTE PTR es:[rdi],dx
  435d59:	gs add r11b,dil
  435d5d:	add    DWORD PTR [rdi+0x65],eax
  435d60:	je     0x435da8
  435d62:	imul   ebp,DWORD PTR [rbp+riz*2+0x49],0x726f666e
  435d6a:	ins    DWORD PTR es:[rdi],dx
  435d6b:	(bad)  
  435d6c:	je     0x435dd7
  435d6e:	outs   dx,DWORD PTR ds:[rsi]
  435d6f:	outs   dx,BYTE PTR ds:[rsi]
  435d70:	rex.X jns 0x435dbb
  435d73:	(bad)  
  435d74:	outs   dx,BYTE PTR ds:[rsi]
  435d75:	fs ins BYTE PTR es:[rdi],dx
  435d77:	add    BYTE PTR gs:[rax],al
  435d7a:	add    BYTE PTR [rdx],al
  435d7c:	rex.RXB
  435d7d:	gs je  0x435dc6
  435d80:	imul   ebp,DWORD PTR [rbp+riz*2+0x53],0x45657a69
  435d88:	js     0x435d8a
  435d8a:	add    al,BYTE PTR [rdx]
  435d8c:	rex.RXB
  435d8d:	gs je  0x435dd6
  435d90:	imul   ebp,DWORD PTR [rbp+riz*2+0x54],0x657079
  435d98:	adc    BYTE PTR [rdx],al
  435d9a:	rex.RXB
  435d9b:	gs je  0x435dea
  435d9e:	(bad)  
  435d9f:	jae    0x435e15
  435da1:	rex.RB jb 0x435e16
  435da4:	outs   dx,DWORD PTR ds:[rsi]
  435da5:	jb     0x435da7
  435da7:	add    BYTE PTR [rdx],ah
  435da9:	add    al,BYTE PTR [rdi+0x65]
  435dac:	je     0x435dfb
  435dae:	outs   dx,DWORD PTR ds:[rsi]
  435daf:	fs jne 0x435e1e
  435db2:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x41656d61
  435dbc:	add    BYTE PTR [rax],al
  435dbe:	jae    0x435dc2
  435dc0:	rex.RXB
  435dc1:	gs je  0x435e17
  435dc4:	je     0x435e27
  435dc6:	jb     0x435e3c
  435dc8:	jne    0x435e3a
  435dca:	rex.WB outs dx,BYTE PTR ds:[rsi]
  435dcc:	outs   dx,WORD PTR ds:[rsi]
  435dce:	add    BYTE PTR [r10+0x74654702],cl
  435dd5:	push   rbx
  435dd6:	jns    0x435e4b
  435dd8:	je     0x435e3f
  435dda:	ins    DWORD PTR es:[rdi],dx
  435ddb:	push   rsp
  435ddc:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  435de3:	ins    BYTE PTR es:[rdi],dx
  435de4:	gs push rsp
  435de6:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  435ded:	gs je  0x435e44
  435df0:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  435df7:	je     0x435df9
  435df9:	add    BYTE PTR [rdx+0x74654702],bh
  435dff:	push   rsi
  435e00:	outs   dx,DWORD PTR ds:[rsi]
  435e01:	ins    BYTE PTR es:[rdi],dx
  435e02:	jne    0x435e71
  435e04:	rex.WB outs dx,BYTE PTR gs:[rsi]
  435e07:	outs   dx,WORD PTR ds:[rsi]
  435e09:	jb     0x435e78
  435e0b:	(bad)  
  435e0c:	je     0x435e77
  435e0e:	outs   dx,DWORD PTR ds:[rsi]
  435e0f:	outs   dx,BYTE PTR ds:[rsi]
  435e10:	push   rdi
  435e11:	add    cl,bh
  435e13:	add    cl,BYTE PTR [rcx+0x6e]
  435e16:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  435e1e:	rex.XB jb 0x435e8a
  435e21:	je     0x435e8c
  435e23:	movsxd esp,DWORD PTR [rcx+0x6c]
  435e26:	push   rbx
  435e27:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  435e2c:	outs   dx,BYTE PTR ds:[rsi]
  435e2d:	add    BYTE PTR [rbx+0x3],cl
  435e30:	rex.WR
  435e31:	gs (bad) 
  435e33:	jbe    0x435e9a
  435e35:	rex.XB jb 0x435ea1
  435e38:	je     0x435ea3
  435e3a:	movsxd esp,DWORD PTR [rcx+0x6c]
  435e3d:	push   rbx
  435e3e:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  435e43:	outs   dx,BYTE PTR ds:[rsi]
  435e44:	add    BYTE PTR [rax],al
  435e46:	mov    ebx,0x65755103
  435e4b:	jb     0x435ec6
  435e4d:	push   rax
  435e4e:	gs jb  0x435eb7
  435e51:	outs   dx,DWORD PTR ds:[rsi]
  435e52:	jb     0x435ec1
  435e54:	(bad)  
  435e55:	outs   dx,BYTE PTR ds:[rsi]
  435e56:	movsxd esp,DWORD PTR [rbp+0x43]
  435e59:	outs   dx,DWORD PTR ds:[rsi]
  435e5a:	jne    0x435eca
  435e5c:	je     0x435ec3
  435e5e:	jb     0x435e60
  435e60:	add    DWORD PTR [rdx+rdx*2],eax
  435e63:	je     0x435ed1
  435e65:	rex.B
  435e66:	fs fs rex.RX jne 0x435ed9
  435e6b:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  435e6f:	outs   dx,BYTE PTR ds:[rsi]
  435e70:	push   rsp
  435e71:	(bad)  
  435e72:	(bad)  
  435e73:	ins    BYTE PTR es:[rdi],dx
  435e74:	add    BYTE PTR gs:[rdx],al
  435e77:	add    al,0x52
  435e79:	je     0x435ee7
  435e7b:	rex.XB (bad) 
  435e7d:	jo     0x435ef3
  435e7f:	jne    0x435ef3
  435e81:	rex.XB outs dx,DWORD PTR gs:[rsi]
  435e84:	outs   dx,BYTE PTR ds:[rsi]
  435e85:	je     0x435eec
  435e87:	js     0x435efd
  435e89:	add    BYTE PTR [rcx],cl
  435e8b:	add    al,0x52
  435e8d:	je     0x435efb
  435e8f:	rex.WR outs dx,DWORD PTR ds:[rsi]
  435e91:	outs   dx,DWORD PTR ds:[rsi]
  435e92:	imul   esi,DWORD PTR [rbp+0x70],0x46
  435e96:	jne    0x435f06
  435e98:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  435e9c:	outs   dx,BYTE PTR ds:[rsi]
  435e9d:	rex.RB outs dx,BYTE PTR ds:[rsi]
  435e9f:	je     0x435f13
  435ea1:	jns    0x435ea3
  435ea3:	add    BYTE PTR [rax],dl
  435ea5:	add    al,0x52
  435ea7:	je     0x435f15
  435ea9:	push   rsi
  435eaa:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  435eb1:	outs   dx,BYTE PTR ds:[rsi]
  435eb2:	ja     0x435f1d
  435eb4:	outs   dx,BYTE PTR ds:[rsi]
  435eb5:	add    BYTE PTR fs:[rax],al
  435eb8:	adc    al,0x4
  435eba:	push   rbx
  435ebb:	gs (bad) 
  435ebd:	jb     0x435f22
  435ebf:	push   0x68746150
  435ec4:	add    BYTE PTR [r13+0x4],cl
  435ec8:	push   rbx
  435ec9:	gs je  0x435f11
  435ecc:	outs   dx,BYTE PTR ds:[rsi]
  435ecd:	fs rex.WRXB
  435ecf:	imul   r13w,WORD PTR [rbp+r12*2+0x0],0x6000
  435ed7:	add    al,0x53
  435ed9:	gs je  0x435f22
  435edc:	imul   ebp,DWORD PTR [rbp+riz*2+0x50],0x746e696f
  435ee4:	gs jb  0x435ee7
  435ee7:	add    BYTE PTR [rdi+0x74655304],bl
  435eed:	push   rbp
  435eee:	outs   dx,BYTE PTR ds:[rsi]
  435eef:	push   0x6c646e61
  435ef4:	gs fs rex.RB js 0x435f5c
  435ef9:	gs jo  0x435f70
  435efc:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  435f03:	gs jb  0x435f06
  435f06:	lods   al,BYTE PTR ds:[rsi]
  435f07:	add    al,0x53
  435f09:	ins    BYTE PTR es:[rdi],dx
  435f0a:	gs gs jo 0x435f0e
  435f0e:	mov    edx,0x72655404
  435f13:	ins    DWORD PTR es:[rdi],dx
  435f14:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  435f1b:	outs   dx,DWORD PTR ds:[rsi]
  435f1c:	movsxd esp,DWORD PTR [rbp+0x73]
  435f1f:	jae    0x435f21
  435f21:	add    cl,al
  435f23:	add    al,0x54
  435f25:	ins    BYTE PTR es:[rdi],dx
  435f26:	jae    0x435f6f
  435f28:	gs je  0x435f81
  435f2b:	(bad)  
  435f2c:	ins    BYTE PTR es:[rdi],dx
  435f2d:	jne    0x435f94
  435f2f:	add    dh,cl
  435f31:	add    al,0x55
  435f33:	outs   dx,BYTE PTR ds:[rsi]
  435f34:	push   0x6c646e61
  435f39:	gs fs rex.RB js 0x435fa1
  435f3e:	gs jo  0x435fb5
  435f41:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  435f48:	gs jb  0x435f4b
  435f4b:	add    ah,ch
  435f4d:	add    al,0x56
  435f4f:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  435f56:	jb     0x435fc7
  435f58:	je     0x435fbf
  435f5a:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  435f5e:	out    dx,al
  435f5f:	add    al,0x56
  435f61:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  435f68:	jne    0x435fcf
  435f6a:	jb     0x435fe5
  435f6c:	add    BYTE PTR [rax],al
  435f6e:	(bad)  
  435f6f:	add    BYTE PTR [rdi+0x5f],bl
  435f72:	rex.XB pop r15
  435f74:	jae    0x435fe6
  435f76:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  435f7a:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  435f81:	ins    BYTE PTR es:[rdi],dx
  435f82:	gs jb  0x435f85
  435f85:	add    BYTE PTR [rsi+0x0],cl
  435f88:	pop    rdi
  435f89:	pop    rdi
  435f8a:	fs ins BYTE PTR es:[rdi],dx
  435f8c:	ins    BYTE PTR es:[rdi],dx
  435f8d:	outs   dx,DWORD PTR ds:[rsi]
  435f8e:	outs   dx,BYTE PTR ds:[rsi]
  435f8f:	gs js  0x435ffb
  435f92:	je     0x435f94
  435f94:	push   rcx
  435f95:	add    BYTE PTR [rdi+0x5f],bl
  435f98:	addr32 gs je 0x436009
  435f9c:	(bad)  
  435f9d:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  435fa4:	push   rdx
  435fa5:	add    BYTE PTR [rdi+0x5f],bl
  435fa8:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  435faf:	add    BYTE PTR [rbx+0x0],dl
  435fb2:	pop    rdi
  435fb3:	pop    rdi
  435fb4:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  435fbb:	movsxd eax,DWORD PTR [rax]
  435fbd:	add    BYTE PTR [rdx+0x0],bl
  435fc0:	pop    rdi
  435fc1:	pop    rdi
  435fc2:	ins    BYTE PTR es:[rdi],dx
  435fc3:	movsxd ebp,DWORD PTR [rdi+0x6e]
  435fc6:	jbe    0x436027
  435fc8:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  435fcf:	add    BYTE PTR [rdi+0x5f],bl
  435fd2:	jae    0x436039
  435fd4:	je     0x436035
  435fd6:	(bad)  
  435fd7:	jo     0x436049
  435fd9:	pop    rdi
  435fda:	je     0x436055
  435fdc:	jo     0x436043
  435fde:	add    BYTE PTR [rax],al
  435fe0:	(bad)  
  435fe1:	add    BYTE PTR [rdi+0x5f],bl
  435fe4:	jae    0x43604b
  435fe6:	je     0x43605d
  435fe8:	jae    0x43604f
  435fea:	jb     0x436059
  435fec:	(bad)  
  435fed:	je     0x436057
  435fef:	gs jb  0x436064
  435ff2:	add    BYTE PTR [rax],al
  435ff4:	jno    0x435ff6
  435ff6:	pop    rdi
  435ff7:	(bad)  
  435ff8:	movsxd ebp,DWORD PTR [rbp+0x64]
  435ffb:	ins    BYTE PTR es:[rdi],dx
  435ffc:	outs   dx,BYTE PTR ds:[rsi]
  435ffd:	add    BYTE PTR [rax+0x0],bh
  436000:	pop    rdi
  436001:	(bad)  
  436002:	ins    DWORD PTR es:[rdi],dx
  436003:	jae    0x43606c
  436005:	pop    rdi
  436006:	gs js  0x436072
  436009:	je     0x43600b
  43600b:	add    BYTE PTR [rdx+0x65635f00],cl
  436011:	js     0x43607c
  436013:	je     0x436015
  436015:	add    BYTE PTR [rdx+0x72655f00],bh
  43601b:	jb     0x43608b
  43601d:	outs   dx,DWORD PTR ds:[rsi]
  43601e:	add    BYTE PTR [rax],al
  436020:	fiadd  DWORD PTR [rax]
  436022:	pop    rdi
  436023:	ins    WORD PTR es:[rdi],dx
  436025:	outs   dx,DWORD PTR ds:[rsi]
  436026:	fs add BYTE PTR gs:[rax],al
  43602a:	call   0x73a9bf2f
  43602f:	je     0x436092
  436031:	je     0x436069
  436033:	xor    al,0x0
  436035:	add    dl,bh
  436037:	add    BYTE PTR [rdi+0x67],bl
  43603a:	gs je  0x43609c
  43603d:	outs   dx,DWORD PTR ds:[rsi]
  43603e:	jae    0x4360a6
  436040:	push   0x6c646e61
  436045:	add    BYTE PTR gs:[rax],al
  436048:	sbb    al,BYTE PTR [rcx]
  43604a:	pop    rdi
  43604b:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  436052:	ins    DWORD PTR es:[rdi],dx
  436053:	add    BYTE PTR [rdi+0x1],bh
  436056:	pop    rdi
  436057:	ins    BYTE PTR es:[rdi],dx
  436058:	outs   dx,DWORD PTR ds:[rsi]
  436059:	movsxd esp,DWORD PTR [rcx+0x6c]
  43605c:	je     0x4360c7
  43605e:	ins    DWORD PTR es:[rdi],dx
  43605f:	gs ss xor al,0x0
  436063:	add    BYTE PTR [rax+0x6f6c5f01],al
  436069:	movsxd ebp,DWORD PTR [rbx+0x0]
  43606c:	mov    DWORD PTR [rcx],eax
  43606e:	pop    rdi
  43606f:	ins    BYTE PTR es:[rdi],dx
  436070:	jae    0x4360d7
  436072:	imul   ebp,DWORD PTR gs:[rcx+0x36],0x34
  436077:	add    BYTE PTR [rip+0x6e6f5f02],ah        # 0x6eb2bf7f
  43607d:	gs js  0x4360e9
  436080:	je     0x436082
  436082:	lods   eax,DWORD PTR ds:[rsi]
  436083:	add    bl,BYTE PTR [rdi+0x74]
  436086:	gs ins BYTE PTR es:[rdi],dx
  436088:	ins    BYTE PTR es:[rdi],dx
  436089:	imul   esi,DWORD PTR [rsi],0xaf000034
  43608f:	add    bl,BYTE PTR [rdi+0x74]
  436092:	imul   ebp,DWORD PTR [rbp+0x65],0xc4003436
  436099:	add    bl,BYTE PTR [rdi+0x75]
  43609c:	outs   dx,BYTE PTR ds:[rsi]
  43609d:	ins    BYTE PTR es:[rdi],dx
  43609e:	outs   dx,DWORD PTR ds:[rsi]
  43609f:	movsxd ebp,DWORD PTR [rbx+0x0]
  4360a2:	mov    BYTE PTR [rdx],0x5f
  4360a5:	jne    0x43611b
  4360a7:	imul   ebp,DWORD PTR [rbp+0x65],0x3436
  4360ae:	jg     0x4360b3
  4360b0:	(bad)  
  4360b1:	(bad)  
  4360b2:	outs   dx,DWORD PTR ds:[rsi]
  4360b3:	jb     0x436129
  4360b5:	add    BYTE PTR [rax+0x6c616303],dl
  4360bb:	ins    BYTE PTR es:[rdi],dx
  4360bc:	outs   dx,DWORD PTR ds:[rsi]
  4360bd:	movsxd eax,DWORD PTR [rax]
  4360bf:	add    BYTE PTR [rbp+0x69786503],bl
  4360c5:	je     0x4360c7
  4360c7:	add    BYTE PTR [rcx+0x6c636603],ah
  4360cd:	outs   dx,DWORD PTR ds:[rsi]
  4360ce:	jae    0x436135
  4360d0:	add    BYTE PTR [rax],al
  4360d2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4360d3:	add    esp,DWORD PTR [rsi+0x66]
  4360d6:	ins    BYTE PTR es:[rdi],dx
  4360d7:	jne    0x43614c
  4360d9:	push   0x3a70000
  4360de:	data16 addr32 gs je 0x436156
  4360e3:	add    BYTE PTR [rsi+0x706f6603],ch
  4360e9:	outs   dx,BYTE PTR gs:[rsi]
  4360eb:	add    BYTE PTR [rax+0x72706603],dh
  4360f1:	imul   ebp,DWORD PTR [rsi+0x74],0x3b20066
  4360f8:	data16 jo 0x436170
  4360fb:	je     0x436160
  4360fd:	add    BYTE PTR [rbx+0x75706603],dh
  436103:	je     0x436178
  436105:	add    BYTE PTR [rsi+0x65726603],dh
  43610b:	(bad)  
  43610c:	add    BYTE PTR fs:[rdi+0x65726603],dh
  436113:	add    BYTE PTR gs:[rax],al
  436116:	mov    ebp,0x65736603
  43611b:	imul   eax,DWORD PTR gs:[rax],0xffffffc2
  43611f:	add    esp,DWORD PTR [rsi+0x77]
  436122:	jb     0x43618d
  436124:	je     0x43618b
  436126:	add    BYTE PTR [rax],al
  436128:	(bad)  
  436129:	add    ebp,DWORD PTR [rcx+0x73]
  43612c:	(bad)  
  43612d:	ins    BYTE PTR es:[rdi],dx
  43612e:	outs   dx,BYTE PTR ds:[rsi]
  43612f:	jne    0x43619e
  436131:	add    bh,cl
  436133:	add    ebp,DWORD PTR [rcx+0x73]
  436136:	(bad)  
  436137:	ins    BYTE PTR es:[rdi],dx
  436138:	jo     0x4361a2
  43613a:	(bad)  
  43613b:	add    ah,dl
  43613d:	add    ebp,DWORD PTR [rcx+0x73]
  436140:	ins    BYTE PTR es:[rdi],dx
  436141:	outs   dx,DWORD PTR ds:[rsi]
  436142:	ja     0x4361a9
  436144:	jb     0x436146
  436146:	(bad)  
  436147:	add    ebp,DWORD PTR [rcx+0x73]
  43614a:	jo     0x4361be
  43614c:	imul   ebp,DWORD PTR [rsi+0x74],0x6903d700
  436153:	jae    0x4361c8
  436155:	jo     0x4361b8
  436157:	movsxd esp,DWORD PTR [rbp+0x0]
  43615a:	fadd   DWORD PTR [rbx]
  43615c:	imul   esi,DWORD PTR [rbx+0x75],0x72657070
  436163:	add    dl,ch
  436165:	add    ebp,DWORD PTR [rdi+rbp*2+0x63]
  436169:	(bad)  
  43616a:	ins    BYTE PTR es:[rdi],dx
  43616b:	movsxd ebp,DWORD PTR gs:[rdi+0x6e]
  43616f:	jbe    0x436171
  436171:	add    al,dh
  436173:	add    ebp,DWORD PTR [rbp+0x61]
  436176:	ins    BYTE PTR es:[rdi],dx
  436177:	ins    BYTE PTR es:[rdi],dx
  436178:	outs   dx,DWORD PTR ds:[rsi]
  436179:	movsxd eax,DWORD PTR [rax]
  43617b:	add    bl,dh
  43617d:	add    ebp,DWORD PTR [rbp+0x62]
  436180:	jae    0x4361f6
  436182:	outs   dx,DWORD PTR ds:[rsi]
  436183:	ja     0x4361e8
  436185:	jae    0x436187
  436187:	add    bh,dh
  436189:	add    ebp,DWORD PTR [rbp+0x65]
  43618c:	ins    DWORD PTR es:[rdi],dx
  43618d:	movsxd ebp,DWORD PTR [rbp+0x70]
  436190:	add    BYTE PTR [rax],al
  436192:	clc    
  436193:	add    ebp,DWORD PTR [rbp+0x65]
  436196:	ins    DWORD PTR es:[rdi],dx
  436197:	movsxd esi,DWORD PTR [rax+0x79]
  43619a:	add    BYTE PTR [rax],al
  43619c:	stc    
  43619d:	add    ebp,DWORD PTR [rbp+0x65]
  4361a0:	ins    DWORD PTR es:[rdi],dx
  4361a1:	ins    DWORD PTR es:[rdi],dx
  4361a2:	outs   dx,DWORD PTR ds:[rsi]
  4361a3:	jbe    0x43620a
  4361a5:	add    BYTE PTR [rcx],al
  4361a7:	add    al,0x70
  4361a9:	jb     0x436214
  4361ab:	outs   dx,BYTE PTR ds:[rsi]
  4361ac:	je     0x436214
  4361ae:	add    BYTE PTR [rax],al
  4361b0:	add    eax,0x74757004
  4361b5:	jae    0x4361b7
  4361b7:	add    BYTE PTR [rsp+rax*1],cl
  4361ba:	jb     0x436221
  4361bc:	(bad)  
  4361bd:	ins    BYTE PTR es:[rdi],dx
  4361be:	ins    BYTE PTR es:[rdi],dx
  4361bf:	outs   dx,DWORD PTR ds:[rsi]
  4361c0:	movsxd eax,DWORD PTR [rax]
  4361c2:	adc    al,0x4
  4361c4:	jae    0x43622b
  4361c6:	je     0x436234
  4361c8:	outs   dx,DWORD PTR ds:[rsi]
  4361c9:	movsxd esp,DWORD PTR [rcx+0x6c]
  4361cc:	add    BYTE PTR gs:[rsi],dl
  4361cf:	add    al,0x73
  4361d1:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  4361d8:	(bad)  
  4361d9:	add    al,0x73
  4361db:	jae    0x436240
  4361dd:	(bad)  
  4361de:	outs   dx,BYTE PTR ds:[rsi]
  4361df:	data16 add BYTE PTR [rax],al
  4361e2:	and    eax,DWORD PTR [rbx+rsi*2]
  4361e5:	je     0x436259
  4361e7:	movsxd ebp,DWORD PTR [rax+0x72]
  4361ea:	add    BYTE PTR [rax],al
  4361ec:	and    al,0x4
  4361ee:	jae    0x436264
  4361f0:	jb     0x436255
  4361f2:	ins    DWORD PTR es:[rdi],dx
  4361f3:	jo     0x4361f5
  4361f5:	add    BYTE PTR [rsi],ah
  4361f7:	add    al,0x73
  4361f9:	je     0x43626d
  4361fb:	movsxd esi,DWORD PTR [rax+0x79]
  4361fe:	add    BYTE PTR [rax],al
  436200:	sub    BYTE PTR [rbx+rsi*2],al
  436203:	je     0x436277
  436205:	movsxd esi,DWORD PTR [rbx+0x70]
  436208:	outs   dx,BYTE PTR ds:[rsi]
  436209:	add    BYTE PTR [rcx],ch
  43620b:	add    al,0x73
  43620d:	je     0x436281
  43620f:	gs jb  0x436284
  436212:	outs   dx,DWORD PTR ds:[rsi]
  436213:	jb     0x436215
  436215:	add    BYTE PTR [rbx],ch
  436217:	add    al,0x73
  436219:	je     0x43628d
  43621b:	ins    BYTE PTR es:[rdi],dx
  43621c:	outs   dx,BYTE PTR gs:[rsi]
  43621e:	add    BYTE PTR [rax],al
  436220:	cs add al,0x73
  436223:	je     0x436297
  436225:	outs   dx,BYTE PTR ds:[rsi]
  436226:	movsxd ebp,DWORD PTR [rbp+0x70]
  436229:	add    BYTE PTR [rdi],ch
  43622b:	add    al,0x73
  43622d:	je     0x4362a1
  43622f:	outs   dx,BYTE PTR ds:[rsi]
  436230:	movsxd esi,DWORD PTR [rax+0x79]
  436233:	add    BYTE PTR [rcx],dh
  436235:	add    al,0x73
  436237:	je     0x4362ab
  436239:	jo     0x43629d
  43623b:	jb     0x4362a8
  43623d:	add    BYTE PTR [rdx],dh
  43623f:	add    al,0x73
  436241:	je     0x4362b5
  436243:	jb     0x4362a8
  436245:	push   0x4340072
  43624a:	jae    0x4362c0
  43624c:	jb     0x4362c1
  43624e:	je     0x4362c2
  436250:	add    BYTE PTR [rax],al
  436252:	ss add al,0x73
  436255:	je     0x4362c9
  436257:	je     0x4362c8
  436259:	imul   eax,DWORD PTR [rax],0x0
  43625c:	cmp    BYTE PTR [rbx+rsi*2],al
  43625f:	je     0x4362d3
  436261:	je     0x4362d2
  436263:	ins    BYTE PTR es:[rdi],dx
  436264:	add    BYTE PTR [rax],al
  436266:	cmp    DWORD PTR [rbx+rsi*2],eax
  436269:	je     0x4362dd
  43626b:	je     0x4362dc
  43626d:	jne    0x4362db
  43626f:	add    BYTE PTR [rsi+0x4],cl
  436272:	jbe    0x4362da
  436274:	jo     0x4362e8
  436276:	imul   ebp,DWORD PTR [rsi+0x74],0x71000066
  43627d:	add    al,0x77
  43627f:	movsxd esi,DWORD PTR [rbx+0x74]
  436282:	outs   dx,DWORD PTR ds:[rsi]
  436283:	ins    DWORD PTR es:[rdi],dx
  436284:	(bad)  
  436286:	add    BYTE PTR [rax],al
  436288:	mov    DWORD PTR [rdi+rbx*2],eax
  43628b:	jae    0x436301
  43628d:	(bad)  
  43628e:	je     0x4362c6
  436290:	xor    al,0x0
  436292:	movabs ds:0x65746972775f04,eax
  43629b:	add    BYTE PTR [rsi+0x74735f04],bh
  4362a1:	jb     0x436307
  4362a3:	jne    0x436315
  4362a5:	add    cl,cl
  4362a7:	add    al,0x5f
  4362a9:	jae    0x436310
  4362ab:	je     0x43631a
  4362ad:	outs   dx,DWORD PTR ds:[rsi]
  4362ae:	fs add BYTE PTR gs:[rax],al
  4362b2:	int    0x4
  4362b4:	pop    rdi
  4362b5:	jb     0x43631c
  4362b7:	(bad)  
  4362b8:	fs add bl,dl
  4362bb:	add    al,0x5f
  4362bd:	outs   dx,DWORD PTR ds:[rsi]
  4362be:	jo     0x436325
  4362c0:	outs   dx,BYTE PTR ds:[rsi]
  4362c1:	add    ch,dl
  4362c3:	add    al,0x5f
  4362c5:	ins    DWORD PTR es:[rdi],dx
  4362c6:	imul   esp,DWORD PTR [rcx+rbp*2+0x72],0x0
  4362cb:	add    dh,bl
  4362cd:	add    al,0x5f
  4362cf:	imul   esi,DWORD PTR [rbx+0x61],0x797474
  4362d6:	in     al,0x4
  4362d8:	pop    rdi
  4362d9:	addr32 gs je 0x436340
  4362dd:	push   0x4e80000
  4362e2:	pop    rdi
  4362e3:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6f
  4362ea:	cld    
  4362eb:	add    al,0x5f
  4362ed:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
  4362f1:	add    BYTE PTR gs:[rax],al
  4362f4:	add    BYTE PTR [rip+0x6363615f],al        # 0x63a6c459
  4362fa:	gs jae 0x436370
  4362fd:	add    BYTE PTR [rdx+0x636f6900],ch
  436303:	je     0x436371
  436305:	jae    0x436376
  436307:	movsxd ebp,DWORD PTR [rbx+0x65]
  43630a:	je     0x43630c
  43630c:	rex.RX add BYTE PTR [rcx+0x6e],r13b
  436310:	data16 ins BYTE PTR es:[rdi],dx
  436312:	(bad)  
  436313:	je     0x43637a
  436315:	add    BYTE PTR [rax],al
  436317:	add    BYTE PTR [rax+rax*1+0x69],cl
  43631b:	outs   dx,BYTE PTR ds:[rsi]
  43631c:	data16 ins BYTE PTR es:[rdi],dx
  43631e:	(bad)  
  43631f:	je     0x436386
  436321:	rex.RB outs dx,BYTE PTR ds:[rsi]
  436323:	add    BYTE PTR fs:[rax],al
  436326:	add    BYTE PTR [rax],al
  436328:	rex.WRXB add BYTE PTR [r9+0x6e],r13b
  43632c:	data16 ins BYTE PTR es:[rdi],dx
  43632e:	(bad)  
  43632f:	je     0x436396
  436331:	rex.WB outs dx,BYTE PTR ds:[rsi]
  436333:	imul   esi,DWORD PTR [rdx+rsi*1+0x5f],0x3500000
  43633b:	add    BYTE PTR [rax],al
  43633d:	push   rax
  43633e:	add    eax,DWORD PTR [rax]
  436340:	add    BYTE PTR [rax+0x3],dl
  436343:	add    BYTE PTR [rax],al
  436345:	push   rax
  436346:	add    eax,DWORD PTR [rax]
  436348:	add    BYTE PTR [rax+0x3],dl
  43634b:	add    BYTE PTR [rax],al
  43634d:	push   rax
  43634e:	add    eax,DWORD PTR [rax]
  436350:	add    BYTE PTR [rax+0x3],dl
  436353:	add    BYTE PTR [rax],al
  436355:	push   rax
  436356:	add    eax,DWORD PTR [rax]
  436358:	add    BYTE PTR [rax+0x3],dl
  43635b:	add    BYTE PTR [rax],al
  43635d:	push   rax
  43635e:	add    eax,DWORD PTR [rax]
  436360:	add    BYTE PTR [rax+0x3],dl
  436363:	add    BYTE PTR [rax],al
  436365:	push   rax
  436366:	add    eax,DWORD PTR [rax]
  436368:	add    BYTE PTR [rax+0x3],dl
  43636b:	add    BYTE PTR [rax],al
  43636d:	push   rax
  43636e:	add    eax,DWORD PTR [rax]
  436370:	add    BYTE PTR [rax+0x3],dl
  436373:	add    BYTE PTR [rax],al
  436375:	push   rax
  436376:	add    eax,DWORD PTR [rax]
  436378:	add    BYTE PTR [rax+0x3],dl
  43637b:	add    BYTE PTR [rax],al
  43637d:	push   rax
  43637e:	add    eax,DWORD PTR [rax]
  436380:	add    BYTE PTR [rax+0x3],dl
  436383:	add    BYTE PTR [rax],al
  436385:	push   rax
  436386:	add    eax,DWORD PTR [rax]
  436388:	add    BYTE PTR [rax+0x3],dl
  43638b:	add    BYTE PTR [rax],al
  43638d:	push   rax
  43638e:	add    eax,DWORD PTR [rax]
  436390:	add    BYTE PTR [rax+0x3],dl
  436393:	add    BYTE PTR [rax],al
  436395:	push   rax
  436396:	add    eax,DWORD PTR [rax]
  436398:	add    BYTE PTR [rax+0x3],dl
  43639b:	add    BYTE PTR [rax],al
  43639d:	push   rax
  43639e:	add    eax,DWORD PTR [rax]
  4363a0:	add    BYTE PTR [rax+0x3],dl
  4363a3:	add    BYTE PTR [rax],al
  4363a5:	push   rax
  4363a6:	add    eax,DWORD PTR [rax]
  4363a8:	ins    BYTE PTR es:[rdi],dx
  4363a9:	imul   esp,DWORD PTR [rdx+0x63],0x2d6c7275
  4363b0:	xor    al,0x2e
  4363b2:	fs ins BYTE PTR es:[rdi],dx
  4363b4:	ins    BYTE PTR es:[rdi],dx
  4363b5:	add    BYTE PTR [rax],al
  4363b7:	add    BYTE PTR [rax+rdx*2],dl
  4363ba:	add    eax,DWORD PTR [rax]
  4363bc:	adc    al,0x50
  4363be:	add    eax,DWORD PTR [rax]
  4363c0:	adc    al,0x50
  4363c2:	add    eax,DWORD PTR [rax]
  4363c4:	adc    al,0x50
  4363c6:	add    eax,DWORD PTR [rax]
  4363c8:	adc    al,0x50
  4363ca:	add    eax,DWORD PTR [rax]
  4363cc:	adc    al,0x50
  4363ce:	add    eax,DWORD PTR [rax]
  4363d0:	adc    al,0x50
  4363d2:	add    eax,DWORD PTR [rax]
  4363d4:	adc    al,0x50
  4363d6:	add    eax,DWORD PTR [rax]
  4363d8:	adc    al,0x50
  4363da:	add    eax,DWORD PTR [rax]
  4363dc:	adc    al,0x50
  4363de:	add    eax,DWORD PTR [rax]
  4363e0:	adc    al,0x50
  4363e2:	add    eax,DWORD PTR [rax]
  4363e4:	adc    al,0x50
  4363e6:	add    eax,DWORD PTR [rax]
  4363e8:	adc    al,0x50
  4363ea:	add    eax,DWORD PTR [rax]
  4363ec:	adc    al,0x50
  4363ee:	add    eax,DWORD PTR [rax]
  4363f0:	adc    al,0x50
  4363f2:	add    eax,DWORD PTR [rax]
  4363f4:	adc    al,0x50
  4363f6:	add    eax,DWORD PTR [rax]
  4363f8:	adc    al,0x50
  4363fa:	add    eax,DWORD PTR [rax]
  4363fc:	adc    al,0x50
  4363fe:	add    eax,DWORD PTR [rax]
  436400:	adc    al,0x50
  436402:	add    eax,DWORD PTR [rax]
  436404:	adc    al,0x50
  436406:	add    eax,DWORD PTR [rax]
  436408:	adc    al,0x50
  43640a:	add    eax,DWORD PTR [rax]
  43640c:	adc    al,0x50
  43640e:	add    eax,DWORD PTR [rax]
  436410:	adc    al,0x50
  436412:	add    eax,DWORD PTR [rax]
  436414:	adc    al,0x50
  436416:	add    eax,DWORD PTR [rax]
  436418:	adc    al,0x50
  43641a:	add    eax,DWORD PTR [rax]
  43641c:	adc    al,0x50
  43641e:	add    eax,DWORD PTR [rax]
  436420:	adc    al,0x50
  436422:	add    eax,DWORD PTR [rax]
  436424:	adc    al,0x50
  436426:	add    eax,DWORD PTR [rax]
  436428:	adc    al,0x50
  43642a:	add    eax,DWORD PTR [rax]
  43642c:	adc    al,0x50
  43642e:	add    eax,DWORD PTR [rax]
  436430:	adc    al,0x50
  436432:	add    eax,DWORD PTR [rax]
  436434:	adc    al,0x50
  436436:	add    eax,DWORD PTR [rax]
  436438:	adc    al,0x50
  43643a:	add    eax,DWORD PTR [rax]
  43643c:	adc    al,0x50
  43643e:	add    eax,DWORD PTR [rax]
  436440:	adc    al,0x50
  436442:	add    eax,DWORD PTR [rax]
  436444:	adc    al,0x50
  436446:	add    eax,DWORD PTR [rax]
  436448:	adc    al,0x50
  43644a:	add    eax,DWORD PTR [rax]
  43644c:	rex.WXB
  43644d:	rex.RB push r10
  43644f:	rex.WRX
  436450:	rex.RB
  436451:	xor    r14,QWORD PTR [rdx]
  436454:	cs fs ins BYTE PTR es:[rdi],dx
  436457:	ins    BYTE PTR es:[rdi],dx
  436458:	add    BYTE PTR [rax],al
  43645a:	add    BYTE PTR [rax],al
  43645c:	sub    BYTE PTR [rax+0x3],dl
  43645f:	add    BYTE PTR [rax],ch
  436461:	push   rax
  436462:	add    eax,DWORD PTR [rax]
  436464:	sub    BYTE PTR [rax+0x3],dl
  436467:	add    BYTE PTR [rax],ch
  436469:	push   rax
  43646a:	add    eax,DWORD PTR [rax]
  43646c:	sub    BYTE PTR [rax+0x3],dl
  43646f:	add    BYTE PTR [rax],ch
  436471:	push   rax
  436472:	add    eax,DWORD PTR [rax]
  436474:	sub    BYTE PTR [rax+0x3],dl
  436477:	add    BYTE PTR [rax],ch
  436479:	push   rax
  43647a:	add    eax,DWORD PTR [rax]
  43647c:	sub    BYTE PTR [rax+0x3],dl
  43647f:	add    BYTE PTR [rax],ch
  436481:	push   rax
  436482:	add    eax,DWORD PTR [rax]
  436484:	sub    BYTE PTR [rax+0x3],dl
  436487:	add    BYTE PTR [rax],ch
  436489:	push   rax
  43648a:	add    eax,DWORD PTR [rax]
  43648c:	sub    BYTE PTR [rax+0x3],dl
  43648f:	add    BYTE PTR [rax],ch
  436491:	push   rax
  436492:	add    eax,DWORD PTR [rax]
  436494:	sub    BYTE PTR [rax+0x3],dl
  436497:	add    BYTE PTR [rax],ch
  436499:	push   rax
  43649a:	add    eax,DWORD PTR [rax]
  43649c:	sub    BYTE PTR [rax+0x3],dl
  43649f:	add    BYTE PTR [rax],ch
  4364a1:	push   rax
  4364a2:	add    eax,DWORD PTR [rax]
  4364a4:	sub    BYTE PTR [rax+0x3],dl
  4364a7:	add    BYTE PTR [rax],ch
  4364a9:	push   rax
  4364aa:	add    eax,DWORD PTR [rax]
  4364ac:	sub    BYTE PTR [rax+0x3],dl
  4364af:	add    BYTE PTR [rax],ch
  4364b1:	push   rax
  4364b2:	add    eax,DWORD PTR [rax]
  4364b4:	sub    BYTE PTR [rax+0x3],dl
  4364b7:	add    BYTE PTR [rax],ch
  4364b9:	push   rax
  4364ba:	add    eax,DWORD PTR [rax]
  4364bc:	sub    BYTE PTR [rax+0x3],dl
  4364bf:	add    BYTE PTR [rax],ch
  4364c1:	push   rax
  4364c2:	add    eax,DWORD PTR [rax]
  4364c4:	sub    BYTE PTR [rax+0x3],dl
  4364c7:	add    BYTE PTR [rax],ch
  4364c9:	push   rax
  4364ca:	add    eax,DWORD PTR [rax]
  4364cc:	sub    BYTE PTR [rax+0x3],dl
  4364cf:	add    BYTE PTR [rax],ch
  4364d1:	push   rax
  4364d2:	add    eax,DWORD PTR [rax]
  4364d4:	sub    BYTE PTR [rax+0x3],dl
  4364d7:	add    BYTE PTR [rax],ch
  4364d9:	push   rax
  4364da:	add    eax,DWORD PTR [rax]
  4364dc:	sub    BYTE PTR [rax+0x3],dl
  4364df:	add    BYTE PTR [rax],ch
  4364e1:	push   rax
  4364e2:	add    eax,DWORD PTR [rax]
  4364e4:	sub    BYTE PTR [rax+0x3],dl
  4364e7:	add    BYTE PTR [rax],ch
  4364e9:	push   rax
  4364ea:	add    eax,DWORD PTR [rax]
  4364ec:	sub    BYTE PTR [rax+0x3],dl
  4364ef:	add    BYTE PTR [rax],ch
  4364f1:	push   rax
  4364f2:	add    eax,DWORD PTR [rax]
  4364f4:	sub    BYTE PTR [rax+0x3],dl
  4364f7:	add    BYTE PTR [rax],ch
  4364f9:	push   rax
  4364fa:	add    eax,DWORD PTR [rax]
  4364fc:	sub    BYTE PTR [rax+0x3],dl
  4364ff:	add    BYTE PTR [rax],ch
  436501:	push   rax
  436502:	add    eax,DWORD PTR [rax]
  436504:	sub    BYTE PTR [rax+0x3],dl
  436507:	add    BYTE PTR [rax],ch
  436509:	push   rax
  43650a:	add    eax,DWORD PTR [rax]
  43650c:	sub    BYTE PTR [rax+0x3],dl
  43650f:	add    BYTE PTR [rax],ch
  436511:	push   rax
  436512:	add    eax,DWORD PTR [rax]
  436514:	sub    BYTE PTR [rax+0x3],dl
  436517:	add    BYTE PTR [rax],ch
  436519:	push   rax
  43651a:	add    eax,DWORD PTR [rax]
  43651c:	sub    BYTE PTR [rax+0x3],dl
  43651f:	add    BYTE PTR [rax],ch
  436521:	push   rax
  436522:	add    eax,DWORD PTR [rax]
  436524:	sub    BYTE PTR [rax+0x3],dl
  436527:	add    BYTE PTR [rax],ch
  436529:	push   rax
  43652a:	add    eax,DWORD PTR [rax]
  43652c:	sub    BYTE PTR [rax+0x3],dl
  43652f:	add    BYTE PTR [rax],ch
  436531:	push   rax
  436532:	add    eax,DWORD PTR [rax]
  436534:	sub    BYTE PTR [rax+0x3],dl
  436537:	add    BYTE PTR [rax],ch
  436539:	push   rax
  43653a:	add    eax,DWORD PTR [rax]
  43653c:	sub    BYTE PTR [rax+0x3],dl
  43653f:	add    BYTE PTR [rax],ch
  436541:	push   rax
  436542:	add    eax,DWORD PTR [rax]
  436544:	sub    BYTE PTR [rax+0x3],dl
  436547:	add    BYTE PTR [rax],ch
  436549:	push   rax
  43654a:	add    eax,DWORD PTR [rax]
  43654c:	sub    BYTE PTR [rax+0x3],dl
  43654f:	add    BYTE PTR [rax],ch
  436551:	push   rax
  436552:	add    eax,DWORD PTR [rax]
  436554:	sub    BYTE PTR [rax+0x3],dl
  436557:	add    BYTE PTR [rax],ch
  436559:	push   rax
  43655a:	add    eax,DWORD PTR [rax]
  43655c:	sub    BYTE PTR [rax+0x3],dl
  43655f:	add    BYTE PTR [rax],ch
  436561:	push   rax
  436562:	add    eax,DWORD PTR [rax]
  436564:	sub    BYTE PTR [rax+0x3],dl
  436567:	add    BYTE PTR [rax],ch
  436569:	push   rax
  43656a:	add    eax,DWORD PTR [rax]
  43656c:	sub    BYTE PTR [rax+0x3],dl
  43656f:	add    BYTE PTR [rax],ch
  436571:	push   rax
  436572:	add    eax,DWORD PTR [rax]
  436574:	sub    BYTE PTR [rax+0x3],dl
  436577:	add    BYTE PTR [rax],ch
  436579:	push   rax
  43657a:	add    eax,DWORD PTR [rax]
  43657c:	sub    BYTE PTR [rax+0x3],dl
  43657f:	add    BYTE PTR [rax],ch
  436581:	push   rax
  436582:	add    eax,DWORD PTR [rax]
  436584:	sub    BYTE PTR [rax+0x3],dl
  436587:	add    BYTE PTR [rax],ch
  436589:	push   rax
  43658a:	add    eax,DWORD PTR [rax]
  43658c:	sub    BYTE PTR [rax+0x3],dl
  43658f:	add    BYTE PTR [rax],ch
  436591:	push   rax
  436592:	add    eax,DWORD PTR [rax]
  436594:	sub    BYTE PTR [rax+0x3],dl
  436597:	add    BYTE PTR [rax],ch
  436599:	push   rax
  43659a:	add    eax,DWORD PTR [rax]
  43659c:	sub    BYTE PTR [rax+0x3],dl
  43659f:	add    BYTE PTR [rax],ch
  4365a1:	push   rax
  4365a2:	add    eax,DWORD PTR [rax]
  4365a4:	sub    BYTE PTR [rax+0x3],dl
  4365a7:	add    BYTE PTR [rax],ch
  4365a9:	push   rax
  4365aa:	add    eax,DWORD PTR [rax]
  4365ac:	ins    DWORD PTR es:[rdi],dx
  4365ad:	jae    0x436625
  4365af:	movsxd esi,DWORD PTR [rdx+0x74]
  4365b2:	cs fs ins BYTE PTR es:[rdi],dx
  4365b5:	ins    BYTE PTR es:[rdi],dx
  4365b6:	add    BYTE PTR [rax],al
  4365b8:	cmp    al,0x50
  4365ba:	add    eax,DWORD PTR [rax]
  4365bc:	push   rdi
  4365bd:	push   rbx
  4365be:	xor    bl,BYTE PTR [rdi+0x33]
  4365c1:	xor    ch,BYTE PTR [rsi]
  4365c3:	fs ins BYTE PTR es:[rdi],dx
  4365c5:	ins    BYTE PTR es:[rdi],dx
  4365c6:	add    BYTE PTR [rax],al
  4365c8:	push   rax
  4365c9:	push   rax
  4365ca:	add    eax,DWORD PTR [rax]
  4365cc:	push   rax
  4365cd:	push   rax
  4365ce:	add    eax,DWORD PTR [rax]
  4365d0:	push   rax
  4365d1:	push   rax
  4365d2:	add    eax,DWORD PTR [rax]
  4365d4:	ins    BYTE PTR es:[rdi],dx
  4365d5:	imul   esp,DWORD PTR [rdx+0x7a],0x6c6c642e
  4365dc:	add    BYTE PTR [rax],al
	...

Disassembly of section .CRT:

0000000000437000 <.CRT>:
	...
  437008:	(bad)  
  437009:	adc    DWORD PTR [rax+0x0],eax
	...
  437020:	adc    BYTE PTR [rax],dl
  437022:	add    BYTE PTR [rax],al
  437025:	add    BYTE PTR [rax],al
  437027:	add    BYTE PTR [rax],dl
  437029:	add    eax,0x41
	...
  43703e:	add    BYTE PTR [rax],al
  437040:	rex (bad) 
  437042:	add    BYTE PTR [r8],al
  437045:	add    BYTE PTR [rax],al
  437047:	add    BYTE PTR [rax],dl
  437049:	(bad)  
  43704a:	add    BYTE PTR [r8],al
	...

Disassembly of section .tls:

0000000000438000 <.tls>:
	...
  438020:	add    BYTE PTR [rax+0x43],al
  438026:	add    BYTE PTR [rax],al
  438028:	(bad)  
  438029:	add    BYTE PTR [rbx+0x0],0x0
  43802d:	add    BYTE PTR [rax],al
  43802f:	add    BYTE PTR [rsi+rsi*1+0x43],bl
  438036:	add    BYTE PTR [rax],al
  438038:	rex jo 0x43807e
	...
