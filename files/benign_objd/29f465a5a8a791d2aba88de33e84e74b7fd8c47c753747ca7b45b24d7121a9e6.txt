
29f465a5a8a791d2aba88de33e84e74b7fd8c47c753747ca7b45b24d7121a9e6.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
	...
   140001008:	mov    QWORD PTR [rsp+0x18],r8
   14000100d:	mov    QWORD PTR [rsp+0x20],r9
   140001012:	push   rbx
   140001013:	push   rbp
   140001014:	push   rsi
   140001015:	push   rdi
   140001016:	sub    rsp,0x28
   14000101a:	xor    ebp,ebp
   14000101c:	lea    rax,[rdx-0x1]
   140001020:	cmp    rax,0x7ffffffe
   140001026:	mov    rsi,rcx
   140001029:	mov    edi,ebp
   14000102b:	mov    ecx,0x80070057
   140001030:	cmova  edi,ecx
   140001033:	test   edi,edi
   140001035:	js     0x14000106c
   140001037:	lea    rbx,[rdx-0x1]
   14000103b:	mov    rcx,rsi
   14000103e:	mov    rdx,rbx
   140001041:	lea    r9,[rsp+0x68]
   140001046:	mov    edi,ebp
   140001048:	call   QWORD PTR [rip+0xa3b2]        # 0x14000b400
   14000104e:	test   eax,eax
   140001050:	js     0x140001061
   140001052:	cdqe   
   140001054:	cmp    rax,rbx
   140001057:	ja     0x140001061
   140001059:	jne    0x140001074
   14000105b:	mov    WORD PTR [rsi+rbx*2],bp
   14000105f:	jmp    0x140001074
   140001061:	mov    WORD PTR [rsi+rbx*2],bp
   140001065:	mov    edi,0x8007007a
   14000106a:	jmp    0x140001074
   14000106c:	test   rdx,rdx
   14000106f:	je     0x140001074
   140001071:	mov    WORD PTR [rsi],bp
   140001074:	mov    eax,edi
   140001076:	add    rsp,0x28
   14000107a:	pop    rdi
   14000107b:	pop    rsi
   14000107c:	pop    rbp
   14000107d:	pop    rbx
   14000107e:	ret    
   14000107f:	int3   
   140001080:	int3   
   140001081:	int3   
   140001082:	int3   
   140001083:	int3   
   140001084:	int3   
   140001085:	int3   
   140001086:	int3   
   140001087:	int3   
   140001088:	mov    rax,rsp
   14000108b:	mov    QWORD PTR [rax+0x8],rbx
   14000108f:	mov    QWORD PTR [rax+0x18],rsi
   140001093:	mov    QWORD PTR [rax+0x20],rdi
   140001097:	push   rbp
   140001098:	push   r12
   14000109a:	push   r13
   14000109c:	push   r14
   14000109e:	push   r15
   1400010a0:	lea    rbp,[rax-0x1ee8]
   1400010a7:	mov    eax,0x1fc0
   1400010ac:	call   0x14000a8d0
   1400010b1:	sub    rsp,rax
   1400010b4:	mov    rax,QWORD PTR [rip+0xcf4d]        # 0x14000e008
   1400010bb:	xor    rax,rsp
   1400010be:	mov    QWORD PTR [rbp+0x1eb0],rax
   1400010c5:	mov    ebx,ecx
   1400010c7:	mov    rsi,rdx
   1400010ca:	xor    ecx,ecx
   1400010cc:	or     rdx,0xffffffffffffffff
   1400010d0:	mov    QWORD PTR [rbp-0x60],rcx
   1400010d4:	mov    r13d,edx
   1400010d7:	mov    QWORD PTR [rbp-0x8],rcx
   1400010db:	mov    r12d,edx
   1400010de:	mov    QWORD PTR [rbp-0x70],rcx
   1400010e2:	lea    r14d,[rcx+0x1]
   1400010e6:	mov    QWORD PTR [rbp-0x78],rcx
   1400010ea:	mov    r15d,r14d
   1400010ed:	mov    DWORD PTR [rbp-0x1c],r14d
   1400010f1:	mov    QWORD PTR [rbp-0x40],rcx
   1400010f5:	mov    QWORD PTR [rbp-0x68],rcx
   1400010f9:	mov    QWORD PTR [rbp-0x80],rcx
   1400010fd:	mov    QWORD PTR [rbp-0x30],rcx
   140001101:	mov    QWORD PTR [rbp-0x28],rcx
   140001105:	mov    QWORD PTR [rbp+0x20],rcx
   140001109:	mov    DWORD PTR [rbp+0x0],ecx
   14000110c:	mov    DWORD PTR [rbp-0x50],ecx
   14000110f:	mov    DWORD PTR [rbp+0x18],ecx
   140001112:	mov    DWORD PTR [rbp+0x10],ecx
   140001115:	mov    DWORD PTR [rbp+0x4],ecx
   140001118:	mov    DWORD PTR [rbp+0x8],ecx
   14000111b:	mov    DWORD PTR [rbp+0xc],ecx
   14000111e:	mov    DWORD PTR [rbp+0x14],ecx
   140001121:	mov    DWORD PTR [rbp-0x20],ecx
   140001124:	mov    DWORD PTR [rbp-0x48],edx
   140001127:	mov    DWORD PTR [rbp-0x58],edx
   14000112a:	mov    DWORD PTR [rbp-0x4c],edx
   14000112d:	mov    DWORD PTR [rbp-0x54],edx
   140001130:	mov    DWORD PTR [rbp-0x34],edx
   140001133:	mov    DWORD PTR [rbp-0x44],ecx
   140001136:	mov    DWORD PTR [rbp-0x38],ecx
   140001139:	call   QWORD PTR [rip+0xa029]        # 0x14000b168
   14000113f:	xor    r9d,r9d
   140001142:	xor    r8d,r8d
   140001145:	mov    edx,r14d
   140001148:	xor    ecx,ecx
   14000114a:	call   QWORD PTR [rip+0x9fd0]        # 0x14000b120
   140001150:	xor    eax,eax
   140001152:	lea    rdi,[rbp+0x10d0]
   140001159:	mov    edx,0x3e8
   14000115e:	mov    ecx,edx
   140001160:	rep stos BYTE PTR es:[rdi],al
   140001162:	mov    ecx,edx
   140001164:	lea    rdi,[rbp+0x14c0]
   14000116b:	rep stos BYTE PTR es:[rdi],al
   14000116d:	mov    edx,0x1fc
   140001172:	lea    rdi,[rbp+0x680]
   140001179:	mov    ecx,0x21a
   14000117e:	rep stos BYTE PTR es:[rdi],al
   140001180:	lea    rdi,[rbp+0x30]
   140001184:	mov    ecx,edx
   140001186:	rep stos BYTE PTR es:[rdi],al
   140001188:	lea    rdi,[rbp+0x8a0]
   14000118f:	mov    ecx,edx
   140001191:	rep stos BYTE PTR es:[rdi],al
   140001193:	lea    rdi,[rbp+0xaa0]
   14000119a:	mov    ecx,edx
   14000119c:	rep stos BYTE PTR es:[rdi],al
   14000119e:	lea    rdi,[rbp+0xca0]
   1400011a5:	mov    ecx,edx
   1400011a7:	rep stos BYTE PTR es:[rdi],al
   1400011a9:	lea    rdi,[rbp+0xea0]
   1400011b0:	lea    ecx,[rdx+0x28]
   1400011b3:	rep stos BYTE PTR es:[rdi],al
   1400011b5:	lea    rdi,[rbp+0x230]
   1400011bc:	mov    ecx,0x448
   1400011c1:	rep stos BYTE PTR es:[rdi],al
   1400011c3:	lea    rax,[rbp+0x8a0]
   1400011ca:	mov    QWORD PTR [rsp+0x78],rax
   1400011cf:	lea    rax,[rbp-0x60]
   1400011d3:	mov    QWORD PTR [rsp+0x70],rax
   1400011d8:	lea    rax,[rbp+0x4]
   1400011dc:	mov    QWORD PTR [rsp+0x68],rax
   1400011e1:	lea    rax,[rbp+0xca0]
   1400011e8:	mov    QWORD PTR [rsp+0x60],rax
   1400011ed:	lea    rax,[rbp+0xaa0]
   1400011f4:	mov    QWORD PTR [rsp+0x58],rax
   1400011f9:	lea    rax,[rbp+0x30]
   1400011fd:	mov    rdx,rsi
   140001200:	mov    QWORD PTR [rsp+0x50],rax
   140001205:	lea    r9,[rbp-0x70]
   140001209:	lea    rax,[rbp+0x10]
   14000120d:	mov    ecx,ebx
   14000120f:	mov    QWORD PTR [rsp+0x48],rax
   140001214:	lea    r8,[rbp+0xc]
   140001218:	lea    rax,[rbp-0x80]
   14000121c:	mov    QWORD PTR [rsp+0x40],rax
   140001221:	lea    rax,[rbp-0x68]
   140001225:	mov    QWORD PTR [rsp+0x38],rax
   14000122a:	lea    rax,[rbp+0x8]
   14000122e:	mov    QWORD PTR [rsp+0x30],rax
   140001233:	lea    rax,[rbp-0x40]
   140001237:	mov    QWORD PTR [rsp+0x28],rax
   14000123c:	lea    rax,[rbp-0x78]
   140001240:	mov    QWORD PTR [rsp+0x20],rax
   140001245:	call   0x140003e18
   14000124a:	cmp    eax,r14d
   14000124d:	je     0x1400013f4
   140001253:	cmp    DWORD PTR [rbp+0xc],r14d
   140001257:	jne    0x14000128e
   140001259:	mov    ebx,0x7d0
   14000125e:	mov    ecx,ebx
   140001260:	call   0x1400059b8
   140001265:	mov    ecx,r14d
   140001268:	mov    rdi,rax
   14000126b:	call   0x14000a4f8
   140001270:	mov    rcx,rax
   140001273:	mov    rdx,rdi
   140001276:	call   0x1400066c4
   14000127b:	add    ebx,r14d
   14000127e:	cmp    ebx,0x83c
   140001284:	jbe    0x14000125e
   140001286:	xor    r14d,r14d
   140001289:	jmp    0x1400013f4
   14000128e:	lea    rax,[rbp+0xaa0]
   140001295:	test   rax,rax
   140001298:	je     0x1400012ad
   14000129a:	lea    rcx,[rbp+0xaa0]
   1400012a1:	call   QWORD PTR [rip+0x9ff1]        # 0x14000b298
   1400012a7:	test   eax,eax
   1400012a9:	cmovne r13d,r14d
   1400012ad:	lea    rax,[rbp+0xca0]
   1400012b4:	test   rax,rax
   1400012b7:	je     0x1400012d0
   1400012b9:	lea    rcx,[rbp+0xca0]
   1400012c0:	call   QWORD PTR [rip+0x9fd2]        # 0x14000b298
   1400012c6:	test   eax,eax
   1400012c8:	cmovne r12d,r14d
   1400012cc:	mov    DWORD PTR [rbp-0x34],r12d
   1400012d0:	xor    r12d,r12d
   1400012d3:	cmp    DWORD PTR [rbp+0x4],r14d
   1400012d7:	cmove  r12d,r14d
   1400012db:	xor    eax,eax
   1400012dd:	cmp    DWORD PTR [rbp+0x8],r14d
   1400012e1:	mov    DWORD PTR [rbp-0x18],r12d
   1400012e5:	cmove  eax,r14d
   1400012e9:	mov    DWORD PTR [rbp-0x10],eax
   1400012ec:	mov    rax,QWORD PTR [rbp-0x68]
   1400012f0:	test   rax,rax
   1400012f3:	je     0x140001309
   1400012f5:	mov    rcx,rax
   1400012f8:	call   QWORD PTR [rip+0x9f9a]        # 0x14000b298
   1400012fe:	test   eax,eax
   140001300:	je     0x140001309
   140001302:	mov    esi,0x2
   140001307:	jmp    0x14000134e
   140001309:	lea    rax,[rbp+0x30]
   14000130d:	test   rax,rax
   140001310:	je     0x14000134b
   140001312:	lea    rcx,[rbp+0x30]
   140001316:	call   QWORD PTR [rip+0x9f7c]        # 0x14000b298
   14000131c:	test   eax,eax
   14000131e:	je     0x14000134b
   140001320:	cmp    WORD PTR [rbp+0x30],0x5c
   140001325:	mov    esi,0x3
   14000132a:	jne    0x14000134e
   14000132c:	cmp    WORD PTR [rbp+0x32],0x5c
   140001331:	jne    0x14000134e
   140001333:	mov    r8d,0x224
   140001339:	lea    rdx,[rbp+0x30]
   14000133d:	lea    rcx,[rbp+0x230]
   140001344:	call   0x140006448
   140001349:	jmp    0x14000134e
   14000134b:	mov    esi,r14d
   14000134e:	mov    rbx,QWORD PTR [rbp-0x70]
   140001352:	mov    rcx,rbx
   140001355:	lea    rdi,[rbx+0x4]
   140001359:	call   0x140007b70
   14000135e:	test   eax,eax
   140001360:	mov    rcx,rbx
   140001363:	cmovne rcx,rdi
   140001367:	call   0x140007bd8
   14000136c:	mov    DWORD PTR [rbp-0x14],eax
   14000136f:	mov    edi,eax
   140001371:	test   rbx,rbx
   140001374:	je     0x14000147d
   14000137a:	mov    rcx,rbx
   14000137d:	call   QWORD PTR [rip+0x9f15]        # 0x14000b298
   140001383:	test   eax,eax
   140001385:	je     0x14000147d
   14000138b:	test   edi,edi
   14000138d:	jne    0x14000147d
   140001393:	mov    rcx,QWORD PTR [rbp-0x40]
   140001397:	call   0x1400072d0
   14000139c:	mov    rcx,QWORD PTR [rbp-0x78]
   1400013a0:	movsxd rdi,eax
   1400013a3:	shr    rdi,1
   1400013a6:	call   0x1400072d0
   1400013ab:	mov    r9,QWORD PTR [rbp-0x40]
   1400013af:	mov    rcx,rbx
   1400013b2:	mov    rdx,QWORD PTR [rbp-0x78]
   1400013b6:	movsxd r8,eax
   1400013b9:	mov    eax,DWORD PTR [rbp+0x10]
   1400013bc:	mov    DWORD PTR [rsp+0x28],eax
   1400013c0:	shr    r8,1
   1400013c3:	mov    DWORD PTR [rsp+0x20],edi
   1400013c7:	call   0x1400084e0
   1400013cc:	test   eax,eax
   1400013ce:	jne    0x14000142a
   1400013d0:	call   0x140005550
   1400013d5:	mov    ecx,0x2
   1400013da:	call   0x14000a4f8
   1400013df:	mov    rcx,rax
   1400013e2:	mov    edx,0x20001
   1400013e7:	call   0x1400056fc
   1400013ec:	mov    rcx,rbx
   1400013ef:	call   0x14000840c
   1400013f4:	lea    rcx,[rbp-0x68]
   1400013f8:	call   0x14000704c
   1400013fd:	lea    rcx,[rbp-0x80]
   140001401:	call   0x14000704c
   140001406:	lea    rcx,[rbp-0x60]
   14000140a:	call   0x14000704c
   14000140f:	lea    rcx,[rbp-0x70]
   140001413:	call   0x14000704c
   140001418:	lea    rcx,[rbp-0x78]
   14000141c:	call   0x14000704c
   140001421:	lea    rcx,[rbp-0x40]
   140001425:	jmp    0x140001f5f
   14000142a:	call   QWORD PTR [rip+0x9c68]        # 0x14000b098
   140001430:	cmp    eax,0x4c3
   140001435:	je     0x140001454
   140001437:	cmp    eax,0x50010001
   14000143c:	je     0x14000144b
   14000143e:	cmp    eax,0xa0010001
   140001443:	je     0x140001454
   140001445:	mov    DWORD PTR [rbp-0x1c],r14d
   140001449:	jmp    0x140001471
   14000144b:	xor    r15d,r15d
   14000144e:	mov    DWORD PTR [rbp-0x1c],r15d
   140001452:	jmp    0x140001471
   140001454:	xor    r15d,r15d
   140001457:	mov    DWORD PTR [rbp-0x1c],r15d
   14000145b:	lea    ecx,[r15+0x2]
   14000145f:	call   0x14000a4f8
   140001464:	mov    rcx,rax
   140001467:	mov    edx,0x10004
   14000146c:	call   0x1400056fc
   140001471:	lea    rcx,[rbp-0x40]
   140001475:	call   0x14000704c
   14000147a:	mov    edi,DWORD PTR [rbp-0x14]
   14000147d:	cmp    edi,r14d
   140001480:	jne    0x1400014b9
   140001482:	cmp    QWORD PTR [rbp-0x78],0x0
   140001487:	je     0x1400014b9
   140001489:	mov    rcx,QWORD PTR [rbp-0x78]
   14000148d:	call   QWORD PTR [rip+0x9e05]        # 0x14000b298
   140001493:	test   eax,eax
   140001495:	je     0x1400014b9
   140001497:	mov    ecx,0x25c
   14000149c:	call   0x1400059b8
   1400014a1:	mov    ecx,0x2
   1400014a6:	mov    rdi,rax
   1400014a9:	call   0x14000a4f8
   1400014ae:	mov    rcx,rax
   1400014b1:	mov    rdx,rdi
   1400014b4:	call   0x1400066c4
   1400014b9:	sub    esi,r14d
   1400014bc:	je     0x140001e6d
   1400014c2:	sub    esi,r14d
   1400014c5:	je     0x140001d16
   1400014cb:	cmp    esi,r14d
   1400014ce:	jne    0x140001fa5
   1400014d4:	xor    eax,eax
   1400014d6:	lea    rdi,[rbp+0x680]
   1400014dd:	mov    ecx,0x21a
   1400014e2:	lea    rdx,[rip+0xa057]        # 0x14000b540
   1400014e9:	rep stos BYTE PTR es:[rdi],al
   1400014eb:	lea    rcx,[rbp+0x680]
   1400014f2:	mov    r8d,0x10d
   1400014f8:	call   0x140006448
   1400014fd:	test   r12d,r12d
   140001500:	je     0x140001515
   140001502:	mov    esi,0x98967f
   140001507:	mov    DWORD PTR [rbp-0x48],esi
   14000150a:	mov    DWORD PTR [rbp-0x58],esi
   14000150d:	mov    DWORD PTR [rbp-0x4c],esi
   140001510:	mov    DWORD PTR [rbp-0x54],esi
   140001513:	jmp    0x140001518
   140001515:	mov    esi,DWORD PTR [rbp-0x48]
   140001518:	lea    rax,[rbp+0x30]
   14000151c:	test   rax,rax
   14000151f:	je     0x140001cfc
   140001525:	lea    rcx,[rbp+0x30]
   140001529:	call   QWORD PTR [rip+0x9d69]        # 0x14000b298
   14000152f:	test   eax,eax
   140001531:	je     0x140001cfc
   140001537:	cmp    r13d,0xffffffff
   14000153b:	je     0x14000157d
   14000153d:	test   r12d,r12d
   140001540:	jne    0x14000157d
   140001542:	lea    r8,[rbp-0x54]
   140001546:	lea    rdx,[rbp-0x58]
   14000154a:	lea    rcx,[rbp+0xaa0]
   140001551:	call   0x1400035cc
   140001556:	cmp    eax,r14d
   140001559:	jne    0x140001571
   14000155b:	cmp    r15d,r14d
   14000155e:	jne    0x140001f37
   140001564:	mov    rcx,rbx
   140001567:	call   0x14000840c
   14000156c:	jmp    0x140001f37
   140001571:	mov    esi,DWORD PTR [rbp-0x58]
   140001574:	mov    eax,DWORD PTR [rbp-0x54]
   140001577:	mov    DWORD PTR [rbp-0x48],esi
   14000157a:	mov    DWORD PTR [rbp-0x4c],eax
   14000157d:	cmp    DWORD PTR [rbp-0x34],0xffffffff
   140001581:	je     0x1400015ad
   140001583:	test   r12d,r12d
   140001586:	jne    0x1400015ad
   140001588:	lea    r8,[rbp-0x54]
   14000158c:	lea    rdx,[rbp-0x58]
   140001590:	lea    rcx,[rbp+0xca0]
   140001597:	call   0x1400035cc
   14000159c:	cmp    eax,r14d
   14000159f:	je     0x14000155b
   1400015a1:	mov    esi,DWORD PTR [rbp-0x58]
   1400015a4:	mov    eax,DWORD PTR [rbp-0x54]
   1400015a7:	mov    DWORD PTR [rbp-0x48],esi
   1400015aa:	mov    DWORD PTR [rbp-0x4c],eax
   1400015ad:	lea    rax,[rbp+0x8a0]
   1400015b4:	test   rax,rax
   1400015b7:	je     0x140001626
   1400015b9:	lea    rcx,[rbp+0x8a0]
   1400015c0:	call   QWORD PTR [rip+0x9cd2]        # 0x14000b298
   1400015c6:	test   eax,eax
   1400015c8:	je     0x140001626
   1400015ca:	lea    rax,[rbp+0x680]
   1400015d1:	test   rax,rax
   1400015d4:	jne    0x1400015da
   1400015d6:	xor    edi,edi
   1400015d8:	jmp    0x1400015e9
   1400015da:	lea    rcx,[rbp+0x680]
   1400015e1:	call   QWORD PTR [rip+0x9cb1]        # 0x14000b298
   1400015e7:	mov    edi,eax
   1400015e9:	lea    rcx,[rbp+0x8a0]
   1400015f0:	call   QWORD PTR [rip+0x9ca2]        # 0x14000b298
   1400015f6:	lea    rdx,[rbp+0x8a0]
   1400015fd:	lea    ecx,[rax+rdi*1]
   140001600:	cmp    ecx,0x10
   140001603:	jb     0x140001614
   140001605:	mov    ecx,0x139c
   14000160a:	call   0x1400038c0
   14000160f:	jmp    0x14000155b
   140001614:	mov    r8d,0x10d
   14000161a:	lea    rcx,[rbp+0x680]
   140001621:	call   0x1400064ec
   140001626:	mov    r8d,0x112
   14000162c:	lea    rdx,[rbp+0x30]
   140001630:	lea    rcx,[rbp+0xea0]
   140001637:	call   0x140006448
   14000163c:	lea    rdx,[rip+0x9f09]        # 0x14000b54c
   140001643:	lea    rcx,[rbp+0xea0]
   14000164a:	call   QWORD PTR [rip+0x9da0]        # 0x14000b3f0
   140001650:	mov    r12,rax
   140001653:	test   rax,rax
   140001656:	jne    0x140001663
   140001658:	lea    rdx,[rbp+0x30]
   14000165c:	mov    ecx,0x13a6
   140001661:	jmp    0x14000160a
   140001663:	test   rbx,rbx
   140001666:	je     0x140001798
   14000166c:	mov    rcx,rbx
   14000166f:	call   QWORD PTR [rip+0x9c23]        # 0x14000b298
   140001675:	test   eax,eax
   140001677:	je     0x140001798
   14000167d:	cmp    DWORD PTR [rbp-0x14],0x0
   140001681:	jne    0x140001798
   140001687:	lea    rdx,[rip+0x9ebe]        # 0x14000b54c
   14000168e:	lea    rcx,[rbp+0x30]
   140001692:	call   QWORD PTR [rip+0x9c70]        # 0x14000b308
   140001698:	mov    rdi,rax
   14000169b:	test   rax,rax
   14000169e:	je     0x140001733
   1400016a4:	mov    edx,0x24
   1400016a9:	mov    r8,r14
   1400016ac:	mov    rcx,rax
   1400016af:	call   QWORD PTR [rip+0x9c7b]        # 0x14000b330
   1400016b5:	lea    rcx,[rbp+0x30]
   1400016b9:	call   0x140007b70
   1400016be:	lea    rcx,[rbp+0x230]
   1400016c5:	mov    r8d,0x224
   1400016cb:	test   eax,eax
   1400016cd:	jne    0x140001720
   1400016cf:	lea    rdx,[rip+0x9e7a]        # 0x14000b550
   1400016d6:	call   0x140006448
   1400016db:	mov    r8d,0x224
   1400016e1:	lea    rcx,[rbp+0x230]
   1400016e8:	mov    rdx,rbx
   1400016eb:	call   0x1400064ec
   1400016f0:	mov    r8d,0x224
   1400016f6:	lea    rdx,[rip+0x9e5b]        # 0x14000b558
   1400016fd:	lea    rcx,[rbp+0x230]
   140001704:	call   0x1400064ec
   140001709:	mov    r8d,0x224
   14000170f:	lea    rcx,[rbp+0x230]
   140001716:	mov    rdx,r12
   140001719:	call   0x1400064ec
   14000171e:	jmp    0x140001728
   140001720:	mov    rdx,r12
   140001723:	call   0x140006448
   140001728:	mov    r8d,0x224
   14000172e:	mov    rdx,rdi
   140001731:	jmp    0x14000178a
   140001733:	lea    rcx,[rbp+0x30]
   140001737:	call   0x140007b70
   14000173c:	lea    rcx,[rbp+0x230]
   140001743:	test   eax,eax
   140001745:	jne    0x14000179f
   140001747:	mov    edi,0x224
   14000174c:	lea    rdx,[rip+0x9dfd]        # 0x14000b550
   140001753:	mov    r8d,edi
   140001756:	call   0x140006448
   14000175b:	mov    r8d,edi
   14000175e:	lea    rcx,[rbp+0x230]
   140001765:	mov    rdx,rbx
   140001768:	call   0x1400064ec
   14000176d:	mov    r8d,edi
   140001770:	lea    rdx,[rip+0x9de1]        # 0x14000b558
   140001777:	lea    rcx,[rbp+0x230]
   14000177e:	call   0x1400064ec
   140001783:	mov    r8d,edi
   140001786:	lea    rdx,[rbp+0x30]
   14000178a:	lea    rcx,[rbp+0x230]
   140001791:	call   0x1400064ec
   140001796:	jmp    0x1400017ae
   140001798:	lea    rcx,[rbp+0x230]
   14000179f:	mov    r8d,0x224
   1400017a5:	lea    rdx,[rbp+0x30]
   1400017a9:	call   0x140006448
   1400017ae:	lea    rdx,[rip+0x9da7]        # 0x14000b55c
   1400017b5:	lea    rcx,[rbp+0x230]
   1400017bc:	call   QWORD PTR [rip+0x9b66]        # 0x14000b328
   1400017c2:	mov    r12,rax
   1400017c5:	test   rax,rax
   1400017c8:	je     0x140001658
   1400017ce:	and    QWORD PTR [rsp+0x30],0x0
   1400017d4:	lea    rcx,[rbp+0x230]
   1400017db:	mov    DWORD PTR [rsp+0x28],0x80
   1400017e3:	xor    r9d,r9d
   1400017e6:	mov    r8d,r14d
   1400017e9:	mov    DWORD PTR [rsp+0x20],0x3
   1400017f1:	mov    edx,0x20000
   1400017f6:	call   QWORD PTR [rip+0x98bc]        # 0x14000b0b8
   1400017fc:	mov    QWORD PTR [rbp-0x40],rax
   140001800:	cmp    rax,0xffffffffffffffff
   140001804:	jne    0x140001822
   140001806:	mov    ecx,0x2
   14000180b:	call   0x14000a4f8
   140001810:	mov    edx,0x10001
   140001815:	mov    rcx,rax
   140001818:	call   0x1400056fc
   14000181d:	jmp    0x14000155b
   140001822:	xor    edx,edx
   140001824:	mov    rcx,rax
   140001827:	call   QWORD PTR [rip+0x98a3]        # 0x14000b0d0
   14000182d:	mov    DWORD PTR [rbp-0x50],eax
   140001830:	cmp    eax,0xffffffff
   140001833:	je     0x140001806
   140001835:	lea    ecx,[rax*2+0x14]
   14000183c:	call   0x140007128
   140001841:	mov    QWORD PTR [rbp-0x28],rax
   140001845:	mov    rdi,rax
   140001848:	test   rax,rax
   14000184b:	jne    0x14000185c
   14000184d:	lea    ecx,[rax+0x2]
   140001850:	call   0x14000a4f8
   140001855:	mov    edx,0x20001
   14000185a:	jmp    0x140001815
   14000185c:	test   esi,esi
   14000185e:	js     0x140001866
   140001860:	cmp    DWORD PTR [rbp-0x4c],0x0
   140001864:	jge    0x14000186e
   140001866:	mov    eax,r14d
   140001869:	mov    DWORD PTR [rbp-0x20],eax
   14000186c:	jmp    0x140001871
   14000186e:	mov    eax,DWORD PTR [rbp-0x20]
   140001871:	cmp    r13d,r14d
   140001874:	jne    0x1400018a2
   140001876:	cmp    eax,r14d
   140001879:	jne    0x1400018a2
   14000187b:	mov    ecx,0x227
   140001880:	call   0x1400059b8
   140001885:	mov    ecx,0x2
   14000188a:	mov    rdi,rax
   14000188d:	call   0x14000a4f8
   140001892:	mov    rcx,rax
   140001895:	mov    rdx,rdi
   140001898:	call   0x1400066c4
   14000189d:	jmp    0x14000155b
   1400018a2:	mov    eax,DWORD PTR [rbp-0x50]
   1400018a5:	mov    r8,r12
   1400018a8:	mov    rsi,QWORD PTR [rbp-0x60]
   1400018ac:	mov    rcx,rdi
   1400018af:	test   eax,eax
   1400018b1:	je     0x14000194d
   1400018b7:	inc    eax
   1400018b9:	mov    DWORD PTR [rbp-0x50],eax
   1400018bc:	mov    edx,eax
   1400018be:	jmp    0x140001939
   1400018c0:	mov    eax,DWORD PTR [rbp-0x20]
   1400018c3:	lea    r9,[rbp+0x680]
   1400018ca:	mov    QWORD PTR [rsp+0x68],r12
   1400018cf:	lea    r8,[rbp-0x54]
   1400018d3:	mov    DWORD PTR [rsp+0x60],eax
   1400018d7:	lea    rdx,[rbp-0x58]
   1400018db:	lea    rax,[rbp+0x18]
   1400018df:	mov    rcx,rdi
   1400018e2:	mov    QWORD PTR [rsp+0x58],rax
   1400018e7:	lea    rax,[rbp+0x0]
   1400018eb:	mov    QWORD PTR [rsp+0x50],rax
   1400018f0:	lea    rax,[rbp-0x38]
   1400018f4:	mov    QWORD PTR [rsp+0x48],rax
   1400018f9:	lea    rax,[rbp-0x44]
   1400018fd:	mov    QWORD PTR [rsp+0x40],rax
   140001902:	mov    eax,DWORD PTR [rbp-0x34]
   140001905:	mov    DWORD PTR [rsp+0x38],eax
   140001909:	mov    eax,DWORD PTR [rbp-0x18]
   14000190c:	mov    DWORD PTR [rsp+0x30],r13d
   140001911:	mov    DWORD PTR [rsp+0x28],eax
   140001915:	mov    QWORD PTR [rsp+0x20],rsi
   14000191a:	call   0x140003140
   14000191f:	mov    QWORD PTR [rbp+0x20],rax
   140001923:	test   rax,rax
   140001926:	jne    0x1400019eb
   14000192c:	add    DWORD PTR [rbp-0x44],r14d
   140001930:	mov    r8,r12
   140001933:	mov    edx,DWORD PTR [rbp-0x50]
   140001936:	mov    rcx,rdi
   140001939:	call   QWORD PTR [rip+0x99d1]        # 0x14000b310
   14000193f:	test   rax,rax
   140001942:	jne    0x1400018c0
   140001948:	jmp    0x1400019eb
   14000194d:	mov    edx,0x9
   140001952:	call   QWORD PTR [rip+0x99b8]        # 0x14000b310
   140001958:	test   rax,rax
   14000195b:	je     0x1400019eb
   140001961:	mov    ebx,DWORD PTR [rbp-0x18]
   140001964:	mov    r15d,DWORD PTR [rbp-0x34]
   140001968:	mov    eax,DWORD PTR [rbp-0x20]
   14000196b:	lea    r9,[rbp+0x680]
   140001972:	mov    QWORD PTR [rsp+0x68],r12
   140001977:	lea    r8,[rbp-0x54]
   14000197b:	mov    DWORD PTR [rsp+0x60],eax
   14000197f:	lea    rdx,[rbp-0x58]
   140001983:	lea    rax,[rbp+0x18]
   140001987:	mov    rcx,rdi
   14000198a:	mov    QWORD PTR [rsp+0x58],rax
   14000198f:	lea    rax,[rbp+0x0]
   140001993:	mov    QWORD PTR [rsp+0x50],rax
   140001998:	lea    rax,[rbp-0x38]
   14000199c:	mov    QWORD PTR [rsp+0x48],rax
   1400019a1:	lea    rax,[rbp-0x44]
   1400019a5:	mov    QWORD PTR [rsp+0x40],rax
   1400019aa:	mov    DWORD PTR [rsp+0x38],r15d
   1400019af:	mov    DWORD PTR [rsp+0x30],r13d
   1400019b4:	mov    DWORD PTR [rsp+0x28],ebx
   1400019b8:	mov    QWORD PTR [rsp+0x20],rsi
   1400019bd:	call   0x140003140
   1400019c2:	mov    QWORD PTR [rbp+0x20],rax
   1400019c6:	test   rax,rax
   1400019c9:	jne    0x1400019e3
   1400019cb:	add    DWORD PTR [rbp-0x44],r14d
   1400019cf:	lea    edx,[rax+0x9]
   1400019d2:	mov    r8,r12
   1400019d5:	mov    rcx,rdi
   1400019d8:	call   QWORD PTR [rip+0x9932]        # 0x14000b310
   1400019de:	test   rax,rax
   1400019e1:	jne    0x140001968
   1400019e3:	mov    rbx,QWORD PTR [rbp-0x70]
   1400019e7:	mov    r15d,DWORD PTR [rbp-0x1c]
   1400019eb:	mov    rcx,r12
   1400019ee:	call   QWORD PTR [rip+0x99f4]        # 0x14000b3e8
   1400019f4:	mov    rcx,QWORD PTR [rbp-0x40]
   1400019f8:	call   QWORD PTR [rip+0x96e2]        # 0x14000b0e0
   1400019fe:	mov    rdi,QWORD PTR [rbp+0x20]
   140001a02:	test   rdi,rdi
   140001a05:	jne    0x140001bb3
   140001a0b:	call   QWORD PTR [rip+0x9687]        # 0x14000b098
   140001a11:	cmp    eax,0x3e7
   140001a16:	jne    0x140001a2e
   140001a18:	cmp    r15d,r14d
   140001a1b:	jne    0x140001a25
   140001a1d:	mov    rcx,rbx
   140001a20:	call   0x14000840c
   140001a25:	lea    rcx,[rbp-0x28]
   140001a29:	jmp    0x140001f32
   140001a2e:	cmp    DWORD PTR [rbp-0x18],0x0
   140001a32:	je     0x140001abf
   140001a38:	mov    ecx,r14d
   140001a3b:	call   0x14000a4f8
   140001a40:	mov    rcx,rax
   140001a43:	lea    rdx,[rip+0x9b16]        # 0x14000b560
   140001a4a:	call   0x1400066c4
   140001a4f:	xor    eax,eax
   140001a51:	lea    rdi,[rbp+0x18b0]
   140001a58:	mov    ecx,0x5f4
   140001a5d:	rep stos BYTE PTR es:[rdi],al
   140001a5f:	lea    rcx,[rbp-0x28]
   140001a63:	call   0x14000704c
   140001a68:	cmp    QWORD PTR [rbp-0x68],0x0
   140001a6d:	je     0x140001a78
   140001a6f:	lea    rcx,[rbp-0x68]
   140001a73:	call   0x14000704c
   140001a78:	cmp    QWORD PTR [rbp-0x80],0x0
   140001a7d:	je     0x140001a98
   140001a7f:	lea    rcx,[rbp-0x80]
   140001a83:	call   0x14000704c
   140001a88:	cmp    QWORD PTR [rbp-0x80],0x0
   140001a8d:	je     0x140001a98
   140001a8f:	lea    rcx,[rbp-0x60]
   140001a93:	call   0x14000704c
   140001a98:	cmp    r15d,r14d
   140001a9b:	jne    0x140001aa5
   140001a9d:	mov    rcx,rbx
   140001aa0:	call   0x14000840c
   140001aa5:	lea    rcx,[rbp-0x70]
   140001aa9:	call   0x14000704c
   140001aae:	lea    rcx,[rbp-0x78]
   140001ab2:	call   0x14000704c
   140001ab7:	xor    r14d,r14d
   140001aba:	jmp    0x140001f64
   140001abf:	test   rsi,rsi
   140001ac2:	je     0x140001b30
   140001ac4:	mov    rcx,rsi
   140001ac7:	call   0x1400072d0
   140001acc:	movsxd rcx,eax
   140001acf:	mov    rdi,rsi
   140001ad2:	xor    eax,eax
   140001ad4:	rep stos BYTE PTR es:[rdi],al
   140001ad6:	mov    rcx,rsi
   140001ad9:	call   0x1400072d0
   140001ade:	mov    r9d,DWORD PTR [rbp-0x48]
   140001ae2:	lea    r8,[rip+0x9a7f]        # 0x14000b568
   140001ae9:	movsxd rdx,eax
   140001aec:	mov    rcx,rsi
   140001aef:	mov    eax,DWORD PTR [rbp-0x4c]
   140001af2:	shr    rdx,1
   140001af5:	mov    DWORD PTR [rsp+0x20],eax
   140001af9:	call   0x140001008
   140001afe:	test   eax,eax
   140001b00:	jns    0x140001b8b
   140001b06:	movzx  ecx,ax
   140001b09:	call   QWORD PTR [rip+0x9591]        # 0x14000b0a0
   140001b0f:	call   0x140005550
   140001b14:	mov    ecx,0x2
   140001b19:	call   0x14000a4f8
   140001b1e:	mov    rcx,rax
   140001b21:	mov    edx,0x20001
   140001b26:	call   0x1400056fc
   140001b2b:	jmp    0x140001a18
   140001b30:	mov    ecx,0x3f8
   140001b35:	call   0x140007128
   140001b3a:	mov    QWORD PTR [rbp-0x60],rax
   140001b3e:	mov    rsi,rax
   140001b41:	test   rax,rax
   140001b44:	jne    0x140001b83
   140001b46:	lea    ecx,[rax+0x2]
   140001b49:	call   0x14000a4f8
   140001b4e:	mov    rcx,rax
   140001b51:	mov    edx,0x20001
   140001b56:	call   0x1400056fc
   140001b5b:	cmp    r15d,r14d
   140001b5e:	jne    0x140001b68
   140001b60:	mov    rcx,rbx
   140001b63:	call   0x14000840c
   140001b68:	lea    rcx,[rbp-0x28]
   140001b6c:	call   0x14000704c
   140001b71:	lea    rcx,[rbp-0x68]
   140001b75:	call   0x14000704c
   140001b7a:	lea    rcx,[rbp-0x80]
   140001b7e:	jmp    0x140001f4d
   140001b83:	mov    rcx,rax
   140001b86:	jmp    0x140001ad9
   140001b8b:	cmp    DWORD PTR [rbp-0x34],r14d
   140001b8f:	jne    0x140001b98
   140001b91:	mov    ecx,0x1394
   140001b96:	jmp    0x140001ba6
   140001b98:	cmp    r13d,r14d
   140001b9b:	jne    0x140001a18
   140001ba1:	mov    ecx,0x139a
   140001ba6:	mov    rdx,rsi
   140001ba9:	call   0x1400038c0
   140001bae:	jmp    0x140001a18
   140001bb3:	mov    ecx,0x80c
   140001bb8:	call   0x140007128
   140001bbd:	mov    QWORD PTR [rbp-0x40],rax
   140001bc1:	mov    rsi,rax
   140001bc4:	test   rax,rax
   140001bc7:	je     0x140001b14
   140001bcd:	mov    rcx,rdi
   140001bd0:	call   QWORD PTR [rip+0x96c2]        # 0x14000b298
   140001bd6:	mov    rcx,rsi
   140001bd9:	cmp    eax,0x400
   140001bde:	jbe    0x140001c12
   140001be0:	mov    r8d,0x401
   140001be6:	mov    rdx,rdi
   140001be9:	call   0x140006448
   140001bee:	mov    ecx,0x221
   140001bf3:	call   0x1400059b8
   140001bf8:	mov    ecx,0x2
   140001bfd:	mov    rdi,rax
   140001c00:	call   0x14000a4f8
   140001c05:	mov    rcx,rax
   140001c08:	mov    rdx,rdi
   140001c0b:	call   0x1400066c4
   140001c10:	jmp    0x140001c28
   140001c12:	call   0x1400072d0
   140001c17:	movsxd r8,eax
   140001c1a:	mov    rdx,rdi
   140001c1d:	shr    r8,1
   140001c20:	mov    rcx,rsi
   140001c23:	call   0x140006448
   140001c28:	mov    ecx,0x25a
   140001c2d:	call   0x1400059b8
   140001c32:	mov    ecx,r14d
   140001c35:	mov    rdi,rax
   140001c38:	call   0x14000a4f8
   140001c3d:	mov    rcx,rax
   140001c40:	mov    rdx,rdi
   140001c43:	call   0x1400066c4
   140001c48:	mov    ecx,r14d
   140001c4b:	call   0x14000a4f8
   140001c50:	mov    rcx,rax
   140001c53:	mov    rdx,rsi
   140001c56:	call   0x1400066c4
   140001c5b:	mov    ecx,r14d
   140001c5e:	call   0x14000a4f8
   140001c63:	mov    rcx,rax
   140001c66:	lea    rdx,[rip+0x990f]        # 0x14000b57c
   140001c6d:	call   0x1400066c4
   140001c72:	mov    rcx,rbx
   140001c75:	call   0x140007b70
   140001c7a:	mov    rcx,QWORD PTR [rbp-0x80]
   140001c7e:	test   eax,eax
   140001c80:	lea    rax,[rbx+0x4]
   140001c84:	mov    r9,rbx
   140001c87:	cmovne r9,rax
   140001c8b:	mov    r8d,r14d
   140001c8e:	mov    eax,DWORD PTR [rbp-0x10]
   140001c91:	mov    rdx,rsi
   140001c94:	mov    DWORD PTR [rsp+0x20],eax
   140001c98:	call   0x140002070
   140001c9d:	cmp    eax,r14d
   140001ca0:	jne    0x140001cbd
   140001ca2:	cmp    r15d,r14d
   140001ca5:	jne    0x140001caf
   140001ca7:	mov    rcx,rbx
   140001caa:	call   0x14000840c
   140001caf:	lea    rcx,[rbp-0x28]
   140001cb3:	call   0x14000704c
   140001cb8:	jmp    0x140001f2e
   140001cbd:	lea    rcx,[rbp-0x40]
   140001cc1:	call   0x14000704c
   140001cc6:	lea    rcx,[rbp-0x68]
   140001cca:	call   0x14000704c
   140001ccf:	lea    rcx,[rbp-0x80]
   140001cd3:	call   0x14000704c
   140001cd8:	lea    rcx,[rbp-0x60]
   140001cdc:	call   0x14000704c
   140001ce1:	lea    rcx,[rbp-0x70]
   140001ce5:	call   0x14000704c
   140001cea:	lea    rcx,[rbp-0x78]
   140001cee:	call   0x14000704c
   140001cf3:	mov    rbx,QWORD PTR [rbp-0x70]
   140001cf7:	jmp    0x140001fa5
   140001cfc:	lea    rdi,[rbp+0x18b0]
   140001d03:	xor    eax,eax
   140001d05:	mov    ecx,0x5f4
   140001d0a:	rep stos BYTE PTR es:[rdi],al
   140001d0c:	mov    ecx,0x20c
   140001d11:	jmp    0x140001880
   140001d16:	mov    ecx,0x1fc
   140001d1b:	call   0x140007128
   140001d20:	mov    QWORD PTR [rbp-0x30],rax
   140001d24:	test   rax,rax
   140001d27:	jne    0x140001d54
   140001d29:	lea    ecx,[rax+0x2]
   140001d2c:	call   0x14000a4f8
   140001d31:	mov    rcx,rax
   140001d34:	mov    edx,0x20001
   140001d39:	call   0x1400056fc
   140001d3e:	cmp    r15d,r14d
   140001d41:	jne    0x140001d4b
   140001d43:	mov    rcx,rbx
   140001d46:	call   0x14000840c
   140001d4b:	lea    rcx,[rbp-0x30]
   140001d4f:	jmp    0x140001f32
   140001d54:	mov    rcx,QWORD PTR [rbp-0x68]
   140001d58:	lea    r9,[rbp+0x10d0]
   140001d5f:	lea    r8,[rbp-0x8]
   140001d63:	lea    rdx,[rbp+0x14c0]
   140001d6a:	call   0x140003b60
   140001d6f:	cmp    eax,r14d
   140001d72:	jne    0x140001dae
   140001d74:	cmp    r15d,r14d
   140001d77:	jne    0x140001d81
   140001d79:	mov    rcx,rbx
   140001d7c:	call   0x14000840c
   140001d81:	lea    rcx,[rbp-0x30]
   140001d85:	call   0x14000704c
   140001d8a:	lea    rcx,[rbp-0x68]
   140001d8e:	call   0x14000704c
   140001d93:	lea    rcx,[rbp-0x80]
   140001d97:	call   0x14000704c
   140001d9c:	lea    rcx,[rbp-0x60]
   140001da0:	call   0x14000704c
   140001da5:	lea    rcx,[rbp-0x8]
   140001da9:	jmp    0x140001f4d
   140001dae:	mov    rsi,QWORD PTR [rbp-0x8]
   140001db2:	test   rsi,rsi
   140001db5:	jne    0x140001dd7
   140001db7:	mov    ecx,0x21a
   140001dbc:	call   0x1400059b8
   140001dc1:	lea    ecx,[rsi+0x2]
   140001dc4:	mov    rdi,rax
   140001dc7:	call   0x14000a4f8
   140001dcc:	mov    rcx,rax
   140001dcf:	mov    rdx,rdi
   140001dd2:	call   0x1400066c4
   140001dd7:	lea    rax,[rbp+0x14]
   140001ddb:	mov    rdx,rsi
   140001dde:	mov    QWORD PTR [rsp+0x38],rax
   140001de3:	lea    r9,[rbp-0x30]
   140001de7:	lea    rax,[rbp-0x50]
   140001deb:	mov    QWORD PTR [rsp+0x30],rax
   140001df0:	lea    r8,[rbp+0x10d0]
   140001df7:	lea    rcx,[rbp+0x14c0]
   140001dfe:	mov    QWORD PTR [rsp+0x28],rbx
   140001e03:	call   0x1400023cc
   140001e08:	mov    DWORD PTR [rbp-0x38],eax
   140001e0b:	cmp    eax,0x63
   140001e0e:	je     0x140001d74
   140001e14:	mov    r8d,DWORD PTR [rbp-0x50]
   140001e18:	lea    r9,[rbp+0x14]
   140001e1c:	lea    rdx,[rbp-0x30]
   140001e20:	lea    rcx,[rbp-0x38]
   140001e24:	call   0x140002da4
   140001e29:	cmp    eax,r14d
   140001e2c:	je     0x140001d74
   140001e32:	mov    rcx,rbx
   140001e35:	call   0x140007b70
   140001e3a:	mov    r8d,DWORD PTR [rbp-0x38]
   140001e3e:	test   eax,eax
   140001e40:	mov    rdx,QWORD PTR [rbp-0x30]
   140001e44:	lea    rax,[rbx+0x4]
   140001e48:	mov    rcx,QWORD PTR [rbp-0x80]
   140001e4c:	mov    r9,rbx
   140001e4f:	cmovne r9,rax
   140001e53:	mov    eax,DWORD PTR [rbp-0x10]
   140001e56:	mov    DWORD PTR [rsp+0x20],eax
   140001e5a:	call   0x140002070
   140001e5f:	cmp    eax,r14d
   140001e62:	jne    0x140001fa5
   140001e68:	jmp    0x140001d74
   140001e6d:	mov    rdi,QWORD PTR [rbp-0x60]
   140001e71:	mov    rcx,rdi
   140001e74:	call   0x14000307c
   140001e79:	mov    ecx,0x80c
   140001e7e:	mov    r12d,eax
   140001e81:	call   0x140007128
   140001e86:	mov    QWORD PTR [rbp-0x40],rax
   140001e8a:	mov    rsi,rax
   140001e8d:	test   rax,rax
   140001e90:	je     0x140001806
   140001e96:	test   rdi,rdi
   140001e99:	je     0x140001ee0
   140001e9b:	mov    rcx,rdi
   140001e9e:	call   QWORD PTR [rip+0x93f4]        # 0x14000b298
   140001ea4:	cmp    eax,0x400
   140001ea9:	jbe    0x140001ee0
   140001eab:	mov    r8d,0x401
   140001eb1:	mov    rdx,rdi
   140001eb4:	mov    rcx,rsi
   140001eb7:	call   0x140006448
   140001ebc:	mov    ecx,0x222
   140001ec1:	call   0x1400059b8
   140001ec6:	mov    ecx,0x2
   140001ecb:	mov    rdi,rax
   140001ece:	call   0x14000a4f8
   140001ed3:	mov    rcx,rax
   140001ed6:	mov    rdx,rdi
   140001ed9:	call   0x1400066c4
   140001ede:	jmp    0x140001ef1
   140001ee0:	mov    r8d,0x406
   140001ee6:	mov    rdx,rdi
   140001ee9:	mov    rcx,rsi
   140001eec:	call   0x140006448
   140001ef1:	mov    rcx,rbx
   140001ef4:	call   0x140007b70
   140001ef9:	mov    rcx,QWORD PTR [rbp-0x80]
   140001efd:	test   eax,eax
   140001eff:	lea    rax,[rbx+0x4]
   140001f03:	mov    r9,rbx
   140001f06:	cmovne r9,rax
   140001f0a:	mov    r8d,r12d
   140001f0d:	mov    eax,DWORD PTR [rbp-0x10]
   140001f10:	mov    rdx,rsi
   140001f13:	mov    DWORD PTR [rsp+0x20],eax
   140001f17:	call   0x140002070
   140001f1c:	cmp    eax,r14d
   140001f1f:	jne    0x140001f9c
   140001f21:	cmp    r15d,r14d
   140001f24:	jne    0x140001f2e
   140001f26:	mov    rcx,rbx
   140001f29:	call   0x14000840c
   140001f2e:	lea    rcx,[rbp-0x40]
   140001f32:	call   0x14000704c
   140001f37:	lea    rcx,[rbp-0x68]
   140001f3b:	call   0x14000704c
   140001f40:	lea    rcx,[rbp-0x80]
   140001f44:	call   0x14000704c
   140001f49:	lea    rcx,[rbp-0x60]
   140001f4d:	call   0x14000704c
   140001f52:	lea    rcx,[rbp-0x70]
   140001f56:	call   0x14000704c
   140001f5b:	lea    rcx,[rbp-0x78]
   140001f5f:	call   0x14000704c
   140001f64:	call   0x1400057b8
   140001f69:	mov    eax,r14d
   140001f6c:	mov    rcx,QWORD PTR [rbp+0x1eb0]
   140001f73:	xor    rcx,rsp
   140001f76:	call   0x140009fe0
   140001f7b:	lea    r11,[rsp+0x1fc0]
   140001f83:	mov    rbx,QWORD PTR [r11+0x30]
   140001f87:	mov    rsi,QWORD PTR [r11+0x40]
   140001f8b:	mov    rdi,QWORD PTR [r11+0x48]
   140001f8f:	mov    rsp,r11
   140001f92:	pop    r15
   140001f94:	pop    r14
   140001f96:	pop    r13
   140001f98:	pop    r12
   140001f9a:	pop    rbp
   140001f9b:	ret    
   140001f9c:	lea    rcx,[rbp-0x40]
   140001fa0:	call   0x14000704c
   140001fa5:	cmp    DWORD PTR [rbp-0x14],r14d
   140001fa9:	je     0x140001fbd
   140001fab:	test   rbx,rbx
   140001fae:	je     0x140001fbd
   140001fb0:	mov    rcx,rbx
   140001fb3:	call   QWORD PTR [rip+0x92df]        # 0x14000b298
   140001fb9:	test   eax,eax
   140001fbb:	jne    0x140001fef
   140001fbd:	xor    r8d,r8d
   140001fc0:	lea    rax,[rbp+0x20]
   140001fc4:	mov    QWORD PTR [rsp+0x30],rax
   140001fc9:	lea    r9,[rip+0x95b8]        # 0x14000b588
   140001fd0:	mov    DWORD PTR [rsp+0x28],0x1388
   140001fd8:	mov    ecx,0xffff
   140001fdd:	mov    DWORD PTR [rsp+0x20],0x2
   140001fe5:	lea    edx,[r8+0x1a]
   140001fe9:	call   QWORD PTR [rip+0xe031]        # 0x140010020
   140001fef:	mov    ecx,0x259
   140001ff4:	call   0x1400059b8
   140001ff9:	mov    ecx,r14d
   140001ffc:	mov    rdi,rax
   140001fff:	call   0x14000a4f8
   140002004:	mov    rcx,rax
   140002007:	mov    rdx,rdi
   14000200a:	call   0x1400066c4
   14000200f:	mov    rdx,rbx
   140002012:	mov    ecx,r15d
   140002015:	call   0x140004fcc
   14000201a:	lea    rcx,[rbp-0x30]
   14000201e:	call   0x14000704c
   140002023:	lea    rcx,[rbp-0x28]
   140002027:	call   0x14000704c
   14000202c:	lea    rcx,[rbp-0x68]
   140002030:	call   0x14000704c
   140002035:	lea    rcx,[rbp-0x80]
   140002039:	call   0x14000704c
   14000203e:	lea    rcx,[rbp-0x60]
   140002042:	call   0x14000704c
   140002047:	lea    rcx,[rbp-0x70]
   14000204b:	call   0x14000704c
   140002050:	lea    rcx,[rbp-0x78]
   140002054:	call   0x14000704c
   140002059:	call   0x1400057b8
   14000205e:	xor    ecx,ecx
   140002060:	call   QWORD PTR [rip+0x937a]        # 0x14000b3e0
   140002066:	int3   
   140002067:	int3   
   140002068:	int3   
   140002069:	int3   
   14000206a:	int3   
   14000206b:	int3   
   14000206c:	int3   
   14000206d:	int3   
   14000206e:	int3   
   14000206f:	int3   
   140002070:	mov    QWORD PTR [rsp+0x8],rbx
   140002075:	mov    QWORD PTR [rsp+0x10],rsi
   14000207a:	push   rbp
   14000207b:	push   rdi
   14000207c:	push   r12
   14000207e:	push   r14
   140002080:	push   r15
   140002082:	mov    rbp,rsp
   140002085:	sub    rsp,0x40
   140002089:	xor    ebx,ebx
   14000208b:	mov    r14,r9
   14000208e:	mov    QWORD PTR [rbp-0x10],rbx
   140002092:	mov    r12d,r8d
   140002095:	mov    QWORD PTR [rbp+0x48],rbx
   140002099:	mov    rsi,rdx
   14000209c:	mov    QWORD PTR [rbp-0x8],rbx
   1400020a0:	mov    r15,rcx
   1400020a3:	mov    edi,ebx
   1400020a5:	test   r9,r9
   1400020a8:	je     0x140002128
   1400020aa:	mov    rcx,r9
   1400020ad:	call   QWORD PTR [rip+0x91e5]        # 0x14000b298
   1400020b3:	test   eax,eax
   1400020b5:	je     0x140002128
   1400020b7:	mov    rcx,r14
   1400020ba:	call   QWORD PTR [rip+0x91d8]        # 0x14000b298
   1400020c0:	lea    ecx,[rax*2+0x14]
   1400020c7:	call   0x140007128
   1400020cc:	mov    QWORD PTR [rbp-0x8],rax
   1400020d0:	mov    rdi,rax
   1400020d3:	test   rax,rax
   1400020d6:	jne    0x1400020f2
   1400020d8:	lea    ecx,[rbx+0x2]
   1400020db:	call   0x14000a4f8
   1400020e0:	mov    rcx,rax
   1400020e3:	mov    edx,0x20001
   1400020e8:	call   0x1400056fc
   1400020ed:	jmp    0x1400023a9
   1400020f2:	mov    rcx,rax
   1400020f5:	call   0x1400072d0
   1400020fa:	movsxd r8,eax
   1400020fd:	lea    rdx,[rip+0x944c]        # 0x14000b550
   140002104:	shr    r8,1
   140002107:	mov    rcx,rdi
   14000210a:	call   0x140006448
   14000210f:	mov    rcx,rdi
   140002112:	call   0x1400072d0
   140002117:	movsxd r8,eax
   14000211a:	mov    rdx,r14
   14000211d:	shr    r8,1
   140002120:	mov    rcx,rdi
   140002123:	call   0x1400064ec
   140002128:	mov    eax,DWORD PTR [rbp+0x50]
   14000212b:	test   eax,eax
   14000212d:	je     0x14000226f
   140002133:	cmp    eax,0x1
   140002136:	je     0x140002148
   140002138:	lea    rcx,[rbp-0x8]
   14000213c:	call   0x14000704c
   140002141:	xor    eax,eax
   140002143:	jmp    0x1400023ae
   140002148:	lea    r8,[rbp+0x48]
   14000214c:	mov    rdx,0xffffffff80000002
   140002153:	mov    rcx,rdi
   140002156:	call   QWORD PTR [rip+0x90ac]        # 0x14000b208
   14000215c:	test   eax,eax
   14000215e:	je     0x14000216e
   140002160:	xor    edx,edx
   140002162:	mov    ecx,eax
   140002164:	call   0x1400038c0
   140002169:	jmp    0x140002360
   14000216e:	mov    rcx,QWORD PTR [rbp+0x48]
   140002172:	lea    rax,[rbp-0x10]
   140002176:	mov    r9d,0x20006
   14000217c:	mov    QWORD PTR [rsp+0x20],rax
   140002181:	xor    r8d,r8d
   140002184:	lea    rdx,[rip+0x9415]        # 0x14000b5a0
   14000218b:	call   QWORD PTR [rip+0x9067]        # 0x14000b1f8
   140002191:	test   eax,eax
   140002193:	jne    0x14000223f
   140002199:	test   rsi,rsi
   14000219c:	jne    0x1400021a2
   14000219e:	mov    eax,ebx
   1400021a0:	jmp    0x1400021ab
   1400021a2:	mov    rcx,rsi
   1400021a5:	call   QWORD PTR [rip+0x90ed]        # 0x14000b298
   1400021ab:	mov    rcx,QWORD PTR [rbp-0x10]
   1400021af:	lea    eax,[rax*2+0x2]
   1400021b6:	mov    DWORD PTR [rsp+0x28],eax
   1400021ba:	mov    r9d,r12d
   1400021bd:	xor    r8d,r8d
   1400021c0:	mov    QWORD PTR [rsp+0x20],rsi
   1400021c5:	mov    rdx,r15
   1400021c8:	call   QWORD PTR [rip+0x901a]        # 0x14000b1e8
   1400021ce:	test   eax,eax
   1400021d0:	je     0x140002218
   1400021d2:	mov    rdx,r15
   1400021d5:	mov    ecx,eax
   1400021d7:	call   0x1400038c0
   1400021dc:	mov    rcx,QWORD PTR [rbp+0x48]
   1400021e0:	call   QWORD PTR [rip+0x900a]        # 0x14000b1f0
   1400021e6:	test   eax,eax
   1400021e8:	je     0x140002201
   1400021ea:	mov    ecx,0x2
   1400021ef:	call   0x14000a4f8
   1400021f4:	mov    rcx,rax
   1400021f7:	mov    edx,0x10001
   1400021fc:	call   0x1400056fc
   140002201:	mov    rcx,QWORD PTR [rbp-0x10]
   140002205:	call   QWORD PTR [rip+0x8fe5]        # 0x14000b1f0
   14000220b:	test   eax,eax
   14000220d:	je     0x140002360
   140002213:	jmp    0x140002349
   140002218:	mov    rcx,QWORD PTR [rbp-0x10]
   14000221c:	test   rcx,rcx
   14000221f:	je     0x140002227
   140002221:	call   QWORD PTR [rip+0x8fc9]        # 0x14000b1f0
   140002227:	mov    rcx,QWORD PTR [rbp+0x48]
   14000222b:	test   rcx,rcx
   14000222e:	je     0x140002365
   140002234:	call   QWORD PTR [rip+0x8fb6]        # 0x14000b1f0
   14000223a:	jmp    0x140002365
   14000223f:	xor    edx,edx
   140002241:	mov    ecx,eax
   140002243:	call   0x1400038c0
   140002248:	mov    rcx,QWORD PTR [rbp-0x10]
   14000224c:	test   rcx,rcx
   14000224f:	je     0x140002257
   140002251:	call   QWORD PTR [rip+0x8f99]        # 0x14000b1f0
   140002257:	mov    rcx,QWORD PTR [rbp+0x48]
   14000225b:	test   rcx,rcx
   14000225e:	je     0x140002360
   140002264:	call   QWORD PTR [rip+0x8f86]        # 0x14000b1f0
   14000226a:	jmp    0x140002360
   14000226f:	lea    r8,[rbp+0x48]
   140002273:	mov    rdx,0xffffffff80000001
   14000227a:	mov    rcx,rdi
   14000227d:	call   QWORD PTR [rip+0x8f85]        # 0x14000b208
   140002283:	test   eax,eax
   140002285:	je     0x140002295
   140002287:	xor    edx,edx
   140002289:	mov    ecx,eax
   14000228b:	call   0x1400038c0
   140002290:	jmp    0x1400023a0
   140002295:	mov    rcx,QWORD PTR [rbp+0x48]
   140002299:	lea    rax,[rbp-0x10]
   14000229d:	mov    r9d,0x20006
   1400022a3:	mov    QWORD PTR [rsp+0x20],rax
   1400022a8:	xor    r8d,r8d
   1400022ab:	lea    rdx,[rip+0x92d6]        # 0x14000b588
   1400022b2:	call   QWORD PTR [rip+0x8f40]        # 0x14000b1f8
   1400022b8:	test   eax,eax
   1400022ba:	jne    0x140002372
   1400022c0:	test   rsi,rsi
   1400022c3:	jne    0x1400022c9
   1400022c5:	mov    eax,ebx
   1400022c7:	jmp    0x1400022d2
   1400022c9:	mov    rcx,rsi
   1400022cc:	call   QWORD PTR [rip+0x8fc6]        # 0x14000b298
   1400022d2:	mov    rcx,QWORD PTR [rbp-0x10]
   1400022d6:	lea    eax,[rax*2+0x2]
   1400022dd:	mov    DWORD PTR [rsp+0x28],eax
   1400022e1:	mov    r9d,r12d
   1400022e4:	xor    r8d,r8d
   1400022e7:	mov    QWORD PTR [rsp+0x20],rsi
   1400022ec:	mov    rdx,r15
   1400022ef:	call   QWORD PTR [rip+0x8ef3]        # 0x14000b1e8
   1400022f5:	test   eax,eax
   1400022f7:	je     0x14000232d
   1400022f9:	xor    edx,edx
   1400022fb:	mov    ecx,eax
   1400022fd:	call   0x1400038c0
   140002302:	mov    rcx,QWORD PTR [rbp+0x48]
   140002306:	call   QWORD PTR [rip+0x8ee4]        # 0x14000b1f0
   14000230c:	test   eax,eax
   14000230e:	je     0x140002327
   140002310:	mov    ecx,0x2
   140002315:	call   0x14000a4f8
   14000231a:	mov    rcx,rax
   14000231d:	mov    edx,0x10001
   140002322:	call   0x1400056fc
   140002327:	mov    rcx,QWORD PTR [rbp-0x10]
   14000232b:	jmp    0x14000237f
   14000232d:	mov    rcx,QWORD PTR [rbp+0x48]
   140002331:	call   QWORD PTR [rip+0x8eb9]        # 0x14000b1f0
   140002337:	test   eax,eax
   140002339:	jne    0x140002389
   14000233b:	mov    rcx,QWORD PTR [rbp-0x10]
   14000233f:	call   QWORD PTR [rip+0x8eab]        # 0x14000b1f0
   140002345:	test   eax,eax
   140002347:	je     0x140002365
   140002349:	mov    ecx,0x2
   14000234e:	call   0x14000a4f8
   140002353:	mov    edx,0x10001
   140002358:	mov    rcx,rax
   14000235b:	call   0x1400056fc
   140002360:	mov    ebx,0x1
   140002365:	lea    rcx,[rbp-0x8]
   140002369:	call   0x14000704c
   14000236e:	mov    eax,ebx
   140002370:	jmp    0x1400023ae
   140002372:	xor    edx,edx
   140002374:	mov    ecx,eax
   140002376:	call   0x1400038c0
   14000237b:	mov    rcx,QWORD PTR [rbp+0x48]
   14000237f:	call   QWORD PTR [rip+0x8e6b]        # 0x14000b1f0
   140002385:	test   eax,eax
   140002387:	je     0x1400023a0
   140002389:	mov    ecx,0x2
   14000238e:	call   0x14000a4f8
   140002393:	mov    edx,0x10001
   140002398:	mov    rcx,rax
   14000239b:	call   0x1400056fc
   1400023a0:	lea    rcx,[rbp-0x8]
   1400023a4:	call   0x14000704c
   1400023a9:	mov    eax,0x1
   1400023ae:	mov    rbx,QWORD PTR [rsp+0x70]
   1400023b3:	mov    rsi,QWORD PTR [rsp+0x78]
   1400023b8:	add    rsp,0x40
   1400023bc:	pop    r15
   1400023be:	pop    r14
   1400023c0:	pop    r12
   1400023c2:	pop    rdi
   1400023c3:	pop    rbp
   1400023c4:	ret    
   1400023c5:	int3   
   1400023c6:	int3   
   1400023c7:	int3   
   1400023c8:	int3   
   1400023c9:	int3   
   1400023ca:	int3   
   1400023cb:	int3   
   1400023cc:	rex push rbp
   1400023ce:	push   rbx
   1400023cf:	push   rsi
   1400023d0:	push   rdi
   1400023d1:	push   r12
   1400023d3:	push   r13
   1400023d5:	push   r14
   1400023d7:	push   r15
   1400023d9:	lea    rbp,[rsp-0x798]
   1400023e1:	sub    rsp,0x898
   1400023e8:	mov    rax,QWORD PTR [rip+0xbc19]        # 0x14000e008
   1400023ef:	xor    rax,rsp
   1400023f2:	mov    QWORD PTR [rbp+0x780],rax
   1400023f9:	mov    rax,QWORD PTR [rbp+0x810]
   140002400:	lea    rdi,[rsp+0x70]
   140002405:	mov    r13,QWORD PTR [rbp+0x808]
   14000240c:	mov    r14,r9
   14000240f:	mov    QWORD PTR [rsp+0x60],rcx
   140002414:	mov    rsi,r8
   140002417:	mov    QWORD PTR [rsp+0x68],rax
   14000241c:	mov    r15,rdx
   14000241f:	mov    rax,QWORD PTR [rbp+0x818]
   140002426:	lea    rdx,[rip+0x91f3]        # 0x14000b620
   14000242d:	mov    QWORD PTR [rsp+0x58],rax
   140002432:	mov    ecx,0x802
   140002437:	xor    eax,eax
   140002439:	xor    r9d,r9d
   14000243c:	rep stos BYTE PTR es:[rdi],al
   14000243e:	mov    rdi,QWORD PTR [rsp+0x60]
   140002443:	lea    r8d,[rax+0x1]
   140002447:	mov    ebx,eax
   140002449:	mov    QWORD PTR [rsp+0x40],rax
   14000244e:	mov    rcx,rdi
   140002451:	mov    DWORD PTR [rsp+0x30],eax
   140002455:	mov    DWORD PTR [rsp+0x48],eax
   140002459:	mov    r12d,eax
   14000245c:	mov    QWORD PTR [rsp+0x38],rax
   140002461:	mov    QWORD PTR [rsp+0x50],rax
   140002466:	call   0x1400065e0
   14000246b:	test   eax,eax
   14000246d:	je     0x14000248a
   14000246f:	xor    r9d,r9d
   140002472:	lea    r8d,[r12+0x1]
   140002477:	lea    rdx,[rip+0x91ca]        # 0x14000b648
   14000247e:	mov    rcx,rdi
   140002481:	call   0x1400065e0
   140002486:	test   eax,eax
   140002488:	jne    0x14000248f
   14000248a:	mov    ebx,0x1
   14000248f:	xor    r9d,r9d
   140002492:	lea    rdx,[rip+0x91bf]        # 0x14000b658
   140002499:	mov    rcx,rdi
   14000249c:	lea    r8d,[r9+0x1]
   1400024a0:	call   0x1400065e0
   1400024a5:	test   eax,eax
   1400024a7:	je     0x1400024c3
   1400024a9:	xor    r9d,r9d
   1400024ac:	lea    rdx,[rip+0x91cd]        # 0x14000b680
   1400024b3:	mov    rcx,rdi
   1400024b6:	lea    r8d,[r9+0x1]
   1400024ba:	call   0x1400065e0
   1400024bf:	test   eax,eax
   1400024c1:	jne    0x1400024c8
   1400024c3:	mov    ebx,0x2
   1400024c8:	test   r13,r13
   1400024cb:	je     0x14000257a
   1400024d1:	mov    rcx,r13
   1400024d4:	call   QWORD PTR [rip+0x8dbe]        # 0x14000b298
   1400024da:	test   eax,eax
   1400024dc:	je     0x14000257a
   1400024e2:	mov    rcx,r13
   1400024e5:	call   QWORD PTR [rip+0x8dad]        # 0x14000b298
   1400024eb:	lea    ecx,[rax*2+0x14]
   1400024f2:	call   0x140007128
   1400024f7:	mov    QWORD PTR [rsp+0x50],rax
   1400024fc:	mov    r12,rax
   1400024ff:	test   rax,rax
   140002502:	jne    0x140002520
   140002504:	mov    ecx,0x2
   140002509:	call   0x14000a4f8
   14000250e:	mov    edx,0x20001
   140002513:	mov    rcx,rax
   140002516:	call   0x1400056fc
   14000251b:	jmp    0x140002d75
   140002520:	mov    rcx,r13
   140002523:	call   0x140007b70
   140002528:	mov    rcx,r12
   14000252b:	test   eax,eax
   14000252d:	jne    0x140002564
   14000252f:	call   0x1400072d0
   140002534:	movsxd r8,eax
   140002537:	lea    rdx,[rip+0x9012]        # 0x14000b550
   14000253e:	shr    r8,1
   140002541:	mov    rcx,r12
   140002544:	call   0x140006448
   140002549:	mov    rcx,r12
   14000254c:	call   0x1400072d0
   140002551:	movsxd r8,eax
   140002554:	mov    rdx,r13
   140002557:	shr    r8,1
   14000255a:	mov    rcx,r12
   14000255d:	call   0x1400064ec
   140002562:	jmp    0x14000257a
   140002564:	call   0x1400072d0
   140002569:	movsxd r8,eax
   14000256c:	mov    rdx,r13
   14000256f:	shr    r8,1
   140002572:	mov    rcx,r12
   140002575:	call   0x140006448
   14000257a:	xor    r13d,r13d
   14000257d:	test   rsi,rsi
   140002580:	je     0x14000258f
   140002582:	mov    rcx,rsi
   140002585:	call   QWORD PTR [rip+0x8d0d]        # 0x14000b298
   14000258b:	test   eax,eax
   14000258d:	jne    0x140002592
   14000258f:	mov    rsi,r13
   140002592:	test   ebx,ebx
   140002594:	je     0x140002d45
   14000259a:	sub    ebx,0x1
   14000259d:	je     0x140002a7e
   1400025a3:	cmp    ebx,0x1
   1400025a6:	jne    0x140002a0a
   1400025ac:	lea    r8,[rsp+0x38]
   1400025b1:	mov    rdx,0xffffffff80000001
   1400025b8:	mov    rcx,r12
   1400025bb:	call   QWORD PTR [rip+0x8c47]        # 0x14000b208
   1400025c1:	test   eax,eax
   1400025c3:	je     0x1400025dd
   1400025c5:	xor    edx,edx
   1400025c7:	mov    ecx,eax
   1400025c9:	call   0x1400038c0
   1400025ce:	lea    rcx,[rsp+0x50]
   1400025d3:	call   0x14000704c
   1400025d8:	jmp    0x140002d75
   1400025dd:	lea    rcx,[rsp+0x50]
   1400025e2:	call   0x14000704c
   1400025e7:	mov    rcx,QWORD PTR [rsp+0x38]
   1400025ec:	lea    rax,[rsp+0x40]
   1400025f1:	mov    r9d,0x1
   1400025f7:	mov    QWORD PTR [rsp+0x20],rax
   1400025fc:	xor    r8d,r8d
   1400025ff:	mov    rdx,r15
   140002602:	call   QWORD PTR [rip+0x8bf0]        # 0x14000b1f8
   140002608:	test   eax,eax
   14000260a:	jne    0x140002a1e
   140002610:	mov    rcx,QWORD PTR [rsp+0x40]
   140002615:	lea    rax,[rsp+0x30]
   14000261a:	mov    QWORD PTR [rsp+0x28],rax
   14000261f:	lea    r9,[rsp+0x48]
   140002624:	xor    r8d,r8d
   140002627:	mov    QWORD PTR [rsp+0x20],r13
   14000262c:	mov    rdx,rsi
   14000262f:	call   QWORD PTR [rip+0x8bab]        # 0x14000b1e0
   140002635:	mov    ebx,0x10001
   14000263a:	test   eax,eax
   14000263c:	je     0x140002847
   140002642:	mov    rcx,QWORD PTR [rsp+0x40]
   140002647:	call   QWORD PTR [rip+0x8ba3]        # 0x14000b1f0
   14000264d:	test   eax,eax
   14000264f:	je     0x140002665
   140002651:	mov    ecx,0x2
   140002656:	call   0x14000a4f8
   14000265b:	mov    rcx,rax
   14000265e:	mov    edx,ebx
   140002660:	call   0x1400056fc
   140002665:	test   r15,r15
   140002668:	jne    0x14000266f
   14000266a:	mov    edi,r13d
   14000266d:	jmp    0x14000267a
   14000266f:	mov    rcx,r15
   140002672:	call   QWORD PTR [rip+0x8c20]        # 0x14000b298
   140002678:	mov    edi,eax
   14000267a:	test   rsi,rsi
   14000267d:	jne    0x140002684
   14000267f:	mov    eax,r13d
   140002682:	jmp    0x14000268d
   140002684:	mov    rcx,rsi
   140002687:	call   QWORD PTR [rip+0x8c0b]        # 0x14000b298
   14000268d:	lea    r12d,[rdi+0x64]
   140002691:	add    r12d,eax
   140002694:	lea    ecx,[r12+r12*1]
   140002698:	call   0x140007128
   14000269d:	mov    QWORD PTR [rsp+0x50],rax
   1400026a2:	mov    rdi,rax
   1400026a5:	test   rax,rax
   1400026a8:	jne    0x1400026e2
   1400026aa:	mov    ecx,0x2
   1400026af:	call   0x14000a4f8
   1400026b4:	mov    rcx,rax
   1400026b7:	mov    edx,ebx
   1400026b9:	call   0x1400056fc
   1400026be:	mov    rcx,QWORD PTR [rsp+0x38]
   1400026c3:	call   QWORD PTR [rip+0x8b27]        # 0x14000b1f0
   1400026c9:	test   eax,eax
   1400026cb:	je     0x140002d75
   1400026d1:	mov    ecx,0x2
   1400026d6:	call   0x14000a4f8
   1400026db:	mov    edx,ebx
   1400026dd:	jmp    0x140002513
   1400026e2:	test   r15,r15
   1400026e5:	je     0x140002712
   1400026e7:	mov    rcx,r15
   1400026ea:	call   QWORD PTR [rip+0x8ba8]        # 0x14000b298
   1400026f0:	test   eax,eax
   1400026f2:	je     0x140002712
   1400026f4:	mov    r8d,r12d
   1400026f7:	mov    rdx,r15
   1400026fa:	mov    rcx,rdi
   1400026fd:	call   0x140006448
   140002702:	mov    r8d,r12d
   140002705:	mov    rdx,rsi
   140002708:	mov    rcx,rdi
   14000270b:	call   0x1400064ec
   140002710:	jmp    0x140002754
   140002712:	xor    r9d,r9d
   140002715:	lea    rcx,[rip+0x8f64]        # 0x14000b680
   14000271c:	mov    rdx,rsi
   14000271f:	lea    r8d,[r9+0x1]
   140002723:	call   0x1400065e0
   140002728:	test   eax,eax
   14000272a:	je     0x140002754
   14000272c:	xor    r9d,r9d
   14000272f:	lea    rcx,[rip+0x8f22]        # 0x14000b658
   140002736:	mov    rdx,rsi
   140002739:	lea    r8d,[r9+0x1]
   14000273d:	call   0x1400065e0
   140002742:	test   eax,eax
   140002744:	je     0x140002754
   140002746:	mov    r8d,r12d
   140002749:	mov    rdx,rsi
   14000274c:	mov    rcx,rdi
   14000274f:	call   0x140006448
   140002754:	mov    rcx,QWORD PTR [rsp+0x38]
   140002759:	lea    rax,[rsp+0x40]
   14000275e:	mov    r9d,0x1
   140002764:	mov    QWORD PTR [rsp+0x20],rax
   140002769:	xor    r8d,r8d
   14000276c:	lea    rsi,[rip+0x8f19]        # 0x14000b68c
   140002773:	mov    rdx,rdi
   140002776:	call   QWORD PTR [rip+0x8a7c]        # 0x14000b1f8
   14000277c:	test   eax,eax
   14000277e:	jne    0x140002893
   140002784:	mov    rcx,QWORD PTR [rsp+0x40]
   140002789:	lea    rax,[rsp+0x30]
   14000278e:	mov    QWORD PTR [rsp+0x28],rax
   140002793:	lea    r9,[rsp+0x48]
   140002798:	xor    r8d,r8d
   14000279b:	mov    QWORD PTR [rsp+0x20],r13
   1400027a0:	lea    rdx,[rip+0x8ee5]        # 0x14000b68c
   1400027a7:	call   QWORD PTR [rip+0x8a33]        # 0x14000b1e0
   1400027ad:	test   eax,eax
   1400027af:	je     0x14000283d
   1400027b5:	cmp    eax,0xa1
   1400027ba:	je     0x1400027cc
   1400027bc:	cmp    eax,0x2
   1400027bf:	je     0x1400027cc
   1400027c1:	xor    edx,edx
   1400027c3:	mov    ecx,eax
   1400027c5:	call   0x1400038c0
   1400027ca:	jmp    0x1400027ee
   1400027cc:	mov    ecx,0x1f7
   1400027d1:	call   0x1400059b8
   1400027d6:	mov    ecx,0x2
   1400027db:	mov    rdi,rax
   1400027de:	call   0x14000a4f8
   1400027e3:	mov    rdx,rdi
   1400027e6:	mov    rcx,rax
   1400027e9:	call   0x1400066c4
   1400027ee:	mov    rcx,QWORD PTR [rsp+0x38]
   1400027f3:	call   QWORD PTR [rip+0x89f7]        # 0x14000b1f0
   1400027f9:	test   eax,eax
   1400027fb:	je     0x140002811
   1400027fd:	mov    ecx,0x2
   140002802:	call   0x14000a4f8
   140002807:	mov    rcx,rax
   14000280a:	mov    edx,ebx
   14000280c:	call   0x1400056fc
   140002811:	mov    rcx,QWORD PTR [rsp+0x40]
   140002816:	call   QWORD PTR [rip+0x89d4]        # 0x14000b1f0
   14000281c:	test   eax,eax
   14000281e:	je     0x1400025ce
   140002824:	mov    ecx,0x2
   140002829:	call   0x14000a4f8
   14000282e:	mov    rcx,rax
   140002831:	mov    edx,ebx
   140002833:	call   0x1400056fc
   140002838:	jmp    0x1400025ce
   14000283d:	lea    rcx,[rsp+0x50]
   140002842:	call   0x14000704c
   140002847:	mov    edx,DWORD PTR [rsp+0x30]
   14000284b:	cmp    edx,0xfe
   140002851:	jbe    0x1400028d0
   140002853:	add    edx,edx
   140002855:	mov    rcx,r14
   140002858:	call   0x1400071c8
   14000285d:	test   eax,eax
   14000285f:	jne    0x1400028d0
   140002861:	mov    ecx,0x2
   140002866:	call   0x14000a4f8
   14000286b:	mov    rcx,rax
   14000286e:	mov    edx,0x20001
   140002873:	call   0x1400056fc
   140002878:	mov    rcx,QWORD PTR [rsp+0x38]
   14000287d:	call   QWORD PTR [rip+0x896d]        # 0x14000b1f0
   140002883:	mov    rcx,QWORD PTR [rsp+0x40]
   140002888:	call   QWORD PTR [rip+0x8962]        # 0x14000b1f0
   14000288e:	jmp    0x140002d75
   140002893:	cmp    eax,0xa1
   140002898:	je     0x1400028a4
   14000289a:	mov    ecx,0x1f6
   14000289f:	cmp    eax,0x2
   1400028a2:	jne    0x1400028a9
   1400028a4:	mov    ecx,0x1f7
   1400028a9:	call   0x1400059b8
   1400028ae:	mov    ecx,0x2
   1400028b3:	mov    rdi,rax
   1400028b6:	call   0x14000a4f8
   1400028bb:	mov    rdx,rdi
   1400028be:	mov    rcx,rax
   1400028c1:	call   0x1400066c4
   1400028c6:	mov    rcx,QWORD PTR [rsp+0x38]
   1400028cb:	jmp    0x140002816
   1400028d0:	mov    rcx,QWORD PTR [rsp+0x40]
   1400028d5:	lea    rax,[rsp+0x30]
   1400028da:	mov    QWORD PTR [rsp+0x28],rax
   1400028df:	lea    r9,[rsp+0x48]
   1400028e4:	mov    rax,QWORD PTR [r14]
   1400028e7:	xor    r8d,r8d
   1400028ea:	mov    rdx,rsi
   1400028ed:	mov    QWORD PTR [rsp+0x20],rax
   1400028f2:	call   QWORD PTR [rip+0x88e8]        # 0x14000b1e0
   1400028f8:	test   eax,eax
   1400028fa:	je     0x140002962
   1400028fc:	cmp    eax,0xa1
   140002901:	je     0x140002913
   140002903:	cmp    eax,0x2
   140002906:	je     0x140002913
   140002908:	xor    edx,edx
   14000290a:	mov    ecx,eax
   14000290c:	call   0x1400038c0
   140002911:	jmp    0x140002935
   140002913:	mov    ecx,0x1f7
   140002918:	call   0x1400059b8
   14000291d:	mov    ecx,0x2
   140002922:	mov    rdi,rax
   140002925:	call   0x14000a4f8
   14000292a:	mov    rcx,rax
   14000292d:	mov    rdx,rdi
   140002930:	call   0x1400066c4
   140002935:	mov    rcx,QWORD PTR [rsp+0x38]
   14000293a:	call   QWORD PTR [rip+0x88b0]        # 0x14000b1f0
   140002940:	test   eax,eax
   140002942:	je     0x140002958
   140002944:	mov    ecx,0x2
   140002949:	call   0x14000a4f8
   14000294e:	mov    rcx,rax
   140002951:	mov    edx,ebx
   140002953:	call   0x1400056fc
   140002958:	mov    rcx,QWORD PTR [rsp+0x40]
   14000295d:	jmp    0x1400026c3
   140002962:	mov    rcx,QWORD PTR [r14]
   140002965:	test   rcx,rcx
   140002968:	je     0x1400029b2
   14000296a:	call   QWORD PTR [rip+0x8928]        # 0x14000b298
   140002970:	mov    esi,eax
   140002972:	cmp    eax,0x400
   140002977:	jbe    0x1400029b2
   140002979:	mov    rdx,QWORD PTR [r14]
   14000297c:	lea    rcx,[rsp+0x70]
   140002981:	mov    r8d,0x401
   140002987:	call   0x140006448
   14000298c:	mov    ecx,DWORD PTR [rsp+0x30]
   140002990:	lea    rdx,[rsp+0x70]
   140002995:	mov    rdi,QWORD PTR [r14]
   140002998:	xor    eax,eax
   14000299a:	rep stos BYTE PTR es:[rdi],al
   14000299c:	mov    rcx,QWORD PTR [r14]
   14000299f:	mov    r8d,esi
   1400029a2:	call   0x140006448
   1400029a7:	mov    rax,QWORD PTR [rsp+0x58]
   1400029ac:	mov    DWORD PTR [rax],0x1
   1400029b2:	cmp    DWORD PTR [rsp+0x48],0x4
   1400029b7:	jne    0x1400029d4
   1400029b9:	mov    rdi,QWORD PTR [r14]
   1400029bc:	jmp    0x140002d18
   1400029c1:	movzx  ecx,ax
   1400029c4:	call   QWORD PTR [rip+0x86d6]        # 0x14000b0a0
   1400029ca:	call   0x140005550
   1400029cf:	jmp    0x140002504
   1400029d4:	mov    rcx,QWORD PTR [rsp+0x38]
   1400029d9:	call   QWORD PTR [rip+0x8811]        # 0x14000b1f0
   1400029df:	test   eax,eax
   1400029e1:	je     0x1400029f7
   1400029e3:	mov    ecx,0x2
   1400029e8:	call   0x14000a4f8
   1400029ed:	mov    rcx,rax
   1400029f0:	mov    edx,ebx
   1400029f2:	call   0x1400056fc
   1400029f7:	mov    rcx,QWORD PTR [rsp+0x40]
   1400029fc:	call   QWORD PTR [rip+0x87ee]        # 0x14000b1f0
   140002a02:	test   eax,eax
   140002a04:	jne    0x1400026d1
   140002a0a:	mov    eax,DWORD PTR [rsp+0x30]
   140002a0e:	mov    rcx,QWORD PTR [rsp+0x68]
   140002a13:	mov    DWORD PTR [rcx],eax
   140002a15:	mov    eax,DWORD PTR [rsp+0x48]
   140002a19:	jmp    0x140002d7a
   140002a1e:	cmp    eax,0xa1
   140002a23:	je     0x140002a35
   140002a25:	cmp    eax,0x2
   140002a28:	je     0x140002a35
   140002a2a:	xor    edx,edx
   140002a2c:	mov    ecx,eax
   140002a2e:	call   0x1400038c0
   140002a33:	jmp    0x140002a57
   140002a35:	mov    ecx,0x1f7
   140002a3a:	call   0x1400059b8
   140002a3f:	mov    ecx,0x2
   140002a44:	mov    rdi,rax
   140002a47:	call   0x14000a4f8
   140002a4c:	mov    rcx,rax
   140002a4f:	mov    rdx,rdi
   140002a52:	call   0x1400066c4
   140002a57:	mov    rcx,QWORD PTR [rsp+0x38]
   140002a5c:	call   QWORD PTR [rip+0x878e]        # 0x14000b1f0
   140002a62:	test   eax,eax
   140002a64:	je     0x140002d75
   140002a6a:	mov    ecx,0x2
   140002a6f:	call   0x14000a4f8
   140002a74:	mov    edx,0x10001
   140002a79:	jmp    0x140002513
   140002a7e:	lea    r8,[rsp+0x38]
   140002a83:	mov    rdx,0xffffffff80000002
   140002a8a:	mov    rcx,r12
   140002a8d:	call   QWORD PTR [rip+0x8775]        # 0x14000b208
   140002a93:	test   eax,eax
   140002a95:	jne    0x1400025c5
   140002a9b:	lea    rcx,[rsp+0x50]
   140002aa0:	call   0x14000704c
   140002aa5:	mov    rcx,QWORD PTR [rsp+0x38]
   140002aaa:	lea    rax,[rsp+0x40]
   140002aaf:	mov    r9d,0x1
   140002ab5:	mov    QWORD PTR [rsp+0x20],rax
   140002aba:	xor    r8d,r8d
   140002abd:	mov    rdx,r15
   140002ac0:	call   QWORD PTR [rip+0x8732]        # 0x14000b1f8
   140002ac6:	test   eax,eax
   140002ac8:	jne    0x140002a1e
   140002ace:	mov    rcx,QWORD PTR [rsp+0x40]
   140002ad3:	lea    rax,[rsp+0x30]
   140002ad8:	mov    QWORD PTR [rsp+0x28],rax
   140002add:	lea    r9,[rsp+0x48]
   140002ae2:	xor    r8d,r8d
   140002ae5:	mov    QWORD PTR [rsp+0x20],r13
   140002aea:	mov    rdx,rsi
   140002aed:	mov    DWORD PTR [rsp+0x30],0x1fc
   140002af5:	call   QWORD PTR [rip+0x86e5]        # 0x14000b1e0
   140002afb:	mov    ebx,0x10001
   140002b00:	test   eax,eax
   140002b02:	je     0x140002c63
   140002b08:	mov    rcx,QWORD PTR [rsp+0x40]
   140002b0d:	call   QWORD PTR [rip+0x86dd]        # 0x14000b1f0
   140002b13:	test   eax,eax
   140002b15:	je     0x140002b2b
   140002b17:	mov    ecx,0x2
   140002b1c:	call   0x14000a4f8
   140002b21:	mov    rcx,rax
   140002b24:	mov    edx,ebx
   140002b26:	call   0x1400056fc
   140002b2b:	test   r15,r15
   140002b2e:	jne    0x140002b35
   140002b30:	mov    edi,r13d
   140002b33:	jmp    0x140002b40
   140002b35:	mov    rcx,r15
   140002b38:	call   QWORD PTR [rip+0x875a]        # 0x14000b298
   140002b3e:	mov    edi,eax
   140002b40:	test   rsi,rsi
   140002b43:	jne    0x140002b4a
   140002b45:	mov    eax,r13d
   140002b48:	jmp    0x140002b53
   140002b4a:	mov    rcx,rsi
   140002b4d:	call   QWORD PTR [rip+0x8745]        # 0x14000b298
   140002b53:	lea    r12d,[rdi+0x64]
   140002b57:	add    r12d,eax
   140002b5a:	lea    ecx,[r12+r12*1]
   140002b5e:	call   0x140007128
   140002b63:	mov    QWORD PTR [rsp+0x50],rax
   140002b68:	mov    rdi,rax
   140002b6b:	test   rax,rax
   140002b6e:	je     0x1400026aa
   140002b74:	test   r15,r15
   140002b77:	je     0x140002bb6
   140002b79:	mov    rcx,r15
   140002b7c:	call   QWORD PTR [rip+0x8716]        # 0x14000b298
   140002b82:	test   eax,eax
   140002b84:	je     0x140002bb6
   140002b86:	mov    r8d,r12d
   140002b89:	mov    rdx,r15
   140002b8c:	mov    rcx,rdi
   140002b8f:	call   0x140006448
   140002b94:	mov    r8d,r12d
   140002b97:	lea    rdx,[rip+0x89ba]        # 0x14000b558
   140002b9e:	mov    rcx,rdi
   140002ba1:	call   0x1400064ec
   140002ba6:	mov    r8d,r12d
   140002ba9:	mov    rdx,rsi
   140002bac:	mov    rcx,rdi
   140002baf:	call   0x1400064ec
   140002bb4:	jmp    0x140002bf8
   140002bb6:	xor    r9d,r9d
   140002bb9:	lea    rcx,[rip+0x8a88]        # 0x14000b648
   140002bc0:	mov    rdx,rsi
   140002bc3:	lea    r8d,[r9+0x1]
   140002bc7:	call   0x1400065e0
   140002bcc:	test   eax,eax
   140002bce:	je     0x140002bf8
   140002bd0:	xor    r9d,r9d
   140002bd3:	lea    rcx,[rip+0x8a46]        # 0x14000b620
   140002bda:	mov    rdx,rsi
   140002bdd:	lea    r8d,[r9+0x1]
   140002be1:	call   0x1400065e0
   140002be6:	test   eax,eax
   140002be8:	je     0x140002bf8
   140002bea:	mov    r8d,r12d
   140002bed:	mov    rdx,rsi
   140002bf0:	mov    rcx,rdi
   140002bf3:	call   0x140006448
   140002bf8:	mov    rcx,QWORD PTR [rsp+0x38]
   140002bfd:	lea    rax,[rsp+0x40]
   140002c02:	mov    r9d,0x1
   140002c08:	mov    QWORD PTR [rsp+0x20],rax
   140002c0d:	xor    r8d,r8d
   140002c10:	lea    rsi,[rip+0x8a75]        # 0x14000b68c
   140002c17:	mov    rdx,rdi
   140002c1a:	call   QWORD PTR [rip+0x85d8]        # 0x14000b1f8
   140002c20:	test   eax,eax
   140002c22:	jne    0x140002893
   140002c28:	mov    rcx,QWORD PTR [rsp+0x40]
   140002c2d:	lea    rax,[rsp+0x30]
   140002c32:	mov    QWORD PTR [rsp+0x28],rax
   140002c37:	lea    r9,[rsp+0x48]
   140002c3c:	xor    r8d,r8d
   140002c3f:	mov    QWORD PTR [rsp+0x20],r13
   140002c44:	lea    rdx,[rip+0x8a41]        # 0x14000b68c
   140002c4b:	call   QWORD PTR [rip+0x858f]        # 0x14000b1e0
   140002c51:	test   eax,eax
   140002c53:	jne    0x1400027b5
   140002c59:	lea    rcx,[rsp+0x50]
   140002c5e:	call   0x14000704c
   140002c63:	mov    edx,DWORD PTR [rsp+0x30]
   140002c67:	cmp    edx,0xfe
   140002c6d:	jbe    0x140002c81
   140002c6f:	add    edx,edx
   140002c71:	mov    rcx,r14
   140002c74:	call   0x1400071c8
   140002c79:	test   eax,eax
   140002c7b:	je     0x140002861
   140002c81:	mov    rcx,QWORD PTR [rsp+0x40]
   140002c86:	lea    rax,[rsp+0x30]
   140002c8b:	mov    QWORD PTR [rsp+0x28],rax
   140002c90:	lea    r9,[rsp+0x48]
   140002c95:	mov    rax,QWORD PTR [r14]
   140002c98:	xor    r8d,r8d
   140002c9b:	mov    rdx,rsi
   140002c9e:	mov    QWORD PTR [rsp+0x20],rax
   140002ca3:	call   QWORD PTR [rip+0x8537]        # 0x14000b1e0
   140002ca9:	test   eax,eax
   140002cab:	jne    0x1400028fc
   140002cb1:	mov    rcx,QWORD PTR [r14]
   140002cb4:	test   rcx,rcx
   140002cb7:	je     0x140002d01
   140002cb9:	call   QWORD PTR [rip+0x85d9]        # 0x14000b298
   140002cbf:	mov    esi,eax
   140002cc1:	cmp    eax,0x400
   140002cc6:	jbe    0x140002d01
   140002cc8:	mov    rdx,QWORD PTR [r14]
   140002ccb:	lea    rcx,[rsp+0x70]
   140002cd0:	mov    r8d,0x401
   140002cd6:	call   0x140006448
   140002cdb:	mov    ecx,DWORD PTR [rsp+0x30]
   140002cdf:	lea    rdx,[rsp+0x70]
   140002ce4:	mov    rdi,QWORD PTR [r14]
   140002ce7:	xor    eax,eax
   140002ce9:	rep stos BYTE PTR es:[rdi],al
   140002ceb:	mov    rcx,QWORD PTR [r14]
   140002cee:	mov    r8d,esi
   140002cf1:	call   0x140006448
   140002cf6:	mov    rax,QWORD PTR [rsp+0x58]
   140002cfb:	mov    DWORD PTR [rax],0x1
   140002d01:	cmp    DWORD PTR [rsp+0x48],0x4
   140002d06:	jne    0x1400029d4
   140002d0c:	mov    rdi,QWORD PTR [r14]
   140002d0f:	test   rdi,rdi
   140002d12:	je     0x1400029d4
   140002d18:	mov    rcx,rdi
   140002d1b:	call   0x1400072d0
   140002d20:	mov    r9d,DWORD PTR [rdi]
   140002d23:	lea    r8,[rip+0x8966]        # 0x14000b690
   140002d2a:	mov    rcx,QWORD PTR [r14]
   140002d2d:	movsxd rdx,eax
   140002d30:	shr    rdx,1
   140002d33:	call   0x140001008
   140002d38:	test   eax,eax
   140002d3a:	js     0x1400029c1
   140002d40:	jmp    0x1400029d4
   140002d45:	xor    eax,eax
   140002d47:	lea    rdi,[rsp+0x70]
   140002d4c:	mov    ecx,0x5f4
   140002d51:	rep stos BYTE PTR es:[rdi],al
   140002d53:	mov    ecx,0x20e
   140002d58:	call   0x1400059b8
   140002d5d:	mov    ecx,0x2
   140002d62:	mov    rdi,rax
   140002d65:	call   0x14000a4f8
   140002d6a:	mov    rcx,rax
   140002d6d:	mov    rdx,rdi
   140002d70:	call   0x1400066c4
   140002d75:	mov    eax,0x63
   140002d7a:	mov    rcx,QWORD PTR [rbp+0x780]
   140002d81:	xor    rcx,rsp
   140002d84:	call   0x140009fe0
   140002d89:	add    rsp,0x898
   140002d90:	pop    r15
   140002d92:	pop    r14
   140002d94:	pop    r13
   140002d96:	pop    r12
   140002d98:	pop    rdi
   140002d99:	pop    rsi
   140002d9a:	pop    rbx
   140002d9b:	pop    rbp
   140002d9c:	ret    
   140002d9d:	int3   
   140002d9e:	int3   
   140002d9f:	int3   
   140002da0:	int3   
   140002da1:	int3   
   140002da2:	int3   
   140002da3:	int3   
   140002da4:	rex push rbx
   140002da6:	push   rbp
   140002da7:	push   rsi
   140002da8:	push   rdi
   140002da9:	push   r12
   140002dab:	push   r13
   140002dad:	push   r14
   140002daf:	push   r15
   140002db1:	sub    rsp,0x648
   140002db8:	mov    rax,QWORD PTR [rip+0xb249]        # 0x14000e008
   140002dbf:	xor    rax,rsp
   140002dc2:	mov    QWORD PTR [rsp+0x630],rax
   140002dca:	lea    r13d,[r8+0xfe]
   140002dd1:	mov    DWORD PTR [rsp+0x20],r8d
   140002dd6:	mov    r12,rcx
   140002dd9:	lea    ebx,[r13*2+0x0]
   140002de1:	mov    ecx,ebx
   140002de3:	mov    r15,r9
   140002de6:	mov    r14,rdx
   140002de9:	call   0x140007128
   140002dee:	mov    QWORD PTR [rsp+0x28],rax
   140002df3:	mov    rbp,rax
   140002df6:	test   rax,rax
   140002df9:	jne    0x140002e1a
   140002dfb:	lea    ecx,[rax+0x2]
   140002dfe:	call   0x14000a4f8
   140002e03:	mov    rcx,rax
   140002e06:	mov    edx,0x10001
   140002e0b:	call   0x1400056fc
   140002e10:	mov    eax,0x1
   140002e15:	jmp    0x14000304f
   140002e1a:	mov    ecx,DWORD PTR [r12]
   140002e1e:	mov    esi,0x2
   140002e23:	mov    rdi,QWORD PTR [r14]
   140002e26:	sub    ecx,0x1
   140002e29:	je     0x140002faa
   140002e2f:	sub    ecx,0x1
   140002e32:	je     0x140002faa
   140002e38:	sub    ecx,esi
   140002e3a:	je     0x140002f6b
   140002e40:	cmp    ecx,0x3
   140002e43:	je     0x140002e74
   140002e45:	xor    eax,eax
   140002e47:	lea    rdi,[rsp+0x30]
   140002e4c:	mov    ecx,0x5f4
   140002e51:	rep stos BYTE PTR es:[rdi],al
   140002e53:	mov    ecx,0x20f
   140002e58:	call   0x1400059b8
   140002e5d:	mov    ecx,esi
   140002e5f:	mov    rdi,rax
   140002e62:	call   0x14000a4f8
   140002e67:	mov    rcx,rax
   140002e6a:	mov    rdx,rdi
   140002e6d:	call   0x1400066c4
   140002e72:	jmp    0x140002e10
   140002e74:	test   rdi,rdi
   140002e77:	je     0x140002ed1
   140002e79:	mov    rcx,rdi
   140002e7c:	call   QWORD PTR [rip+0x8416]        # 0x14000b298
   140002e82:	test   eax,eax
   140002e84:	je     0x140002ed1
   140002e86:	mov    rcx,rbp
   140002e89:	call   QWORD PTR [rip+0x8409]        # 0x14000b298
   140002e8f:	mov    r8d,r13d
   140002e92:	mov    rcx,rbp
   140002e95:	test   eax,eax
   140002e97:	jne    0x140002ea3
   140002e99:	mov    rdx,rdi
   140002e9c:	call   0x140006448
   140002ea1:	jmp    0x140002ebd
   140002ea3:	lea    rdx,[rip+0x87fa]        # 0x14000b6a4
   140002eaa:	call   0x1400064ec
   140002eaf:	mov    r8d,r13d
   140002eb2:	mov    rdx,rdi
   140002eb5:	mov    rcx,rbp
   140002eb8:	call   0x1400064ec
   140002ebd:	mov    rcx,rdi
   140002ec0:	call   QWORD PTR [rip+0x83d2]        # 0x14000b298
   140002ec6:	mov    ecx,eax
   140002ec8:	lea    rdi,[rdi+rcx*2]
   140002ecc:	add    rdi,rsi
   140002ecf:	jne    0x140002e79
   140002ed1:	mov    edx,ebx
   140002ed3:	mov    rcx,r14
   140002ed6:	call   0x1400071c8
   140002edb:	test   eax,eax
   140002edd:	jne    0x140002ee6
   140002edf:	mov    ecx,esi
   140002ee1:	jmp    0x140002dfe
   140002ee6:	mov    rcx,rbp
   140002ee9:	call   QWORD PTR [rip+0x83a9]        # 0x14000b298
   140002eef:	mov    rcx,QWORD PTR [r14]
   140002ef2:	mov    rdx,rbp
   140002ef5:	cmp    eax,0x400
   140002efa:	jbe    0x140002f11
   140002efc:	mov    r8d,0x401
   140002f02:	call   0x140006448
   140002f07:	mov    ebx,0x1
   140002f0c:	mov    DWORD PTR [r15],ebx
   140002f0f:	jmp    0x140002f25
   140002f11:	mov    r8d,DWORD PTR [rsp+0x20]
   140002f16:	call   0x140006448
   140002f1b:	mov    ebx,0x1
   140002f20:	cmp    DWORD PTR [r15],ebx
   140002f23:	jne    0x140002f44
   140002f25:	mov    ecx,0x221
   140002f2a:	call   0x1400059b8
   140002f2f:	mov    ecx,esi
   140002f31:	mov    rdi,rax
   140002f34:	call   0x14000a4f8
   140002f39:	mov    rcx,rax
   140002f3c:	mov    rdx,rdi
   140002f3f:	call   0x1400066c4
   140002f44:	mov    ecx,0x25a
   140002f49:	call   0x1400059b8
   140002f4e:	jmp    0x140002f7a
   140002f50:	mov    ecx,ebx
   140002f52:	call   0x14000a4f8
   140002f57:	mov    rcx,rax
   140002f5a:	mov    rdx,rbp
   140002f5d:	call   0x1400066c4
   140002f62:	mov    DWORD PTR [r12],ebx
   140002f66:	jmp    0x140003043
   140002f6b:	mov    ecx,0x25a
   140002f70:	call   0x1400059b8
   140002f75:	mov    ebx,0x1
   140002f7a:	mov    ecx,ebx
   140002f7c:	mov    rdi,rax
   140002f7f:	call   0x14000a4f8
   140002f84:	mov    rdx,rdi
   140002f87:	mov    rcx,rax
   140002f8a:	call   0x1400066c4
   140002f8f:	mov    r9,QWORD PTR [r14]
   140002f92:	lea    r8,[rip+0x86ff]        # 0x14000b698
   140002f99:	mov    edx,r13d
   140002f9c:	mov    rcx,rbp
   140002f9f:	call   0x140001008
   140002fa4:	test   eax,eax
   140002fa6:	jns    0x140002f50
   140002fa8:	jmp    0x14000300b
   140002faa:	mov    ebx,0x1
   140002faf:	cmp    DWORD PTR [r15],ebx
   140002fb2:	jne    0x140002fd3
   140002fb4:	mov    ecx,0x221
   140002fb9:	call   0x1400059b8
   140002fbe:	mov    ecx,esi
   140002fc0:	mov    rdi,rax
   140002fc3:	call   0x14000a4f8
   140002fc8:	mov    rdx,rdi
   140002fcb:	mov    rcx,rax
   140002fce:	call   0x1400066c4
   140002fd3:	mov    ecx,0x25a
   140002fd8:	call   0x1400059b8
   140002fdd:	mov    ecx,ebx
   140002fdf:	mov    rdi,rax
   140002fe2:	call   0x14000a4f8
   140002fe7:	mov    rdx,rdi
   140002fea:	mov    rcx,rax
   140002fed:	call   0x1400066c4
   140002ff2:	mov    r9,QWORD PTR [r14]
   140002ff5:	lea    r8,[rip+0x869c]        # 0x14000b698
   140002ffc:	mov    edx,r13d
   140002fff:	mov    rcx,rbp
   140003002:	call   0x140001008
   140003007:	test   eax,eax
   140003009:	jns    0x140003031
   14000300b:	movzx  ecx,ax
   14000300e:	call   QWORD PTR [rip+0x808c]        # 0x14000b0a0
   140003014:	call   0x140005550
   140003019:	mov    ecx,esi
   14000301b:	call   0x14000a4f8
   140003020:	mov    edx,0x20001
   140003025:	mov    rcx,rax
   140003028:	call   0x1400056fc
   14000302d:	mov    eax,ebx
   14000302f:	jmp    0x14000304f
   140003031:	mov    ecx,ebx
   140003033:	call   0x14000a4f8
   140003038:	mov    rdx,rbp
   14000303b:	mov    rcx,rax
   14000303e:	call   0x1400066c4
   140003043:	lea    rcx,[rsp+0x28]
   140003048:	call   0x14000704c
   14000304d:	xor    eax,eax
   14000304f:	mov    rcx,QWORD PTR [rsp+0x630]
   140003057:	xor    rcx,rsp
   14000305a:	call   0x140009fe0
   14000305f:	add    rsp,0x648
   140003066:	pop    r15
   140003068:	pop    r14
   14000306a:	pop    r13
   14000306c:	pop    r12
   14000306e:	pop    rdi
   14000306f:	pop    rsi
   140003070:	pop    rbp
   140003071:	pop    rbx
   140003072:	ret    
   140003073:	int3   
   140003074:	int3   
   140003075:	int3   
   140003076:	int3   
   140003077:	int3   
   140003078:	int3   
   140003079:	int3   
   14000307a:	int3   
   14000307b:	int3   
   14000307c:	mov    QWORD PTR [rsp+0x8],rbx
   140003081:	mov    QWORD PTR [rsp+0x10],rsi
   140003086:	mov    QWORD PTR [rsp+0x18],rdi
   14000308b:	push   r14
   14000308d:	sub    rsp,0x20
   140003091:	xor    r14d,r14d
   140003094:	mov    rdi,rcx
   140003097:	cmp    WORD PTR [rcx],0x7e
   14000309b:	mov    esi,r14d
   14000309e:	mov    rbx,rcx
   1400030a1:	jne    0x1400030da
   1400030a3:	call   QWORD PTR [rip+0x81ef]        # 0x14000b298
   1400030a9:	cmp    eax,0x2
   1400030ac:	jbe    0x1400030da
   1400030ae:	cmp    WORD PTR [rbx],r14w
   1400030b2:	je     0x1400030be
   1400030b4:	add    rbx,0x2
   1400030b8:	cmp    WORD PTR [rbx],r14w
   1400030bc:	jne    0x1400030b4
   1400030be:	sub    rbx,0x2
   1400030c2:	cmp    WORD PTR [rbx],0x7e
   1400030c6:	jne    0x1400030da
   1400030c8:	mov    ecx,0x25
   1400030cd:	mov    WORD PTR [rbx],cx
   1400030d0:	mov    WORD PTR [rdi],cx
   1400030d3:	mov    eax,0x2
   1400030d8:	jmp    0x140003122
   1400030da:	mov    rcx,rbx
   1400030dd:	call   QWORD PTR [rip+0x81b5]        # 0x14000b298
   1400030e3:	mov    edx,0x1
   1400030e8:	cmp    eax,0x2
   1400030eb:	jbe    0x140003120
   1400030ed:	movzx  eax,WORD PTR [rbx]
   1400030f0:	test   ax,ax
   1400030f3:	je     0x140003120
   1400030f5:	lea    ecx,[rdx+0x24]
   1400030f8:	cmp    ax,cx
   1400030fb:	jne    0x140003114
   1400030fd:	test   esi,esi
   1400030ff:	jne    0x1400030d3
   140003101:	mov    esi,edx
   140003103:	add    rbx,0x2
   140003107:	je     0x140003120
   140003109:	add    rbx,0x2
   14000310d:	je     0x140003120
   14000310f:	cmp    WORD PTR [rbx],cx
   140003112:	je     0x1400030d3
   140003114:	add    rbx,0x2
   140003118:	movzx  eax,WORD PTR [rbx]
   14000311b:	test   ax,ax
   14000311e:	jne    0x1400030f8
   140003120:	mov    eax,edx
   140003122:	mov    rbx,QWORD PTR [rsp+0x30]
   140003127:	mov    rsi,QWORD PTR [rsp+0x38]
   14000312c:	mov    rdi,QWORD PTR [rsp+0x40]
   140003131:	add    rsp,0x20
   140003135:	pop    r14
   140003137:	ret    
   140003138:	int3   
   140003139:	int3   
   14000313a:	int3   
   14000313b:	int3   
   14000313c:	int3   
   14000313d:	int3   
   14000313e:	int3   
   14000313f:	int3   
   140003140:	mov    QWORD PTR [rsp+0x8],rbx
   140003145:	mov    QWORD PTR [rsp+0x18],r8
   14000314a:	mov    QWORD PTR [rsp+0x10],rdx
   14000314f:	push   rbp
   140003150:	push   rsi
   140003151:	push   rdi
   140003152:	push   r12
   140003154:	push   r13
   140003156:	push   r14
   140003158:	push   r15
   14000315a:	mov    rbp,rsp
   14000315d:	sub    rsp,0x50
   140003161:	xor    eax,eax
   140003163:	mov    r14,r9
   140003166:	mov    r13d,eax
   140003169:	mov    edi,eax
   14000316b:	mov    rsi,rcx
   14000316e:	call   0x1400072d0
   140003173:	lea    ecx,[rax+0xa]
   140003176:	call   0x140007128
   14000317b:	xor    r9d,r9d
   14000317e:	mov    QWORD PTR [rbp-0x20],rax
   140003182:	mov    r15,rax
   140003185:	test   rax,rax
   140003188:	jne    0x1400031a6
   14000318a:	lea    ecx,[rax+0x2]
   14000318d:	call   0x14000a4f8
   140003192:	mov    edx,0x20001
   140003197:	mov    rcx,rax
   14000319a:	call   0x1400056fc
   14000319f:	xor    eax,eax
   1400031a1:	jmp    0x1400034bc
   1400031a6:	cmp    DWORD PTR [rbp+0x68],r9d
   1400031aa:	je     0x1400031c8
   1400031ac:	mov    ecx,0x1
   1400031b1:	call   0x14000a4f8
   1400031b6:	mov    rcx,rax
   1400031b9:	lea    rdx,[rip+0x83a0]        # 0x14000b560
   1400031c0:	call   0x1400066c4
   1400031c5:	xor    r9d,r9d
   1400031c8:	cmp    DWORD PTR [rbp+0x78],0x1
   1400031cc:	mov    rbx,rsi
   1400031cf:	mov    QWORD PTR [rbp-0x18],rsi
   1400031d3:	jne    0x14000329c
   1400031d9:	mov    rax,QWORD PTR [rbp+0x90]
   1400031e0:	cmp    DWORD PTR [rax],0x1
   1400031e3:	jne    0x14000329c
   1400031e9:	cmp    WORD PTR [rsi],r9w
   1400031ed:	je     0x14000329c
   1400031f3:	mov    r12,rsi
   1400031f6:	mov    rax,QWORD PTR [rbp+0x98]
   1400031fd:	cmp    DWORD PTR [rax],edi
   1400031ff:	je     0x14000329c
   140003205:	test   r14,r14
   140003208:	jne    0x14000320f
   14000320a:	mov    eax,r9d
   14000320d:	jmp    0x140003218
   14000320f:	mov    rcx,r14
   140003212:	call   QWORD PTR [rip+0x8080]        # 0x14000b298
   140003218:	movzx  edx,WORD PTR [rbx]
   14000321b:	mov    rcx,r14
   14000321e:	mov    r8d,eax
   140003221:	add    r8,r8
   140003224:	call   QWORD PTR [rip+0x81ee]        # 0x14000b418
   14000322a:	xor    r9d,r9d
   14000322d:	test   rax,rax
   140003230:	je     0x140003241
   140003232:	cmp    WORD PTR [rbx],r9w
   140003236:	je     0x140003241
   140003238:	add    rbx,0x2
   14000323c:	mov    r12,rbx
   14000323f:	jmp    0x140003205
   140003241:	mov    QWORD PTR [rbp-0x18],r12
   140003245:	test   r14,r14
   140003248:	jne    0x14000324f
   14000324a:	mov    eax,r9d
   14000324d:	jmp    0x140003258
   14000324f:	mov    rcx,r14
   140003252:	call   QWORD PTR [rip+0x8040]        # 0x14000b298
   140003258:	movzx  edx,WORD PTR [rbx]
   14000325b:	mov    rcx,r14
   14000325e:	mov    r8d,eax
   140003261:	add    r8,r8
   140003264:	call   QWORD PTR [rip+0x81ae]        # 0x14000b418
   14000326a:	xor    r9d,r9d
   14000326d:	test   rax,rax
   140003270:	jne    0x14000327e
   140003272:	cmp    WORD PTR [rbx],r9w
   140003276:	je     0x14000327e
   140003278:	add    rbx,0x2
   14000327c:	jmp    0x140003245
   14000327e:	movzx  eax,WORD PTR [rbx]
   140003281:	cmp    ax,WORD PTR [r12]
   140003286:	jne    0x140003291
   140003288:	test   ax,ax
   14000328b:	je     0x140003502
   140003291:	inc    edi
   140003293:	test   ax,ax
   140003296:	jne    0x1400031f6
   14000329c:	cmp    WORD PTR [rbx],r9w
   1400032a0:	je     0x1400034ad
   1400032a6:	mov    r12,QWORD PTR [rbp+0x80]
   1400032ad:	mov    rdi,QWORD PTR [rbp-0x18]
   1400032b1:	test   r14,r14
   1400032b4:	jne    0x1400032bb
   1400032b6:	mov    eax,r9d
   1400032b9:	jmp    0x1400032c4
   1400032bb:	mov    rcx,r14
   1400032be:	call   QWORD PTR [rip+0x7fd4]        # 0x14000b298
   1400032c4:	movzx  edx,WORD PTR [rbx]
   1400032c7:	mov    rcx,r14
   1400032ca:	mov    r8d,eax
   1400032cd:	add    r8,r8
   1400032d0:	call   QWORD PTR [rip+0x8142]        # 0x14000b418
   1400032d6:	xor    r9d,r9d
   1400032d9:	test   rax,rax
   1400032dc:	je     0x1400032ed
   1400032de:	cmp    WORD PTR [rbx],r9w
   1400032e2:	je     0x1400032ed
   1400032e4:	add    rbx,0x2
   1400032e8:	mov    rdi,rbx
   1400032eb:	jmp    0x1400032b1
   1400032ed:	mov    QWORD PTR [rbp-0x18],rdi
   1400032f1:	test   r14,r14
   1400032f4:	jne    0x1400032fb
   1400032f6:	mov    eax,r9d
   1400032f9:	jmp    0x140003304
   1400032fb:	mov    rcx,r14
   1400032fe:	call   QWORD PTR [rip+0x7f94]        # 0x14000b298
   140003304:	movzx  edx,WORD PTR [rbx]
   140003307:	mov    rcx,r14
   14000330a:	mov    r8d,eax
   14000330d:	add    r8,r8
   140003310:	call   QWORD PTR [rip+0x8102]        # 0x14000b418
   140003316:	xor    r9d,r9d
   140003319:	test   rax,rax
   14000331c:	jne    0x14000332a
   14000331e:	cmp    WORD PTR [rbx],r9w
   140003322:	je     0x14000332a
   140003324:	add    rbx,0x2
   140003328:	jmp    0x1400032f1
   14000332a:	movzx  eax,WORD PTR [rbx]
   14000332d:	cmp    ax,WORD PTR [rdi]
   140003330:	jne    0x14000333b
   140003332:	test   ax,ax
   140003335:	je     0x140003502
   14000333b:	mov    rcx,r15
   14000333e:	call   0x1400072d0
   140003343:	mov    rdi,rbx
   140003346:	mov    rcx,r15
   140003349:	sub    rdi,QWORD PTR [rbp-0x18]
   14000334d:	sar    rdi,1
   140003350:	call   0x1400072d0
   140003355:	movsxd rcx,eax
   140003358:	shr    rcx,1
   14000335b:	mov    eax,edi
   14000335d:	cmp    rcx,rax
   140003360:	jbe    0x14000337f
   140003362:	mov    rdx,QWORD PTR [rbp-0x18]
   140003366:	add    rdi,rdi
   140003369:	mov    r8,rdi
   14000336c:	mov    rcx,r15
   14000336f:	call   QWORD PTR [rip+0x800b]        # 0x14000b380
   140003375:	xor    r9d,r9d
   140003378:	mov    WORD PTR [rdi+r15*1],r9w
   14000337d:	jmp    0x140003382
   14000337f:	xor    r9d,r9d
   140003382:	cmp    DWORD PTR [rbp+0x68],r9d
   140003386:	je     0x140003401
   140003388:	mov    rcx,r15
   14000338b:	call   QWORD PTR [rip+0x7f07]        # 0x14000b298
   140003391:	lea    ecx,[rax*2+0x3f8]
   140003398:	call   0x140007128
   14000339d:	mov    QWORD PTR [rbp-0x10],rax
   1400033a1:	mov    rdi,rax
   1400033a4:	test   rax,rax
   1400033a7:	je     0x140003510
   1400033ad:	mov    rcx,rax
   1400033b0:	call   0x1400072d0
   1400033b5:	mov    r9d,DWORD PTR [r12]
   1400033b9:	lea    r8,[rip+0x82e8]        # 0x14000b6a8
   1400033c0:	movsxd rdx,eax
   1400033c3:	mov    rcx,rdi
   1400033c6:	shr    rdx,1
   1400033c9:	mov    QWORD PTR [rsp+0x28],r15
   1400033ce:	mov    DWORD PTR [rsp+0x20],r13d
   1400033d3:	call   0x140001008
   1400033d8:	test   eax,eax
   1400033da:	js     0x1400034d4
   1400033e0:	mov    ecx,0x1
   1400033e5:	call   0x14000a4f8
   1400033ea:	mov    rcx,rax
   1400033ed:	mov    rdx,rdi
   1400033f0:	call   0x1400066c4
   1400033f5:	lea    rcx,[rbp-0x10]
   1400033f9:	call   0x14000704c
   1400033fe:	xor    r9d,r9d
   140003401:	cmp    DWORD PTR [rbp+0x78],0x1
   140003405:	jne    0x140003460
   140003407:	mov    rdi,QWORD PTR [rbp+0x90]
   14000340e:	cmp    DWORD PTR [rdi],r9d
   140003411:	jne    0x140003460
   140003413:	mov    rdx,QWORD PTR [rbp+0x60]
   140003417:	xor    r9d,r9d
   14000341a:	mov    rcx,r15
   14000341d:	lea    r8d,[r9+0x1]
   140003421:	call   0x1400065e0
   140003426:	xor    r9d,r9d
   140003429:	test   eax,eax
   14000342b:	jne    0x140003460
   14000342d:	cmp    DWORD PTR [rbp+0xa0],r9d
   140003434:	jne    0x140003529
   14000343a:	mov    rax,QWORD PTR [rbp+0x98]
   140003441:	mov    rcx,QWORD PTR [rbp+0x88]
   140003448:	mov    DWORD PTR [r12],r9d
   14000344c:	mov    DWORD PTR [rdi],0x1
   140003452:	mov    DWORD PTR [rax],r13d
   140003455:	mov    r13d,r9d
   140003458:	mov    DWORD PTR [rcx],0x1
   14000345e:	jmp    0x140003467
   140003460:	mov    rcx,QWORD PTR [rbp+0x88]
   140003467:	mov    rax,QWORD PTR [rbp+0x48]
   14000346b:	mov    rdx,QWORD PTR [rbp+0x50]
   14000346f:	mov    eax,DWORD PTR [rax]
   140003471:	cmp    DWORD PTR [r12],eax
   140003475:	jne    0x1400034a0
   140003477:	cmp    r13d,DWORD PTR [rdx]
   14000347a:	jne    0x14000348b
   14000347c:	cmp    DWORD PTR [rbp+0x78],0x1
   140003480:	jne    0x14000348b
   140003482:	cmp    DWORD PTR [rcx],0x1
   140003485:	je     0x140003593
   14000348b:	cmp    DWORD PTR [r12],eax
   14000348f:	jne    0x1400034a0
   140003491:	cmp    r13d,DWORD PTR [rdx]
   140003494:	jne    0x1400034a0
   140003496:	cmp    DWORD PTR [rbp+0x70],0x1
   14000349a:	je     0x140003593
   1400034a0:	inc    r13d
   1400034a3:	cmp    WORD PTR [rbx],r9w
   1400034a7:	jne    0x1400032ad
   1400034ad:	mov    rsi,r9
   1400034b0:	lea    rcx,[rbp-0x20]
   1400034b4:	call   0x14000704c
   1400034b9:	mov    rax,rsi
   1400034bc:	mov    rbx,QWORD PTR [rsp+0x90]
   1400034c4:	add    rsp,0x50
   1400034c8:	pop    r15
   1400034ca:	pop    r14
   1400034cc:	pop    r13
   1400034ce:	pop    r12
   1400034d0:	pop    rdi
   1400034d1:	pop    rsi
   1400034d2:	pop    rbp
   1400034d3:	ret    
   1400034d4:	movzx  ecx,ax
   1400034d7:	call   QWORD PTR [rip+0x7bc3]        # 0x14000b0a0
   1400034dd:	call   0x140005550
   1400034e2:	mov    ecx,0x2
   1400034e7:	call   0x14000a4f8
   1400034ec:	mov    rcx,rax
   1400034ef:	mov    edx,0x20001
   1400034f4:	call   0x1400056fc
   1400034f9:	lea    rcx,[rbp-0x10]
   1400034fd:	call   0x14000704c
   140003502:	lea    rcx,[rbp-0x20]
   140003506:	call   0x14000704c
   14000350b:	jmp    0x14000319f
   140003510:	mov    ecx,0x2
   140003515:	call   0x14000a4f8
   14000351a:	mov    rcx,rax
   14000351d:	mov    edx,0x20001
   140003522:	call   0x1400056fc
   140003527:	jmp    0x140003502
   140003529:	mov    eax,DWORD PTR [r12]
   14000352d:	mov    rdx,QWORD PTR [rbp+0x48]
   140003531:	mov    r8,QWORD PTR [rbp+0x50]
   140003535:	or     DWORD PTR [r12],0xffffffff
   14000353a:	add    DWORD PTR [rdx],eax
   14000353c:	mov    rax,QWORD PTR [rbp+0x98]
   140003543:	mov    ecx,DWORD PTR [r8]
   140003546:	add    ecx,r13d
   140003549:	mov    DWORD PTR [r8],r9d
   14000354c:	mov    DWORD PTR [rax],ecx
   14000354e:	mov    ecx,0x1
   140003553:	mov    rax,QWORD PTR [rbp+0x88]
   14000355a:	mov    DWORD PTR [rdi],ecx
   14000355c:	mov    DWORD PTR [rax],ecx
   14000355e:	cmp    DWORD PTR [rdx],r9d
   140003561:	jl     0x140003502
   140003563:	mov    rcx,QWORD PTR [rbp+0xa8]
   14000356a:	xor    r8d,r8d
   14000356d:	xor    edx,edx
   14000356f:	call   QWORD PTR [rip+0x7e83]        # 0x14000b3f8
   140003575:	xor    r9d,r9d
   140003578:	test   eax,eax
   14000357a:	je     0x1400034ad
   140003580:	lea    ecx,[r9+0x2]
   140003584:	call   0x14000a4f8
   140003589:	mov    edx,0x10001
   14000358e:	jmp    0x140003197
   140003593:	mov    rcx,rsi
   140003596:	call   0x1400072d0
   14000359b:	movsxd rcx,eax
   14000359e:	mov    rdi,rsi
   1400035a1:	xor    eax,eax
   1400035a3:	rep stos BYTE PTR es:[rdi],al
   1400035a5:	mov    rcx,rsi
   1400035a8:	call   0x1400072d0
   1400035ad:	movsxd r8,eax
   1400035b0:	mov    rdx,r15
   1400035b3:	shr    r8,1
   1400035b6:	mov    rcx,rsi
   1400035b9:	call   0x140006448
   1400035be:	jmp    0x1400034b0
   1400035c3:	int3   
   1400035c4:	int3   
   1400035c5:	int3   
   1400035c6:	int3   
   1400035c7:	int3   
   1400035c8:	int3   
   1400035c9:	int3   
   1400035ca:	int3   
   1400035cb:	int3   
   1400035cc:	mov    QWORD PTR [rsp+0x20],rbx
   1400035d1:	push   rbp
   1400035d2:	push   rsi
   1400035d3:	push   rdi
   1400035d4:	push   r12
   1400035d6:	push   r13
   1400035d8:	push   r14
   1400035da:	push   r15
   1400035dc:	lea    rbp,[rsp-0x2c50]
   1400035e4:	mov    eax,0x2d50
   1400035e9:	call   0x14000a8d0
   1400035ee:	sub    rsp,rax
   1400035f1:	mov    rax,QWORD PTR [rip+0xaa10]        # 0x14000e008
   1400035f8:	xor    rax,rsp
   1400035fb:	mov    QWORD PTR [rbp+0x2c40],rax
   140003602:	mov    rsi,rcx
   140003605:	lea    rdi,[rsp+0x30]
   14000360a:	xor    r13d,r13d
   14000360d:	xor    eax,eax
   14000360f:	mov    ecx,0x2710
   140003614:	mov    QWORD PTR [rsp+0x20],r13
   140003619:	rep stos BYTE PTR es:[rdi],al
   14000361b:	mov    r12,r8
   14000361e:	mov    r15,rdx
   140003621:	mov    r14d,r13d
   140003624:	mov    rdi,rsi
   140003627:	cmp    WORD PTR [rsi],r13w
   14000362b:	jne    0x140003665
   14000362d:	lea    rdi,[rbp+0x2640]
   140003634:	mov    ecx,0x5f4
   140003639:	rep stos BYTE PTR es:[rdi],al
   14000363b:	mov    ecx,0x206
   140003640:	call   0x1400059b8
   140003645:	lea    ecx,[r13+0x2]
   140003649:	mov    rdi,rax
   14000364c:	call   0x14000a4f8
   140003651:	mov    rcx,rax
   140003654:	mov    rdx,rdi
   140003657:	call   0x1400066c4
   14000365c:	lea    eax,[r13+0x1]
   140003660:	jmp    0x14000388d
   140003665:	mov    ebx,0x1
   14000366a:	cmp    WORD PTR [rdi],0x2c
   14000366e:	jne    0x14000367e
   140003670:	add    rdi,0x2
   140003674:	test   r14d,r14d
   140003677:	jne    0x1400036b3
   140003679:	mov    r14d,ebx
   14000367c:	jmp    0x1400036a5
   14000367e:	movzx  eax,WORD PTR [rdi]
   140003681:	mov    ecx,0xfffd
   140003686:	sub    ax,0x2b
   14000368a:	test   cx,ax
   14000368d:	je     0x1400036a1
   14000368f:	movzx  ecx,WORD PTR [rdi]
   140003692:	mov    edx,0x4
   140003697:	call   QWORD PTR [rip+0x7d83]        # 0x14000b420
   14000369d:	test   eax,eax
   14000369f:	je     0x1400036b3
   1400036a1:	add    rdi,0x2
   1400036a5:	cmp    WORD PTR [rdi],r13w
   1400036a9:	jne    0x14000366a
   1400036ab:	movzx  eax,WORD PTR [rsi]
   1400036ae:	mov    rdi,rsi
   1400036b1:	jmp    0x1400036d3
   1400036b3:	mov    rdx,rsi
   1400036b6:	mov    ecx,0x1397
   1400036bb:	call   0x1400038c0
   1400036c0:	mov    eax,ebx
   1400036c2:	jmp    0x14000388d
   1400036c7:	test   ax,ax
   1400036ca:	je     0x1400036d9
   1400036cc:	add    rdi,0x2
   1400036d0:	movzx  eax,WORD PTR [rdi]
   1400036d3:	cmp    ax,0x2c
   1400036d7:	jne    0x1400036c7
   1400036d9:	mov    r8,rdi
   1400036dc:	lea    rcx,[rsp+0x30]
   1400036e1:	sub    r8,rsi
   1400036e4:	mov    rdx,rsi
   1400036e7:	sar    r8,1
   1400036ea:	add    r8,r8
   1400036ed:	call   0x14000a886
   1400036f2:	lea    rcx,[rsp+0x30]
   1400036f7:	call   QWORD PTR [rip+0x7c3b]        # 0x14000b338
   1400036fd:	mov    r14w,0x30
   140003702:	test   eax,eax
   140003704:	jne    0x14000370e
   140003706:	cmp    WORD PTR [rsp+0x30],r14w
   14000370c:	jne    0x1400036b3
   14000370e:	lea    rdx,[rsp+0x30]
   140003713:	cmp    WORD PTR [rsp+0x30],r14w
   140003719:	jne    0x14000372e
   14000371b:	lea    rax,[rdx+0x2]
   14000371f:	cmp    WORD PTR [rax],r13w
   140003723:	je     0x14000372e
   140003725:	mov    rdx,rax
   140003728:	cmp    WORD PTR [rax],r14w
   14000372c:	je     0x14000371b
   14000372e:	mov    r8d,0x1388
   140003734:	lea    rcx,[rsp+0x30]
   140003739:	call   0x140006448
   14000373e:	lea    rcx,[rsp+0x30]
   140003743:	call   QWORD PTR [rip+0x7b4f]        # 0x14000b298
   140003749:	cmp    eax,ebx
   14000374b:	jbe    0x14000378e
   14000374d:	lea    rax,[rsp+0x32]
   140003752:	test   rax,rax
   140003755:	je     0x14000378e
   140003757:	lea    rcx,[rsp+0x32]
   14000375c:	call   QWORD PTR [rip+0x7b36]        # 0x14000b298
   140003762:	cmp    eax,0x7
   140003765:	jbe    0x14000378e
   140003767:	mov    ecx,0x25f
   14000376c:	call   0x1400059b8
   140003771:	mov    ecx,0x2
   140003776:	mov    rdi,rax
   140003779:	call   0x14000a4f8
   14000377e:	mov    rcx,rax
   140003781:	mov    rdx,rdi
   140003784:	call   0x1400066c4
   140003789:	jmp    0x1400036c0
   14000378e:	mov    r8d,0xa
   140003794:	lea    rdx,[rsp+0x20]
   140003799:	lea    rcx,[rsp+0x30]
   14000379e:	call   QWORD PTR [rip+0x7b74]        # 0x14000b318
   1400037a4:	mov    rcx,QWORD PTR [rsp+0x20]
   1400037a9:	mov    DWORD PTR [r15],eax
   1400037ac:	test   rcx,rcx
   1400037af:	je     0x1400037bf
   1400037b1:	call   QWORD PTR [rip+0x7ae1]        # 0x14000b298
   1400037b7:	test   eax,eax
   1400037b9:	jne    0x1400036b3
   1400037bf:	mov    rcx,rdi
   1400037c2:	call   QWORD PTR [rip+0x7ad0]        # 0x14000b298
   1400037c8:	mov    r8d,eax
   1400037cb:	lea    rdx,[rdi+0x2]
   1400037cf:	add    r8,r8
   1400037d2:	lea    rcx,[rsp+0x30]
   1400037d7:	call   0x14000a886
   1400037dc:	lea    rcx,[rsp+0x30]
   1400037e1:	mov    QWORD PTR [rsp+0x20],r13
   1400037e6:	call   QWORD PTR [rip+0x7b4c]        # 0x14000b338
   1400037ec:	test   eax,eax
   1400037ee:	jne    0x1400037fc
   1400037f0:	cmp    WORD PTR [rsp+0x30],r14w
   1400037f6:	jne    0x1400036b3
   1400037fc:	lea    rdx,[rsp+0x30]
   140003801:	cmp    WORD PTR [rsp+0x30],r14w
   140003807:	jne    0x14000381c
   140003809:	lea    rax,[rdx+0x2]
   14000380d:	cmp    WORD PTR [rax],r13w
   140003811:	je     0x14000381c
   140003813:	mov    rdx,rax
   140003816:	cmp    WORD PTR [rax],r14w
   14000381a:	je     0x140003809
   14000381c:	mov    r8d,0x1388
   140003822:	lea    rcx,[rsp+0x30]
   140003827:	call   0x140006448
   14000382c:	lea    rcx,[rsp+0x30]
   140003831:	call   QWORD PTR [rip+0x7a61]        # 0x14000b298
   140003837:	cmp    eax,ebx
   140003839:	jbe    0x140003859
   14000383b:	lea    rax,[rsp+0x32]
   140003840:	test   rax,rax
   140003843:	je     0x140003859
   140003845:	lea    rcx,[rsp+0x32]
   14000384a:	call   QWORD PTR [rip+0x7a48]        # 0x14000b298
   140003850:	cmp    eax,0x7
   140003853:	ja     0x140003767
   140003859:	mov    r8d,0xa
   14000385f:	lea    rdx,[rsp+0x20]
   140003864:	lea    rcx,[rsp+0x30]
   140003869:	call   QWORD PTR [rip+0x7aa9]        # 0x14000b318
   14000386f:	mov    rcx,QWORD PTR [rsp+0x20]
   140003874:	mov    DWORD PTR [r12],eax
   140003878:	test   rcx,rcx
   14000387b:	je     0x14000388b
   14000387d:	call   QWORD PTR [rip+0x7a15]        # 0x14000b298
   140003883:	test   eax,eax
   140003885:	jne    0x1400036b3
   14000388b:	xor    eax,eax
   14000388d:	mov    rcx,QWORD PTR [rbp+0x2c40]
   140003894:	xor    rcx,rsp
   140003897:	call   0x140009fe0
   14000389c:	mov    rbx,QWORD PTR [rsp+0x2da8]
   1400038a4:	add    rsp,0x2d50
   1400038ab:	pop    r15
   1400038ad:	pop    r14
   1400038af:	pop    r13
   1400038b1:	pop    r12
   1400038b3:	pop    rdi
   1400038b4:	pop    rsi
   1400038b5:	pop    rbp
   1400038b6:	ret    
   1400038b7:	int3   
   1400038b8:	int3   
   1400038b9:	int3   
   1400038ba:	int3   
   1400038bb:	int3   
   1400038bc:	int3   
   1400038bd:	int3   
   1400038be:	int3   
   1400038bf:	int3   
   1400038c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400038c5:	mov    QWORD PTR [rsp+0x18],rdi
   1400038ca:	push   rbp
   1400038cb:	lea    rbp,[rsp-0x530]
   1400038d3:	sub    rsp,0x630
   1400038da:	mov    rax,QWORD PTR [rip+0xa727]        # 0x14000e008
   1400038e1:	xor    rax,rsp
   1400038e4:	mov    QWORD PTR [rbp+0x520],rax
   1400038eb:	xor    eax,eax
   1400038ed:	lea    rdi,[rsp+0x20]
   1400038f2:	mov    rbx,rdx
   1400038f5:	mov    edx,ecx
   1400038f7:	mov    ecx,0x5f4
   1400038fc:	rep stos BYTE PTR es:[rdi],al
   1400038fe:	mov    eax,0x1393
   140003903:	cmp    edx,eax
   140003905:	jg     0x1400039f6
   14000390b:	je     0x1400039ec
   140003911:	cmp    edx,0x6
   140003914:	jg     0x140003994
   140003916:	je     0x14000398d
   140003918:	cmp    edx,0x80040150
   14000391e:	je     0x140003986
   140003920:	cmp    edx,0x80040151
   140003926:	je     0x14000397f
   140003928:	cmp    edx,0x80040152
   14000392e:	je     0x140003978
   140003930:	test   edx,edx
   140003932:	je     0x140003b31
   140003938:	cmp    edx,0x2
   14000393b:	je     0x140003971
   14000393d:	cmp    edx,0x3
   140003940:	je     0x14000396a
   140003942:	cmp    edx,0x5
   140003945:	jne    0x140003a92
   14000394b:	mov    ecx,0x1f8
   140003950:	call   0x1400059b8
   140003955:	mov    ecx,0x2
   14000395a:	mov    rdi,rax
   14000395d:	call   0x14000a4f8
   140003962:	mov    rdx,rdi
   140003965:	jmp    0x140003b29
   14000396a:	mov    ecx,0x1f7
   14000396f:	jmp    0x140003950
   140003971:	mov    ecx,0x1f6
   140003976:	jmp    0x140003950
   140003978:	mov    ecx,0x201
   14000397d:	jmp    0x140003950
   14000397f:	mov    ecx,0x200
   140003984:	jmp    0x140003950
   140003986:	mov    ecx,0x1ff
   14000398b:	jmp    0x140003950
   14000398d:	mov    ecx,0x1f9
   140003992:	jmp    0x140003950
   140003994:	sub    edx,0x8
   140003997:	je     0x1400039e2
   140003999:	sub    edx,0x2
   14000399c:	je     0x1400039d8
   14000399e:	sub    edx,0x2
   1400039a1:	je     0x1400039ce
   1400039a3:	sub    edx,0x1
   1400039a6:	je     0x1400039c7
   1400039a8:	sub    edx,0x2
   1400039ab:	je     0x1400039c0
   1400039ad:	cmp    edx,0x1383
   1400039b3:	jne    0x140003a92
   1400039b9:	mov    ecx,0x202
   1400039be:	jmp    0x140003950
   1400039c0:	mov    ecx,0x1fe
   1400039c5:	jmp    0x140003950
   1400039c7:	mov    ecx,0x1fd
   1400039cc:	jmp    0x140003950
   1400039ce:	mov    ecx,0x1fc
   1400039d3:	jmp    0x140003950
   1400039d8:	mov    ecx,0x1fb
   1400039dd:	jmp    0x140003950
   1400039e2:	mov    ecx,0x1fa
   1400039e7:	jmp    0x140003950
   1400039ec:	mov    ecx,0x203
   1400039f1:	jmp    0x140003950
   1400039f6:	mov    eax,0x139c
   1400039fb:	cmp    edx,eax
   1400039fd:	jg     0x140003a71
   1400039ff:	je     0x140003a6a
   140003a01:	sub    edx,0x1394
   140003a07:	je     0x140003a63
   140003a09:	sub    edx,0x1
   140003a0c:	je     0x140003a59
   140003a0e:	sub    edx,0x1
   140003a11:	je     0x140003a4f
   140003a13:	sub    edx,0x1
   140003a16:	je     0x140003a45
   140003a18:	sub    edx,0x1
   140003a1b:	je     0x140003a3b
   140003a1d:	sub    edx,0x1
   140003a20:	je     0x140003a31
   140003a22:	cmp    edx,0x1
   140003a25:	jne    0x140003a92
   140003a27:	mov    ecx,0x21e
   140003a2c:	jmp    0x140003ad0
   140003a31:	mov    ecx,0x209
   140003a36:	jmp    0x140003950
   140003a3b:	mov    ecx,0x208
   140003a40:	jmp    0x140003ad0
   140003a45:	mov    ecx,0x207
   140003a4a:	jmp    0x140003ad0
   140003a4f:	mov    ecx,0x206
   140003a54:	jmp    0x140003950
   140003a59:	mov    ecx,0x205
   140003a5e:	jmp    0x140003950
   140003a63:	mov    ecx,0x204
   140003a68:	jmp    0x140003ad0
   140003a6a:	mov    ecx,0x20a
   140003a6f:	jmp    0x140003ad0
   140003a71:	sub    edx,0x13a6
   140003a77:	je     0x140003acb
   140003a79:	sub    edx,0x1
   140003a7c:	je     0x140003ac1
   140003a7e:	sub    edx,0x1
   140003a81:	je     0x140003ab7
   140003a83:	sub    edx,0x8
   140003a86:	je     0x140003aad
   140003a88:	sub    edx,0x1
   140003a8b:	je     0x140003aa3
   140003a8d:	cmp    edx,0x1
   140003a90:	je     0x140003a9c
   140003a92:	mov    ecx,0x211
   140003a97:	jmp    0x140003950
   140003a9c:	mov    ecx,0x210
   140003aa1:	jmp    0x140003ad0
   140003aa3:	mov    ecx,0x20f
   140003aa8:	jmp    0x140003950
   140003aad:	mov    ecx,0x20e
   140003ab2:	jmp    0x140003950
   140003ab7:	mov    ecx,0x20d
   140003abc:	jmp    0x140003950
   140003ac1:	mov    ecx,0x20c
   140003ac6:	jmp    0x140003950
   140003acb:	mov    ecx,0x20b
   140003ad0:	call   0x1400059b8
   140003ad5:	mov    r9,rbx
   140003ad8:	lea    rcx,[rsp+0x20]
   140003add:	mov    r8,rax
   140003ae0:	mov    edx,0x2fa
   140003ae5:	call   0x140001008
   140003aea:	test   eax,eax
   140003aec:	jns    0x140003b1a
   140003aee:	movzx  ecx,ax
   140003af1:	call   QWORD PTR [rip+0x75a9]        # 0x14000b0a0
   140003af7:	call   0x140005550
   140003afc:	mov    ecx,0x2
   140003b01:	call   0x14000a4f8
   140003b06:	mov    edx,0x20001
   140003b0b:	mov    rcx,rax
   140003b0e:	call   0x1400056fc
   140003b13:	mov    eax,0x1
   140003b18:	jmp    0x140003b33
   140003b1a:	mov    ecx,0x2
   140003b1f:	call   0x14000a4f8
   140003b24:	lea    rdx,[rsp+0x20]
   140003b29:	mov    rcx,rax
   140003b2c:	call   0x1400066c4
   140003b31:	xor    eax,eax
   140003b33:	mov    rcx,QWORD PTR [rbp+0x520]
   140003b3a:	xor    rcx,rsp
   140003b3d:	call   0x140009fe0
   140003b42:	lea    r11,[rsp+0x630]
   140003b4a:	mov    rbx,QWORD PTR [r11+0x10]
   140003b4e:	mov    rdi,QWORD PTR [r11+0x20]
   140003b52:	mov    rsp,r11
   140003b55:	pop    rbp
   140003b56:	ret    
   140003b57:	int3   
   140003b58:	int3   
   140003b59:	int3   
   140003b5a:	int3   
   140003b5b:	int3   
   140003b5c:	int3   
   140003b5d:	int3   
   140003b5e:	int3   
   140003b5f:	int3   
   140003b60:	rex push rbx
   140003b62:	push   rbp
   140003b63:	push   rsi
   140003b64:	push   rdi
   140003b65:	push   r12
   140003b67:	push   r13
   140003b69:	push   r14
   140003b6b:	push   r15
   140003b6d:	sub    rsp,0x248
   140003b74:	mov    rax,QWORD PTR [rip+0xa48d]        # 0x14000e008
   140003b7b:	xor    rax,rsp
   140003b7e:	mov    QWORD PTR [rsp+0x230],rax
   140003b86:	mov    rbx,rcx
   140003b89:	lea    rdi,[rsp+0x30]
   140003b8e:	xor    eax,eax
   140003b90:	mov    rsi,rcx
   140003b93:	mov    rbp,rdx
   140003b96:	mov    r15,r8
   140003b99:	xor    r8d,r8d
   140003b9c:	mov    rdx,rcx
   140003b9f:	mov    ecx,0x1fc
   140003ba4:	mov    DWORD PTR [rsp+0x20],r8d
   140003ba9:	rep stos BYTE PTR es:[rdi],al
   140003bab:	movzx  eax,WORD PTR [rbx]
   140003bae:	mov    r13,r9
   140003bb1:	mov    r12d,r8d
   140003bb4:	test   ax,ax
   140003bb7:	je     0x140003bd1
   140003bb9:	movzx  ecx,ax
   140003bbc:	cmp    cx,0x5c
   140003bc0:	jne    0x140003bc5
   140003bc2:	inc    r12d
   140003bc5:	add    rdx,0x2
   140003bc9:	movzx  ecx,WORD PTR [rdx]
   140003bcc:	test   cx,cx
   140003bcf:	jne    0x140003bbc
   140003bd1:	mov    r14,rsi
   140003bd4:	jmp    0x140003be3
   140003bd6:	test   ax,ax
   140003bd9:	je     0x140003be9
   140003bdb:	add    r14,0x2
   140003bdf:	movzx  eax,WORD PTR [r14]
   140003be3:	cmp    ax,0x5c
   140003be7:	jne    0x140003bd6
   140003be9:	mov    rdi,r14
   140003bec:	sub    rdi,rsi
   140003bef:	sar    rdi,1
   140003bf2:	cmp    rdi,0x1f4
   140003bf9:	jg     0x140003c13
   140003bfb:	add    rdi,rdi
   140003bfe:	mov    rdx,rsi
   140003c01:	mov    r8,rdi
   140003c04:	mov    rcx,rbp
   140003c07:	call   QWORD PTR [rip+0x7773]        # 0x14000b380
   140003c0d:	xor    eax,eax
   140003c0f:	mov    WORD PTR [rdi+rbp*1],ax
   140003c13:	xor    edi,edi
   140003c15:	test   rbp,rbp
   140003c18:	je     0x140003c72
   140003c1a:	mov    rcx,rbp
   140003c1d:	call   QWORD PTR [rip+0x7675]        # 0x14000b298
   140003c23:	test   eax,eax
   140003c25:	jne    0x140003c72
   140003c27:	mov    ecx,0x1f7
   140003c2c:	call   0x1400059b8
   140003c31:	mov    ecx,0x2
   140003c36:	mov    rdi,rax
   140003c39:	call   0x14000a4f8
   140003c3e:	mov    rcx,rax
   140003c41:	mov    rdx,rdi
   140003c44:	call   0x1400066c4
   140003c49:	mov    eax,0x1
   140003c4e:	mov    rcx,QWORD PTR [rsp+0x230]
   140003c56:	xor    rcx,rsp
   140003c59:	call   0x140009fe0
   140003c5e:	add    rsp,0x248
   140003c65:	pop    r15
   140003c67:	pop    r14
   140003c69:	pop    r13
   140003c6b:	pop    r12
   140003c6d:	pop    rdi
   140003c6e:	pop    rsi
   140003c6f:	pop    rbp
   140003c70:	pop    rbx
   140003c71:	ret    
   140003c72:	mov    r8d,0xfe
   140003c78:	lea    rcx,[rsp+0x30]
   140003c7d:	mov    rdx,rbp
   140003c80:	call   0x140006448
   140003c85:	cmp    WORD PTR [rsi],di
   140003c88:	je     0x140003c93
   140003c8a:	add    rbx,0x2
   140003c8e:	cmp    WORD PTR [rbx],di
   140003c91:	jne    0x140003c8a
   140003c93:	lea    rax,[rbx-0x2]
   140003c97:	mov    cx,0x5c
   140003c9b:	jmp    0x140003ca9
   140003c9d:	cmp    rbx,rsi
   140003ca0:	jbe    0x140003cae
   140003ca2:	mov    rbx,rax
   140003ca5:	add    rax,0xfffffffffffffffe
   140003ca9:	cmp    WORD PTR [rax],cx
   140003cac:	jne    0x140003c9d
   140003cae:	lea    rax,[rbx-0x2]
   140003cb2:	cmp    WORD PTR [rax],cx
   140003cb5:	jne    0x140003cd3
   140003cb7:	cmp    rbx,rsi
   140003cba:	jbe    0x140003cd3
   140003cbc:	jmp    0x140003cc7
   140003cbe:	lea    rax,[rbx-0x2]
   140003cc2:	cmp    WORD PTR [rax],cx
   140003cc5:	jne    0x140003ccf
   140003cc7:	mov    rbx,rax
   140003cca:	cmp    rax,rsi
   140003ccd:	ja     0x140003cbe
   140003ccf:	add    rbx,0x2
   140003cd3:	test   rbx,rbx
   140003cd6:	jne    0x140003cdc
   140003cd8:	mov    eax,edi
   140003cda:	jmp    0x140003cec
   140003cdc:	mov    rcx,rbx
   140003cdf:	call   QWORD PTR [rip+0x75b3]        # 0x14000b298
   140003ce5:	cmp    eax,0x1f4
   140003cea:	jge    0x140003d0c
   140003cec:	cdqe   
   140003cee:	mov    rdx,rbx
   140003cf1:	mov    rcx,r13
   140003cf4:	lea    rdi,[rax+rax*1]
   140003cf8:	mov    r8,rdi
   140003cfb:	call   QWORD PTR [rip+0x767f]        # 0x14000b380
   140003d01:	xor    eax,eax
   140003d03:	mov    WORD PTR [rdi+r13*1],ax
   140003d08:	xor    edi,edi
   140003d0a:	jmp    0x140003d26
   140003d0c:	mov    r8d,0x3e8
   140003d12:	mov    rdx,rbx
   140003d15:	mov    rcx,r13
   140003d18:	call   QWORD PTR [rip+0x7662]        # 0x14000b380
   140003d1e:	mov    WORD PTR [r13+0x3e6],di
   140003d26:	cmp    r12d,0x2
   140003d2a:	jl     0x140003dbb
   140003d30:	test   rbx,rbx
   140003d33:	je     0x140003d42
   140003d35:	mov    rcx,rbx
   140003d38:	call   QWORD PTR [rip+0x755a]        # 0x14000b298
   140003d3e:	mov    DWORD PTR [rsp+0x20],eax
   140003d42:	mov    rcx,r14
   140003d45:	call   QWORD PTR [rip+0x754d]        # 0x14000b298
   140003d4b:	mov    ecx,DWORD PTR [rsp+0x20]
   140003d4f:	add    ecx,eax
   140003d51:	lea    ecx,[rcx*4+0x14]
   140003d58:	call   0x140007128
   140003d5d:	mov    QWORD PTR [r15],rax
   140003d60:	test   rax,rax
   140003d63:	jne    0x140003d81
   140003d65:	mov    ecx,0x2
   140003d6a:	call   0x14000a4f8
   140003d6f:	mov    rcx,rax
   140003d72:	mov    edx,0x10001
   140003d77:	call   0x1400056fc
   140003d7c:	jmp    0x140003c49
   140003d81:	sub    rbx,r14
   140003d84:	mov    rcx,rax
   140003d87:	sub    rbx,0x2
   140003d8b:	sar    rbx,1
   140003d8e:	call   0x1400072d0
   140003d93:	movsxd rcx,eax
   140003d96:	shr    rcx,1
   140003d99:	mov    eax,ebx
   140003d9b:	cmp    rcx,rax
   140003d9e:	jbe    0x140003ddd
   140003da0:	mov    rcx,QWORD PTR [r15]
   140003da3:	lea    r8,[rbx+rbx*1]
   140003da7:	lea    rdx,[r14+0x2]
   140003dab:	call   QWORD PTR [rip+0x75cf]        # 0x14000b380
   140003db1:	mov    rcx,QWORD PTR [r15]
   140003db4:	call   0x1400072d0
   140003db9:	jmp    0x140003ddd
   140003dbb:	test   rbp,rbp
   140003dbe:	je     0x140003ddd
   140003dc0:	mov    rcx,rbp
   140003dc3:	call   QWORD PTR [rip+0x74cf]        # 0x14000b298
   140003dc9:	lea    ecx,[rax*2+0x14]
   140003dd0:	call   0x140007128
   140003dd5:	mov    QWORD PTR [r15],rax
   140003dd8:	test   rax,rax
   140003ddb:	je     0x140003d65
   140003ddd:	mov    r8d,0x1f4
   140003de3:	lea    rdx,[rsp+0x30]
   140003de8:	mov    rcx,rbp
   140003deb:	call   0x140006448
   140003df0:	test   rbp,rbp
   140003df3:	je     0x140003c49
   140003df9:	cmp    QWORD PTR [r15],rdi
   140003dfc:	je     0x140003c49
   140003e02:	test   r13,r13
   140003e05:	je     0x140003c49
   140003e0b:	xor    eax,eax
   140003e0d:	jmp    0x140003c4e
   140003e12:	int3   
   140003e13:	int3   
   140003e14:	int3   
   140003e15:	int3   
   140003e16:	int3   
   140003e17:	int3   
   140003e18:	mov    QWORD PTR [rsp+0x8],rbx
   140003e1d:	push   rbp
   140003e1e:	push   rsi
   140003e1f:	push   rdi
   140003e20:	push   r12
   140003e22:	push   r13
   140003e24:	push   r14
   140003e26:	push   r15
   140003e28:	lea    rbp,[rsp-0x530]
   140003e30:	sub    rsp,0x630
   140003e37:	mov    rax,QWORD PTR [rip+0xa1ca]        # 0x14000e008
   140003e3e:	xor    rax,rsp
   140003e41:	mov    QWORD PTR [rbp+0x520],rax
   140003e48:	mov    rax,QWORD PTR [rbp+0x590]
   140003e4f:	xor    edi,edi
   140003e51:	mov    r15,QWORD PTR [rbp+0x598]
   140003e58:	mov    r14d,ecx
   140003e5b:	mov    r13,QWORD PTR [rbp+0x5b0]
   140003e62:	mov    r12,QWORD PTR [rbp+0x5c0]
   140003e69:	mov    rsi,QWORD PTR [rbp+0x5c8]
   140003e70:	lea    ecx,[rdi+0x18]
   140003e73:	mov    rbx,QWORD PTR [rbp+0x5d0]
   140003e7a:	mov    QWORD PTR [rsp+0x48],rax
   140003e7f:	mov    rax,QWORD PTR [rbp+0x5a8]
   140003e86:	mov    QWORD PTR [rsp+0x38],rax
   140003e8b:	mov    rax,QWORD PTR [rbp+0x5b8]
   140003e92:	mov    QWORD PTR [rsp+0x40],rax
   140003e97:	mov    rax,QWORD PTR [rbp+0x5e0]
   140003e9e:	mov    QWORD PTR [rsp+0x58],rax
   140003ea3:	mov    QWORD PTR [rsp+0x68],r9
   140003ea8:	mov    QWORD PTR [rsp+0x60],r8
   140003ead:	mov    QWORD PTR [rsp+0x70],rdx
   140003eb2:	mov    QWORD PTR [rsp+0x30],rdi
   140003eb7:	mov    DWORD PTR [rsp+0x50],0x1
   140003ebf:	call   0x140007128
   140003ec4:	test   rax,rax
   140003ec7:	jne    0x140003ef6
   140003ec9:	lea    ecx,[rdi+0x8]
   140003ecc:	mov    QWORD PTR [rsp+0x30],rdi
   140003ed1:	call   QWORD PTR [rip+0x71c9]        # 0x14000b0a0
   140003ed7:	call   0x140005550
   140003edc:	lea    ecx,[rdi+0x2]
   140003edf:	call   0x14000a4f8
   140003ee4:	mov    rcx,rax
   140003ee7:	mov    edx,0x20001
   140003eec:	call   0x1400056fc
   140003ef1:	jmp    0x140004c3b
   140003ef6:	mov    QWORD PTR [rax+0x8],rdi
   140003efa:	lea    rdx,[rip+0x77e7]        # 0x14000b6e8
   140003f01:	mov    QWORD PTR [rax+0x10],rdi
   140003f05:	lea    rcx,[rbp-0x80]
   140003f09:	mov    QWORD PTR [rax],0x9
   140003f10:	mov    edi,0x8
   140003f15:	mov    r8d,edi
   140003f18:	mov    QWORD PTR [rsp+0x30],rax
   140003f1d:	call   0x1400063c0
   140003f22:	xor    ecx,ecx
   140003f24:	mov    DWORD PTR [rbp-0x78],0xa
   140003f2b:	lea    rax,[rip+0x77a2]        # 0x14000b6d4
   140003f32:	mov    QWORD PTR [rbp-0x58],rcx
   140003f36:	mov    QWORD PTR [rbp-0x60],rax
   140003f3a:	lea    rdx,[rip+0x77a7]        # 0x14000b6e8
   140003f41:	mov    rax,QWORD PTR [rsp+0x60]
   140003f46:	xorps  xmm0,xmm0
   140003f49:	mov    QWORD PTR [rbp-0x50],rcx
   140003f4d:	mov    r8d,edi
   140003f50:	mov    QWORD PTR [rbp-0x38],rcx
   140003f54:	mov    QWORD PTR [rbp-0x30],rcx
   140003f58:	mov    DWORD PTR [rbp-0x28],ecx
   140003f5b:	mov    QWORD PTR [rbp-0x10],rcx
   140003f5f:	lea    rcx,[rbp-0x8]
   140003f63:	mov    QWORD PTR [rbp-0x48],rax
   140003f67:	mov    QWORD PTR [rbp-0x68],0x1
   140003f6f:	mov    QWORD PTR [rbp-0x70],0x20000
   140003f77:	mov    DWORD PTR [rbp-0x40],0xfe
   140003f7e:	movdqa XMMWORD PTR [rbp-0x20],xmm0
   140003f83:	call   0x1400063c0
   140003f88:	lea    ecx,[rdi-0x7]
   140003f8b:	mov    QWORD PTR [rbp+0x8],0x100c0
   140003f93:	xorps  xmm0,xmm0
   140003f96:	mov    DWORD PTR [rbp+0x0],ecx
   140003f99:	lea    rax,[rip+0x7724]        # 0x14000b6c4
   140003fa0:	mov    QWORD PTR [rbp+0x10],rcx
   140003fa4:	mov    QWORD PTR [rbp+0x18],rax
   140003fa8:	lea    rdx,[rip+0x7739]        # 0x14000b6e8
   140003faf:	xor    eax,eax
   140003fb1:	movdqa XMMWORD PTR [rbp+0x20],xmm0
   140003fb6:	mov    r8d,edi
   140003fb9:	mov    QWORD PTR [rbp+0x30],rax
   140003fbd:	lea    rcx,[rbp+0x70]
   140003fc1:	mov    DWORD PTR [rbp+0x38],eax
   140003fc4:	mov    QWORD PTR [rbp+0x40],rax
   140003fc8:	mov    QWORD PTR [rbp+0x48],rax
   140003fcc:	mov    DWORD PTR [rbp+0x50],eax
   140003fcf:	mov    QWORD PTR [rbp+0x58],rax
   140003fd3:	movdqa XMMWORD PTR [rbp+0x60],xmm0
   140003fd8:	call   0x1400063c0
   140003fdd:	lea    ecx,[rdi-0x7]
   140003fe0:	mov    QWORD PTR [rbp+0x80],0x100c0
   140003feb:	lea    rax,[rip+0x76d6]        # 0x14000b6c8
   140003ff2:	mov    DWORD PTR [rbp+0x78],ecx
   140003ff5:	mov    QWORD PTR [rbp+0x90],rax
   140003ffc:	lea    rdx,[rip+0x76e5]        # 0x14000b6e8
   140004003:	xor    eax,eax
   140004005:	mov    QWORD PTR [rbp+0x88],rcx
   14000400c:	xorps  xmm0,xmm0
   14000400f:	mov    QWORD PTR [rbp+0x98],rax
   140004016:	mov    r8d,edi
   140004019:	mov    QWORD PTR [rbp+0xa0],rax
   140004020:	lea    rcx,[rbp+0xe8]
   140004027:	mov    QWORD PTR [rbp+0xa8],rax
   14000402e:	mov    DWORD PTR [rbp+0xb0],eax
   140004034:	mov    QWORD PTR [rbp+0xb8],rax
   14000403b:	mov    QWORD PTR [rbp+0xc0],rax
   140004042:	mov    DWORD PTR [rbp+0xc8],eax
   140004048:	mov    QWORD PTR [rbp+0xe0],rax
   14000404f:	movdqa XMMWORD PTR [rbp+0xd0],xmm0
   140004057:	call   0x1400063c0
   14000405c:	lea    rax,[rip+0x7669]        # 0x14000b6cc
   140004063:	mov    QWORD PTR [rbp+0xf8],0x10010
   14000406e:	lea    ecx,[rdi-0x7]
   140004071:	mov    QWORD PTR [rbp+0x108],rax
   140004078:	xor    eax,eax
   14000407a:	mov    DWORD PTR [rbp+0xf0],ecx
   140004080:	xorps  xmm0,xmm0
   140004083:	mov    QWORD PTR [rbp+0x120],rax
   14000408a:	movdqa XMMWORD PTR [rbp+0x110],xmm0
   140004092:	mov    QWORD PTR [rbp+0x100],rcx
   140004099:	mov    r8d,edi
   14000409c:	mov    DWORD PTR [rbp+0x128],eax
   1400040a2:	lea    rdx,[rip+0x763f]        # 0x14000b6e8
   1400040a9:	mov    QWORD PTR [rbp+0x130],rax
   1400040b0:	lea    rcx,[rbp+0x160]
   1400040b7:	mov    QWORD PTR [rbp+0x138],rax
   1400040be:	mov    DWORD PTR [rbp+0x140],eax
   1400040c4:	mov    QWORD PTR [rbp+0x148],rax
   1400040cb:	movdqa XMMWORD PTR [rbp+0x150],xmm0
   1400040d3:	call   0x1400063c0
   1400040d8:	xor    ecx,ecx
   1400040da:	mov    DWORD PTR [rbp+0x168],0xa
   1400040e4:	lea    rax,[rip+0x75e5]        # 0x14000b6d0
   1400040eb:	mov    QWORD PTR [rbp+0x188],rcx
   1400040f2:	mov    QWORD PTR [rbp+0x180],rax
   1400040f9:	lea    rdx,[rip+0x75e8]        # 0x14000b6e8
   140004100:	mov    rax,QWORD PTR [rbp+0x5a0]
   140004107:	xorps  xmm0,xmm0
   14000410a:	mov    QWORD PTR [rbp+0x190],rcx
   140004111:	mov    r8d,edi
   140004114:	mov    QWORD PTR [rbp+0x170],rcx
   14000411b:	mov    QWORD PTR [rbp+0x1a8],rcx
   140004122:	mov    QWORD PTR [rbp+0x1b0],rcx
   140004129:	mov    DWORD PTR [rbp+0x1b8],ecx
   14000412f:	mov    QWORD PTR [rbp+0x1d0],rcx
   140004136:	lea    rcx,[rbp+0x1d8]
   14000413d:	mov    QWORD PTR [rbp+0x198],rax
   140004144:	mov    QWORD PTR [rbp+0x178],0x1
   14000414f:	mov    DWORD PTR [rbp+0x1a0],0xfe
   140004159:	movdqa XMMWORD PTR [rbp+0x1c0],xmm0
   140004161:	call   0x1400063c0
   140004166:	lea    ecx,[rdi-0x7]
   140004169:	mov    QWORD PTR [rbp+0x1e8],0x10080
   140004174:	xorps  xmm0,xmm0
   140004177:	mov    DWORD PTR [rbp+0x1e0],ecx
   14000417d:	lea    rax,[rip+0x73b8]        # 0x14000b53c
   140004184:	mov    QWORD PTR [rbp+0x1f0],rcx
   14000418b:	mov    QWORD PTR [rbp+0x1f8],rax
   140004192:	lea    rdx,[rip+0x754f]        # 0x14000b6e8
   140004199:	xor    eax,eax
   14000419b:	movdqa XMMWORD PTR [rbp+0x200],xmm0
   1400041a3:	mov    r8d,edi
   1400041a6:	mov    QWORD PTR [rbp+0x210],rax
   1400041ad:	lea    rcx,[rbp+0x2c8]
   1400041b4:	mov    DWORD PTR [rbp+0x218],eax
   1400041ba:	mov    QWORD PTR [rbp+0x220],rax
   1400041c1:	mov    QWORD PTR [rbp+0x228],rax
   1400041c8:	mov    DWORD PTR [rbp+0x230],eax
   1400041ce:	mov    QWORD PTR [rbp+0x238],rax
   1400041d5:	movdqa XMMWORD PTR [rbp+0x240],xmm0
   1400041dd:	call   0x1400063c0
   1400041e2:	xor    ecx,ecx
   1400041e4:	mov    DWORD PTR [rbp+0x2d0],0x1
   1400041ee:	xorps  xmm0,xmm0
   1400041f1:	mov    DWORD PTR [rbp+0x308],ecx
   1400041f7:	mov    edi,0x2
   1400041fc:	mov    QWORD PTR [rbp+0x310],rcx
   140004203:	lea    rax,[rip+0x732e]        # 0x14000b538
   14000420a:	mov    QWORD PTR [rbp+0x318],rcx
   140004211:	mov    QWORD PTR [rbp+0x2e8],rax
   140004218:	lea    rdx,[rip+0x74c9]        # 0x14000b6e8
   14000421f:	lea    rax,[rsp+0x30]
   140004224:	mov    DWORD PTR [rbp+0x320],ecx
   14000422a:	mov    QWORD PTR [rbp+0x328],rcx
   140004231:	lea    r8d,[rdi+0x6]
   140004235:	lea    rcx,[rbp+0x250]
   14000423c:	mov    QWORD PTR [rbp+0x300],rax
   140004243:	movdqa XMMWORD PTR [rbp+0x2f0],xmm0
   14000424b:	mov    QWORD PTR [rbp+0x2e0],rdi
   140004252:	mov    QWORD PTR [rbp+0x2d8],0x40001
   14000425d:	movdqa XMMWORD PTR [rbp+0x330],xmm0
   140004265:	call   0x1400063c0
   14000426a:	lea    rax,[rip+0x7467]        # 0x14000b6d8
   140004271:	mov    QWORD PTR [rbp+0x260],0x40
   14000427c:	lea    ecx,[rdi-0x1]
   14000427f:	mov    QWORD PTR [rbp+0x270],rax
   140004286:	xor    eax,eax
   140004288:	mov    DWORD PTR [rbp+0x258],ecx
   14000428e:	mov    QWORD PTR [rbp+0x278],rax
   140004295:	mov    QWORD PTR [rbp+0x280],rax
   14000429c:	mov    QWORD PTR [rbp+0x268],rcx
   1400042a3:	xorps  xmm0,xmm0
   1400042a6:	mov    QWORD PTR [rbp+0x288],r12
   1400042ad:	lea    r8d,[rdi+0x6]
   1400042b1:	movdqa XMMWORD PTR [rbp+0x2b0],xmm0
   1400042b9:	lea    rdx,[rip+0x7428]        # 0x14000b6e8
   1400042c0:	mov    DWORD PTR [rbp+0x290],0xfe
   1400042ca:	lea    rcx,[rbp+0x340]
   1400042d1:	mov    QWORD PTR [rbp+0x298],rax
   1400042d8:	mov    QWORD PTR [rbp+0x2a0],rax
   1400042df:	mov    DWORD PTR [rbp+0x2a8],eax
   1400042e5:	mov    QWORD PTR [rbp+0x2c0],rax
   1400042ec:	call   0x1400063c0
   1400042f1:	lea    ecx,[rdi-0x1]
   1400042f4:	mov    QWORD PTR [rbp+0x350],0x40
   1400042ff:	lea    rax,[rip+0x73da]        # 0x14000b6e0
   140004306:	mov    DWORD PTR [rbp+0x348],ecx
   14000430c:	mov    QWORD PTR [rbp+0x360],rax
   140004313:	lea    r8d,[rdi+0x6]
   140004317:	xor    eax,eax
   140004319:	mov    QWORD PTR [rbp+0x358],rcx
   140004320:	xorps  xmm0,xmm0
   140004323:	mov    QWORD PTR [rbp+0x368],rax
   14000432a:	lea    rdx,[rip+0x73b7]        # 0x14000b6e8
   140004331:	mov    QWORD PTR [rbp+0x370],rax
   140004338:	lea    rcx,[rbp+0x3b8]
   14000433f:	mov    QWORD PTR [rbp+0x388],rax
   140004346:	mov    QWORD PTR [rbp+0x390],rax
   14000434d:	mov    DWORD PTR [rbp+0x398],eax
   140004353:	mov    QWORD PTR [rbp+0x3b0],rax
   14000435a:	mov    QWORD PTR [rbp+0x378],rsi
   140004361:	mov    DWORD PTR [rbp+0x380],0xfe
   14000436b:	movdqa XMMWORD PTR [rbp+0x3a0],xmm0
   140004373:	call   0x1400063c0
   140004378:	lea    ecx,[rdi-0x1]
   14000437b:	mov    QWORD PTR [rbp+0x3c8],0x40
   140004386:	xorps  xmm0,xmm0
   140004389:	mov    DWORD PTR [rbp+0x3c0],ecx
   14000438f:	lea    rax,[rip+0x71c6]        # 0x14000b55c
   140004396:	mov    QWORD PTR [rbp+0x3d0],rcx
   14000439d:	mov    QWORD PTR [rbp+0x3d8],rax
   1400043a4:	lea    r8d,[rdi+0x6]
   1400043a8:	xor    eax,eax
   1400043aa:	movdqa XMMWORD PTR [rbp+0x3e0],xmm0
   1400043b2:	lea    rdx,[rip+0x732f]        # 0x14000b6e8
   1400043b9:	mov    QWORD PTR [rbp+0x400],rax
   1400043c0:	lea    rcx,[rbp+0x430]
   1400043c7:	mov    QWORD PTR [rbp+0x408],rax
   1400043ce:	mov    DWORD PTR [rbp+0x410],eax
   1400043d4:	mov    QWORD PTR [rbp+0x418],rax
   1400043db:	mov    QWORD PTR [rbp+0x3f0],rbx
   1400043e2:	mov    DWORD PTR [rbp+0x3f8],0xfe
   1400043ec:	movdqa XMMWORD PTR [rbp+0x420],xmm0
   1400043f4:	call   0x1400063c0
   1400043f9:	xor    ecx,ecx
   1400043fb:	mov    DWORD PTR [rbp+0x438],0xa
   140004405:	lea    rax,[rip+0x72d0]        # 0x14000b6dc
   14000440c:	mov    QWORD PTR [rbp+0x458],rcx
   140004413:	mov    QWORD PTR [rbp+0x450],rax
   14000441a:	lea    r8d,[rdi+0x6]
   14000441e:	mov    rax,QWORD PTR [rbp+0x5d8]
   140004425:	lea    rdx,[rip+0x72bc]        # 0x14000b6e8
   14000442c:	mov    QWORD PTR [rbp+0x460],rcx
   140004433:	xorps  xmm0,xmm0
   140004436:	mov    QWORD PTR [rbp+0x440],rcx
   14000443d:	mov    QWORD PTR [rbp+0x478],rcx
   140004444:	mov    QWORD PTR [rbp+0x480],rcx
   14000444b:	mov    DWORD PTR [rbp+0x488],ecx
   140004451:	mov    QWORD PTR [rbp+0x4a0],rcx
   140004458:	lea    rcx,[rbp+0x4a8]
   14000445f:	mov    QWORD PTR [rbp+0x468],rax
   140004466:	mov    QWORD PTR [rbp+0x448],0x1
   140004471:	mov    DWORD PTR [rbp+0x470],0xfe
   14000447b:	movdqa XMMWORD PTR [rbp+0x490],xmm0
   140004483:	call   0x1400063c0
   140004488:	lea    edx,[rdi-0x1]
   14000448b:	xorps  xmm0,xmm0
   14000448e:	lea    rax,[rip+0x724f]        # 0x14000b6e4
   140004495:	mov    DWORD PTR [rbp+0x4b0],edx
   14000449b:	mov    QWORD PTR [rbp+0x4c8],rax
   1400044a2:	movdqa XMMWORD PTR [rbp+0x4d0],xmm0
   1400044aa:	mov    QWORD PTR [rbp+0x4c0],rdx
   1400044b1:	mov    rax,QWORD PTR [rbp+0x5e8]
   1400044b8:	xor    ecx,ecx
   1400044ba:	mov    QWORD PTR [rbp+0x4b8],rcx
   1400044c1:	mov    QWORD PTR [rbp+0x4e0],rax
   1400044c8:	mov    DWORD PTR [rbp+0x4e8],0xfe
   1400044d2:	mov    QWORD PTR [rbp+0x4f0],rcx
   1400044d9:	mov    QWORD PTR [rbp+0x4f8],rcx
   1400044e0:	mov    DWORD PTR [rbp+0x500],ecx
   1400044e6:	mov    QWORD PTR [rbp+0x508],rcx
   1400044ed:	movdqa XMMWORD PTR [rbp+0x510],xmm0
   1400044f5:	cmp    r14d,edx
   1400044f8:	jne    0x140004504
   1400044fa:	mov    ecx,0x1f5
   1400044ff:	jmp    0x140004c08
   140004504:	mov    rdx,QWORD PTR [rsp+0x70]
   140004509:	lea    rax,[rbp-0x80]
   14000450d:	mov    ecx,r14d
   140004510:	mov    QWORD PTR [rsp+0x20],rax
   140004515:	call   0x1400098cc
   14000451a:	test   eax,eax
   14000451c:	jne    0x14000455d
   14000451e:	mov    ecx,0x1389
   140004523:	call   0x1400059b8
   140004528:	mov    ecx,edi
   14000452a:	mov    rbx,rax
   14000452d:	call   0x14000a4f8
   140004532:	mov    rcx,rax
   140004535:	mov    rdx,rbx
   140004538:	call   0x1400066c4
   14000453d:	mov    ecx,edi
   14000453f:	call   0x14000a4f8
   140004544:	mov    rcx,rax
   140004547:	lea    rdx,[rip+0x71a6]        # 0x14000b6f4
   14000454e:	call   0x1400066c4
   140004553:	call   0x140005358
   140004558:	jmp    0x140004c0d
   14000455d:	mov    r8,QWORD PTR [rsp+0x68]
   140004562:	mov    rax,QWORD PTR [rbp+0x30]
   140004566:	mov    rdx,QWORD PTR [rsp+0x48]
   14000456b:	mov    rcx,QWORD PTR [rsp+0x38]
   140004570:	mov    QWORD PTR [r8],rax
   140004573:	mov    rax,QWORD PTR [rbp+0xa8]
   14000457a:	mov    QWORD PTR [rdx],rax
   14000457d:	mov    rax,QWORD PTR [rbp+0x120]
   140004584:	mov    QWORD PTR [r15],rax
   140004587:	mov    rax,QWORD PTR [rbp+0x210]
   14000458e:	mov    QWORD PTR [rcx],rax
   140004591:	cmp    QWORD PTR [r8],0x0
   140004595:	je     0x140004648
   14000459b:	cmp    QWORD PTR [rdx],0x0
   14000459f:	jne    0x1400045d6
   1400045a1:	mov    ecx,0x1fc
   1400045a6:	call   0x140007128
   1400045ab:	mov    rcx,QWORD PTR [rsp+0x48]
   1400045b0:	mov    QWORD PTR [rcx],rax
   1400045b3:	test   rax,rax
   1400045b6:	jne    0x1400045d6
   1400045b8:	call   0x140005550
   1400045bd:	mov    ecx,edi
   1400045bf:	call   0x14000a4f8
   1400045c4:	mov    edx,0x20001
   1400045c9:	mov    rcx,rax
   1400045cc:	call   0x1400056fc
   1400045d1:	jmp    0x140004c22
   1400045d6:	cmp    QWORD PTR [r15],0x0
   1400045da:	jne    0x1400045f9
   1400045dc:	mov    rax,QWORD PTR [rsp+0x40]
   1400045e1:	mov    ecx,0x1fc
   1400045e6:	mov    DWORD PTR [rax],0x1
   1400045ec:	call   0x140007128
   1400045f1:	mov    QWORD PTR [r15],rax
   1400045f4:	test   rax,rax
   1400045f7:	je     0x1400045b8
   1400045f9:	cmp    QWORD PTR [rbp+0x120],0x0
   140004601:	mov    rcx,QWORD PTR [r15]
   140004604:	jne    0x14000461f
   140004606:	call   0x1400072d0
   14000460b:	mov    rcx,QWORD PTR [r15]
   14000460e:	lea    rdx,[rip+0x70e3]        # 0x14000b6f8
   140004615:	mov    r8d,eax
   140004618:	call   0x140006448
   14000461d:	jmp    0x140004648
   14000461f:	call   0x140006670
   140004624:	test   eax,eax
   140004626:	jne    0x140004648
   140004628:	mov    edx,0x1fc
   14000462d:	mov    rcx,r15
   140004630:	call   0x1400071c8
   140004635:	test   eax,eax
   140004637:	je     0x1400045b8
   14000463d:	mov    rax,QWORD PTR [rsp+0x40]
   140004642:	mov    DWORD PTR [rax],0x1
   140004648:	mov    rax,QWORD PTR [rsp+0x38]
   14000464d:	mov    rcx,QWORD PTR [rax]
   140004650:	test   rcx,rcx
   140004653:	je     0x140004674
   140004655:	call   QWORD PTR [rip+0x6c3d]        # 0x14000b298
   14000465b:	test   eax,eax
   14000465d:	je     0x140004674
   14000465f:	mov    rax,QWORD PTR [rsp+0x38]
   140004664:	lea    rdx,[rip+0x7089]        # 0x14000b6f4
   14000466b:	mov    rcx,QWORD PTR [rax]
   14000466e:	call   QWORD PTR [rip+0x6bdc]        # 0x14000b250
   140004674:	mov    rax,QWORD PTR [rsp+0x60]
   140004679:	cmp    DWORD PTR [rax],0x1
   14000467c:	jne    0x140004688
   14000467e:	cmp    r14d,edi
   140004681:	jle    0x140004691
   140004683:	jmp    0x1400044fa
   140004688:	cmp    r14d,edi
   14000468b:	je     0x1400044fa
   140004691:	xor    r14d,r14d
   140004694:	cmp    DWORD PTR [rbp+0x1f4],r14d
   14000469b:	je     0x1400046fd
   14000469d:	mov    rax,QWORD PTR [rsp+0x38]
   1400046a2:	mov    rcx,QWORD PTR [rax]
   1400046a5:	test   rcx,rcx
   1400046a8:	jne    0x1400046b4
   1400046aa:	mov    ecx,0x220
   1400046af:	jmp    0x140004c08
   1400046b4:	call   QWORD PTR [rip+0x6bde]        # 0x14000b298
   1400046ba:	test   eax,eax
   1400046bc:	jne    0x1400046fd
   1400046be:	mov    ecx,0x1389
   1400046c3:	call   0x1400059b8
   1400046c8:	mov    ecx,edi
   1400046ca:	mov    rbx,rax
   1400046cd:	call   0x14000a4f8
   1400046d2:	mov    rcx,rax
   1400046d5:	mov    rdx,rbx
   1400046d8:	call   0x1400066c4
   1400046dd:	mov    ecx,edi
   1400046df:	call   0x14000a4f8
   1400046e4:	mov    rcx,rax
   1400046e7:	lea    rdx,[rip+0x7006]        # 0x14000b6f4
   1400046ee:	call   0x1400066c4
   1400046f3:	mov    ecx,0x224
   1400046f8:	jmp    0x140004c08
   1400046fd:	test   r12,r12
   140004700:	je     0x1400047ce
   140004706:	mov    rcx,r12
   140004709:	call   QWORD PTR [rip+0x6b89]        # 0x14000b298
   14000470f:	test   eax,eax
   140004711:	je     0x140004729
   140004713:	cmp    DWORD PTR [rbp+0x3d4],0x1
   14000471a:	jne    0x140004729
   14000471c:	cmp    DWORD PTR [rbp+0x35c],0x1
   140004723:	je     0x1400044fa
   140004729:	mov    rcx,r12
   14000472c:	call   QWORD PTR [rip+0x6b66]        # 0x14000b298
   140004732:	test   eax,eax
   140004734:	je     0x14000475b
   140004736:	cmp    DWORD PTR [rbp+0x35c],0x1
   14000473d:	jne    0x14000475b
   14000473f:	test   rsi,rsi
   140004742:	je     0x140004751
   140004744:	mov    rcx,rsi
   140004747:	call   QWORD PTR [rip+0x6b4b]        # 0x14000b298
   14000474d:	test   eax,eax
   14000474f:	jne    0x14000475b
   140004751:	mov    ecx,0x225
   140004756:	jmp    0x140004c08
   14000475b:	mov    rcx,r12
   14000475e:	call   QWORD PTR [rip+0x6b34]        # 0x14000b298
   140004764:	test   eax,eax
   140004766:	je     0x14000478d
   140004768:	cmp    DWORD PTR [rbp+0x3d4],0x1
   14000476f:	jne    0x14000478d
   140004771:	test   rbx,rbx
   140004774:	je     0x140004783
   140004776:	mov    rcx,rbx
   140004779:	call   QWORD PTR [rip+0x6b19]        # 0x14000b298
   14000477f:	test   eax,eax
   140004781:	jne    0x14000478d
   140004783:	mov    ecx,0x226
   140004788:	jmp    0x140004c08
   14000478d:	mov    rcx,r12
   140004790:	call   QWORD PTR [rip+0x6b02]        # 0x14000b298
   140004796:	test   eax,eax
   140004798:	je     0x1400047ce
   14000479a:	test   rbx,rbx
   14000479d:	je     0x1400047ac
   14000479f:	mov    rcx,rbx
   1400047a2:	call   QWORD PTR [rip+0x6af0]        # 0x14000b298
   1400047a8:	test   eax,eax
   1400047aa:	jne    0x1400047ce
   1400047ac:	test   rsi,rsi
   1400047af:	je     0x1400047be
   1400047b1:	mov    rcx,rsi
   1400047b4:	call   QWORD PTR [rip+0x6ade]        # 0x14000b298
   1400047ba:	test   eax,eax
   1400047bc:	jne    0x1400047ce
   1400047be:	mov    rax,QWORD PTR [rbp+0x5d8]
   1400047c5:	cmp    DWORD PTR [rax],r14d
   1400047c8:	je     0x1400044fa
   1400047ce:	cmp    DWORD PTR [rbp+0x4c4],0x1
   1400047d5:	jne    0x1400047e4
   1400047d7:	cmp    DWORD PTR [rbp+0x26c],r14d
   1400047de:	je     0x1400044fa
   1400047e4:	cmp    DWORD PTR [rbp+0x1f4],0x1
   1400047eb:	jne    0x1400047fa
   1400047ed:	cmp    DWORD PTR [rbp+0x26c],0x1
   1400047f4:	je     0x1400044fa
   1400047fa:	mov    rax,QWORD PTR [rsp+0x30]
   1400047ff:	test   rax,rax
   140004802:	je     0x140004bc5
   140004808:	cmp    DWORD PTR [rax],0x9
   14000480b:	jne    0x140004bc5
   140004811:	mov    r14d,DWORD PTR [rax+0x4]
   140004815:	test   r14d,r14d
   140004818:	je     0x140004bc5
   14000481e:	mov    rcx,QWORD PTR [rax+0x8]
   140004822:	test   rcx,rcx
   140004825:	je     0x140004841
   140004827:	cmp    DWORD PTR [rcx+0x4],0x20000
   14000482e:	jne    0x140004841
   140004830:	mov    rcx,QWORD PTR [rcx+0x10]
   140004834:	test   rcx,rcx
   140004837:	je     0x140004841
   140004839:	call   QWORD PTR [rip+0x6a59]        # 0x14000b298
   14000483f:	jmp    0x140004843
   140004841:	xor    eax,eax
   140004843:	lea    ecx,[rax*2+0x14]
   14000484a:	call   0x140007128
   14000484f:	mov    QWORD PTR [r13+0x0],rax
   140004853:	test   rax,rax
   140004856:	jne    0x140004869
   140004858:	mov    ecx,edi
   14000485a:	call   0x14000a4f8
   14000485f:	mov    edx,0x10001
   140004864:	jmp    0x1400045c9
   140004869:	mov    rax,QWORD PTR [rsp+0x30]
   14000486e:	test   rax,rax
   140004871:	je     0x1400048a9
   140004873:	cmp    DWORD PTR [rax],0x9
   140004876:	jne    0x1400048a9
   140004878:	cmp    DWORD PTR [rax+0x4],0x0
   14000487c:	jbe    0x1400048a9
   14000487e:	mov    rcx,QWORD PTR [rax+0x8]
   140004882:	test   rcx,rcx
   140004885:	je     0x1400048a9
   140004887:	cmp    DWORD PTR [rcx+0x4],0x20000
   14000488e:	jne    0x1400048a9
   140004890:	mov    rcx,QWORD PTR [rcx+0x10]
   140004894:	test   rcx,rcx
   140004897:	je     0x1400048a9
   140004899:	call   QWORD PTR [rip+0x69f9]        # 0x14000b298
   14000489f:	mov    r8d,eax
   1400048a2:	mov    rax,QWORD PTR [rsp+0x30]
   1400048a7:	jmp    0x1400048ac
   1400048a9:	xor    r8d,r8d
   1400048ac:	test   rax,rax
   1400048af:	je     0x1400048d4
   1400048b1:	cmp    DWORD PTR [rax],0x9
   1400048b4:	jne    0x1400048d4
   1400048b6:	cmp    DWORD PTR [rax+0x4],0x0
   1400048ba:	jbe    0x1400048d4
   1400048bc:	mov    rcx,QWORD PTR [rax+0x8]
   1400048c0:	test   rcx,rcx
   1400048c3:	je     0x1400048d4
   1400048c5:	cmp    DWORD PTR [rcx+0x4],0x20000
   1400048cc:	jne    0x1400048d4
   1400048ce:	mov    rdx,QWORD PTR [rcx+0x10]
   1400048d2:	jmp    0x1400048d6
   1400048d4:	xor    edx,edx
   1400048d6:	mov    rcx,QWORD PTR [r13+0x0]
   1400048da:	add    r8d,0xa
   1400048de:	call   0x140006448
   1400048e3:	mov    rcx,QWORD PTR [r13+0x0]
   1400048e7:	test   rcx,rcx
   1400048ea:	je     0x140004934
   1400048ec:	call   QWORD PTR [rip+0x69a6]        # 0x14000b298
   1400048f2:	test   eax,eax
   1400048f4:	je     0x140004934
   1400048f6:	mov    rcx,QWORD PTR [r13+0x0]
   1400048fa:	test   rcx,rcx
   1400048fd:	je     0x140004916
   1400048ff:	call   QWORD PTR [rip+0x6993]        # 0x14000b298
   140004905:	cmp    eax,0xfe
   14000490a:	jbe    0x140004916
   14000490c:	mov    ecx,0x223
   140004911:	jmp    0x140004c08
   140004916:	mov    rcx,QWORD PTR [r13+0x0]
   14000491a:	mov    edx,0x3d
   14000491f:	call   QWORD PTR [rip+0x69fb]        # 0x14000b320
   140004925:	test   rax,rax
   140004928:	je     0x14000493e
   14000492a:	mov    ecx,0x228
   14000492f:	jmp    0x140004c08
   140004934:	mov    ecx,0x21b
   140004939:	jmp    0x140004c08
   14000493e:	cmp    r14d,edi
   140004941:	jne    0x140004b67
   140004947:	cmp    DWORD PTR [rbp+0x1f4],0x0
   14000494e:	jne    0x140004b67
   140004954:	cmp    DWORD PTR [rbp+0x44c],0x0
   14000495b:	jne    0x140004b67
   140004961:	cmp    DWORD PTR [rbp+0x35c],0x0
   140004968:	jne    0x140004b67
   14000496e:	cmp    DWORD PTR [rbp+0x26c],0x0
   140004975:	mov    rax,QWORD PTR [rsp+0x30]
   14000497a:	je     0x140004a8e
   140004980:	test   rax,rax
   140004983:	je     0x1400049b7
   140004985:	cmp    DWORD PTR [rax],0x9
   140004988:	jne    0x1400049b7
   14000498a:	cmp    DWORD PTR [rax+0x4],0x1
   14000498e:	jbe    0x1400049b7
   140004990:	mov    rax,QWORD PTR [rax+0x8]
   140004994:	mov    rcx,QWORD PTR [rax+0x18]
   140004998:	test   rcx,rcx
   14000499b:	je     0x1400049b7
   14000499d:	cmp    DWORD PTR [rcx+0x4],0x20000
   1400049a4:	jne    0x1400049b7
   1400049a6:	mov    rcx,QWORD PTR [rcx+0x10]
   1400049aa:	test   rcx,rcx
   1400049ad:	je     0x1400049b7
   1400049af:	call   QWORD PTR [rip+0x68e3]        # 0x14000b298
   1400049b5:	jmp    0x1400049b9
   1400049b7:	xor    eax,eax
   1400049b9:	lea    ecx,[rax*2+0x28]
   1400049c0:	call   0x140007128
   1400049c5:	mov    r13,QWORD PTR [rsp+0x58]
   1400049ca:	mov    QWORD PTR [r13+0x0],rax
   1400049ce:	test   rax,rax
   1400049d1:	je     0x140004858
   1400049d7:	mov    rdx,QWORD PTR [rsp+0x30]
   1400049dc:	test   rdx,rdx
   1400049df:	je     0x140004a1b
   1400049e1:	cmp    DWORD PTR [rdx],0x9
   1400049e4:	jne    0x140004a1b
   1400049e6:	cmp    DWORD PTR [rdx+0x4],0x1
   1400049ea:	jbe    0x140004a1b
   1400049ec:	mov    rax,QWORD PTR [rdx+0x8]
   1400049f0:	mov    rcx,QWORD PTR [rax+0x18]
   1400049f4:	test   rcx,rcx
   1400049f7:	je     0x140004a1b
   1400049f9:	cmp    DWORD PTR [rcx+0x4],0x20000
   140004a00:	jne    0x140004a1b
   140004a02:	mov    rcx,QWORD PTR [rcx+0x10]
   140004a06:	test   rcx,rcx
   140004a09:	je     0x140004a1b
   140004a0b:	call   QWORD PTR [rip+0x6887]        # 0x14000b298
   140004a11:	mov    rdx,QWORD PTR [rsp+0x30]
   140004a16:	mov    r8d,eax
   140004a19:	jmp    0x140004a1e
   140004a1b:	xor    r8d,r8d
   140004a1e:	test   rdx,rdx
   140004a21:	je     0x140004a4a
   140004a23:	cmp    DWORD PTR [rdx],0x9
   140004a26:	jne    0x140004a4a
   140004a28:	cmp    DWORD PTR [rdx+0x4],0x1
   140004a2c:	jbe    0x140004a4a
   140004a2e:	mov    rax,QWORD PTR [rdx+0x8]
   140004a32:	mov    rdx,QWORD PTR [rax+0x18]
   140004a36:	test   rdx,rdx
   140004a39:	je     0x140004a4a
   140004a3b:	cmp    DWORD PTR [rdx+0x4],0x20000
   140004a42:	jne    0x140004a4a
   140004a44:	mov    rdx,QWORD PTR [rdx+0x10]
   140004a48:	jmp    0x140004a4c
   140004a4a:	xor    edx,edx
   140004a4c:	mov    rcx,QWORD PTR [r13+0x0]
   140004a50:	add    r8d,0x14
   140004a54:	call   0x140006448
   140004a59:	mov    rcx,QWORD PTR [r13+0x0]
   140004a5d:	lea    rdx,[rip+0x6c90]        # 0x14000b6f4
   140004a64:	call   QWORD PTR [rip+0x67e6]        # 0x14000b250
   140004a6a:	mov    rcx,QWORD PTR [r13+0x0]
   140004a6e:	xor    r13d,r13d
   140004a71:	test   rcx,rcx
   140004a74:	je     0x140004a84
   140004a76:	call   QWORD PTR [rip+0x681c]        # 0x14000b298
   140004a7c:	test   eax,eax
   140004a7e:	jne    0x140004b6a
   140004a84:	mov    ecx,0x25e
   140004a89:	jmp    0x140004c08
   140004a8e:	test   rax,rax
   140004a91:	je     0x140004ac5
   140004a93:	cmp    DWORD PTR [rax],0x9
   140004a96:	jne    0x140004ac5
   140004a98:	cmp    DWORD PTR [rax+0x4],0x1
   140004a9c:	jbe    0x140004ac5
   140004a9e:	mov    rax,QWORD PTR [rax+0x8]
   140004aa2:	mov    rcx,QWORD PTR [rax+0x18]
   140004aa6:	test   rcx,rcx
   140004aa9:	je     0x140004ac5
   140004aab:	cmp    DWORD PTR [rcx+0x4],0x20000
   140004ab2:	jne    0x140004ac5
   140004ab4:	mov    rcx,QWORD PTR [rcx+0x10]
   140004ab8:	test   rcx,rcx
   140004abb:	je     0x140004ac5
   140004abd:	call   QWORD PTR [rip+0x67d5]        # 0x14000b298
   140004ac3:	jmp    0x140004ac7
   140004ac5:	xor    eax,eax
   140004ac7:	lea    ecx,[rax*2+0x28]
   140004ace:	call   0x140007128
   140004ad3:	mov    r13,QWORD PTR [rsp+0x58]
   140004ad8:	mov    QWORD PTR [r13+0x0],rax
   140004adc:	test   rax,rax
   140004adf:	je     0x140004858
   140004ae5:	mov    rdx,QWORD PTR [rsp+0x30]
   140004aea:	test   rdx,rdx
   140004aed:	je     0x140004b29
   140004aef:	cmp    DWORD PTR [rdx],0x9
   140004af2:	jne    0x140004b29
   140004af4:	cmp    DWORD PTR [rdx+0x4],0x1
   140004af8:	jbe    0x140004b29
   140004afa:	mov    rax,QWORD PTR [rdx+0x8]
   140004afe:	mov    rcx,QWORD PTR [rax+0x18]
   140004b02:	test   rcx,rcx
   140004b05:	je     0x140004b29
   140004b07:	cmp    DWORD PTR [rcx+0x4],0x20000
   140004b0e:	jne    0x140004b29
   140004b10:	mov    rcx,QWORD PTR [rcx+0x10]
   140004b14:	test   rcx,rcx
   140004b17:	je     0x140004b29
   140004b19:	call   QWORD PTR [rip+0x6779]        # 0x14000b298
   140004b1f:	mov    rdx,QWORD PTR [rsp+0x30]
   140004b24:	mov    r8d,eax
   140004b27:	jmp    0x140004b2c
   140004b29:	xor    r8d,r8d
   140004b2c:	test   rdx,rdx
   140004b2f:	je     0x140004b58
   140004b31:	cmp    DWORD PTR [rdx],0x9
   140004b34:	jne    0x140004b58
   140004b36:	cmp    DWORD PTR [rdx+0x4],0x1
   140004b3a:	jbe    0x140004b58
   140004b3c:	mov    rax,QWORD PTR [rdx+0x8]
   140004b40:	mov    rdx,QWORD PTR [rax+0x18]
   140004b44:	test   rdx,rdx
   140004b47:	je     0x140004b58
   140004b49:	cmp    DWORD PTR [rdx+0x4],0x20000
   140004b50:	jne    0x140004b58
   140004b52:	mov    rdx,QWORD PTR [rdx+0x10]
   140004b56:	jmp    0x140004b5a
   140004b58:	xor    edx,edx
   140004b5a:	mov    rcx,QWORD PTR [r13+0x0]
   140004b5e:	add    r8d,0x14
   140004b62:	call   0x140006448
   140004b67:	xor    r13d,r13d
   140004b6a:	cmp    DWORD PTR [rbp+0x26c],r13d
   140004b71:	jne    0x140004c6a
   140004b77:	cmp    DWORD PTR [rbp+0x1f4],r13d
   140004b7e:	jne    0x140004b8a
   140004b80:	cmp    r14d,0x1
   140004b84:	je     0x1400044fa
   140004b8a:	cmp    DWORD PTR [rbp+0x104],r13d
   140004b91:	je     0x140004cbc
   140004b97:	mov    rcx,QWORD PTR [r15]
   140004b9a:	lea    rdx,[rip+0x6b57]        # 0x14000b6f8
   140004ba1:	xor    r9d,r9d
   140004ba4:	lea    r8d,[r9+0x1]
   140004ba8:	call   0x1400065e0
   140004bad:	test   eax,eax
   140004baf:	jne    0x140004cb3
   140004bb5:	mov    rax,QWORD PTR [rsp+0x40]
   140004bba:	mov    DWORD PTR [rax],0x1
   140004bc0:	jmp    0x140004cf3
   140004bc5:	xor    r13d,r13d
   140004bc8:	cmp    DWORD PTR [rbp+0x14],0x1
   140004bcc:	jne    0x140004be4
   140004bce:	cmp    DWORD PTR [rbp+0x26c],r13d
   140004bd5:	jne    0x140004be4
   140004bd7:	cmp    DWORD PTR [rbp+0x1f4],r13d
   140004bde:	je     0x1400044fa
   140004be4:	cmp    DWORD PTR [rbp+0x1f4],0x1
   140004beb:	je     0x140004c03
   140004bed:	cmp    DWORD PTR [rbp+0x26c],0x1
   140004bf4:	jne    0x140004b6a
   140004bfa:	cmp    DWORD PTR [rbp+0x44c],r13d
   140004c01:	jne    0x140004c77
   140004c03:	mov    ecx,0x21c
   140004c08:	call   0x1400059b8
   140004c0d:	mov    ecx,edi
   140004c0f:	mov    rbx,rax
   140004c12:	call   0x14000a4f8
   140004c17:	mov    rdx,rbx
   140004c1a:	mov    rcx,rax
   140004c1d:	call   0x1400066c4
   140004c22:	mov    rax,QWORD PTR [rsp+0x30]
   140004c27:	test   rax,rax
   140004c2a:	je     0x140004c3b
   140004c2c:	cmp    DWORD PTR [rax],0x9
   140004c2f:	jne    0x140004c3b
   140004c31:	lea    rcx,[rsp+0x30]
   140004c36:	call   0x1400075cc
   140004c3b:	mov    eax,0x1
   140004c40:	mov    rcx,QWORD PTR [rbp+0x520]
   140004c47:	xor    rcx,rsp
   140004c4a:	call   0x140009fe0
   140004c4f:	mov    rbx,QWORD PTR [rsp+0x670]
   140004c57:	add    rsp,0x630
   140004c5e:	pop    r15
   140004c60:	pop    r14
   140004c62:	pop    r13
   140004c64:	pop    r12
   140004c66:	pop    rdi
   140004c67:	pop    rsi
   140004c68:	pop    rbp
   140004c69:	ret    
   140004c6a:	cmp    DWORD PTR [rbp+0x26c],0x1
   140004c71:	jne    0x140004b8a
   140004c77:	cmp    DWORD PTR [rbp+0x44c],0x1
   140004c7e:	jne    0x140004b8a
   140004c84:	test   r14d,r14d
   140004c87:	jne    0x1400044fa
   140004c8d:	cmp    DWORD PTR [rbp+0x17c],r13d
   140004c94:	jne    0x1400044fa
   140004c9a:	cmp    DWORD PTR [rbp+0x35c],0x1
   140004ca1:	je     0x1400044fa
   140004ca7:	cmp    DWORD PTR [rbp+0x3d4],0x1
   140004cae:	jmp    0x140004b84
   140004cb3:	cmp    DWORD PTR [rbp+0x104],r13d
   140004cba:	jne    0x140004cf3
   140004cbc:	cmp    DWORD PTR [rbp+0x14],r13d
   140004cc0:	jne    0x140004ccb
   140004cc2:	cmp    DWORD PTR [rbp+0x8c],r13d
   140004cc9:	je     0x140004d44
   140004ccb:	mov    rax,QWORD PTR [rsp+0x40]
   140004cd0:	mov    DWORD PTR [rax],0x1
   140004cd6:	mov    rcx,QWORD PTR [r15]
   140004cd9:	call   0x1400072d0
   140004cde:	mov    rcx,QWORD PTR [r15]
   140004ce1:	lea    rdx,[rip+0x69a4]        # 0x14000b68c
   140004ce8:	movsxd r8,eax
   140004ceb:	shr    r8,1
   140004cee:	call   0x140006448
   140004cf3:	cmp    DWORD PTR [rbp+0x14],r13d
   140004cf7:	je     0x140004d1a
   140004cf9:	mov    rcx,QWORD PTR [rsp+0x68]
   140004cfe:	mov    rcx,QWORD PTR [rcx]
   140004d01:	test   rcx,rcx
   140004d04:	je     0x140004d10
   140004d06:	call   QWORD PTR [rip+0x658c]        # 0x14000b298
   140004d0c:	test   eax,eax
   140004d0e:	jne    0x140004d1a
   140004d10:	mov    ecx,0x212
   140004d15:	jmp    0x140004c08
   140004d1a:	cmp    DWORD PTR [rbp+0x8c],r13d
   140004d21:	je     0x140004d44
   140004d23:	mov    rax,QWORD PTR [rsp+0x48]
   140004d28:	mov    rcx,QWORD PTR [rax]
   140004d2b:	test   rcx,rcx
   140004d2e:	je     0x140004d3a
   140004d30:	call   QWORD PTR [rip+0x6562]        # 0x14000b298
   140004d36:	test   eax,eax
   140004d38:	jne    0x140004d44
   140004d3a:	mov    ecx,0x213
   140004d3f:	jmp    0x140004c08
   140004d44:	test   r12,r12
   140004d47:	je     0x140004d56
   140004d49:	mov    rcx,r12
   140004d4c:	call   QWORD PTR [rip+0x6546]        # 0x14000b298
   140004d52:	test   eax,eax
   140004d54:	jne    0x140004d69
   140004d56:	cmp    DWORD PTR [rbp+0x26c],r13d
   140004d5d:	je     0x140004d69
   140004d5f:	mov    ecx,0x214
   140004d64:	jmp    0x140004c08
   140004d69:	mov    r15,QWORD PTR [rsp+0x38]
   140004d6e:	mov    rcx,QWORD PTR [r15]
   140004d71:	test   rcx,rcx
   140004d74:	je     0x140004d80
   140004d76:	call   QWORD PTR [rip+0x651c]        # 0x14000b298
   140004d7c:	test   eax,eax
   140004d7e:	jne    0x140004d8d
   140004d80:	cmp    DWORD PTR [rbp+0x1f4],r13d
   140004d87:	jne    0x1400046aa
   140004d8d:	test   r12,r12
   140004d90:	je     0x140004d9f
   140004d92:	mov    rcx,r12
   140004d95:	call   QWORD PTR [rip+0x64fd]        # 0x14000b298
   140004d9b:	test   eax,eax
   140004d9d:	jne    0x140004e1d
   140004d9f:	test   rbx,rbx
   140004da2:	je     0x140004db1
   140004da4:	mov    rcx,rbx
   140004da7:	call   QWORD PTR [rip+0x64eb]        # 0x14000b298
   140004dad:	test   eax,eax
   140004daf:	jne    0x140004dd7
   140004db1:	test   rsi,rsi
   140004db4:	je     0x140004dc3
   140004db6:	mov    rcx,rsi
   140004db9:	call   QWORD PTR [rip+0x64d9]        # 0x14000b298
   140004dbf:	test   eax,eax
   140004dc1:	jne    0x140004dd7
   140004dc3:	mov    rax,QWORD PTR [rbp+0x5d8]
   140004dca:	mov    r12d,0x1
   140004dd0:	cmp    DWORD PTR [rax],r12d
   140004dd3:	jne    0x140004e23
   140004dd5:	jmp    0x140004ddd
   140004dd7:	mov    r12d,0x1
   140004ddd:	mov    ecx,0x1f5
   140004de2:	call   0x1400059b8
   140004de7:	mov    ecx,edi
   140004de9:	mov    rbx,rax
   140004dec:	call   0x14000a4f8
   140004df1:	mov    rcx,rax
   140004df4:	mov    rdx,rbx
   140004df7:	call   0x1400066c4
   140004dfc:	mov    rax,QWORD PTR [rsp+0x30]
   140004e01:	test   rax,rax
   140004e04:	je     0x140004e15
   140004e06:	cmp    DWORD PTR [rax],0x9
   140004e09:	jne    0x140004e15
   140004e0b:	lea    rcx,[rsp+0x30]
   140004e10:	call   0x1400075cc
   140004e15:	mov    eax,r12d
   140004e18:	jmp    0x140004c40
   140004e1d:	mov    r12d,0x1
   140004e23:	test   rsi,rsi
   140004e26:	je     0x140004e3a
   140004e28:	mov    rcx,rsi
   140004e2b:	call   QWORD PTR [rip+0x6467]        # 0x14000b298
   140004e31:	test   eax,eax
   140004e33:	je     0x140004e3a
   140004e35:	cmp    r14d,edi
   140004e38:	je     0x140004ddd
   140004e3a:	mov    rcx,QWORD PTR [r15]
   140004e3d:	test   rcx,rcx
   140004e40:	je     0x140004e51
   140004e42:	call   QWORD PTR [rip+0x6450]        # 0x14000b298
   140004e48:	test   eax,eax
   140004e4a:	je     0x140004e51
   140004e4c:	cmp    r14d,edi
   140004e4f:	je     0x140004ddd
   140004e51:	test   rbx,rbx
   140004e54:	je     0x140004ef2
   140004e5a:	mov    rcx,rbx
   140004e5d:	call   QWORD PTR [rip+0x6435]        # 0x14000b298
   140004e63:	test   eax,eax
   140004e65:	je     0x140004ef2
   140004e6b:	cmp    r14d,edi
   140004e6e:	jb     0x140004ddd
   140004e74:	mov    ecx,r13d
   140004e77:	mov    eax,r13d
   140004e7a:	mov    r14d,0xfe
   140004e80:	cmp    WORD PTR [rbx],0x2c
   140004e84:	je     0x140004ee4
   140004e86:	cmp    WORD PTR [rbx],r13w
   140004e8a:	je     0x140004ee4
   140004e8c:	add    ecx,r12d
   140004e8f:	add    rbx,rdi
   140004e92:	add    eax,r12d
   140004e95:	cmp    eax,r14d
   140004e98:	jl     0x140004e80
   140004e9a:	cmp    eax,r14d
   140004e9d:	jge    0x140004ee8
   140004e9f:	cmp    WORD PTR [rbx],r13w
   140004ea3:	je     0x140004eab
   140004ea5:	add    rbx,rdi
   140004ea8:	add    eax,r12d
   140004eab:	cmp    eax,r14d
   140004eae:	jge    0x140004ee8
   140004eb0:	cmp    WORD PTR [rbx],r13w
   140004eb4:	je     0x140004ee8
   140004eb6:	inc    eax
   140004eb8:	cmp    eax,r14d
   140004ebb:	jge    0x140004ee8
   140004ebd:	cmp    WORD PTR [rbx+rdi*1],r13w
   140004ec2:	jne    0x140004ef8
   140004ec4:	mov    rcx,QWORD PTR [rsp+0x58]
   140004ec9:	mov    rcx,QWORD PTR [rcx]
   140004ecc:	test   rcx,rcx
   140004ecf:	je     0x140004ddd
   140004ed5:	call   QWORD PTR [rip+0x63bd]        # 0x14000b298
   140004edb:	test   eax,eax
   140004edd:	jne    0x140004ef8
   140004edf:	jmp    0x140004ddd
   140004ee4:	test   ecx,ecx
   140004ee6:	jne    0x140004e9a
   140004ee8:	mov    ecx,0x21d
   140004eed:	jmp    0x140004de2
   140004ef2:	mov    r14d,0xfe
   140004ef8:	test   rsi,rsi
   140004efb:	je     0x140004f4c
   140004efd:	mov    rcx,rsi
   140004f00:	call   QWORD PTR [rip+0x6392]        # 0x14000b298
   140004f06:	test   eax,eax
   140004f08:	je     0x140004f4c
   140004f0a:	mov    ecx,DWORD PTR [rsp+0x50]
   140004f0e:	mov    eax,r13d
   140004f11:	cmp    WORD PTR [rsi],0x2c
   140004f15:	je     0x140004f2b
   140004f17:	cmp    WORD PTR [rsi],r13w
   140004f1b:	je     0x140004f2b
   140004f1d:	add    rsi,rdi
   140004f20:	add    eax,r12d
   140004f23:	mov    ecx,r13d
   140004f26:	cmp    eax,r14d
   140004f29:	jl     0x140004f11
   140004f2b:	cmp    eax,r14d
   140004f2e:	jge    0x140004ee8
   140004f30:	cmp    WORD PTR [rsi],r13w
   140004f34:	je     0x140004f3c
   140004f36:	add    rsi,rdi
   140004f39:	add    eax,r12d
   140004f3c:	cmp    eax,r14d
   140004f3f:	jge    0x140004ee8
   140004f41:	cmp    WORD PTR [rsi],r13w
   140004f45:	je     0x140004ee8
   140004f47:	cmp    ecx,r12d
   140004f4a:	je     0x140004ee8
   140004f4c:	cmp    DWORD PTR [rbp+0x8c],r13d
   140004f53:	je     0x140004f65
   140004f55:	cmp    DWORD PTR [rbp+0x14],r13d
   140004f59:	jne    0x140004f78
   140004f5b:	mov    ecx,0x217
   140004f60:	jmp    0x140004de2
   140004f65:	cmp    DWORD PTR [rbp+0x104],r13d
   140004f6c:	je     0x140004f78
   140004f6e:	mov    ecx,0x218
   140004f73:	jmp    0x140004de2
   140004f78:	cmp    DWORD PTR [rbp+0x35c],r12d
   140004f7f:	jne    0x140004f8e
   140004f81:	cmp    DWORD PTR [rbp+0x26c],r13d
   140004f88:	je     0x140004ddd
   140004f8e:	cmp    DWORD PTR [rbp+0x3d4],r12d
   140004f95:	jne    0x140004fa4
   140004f97:	cmp    DWORD PTR [rbp+0x26c],r13d
   140004f9e:	je     0x140004ddd
   140004fa4:	mov    rax,QWORD PTR [rsp+0x30]
   140004fa9:	test   rax,rax
   140004fac:	je     0x140004fbd
   140004fae:	cmp    DWORD PTR [rax],0x9
   140004fb1:	jne    0x140004fbd
   140004fb3:	lea    rcx,[rsp+0x30]
   140004fb8:	call   0x1400075cc
   140004fbd:	xor    eax,eax
   140004fbf:	jmp    0x140004c40
   140004fc4:	int3   
   140004fc5:	int3   
   140004fc6:	int3   
   140004fc7:	int3   
   140004fc8:	int3   
   140004fc9:	int3   
   140004fca:	int3   
   140004fcb:	int3   
   140004fcc:	sub    rsp,0x28
   140004fd0:	cmp    ecx,0x1
   140004fd3:	jne    0x140004fdd
   140004fd5:	mov    rcx,rdx
   140004fd8:	call   0x14000840c
   140004fdd:	add    rsp,0x28
   140004fe1:	ret    
   140004fe2:	int3   
   140004fe3:	int3   
   140004fe4:	int3   
   140004fe5:	int3   
   140004fe6:	int3   
   140004fe7:	int3   
   140004fe8:	rex push rbx
   140004fea:	sub    rsp,0x20
   140004fee:	cmp    DWORD PTR [rip+0x970f],0x1        # 0x14000e704
   140004ff5:	jne    0x140005020
   140004ff7:	mov    rcx,QWORD PTR [rip+0x96fa]        # 0x14000e6f8
   140004ffe:	test   rcx,rcx
   140005001:	je     0x14000500f
   140005003:	cmp    DWORD PTR [rcx],0x9
   140005006:	jne    0x14000500f
   140005008:	mov    eax,0x1
   14000500d:	jmp    0x140005054
   14000500f:	call   QWORD PTR [rip+0x6083]        # 0x14000b098
   140005015:	test   eax,eax
   140005017:	jne    0x140005052
   140005019:	mov    ecx,0x42b
   14000501e:	jmp    0x14000504c
   140005020:	xor    ebx,ebx
   140005022:	cmp    QWORD PTR [rip+0x96cf],rbx        # 0x14000e6f8
   140005029:	jne    0x14000500f
   14000502b:	lea    ecx,[rbx+0x18]
   14000502e:	call   0x140007128
   140005033:	test   rax,rax
   140005036:	jne    0x14000505a
   140005038:	mov    QWORD PTR [rip+0x96b9],rbx        # 0x14000e6f8
   14000503f:	call   QWORD PTR [rip+0x6053]        # 0x14000b098
   140005045:	test   eax,eax
   140005047:	jne    0x140005052
   140005049:	lea    ecx,[rax+0x8]
   14000504c:	call   QWORD PTR [rip+0x604e]        # 0x14000b0a0
   140005052:	xor    eax,eax
   140005054:	add    rsp,0x20
   140005058:	pop    rbx
   140005059:	ret    
   14000505a:	mov    QWORD PTR [rax],0x9
   140005061:	mov    QWORD PTR [rax+0x8],rbx
   140005065:	mov    QWORD PTR [rax+0x10],rbx
   140005069:	mov    QWORD PTR [rip+0x9688],rax        # 0x14000e6f8
   140005070:	cmp    DWORD PTR [rax],0x9
   140005073:	jne    0x14000503f
   140005075:	lea    rdx,[rip+0x66c0]        # 0x14000b73c
   14000507c:	mov    rcx,rax
   14000507f:	call   0x140007648
   140005084:	test   eax,eax
   140005086:	jne    0x14000503f
   140005088:	call   0x140007884
   14000508d:	cmp    eax,0x1
   140005090:	jne    0x14000503f
   140005092:	call   0x140007884
   140005097:	cmp    eax,0x2
   14000509a:	jne    0x14000503f
   14000509c:	call   0x140007884
   1400050a1:	cmp    eax,0x3
   1400050a4:	jne    0x14000503f
   1400050a6:	xor    ecx,ecx
   1400050a8:	mov    DWORD PTR [rip+0x9652],0x1        # 0x14000e704
   1400050b2:	call   QWORD PTR [rip+0x60b0]        # 0x14000b168
   1400050b8:	test   ax,ax
   1400050bb:	setne  bl
   1400050be:	mov    eax,ebx
   1400050c0:	jmp    0x140005054
   1400050c2:	int3   
   1400050c3:	int3   
   1400050c4:	int3   
   1400050c5:	int3   
   1400050c6:	int3   
   1400050c7:	int3   
   1400050c8:	rex push rbx
   1400050ca:	sub    rsp,0x20
   1400050ce:	cmp    DWORD PTR [rip+0x962f],0x0        # 0x14000e704
   1400050d5:	mov    ebx,ecx
   1400050d7:	je     0x140005123
   1400050d9:	mov    edx,0x3
   1400050de:	call   0x140007994
   1400050e3:	cmp    eax,ebx
   1400050e5:	jbe    0x140005123
   1400050e7:	mov    r8d,ebx
   1400050ea:	call   0x140007b18
   1400050ef:	test   eax,eax
   1400050f1:	je     0x140005123
   1400050f3:	mov    r8d,ebx
   1400050f6:	call   0x1400079dc
   1400050fb:	mov    rbx,rax
   1400050fe:	test   rax,rax
   140005101:	je     0x140005123
   140005103:	mov    r8d,0x7
   140005109:	lea    rdx,[rip+0x6624]        # 0x14000b734
   140005110:	mov    rcx,rax
   140005113:	call   QWORD PTR [rip+0x6277]        # 0x14000b390
   140005119:	test   eax,eax
   14000511b:	jne    0x140005123
   14000511d:	mov    rax,QWORD PTR [rbx+0x10]
   140005121:	jmp    0x140005125
   140005123:	xor    eax,eax
   140005125:	add    rsp,0x20
   140005129:	pop    rbx
   14000512a:	ret    
   14000512b:	int3   
   14000512c:	int3   
   14000512d:	int3   
   14000512e:	int3   
   14000512f:	int3   
   140005130:	int3   
   140005131:	int3   
   140005132:	int3   
   140005133:	int3   
   140005134:	mov    QWORD PTR [rsp+0x8],rbx
   140005139:	mov    QWORD PTR [rsp+0x18],rbp
   14000513e:	push   rsi
   14000513f:	push   rdi
   140005140:	push   r14
   140005142:	sub    rsp,0x20
   140005146:	mov    r14d,r9d
   140005149:	mov    edi,r8d
   14000514c:	mov    rsi,rdx
   14000514f:	mov    ebp,ecx
   140005151:	test   rdx,rdx
   140005154:	jne    0x140005162
   140005156:	test   r8d,r8d
   140005159:	jne    0x140005162
   14000515b:	xor    eax,eax
   14000515d:	jmp    0x14000533c
   140005162:	call   0x140004fe8
   140005167:	test   eax,eax
   140005169:	je     0x14000515b
   14000516b:	mov    edx,0x3
   140005170:	call   0x140007994
   140005175:	mov    r10d,eax
   140005178:	cmp    eax,ebp
   14000517a:	ja     0x1400051bc
   14000517c:	mov    rcx,QWORD PTR [rip+0x9575]        # 0x14000e6f8
   140005183:	xor    r8d,r8d
   140005186:	call   0x140007328
   14000518b:	test   rax,rax
   14000518e:	je     0x14000515b
   140005190:	cmp    DWORD PTR [rax+0x4],0x10000
   140005197:	je     0x1400051a2
   140005199:	cmp    DWORD PTR [rax+0x4],0x80000
   1400051a0:	jne    0x14000515b
   1400051a2:	mov    rcx,QWORD PTR [rax+0x10]
   1400051a6:	test   rcx,rcx
   1400051a9:	je     0x14000515b
   1400051ab:	mov    edx,ebp
   1400051ad:	sub    edx,r10d
   1400051b0:	inc    edx
   1400051b2:	call   0x140007938
   1400051b7:	cmp    eax,0xffffffff
   1400051ba:	je     0x14000515b
   1400051bc:	mov    r8d,ebp
   1400051bf:	call   0x140007b18
   1400051c4:	test   eax,eax
   1400051c6:	je     0x14000526b
   1400051cc:	mov    r8d,ebp
   1400051cf:	call   0x1400079dc
   1400051d4:	mov    rbx,rax
   1400051d7:	test   rax,rax
   1400051da:	je     0x14000515b
   1400051e0:	mov    r8d,0x7
   1400051e6:	lea    rdx,[rip+0x6547]        # 0x14000b734
   1400051ed:	mov    rcx,rbx
   1400051f0:	call   QWORD PTR [rip+0x619a]        # 0x14000b390
   1400051f6:	test   eax,eax
   1400051f8:	jne    0x14000515b
   1400051fe:	test   rsi,rsi
   140005201:	je     0x14000520f
   140005203:	mov    rcx,rsi
   140005206:	call   QWORD PTR [rip+0x608c]        # 0x14000b298
   14000520c:	lea    edi,[rax+0x1]
   14000520f:	mov    ecx,DWORD PTR [rbx+0x8]
   140005212:	cmp    edi,ecx
   140005214:	ja     0x140005225
   140005216:	cmp    edi,0x100
   14000521c:	jbe    0x140005245
   14000521e:	lea    eax,[rdi+rdi*1]
   140005221:	cmp    eax,ecx
   140005223:	jae    0x140005245
   140005225:	test   ecx,ecx
   140005227:	jne    0x140005312
   14000522d:	lea    ecx,[rdi+rdi*1]
   140005230:	call   0x140007128
   140005235:	mov    QWORD PTR [rbx+0x10],rax
   140005239:	test   rax,rax
   14000523c:	je     0x14000515b
   140005242:	mov    DWORD PTR [rbx+0x8],edi
   140005245:	mov    rcx,QWORD PTR [rbx+0x10]
   140005249:	test   rcx,rcx
   14000524c:	je     0x14000515b
   140005252:	test   rsi,rsi
   140005255:	je     0x140005325
   14000525b:	mov    r8d,edi
   14000525e:	mov    rdx,rsi
   140005261:	call   0x140006448
   140005266:	jmp    0x140005338
   14000526b:	mov    ecx,0x18
   140005270:	call   0x140007128
   140005275:	mov    QWORD PTR [rsp+0x48],rax
   14000527a:	mov    rbx,rax
   14000527d:	test   rax,rax
   140005280:	je     0x14000515b
   140005286:	and    DWORD PTR [rax+0x8],0x0
   14000528a:	lea    rdx,[rip+0x64a3]        # 0x14000b734
   140005291:	and    QWORD PTR [rax+0x10],0x0
   140005296:	mov    r8d,0x7
   14000529c:	mov    rcx,rax
   14000529f:	call   0x1400063c0
   1400052a4:	mov    rcx,QWORD PTR [rip+0x944d]        # 0x14000e6f8
   1400052ab:	xor    r8d,r8d
   1400052ae:	lea    edx,[r8+0x3]
   1400052b2:	call   0x140007328
   1400052b7:	test   rax,rax
   1400052ba:	je     0x1400052f9
   1400052bc:	cmp    DWORD PTR [rax+0x4],0x80000
   1400052c3:	jne    0x1400052f9
   1400052c5:	mov    rcx,QWORD PTR [rax+0x10]
   1400052c9:	xor    r8d,r8d
   1400052cc:	mov    edx,ebp
   1400052ce:	call   0x140007328
   1400052d3:	test   rax,rax
   1400052d6:	je     0x1400052f9
   1400052d8:	test   DWORD PTR [rax+0x4],0xfffeffff
   1400052df:	jne    0x1400052f9
   1400052e1:	cmp    DWORD PTR [rax+0x4],0x0
   1400052e5:	jne    0x1400052ee
   1400052e7:	mov    DWORD PTR [rax+0x4],0x10000
   1400052ee:	mov    QWORD PTR [rax+0x10],rbx
   1400052f2:	mov    eax,0x1
   1400052f7:	jmp    0x1400052fb
   1400052f9:	xor    eax,eax
   1400052fb:	test   eax,eax
   1400052fd:	jne    0x1400051e0
   140005303:	lea    rcx,[rsp+0x48]
   140005308:	call   0x14000704c
   14000530d:	jmp    0x14000515b
   140005312:	lea    edx,[rdi+rdi*1]
   140005315:	lea    rcx,[rbx+0x10]
   140005319:	call   0x1400071c8
   14000531e:	test   eax,eax
   140005320:	jmp    0x14000523c
   140005325:	cmp    r14d,0x1
   140005329:	jne    0x140005338
   14000532b:	mov    r8d,edi
   14000532e:	xor    edx,edx
   140005330:	add    r8,r8
   140005333:	call   0x14000a892
   140005338:	mov    rax,QWORD PTR [rbx+0x10]
   14000533c:	mov    rbx,QWORD PTR [rsp+0x40]
   140005341:	mov    rbp,QWORD PTR [rsp+0x50]
   140005346:	add    rsp,0x20
   14000534a:	pop    r14
   14000534c:	pop    rdi
   14000534d:	pop    rsi
   14000534e:	ret    
   14000534f:	int3   
   140005350:	int3   
   140005351:	int3   
   140005352:	int3   
   140005353:	int3   
   140005354:	int3   
   140005355:	int3   
   140005356:	int3   
   140005357:	int3   
   140005358:	mov    rcx,QWORD PTR [rip+0x9399]        # 0x14000e6f8
   14000535f:	xor    eax,eax
   140005361:	test   rcx,rcx
   140005364:	je     0x140005387
   140005366:	cmp    DWORD PTR [rcx],0x9
   140005369:	jne    0x140005387
   14000536b:	cmp    DWORD PTR [rcx+0x4],eax
   14000536e:	jbe    0x14000538e
   140005370:	mov    rdx,QWORD PTR [rcx+0x8]
   140005374:	test   rdx,rdx
   140005377:	je     0x14000538e
   140005379:	cmp    DWORD PTR [rdx+0x4],0x20000
   140005380:	jne    0x14000538e
   140005382:	mov    rax,QWORD PTR [rdx+0x10]
   140005386:	ret    
   140005387:	lea    rax,[rip+0x63ae]        # 0x14000b73c
   14000538e:	ret    
   14000538f:	int3   
   140005390:	int3   
   140005391:	int3   
   140005392:	int3   
   140005393:	int3   
   140005394:	int3   
   140005395:	int3   
   140005396:	int3   
   140005397:	int3   
   140005398:	mov    QWORD PTR [rsp+0x8],rbx
   14000539d:	push   rdi
   14000539e:	sub    rsp,0x20
   1400053a2:	mov    rbx,rcx
   1400053a5:	call   QWORD PTR [rip+0x5ced]        # 0x14000b098
   1400053ab:	mov    edi,eax
   1400053ad:	test   rbx,rbx
   1400053b0:	jne    0x1400053c9
   1400053b2:	call   QWORD PTR [rip+0x5ce0]        # 0x14000b098
   1400053b8:	test   eax,eax
   1400053ba:	jne    0x1400053c5
   1400053bc:	lea    ecx,[rbx+0x57]
   1400053bf:	call   QWORD PTR [rip+0x5cdb]        # 0x14000b0a0
   1400053c5:	xor    eax,eax
   1400053c7:	jmp    0x140005403
   1400053c9:	call   0x140004fe8
   1400053ce:	test   eax,eax
   1400053d0:	je     0x1400053c5
   1400053d2:	mov    rcx,QWORD PTR [rip+0x931f]        # 0x14000e6f8
   1400053d9:	mov    r8,rbx
   1400053dc:	xor    edx,edx
   1400053de:	call   0x140007a44
   1400053e3:	test   eax,eax
   1400053e5:	jne    0x1400053f6
   1400053e7:	call   QWORD PTR [rip+0x5cab]        # 0x14000b098
   1400053ed:	test   eax,eax
   1400053ef:	jne    0x1400053c5
   1400053f1:	lea    ecx,[rax+0x8]
   1400053f4:	jmp    0x1400053bf
   1400053f6:	mov    ecx,edi
   1400053f8:	call   QWORD PTR [rip+0x5ca2]        # 0x14000b0a0
   1400053fe:	mov    eax,0x1
   140005403:	mov    rbx,QWORD PTR [rsp+0x30]
   140005408:	add    rsp,0x20
   14000540c:	pop    rdi
   14000540d:	ret    
   14000540e:	int3   
   14000540f:	int3   
   140005410:	int3   
   140005411:	int3   
   140005412:	int3   
   140005413:	int3   
   140005414:	mov    QWORD PTR [rsp+0x10],rdx
   140005419:	mov    QWORD PTR [rsp+0x18],r8
   14000541e:	mov    QWORD PTR [rsp+0x20],r9
   140005423:	push   rbx
   140005424:	push   rbp
   140005425:	push   rsi
   140005426:	push   rdi
   140005427:	push   r12
   140005429:	push   r14
   14000542b:	sub    rsp,0x38
   14000542f:	xor    r14d,r14d
   140005432:	mov    ebp,r14d
   140005435:	test   rdx,rdx
   140005438:	jne    0x140005450
   14000543a:	call   QWORD PTR [rip+0x5c58]        # 0x14000b098
   140005440:	test   eax,eax
   140005442:	jne    0x140005538
   140005448:	lea    ecx,[rax+0x57]
   14000544b:	jmp    0x140005532
   140005450:	test   ecx,ecx
   140005452:	jne    0x140005466
   140005454:	mov    rcx,rdx
   140005457:	call   0x140005398
   14000545c:	mov    eax,0x1
   140005461:	jmp    0x14000553a
   140005466:	lea    r12,[rsp+0x80]
   14000546e:	test   r12,r12
   140005471:	je     0x140005523
   140005477:	xor    edx,edx
   140005479:	add    ebp,0x100
   14000547f:	mov    r9d,0x1
   140005485:	mov    r8d,ebp
   140005488:	lea    ecx,[rdx+0x5]
   14000548b:	call   0x140005134
   140005490:	mov    rdi,rax
   140005493:	test   rax,rax
   140005496:	je     0x140005514
   140005498:	lea    rcx,[rbp-0x1]
   14000549c:	mov    ebx,r14d
   14000549f:	cmp    rcx,0x7ffffffe
   1400054a6:	mov    edx,0x80070057
   1400054ab:	cmova  ebx,edx
   1400054ae:	test   ebx,ebx
   1400054b0:	js     0x1400054ed
   1400054b2:	mov    r8,QWORD PTR [rsp+0x78]
   1400054b7:	lea    rsi,[rbp-0x1]
   1400054bb:	mov    rdx,rsi
   1400054be:	mov    r9,r12
   1400054c1:	mov    rcx,rax
   1400054c4:	mov    ebx,r14d
   1400054c7:	call   QWORD PTR [rip+0x5f33]        # 0x14000b400
   1400054cd:	test   eax,eax
   1400054cf:	js     0x1400054e1
   1400054d1:	cdqe   
   1400054d3:	cmp    rax,rsi
   1400054d6:	ja     0x1400054e1
   1400054d8:	jne    0x1400054f5
   1400054da:	mov    WORD PTR [rdi+rsi*2],r14w
   1400054df:	jmp    0x1400054f5
   1400054e1:	mov    WORD PTR [rdi+rsi*2],r14w
   1400054e6:	mov    ebx,0x8007007a
   1400054eb:	jmp    0x1400054f5
   1400054ed:	test   ebp,ebp
   1400054ef:	je     0x1400054f5
   1400054f1:	mov    WORD PTR [rax],r14w
   1400054f5:	cmp    ebx,0x8007007a
   1400054fb:	je     0x140005466
   140005501:	test   ebx,ebx
   140005503:	jns    0x14000550a
   140005505:	movzx  ecx,bx
   140005508:	jmp    0x140005532
   14000550a:	mov    rcx,rdi
   14000550d:	call   0x140005398
   140005512:	jmp    0x14000553a
   140005514:	call   QWORD PTR [rip+0x5b7e]        # 0x14000b098
   14000551a:	test   eax,eax
   14000551c:	jne    0x140005538
   14000551e:	lea    ecx,[rax+0x8]
   140005521:	jmp    0x140005532
   140005523:	call   QWORD PTR [rip+0x5b6f]        # 0x14000b098
   140005529:	test   eax,eax
   14000552b:	jne    0x140005538
   14000552d:	mov    ecx,0x42b
   140005532:	call   QWORD PTR [rip+0x5b68]        # 0x14000b0a0
   140005538:	xor    eax,eax
   14000553a:	add    rsp,0x38
   14000553e:	pop    r14
   140005540:	pop    r12
   140005542:	pop    rdi
   140005543:	pop    rsi
   140005544:	pop    rbp
   140005545:	pop    rbx
   140005546:	ret    
   140005547:	int3   
   140005548:	int3   
   140005549:	int3   
   14000554a:	int3   
   14000554b:	int3   
   14000554c:	int3   
   14000554d:	int3   
   14000554e:	int3   
   14000554f:	int3   
   140005550:	rex push rbx
   140005552:	sub    rsp,0x40
   140005556:	xor    ebx,ebx
   140005558:	mov    QWORD PTR [rsp+0x50],rbx
   14000555d:	call   0x140004fe8
   140005562:	test   eax,eax
   140005564:	je     0x1400055eb
   14000556a:	call   QWORD PTR [rip+0x5b28]        # 0x14000b098
   140005570:	mov    QWORD PTR [rsp+0x30],rbx
   140005575:	xor    r9d,r9d
   140005578:	mov    r8d,eax
   14000557b:	mov    DWORD PTR [rsp+0x28],ebx
   14000557f:	lea    rax,[rsp+0x50]
   140005584:	xor    edx,edx
   140005586:	mov    ecx,0x1300
   14000558b:	mov    QWORD PTR [rsp+0x20],rax
   140005590:	call   QWORD PTR [rip+0x5bda]        # 0x14000b170
   140005596:	mov    rcx,QWORD PTR [rsp+0x50]
   14000559b:	test   eax,eax
   14000559d:	je     0x1400055ba
   14000559f:	test   rcx,rcx
   1400055a2:	je     0x1400055d8
   1400055a4:	call   0x140005398
   1400055a9:	mov    rcx,QWORD PTR [rsp+0x50]
   1400055ae:	mov    ebx,eax
   1400055b0:	call   QWORD PTR [rip+0x5b7a]        # 0x14000b130
   1400055b6:	mov    eax,ebx
   1400055b8:	jmp    0x1400055ed
   1400055ba:	test   rcx,rcx
   1400055bd:	je     0x1400055d8
   1400055bf:	call   QWORD PTR [rip+0x5b6b]        # 0x14000b130
   1400055c5:	call   QWORD PTR [rip+0x5acd]        # 0x14000b098
   1400055cb:	test   eax,eax
   1400055cd:	jne    0x1400055d8
   1400055cf:	lea    ecx,[rax+0x8]
   1400055d2:	call   QWORD PTR [rip+0x5ac8]        # 0x14000b0a0
   1400055d8:	call   QWORD PTR [rip+0x5aba]        # 0x14000b098
   1400055de:	test   eax,eax
   1400055e0:	jne    0x1400055eb
   1400055e2:	lea    ecx,[rax+0x8]
   1400055e5:	call   QWORD PTR [rip+0x5ab5]        # 0x14000b0a0
   1400055eb:	xor    eax,eax
   1400055ed:	add    rsp,0x40
   1400055f1:	pop    rbx
   1400055f2:	ret    
   1400055f3:	int3   
   1400055f4:	int3   
   1400055f5:	int3   
   1400055f6:	int3   
   1400055f7:	int3   
   1400055f8:	int3   
   1400055f9:	int3   
   1400055fa:	int3   
   1400055fb:	int3   
   1400055fc:	mov    QWORD PTR [rsp+0x10],rbx
   140005601:	mov    QWORD PTR [rsp+0x18],rsi
   140005606:	push   rdi
   140005607:	sub    rsp,0x30
   14000560b:	and    DWORD PTR [rsp+0x40],0x0
   140005610:	mov    ebx,0x100
   140005615:	mov    r8d,ebx
   140005618:	mov    r9d,0x1
   14000561e:	xor    edx,edx
   140005620:	xor    ecx,ecx
   140005622:	call   0x140005134
   140005627:	mov    rdi,rax
   14000562a:	test   rax,rax
   14000562d:	jne    0x140005636
   14000562f:	mov    eax,0x8
   140005634:	jmp    0x1400056a3
   140005636:	mov    r9d,0x1
   14000563c:	mov    r8d,ebx
   14000563f:	mov    ecx,r9d
   140005642:	xor    edx,edx
   140005644:	call   0x140005134
   140005649:	mov    rsi,rax
   14000564c:	test   rax,rax
   14000564f:	je     0x14000562f
   140005651:	mov    rcx,rax
   140005654:	call   0x1400072d0
   140005659:	movsxd rbx,eax
   14000565c:	mov    rcx,rdi
   14000565f:	shr    rbx,1
   140005662:	dec    ebx
   140005664:	call   0x1400072d0
   140005669:	movsxd r8,eax
   14000566c:	lea    rcx,[rsp+0x40]
   140005671:	shr    r8,1
   140005674:	mov    r9,rsi
   140005677:	dec    r8d
   14000567a:	mov    DWORD PTR [rsp+0x20],ebx
   14000567e:	mov    rdx,rdi
   140005681:	call   QWORD PTR [rip+0xa979]        # 0x140010000
   140005687:	test   eax,eax
   140005689:	jne    0x1400056a3
   14000568b:	mov    rcx,rdi
   14000568e:	call   0x140005398
   140005693:	mov    ecx,DWORD PTR [rsp+0x40]
   140005697:	test   eax,eax
   140005699:	mov    edx,0x8
   14000569e:	cmove  ecx,edx
   1400056a1:	mov    eax,ecx
   1400056a3:	mov    rbx,QWORD PTR [rsp+0x48]
   1400056a8:	mov    rsi,QWORD PTR [rsp+0x50]
   1400056ad:	add    rsp,0x30
   1400056b1:	pop    rdi
   1400056b2:	ret    
   1400056b3:	int3   
   1400056b4:	int3   
   1400056b5:	int3   
   1400056b6:	int3   
   1400056b7:	int3   
   1400056b8:	int3   
   1400056b9:	int3   
   1400056ba:	int3   
   1400056bb:	int3   
   1400056bc:	mov    QWORD PTR [rsp+0x8],rbx
   1400056c1:	push   rdi
   1400056c2:	sub    rsp,0x20
   1400056c6:	mov    rdi,rcx
   1400056c9:	call   0x140005550
   1400056ce:	xor    ebx,ebx
   1400056d0:	test   eax,eax
   1400056d2:	je     0x1400056eb
   1400056d4:	call   0x140005358
   1400056d9:	mov    rdx,rax
   1400056dc:	mov    rcx,rdi
   1400056df:	call   0x1400066c4
   1400056e4:	test   eax,eax
   1400056e6:	setne  bl
   1400056e9:	mov    eax,ebx
   1400056eb:	mov    rbx,QWORD PTR [rsp+0x30]
   1400056f0:	add    rsp,0x20
   1400056f4:	pop    rdi
   1400056f5:	ret    
   1400056f6:	int3   
   1400056f7:	int3   
   1400056f8:	int3   
   1400056f9:	int3   
   1400056fa:	int3   
   1400056fb:	int3   
   1400056fc:	mov    QWORD PTR [rsp+0x8],rbx
   140005701:	mov    QWORD PTR [rsp+0x10],rsi
   140005706:	push   rdi
   140005707:	sub    rsp,0x30
   14000570b:	mov    ebx,edx
   14000570d:	mov    rdi,rcx
   140005710:	test   rcx,rcx
   140005713:	je     0x14000578d
   140005715:	test   edx,0xf0000
   14000571b:	je     0x14000578d
   14000571d:	bt     edx,0x10
   140005721:	jae    0x140005728
   140005723:	call   0x140005550
   140005728:	mov    esi,0x1
   14000572d:	test   sil,bl
   140005730:	je     0x140005739
   140005732:	mov    ecx,0x1389
   140005737:	jmp    0x14000575b
   140005739:	test   bl,0x4
   14000573c:	je     0x140005745
   14000573e:	mov    ecx,0x138a
   140005743:	jmp    0x14000575b
   140005745:	test   bl,0x2
   140005748:	je     0x140005751
   14000574a:	mov    ecx,0x138c
   14000574f:	jmp    0x14000575b
   140005751:	test   bl,0x8
   140005754:	je     0x140005779
   140005756:	mov    ecx,0x138b
   14000575b:	call   0x1400059b8
   140005760:	lea    r9,[rip+0x5f99]        # 0x14000b700
   140005767:	mov    QWORD PTR [rsp+0x20],rax
   14000576c:	mov    r8d,esi
   14000576f:	mov    edx,esi
   140005771:	mov    rcx,rdi
   140005774:	call   0x140006a08
   140005779:	call   0x140005358
   14000577e:	mov    rdx,rax
   140005781:	mov    rcx,rdi
   140005784:	call   0x1400066c4
   140005789:	mov    eax,esi
   14000578b:	jmp    0x1400057a2
   14000578d:	call   QWORD PTR [rip+0x5905]        # 0x14000b098
   140005793:	test   eax,eax
   140005795:	jne    0x1400057a0
   140005797:	lea    ecx,[rax+0x57]
   14000579a:	call   QWORD PTR [rip+0x5900]        # 0x14000b0a0
   1400057a0:	xor    eax,eax
   1400057a2:	mov    rbx,QWORD PTR [rsp+0x40]
   1400057a7:	mov    rsi,QWORD PTR [rsp+0x48]
   1400057ac:	add    rsp,0x30
   1400057b0:	pop    rdi
   1400057b1:	ret    
   1400057b2:	int3   
   1400057b3:	int3   
   1400057b4:	int3   
   1400057b5:	int3   
   1400057b6:	int3   
   1400057b7:	int3   
   1400057b8:	mov    QWORD PTR [rsp+0x18],rbx
   1400057bd:	push   rdi
   1400057be:	sub    rsp,0x20
   1400057c2:	mov    rax,QWORD PTR [rip+0x8f2f]        # 0x14000e6f8
   1400057c9:	test   rax,rax
   1400057cc:	je     0x1400058d3
   1400057d2:	cmp    DWORD PTR [rax],0x9
   1400057d5:	jne    0x1400058d3
   1400057db:	mov    edx,0x3
   1400057e0:	call   0x140007994
   1400057e5:	test   eax,eax
   1400057e7:	je     0x1400058b6
   1400057ed:	lea    ebx,[rax-0x1]
   1400057f0:	mov    edi,eax
   1400057f2:	mov    r8d,ebx
   1400057f5:	call   0x140007b18
   1400057fa:	cmp    eax,0x10000
   1400057ff:	jne    0x1400058aa
   140005805:	mov    r8d,ebx
   140005808:	call   0x1400079dc
   14000580d:	mov    QWORD PTR [rsp+0x30],rax
   140005812:	test   rax,rax
   140005815:	je     0x1400058aa
   14000581b:	lea    rcx,[rax+0x10]
   14000581f:	call   0x14000704c
   140005824:	lea    rcx,[rsp+0x30]
   140005829:	call   0x14000704c
   14000582e:	mov    rcx,QWORD PTR [rip+0x8ec3]        # 0x14000e6f8
   140005835:	xor    r8d,r8d
   140005838:	lea    edx,[r8+0x3]
   14000583c:	call   0x140007328
   140005841:	test   rax,rax
   140005844:	je     0x1400058aa
   140005846:	cmp    DWORD PTR [rax+0x4],0x80000
   14000584d:	jne    0x1400058aa
   14000584f:	mov    r10,QWORD PTR [rax+0x10]
   140005853:	lea    r8,[rsp+0x30]
   140005858:	and    QWORD PTR [rsp+0x30],0x0
   14000585e:	mov    rcx,r10
   140005861:	mov    edx,ebx
   140005863:	call   0x140007328
   140005868:	mov    QWORD PTR [rsp+0x38],rax
   14000586d:	mov    rcx,rax
   140005870:	test   rax,rax
   140005873:	je     0x1400058aa
   140005875:	mov    rdx,QWORD PTR [rsp+0x30]
   14000587a:	mov    rax,QWORD PTR [rax+0x18]
   14000587e:	test   rdx,rdx
   140005881:	je     0x140005889
   140005883:	mov    QWORD PTR [rdx+0x18],rax
   140005887:	jmp    0x14000588d
   140005889:	mov    QWORD PTR [r10+0x8],rax
   14000588d:	cmp    rcx,QWORD PTR [r10+0x10]
   140005891:	jne    0x140005897
   140005893:	mov    QWORD PTR [r10+0x10],rdx
   140005897:	dec    DWORD PTR [r10+0x4]
   14000589b:	call   0x140007404
   1400058a0:	lea    rcx,[rsp+0x38]
   1400058a5:	call   0x14000704c
   1400058aa:	dec    ebx
   1400058ac:	sub    rdi,0x1
   1400058b0:	jne    0x1400057f2
   1400058b6:	mov    rcx,QWORD PTR [rip+0x8e3b]        # 0x14000e6f8
   1400058bd:	test   rcx,rcx
   1400058c0:	je     0x1400058d3
   1400058c2:	cmp    DWORD PTR [rcx],0x9
   1400058c5:	jne    0x1400058d3
   1400058c7:	lea    rcx,[rip+0x8e2a]        # 0x14000e6f8
   1400058ce:	call   0x1400075cc
   1400058d3:	cmp    DWORD PTR [rip+0x8e26],0x1        # 0x14000e700
   1400058da:	jne    0x1400058e2
   1400058dc:	call   QWORD PTR [rip+0x5756]        # 0x14000b038
   1400058e2:	mov    eax,0x1
   1400058e7:	mov    rbx,QWORD PTR [rsp+0x40]
   1400058ec:	add    rsp,0x20
   1400058f0:	pop    rdi
   1400058f1:	ret    
   1400058f2:	int3   
   1400058f3:	int3   
   1400058f4:	int3   
   1400058f5:	int3   
   1400058f6:	int3   
   1400058f7:	int3   
   1400058f8:	sub    rsp,0x158
   1400058ff:	mov    rax,QWORD PTR [rip+0x8702]        # 0x14000e008
   140005906:	xor    rax,rsp
   140005909:	mov    QWORD PTR [rsp+0x140],rax
   140005911:	xor    edx,edx
   140005913:	lea    rcx,[rsp+0x20]
   140005918:	mov    r8d,0x11c
   14000591e:	call   0x14000a892
   140005923:	movzx  eax,WORD PTR [rip+0x8dca]        # 0x14000e6f4
   14000592a:	mov    r8b,0x3
   14000592d:	mov    edx,0x2
   140005932:	mov    WORD PTR [rsp+0x134],ax
   14000593a:	xor    ecx,ecx
   14000593c:	mov    DWORD PTR [rsp+0x20],0x11c
   140005944:	mov    DWORD PTR [rsp+0x24],0x5
   14000594c:	mov    DWORD PTR [rsp+0x28],0x1
   140005954:	call   QWORD PTR [rip+0x597e]        # 0x14000b2d8
   14000595a:	mov    r8b,0x3
   14000595d:	mov    edx,0x1
   140005962:	mov    rcx,rax
   140005965:	call   QWORD PTR [rip+0x596d]        # 0x14000b2d8
   14000596b:	mov    r8b,0x3
   14000596e:	mov    edx,0x20
   140005973:	mov    rcx,rax
   140005976:	call   QWORD PTR [rip+0x595c]        # 0x14000b2d8
   14000597c:	mov    edx,0x3
   140005981:	lea    rcx,[rsp+0x20]
   140005986:	mov    r8,rax
   140005989:	call   QWORD PTR [rip+0x5ab1]        # 0x14000b440
   14000598f:	xor    ecx,ecx
   140005991:	test   eax,eax
   140005993:	setns  cl
   140005996:	mov    eax,ecx
   140005998:	mov    rcx,QWORD PTR [rsp+0x140]
   1400059a0:	xor    rcx,rsp
   1400059a3:	call   0x140009fe0
   1400059a8:	add    rsp,0x158
   1400059af:	ret    
   1400059b0:	int3   
   1400059b1:	int3   
   1400059b2:	int3   
   1400059b3:	int3   
   1400059b4:	int3   
   1400059b5:	int3   
   1400059b6:	int3   
   1400059b7:	int3   
   1400059b8:	mov    r8d,DWORD PTR [rip+0x8d31]        # 0x14000e6f0
   1400059bf:	mov    eax,0xcccccccd
   1400059c4:	inc    r8d
   1400059c7:	mul    r8d
   1400059ca:	mov    DWORD PTR [rip+0x8d1f],r8d        # 0x14000e6f0
   1400059d1:	shr    edx,0x3
   1400059d4:	lea    eax,[rdx+rdx*4]
   1400059d7:	mov    edx,ecx
   1400059d9:	add    eax,eax
   1400059db:	sub    r8d,eax
   1400059de:	add    r8d,0x4
   1400059e2:	jmp    0x1400059f0
   1400059e7:	int3   
   1400059e8:	int3   
   1400059e9:	int3   
   1400059ea:	int3   
   1400059eb:	int3   
   1400059ec:	int3   
   1400059ed:	int3   
   1400059ee:	int3   
   1400059ef:	int3   
   1400059f0:	mov    rax,rsp
   1400059f3:	mov    QWORD PTR [rax+0x10],rbx
   1400059f7:	mov    QWORD PTR [rax+0x18],rbp
   1400059fb:	mov    QWORD PTR [rax+0x8],rcx
   1400059ff:	push   rsi
   140005a00:	push   rdi
   140005a01:	push   r14
   140005a03:	sub    rsp,0x40
   140005a07:	xor    ebx,ebx
   140005a09:	mov    r14d,r8d
   140005a0c:	mov    QWORD PTR [rax+0x8],rbx
   140005a10:	mov    ebp,edx
   140005a12:	test   edx,edx
   140005a14:	jne    0x140005a2c
   140005a16:	call   QWORD PTR [rip+0x567c]        # 0x14000b098
   140005a1c:	test   eax,eax
   140005a1e:	jne    0x140005c15
   140005a24:	lea    ecx,[rbp+0x57]
   140005a27:	jmp    0x140005c0f
   140005a2c:	call   0x140004fe8
   140005a31:	test   eax,eax
   140005a33:	je     0x140005c15
   140005a39:	mov    edx,0x1
   140005a3e:	call   0x140007994
   140005a43:	mov    r10d,eax
   140005a46:	cmp    eax,r14d
   140005a49:	ja     0x140005ab7
   140005a4b:	mov    rax,QWORD PTR [rip+0x8ca6]        # 0x14000e6f8
   140005a52:	test   rax,rax
   140005a55:	je     0x140005c02
   140005a5b:	cmp    DWORD PTR [rax],0x9
   140005a5e:	jne    0x140005c02
   140005a64:	cmp    DWORD PTR [rax+0x4],edx
   140005a67:	jbe    0x140005c02
   140005a6d:	mov    rax,QWORD PTR [rax+0x8]
   140005a71:	mov    rcx,QWORD PTR [rax+0x18]
   140005a75:	test   rcx,rcx
   140005a78:	je     0x140005c02
   140005a7e:	cmp    DWORD PTR [rcx+0x4],0x10000
   140005a85:	je     0x140005a94
   140005a87:	cmp    DWORD PTR [rcx+0x4],0x80000
   140005a8e:	jne    0x140005c02
   140005a94:	mov    rcx,QWORD PTR [rcx+0x10]
   140005a98:	test   rcx,rcx
   140005a9b:	je     0x140005c02
   140005aa1:	mov    edx,r14d
   140005aa4:	sub    edx,r10d
   140005aa7:	inc    edx
   140005aa9:	call   0x140007938
   140005aae:	cmp    eax,0xffffffff
   140005ab1:	je     0x140005c02
   140005ab7:	mov    edi,0x80
   140005abc:	xor    edx,edx
   140005abe:	add    edi,edi
   140005ac0:	mov    r9d,0x1
   140005ac6:	mov    r8d,edi
   140005ac9:	lea    ecx,[rdx+0x4]
   140005acc:	call   0x140005134
   140005ad1:	mov    rsi,rax
   140005ad4:	test   rax,rax
   140005ad7:	je     0x140005c02
   140005add:	mov    r9d,edi
   140005ae0:	mov    r8,rax
   140005ae3:	mov    edx,ebp
   140005ae5:	xor    ecx,ecx
   140005ae7:	call   QWORD PTR [rip+0x5653]        # 0x14000b140
   140005aed:	mov    edx,eax
   140005aef:	test   eax,eax
   140005af1:	jne    0x140005b3e
   140005af3:	call   QWORD PTR [rip+0x559f]        # 0x14000b098
   140005af9:	cmp    eax,0x716
   140005afe:	jne    0x140005c15
   140005b04:	mov    QWORD PTR [rsp+0x30],rbx
   140005b09:	lea    rax,[rsp+0x60]
   140005b0e:	mov    DWORD PTR [rsp+0x28],ebx
   140005b12:	xor    r9d,r9d
   140005b15:	mov    r8d,ebp
   140005b18:	mov    QWORD PTR [rsp+0x20],rax
   140005b1d:	xor    edx,edx
   140005b1f:	mov    ecx,0xb00
   140005b24:	call   QWORD PTR [rip+0x5646]        # 0x14000b170
   140005b2a:	mov    edx,eax
   140005b2c:	test   eax,eax
   140005b2e:	je     0x140005c15
   140005b34:	mov    rcx,QWORD PTR [rsp+0x60]
   140005b39:	mov    rsi,rcx
   140005b3c:	jmp    0x140005b43
   140005b3e:	mov    rcx,QWORD PTR [rsp+0x60]
   140005b43:	lea    eax,[rdi-0x1]
   140005b46:	cmp    edx,eax
   140005b48:	jae    0x140005abc
   140005b4e:	mov    rdx,QWORD PTR [rip+0x8ba3]        # 0x14000e6f8
   140005b55:	test   rdx,rdx
   140005b58:	je     0x140005b99
   140005b5a:	cmp    DWORD PTR [rdx],0x9
   140005b5d:	jne    0x140005b99
   140005b5f:	cmp    DWORD PTR [rdx+0x4],0x1
   140005b63:	jbe    0x140005b99
   140005b65:	mov    rax,QWORD PTR [rdx+0x8]
   140005b69:	mov    r9,QWORD PTR [rax+0x18]
   140005b6d:	test   r9,r9
   140005b70:	je     0x140005b99
   140005b72:	cmp    DWORD PTR [r9+0x4],0x80000
   140005b7a:	jne    0x140005b99
   140005b7c:	mov    rcx,QWORD PTR [r9+0x10]
   140005b80:	mov    r8,rsi
   140005b83:	mov    edx,r14d
   140005b86:	call   0x140007a44
   140005b8b:	mov    rcx,QWORD PTR [rsp+0x60]
   140005b90:	mov    rdx,QWORD PTR [rip+0x8b61]        # 0x14000e6f8
   140005b97:	jmp    0x140005b9b
   140005b99:	mov    eax,ebx
   140005b9b:	test   eax,eax
   140005b9d:	je     0x140005c02
   140005b9f:	test   rcx,rcx
   140005ba2:	je     0x140005bb6
   140005ba4:	call   QWORD PTR [rip+0x5586]        # 0x14000b130
   140005baa:	mov    rdx,QWORD PTR [rip+0x8b47]        # 0x14000e6f8
   140005bb1:	mov    QWORD PTR [rsp+0x60],rbx
   140005bb6:	test   rdx,rdx
   140005bb9:	je     0x140005bfd
   140005bbb:	cmp    DWORD PTR [rdx],0x9
   140005bbe:	jne    0x140005bfd
   140005bc0:	cmp    DWORD PTR [rdx+0x4],0x1
   140005bc4:	jbe    0x140005bfd
   140005bc6:	mov    rax,QWORD PTR [rdx+0x8]
   140005bca:	mov    rcx,QWORD PTR [rax+0x18]
   140005bce:	test   rcx,rcx
   140005bd1:	je     0x140005bfd
   140005bd3:	cmp    DWORD PTR [rcx+0x4],0x80000
   140005bda:	jne    0x140005bfd
   140005bdc:	mov    rcx,QWORD PTR [rcx+0x10]
   140005be0:	xor    r8d,r8d
   140005be3:	mov    edx,r14d
   140005be6:	call   0x140007328
   140005beb:	test   rax,rax
   140005bee:	je     0x140005bfd
   140005bf0:	cmp    DWORD PTR [rax+0x4],0x20000
   140005bf7:	jne    0x140005bfd
   140005bf9:	mov    rbx,QWORD PTR [rax+0x10]
   140005bfd:	mov    rax,rbx
   140005c00:	jmp    0x140005c1c
   140005c02:	call   QWORD PTR [rip+0x5490]        # 0x14000b098
   140005c08:	test   eax,eax
   140005c0a:	jne    0x140005c15
   140005c0c:	lea    ecx,[rax+0x8]
   140005c0f:	call   QWORD PTR [rip+0x548b]        # 0x14000b0a0
   140005c15:	lea    rax,[rip+0x5b20]        # 0x14000b73c
   140005c1c:	mov    rbx,QWORD PTR [rsp+0x68]
   140005c21:	mov    rbp,QWORD PTR [rsp+0x70]
   140005c26:	add    rsp,0x40
   140005c2a:	pop    r14
   140005c2c:	pop    rdi
   140005c2d:	pop    rsi
   140005c2e:	ret    
   140005c2f:	int3   
   140005c30:	int3   
   140005c31:	int3   
   140005c32:	int3   
   140005c33:	int3   
   140005c34:	int3   
   140005c35:	int3   
   140005c36:	int3   
   140005c37:	int3   
   140005c38:	rex push rbx
   140005c3a:	sub    rsp,0x30
   140005c3e:	and    QWORD PTR [rsp+0x40],0x0
   140005c44:	mov    rbx,rcx
   140005c47:	movaps XMMWORD PTR [rsp+0x20],xmm6
   140005c4c:	test   rcx,rcx
   140005c4f:	je     0x140005cc9
   140005c51:	call   QWORD PTR [rip+0x5641]        # 0x14000b298
   140005c57:	test   eax,eax
   140005c59:	je     0x140005cc9
   140005c5b:	call   0x140004fe8
   140005c60:	test   eax,eax
   140005c62:	je     0x140005cdc
   140005c64:	xor    r9d,r9d
   140005c67:	xor    r8d,r8d
   140005c6a:	mov    rdx,rbx
   140005c6d:	xor    ecx,ecx
   140005c6f:	call   0x140005134
   140005c74:	mov    rbx,rax
   140005c77:	test   rax,rax
   140005c7a:	jne    0x140005c8b
   140005c7c:	call   QWORD PTR [rip+0x5416]        # 0x14000b098
   140005c82:	test   eax,eax
   140005c84:	jne    0x140005cdc
   140005c86:	lea    ecx,[rbx+0x8]
   140005c89:	jmp    0x140005cd6
   140005c8b:	call   QWORD PTR [rip+0x5707]        # 0x14000b398
   140005c91:	lea    rdx,[rsp+0x40]
   140005c96:	mov    rcx,rbx
   140005c99:	and    DWORD PTR [rax],0x0
   140005c9c:	call   QWORD PTR [rip+0x576e]        # 0x14000b410
   140005ca2:	movaps xmm6,xmm0
   140005ca5:	call   QWORD PTR [rip+0x56ed]        # 0x14000b398
   140005cab:	cmp    DWORD PTR [rax],0x22
   140005cae:	je     0x140005cc9
   140005cb0:	mov    rcx,QWORD PTR [rsp+0x40]
   140005cb5:	test   rcx,rcx
   140005cb8:	je     0x140005cc4
   140005cba:	call   QWORD PTR [rip+0x55d8]        # 0x14000b298
   140005cc0:	test   eax,eax
   140005cc2:	jne    0x140005cc9
   140005cc4:	movaps xmm0,xmm6
   140005cc7:	jmp    0x140005cdf
   140005cc9:	call   QWORD PTR [rip+0x53c9]        # 0x14000b098
   140005ccf:	test   eax,eax
   140005cd1:	jne    0x140005cdc
   140005cd3:	lea    ecx,[rax+0x57]
   140005cd6:	call   QWORD PTR [rip+0x53c4]        # 0x14000b0a0
   140005cdc:	xorps  xmm0,xmm0
   140005cdf:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   140005ce4:	add    rsp,0x30
   140005ce8:	pop    rbx
   140005ce9:	ret    
   140005cea:	int3   
   140005ceb:	int3   
   140005cec:	int3   
   140005ced:	int3   
   140005cee:	int3   
   140005cef:	int3   
   140005cf0:	rex push rbx
   140005cf2:	sub    rsp,0x20
   140005cf6:	and    QWORD PTR [rsp+0x40],0x0
   140005cfc:	mov    rbx,rcx
   140005cff:	test   rcx,rcx
   140005d02:	je     0x140005da3
   140005d08:	call   0x140004fe8
   140005d0d:	test   eax,eax
   140005d0f:	je     0x140005db6
   140005d15:	xor    r9d,r9d
   140005d18:	xor    r8d,r8d
   140005d1b:	mov    rdx,rbx
   140005d1e:	xor    ecx,ecx
   140005d20:	call   0x140005134
   140005d25:	mov    rbx,rax
   140005d28:	test   rax,rax
   140005d2b:	jne    0x140005d3c
   140005d2d:	call   QWORD PTR [rip+0x5365]        # 0x14000b098
   140005d33:	test   eax,eax
   140005d35:	jne    0x140005db6
   140005d37:	lea    ecx,[rbx+0x8]
   140005d3a:	jmp    0x140005db0
   140005d3c:	xor    edx,edx
   140005d3e:	mov    rcx,rax
   140005d41:	call   0x14000617c
   140005d46:	mov    rcx,rbx
   140005d49:	call   QWORD PTR [rip+0x5549]        # 0x14000b298
   140005d4f:	test   eax,eax
   140005d51:	je     0x140005da3
   140005d53:	call   QWORD PTR [rip+0x563f]        # 0x14000b398
   140005d59:	mov    r8d,0xa
   140005d5f:	lea    rdx,[rsp+0x40]
   140005d64:	mov    rcx,rbx
   140005d67:	and    DWORD PTR [rax],0x0
   140005d6a:	cmp    WORD PTR [rbx],0x2d
   140005d6e:	jne    0x140005d78
   140005d70:	call   QWORD PTR [rip+0x55a2]        # 0x14000b318
   140005d76:	jmp    0x140005d7e
   140005d78:	call   QWORD PTR [rip+0x568a]        # 0x14000b408
   140005d7e:	mov    ebx,eax
   140005d80:	call   QWORD PTR [rip+0x5612]        # 0x14000b398
   140005d86:	cmp    DWORD PTR [rax],0x22
   140005d89:	je     0x140005da3
   140005d8b:	mov    rcx,QWORD PTR [rsp+0x40]
   140005d90:	test   rcx,rcx
   140005d93:	je     0x140005d9f
   140005d95:	call   QWORD PTR [rip+0x54fd]        # 0x14000b298
   140005d9b:	test   eax,eax
   140005d9d:	jne    0x140005da3
   140005d9f:	mov    eax,ebx
   140005da1:	jmp    0x140005db8
   140005da3:	call   QWORD PTR [rip+0x52ef]        # 0x14000b098
   140005da9:	test   eax,eax
   140005dab:	jne    0x140005db6
   140005dad:	lea    ecx,[rax+0x57]
   140005db0:	call   QWORD PTR [rip+0x52ea]        # 0x14000b0a0
   140005db6:	xor    eax,eax
   140005db8:	add    rsp,0x20
   140005dbc:	pop    rbx
   140005dbd:	ret    
   140005dbe:	int3   
   140005dbf:	int3   
   140005dc0:	int3   
   140005dc1:	int3   
   140005dc2:	int3   
   140005dc3:	int3   
   140005dc4:	mov    QWORD PTR [rsp+0x8],rbx
   140005dc9:	push   rdi
   140005dca:	sub    rsp,0x20
   140005dce:	and    QWORD PTR [rsp+0x48],0x0
   140005dd4:	mov    edi,r8d
   140005dd7:	test   rcx,rcx
   140005dda:	je     0x140005e7c
   140005de0:	mov    rdx,rcx
   140005de3:	xor    r9d,r9d
   140005de6:	xor    ecx,ecx
   140005de8:	xor    r8d,r8d
   140005deb:	call   0x140005134
   140005df0:	mov    rbx,rax
   140005df3:	test   rax,rax
   140005df6:	jne    0x140005e0b
   140005df8:	call   QWORD PTR [rip+0x529a]        # 0x14000b098
   140005dfe:	test   eax,eax
   140005e00:	jne    0x140005e8f
   140005e06:	lea    ecx,[rbx+0x8]
   140005e09:	jmp    0x140005e89
   140005e0b:	xor    edx,edx
   140005e0d:	mov    rcx,rax
   140005e10:	call   0x14000617c
   140005e15:	mov    rcx,rbx
   140005e18:	call   QWORD PTR [rip+0x547a]        # 0x14000b298
   140005e1e:	test   eax,eax
   140005e20:	je     0x140005e8f
   140005e22:	test   edi,edi
   140005e24:	jne    0x140005e2c
   140005e26:	cmp    WORD PTR [rbx],0x2d
   140005e2a:	je     0x140005e8f
   140005e2c:	call   QWORD PTR [rip+0x5566]        # 0x14000b398
   140005e32:	mov    r8d,0xa
   140005e38:	lea    rdx,[rsp+0x48]
   140005e3d:	mov    rcx,rbx
   140005e40:	and    DWORD PTR [rax],0x0
   140005e43:	cmp    edi,0x1
   140005e46:	jne    0x140005e50
   140005e48:	call   QWORD PTR [rip+0x54ca]        # 0x14000b318
   140005e4e:	jmp    0x140005e56
   140005e50:	call   QWORD PTR [rip+0x55b2]        # 0x14000b408
   140005e56:	call   QWORD PTR [rip+0x553c]        # 0x14000b398
   140005e5c:	cmp    DWORD PTR [rax],0x22
   140005e5f:	je     0x140005e8f
   140005e61:	mov    rcx,QWORD PTR [rsp+0x48]
   140005e66:	test   rcx,rcx
   140005e69:	je     0x140005e75
   140005e6b:	call   QWORD PTR [rip+0x5427]        # 0x14000b298
   140005e71:	test   eax,eax
   140005e73:	jne    0x140005e8f
   140005e75:	mov    eax,0x1
   140005e7a:	jmp    0x140005e91
   140005e7c:	call   QWORD PTR [rip+0x5216]        # 0x14000b098
   140005e82:	test   eax,eax
   140005e84:	jne    0x140005e8f
   140005e86:	lea    ecx,[rax+0x57]
   140005e89:	call   QWORD PTR [rip+0x5211]        # 0x14000b0a0
   140005e8f:	xor    eax,eax
   140005e91:	mov    rbx,QWORD PTR [rsp+0x30]
   140005e96:	add    rsp,0x20
   140005e9a:	pop    rdi
   140005e9b:	ret    
   140005e9c:	int3   
   140005e9d:	int3   
   140005e9e:	int3   
   140005e9f:	int3   
   140005ea0:	int3   
   140005ea1:	int3   
   140005ea2:	int3   
   140005ea3:	int3   
   140005ea4:	mov    QWORD PTR [rsp+0x8],rbx
   140005ea9:	push   rdi
   140005eaa:	sub    rsp,0x20
   140005eae:	movzx  edi,dx
   140005eb1:	mov    rbx,rcx
   140005eb4:	test   rcx,rcx
   140005eb7:	jne    0x140005ec8
   140005eb9:	call   QWORD PTR [rip+0x51d9]        # 0x14000b098
   140005ebf:	test   eax,eax
   140005ec1:	jne    0x140005ef7
   140005ec3:	lea    ecx,[rbx+0x57]
   140005ec6:	jmp    0x140005ef1
   140005ec8:	call   QWORD PTR [rip+0x53ca]        # 0x14000b298
   140005ece:	cmp    eax,0x1
   140005ed1:	jb     0x140005eec
   140005ed3:	movzx  edx,di
   140005ed6:	mov    rcx,rbx
   140005ed9:	call   QWORD PTR [rip+0x5379]        # 0x14000b258
   140005edf:	test   rax,rax
   140005ee2:	je     0x140005eec
   140005ee4:	sub    rax,rbx
   140005ee7:	sar    rax,1
   140005eea:	jmp    0x140005efa
   140005eec:	mov    ecx,0x490
   140005ef1:	call   QWORD PTR [rip+0x51a9]        # 0x14000b0a0
   140005ef7:	or     eax,0xffffffff
   140005efa:	mov    rbx,QWORD PTR [rsp+0x30]
   140005eff:	add    rsp,0x20
   140005f03:	pop    rdi
   140005f04:	ret    
   140005f05:	int3   
   140005f06:	int3   
   140005f07:	int3   
   140005f08:	int3   
   140005f09:	int3   
   140005f0a:	int3   
   140005f0b:	int3   
   140005f0c:	mov    QWORD PTR [rsp+0x8],rbx
   140005f11:	mov    QWORD PTR [rsp+0x10],rbp
   140005f16:	mov    QWORD PTR [rsp+0x18],rsi
   140005f1b:	push   rdi
   140005f1c:	push   r12
   140005f1e:	push   r13
   140005f20:	push   r14
   140005f22:	push   r15
   140005f24:	sub    rsp,0x20
   140005f28:	xor    ebx,ebx
   140005f2a:	mov    r15d,r8d
   140005f2d:	mov    rdi,rdx
   140005f30:	mov    rsi,rcx
   140005f33:	test   rcx,rcx
   140005f36:	je     0x140005ff7
   140005f3c:	test   rdx,rdx
   140005f3f:	je     0x140005ff7
   140005f45:	mov    rcx,rdx
   140005f48:	call   QWORD PTR [rip+0x534a]        # 0x14000b298
   140005f4e:	lea    r14d,[rbx+0x1]
   140005f52:	xor    edx,edx
   140005f54:	mov    r9d,r14d
   140005f57:	xor    ecx,ecx
   140005f59:	lea    r12d,[rax+0x4]
   140005f5d:	mov    r8d,r12d
   140005f60:	call   0x140005134
   140005f65:	mov    rbp,rax
   140005f68:	test   rax,rax
   140005f6b:	jne    0x140005f83
   140005f6d:	call   QWORD PTR [rip+0x5125]        # 0x14000b098
   140005f73:	test   eax,eax
   140005f75:	jne    0x14000600a
   140005f7b:	lea    ecx,[rax+0x8]
   140005f7e:	jmp    0x140006004
   140005f83:	mov    rcx,rsi
   140005f86:	call   QWORD PTR [rip+0x530c]        # 0x14000b298
   140005f8c:	mov    r9d,r14d
   140005f8f:	xor    edx,edx
   140005f91:	mov    ecx,r14d
   140005f94:	lea    r13d,[rax+0x4]
   140005f98:	mov    r8d,r13d
   140005f9b:	call   0x140005134
   140005fa0:	mov    r14,rax
   140005fa3:	test   rax,rax
   140005fa6:	je     0x140005f6d
   140005fa8:	mov    edx,r12d
   140005fab:	lea    r8,[rip+0x5756]        # 0x14000b708
   140005fb2:	mov    r9,rdi
   140005fb5:	mov    rcx,rbp
   140005fb8:	call   0x140001008
   140005fbd:	test   eax,eax
   140005fbf:	jns    0x140005fc6
   140005fc1:	movzx  ecx,ax
   140005fc4:	jmp    0x140006004
   140005fc6:	mov    edx,r13d
   140005fc9:	lea    r8,[rip+0x5738]        # 0x14000b708
   140005fd0:	mov    r9,rsi
   140005fd3:	mov    rcx,r14
   140005fd6:	call   0x140001008
   140005fdb:	test   eax,eax
   140005fdd:	js     0x140005fc1
   140005fdf:	mov    r8d,r15d
   140005fe2:	mov    rdx,r14
   140005fe5:	mov    rcx,rbp
   140005fe8:	call   0x1400060d8
   140005fed:	cmp    eax,0xffffffff
   140005ff0:	setne  bl
   140005ff3:	mov    eax,ebx
   140005ff5:	jmp    0x14000600c
   140005ff7:	call   QWORD PTR [rip+0x509b]        # 0x14000b098
   140005ffd:	test   eax,eax
   140005fff:	jne    0x14000600a
   140006001:	lea    ecx,[rax+0x57]
   140006004:	call   QWORD PTR [rip+0x5096]        # 0x14000b0a0
   14000600a:	xor    eax,eax
   14000600c:	mov    rbx,QWORD PTR [rsp+0x50]
   140006011:	mov    rbp,QWORD PTR [rsp+0x58]
   140006016:	mov    rsi,QWORD PTR [rsp+0x60]
   14000601b:	add    rsp,0x20
   14000601f:	pop    r15
   140006021:	pop    r14
   140006023:	pop    r13
   140006025:	pop    r12
   140006027:	pop    rdi
   140006028:	ret    
   140006029:	int3   
   14000602a:	int3   
   14000602b:	int3   
   14000602c:	int3   
   14000602d:	int3   
   14000602e:	int3   
   14000602f:	int3   
   140006030:	mov    QWORD PTR [rsp+0x8],rbx
   140006035:	mov    QWORD PTR [rsp+0x10],rbp
   14000603a:	mov    QWORD PTR [rsp+0x18],rsi
   14000603f:	push   rdi
   140006040:	sub    rsp,0x20
   140006044:	xor    ebx,ebx
   140006046:	mov    rdi,rdx
   140006049:	mov    rbp,rcx
   14000604c:	test   rcx,rcx
   14000604f:	je     0x1400060a4
   140006051:	test   rdx,rdx
   140006054:	je     0x1400060a4
   140006056:	mov    rcx,rdx
   140006059:	call   QWORD PTR [rip+0x5239]        # 0x14000b298
   14000605f:	mov    esi,eax
   140006061:	test   eax,eax
   140006063:	je     0x14000609d
   140006065:	mov    rcx,rbp
   140006068:	call   QWORD PTR [rip+0x522a]        # 0x14000b298
   14000606e:	test   eax,eax
   140006070:	je     0x14000609d
   140006072:	mov    rcx,rbp
   140006075:	call   QWORD PTR [rip+0x521d]        # 0x14000b298
   14000607b:	test   eax,eax
   14000607d:	je     0x14000609d
   14000607f:	test   esi,esi
   140006081:	je     0x14000609d
   140006083:	movzx  edx,WORD PTR [rdi]
   140006086:	mov    rcx,rbp
   140006089:	call   0x140005ea4
   14000608e:	cmp    eax,0xffffffff
   140006091:	jne    0x1400060ba
   140006093:	inc    ebx
   140006095:	add    rdi,0x2
   140006099:	cmp    ebx,esi
   14000609b:	jb     0x140006083
   14000609d:	mov    ecx,0x490
   1400060a2:	jmp    0x1400060b1
   1400060a4:	call   QWORD PTR [rip+0x4fee]        # 0x14000b098
   1400060aa:	test   eax,eax
   1400060ac:	jne    0x1400060b7
   1400060ae:	lea    ecx,[rax+0x57]
   1400060b1:	call   QWORD PTR [rip+0x4fe9]        # 0x14000b0a0
   1400060b7:	or     eax,0xffffffff
   1400060ba:	mov    rbx,QWORD PTR [rsp+0x30]
   1400060bf:	mov    rbp,QWORD PTR [rsp+0x38]
   1400060c4:	mov    rsi,QWORD PTR [rsp+0x40]
   1400060c9:	add    rsp,0x20
   1400060cd:	pop    rdi
   1400060ce:	ret    
   1400060cf:	int3   
   1400060d0:	int3   
   1400060d1:	int3   
   1400060d2:	int3   
   1400060d3:	int3   
   1400060d4:	int3   
   1400060d5:	int3   
   1400060d6:	int3   
   1400060d7:	int3   
   1400060d8:	mov    QWORD PTR [rsp+0x8],rbx
   1400060dd:	mov    QWORD PTR [rsp+0x10],rbp
   1400060e2:	mov    QWORD PTR [rsp+0x18],rsi
   1400060e7:	push   rdi
   1400060e8:	sub    rsp,0x20
   1400060ec:	mov    ebp,r8d
   1400060ef:	mov    rdi,rdx
   1400060f2:	mov    rbx,rcx
   1400060f5:	test   rcx,rcx
   1400060f8:	je     0x14000614a
   1400060fa:	test   rdx,rdx
   1400060fd:	je     0x14000614a
   1400060ff:	call   QWORD PTR [rip+0x5193]        # 0x14000b298
   140006105:	mov    rcx,rdi
   140006108:	mov    esi,eax
   14000610a:	call   QWORD PTR [rip+0x5188]        # 0x14000b298
   140006110:	test   eax,eax
   140006112:	je     0x14000613b
   140006114:	cmp    esi,0x1
   140006117:	jb     0x14000613b
   140006119:	cmp    esi,eax
   14000611b:	jb     0x14000613b
   14000611d:	mov    rdx,rdi
   140006120:	mov    rcx,rbx
   140006123:	cmp    ebp,0x1
   140006126:	jne    0x140006130
   140006128:	call   QWORD PTR [rip+0x5112]        # 0x14000b240
   14000612e:	jmp    0x140006136
   140006130:	call   QWORD PTR [rip+0x5112]        # 0x14000b248
   140006136:	test   rax,rax
   140006139:	jne    0x140006142
   14000613b:	mov    ecx,0x490
   140006140:	jmp    0x140006157
   140006142:	sub    rax,rbx
   140006145:	sar    rax,1
   140006148:	jmp    0x140006160
   14000614a:	call   QWORD PTR [rip+0x4f48]        # 0x14000b098
   140006150:	test   eax,eax
   140006152:	jne    0x14000615d
   140006154:	lea    ecx,[rax+0x57]
   140006157:	call   QWORD PTR [rip+0x4f43]        # 0x14000b0a0
   14000615d:	or     eax,0xffffffff
   140006160:	mov    rbx,QWORD PTR [rsp+0x30]
   140006165:	mov    rbp,QWORD PTR [rsp+0x38]
   14000616a:	mov    rsi,QWORD PTR [rsp+0x40]
   14000616f:	add    rsp,0x20
   140006173:	pop    rdi
   140006174:	ret    
   140006175:	int3   
   140006176:	int3   
   140006177:	int3   
   140006178:	int3   
   140006179:	int3   
   14000617a:	int3   
   14000617b:	int3   
   14000617c:	mov    QWORD PTR [rsp+0x18],rbx
   140006181:	push   rbp
   140006182:	push   rsi
   140006183:	push   rdi
   140006184:	push   r14
   140006186:	push   r15
   140006188:	sub    rsp,0x30
   14000618c:	mov    rax,QWORD PTR [rip+0x7e75]        # 0x14000e008
   140006193:	xor    rax,rsp
   140006196:	mov    QWORD PTR [rsp+0x28],rax
   14000619b:	mov    eax,DWORD PTR [rip+0x5573]        # 0x14000b714
   1400061a1:	xor    r15d,r15d
   1400061a4:	mov    DWORD PTR [rsp+0x20],eax
   1400061a8:	mov    rbp,rdx
   1400061ab:	movzx  eax,WORD PTR [rip+0x5566]        # 0x14000b718
   1400061b2:	mov    rdi,rcx
   1400061b5:	mov    WORD PTR [rsp+0x24],ax
   1400061ba:	mov    esi,r15d
   1400061bd:	test   rcx,rcx
   1400061c0:	je     0x14000626f
   1400061c6:	call   QWORD PTR [rip+0x50cc]        # 0x14000b298
   1400061cc:	test   eax,eax
   1400061ce:	je     0x14000626f
   1400061d4:	test   rbp,rbp
   1400061d7:	je     0x1400061e6
   1400061d9:	mov    rcx,rbp
   1400061dc:	call   QWORD PTR [rip+0x50b6]        # 0x14000b298
   1400061e2:	test   eax,eax
   1400061e4:	jne    0x1400061eb
   1400061e6:	lea    rbp,[rsp+0x20]
   1400061eb:	mov    rbx,rdi
   1400061ee:	cmp    WORD PTR [rdi],r15w
   1400061f2:	je     0x14000620f
   1400061f4:	movzx  edx,WORD PTR [rbx]
   1400061f7:	mov    rcx,rbp
   1400061fa:	call   QWORD PTR [rip+0x5038]        # 0x14000b238
   140006200:	test   rax,rax
   140006203:	je     0x14000620f
   140006205:	add    rbx,0x2
   140006209:	cmp    WORD PTR [rbx],r15w
   14000620d:	jne    0x1400061f4
   14000620f:	movzx  eax,WORD PTR [rbx]
   140006212:	mov    r14,rbx
   140006215:	test   ax,ax
   140006218:	je     0x14000624d
   14000621a:	movzx  edx,ax
   14000621d:	mov    rcx,rbp
   140006220:	call   QWORD PTR [rip+0x5012]        # 0x14000b238
   140006226:	test   rax,rax
   140006229:	je     0x140006235
   14000622b:	test   rsi,rsi
   14000622e:	jne    0x140006238
   140006230:	mov    rsi,rbx
   140006233:	jmp    0x140006238
   140006235:	mov    rsi,r15
   140006238:	add    rbx,0x2
   14000623c:	movzx  eax,WORD PTR [rbx]
   14000623f:	test   ax,ax
   140006242:	jne    0x14000621a
   140006244:	test   rsi,rsi
   140006247:	je     0x14000624d
   140006249:	mov    WORD PTR [rsi],r15w
   14000624d:	cmp    r14,rdi
   140006250:	jbe    0x14000626a
   140006252:	mov    rcx,r14
   140006255:	call   QWORD PTR [rip+0x503d]        # 0x14000b298
   14000625b:	mov    rdx,r14
   14000625e:	mov    rcx,rdi
   140006261:	lea    r8d,[rax+0x1]
   140006265:	call   0x140006448
   14000626a:	mov    rax,rdi
   14000626d:	jmp    0x140006276
   14000626f:	lea    rax,[rip+0x54c6]        # 0x14000b73c
   140006276:	mov    rcx,QWORD PTR [rsp+0x28]
   14000627b:	xor    rcx,rsp
   14000627e:	call   0x140009fe0
   140006283:	mov    rbx,QWORD PTR [rsp+0x70]
   140006288:	add    rsp,0x30
   14000628c:	pop    r15
   14000628e:	pop    r14
   140006290:	pop    rdi
   140006291:	pop    rsi
   140006292:	pop    rbp
   140006293:	ret    
   140006294:	int3   
   140006295:	int3   
   140006296:	int3   
   140006297:	int3   
   140006298:	int3   
   140006299:	int3   
   14000629a:	int3   
   14000629b:	int3   
   14000629c:	mov    QWORD PTR [rsp+0x8],rbx
   1400062a1:	mov    QWORD PTR [rsp+0x10],rsi
   1400062a6:	push   rdi
   1400062a7:	sub    rsp,0x20
   1400062ab:	xor    ebx,ebx
   1400062ad:	mov    rsi,rdx
   1400062b0:	mov    rdi,rcx
   1400062b3:	cmp    rcx,0xffffffffffffffff
   1400062b7:	je     0x1400062d9
   1400062b9:	call   QWORD PTR [rip+0x4e09]        # 0x14000b0c8
   1400062bf:	cmp    eax,0x2
   1400062c2:	jne    0x1400062d9
   1400062c4:	mov    rdx,rsi
   1400062c7:	mov    rcx,rdi
   1400062ca:	call   QWORD PTR [rip+0x4d88]        # 0x14000b058
   1400062d0:	test   eax,eax
   1400062d2:	je     0x1400062d9
   1400062d4:	mov    ebx,0x1
   1400062d9:	mov    rsi,QWORD PTR [rsp+0x38]
   1400062de:	mov    eax,ebx
   1400062e0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400062e5:	add    rsp,0x20
   1400062e9:	pop    rdi
   1400062ea:	ret    
   1400062eb:	int3   
   1400062ec:	int3   
   1400062ed:	int3   
   1400062ee:	int3   
   1400062ef:	int3   
   1400062f0:	int3   
   1400062f1:	int3   
   1400062f2:	int3   
   1400062f3:	int3   
   1400062f4:	mov    QWORD PTR [rsp+0x10],rbx
   1400062f9:	mov    QWORD PTR [rsp+0x18],rsi
   1400062fe:	push   rdi
   1400062ff:	sub    rsp,0x20
   140006303:	xor    ebx,ebx
   140006305:	mov    DWORD PTR [rsp+0x30],ebx
   140006309:	test   rcx,rcx
   14000630c:	jne    0x140006321
   14000630e:	call   QWORD PTR [rip+0x4d84]        # 0x14000b098
   140006314:	test   eax,eax
   140006316:	jne    0x1400063a5
   14000631c:	lea    ecx,[rbx+0x57]
   14000631f:	jmp    0x14000639f
   140006321:	call   QWORD PTR [rip+0x5099]        # 0x14000b3c0
   140006327:	mov    edi,eax
   140006329:	call   QWORD PTR [rip+0x5069]        # 0x14000b398
   14000632f:	mov    ecx,edi
   140006331:	mov    DWORD PTR [rax],ebx
   140006333:	call   QWORD PTR [rip+0x507f]        # 0x14000b3b8
   140006339:	mov    rsi,rax
   14000633c:	cmp    rax,0xffffffffffffffff
   140006340:	je     0x14000639a
   140006342:	call   QWORD PTR [rip+0x5050]        # 0x14000b398
   140006348:	cmp    DWORD PTR [rax],0x9
   14000634b:	je     0x14000639a
   14000634d:	mov    rcx,rsi
   140006350:	call   QWORD PTR [rip+0x4d72]        # 0x14000b0c8
   140006356:	cmp    eax,0x2
   140006359:	jne    0x1400063a5
   14000635b:	test   edi,edi
   14000635d:	je     0x140006377
   14000635f:	sub    edi,0x1
   140006362:	je     0x140006370
   140006364:	cmp    edi,0x1
   140006367:	jne    0x140006396
   140006369:	mov    ecx,0xfffffff4
   14000636e:	jmp    0x14000637c
   140006370:	mov    ecx,0xfffffff5
   140006375:	jmp    0x14000637c
   140006377:	mov    ecx,0xfffffff6
   14000637c:	call   QWORD PTR [rip+0x4e0e]        # 0x14000b190
   140006382:	test   rax,rax
   140006385:	je     0x140006396
   140006387:	lea    rdx,[rsp+0x30]
   14000638c:	mov    rcx,rax
   14000638f:	call   0x14000629c
   140006394:	mov    ebx,eax
   140006396:	mov    eax,ebx
   140006398:	jmp    0x1400063a7
   14000639a:	mov    ecx,0x6
   14000639f:	call   QWORD PTR [rip+0x4cfb]        # 0x14000b0a0
   1400063a5:	xor    eax,eax
   1400063a7:	mov    rbx,QWORD PTR [rsp+0x38]
   1400063ac:	mov    rsi,QWORD PTR [rsp+0x40]
   1400063b1:	add    rsp,0x20
   1400063b5:	pop    rdi
   1400063b6:	ret    
   1400063b7:	int3   
   1400063b8:	int3   
   1400063b9:	int3   
   1400063ba:	int3   
   1400063bb:	int3   
   1400063bc:	int3   
   1400063bd:	int3   
   1400063be:	int3   
   1400063bf:	int3   
   1400063c0:	sub    rsp,0x28
   1400063c4:	test   rcx,rcx
   1400063c7:	je     0x140006433
   1400063c9:	test   rdx,rdx
   1400063cc:	je     0x140006433
   1400063ce:	movsxd r9,r8d
   1400063d1:	mov    eax,0x80070057
   1400063d6:	xor    r8d,r8d
   1400063d9:	cmp    r9,0x7fffffff
   1400063e0:	cmova  r8d,eax
   1400063e4:	test   r8d,r8d
   1400063e7:	js     0x140006421
   1400063e9:	mov    r10d,0x7ffffffe
   1400063ef:	xor    r8d,r8d
   1400063f2:	sub    r10,r9
   1400063f5:	sub    rdx,rcx
   1400063f8:	lea    rax,[r10+r9*1]
   1400063fc:	test   rax,rax
   1400063ff:	je     0x140006413
   140006401:	mov    al,BYTE PTR [rdx+rcx*1]
   140006404:	test   al,al
   140006406:	je     0x140006413
   140006408:	mov    BYTE PTR [rcx],al
   14000640a:	inc    rcx
   14000640d:	sub    r9,0x1
   140006411:	jne    0x1400063f8
   140006413:	test   r9,r9
   140006416:	jne    0x140006421
   140006418:	dec    rcx
   14000641b:	mov    r8d,0x8007007a
   140006421:	mov    BYTE PTR [rcx],0x0
   140006424:	test   r8d,r8d
   140006427:	jns    0x14000643a
   140006429:	movzx  ecx,r8w
   14000642d:	call   QWORD PTR [rip+0x4c6d]        # 0x14000b0a0
   140006433:	xor    eax,eax
   140006435:	add    rsp,0x28
   140006439:	ret    
   14000643a:	mov    eax,0x1
   14000643f:	jmp    0x140006435
   140006441:	int3   
   140006442:	int3   
   140006443:	int3   
   140006444:	int3   
   140006445:	int3   
   140006446:	int3   
   140006447:	int3   
   140006448:	rex push rbx
   14000644a:	sub    rsp,0x20
   14000644e:	xor    ebx,ebx
   140006450:	mov    r9,rdx
   140006453:	test   rcx,rcx
   140006456:	je     0x1400064d4
   140006458:	test   rdx,rdx
   14000645b:	je     0x1400064d4
   14000645d:	test   r8d,r8d
   140006460:	jle    0x1400064d4
   140006462:	movsxd r8,r8d
   140006465:	mov    r10d,0x7ffffffe
   14000646b:	mov    edx,ebx
   14000646d:	mov    r11d,0x80070057
   140006473:	lea    rax,[r8-0x1]
   140006477:	cmp    rax,r10
   14000647a:	cmova  edx,r11d
   14000647e:	test   edx,edx
   140006480:	js     0x1400064bf
   140006482:	mov    edx,ebx
   140006484:	test   r8,r8
   140006487:	je     0x1400064b4
   140006489:	sub    r10,r8
   14000648c:	sub    r9,rcx
   14000648f:	lea    rax,[r10+r8*1]
   140006493:	test   rax,rax
   140006496:	je     0x1400064af
   140006498:	movzx  eax,WORD PTR [r9+rcx*1]
   14000649d:	test   ax,ax
   1400064a0:	je     0x1400064af
   1400064a2:	mov    WORD PTR [rcx],ax
   1400064a5:	add    rcx,0x2
   1400064a9:	sub    r8,0x1
   1400064ad:	jne    0x14000648f
   1400064af:	test   r8,r8
   1400064b2:	jne    0x1400064c4
   1400064b4:	sub    rcx,0x2
   1400064b8:	mov    edx,0x8007007a
   1400064bd:	jmp    0x1400064c4
   1400064bf:	test   r8,r8
   1400064c2:	je     0x1400064c7
   1400064c4:	mov    WORD PTR [rcx],bx
   1400064c7:	test   edx,edx
   1400064c9:	jns    0x1400064dc
   1400064cb:	movzx  ecx,dx
   1400064ce:	call   QWORD PTR [rip+0x4bcc]        # 0x14000b0a0
   1400064d4:	xor    eax,eax
   1400064d6:	add    rsp,0x20
   1400064da:	pop    rbx
   1400064db:	ret    
   1400064dc:	mov    eax,0x1
   1400064e1:	jmp    0x1400064d6
   1400064e3:	int3   
   1400064e4:	int3   
   1400064e5:	int3   
   1400064e6:	int3   
   1400064e7:	int3   
   1400064e8:	int3   
   1400064e9:	int3   
   1400064ea:	int3   
   1400064eb:	int3   
   1400064ec:	mov    QWORD PTR [rsp+0x8],rbx
   1400064f1:	push   rdi
   1400064f2:	sub    rsp,0x20
   1400064f6:	xor    edi,edi
   1400064f8:	mov    r11,rdx
   1400064fb:	mov    rbx,rcx
   1400064fe:	test   rcx,rcx
   140006501:	je     0x1400065cb
   140006507:	test   rdx,rdx
   14000650a:	je     0x1400065cb
   140006510:	test   r8d,r8d
   140006513:	jle    0x1400065cb
   140006519:	movsxd r10,r8d
   14000651c:	mov    edx,edi
   14000651e:	mov    r8d,0x80070057
   140006524:	lea    rax,[r10-0x1]
   140006528:	cmp    rax,0x7ffffffe
   14000652e:	cmova  edx,r8d
   140006532:	test   edx,edx
   140006534:	js     0x14000655f
   140006536:	mov    rax,r10
   140006539:	mov    edx,edi
   14000653b:	test   r10,r10
   14000653e:	je     0x14000655c
   140006540:	cmp    WORD PTR [rcx],di
   140006543:	je     0x14000654f
   140006545:	add    rcx,0x2
   140006549:	sub    rax,0x1
   14000654d:	jne    0x140006540
   14000654f:	test   rax,rax
   140006552:	je     0x14000655c
   140006554:	mov    r9,r10
   140006557:	sub    r9,rax
   14000655a:	jmp    0x140006562
   14000655c:	mov    edx,r8d
   14000655f:	mov    r9,rdi
   140006562:	test   edx,edx
   140006564:	js     0x1400065c2
   140006566:	mov    r8,r10
   140006569:	lea    rcx,[rbx+r9*2]
   14000656d:	mov    edx,edi
   14000656f:	sub    r8,r9
   140006572:	je     0x1400065ab
   140006574:	mov    rax,r8
   140006577:	sub    rax,r10
   14000657a:	lea    r10,[r9+0x7ffffffe]
   140006581:	add    r10,rax
   140006584:	sub    r11,rcx
   140006587:	test   r10,r10
   14000658a:	je     0x1400065a6
   14000658c:	movzx  eax,WORD PTR [r11+rcx*1]
   140006591:	test   ax,ax
   140006594:	je     0x1400065a6
   140006596:	mov    WORD PTR [rcx],ax
   140006599:	dec    r10
   14000659c:	add    rcx,0x2
   1400065a0:	sub    r8,0x1
   1400065a4:	jne    0x140006587
   1400065a6:	test   r8,r8
   1400065a9:	jne    0x1400065b4
   1400065ab:	sub    rcx,0x2
   1400065af:	mov    edx,0x8007007a
   1400065b4:	mov    WORD PTR [rcx],di
   1400065b7:	test   edx,edx
   1400065b9:	js     0x1400065c2
   1400065bb:	mov    eax,0x1
   1400065c0:	jmp    0x1400065cd
   1400065c2:	movzx  ecx,dx
   1400065c5:	call   QWORD PTR [rip+0x4ad5]        # 0x14000b0a0
   1400065cb:	xor    eax,eax
   1400065cd:	mov    rbx,QWORD PTR [rsp+0x30]
   1400065d2:	add    rsp,0x20
   1400065d6:	pop    rdi
   1400065d7:	ret    
   1400065d8:	int3   
   1400065d9:	int3   
   1400065da:	int3   
   1400065db:	int3   
   1400065dc:	int3   
   1400065dd:	int3   
   1400065de:	int3   
   1400065df:	int3   
   1400065e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400065e5:	mov    QWORD PTR [rsp+0x10],rbp
   1400065ea:	mov    QWORD PTR [rsp+0x18],rsi
   1400065ef:	push   rdi
   1400065f0:	sub    rsp,0x30
   1400065f4:	xor    ebx,ebx
   1400065f6:	mov    edi,r9d
   1400065f9:	mov    rsi,rdx
   1400065fc:	mov    rbp,rcx
   1400065ff:	test   rcx,rcx
   140006602:	je     0x14000663d
   140006604:	test   rdx,rdx
   140006607:	je     0x14000663d
   140006609:	or     eax,0xffffffff
   14000660c:	test   r9d,r9d
   14000660f:	cmove  edi,eax
   140006612:	cmp    r8d,0x1
   140006616:	sete   bl
   140006619:	call   QWORD PTR [rip+0x4b41]        # 0x14000b160
   14000661f:	mov    DWORD PTR [rsp+0x28],edi
   140006623:	mov    r9d,edi
   140006626:	mov    ecx,eax
   140006628:	mov    QWORD PTR [rsp+0x20],rsi
   14000662d:	mov    r8,rbp
   140006630:	mov    edx,ebx
   140006632:	call   QWORD PTR [rip+0x4c30]        # 0x14000b268
   140006638:	sub    eax,0x2
   14000663b:	jmp    0x140006652
   14000663d:	call   QWORD PTR [rip+0x4a55]        # 0x14000b098
   140006643:	test   eax,eax
   140006645:	jne    0x140006650
   140006647:	lea    ecx,[rax+0x57]
   14000664a:	call   QWORD PTR [rip+0x4a50]        # 0x14000b0a0
   140006650:	xor    eax,eax
   140006652:	mov    rbx,QWORD PTR [rsp+0x40]
   140006657:	mov    rbp,QWORD PTR [rsp+0x48]
   14000665c:	mov    rsi,QWORD PTR [rsp+0x50]
   140006661:	add    rsp,0x30
   140006665:	pop    rdi
   140006666:	ret    
   140006667:	int3   
   140006668:	int3   
   140006669:	int3   
   14000666a:	int3   
   14000666b:	int3   
   14000666c:	int3   
   14000666d:	int3   
   14000666e:	int3   
   14000666f:	int3   
   140006670:	sub    rsp,0x38
   140006674:	test   rcx,rcx
   140006677:	je     0x1400066a3
   140006679:	or     r9d,0xffffffff
   14000667d:	lea    rax,[rip+0x5074]        # 0x14000b6f8
   140006684:	mov    r8,rcx
   140006687:	mov    DWORD PTR [rsp+0x28],r9d
   14000668c:	mov    QWORD PTR [rsp+0x20],rax
   140006691:	lea    edx,[r9+0x2]
   140006695:	lea    ecx,[rdx+0x7e]
   140006698:	call   QWORD PTR [rip+0x4bca]        # 0x14000b268
   14000669e:	sub    eax,0x2
   1400066a1:	jmp    0x1400066b8
   1400066a3:	call   QWORD PTR [rip+0x49ef]        # 0x14000b098
   1400066a9:	test   eax,eax
   1400066ab:	jne    0x1400066b6
   1400066ad:	lea    ecx,[rax+0x57]
   1400066b0:	call   QWORD PTR [rip+0x49ea]        # 0x14000b0a0
   1400066b6:	xor    eax,eax
   1400066b8:	add    rsp,0x38
   1400066bc:	ret    
   1400066bd:	int3   
   1400066be:	int3   
   1400066bf:	int3   
   1400066c0:	int3   
   1400066c1:	int3   
   1400066c2:	int3   
   1400066c3:	int3   
   1400066c4:	mov    rax,rsp
   1400066c7:	mov    QWORD PTR [rax+0x10],rbx
   1400066cb:	mov    QWORD PTR [rax+0x18],rbp
   1400066cf:	mov    QWORD PTR [rax+0x20],rsi
   1400066d3:	push   rdi
   1400066d4:	push   r12
   1400066d6:	push   r13
   1400066d8:	push   r14
   1400066da:	push   r15
   1400066dc:	sub    rsp,0x40
   1400066e0:	xor    r12d,r12d
   1400066e3:	mov    rsi,rdx
   1400066e6:	mov    DWORD PTR [rax+0x8],r12d
   1400066ea:	mov    rdi,rcx
   1400066ed:	test   rcx,rcx
   1400066f0:	je     0x1400069cc
   1400066f6:	test   rdx,rdx
   1400066f9:	je     0x1400069cc
   1400066ff:	call   0x1400062f4
   140006704:	lea    r13d,[r12+0x1]
   140006709:	cmp    eax,r13d
   14000670c:	jne    0x140006837
   140006712:	mov    ecx,r13d
   140006715:	call   0x14000a4f8
   14000671a:	lea    r15d,[r12+0x2]
   14000671f:	cmp    rdi,rax
   140006722:	jne    0x14000672b
   140006724:	mov    ecx,0xfffffff5
   140006729:	jmp    0x140006741
   14000672b:	mov    ecx,r15d
   14000672e:	call   0x14000a4f8
   140006733:	cmp    rdi,rax
   140006736:	jne    0x14000681f
   14000673c:	mov    ecx,0xfffffff4
   140006741:	call   QWORD PTR [rip+0x4a49]        # 0x14000b190
   140006747:	mov    rcx,rsi
   14000674a:	mov    DWORD PTR [rsp+0x70],r12d
   14000674f:	mov    r14,rax
   140006752:	call   QWORD PTR [rip+0x4b40]        # 0x14000b298
   140006758:	lea    r9,[rsp+0x70]
   14000675d:	mov    QWORD PTR [rsp+0x20],r12
   140006762:	mov    r8d,eax
   140006765:	mov    rdx,rsi
   140006768:	mov    rcx,r14
   14000676b:	mov    ebx,eax
   14000676d:	call   QWORD PTR [rip+0x48dd]        # 0x14000b050
   140006773:	test   eax,eax
   140006775:	je     0x14000677d
   140006777:	cmp    ebx,DWORD PTR [rsp+0x70]
   14000677b:	je     0x1400067d9
   14000677d:	call   QWORD PTR [rip+0x4915]        # 0x14000b098
   140006783:	cmp    eax,0x8
   140006786:	jne    0x140006800
   140006788:	mov    rcx,rsi
   14000678b:	call   QWORD PTR [rip+0x4b07]        # 0x14000b298
   140006791:	mov    ebp,eax
   140006793:	mov    ebx,r12d
   140006796:	test   eax,eax
   140006798:	je     0x1400067d9
   14000679a:	mov    eax,0x400
   14000679f:	mov    edi,ebp
   1400067a1:	mov    QWORD PTR [rsp+0x20],r12
   1400067a6:	sub    edi,ebx
   1400067a8:	lea    r9,[rsp+0x70]
   1400067ad:	cmp    edi,eax
   1400067af:	mov    rcx,r14
   1400067b2:	cmova  edi,eax
   1400067b5:	mov    eax,ebx
   1400067b7:	mov    r8d,edi
   1400067ba:	lea    rdx,[rsi+rax*2]
   1400067be:	call   QWORD PTR [rip+0x488c]        # 0x14000b050
   1400067c4:	test   eax,eax
   1400067c6:	je     0x1400067e1
   1400067c8:	cmp    edi,DWORD PTR [rsp+0x70]
   1400067cc:	jne    0x1400067e1
   1400067ce:	mov    eax,0x400
   1400067d3:	add    ebx,eax
   1400067d5:	cmp    ebx,ebp
   1400067d7:	jb     0x14000679f
   1400067d9:	mov    eax,r13d
   1400067dc:	jmp    0x1400069e1
   1400067e1:	mov    ecx,r15d
   1400067e4:	call   0x14000a4f8
   1400067e9:	mov    rcx,rax
   1400067ec:	call   0x1400056bc
   1400067f1:	call   0x1400057b8
   1400067f6:	mov    ecx,r13d
   1400067f9:	call   QWORD PTR [rip+0x49a9]        # 0x14000b1a8
   1400067ff:	int3   
   140006800:	mov    ecx,r15d
   140006803:	call   0x14000a4f8
   140006808:	mov    rcx,rax
   14000680b:	call   0x1400056bc
   140006810:	call   0x1400057b8
   140006815:	mov    ecx,r13d
   140006818:	call   QWORD PTR [rip+0x498a]        # 0x14000b1a8
   14000681e:	int3   
   14000681f:	call   QWORD PTR [rip+0x4873]        # 0x14000b098
   140006825:	test   eax,eax
   140006827:	jne    0x1400069df
   14000682d:	mov    ecx,0x42b
   140006832:	jmp    0x1400069d9
   140006837:	mov    rcx,rsi
   14000683a:	call   QWORD PTR [rip+0x4a58]        # 0x14000b298
   140006840:	xor    edx,edx
   140006842:	lea    rcx,[rip+0x7da7]        # 0x14000e5f0
   140006849:	mov    r8d,0x100
   14000684f:	mov    r14d,eax
   140006852:	call   0x14000a892
   140006857:	mov    ebp,r12d
   14000685a:	test   r14d,r14d
   14000685d:	je     0x1400067d9
   140006863:	mov    eax,0xff
   140006868:	mov    DWORD PTR [rsp+0x70],r12d
   14000686d:	mov    ebx,r14d
   140006870:	sub    ebx,ebp
   140006872:	cmp    ebx,eax
   140006874:	cmova  ebx,eax
   140006877:	mov    eax,ebp
   140006879:	lea    r15,[rsi+rax*2]
   14000687d:	call   QWORD PTR [rip+0x47c5]        # 0x14000b048
   140006883:	mov    QWORD PTR [rsp+0x38],r12
   140006888:	mov    r9d,ebx
   14000688b:	mov    QWORD PTR [rsp+0x30],r12
   140006890:	mov    ecx,eax
   140006892:	mov    DWORD PTR [rsp+0x28],r12d
   140006897:	mov    r8,r15
   14000689a:	xor    edx,edx
   14000689c:	mov    QWORD PTR [rsp+0x20],r12
   1400068a1:	call   QWORD PTR [rip+0x49c9]        # 0x14000b270
   1400068a7:	mov    DWORD PTR [rsp+0x70],eax
   1400068ab:	test   eax,eax
   1400068ad:	je     0x1400069ad
   1400068b3:	cmp    eax,0xff
   1400068b8:	jbe    0x140006909
   1400068ba:	add    eax,0xffffff01
   1400068bf:	cmp    eax,0x3
   1400068c2:	jbe    0x1400068ca
   1400068c4:	shr    eax,1
   1400068c6:	sub    ebx,eax
   1400068c8:	jmp    0x1400068cc
   1400068ca:	dec    ebx
   1400068cc:	mov    DWORD PTR [rsp+0x70],r12d
   1400068d1:	test   ebx,ebx
   1400068d3:	jne    0x14000687d
   1400068d5:	call   QWORD PTR [rip+0x47bd]        # 0x14000b098
   1400068db:	test   eax,eax
   1400068dd:	jne    0x1400068ea
   1400068df:	mov    ecx,0x42b
   1400068e4:	call   QWORD PTR [rip+0x47b6]        # 0x14000b0a0
   1400068ea:	mov    ecx,r13d
   1400068ed:	call   0x14000a4f8
   1400068f2:	mov    rcx,rax
   1400068f5:	call   0x1400056bc
   1400068fa:	call   0x1400057b8
   1400068ff:	mov    ecx,r13d
   140006902:	call   QWORD PTR [rip+0x48a0]        # 0x14000b1a8
   140006908:	int3   
   140006909:	cmp    eax,ebx
   14000690b:	lea    rcx,[rip+0x7cde]        # 0x14000e5f0
   140006912:	mov    r8d,0x100
   140006918:	cmovb  ebx,eax
   14000691b:	xor    edx,edx
   14000691d:	call   0x14000a892
   140006922:	call   QWORD PTR [rip+0x4720]        # 0x14000b048
   140006928:	mov    QWORD PTR [rsp+0x38],r12
   14000692d:	mov    r9d,ebx
   140006930:	mov    ecx,eax
   140006932:	mov    QWORD PTR [rsp+0x30],r12
   140006937:	lea    rax,[rip+0x7cb2]        # 0x14000e5f0
   14000693e:	mov    DWORD PTR [rsp+0x28],0xff
   140006946:	mov    r8,r15
   140006949:	mov    QWORD PTR [rsp+0x20],rax
   14000694e:	xor    edx,edx
   140006950:	call   QWORD PTR [rip+0x491a]        # 0x14000b270
   140006956:	mov    DWORD PTR [rsp+0x70],eax
   14000695a:	test   eax,eax
   14000695c:	je     0x14000698e
   14000695e:	lea    r8,[rip+0x7c8b]        # 0x14000e5f0
   140006965:	mov    rcx,rdi
   140006968:	lea    rdx,[rip+0x4dad]        # 0x14000b71c
   14000696f:	add    ebp,ebx
   140006971:	call   QWORD PTR [rip+0x4a39]        # 0x14000b3b0
   140006977:	mov    rcx,rdi
   14000697a:	call   QWORD PTR [rip+0x4a20]        # 0x14000b3a0
   140006980:	cmp    r14d,ebp
   140006983:	jbe    0x1400067d9
   140006989:	jmp    0x140006863
   14000698e:	mov    ecx,r13d
   140006991:	call   0x14000a4f8
   140006996:	mov    rcx,rax
   140006999:	call   0x1400056bc
   14000699e:	call   0x1400057b8
   1400069a3:	mov    ecx,r13d
   1400069a6:	call   QWORD PTR [rip+0x47fc]        # 0x14000b1a8
   1400069ac:	int3   
   1400069ad:	mov    ecx,r13d
   1400069b0:	call   0x14000a4f8
   1400069b5:	mov    rcx,rax
   1400069b8:	call   0x1400056bc
   1400069bd:	call   0x1400057b8
   1400069c2:	mov    ecx,r13d
   1400069c5:	call   QWORD PTR [rip+0x47dd]        # 0x14000b1a8
   1400069cb:	int3   
   1400069cc:	call   QWORD PTR [rip+0x46c6]        # 0x14000b098
   1400069d2:	test   eax,eax
   1400069d4:	jne    0x1400069df
   1400069d6:	lea    ecx,[rax+0x57]
   1400069d9:	call   QWORD PTR [rip+0x46c1]        # 0x14000b0a0
   1400069df:	xor    eax,eax
   1400069e1:	lea    r11,[rsp+0x40]
   1400069e6:	mov    rbx,QWORD PTR [r11+0x38]
   1400069ea:	mov    rbp,QWORD PTR [r11+0x40]
   1400069ee:	mov    rsi,QWORD PTR [r11+0x48]
   1400069f2:	mov    rsp,r11
   1400069f5:	pop    r15
   1400069f7:	pop    r14
   1400069f9:	pop    r13
   1400069fb:	pop    r12
   1400069fd:	pop    rdi
   1400069fe:	ret    
   1400069ff:	int3   
   140006a00:	int3   
   140006a01:	int3   
   140006a02:	int3   
   140006a03:	int3   
   140006a04:	int3   
   140006a05:	int3   
   140006a06:	int3   
   140006a07:	int3   
   140006a08:	mov    QWORD PTR [rsp+0x20],r9
   140006a0d:	push   rbx
   140006a0e:	push   rbp
   140006a0f:	push   rsi
   140006a10:	push   rdi
   140006a11:	push   r14
   140006a13:	push   r15
   140006a15:	sub    rsp,0x58
   140006a19:	xor    r15d,r15d
   140006a1c:	mov    r14,rcx
   140006a1f:	test   r9,r9
   140006a22:	je     0x140006be7
   140006a28:	test   rcx,rcx
   140006a2b:	je     0x140006be7
   140006a31:	test   edx,edx
   140006a33:	jne    0x140006a42
   140006a35:	mov    rdx,r9
   140006a38:	call   0x1400066c4
   140006a3d:	jmp    0x140006bfc
   140006a42:	test   r8d,r8d
   140006a45:	jne    0x140006b32
   140006a4b:	or     ebx,0xffffffff
   140006a4e:	mov    esi,r15d
   140006a51:	lea    rax,[rsp+0xb0]
   140006a59:	mov    QWORD PTR [rsp+0x40],rax
   140006a5e:	test   rax,rax
   140006a61:	je     0x140006b1a
   140006a67:	mov    ecx,0x1000
   140006a6c:	mov    eax,0x800
   140006a71:	cmp    ebx,0xffffffff
   140006a74:	mov    r9d,0x1
   140006a7a:	cmove  eax,ecx
   140006a7d:	xor    edx,edx
   140006a7f:	add    esi,eax
   140006a81:	mov    r8d,esi
   140006a84:	lea    ecx,[rdx+0x3]
   140006a87:	call   0x140005134
   140006a8c:	mov    rdi,rax
   140006a8f:	test   rax,rax
   140006a92:	je     0x140006b04
   140006a94:	mov    rdx,QWORD PTR [rsp+0xa8]
   140006a9c:	lea    ecx,[rsi-0x1]
   140006a9f:	lea    rax,[rsp+0x40]
   140006aa4:	xor    r9d,r9d
   140006aa7:	mov    QWORD PTR [rsp+0x30],rax
   140006aac:	xor    r8d,r8d
   140006aaf:	mov    DWORD PTR [rsp+0x28],ecx
   140006ab3:	mov    ecx,0x400
   140006ab8:	mov    QWORD PTR [rsp+0x20],rdi
   140006abd:	call   QWORD PTR [rip+0x46ad]        # 0x14000b170
   140006ac3:	mov    ebx,eax
   140006ac5:	test   eax,eax
   140006ac7:	jne    0x140006ae2
   140006ac9:	call   QWORD PTR [rip+0x45c9]        # 0x14000b098
   140006acf:	test   eax,eax
   140006ad1:	je     0x140006afa
   140006ad3:	call   QWORD PTR [rip+0x45bf]        # 0x14000b098
   140006ad9:	cmp    eax,0x7a
   140006adc:	jne    0x140006bfa
   140006ae2:	mov    QWORD PTR [rsp+0x40],r15
   140006ae7:	test   ebx,ebx
   140006ae9:	je     0x140006a51
   140006aef:	mov    rdx,rdi
   140006af2:	mov    rcx,r14
   140006af5:	jmp    0x140006a38
   140006afa:	mov    eax,0x1
   140006aff:	jmp    0x140006bfc
   140006b04:	call   QWORD PTR [rip+0x458e]        # 0x14000b098
   140006b0a:	test   eax,eax
   140006b0c:	jne    0x140006bfa
   140006b12:	lea    ecx,[rax+0x8]
   140006b15:	jmp    0x140006bf4
   140006b1a:	call   QWORD PTR [rip+0x4578]        # 0x14000b098
   140006b20:	test   eax,eax
   140006b22:	jne    0x140006bfa
   140006b28:	mov    ecx,0x42b
   140006b2d:	jmp    0x140006bf4
   140006b32:	mov    ebp,r15d
   140006b35:	lea    rax,[rsp+0xb0]
   140006b3d:	mov    QWORD PTR [rsp+0x40],rax
   140006b42:	test   rax,rax
   140006b45:	je     0x140006b1a
   140006b47:	xor    edx,edx
   140006b49:	add    ebp,0x800
   140006b4f:	mov    r9d,0x1
   140006b55:	mov    r8d,ebp
   140006b58:	lea    ecx,[rdx+0x3]
   140006b5b:	call   0x140005134
   140006b60:	mov    rdi,rax
   140006b63:	test   rax,rax
   140006b66:	je     0x140006b04
   140006b68:	lea    rax,[rbp-0x1]
   140006b6c:	mov    ebx,r15d
   140006b6f:	cmp    rax,0x7ffffffe
   140006b75:	mov    edx,0x80070057
   140006b7a:	cmova  ebx,edx
   140006b7d:	test   ebx,ebx
   140006b7f:	js     0x140006bc1
   140006b81:	mov    r9,QWORD PTR [rsp+0x40]
   140006b86:	lea    rsi,[rbp-0x1]
   140006b8a:	mov    r8,QWORD PTR [rsp+0xa8]
   140006b92:	mov    rdx,rsi
   140006b95:	mov    rcx,rdi
   140006b98:	mov    ebx,r15d
   140006b9b:	call   QWORD PTR [rip+0x485f]        # 0x14000b400
   140006ba1:	test   eax,eax
   140006ba3:	js     0x140006bb5
   140006ba5:	cdqe   
   140006ba7:	cmp    rax,rsi
   140006baa:	ja     0x140006bb5
   140006bac:	jne    0x140006bc9
   140006bae:	mov    WORD PTR [rdi+rsi*2],r15w
   140006bb3:	jmp    0x140006bc9
   140006bb5:	mov    WORD PTR [rdi+rsi*2],r15w
   140006bba:	mov    ebx,0x8007007a
   140006bbf:	jmp    0x140006bc9
   140006bc1:	test   ebp,ebp
   140006bc3:	je     0x140006bc9
   140006bc5:	mov    WORD PTR [rdi],r15w
   140006bc9:	mov    QWORD PTR [rsp+0x40],r15
   140006bce:	cmp    ebx,0x8007007a
   140006bd4:	je     0x140006b35
   140006bda:	test   ebx,ebx
   140006bdc:	jns    0x140006aef
   140006be2:	movzx  ecx,bx
   140006be5:	jmp    0x140006bf4
   140006be7:	call   QWORD PTR [rip+0x44ab]        # 0x14000b098
   140006bed:	test   eax,eax
   140006bef:	jne    0x140006bfa
   140006bf1:	lea    ecx,[rax+0x57]
   140006bf4:	call   QWORD PTR [rip+0x44a6]        # 0x14000b0a0
   140006bfa:	xor    eax,eax
   140006bfc:	add    rsp,0x58
   140006c00:	pop    r15
   140006c02:	pop    r14
   140006c04:	pop    rdi
   140006c05:	pop    rsi
   140006c06:	pop    rbp
   140006c07:	pop    rbx
   140006c08:	ret    
   140006c09:	int3   
   140006c0a:	int3   
   140006c0b:	int3   
   140006c0c:	int3   
   140006c0d:	int3   
   140006c0e:	int3   
   140006c0f:	int3   
   140006c10:	mov    QWORD PTR [rsp+0x8],rbx
   140006c15:	mov    QWORD PTR [rsp+0x10],rbp
   140006c1a:	mov    QWORD PTR [rsp+0x18],rsi
   140006c1f:	push   rdi
   140006c20:	sub    rsp,0x30
   140006c24:	xor    ebx,ebx
   140006c26:	mov    rsi,r8
   140006c29:	mov    rdi,rdx
   140006c2c:	mov    rbp,rcx
   140006c2f:	test   rcx,rcx
   140006c32:	je     0x140006cfb
   140006c38:	test   r8,r8
   140006c3b:	je     0x140006cfb
   140006c41:	test   rdx,rdx
   140006c44:	jne    0x140006c4f
   140006c46:	cmp    DWORD PTR [r8],ebx
   140006c49:	jne    0x140006cfb
   140006c4f:	mov    eax,DWORD PTR [r8]
   140006c52:	test   eax,eax
   140006c54:	je     0x140006c62
   140006c56:	cmp    eax,0x1
   140006c59:	jbe    0x140006ce0
   140006c5f:	lea    ebx,[rax-0x1]
   140006c62:	test   rdx,rdx
   140006c65:	je     0x140006c7c
   140006c67:	test   ebx,ebx
   140006c69:	je     0x140006c7c
   140006c6b:	lea    r8d,[rbx+0x1]
   140006c6f:	xor    edx,edx
   140006c71:	add    r8,r8
   140006c74:	mov    rcx,rdi
   140006c77:	call   0x14000a892
   140006c7c:	or     eax,0xffffffff
   140006c7f:	test   ebx,ebx
   140006c81:	je     0x140006c91
   140006c83:	mov    rcx,rbp
   140006c86:	call   QWORD PTR [rip+0x4614]        # 0x14000b2a0
   140006c8c:	cmp    eax,ebx
   140006c8e:	cmovg  eax,ebx
   140006c91:	xor    edx,edx
   140006c93:	mov    DWORD PTR [rsp+0x28],ebx
   140006c97:	mov    r9d,eax
   140006c9a:	mov    QWORD PTR [rsp+0x20],rdi
   140006c9f:	mov    r8,rbp
   140006ca2:	lea    ecx,[rdx+0x1]
   140006ca5:	call   QWORD PTR [rip+0x45cd]        # 0x14000b278
   140006cab:	test   eax,eax
   140006cad:	jne    0x140006cf7
   140006caf:	call   QWORD PTR [rip+0x43e3]        # 0x14000b098
   140006cb5:	test   eax,eax
   140006cb7:	jne    0x140006cc4
   140006cb9:	mov    ecx,0x42b
   140006cbe:	call   QWORD PTR [rip+0x43dc]        # 0x14000b0a0
   140006cc4:	test   rdi,rdi
   140006cc7:	je     0x140006d0e
   140006cc9:	test   ebx,ebx
   140006ccb:	je     0x140006d0e
   140006ccd:	lea    r8d,[rbx+0x1]
   140006cd1:	xor    edx,edx
   140006cd3:	add    r8,r8
   140006cd6:	mov    rcx,rdi
   140006cd9:	call   0x14000a892
   140006cde:	jmp    0x140006d0e
   140006ce0:	mov    r8,rax
   140006ce3:	xor    edx,edx
   140006ce5:	add    r8,r8
   140006ce8:	mov    rcx,rdi
   140006ceb:	call   0x14000a892
   140006cf0:	mov    eax,0x1
   140006cf5:	jmp    0x140006d10
   140006cf7:	mov    DWORD PTR [rsi],eax
   140006cf9:	jmp    0x140006cf0
   140006cfb:	call   QWORD PTR [rip+0x4397]        # 0x14000b098
   140006d01:	test   eax,eax
   140006d03:	jne    0x140006d0e
   140006d05:	lea    ecx,[rax+0x57]
   140006d08:	call   QWORD PTR [rip+0x4392]        # 0x14000b0a0
   140006d0e:	xor    eax,eax
   140006d10:	mov    rbx,QWORD PTR [rsp+0x40]
   140006d15:	mov    rbp,QWORD PTR [rsp+0x48]
   140006d1a:	mov    rsi,QWORD PTR [rsp+0x50]
   140006d1f:	add    rsp,0x30
   140006d23:	pop    rdi
   140006d24:	ret    
   140006d25:	int3   
   140006d26:	int3   
   140006d27:	int3   
   140006d28:	int3   
   140006d29:	int3   
   140006d2a:	int3   
   140006d2b:	int3   
   140006d2c:	mov    QWORD PTR [rsp+0x10],rbx
   140006d31:	mov    QWORD PTR [rsp+0x18],rsi
   140006d36:	mov    QWORD PTR [rsp+0x20],rdi
   140006d3b:	push   rbp
   140006d3c:	push   r12
   140006d3e:	push   r13
   140006d40:	push   r14
   140006d42:	push   r15
   140006d44:	mov    rbp,rsp
   140006d47:	sub    rsp,0x80
   140006d4e:	mov    rax,QWORD PTR [rip+0x72b3]        # 0x14000e008
   140006d55:	xor    rax,rsp
   140006d58:	mov    QWORD PTR [rbp-0x10],rax
   140006d5c:	xor    r12d,r12d
   140006d5f:	xor    eax,eax
   140006d61:	mov    DWORD PTR [rbp-0x48],r12d
   140006d65:	mov    r15d,edx
   140006d68:	mov    DWORD PTR [rbp-0x4c],r12d
   140006d6c:	mov    r14,rcx
   140006d6f:	mov    DWORD PTR [rbp-0x40],r12d
   140006d73:	mov    edi,r12d
   140006d76:	mov    WORD PTR [rbp-0x20],r12w
   140006d7b:	mov    QWORD PTR [rbp-0x1e],rax
   140006d7f:	mov    DWORD PTR [rbp-0x38],r12d
   140006d83:	mov    QWORD PTR [rbp-0x34],rax
   140006d87:	mov    QWORD PTR [rbp-0x2c],rax
   140006d8b:	test   rcx,rcx
   140006d8e:	jne    0x140006dac
   140006d90:	call   QWORD PTR [rip+0x4302]        # 0x14000b098
   140006d96:	test   eax,eax
   140006d98:	jne    0x140007017
   140006d9e:	lea    ecx,[rax+0x57]
   140006da1:	call   QWORD PTR [rip+0x42f9]        # 0x14000b0a0
   140006da7:	jmp    0x140007017
   140006dac:	mov    ecx,0xfffffff6
   140006db1:	call   QWORD PTR [rip+0x43d9]        # 0x14000b190
   140006db7:	mov    rbx,rax
   140006dba:	test   rax,rax
   140006dbd:	je     0x140007017
   140006dc3:	lea    rdx,[rbp-0x40]
   140006dc7:	mov    rcx,rax
   140006dca:	call   0x14000629c
   140006dcf:	test   eax,eax
   140006dd1:	mov    esi,r12d
   140006dd4:	mov    r13d,0x1
   140006dda:	sete   sil
   140006dde:	test   esi,esi
   140006de0:	jne    0x140006df6
   140006de2:	mov    edx,r13d
   140006de5:	mov    rcx,rbx
   140006de8:	call   QWORD PTR [rip+0x4272]        # 0x14000b060
   140006dee:	test   eax,eax
   140006df0:	je     0x140007017
   140006df6:	xor    eax,eax
   140006df8:	movsxd rsi,esi
   140006dfb:	mov    QWORD PTR [rbp-0x20],rax
   140006dff:	mov    WORD PTR [rbp-0x18],ax
   140006e03:	mov    QWORD PTR [rbp-0x38],rax
   140006e07:	mov    QWORD PTR [rbp-0x30],rax
   140006e0b:	mov    DWORD PTR [rbp-0x28],eax
   140006e0e:	mov    QWORD PTR [rsp+0x20],r12
   140006e13:	lea    r9,[rbp-0x48]
   140006e17:	mov    r8d,r13d
   140006e1a:	mov    rcx,rbx
   140006e1d:	cmp    rsi,r13
   140006e20:	jne    0x140006e66
   140006e22:	lea    rdx,[rbp-0x50]
   140006e26:	call   QWORD PTR [rip+0x4294]        # 0x14000b0c0
   140006e2c:	test   eax,eax
   140006e2e:	je     0x140007017
   140006e34:	cmp    DWORD PTR [rbp-0x48],r12d
   140006e38:	je     0x140006fb6
   140006e3e:	mov    al,BYTE PTR [rbp-0x50]
   140006e41:	lea    r8,[rbp-0x48]
   140006e45:	lea    rdx,[rbp-0x38]
   140006e49:	mov    BYTE PTR [rbp-0x20],al
   140006e4c:	lea    rcx,[rbp-0x20]
   140006e50:	mov    DWORD PTR [rbp-0x48],0xa
   140006e57:	call   0x140006c10
   140006e5c:	movzx  ecx,WORD PTR [rbp-0x38]
   140006e60:	mov    WORD PTR [rbp-0x44],cx
   140006e64:	jmp    0x140006e7c
   140006e66:	lea    rdx,[rbp-0x44]
   140006e6a:	call   QWORD PTR [rip+0x41f8]        # 0x14000b068
   140006e70:	test   eax,eax
   140006e72:	je     0x14000700b
   140006e78:	movzx  ecx,WORD PTR [rbp-0x44]
   140006e7c:	cmp    cx,0xd
   140006e80:	je     0x140006fb6
   140006e86:	mov    eax,0x8
   140006e8b:	cmp    cx,ax
   140006e8e:	jne    0x140006f56
   140006e94:	test   edi,edi
   140006e96:	je     0x140006e0e
   140006e9c:	mov    r9d,eax
   140006e9f:	lea    r8,[rip+0x487a]        # 0x14000b720
   140006ea6:	lea    edx,[rax+0x2]
   140006ea9:	lea    rcx,[rbp-0x38]
   140006ead:	call   0x140001008
   140006eb2:	mov    ecx,0xfffffff5
   140006eb7:	call   QWORD PTR [rip+0x42d3]        # 0x14000b190
   140006ebd:	lea    r9,[rbp-0x4c]
   140006ec1:	mov    QWORD PTR [rsp+0x20],r12
   140006ec6:	mov    rcx,rax
   140006ec9:	lea    rdx,[rbp-0x38]
   140006ecd:	mov    r8d,r13d
   140006ed0:	call   QWORD PTR [rip+0x417a]        # 0x14000b050
   140006ed6:	xor    r9d,r9d
   140006ed9:	lea    r8,[rip+0x4840]        # 0x14000b720
   140006ee0:	lea    rcx,[rbp-0x38]
   140006ee4:	lea    edx,[r9+0xa]
   140006ee8:	call   0x140001008
   140006eed:	mov    ecx,0xfffffff5
   140006ef2:	call   QWORD PTR [rip+0x4298]        # 0x14000b190
   140006ef8:	lea    r9,[rbp-0x4c]
   140006efc:	mov    QWORD PTR [rsp+0x20],r12
   140006f01:	mov    rcx,rax
   140006f04:	lea    rdx,[rbp-0x38]
   140006f08:	mov    r8d,r13d
   140006f0b:	call   QWORD PTR [rip+0x413f]        # 0x14000b050
   140006f11:	mov    r9d,0x8
   140006f17:	lea    r8,[rip+0x4802]        # 0x14000b720
   140006f1e:	lea    rcx,[rbp-0x38]
   140006f22:	lea    edx,[r9+0x2]
   140006f26:	call   0x140001008
   140006f2b:	mov    ecx,0xfffffff5
   140006f30:	call   QWORD PTR [rip+0x425a]        # 0x14000b190
   140006f36:	lea    r9,[rbp-0x4c]
   140006f3a:	mov    QWORD PTR [rsp+0x20],r12
   140006f3f:	mov    rcx,rax
   140006f42:	lea    rdx,[rbp-0x38]
   140006f46:	mov    r8d,r13d
   140006f49:	call   QWORD PTR [rip+0x4101]        # 0x14000b050
   140006f4f:	dec    edi
   140006f51:	jmp    0x140006e0e
   140006f56:	lea    eax,[r15-0x1]
   140006f5a:	cmp    edi,eax
   140006f5c:	jne    0x140006f72
   140006f5e:	mov    ecx,0xfffffff5
   140006f63:	call   QWORD PTR [rip+0x4227]        # 0x14000b190
   140006f69:	lea    rdx,[rip+0x47b8]        # 0x14000b728
   140006f70:	jmp    0x140006f9c
   140006f72:	mov    eax,0xa
   140006f77:	cmp    cx,ax
   140006f7a:	je     0x140006e0e
   140006f80:	mov    eax,edi
   140006f82:	add    edi,r13d
   140006f85:	mov    WORD PTR [r14+rax*2],cx
   140006f8a:	mov    ecx,0xfffffff5
   140006f8f:	call   QWORD PTR [rip+0x41fb]        # 0x14000b190
   140006f95:	lea    rdx,[rip+0x475c]        # 0x14000b6f8
   140006f9c:	mov    r8d,r13d
   140006f9f:	mov    QWORD PTR [rsp+0x20],r12
   140006fa4:	lea    r9,[rbp-0x4c]
   140006fa8:	mov    rcx,rax
   140006fab:	call   QWORD PTR [rip+0x409f]        # 0x14000b050
   140006fb1:	jmp    0x140006e0e
   140006fb6:	mov    edx,DWORD PTR [rbp-0x40]
   140006fb9:	mov    rcx,rbx
   140006fbc:	mov    eax,edi
   140006fbe:	mov    WORD PTR [r14+rax*2],r12w
   140006fc3:	call   QWORD PTR [rip+0x4097]        # 0x14000b060
   140006fc9:	mov    r8d,0xa
   140006fcf:	lea    rdx,[rip+0x4756]        # 0x14000b72c
   140006fd6:	lea    rcx,[rbp-0x38]
   140006fda:	call   0x140006448
   140006fdf:	mov    ecx,0xfffffff5
   140006fe4:	call   QWORD PTR [rip+0x41a6]        # 0x14000b190
   140006fea:	lea    r9,[rbp-0x4c]
   140006fee:	mov    QWORD PTR [rsp+0x20],r12
   140006ff3:	mov    rcx,rax
   140006ff6:	lea    rdx,[rbp-0x38]
   140006ffa:	mov    r8d,0x2
   140007000:	call   QWORD PTR [rip+0x404a]        # 0x14000b050
   140007006:	mov    eax,r13d
   140007009:	jmp    0x140007019
   14000700b:	mov    edx,DWORD PTR [rbp-0x40]
   14000700e:	mov    rcx,rbx
   140007011:	call   QWORD PTR [rip+0x4049]        # 0x14000b060
   140007017:	xor    eax,eax
   140007019:	mov    rcx,QWORD PTR [rbp-0x10]
   14000701d:	xor    rcx,rsp
   140007020:	call   0x140009fe0
   140007025:	lea    r11,[rsp+0x80]
   14000702d:	mov    rbx,QWORD PTR [r11+0x38]
   140007031:	mov    rsi,QWORD PTR [r11+0x40]
   140007035:	mov    rdi,QWORD PTR [r11+0x48]
   140007039:	mov    rsp,r11
   14000703c:	pop    r15
   14000703e:	pop    r14
   140007040:	pop    r13
   140007042:	pop    r12
   140007044:	pop    rbp
   140007045:	ret    
   140007046:	int3   
   140007047:	int3   
   140007048:	int3   
   140007049:	int3   
   14000704a:	int3   
   14000704b:	int3   
   14000704c:	mov    QWORD PTR [rsp+0x8],rbx
   140007051:	push   rdi
   140007052:	sub    rsp,0x20
   140007056:	mov    rbx,rcx
   140007059:	test   rcx,rcx
   14000705c:	jne    0x140007075
   14000705e:	call   QWORD PTR [rip+0x4034]        # 0x14000b098
   140007064:	test   eax,eax
   140007066:	jne    0x140007071
   140007068:	lea    ecx,[rbx+0x57]
   14000706b:	call   QWORD PTR [rip+0x402f]        # 0x14000b0a0
   140007071:	xor    eax,eax
   140007073:	jmp    0x1400070c3
   140007075:	cmp    QWORD PTR [rcx],0x0
   140007079:	jne    0x140007082
   14000707b:	mov    eax,0x1
   140007080:	jmp    0x1400070c3
   140007082:	call   QWORD PTR [rip+0x4068]        # 0x14000b0f0
   140007088:	mov    rdi,rax
   14000708b:	test   rax,rax
   14000708e:	je     0x140007071
   140007090:	mov    rcx,QWORD PTR [rbx]
   140007093:	call   0x1400072d0
   140007098:	cmp    eax,0xffffffff
   14000709b:	jne    0x1400070a4
   14000709d:	mov    ecx,0x80004003
   1400070a2:	jmp    0x14000706b
   1400070a4:	mov    rcx,QWORD PTR [rbx]
   1400070a7:	xor    edx,edx
   1400070a9:	movsxd r8,eax
   1400070ac:	call   0x14000a892
   1400070b1:	mov    r8,QWORD PTR [rbx]
   1400070b4:	xor    edx,edx
   1400070b6:	mov    rcx,rdi
   1400070b9:	call   QWORD PTR [rip+0x4039]        # 0x14000b0f8
   1400070bf:	and    QWORD PTR [rbx],0x0
   1400070c3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400070c8:	add    rsp,0x20
   1400070cc:	pop    rdi
   1400070cd:	ret    
   1400070ce:	int3   
   1400070cf:	int3   
   1400070d0:	int3   
   1400070d1:	int3   
   1400070d2:	int3   
   1400070d3:	int3   
   1400070d4:	rex push rbx
   1400070d6:	sub    rsp,0x20
   1400070da:	mov    rbx,rcx
   1400070dd:	test   rcx,rcx
   1400070e0:	jne    0x1400070f1
   1400070e2:	call   QWORD PTR [rip+0x3fb0]        # 0x14000b098
   1400070e8:	test   eax,eax
   1400070ea:	jne    0x140007117
   1400070ec:	lea    ecx,[rbx+0x57]
   1400070ef:	jmp    0x140007111
   1400070f1:	call   QWORD PTR [rip+0x3ff9]        # 0x14000b0f0
   1400070f7:	test   rax,rax
   1400070fa:	je     0x140007117
   1400070fc:	mov    r8,rbx
   1400070ff:	xor    edx,edx
   140007101:	mov    rcx,rax
   140007104:	call   QWORD PTR [rip+0x3ff6]        # 0x14000b100
   14000710a:	test   eax,eax
   14000710c:	jne    0x140007119
   14000710e:	lea    ecx,[rax+0x6]
   140007111:	call   QWORD PTR [rip+0x3f89]        # 0x14000b0a0
   140007117:	xor    eax,eax
   140007119:	add    rsp,0x20
   14000711d:	pop    rbx
   14000711e:	ret    
   14000711f:	int3   
   140007120:	int3   
   140007121:	int3   
   140007122:	int3   
   140007123:	int3   
   140007124:	int3   
   140007125:	int3   
   140007126:	int3   
   140007127:	int3   
   140007128:	rex push rbx
   14000712a:	sub    rsp,0x30
   14000712e:	mov    ebx,ecx
   140007130:	test   ecx,ecx
   140007132:	jne    0x14000714b
   140007134:	call   QWORD PTR [rip+0x3f5e]        # 0x14000b098
   14000713a:	test   eax,eax
   14000713c:	jne    0x140007147
   14000713e:	lea    ecx,[rax+0x57]
   140007141:	call   QWORD PTR [rip+0x3f59]        # 0x14000b0a0
   140007147:	xor    eax,eax
   140007149:	jmp    0x1400071bc
   14000714b:	call   QWORD PTR [rip+0x3f9f]        # 0x14000b0f0
   140007151:	test   rax,rax
   140007154:	je     0x140007147
   140007156:	mov    r8,rbx
   140007159:	mov    edx,0xc
   14000715e:	mov    rcx,rax
   140007161:	call   QWORD PTR [rip+0x3fa1]        # 0x14000b108
   140007167:	mov    QWORD PTR [rsp+0x20],rax
   14000716c:	jmp    0x1400071bc
   14000716e:	cmp    eax,0xc0000017
   140007173:	jne    0x14000718c
   140007175:	call   QWORD PTR [rip+0x3f1d]        # 0x14000b098
   14000717b:	test   eax,eax
   14000717d:	jne    0x140007188
   14000717f:	lea    ecx,[rax+0x8]
   140007182:	call   QWORD PTR [rip+0x3f18]        # 0x14000b0a0
   140007188:	xor    eax,eax
   14000718a:	jmp    0x1400071bc
   14000718c:	cmp    eax,0xc0000005
   140007191:	jne    0x1400071a7
   140007193:	mov    ecx,0x570
   140007198:	call   QWORD PTR [rip+0x3f02]        # 0x14000b0a0
   14000719e:	call   0x140005550
   1400071a3:	xor    eax,eax
   1400071a5:	jmp    0x1400071bc
   1400071a7:	call   QWORD PTR [rip+0x3eeb]        # 0x14000b098
   1400071ad:	test   eax,eax
   1400071af:	jne    0x1400071ba
   1400071b1:	lea    ecx,[rax+0x8]
   1400071b4:	call   QWORD PTR [rip+0x3ee6]        # 0x14000b0a0
   1400071ba:	xor    eax,eax
   1400071bc:	add    rsp,0x30
   1400071c0:	pop    rbx
   1400071c1:	ret    
   1400071c2:	int3   
   1400071c3:	int3   
   1400071c4:	int3   
   1400071c5:	int3   
   1400071c6:	int3   
   1400071c7:	int3   
   1400071c8:	mov    QWORD PTR [rsp+0x8],rbx
   1400071cd:	push   rdi
   1400071ce:	sub    rsp,0x20
   1400071d2:	mov    edi,edx
   1400071d4:	mov    rbx,rcx
   1400071d7:	test   rcx,rcx
   1400071da:	je     0x1400072a8
   1400071e0:	mov    rcx,QWORD PTR [rcx]
   1400071e3:	test   rcx,rcx
   1400071e6:	je     0x1400072a8
   1400071ec:	test   edx,edx
   1400071ee:	jne    0x1400071fd
   1400071f0:	mov    rcx,rbx
   1400071f3:	call   0x14000704c
   1400071f8:	jmp    0x1400072bd
   1400071fd:	call   0x1400070d4
   140007202:	test   eax,eax
   140007204:	jne    0x14000720f
   140007206:	and    QWORD PTR [rbx],0x0
   14000720a:	jmp    0x1400072bb
   14000720f:	call   QWORD PTR [rip+0x3edb]        # 0x14000b0f0
   140007215:	test   rax,rax
   140007218:	je     0x1400072bb
   14000721e:	mov    r9,rdi
   140007221:	mov    r8,QWORD PTR [rbx]
   140007224:	mov    edx,0xc
   140007229:	mov    rcx,rax
   14000722c:	call   QWORD PTR [rip+0x3ede]        # 0x14000b110
   140007232:	test   rax,rax
   140007235:	jne    0x14000724e
   140007237:	call   QWORD PTR [rip+0x3e5b]        # 0x14000b098
   14000723d:	test   eax,eax
   14000723f:	jne    0x14000724a
   140007241:	lea    ecx,[rax+0x8]
   140007244:	call   QWORD PTR [rip+0x3e56]        # 0x14000b0a0
   14000724a:	xor    eax,eax
   14000724c:	jmp    0x1400072bd
   14000724e:	mov    QWORD PTR [rbx],rax
   140007251:	mov    eax,0x1
   140007256:	jmp    0x1400072bd
   140007258:	cmp    eax,0xc0000017
   14000725d:	jne    0x140007276
   14000725f:	call   QWORD PTR [rip+0x3e33]        # 0x14000b098
   140007265:	test   eax,eax
   140007267:	jne    0x140007272
   140007269:	lea    ecx,[rax+0x8]
   14000726c:	call   QWORD PTR [rip+0x3e2e]        # 0x14000b0a0
   140007272:	xor    eax,eax
   140007274:	jmp    0x1400072bd
   140007276:	cmp    eax,0xc0000005
   14000727b:	jne    0x140007291
   14000727d:	mov    ecx,0x570
   140007282:	call   QWORD PTR [rip+0x3e18]        # 0x14000b0a0
   140007288:	call   0x140005550
   14000728d:	xor    eax,eax
   14000728f:	jmp    0x1400072bd
   140007291:	call   QWORD PTR [rip+0x3e01]        # 0x14000b098
   140007297:	test   eax,eax
   140007299:	jne    0x1400072a4
   14000729b:	lea    ecx,[rax+0x8]
   14000729e:	call   QWORD PTR [rip+0x3dfc]        # 0x14000b0a0
   1400072a4:	xor    eax,eax
   1400072a6:	jmp    0x1400072bd
   1400072a8:	call   QWORD PTR [rip+0x3dea]        # 0x14000b098
   1400072ae:	test   eax,eax
   1400072b0:	jne    0x1400072bb
   1400072b2:	lea    ecx,[rax+0x57]
   1400072b5:	call   QWORD PTR [rip+0x3de5]        # 0x14000b0a0
   1400072bb:	xor    eax,eax
   1400072bd:	mov    rbx,QWORD PTR [rsp+0x30]
   1400072c2:	add    rsp,0x20
   1400072c6:	pop    rdi
   1400072c7:	ret    
   1400072c8:	int3   
   1400072c9:	int3   
   1400072ca:	int3   
   1400072cb:	int3   
   1400072cc:	int3   
   1400072cd:	int3   
   1400072ce:	int3   
   1400072cf:	int3   
   1400072d0:	rex push rbx
   1400072d2:	sub    rsp,0x20
   1400072d6:	mov    rbx,rcx
   1400072d9:	test   rcx,rcx
   1400072dc:	jne    0x1400072fa
   1400072de:	call   QWORD PTR [rip+0x3db4]        # 0x14000b098
   1400072e4:	test   eax,eax
   1400072e6:	jne    0x1400072f1
   1400072e8:	lea    ecx,[rbx+0x57]
   1400072eb:	call   QWORD PTR [rip+0x3daf]        # 0x14000b0a0
   1400072f1:	or     eax,0xffffffff
   1400072f4:	add    rsp,0x20
   1400072f8:	pop    rbx
   1400072f9:	ret    
   1400072fa:	call   0x1400070d4
   1400072ff:	test   eax,eax
   140007301:	je     0x1400072f1
   140007303:	call   QWORD PTR [rip+0x3de7]        # 0x14000b0f0
   140007309:	test   rax,rax
   14000730c:	je     0x1400072f1
   14000730e:	mov    r8,rbx
   140007311:	xor    edx,edx
   140007313:	mov    rcx,rax
   140007316:	add    rsp,0x20
   14000731a:	pop    rbx
   14000731b:	rex.W jmp QWORD PTR [rip+0x3df6]        # 0x14000b118
   140007322:	int3   
   140007323:	int3   
   140007324:	int3   
   140007325:	int3   
   140007326:	int3   
   140007327:	int3   
   140007328:	mov    r9,r8
   14000732b:	test   rcx,rcx
   14000732e:	je     0x14000735e
   140007330:	cmp    DWORD PTR [rcx],0x9
   140007333:	jne    0x14000735e
   140007335:	cmp    DWORD PTR [rcx+0x4],edx
   140007338:	jbe    0x14000735e
   14000733a:	mov    rax,QWORD PTR [rcx+0x8]
   14000733e:	xor    r8d,r8d
   140007341:	cmp    edx,0x1
   140007344:	jb     0x140007355
   140007346:	mov    ecx,edx
   140007348:	mov    r8,rax
   14000734b:	mov    rax,QWORD PTR [rax+0x18]
   14000734f:	sub    rcx,0x1
   140007353:	jne    0x140007348
   140007355:	test   r9,r9
   140007358:	je     0x140007360
   14000735a:	mov    QWORD PTR [r9],r8
   14000735d:	ret    
   14000735e:	xor    eax,eax
   140007360:	ret    
   140007361:	int3   
   140007362:	int3   
   140007363:	int3   
   140007364:	int3   
   140007365:	int3   
   140007366:	int3   
   140007367:	int3   
   140007368:	mov    QWORD PTR [rsp+0x8],rbx
   14000736d:	mov    QWORD PTR [rsp+0x10],rbp
   140007372:	mov    QWORD PTR [rsp+0x18],rsi
   140007377:	push   rdi
   140007378:	sub    rsp,0x20
   14000737c:	mov    rdi,r9
   14000737f:	mov    esi,r8d
   140007382:	mov    ebp,edx
   140007384:	mov    rbx,rcx
   140007387:	test   rcx,rcx
   14000738a:	je     0x1400073e5
   14000738c:	cmp    DWORD PTR [rcx],0x9
   14000738f:	jne    0x1400073e5
   140007391:	cmp    DWORD PTR [rcx+0x4],0xffffffff
   140007395:	je     0x1400073e5
   140007397:	mov    ecx,0x20
   14000739c:	call   0x140007128
   1400073a1:	mov    rcx,rax
   1400073a4:	test   rax,rax
   1400073a7:	je     0x1400073e5
   1400073a9:	and    QWORD PTR [rax+0x18],0x0
   1400073ae:	mov    DWORD PTR [rax+0x4],ebp
   1400073b1:	mov    DWORD PTR [rax+0x8],esi
   1400073b4:	mov    QWORD PTR [rax+0x10],rdi
   1400073b8:	mov    DWORD PTR [rax],0x63
   1400073be:	inc    DWORD PTR [rbx+0x4]
   1400073c1:	cmp    QWORD PTR [rbx+0x8],0x0
   1400073c6:	jne    0x1400073d2
   1400073c8:	mov    QWORD PTR [rbx+0x10],rax
   1400073cc:	mov    QWORD PTR [rbx+0x8],rax
   1400073d0:	jmp    0x1400073de
   1400073d2:	mov    rax,QWORD PTR [rbx+0x10]
   1400073d6:	mov    QWORD PTR [rax+0x18],rcx
   1400073da:	mov    QWORD PTR [rbx+0x10],rcx
   1400073de:	mov    eax,DWORD PTR [rbx+0x4]
   1400073e1:	dec    eax
   1400073e3:	jmp    0x1400073e8
   1400073e5:	or     eax,0xffffffff
   1400073e8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400073ed:	mov    rbp,QWORD PTR [rsp+0x38]
   1400073f2:	mov    rsi,QWORD PTR [rsp+0x40]
   1400073f7:	add    rsp,0x20
   1400073fb:	pop    rdi
   1400073fc:	ret    
   1400073fd:	int3   
   1400073fe:	int3   
   1400073ff:	int3   
   140007400:	int3   
   140007401:	int3   
   140007402:	int3   
   140007403:	int3   
   140007404:	test   rcx,rcx
   140007407:	je     0x14000747d
   140007409:	push   rbx
   14000740a:	sub    rsp,0x20
   14000740e:	mov    edx,DWORD PTR [rcx+0x4]
   140007411:	cmp    edx,0x70000
   140007417:	ja     0x14000742e
   140007419:	add    edx,0xfffe0000
   14000741f:	cmp    edx,0x50000
   140007425:	ja     0x140007478
   140007427:	test   dx,dx
   14000742a:	je     0x14000744b
   14000742c:	jmp    0x140007478
   14000742e:	cmp    edx,0x80000
   140007434:	je     0x140007456
   140007436:	lea    eax,[rdx-0x90000]
   14000743c:	test   eax,0xfffcffff
   140007441:	jne    0x140007478
   140007443:	cmp    edx,0xc0000
   140007449:	je     0x140007478
   14000744b:	add    rcx,0x10
   14000744f:	call   0x14000704c
   140007454:	jmp    0x140007478
   140007456:	lea    rbx,[rcx+0x10]
   14000745a:	mov    rcx,QWORD PTR [rbx]
   14000745d:	test   rcx,rcx
   140007460:	je     0x140007474
   140007462:	cmp    DWORD PTR [rcx],0x9
   140007465:	jne    0x140007474
   140007467:	call   0x140007564
   14000746c:	mov    rcx,rbx
   14000746f:	call   0x14000704c
   140007474:	and    QWORD PTR [rbx],0x0
   140007478:	add    rsp,0x20
   14000747c:	pop    rbx
   14000747d:	ret    
   14000747e:	int3   
   14000747f:	int3   
   140007480:	int3   
   140007481:	int3   
   140007482:	int3   
   140007483:	int3   
   140007484:	mov    QWORD PTR [rsp+0x8],rbx
   140007489:	mov    QWORD PTR [rsp+0x10],rbp
   14000748e:	mov    QWORD PTR [rsp+0x18],rsi
   140007493:	push   rdi
   140007494:	push   r14
   140007496:	push   r15
   140007498:	sub    rsp,0x20
   14000749c:	mov    r15d,r9d
   14000749f:	mov    r14,r8
   1400074a2:	mov    esi,edx
   1400074a4:	mov    rbp,rcx
   1400074a7:	test   rcx,rcx
   1400074aa:	je     0x14000753c
   1400074b0:	cmp    DWORD PTR [rcx],0x9
   1400074b3:	jne    0x14000753c
   1400074b9:	mov    rdi,QWORD PTR [rcx+0x8]
   1400074bd:	xor    ebx,ebx
   1400074bf:	cmp    DWORD PTR [rcx+0x4],ebx
   1400074c2:	jbe    0x14000753c
   1400074c4:	cmp    DWORD PTR [rdi+0x4],esi
   1400074c7:	jne    0x140007531
   1400074c9:	cmp    esi,0x20000
   1400074cf:	je     0x14000751b
   1400074d1:	cmp    esi,0x30000
   1400074d7:	je     0x140007510
   1400074d9:	cmp    esi,0x40000
   1400074df:	je     0x140007510
   1400074e1:	cmp    esi,0x60000
   1400074e7:	je     0x140007502
   1400074e9:	cmp    esi,0x70000
   1400074ef:	jne    0x140007531
   1400074f1:	mov    rax,QWORD PTR [rdi+0x10]
   1400074f5:	movsd  xmm0,QWORD PTR [rax]
   1400074f9:	ucomisd xmm0,QWORD PTR [r14]
   1400074fe:	jp     0x140007531
   140007500:	jmp    0x14000752f
   140007502:	mov    rax,QWORD PTR [rdi+0x10]
   140007506:	movss  xmm0,DWORD PTR [rax]
   14000750a:	ucomiss xmm0,DWORD PTR [r14]
   14000750e:	jmp    0x1400074fe
   140007510:	mov    rcx,QWORD PTR [rdi+0x10]
   140007514:	mov    eax,DWORD PTR [r14]
   140007517:	cmp    DWORD PTR [rcx],eax
   140007519:	jmp    0x14000752f
   14000751b:	mov    rcx,QWORD PTR [rdi+0x10]
   14000751f:	xor    r9d,r9d
   140007522:	mov    r8d,r15d
   140007525:	mov    rdx,r14
   140007528:	call   0x1400065e0
   14000752d:	test   eax,eax
   14000752f:	je     0x140007558
   140007531:	mov    rdi,QWORD PTR [rdi+0x18]
   140007535:	inc    ebx
   140007537:	cmp    ebx,DWORD PTR [rbp+0x4]
   14000753a:	jb     0x1400074c4
   14000753c:	or     eax,0xffffffff
   14000753f:	mov    rbx,QWORD PTR [rsp+0x40]
   140007544:	mov    rbp,QWORD PTR [rsp+0x48]
   140007549:	mov    rsi,QWORD PTR [rsp+0x50]
   14000754e:	add    rsp,0x20
   140007552:	pop    r15
   140007554:	pop    r14
   140007556:	pop    rdi
   140007557:	ret    
   140007558:	mov    eax,ebx
   14000755a:	jmp    0x14000753f
   14000755c:	int3   
   14000755d:	int3   
   14000755e:	int3   
   14000755f:	int3   
   140007560:	int3   
   140007561:	int3   
   140007562:	int3   
   140007563:	int3   
   140007564:	test   rcx,rcx
   140007567:	je     0x1400075c4
   140007569:	mov    QWORD PTR [rsp+0x10],rbx
   14000756e:	push   rdi
   14000756f:	sub    rsp,0x20
   140007573:	cmp    DWORD PTR [rcx],0x9
   140007576:	mov    rdi,rcx
   140007579:	jne    0x1400075ba
   14000757b:	mov    rax,QWORD PTR [rcx+0x8]
   14000757f:	mov    QWORD PTR [rsp+0x30],rax
   140007584:	test   rax,rax
   140007587:	je     0x1400075ac
   140007589:	mov    rbx,QWORD PTR [rax+0x18]
   14000758d:	mov    rcx,rax
   140007590:	call   0x140007404
   140007595:	lea    rcx,[rsp+0x30]
   14000759a:	call   0x14000704c
   14000759f:	mov    QWORD PTR [rsp+0x30],rbx
   1400075a4:	mov    rax,rbx
   1400075a7:	test   rbx,rbx
   1400075aa:	jne    0x140007589
   1400075ac:	and    DWORD PTR [rdi+0x4],0x0
   1400075b0:	and    QWORD PTR [rdi+0x8],0x0
   1400075b5:	and    QWORD PTR [rdi+0x10],0x0
   1400075ba:	mov    rbx,QWORD PTR [rsp+0x38]
   1400075bf:	add    rsp,0x20
   1400075c3:	pop    rdi
   1400075c4:	ret    
   1400075c5:	int3   
   1400075c6:	int3   
   1400075c7:	int3   
   1400075c8:	int3   
   1400075c9:	int3   
   1400075ca:	int3   
   1400075cb:	int3   
   1400075cc:	mov    QWORD PTR [rsp+0x10],rbx
   1400075d1:	mov    QWORD PTR [rsp+0x18],rsi
   1400075d6:	push   rdi
   1400075d7:	sub    rsp,0x20
   1400075db:	mov    rdi,QWORD PTR [rcx]
   1400075de:	mov    rsi,rcx
   1400075e1:	test   rdi,rdi
   1400075e4:	je     0x14000762a
   1400075e6:	cmp    DWORD PTR [rdi],0x9
   1400075e9:	jne    0x14000762a
   1400075eb:	mov    rax,QWORD PTR [rdi+0x8]
   1400075ef:	mov    QWORD PTR [rsp+0x30],rax
   1400075f4:	test   rax,rax
   1400075f7:	je     0x14000761c
   1400075f9:	mov    rbx,QWORD PTR [rax+0x18]
   1400075fd:	mov    rcx,rax
   140007600:	call   0x140007404
   140007605:	lea    rcx,[rsp+0x30]
   14000760a:	call   0x14000704c
   14000760f:	mov    QWORD PTR [rsp+0x30],rbx
   140007614:	mov    rax,rbx
   140007617:	test   rbx,rbx
   14000761a:	jne    0x1400075f9
   14000761c:	and    DWORD PTR [rdi+0x4],0x0
   140007620:	and    QWORD PTR [rdi+0x8],0x0
   140007625:	and    QWORD PTR [rdi+0x10],0x0
   14000762a:	mov    rcx,rsi
   14000762d:	mov    rbx,QWORD PTR [rsp+0x38]
   140007632:	mov    rsi,QWORD PTR [rsp+0x40]
   140007637:	add    rsp,0x20
   14000763b:	pop    rdi
   14000763c:	jmp    0x14000704c
   140007641:	int3   
   140007642:	int3   
   140007643:	int3   
   140007644:	int3   
   140007645:	int3   
   140007646:	int3   
   140007647:	int3   
   140007648:	mov    QWORD PTR [rsp+0x10],rbx
   14000764d:	mov    QWORD PTR [rsp+0x18],rbp
   140007652:	push   rsi
   140007653:	push   rdi
   140007654:	push   r14
   140007656:	sub    rsp,0x20
   14000765a:	mov    rbp,rdx
   14000765d:	mov    rbx,rcx
   140007660:	test   rcx,rcx
   140007663:	je     0x1400076bf
   140007665:	cmp    DWORD PTR [rcx],0x9
   140007668:	jne    0x1400076bf
   14000766a:	mov    rcx,rdx
   14000766d:	call   QWORD PTR [rip+0x3c25]        # 0x14000b298
   140007673:	lea    edi,[rax+0x1]
   140007676:	lea    r14d,[rdi+rdi*1]
   14000767a:	mov    ecx,r14d
   14000767d:	call   0x140007128
   140007682:	mov    QWORD PTR [rsp+0x40],rax
   140007687:	mov    rsi,rax
   14000768a:	test   rax,rax
   14000768d:	je     0x1400076bf
   14000768f:	mov    r8d,edi
   140007692:	mov    rdx,rbp
   140007695:	mov    rcx,rax
   140007698:	call   0x140006448
   14000769d:	mov    r9,rsi
   1400076a0:	mov    r8d,r14d
   1400076a3:	mov    edx,0x20000
   1400076a8:	mov    rcx,rbx
   1400076ab:	call   0x140007368
   1400076b0:	cmp    eax,0xffffffff
   1400076b3:	jne    0x1400076c2
   1400076b5:	lea    rcx,[rsp+0x40]
   1400076ba:	call   0x14000704c
   1400076bf:	or     eax,0xffffffff
   1400076c2:	mov    rbx,QWORD PTR [rsp+0x48]
   1400076c7:	mov    rbp,QWORD PTR [rsp+0x50]
   1400076cc:	add    rsp,0x20
   1400076d0:	pop    r14
   1400076d2:	pop    rdi
   1400076d3:	pop    rsi
   1400076d4:	ret    
   1400076d5:	int3   
   1400076d6:	int3   
   1400076d7:	int3   
   1400076d8:	int3   
   1400076d9:	int3   
   1400076da:	int3   
   1400076db:	int3   
   1400076dc:	mov    QWORD PTR [rsp+0x10],rbx
   1400076e1:	push   rdi
   1400076e2:	sub    rsp,0x20
   1400076e6:	mov    edi,edx
   1400076e8:	mov    rbx,rcx
   1400076eb:	test   rcx,rcx
   1400076ee:	je     0x140007730
   1400076f0:	cmp    DWORD PTR [rcx],0x9
   1400076f3:	jne    0x140007730
   1400076f5:	mov    ecx,0x4
   1400076fa:	call   0x140007128
   1400076ff:	mov    QWORD PTR [rsp+0x30],rax
   140007704:	test   rax,rax
   140007707:	je     0x140007730
   140007709:	mov    r9,rax
   14000770c:	mov    DWORD PTR [rax],edi
   14000770e:	mov    edx,0x30000
   140007713:	mov    r8d,0x4
   140007719:	mov    rcx,rbx
   14000771c:	call   0x140007368
   140007721:	cmp    eax,0xffffffff
   140007724:	jne    0x140007733
   140007726:	lea    rcx,[rsp+0x30]
   14000772b:	call   0x14000704c
   140007730:	or     eax,0xffffffff
   140007733:	mov    rbx,QWORD PTR [rsp+0x38]
   140007738:	add    rsp,0x20
   14000773c:	pop    rdi
   14000773d:	ret    
   14000773e:	int3   
   14000773f:	int3   
   140007740:	int3   
   140007741:	int3   
   140007742:	int3   
   140007743:	int3   
   140007744:	mov    QWORD PTR [rsp+0x10],rbx
   140007749:	push   rdi
   14000774a:	sub    rsp,0x20
   14000774e:	mov    edi,edx
   140007750:	mov    rbx,rcx
   140007753:	test   rcx,rcx
   140007756:	je     0x140007798
   140007758:	cmp    DWORD PTR [rcx],0x9
   14000775b:	jne    0x140007798
   14000775d:	mov    ecx,0x4
   140007762:	call   0x140007128
   140007767:	mov    QWORD PTR [rsp+0x30],rax
   14000776c:	test   rax,rax
   14000776f:	je     0x140007798
   140007771:	mov    r9,rax
   140007774:	mov    DWORD PTR [rax],edi
   140007776:	mov    edx,0x40000
   14000777b:	mov    r8d,0x4
   140007781:	mov    rcx,rbx
   140007784:	call   0x140007368
   140007789:	cmp    eax,0xffffffff
   14000778c:	jne    0x14000779b
   14000778e:	lea    rcx,[rsp+0x30]
   140007793:	call   0x14000704c
   140007798:	or     eax,0xffffffff
   14000779b:	mov    rbx,QWORD PTR [rsp+0x38]
   1400077a0:	add    rsp,0x20
   1400077a4:	pop    rdi
   1400077a5:	ret    
   1400077a6:	int3   
   1400077a7:	int3   
   1400077a8:	int3   
   1400077a9:	int3   
   1400077aa:	int3   
   1400077ab:	int3   
   1400077ac:	rex push rbx
   1400077ae:	sub    rsp,0x30
   1400077b2:	movaps XMMWORD PTR [rsp+0x20],xmm6
   1400077b7:	movaps xmm6,xmm1
   1400077ba:	mov    rbx,rcx
   1400077bd:	test   rcx,rcx
   1400077c0:	je     0x140007804
   1400077c2:	cmp    DWORD PTR [rcx],0x9
   1400077c5:	jne    0x140007804
   1400077c7:	mov    ecx,0x4
   1400077cc:	call   0x140007128
   1400077d1:	mov    QWORD PTR [rsp+0x40],rax
   1400077d6:	test   rax,rax
   1400077d9:	je     0x140007804
   1400077db:	mov    r9,rax
   1400077de:	movss  DWORD PTR [rax],xmm6
   1400077e2:	mov    edx,0x60000
   1400077e7:	mov    r8d,0x4
   1400077ed:	mov    rcx,rbx
   1400077f0:	call   0x140007368
   1400077f5:	cmp    eax,0xffffffff
   1400077f8:	jne    0x140007807
   1400077fa:	lea    rcx,[rsp+0x40]
   1400077ff:	call   0x14000704c
   140007804:	or     eax,0xffffffff
   140007807:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   14000780c:	add    rsp,0x30
   140007810:	pop    rbx
   140007811:	ret    
   140007812:	int3   
   140007813:	int3   
   140007814:	int3   
   140007815:	int3   
   140007816:	int3   
   140007817:	int3   
   140007818:	rex push rbx
   14000781a:	sub    rsp,0x30
   14000781e:	movaps XMMWORD PTR [rsp+0x20],xmm6
   140007823:	movaps xmm6,xmm1
   140007826:	mov    rbx,rcx
   140007829:	test   rcx,rcx
   14000782c:	je     0x140007870
   14000782e:	cmp    DWORD PTR [rcx],0x9
   140007831:	jne    0x140007870
   140007833:	mov    ecx,0x8
   140007838:	call   0x140007128
   14000783d:	mov    QWORD PTR [rsp+0x40],rax
   140007842:	test   rax,rax
   140007845:	je     0x140007870
   140007847:	mov    r9,rax
   14000784a:	movsd  QWORD PTR [rax],xmm6
   14000784e:	mov    edx,0x70000
   140007853:	mov    r8d,0x8
   140007859:	mov    rcx,rbx
   14000785c:	call   0x140007368
   140007861:	cmp    eax,0xffffffff
   140007864:	jne    0x140007873
   140007866:	lea    rcx,[rsp+0x40]
   14000786b:	call   0x14000704c
   140007870:	or     eax,0xffffffff
   140007873:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   140007878:	add    rsp,0x30
   14000787c:	pop    rbx
   14000787d:	ret    
   14000787e:	int3   
   14000787f:	int3   
   140007880:	int3   
   140007881:	int3   
   140007882:	int3   
   140007883:	int3   
   140007884:	mov    QWORD PTR [rsp+0x10],rbx
   140007889:	mov    QWORD PTR [rsp+0x18],rsi
   14000788e:	mov    QWORD PTR [rsp+0x8],rcx
   140007893:	push   rdi
   140007894:	sub    rsp,0x20
   140007898:	mov    rsi,QWORD PTR [rip+0x6e59]        # 0x14000e6f8
   14000789f:	xor    edi,edi
   1400078a1:	test   rsi,rsi
   1400078a4:	je     0x14000791d
   1400078a6:	cmp    DWORD PTR [rsi],0x9
   1400078a9:	jne    0x14000791d
   1400078ab:	lea    ecx,[rdi+0x18]
   1400078ae:	call   0x140007128
   1400078b3:	mov    rbx,rax
   1400078b6:	test   rax,rax
   1400078b9:	je     0x14000791d
   1400078bb:	mov    QWORD PTR [rax],0x9
   1400078c2:	cmp    DWORD PTR [rax],0x9
   1400078c5:	mov    QWORD PTR [rax+0x8],rdi
   1400078c9:	mov    QWORD PTR [rax+0x10],rdi
   1400078cd:	mov    QWORD PTR [rsp+0x30],rax
   1400078d2:	jne    0x14000791d
   1400078d4:	xor    r9d,r9d
   1400078d7:	xor    r8d,r8d
   1400078da:	xor    edx,edx
   1400078dc:	mov    rcx,rbx
   1400078df:	call   0x140007368
   1400078e4:	cmp    eax,0xffffffff
   1400078e7:	je     0x1400078f0
   1400078e9:	inc    edi
   1400078eb:	cmp    edi,0x3
   1400078ee:	jb     0x1400078d4
   1400078f0:	cmp    edi,0x3
   1400078f3:	jne    0x14000790e
   1400078f5:	mov    r9,rbx
   1400078f8:	lea    r8d,[rdi+0x5]
   1400078fc:	mov    edx,0x80000
   140007901:	mov    rcx,rsi
   140007904:	call   0x140007368
   140007909:	cmp    eax,0xffffffff
   14000790c:	jne    0x140007920
   14000790e:	cmp    DWORD PTR [rbx],0x9
   140007911:	jne    0x14000791d
   140007913:	lea    rcx,[rsp+0x30]
   140007918:	call   0x1400075cc
   14000791d:	or     eax,0xffffffff
   140007920:	mov    rbx,QWORD PTR [rsp+0x38]
   140007925:	mov    rsi,QWORD PTR [rsp+0x40]
   14000792a:	add    rsp,0x20
   14000792e:	pop    rdi
   14000792f:	ret    
   140007930:	int3   
   140007931:	int3   
   140007932:	int3   
   140007933:	int3   
   140007934:	int3   
   140007935:	int3   
   140007936:	int3   
   140007937:	int3   
   140007938:	mov    QWORD PTR [rsp+0x8],rbx
   14000793d:	mov    QWORD PTR [rsp+0x10],rsi
   140007942:	push   rdi
   140007943:	sub    rsp,0x20
   140007947:	xor    ebx,ebx
   140007949:	mov    esi,edx
   14000794b:	mov    rdi,rcx
   14000794e:	test   rcx,rcx
   140007951:	je     0x14000797b
   140007953:	cmp    DWORD PTR [rcx],0x9
   140007956:	jne    0x14000797b
   140007958:	test   edx,edx
   14000795a:	je     0x140007977
   14000795c:	xor    r9d,r9d
   14000795f:	xor    r8d,r8d
   140007962:	xor    edx,edx
   140007964:	mov    rcx,rdi
   140007967:	call   0x140007368
   14000796c:	cmp    eax,0xffffffff
   14000796f:	je     0x140007977
   140007971:	inc    ebx
   140007973:	cmp    ebx,esi
   140007975:	jb     0x14000795c
   140007977:	mov    eax,ebx
   140007979:	jmp    0x14000797e
   14000797b:	or     eax,0xffffffff
   14000797e:	mov    rbx,QWORD PTR [rsp+0x30]
   140007983:	mov    rsi,QWORD PTR [rsp+0x38]
   140007988:	add    rsp,0x20
   14000798c:	pop    rdi
   14000798d:	ret    
   14000798e:	int3   
   14000798f:	int3   
   140007990:	int3   
   140007991:	int3   
   140007992:	int3   
   140007993:	int3   
   140007994:	sub    rsp,0x28
   140007998:	mov    rcx,QWORD PTR [rip+0x6d59]        # 0x14000e6f8
   14000799f:	xor    r8d,r8d
   1400079a2:	call   0x140007328
   1400079a7:	xor    ecx,ecx
   1400079a9:	test   rax,rax
   1400079ac:	je     0x1400079cc
   1400079ae:	cmp    DWORD PTR [rax+0x4],0x80000
   1400079b5:	jne    0x1400079cc
   1400079b7:	mov    rax,QWORD PTR [rax+0x10]
   1400079bb:	test   rax,rax
   1400079be:	je     0x1400079c8
   1400079c0:	cmp    DWORD PTR [rax],0x9
   1400079c3:	jne    0x1400079c8
   1400079c5:	mov    ecx,DWORD PTR [rax+0x4]
   1400079c8:	mov    eax,ecx
   1400079ca:	jmp    0x1400079ce
   1400079cc:	xor    eax,eax
   1400079ce:	add    rsp,0x28
   1400079d2:	ret    
   1400079d3:	int3   
   1400079d4:	int3   
   1400079d5:	int3   
   1400079d6:	int3   
   1400079d7:	int3   
   1400079d8:	int3   
   1400079d9:	int3   
   1400079da:	int3   
   1400079db:	int3   
   1400079dc:	sub    rsp,0x28
   1400079e0:	mov    rcx,QWORD PTR [rip+0x6d11]        # 0x14000e6f8
   1400079e7:	mov    r11d,r8d
   1400079ea:	xor    r8d,r8d
   1400079ed:	lea    edx,[r8+0x3]
   1400079f1:	call   0x140007328
   1400079f6:	xor    r10d,r10d
   1400079f9:	test   rax,rax
   1400079fc:	je     0x140007a36
   1400079fe:	cmp    DWORD PTR [rax+0x4],0x80000
   140007a05:	jne    0x140007a36
   140007a07:	mov    rcx,QWORD PTR [rax+0x10]
   140007a0b:	xor    r8d,r8d
   140007a0e:	mov    edx,r11d
   140007a11:	call   0x140007328
   140007a16:	test   rax,rax
   140007a19:	je     0x140007a31
   140007a1b:	cmp    DWORD PTR [rax+0x4],0x10000
   140007a22:	je     0x140007a2d
   140007a24:	cmp    DWORD PTR [rax+0x4],0x80000
   140007a2b:	jne    0x140007a31
   140007a2d:	mov    r10,QWORD PTR [rax+0x10]
   140007a31:	mov    rax,r10
   140007a34:	jmp    0x140007a38
   140007a36:	xor    eax,eax
   140007a38:	add    rsp,0x28
   140007a3c:	ret    
   140007a3d:	int3   
   140007a3e:	int3   
   140007a3f:	int3   
   140007a40:	int3   
   140007a41:	int3   
   140007a42:	int3   
   140007a43:	int3   
   140007a44:	mov    rax,rsp
   140007a47:	mov    QWORD PTR [rax+0x8],rbx
   140007a4b:	mov    QWORD PTR [rax+0x10],rbp
   140007a4f:	mov    QWORD PTR [rax+0x18],rsi
   140007a53:	mov    QWORD PTR [rax+0x20],rdi
   140007a57:	push   r14
   140007a59:	sub    rsp,0x20
   140007a5d:	mov    r14,r8
   140007a60:	xor    r8d,r8d
   140007a63:	call   0x140007328
   140007a68:	mov    rdi,rax
   140007a6b:	test   rax,rax
   140007a6e:	jne    0x140007a77
   140007a70:	xor    eax,eax
   140007a72:	jmp    0x140007af7
   140007a77:	test   DWORD PTR [rax+0x4],0xfffdffff
   140007a7e:	jne    0x140007a70
   140007a80:	mov    rcx,r14
   140007a83:	call   QWORD PTR [rip+0x380f]        # 0x14000b298
   140007a89:	cmp    DWORD PTR [rdi+0x4],0x0
   140007a8d:	lea    esi,[rax+0x1]
   140007a90:	jne    0x140007ab1
   140007a92:	lea    ebx,[rsi+rsi*1]
   140007a95:	mov    ecx,ebx
   140007a97:	call   0x140007128
   140007a9c:	mov    QWORD PTR [rdi+0x10],rax
   140007aa0:	test   rax,rax
   140007aa3:	je     0x140007a70
   140007aa5:	mov    DWORD PTR [rdi+0x4],0x20000
   140007aac:	mov    DWORD PTR [rdi+0x8],ebx
   140007aaf:	jmp    0x140007ae3
   140007ab1:	mov    eax,DWORD PTR [rdi+0x8]
   140007ab4:	mov    ecx,esi
   140007ab6:	add    rcx,rcx
   140007ab9:	cmp    rax,rcx
   140007abc:	jae    0x140007ae3
   140007abe:	lea    rbx,[rdi+0x10]
   140007ac2:	mov    rcx,rbx
   140007ac5:	call   0x14000704c
   140007aca:	and    QWORD PTR [rbx],0x0
   140007ace:	lea    ebp,[rsi+rsi*1]
   140007ad1:	mov    ecx,ebp
   140007ad3:	call   0x140007128
   140007ad8:	mov    QWORD PTR [rbx],rax
   140007adb:	test   rax,rax
   140007ade:	je     0x140007a70
   140007ae0:	mov    DWORD PTR [rdi+0x8],ebp
   140007ae3:	mov    rcx,QWORD PTR [rdi+0x10]
   140007ae7:	mov    r8d,esi
   140007aea:	mov    rdx,r14
   140007aed:	call   0x140006448
   140007af2:	mov    eax,0x1
   140007af7:	mov    rbx,QWORD PTR [rsp+0x30]
   140007afc:	mov    rbp,QWORD PTR [rsp+0x38]
   140007b01:	mov    rsi,QWORD PTR [rsp+0x40]
   140007b06:	mov    rdi,QWORD PTR [rsp+0x48]
   140007b0b:	add    rsp,0x20
   140007b0f:	pop    r14
   140007b11:	ret    
   140007b12:	int3   
   140007b13:	int3   
   140007b14:	int3   
   140007b15:	int3   
   140007b16:	int3   
   140007b17:	int3   
   140007b18:	sub    rsp,0x28
   140007b1c:	mov    rcx,QWORD PTR [rip+0x6bd5]        # 0x14000e6f8
   140007b23:	mov    r11d,r8d
   140007b26:	xor    r8d,r8d
   140007b29:	lea    edx,[r8+0x3]
   140007b2d:	call   0x140007328
   140007b32:	xor    r10d,r10d
   140007b35:	test   rax,rax
   140007b38:	je     0x140007b60
   140007b3a:	cmp    DWORD PTR [rax+0x4],0x80000
   140007b41:	jne    0x140007b60
   140007b43:	mov    rcx,QWORD PTR [rax+0x10]
   140007b47:	xor    r8d,r8d
   140007b4a:	mov    edx,r11d
   140007b4d:	call   0x140007328
   140007b52:	test   rax,rax
   140007b55:	je     0x140007b5b
   140007b57:	mov    r10d,DWORD PTR [rax+0x4]
   140007b5b:	mov    eax,r10d
   140007b5e:	jmp    0x140007b62
   140007b60:	xor    eax,eax
   140007b62:	add    rsp,0x28
   140007b66:	ret    
   140007b67:	int3   
   140007b68:	int3   
   140007b69:	int3   
   140007b6a:	int3   
   140007b6b:	int3   
   140007b6c:	int3   
   140007b6d:	int3   
   140007b6e:	int3   
   140007b6f:	int3   
   140007b70:	mov    QWORD PTR [rsp+0x8],rbx
   140007b75:	push   rdi
   140007b76:	sub    rsp,0x20
   140007b7a:	xor    ebx,ebx
   140007b7c:	mov    rdi,rcx
   140007b7f:	test   rcx,rcx
   140007b82:	jne    0x140007b9b
   140007b84:	call   QWORD PTR [rip+0x350e]        # 0x14000b098
   140007b8a:	test   eax,eax
   140007b8c:	jne    0x140007b97
   140007b8e:	lea    ecx,[rdi+0x57]
   140007b91:	call   QWORD PTR [rip+0x3509]        # 0x14000b0a0
   140007b97:	xor    eax,eax
   140007b99:	jmp    0x140007bc6
   140007b9b:	call   QWORD PTR [rip+0x36f7]        # 0x14000b298
   140007ba1:	mov    r9d,0x2
   140007ba7:	cmp    eax,r9d
   140007baa:	jbe    0x140007b97
   140007bac:	lea    r8d,[r9-0x1]
   140007bb0:	mov    rcx,rdi
   140007bb3:	lea    rdx,[rip+0x3996]        # 0x14000b550
   140007bba:	call   0x1400065e0
   140007bbf:	test   eax,eax
   140007bc1:	sete   bl
   140007bc4:	mov    eax,ebx
   140007bc6:	mov    rbx,QWORD PTR [rsp+0x30]
   140007bcb:	add    rsp,0x20
   140007bcf:	pop    rdi
   140007bd0:	ret    
   140007bd1:	int3   
   140007bd2:	int3   
   140007bd3:	int3   
   140007bd4:	int3   
   140007bd5:	int3   
   140007bd6:	int3   
   140007bd7:	int3   
   140007bd8:	mov    QWORD PTR [rsp+0x10],rbx
   140007bdd:	mov    QWORD PTR [rsp+0x18],rsi
   140007be2:	mov    QWORD PTR [rsp+0x20],rdi
   140007be7:	push   rbp
   140007be8:	push   r14
   140007bea:	push   r15
   140007bec:	mov    rbp,rsp
   140007bef:	sub    rsp,0x20
   140007bf3:	mov    rsi,rcx
   140007bf6:	xor    ebx,ebx
   140007bf8:	xor    ecx,ecx
   140007bfa:	mov    DWORD PTR [rbp+0x20],ebx
   140007bfd:	call   QWORD PTR [rip+0x349d]        # 0x14000b0a0
   140007c03:	test   rsi,rsi
   140007c06:	je     0x140007d8d
   140007c0c:	mov    rcx,rsi
   140007c0f:	call   QWORD PTR [rip+0x3683]        # 0x14000b298
   140007c15:	test   eax,eax
   140007c17:	je     0x140007d8d
   140007c1d:	lea    r14d,[rbx+0x4]
   140007c21:	xor    edx,edx
   140007c23:	mov    ecx,r14d
   140007c26:	lea    r8,[rbp+0x20]
   140007c2a:	call   QWORD PTR [rip+0x3698]        # 0x14000b2c8
   140007c30:	call   QWORD PTR [rip+0x3462]        # 0x14000b098
   140007c36:	cmp    eax,0xea
   140007c3b:	je     0x140007c44
   140007c3d:	xor    eax,eax
   140007c3f:	jmp    0x140007d92
   140007c44:	mov    r8d,DWORD PTR [rbp+0x20]
   140007c48:	mov    edi,0x1
   140007c4d:	mov    r9d,edi
   140007c50:	xor    edx,edx
   140007c52:	lea    ecx,[rdi+0xd]
   140007c55:	call   0x140005134
   140007c5a:	mov    r15,rax
   140007c5d:	test   rax,rax
   140007c60:	jne    0x140007c77
   140007c62:	call   QWORD PTR [rip+0x3430]        # 0x14000b098
   140007c68:	test   eax,eax
   140007c6a:	jne    0x140007c3d
   140007c6c:	lea    ecx,[rdi+0x7]
   140007c6f:	call   QWORD PTR [rip+0x342b]        # 0x14000b0a0
   140007c75:	jmp    0x140007c3d
   140007c77:	lea    r8,[rbp+0x20]
   140007c7b:	mov    rdx,rax
   140007c7e:	mov    ecx,r14d
   140007c81:	call   QWORD PTR [rip+0x3641]        # 0x14000b2c8
   140007c87:	test   eax,eax
   140007c89:	je     0x140007c3d
   140007c8b:	xor    r9d,r9d
   140007c8e:	mov    r8d,edi
   140007c91:	mov    rdx,rsi
   140007c94:	mov    rcx,r15
   140007c97:	call   0x1400065e0
   140007c9c:	test   eax,eax
   140007c9e:	jne    0x140007ca7
   140007ca0:	mov    eax,edi
   140007ca2:	jmp    0x140007d92
   140007ca7:	mov    rcx,rsi
   140007caa:	call   0x140007eb4
   140007caf:	xor    edx,edx
   140007cb1:	mov    DWORD PTR [rbp+0x20],ebx
   140007cb4:	lea    r8,[rbp+0x20]
   140007cb8:	cmp    eax,edi
   140007cba:	jne    0x140007d33
   140007cbc:	mov    rcx,rsi
   140007cbf:	call   0x140007f90
   140007cc4:	test   eax,eax
   140007cc6:	je     0x140007c3d
   140007ccc:	mov    r8d,DWORD PTR [rbp+0x20]
   140007cd0:	xor    edx,edx
   140007cd2:	mov    r9d,edi
   140007cd5:	lea    ecx,[rdx+0xf]
   140007cd8:	call   0x140005134
   140007cdd:	mov    r14,rax
   140007ce0:	test   rax,rax
   140007ce3:	je     0x140007c3d
   140007ce9:	lea    r8,[rbp+0x20]
   140007ced:	mov    rdx,rax
   140007cf0:	mov    rcx,rsi
   140007cf3:	call   0x140007f90
   140007cf8:	test   eax,eax
   140007cfa:	je     0x140007c3d
   140007d00:	xor    r9d,r9d
   140007d03:	mov    r8d,edi
   140007d06:	mov    rdx,r14
   140007d09:	mov    rcx,r15
   140007d0c:	call   0x1400065e0
   140007d11:	test   eax,eax
   140007d13:	je     0x140007ca0
   140007d15:	lea    rdx,[rip+0x3a24]        # 0x14000b740
   140007d1c:	mov    r8d,edi
   140007d1f:	xor    r9d,r9d
   140007d22:	mov    rcx,r14
   140007d25:	call   0x1400065e0
   140007d2a:	test   eax,eax
   140007d2c:	sete   bl
   140007d2f:	mov    eax,ebx
   140007d31:	jmp    0x140007d92
   140007d33:	mov    r15d,0x7
   140007d39:	mov    ecx,r15d
   140007d3c:	call   QWORD PTR [rip+0x3586]        # 0x14000b2c8
   140007d42:	call   QWORD PTR [rip+0x3350]        # 0x14000b098
   140007d48:	cmp    eax,0xea
   140007d4d:	jne    0x140007c3d
   140007d53:	mov    r8d,DWORD PTR [rbp+0x20]
   140007d57:	xor    edx,edx
   140007d59:	mov    r9d,edi
   140007d5c:	lea    ecx,[rdx+0xe]
   140007d5f:	call   0x140005134
   140007d64:	mov    r14,rax
   140007d67:	test   rax,rax
   140007d6a:	je     0x140007c3d
   140007d70:	lea    r8,[rbp+0x20]
   140007d74:	mov    rdx,rax
   140007d77:	mov    ecx,r15d
   140007d7a:	call   QWORD PTR [rip+0x3548]        # 0x14000b2c8
   140007d80:	test   eax,eax
   140007d82:	je     0x140007c3d
   140007d88:	mov    rdx,rsi
   140007d8b:	jmp    0x140007d1c
   140007d8d:	mov    eax,0x1
   140007d92:	mov    rbx,QWORD PTR [rsp+0x48]
   140007d97:	mov    rsi,QWORD PTR [rsp+0x50]
   140007d9c:	mov    rdi,QWORD PTR [rsp+0x58]
   140007da1:	add    rsp,0x20
   140007da5:	pop    r15
   140007da7:	pop    r14
   140007da9:	pop    rbp
   140007daa:	ret    
   140007dab:	int3   
   140007dac:	int3   
   140007dad:	int3   
   140007dae:	int3   
   140007daf:	int3   
   140007db0:	int3   
   140007db1:	int3   
   140007db2:	int3   
   140007db3:	int3   
   140007db4:	mov    QWORD PTR [rsp+0x10],rbx
   140007db9:	push   rdi
   140007dba:	sub    rsp,0x70
   140007dbe:	mov    rax,QWORD PTR [rip+0x6243]        # 0x14000e008
   140007dc5:	xor    rax,rsp
   140007dc8:	mov    QWORD PTR [rsp+0x60],rax
   140007dcd:	movups xmm0,XMMWORD PTR [rip+0x3984]        # 0x14000b758
   140007dd4:	xor    ebx,ebx
   140007dd6:	mov    rdi,rcx
   140007dd9:	movups xmm1,XMMWORD PTR [rip+0x3988]        # 0x14000b768
   140007de0:	movups XMMWORD PTR [rsp+0x28],xmm0
   140007de5:	movups xmm0,XMMWORD PTR [rip+0x398c]        # 0x14000b778
   140007dec:	movups XMMWORD PTR [rsp+0x38],xmm1
   140007df1:	movsd  xmm1,QWORD PTR [rip+0x398f]        # 0x14000b788
   140007df9:	movsd  QWORD PTR [rsp+0x58],xmm1
   140007dff:	movups XMMWORD PTR [rsp+0x48],xmm0
   140007e04:	test   rcx,rcx
   140007e07:	je     0x140007e8e
   140007e0d:	call   QWORD PTR [rip+0x3485]        # 0x14000b298
   140007e13:	test   eax,eax
   140007e15:	je     0x140007e8e
   140007e17:	mov    rcx,rdi
   140007e1a:	call   0x140007eb4
   140007e1f:	mov    rcx,rdi
   140007e22:	cmp    eax,0x1
   140007e25:	jne    0x140007e72
   140007e27:	lea    r8,[rsp+0x20]
   140007e2c:	mov    DWORD PTR [rsp+0x20],ebx
   140007e30:	xor    edx,edx
   140007e32:	call   0x140007f90
   140007e37:	test   eax,eax
   140007e39:	jne    0x140007e3f
   140007e3b:	xor    eax,eax
   140007e3d:	jmp    0x140007e93
   140007e3f:	mov    r8d,DWORD PTR [rsp+0x20]
   140007e44:	xor    edx,edx
   140007e46:	mov    r9d,0x1
   140007e4c:	lea    ecx,[rdx+0xf]
   140007e4f:	call   0x140005134
   140007e54:	test   rax,rax
   140007e57:	je     0x140007e3b
   140007e59:	lea    r8,[rsp+0x20]
   140007e5e:	mov    rdx,rax
   140007e61:	mov    rcx,rdi
   140007e64:	call   0x140007f90
   140007e69:	test   eax,eax
   140007e6b:	setne  bl
   140007e6e:	mov    eax,ebx
   140007e70:	jmp    0x140007e93
   140007e72:	lea    rdx,[rsp+0x28]
   140007e77:	call   0x140006030
   140007e7c:	cmp    eax,0xffffffff
   140007e7f:	je     0x140007e8e
   140007e81:	mov    ecx,0x35
   140007e86:	call   QWORD PTR [rip+0x3214]        # 0x14000b0a0
   140007e8c:	jmp    0x140007e3b
   140007e8e:	mov    eax,0x1
   140007e93:	mov    rcx,QWORD PTR [rsp+0x60]
   140007e98:	xor    rcx,rsp
   140007e9b:	call   0x140009fe0
   140007ea0:	mov    rbx,QWORD PTR [rsp+0x88]
   140007ea8:	add    rsp,0x70
   140007eac:	pop    rdi
   140007ead:	ret    
   140007eae:	int3   
   140007eaf:	int3   
   140007eb0:	int3   
   140007eb1:	int3   
   140007eb2:	int3   
   140007eb3:	int3   
   140007eb4:	mov    QWORD PTR [rsp+0x10],rbx
   140007eb9:	push   rdi
   140007eba:	sub    rsp,0x40
   140007ebe:	mov    rax,QWORD PTR [rip+0x6143]        # 0x14000e008
   140007ec5:	xor    rax,rsp
   140007ec8:	mov    QWORD PTR [rsp+0x30],rax
   140007ecd:	xor    ebx,ebx
   140007ecf:	mov    rdi,rcx
   140007ed2:	test   rcx,rcx
   140007ed5:	je     0x140007f63
   140007edb:	call   QWORD PTR [rip+0x33b7]        # 0x14000b298
   140007ee1:	test   eax,eax
   140007ee3:	je     0x140007f63
   140007ee5:	xor    r9d,r9d
   140007ee8:	lea    ecx,[rbx+0x10]
   140007eeb:	xor    r8d,r8d
   140007eee:	mov    rdx,rdi
   140007ef1:	call   0x140005134
   140007ef6:	test   rax,rax
   140007ef9:	jne    0x140007f0a
   140007efb:	call   QWORD PTR [rip+0x3197]        # 0x14000b098
   140007f01:	test   eax,eax
   140007f03:	jne    0x140007f6e
   140007f05:	lea    ecx,[rbx+0x8]
   140007f08:	jmp    0x140007f68
   140007f0a:	lea    rdx,[rip+0x387f]        # 0x14000b790
   140007f11:	mov    rcx,rax
   140007f14:	call   QWORD PTR [rip+0x34d6]        # 0x14000b3f0
   140007f1a:	mov    rdi,rax
   140007f1d:	test   rax,rax
   140007f20:	je     0x140007f63
   140007f22:	xor    r8d,r8d
   140007f25:	mov    rcx,rdi
   140007f28:	call   0x140005dc4
   140007f2d:	test   eax,eax
   140007f2f:	je     0x140007f6e
   140007f31:	mov    rcx,rdi
   140007f34:	call   0x140005cf0
   140007f39:	cmp    eax,0xff
   140007f3e:	ja     0x140007f6e
   140007f40:	lea    rdx,[rip+0x3849]        # 0x14000b790
   140007f47:	xor    ecx,ecx
   140007f49:	inc    ebx
   140007f4b:	call   QWORD PTR [rip+0x349f]        # 0x14000b3f0
   140007f51:	mov    rdi,rax
   140007f54:	test   rax,rax
   140007f57:	jne    0x140007f22
   140007f59:	cmp    ebx,0x4
   140007f5c:	jne    0x140007f63
   140007f5e:	lea    eax,[rdi+0x1]
   140007f61:	jmp    0x140007f70
   140007f63:	mov    ecx,0x254f
   140007f68:	call   QWORD PTR [rip+0x3132]        # 0x14000b0a0
   140007f6e:	xor    eax,eax
   140007f70:	mov    rcx,QWORD PTR [rsp+0x30]
   140007f75:	xor    rcx,rsp
   140007f78:	call   0x140009fe0
   140007f7d:	mov    rbx,QWORD PTR [rsp+0x58]
   140007f82:	add    rsp,0x40
   140007f86:	pop    rdi
   140007f87:	ret    
   140007f88:	int3   
   140007f89:	int3   
   140007f8a:	int3   
   140007f8b:	int3   
   140007f8c:	int3   
   140007f8d:	int3   
   140007f8e:	int3   
   140007f8f:	int3   
   140007f90:	rex push rbp
   140007f92:	push   rbx
   140007f93:	push   rsi
   140007f94:	push   rdi
   140007f95:	push   r14
   140007f97:	lea    rbp,[rsp-0x980]
   140007f9f:	sub    rsp,0xa80
   140007fa6:	mov    rax,QWORD PTR [rip+0x605b]        # 0x14000e008
   140007fad:	xor    rax,rsp
   140007fb0:	mov    QWORD PTR [rbp+0x970],rax
   140007fb7:	xor    ebx,ebx
   140007fb9:	mov    rsi,r8
   140007fbc:	mov    r14,rdx
   140007fbf:	mov    QWORD PTR [rsp+0x40],rbx
   140007fc4:	mov    rdi,rcx
   140007fc7:	mov    DWORD PTR [rsp+0x48],ebx
   140007fcb:	xor    edx,edx
   140007fcd:	lea    rcx,[rsp+0x4c]
   140007fd2:	lea    r8d,[rbx+0x2c]
   140007fd6:	call   0x14000a892
   140007fdb:	mov    WORD PTR [rbp+0x962],bx
   140007fe2:	test   rdi,rdi
   140007fe5:	je     0x140008112
   140007feb:	test   rsi,rsi
   140007fee:	je     0x140008112
   140007ff4:	cmp    DWORD PTR [rsi],ebx
   140007ff6:	je     0x14000800a
   140007ff8:	cmp    DWORD PTR [rsi],0x2
   140007ffb:	jb     0x140008112
   140008001:	test   r14,r14
   140008004:	je     0x140008112
   14000800a:	cmp    DWORD PTR [rip+0x66f0],ebx        # 0x14000e700
   140008010:	jne    0x14000803c
   140008012:	mov    ecx,0x202
   140008017:	lea    rdx,[rbp-0x80]
   14000801b:	call   QWORD PTR [rip+0x300f]        # 0x14000b030
   140008021:	test   eax,eax
   140008023:	je     0x140008032
   140008025:	call   QWORD PTR [rip+0x2ffd]        # 0x14000b028
   14000802b:	mov    ecx,eax
   14000802d:	jmp    0x14000811f
   140008032:	mov    DWORD PTR [rip+0x66c4],0x1        # 0x14000e700
   14000803c:	lea    r9,[rsp+0x40]
   140008041:	xor    edx,edx
   140008043:	lea    r8,[rsp+0x48]
   140008048:	mov    rcx,rdi
   14000804b:	call   QWORD PTR [rip+0x2fbf]        # 0x14000b010
   140008051:	test   eax,eax
   140008053:	jne    0x140008125
   140008059:	mov    rdi,QWORD PTR [rsp+0x40]
   14000805e:	jmp    0x1400080b5
   140008060:	mov    WORD PTR [rbp+0x160],bx
   140008067:	lea    rax,[rbp+0x120]
   14000806e:	mov    edx,DWORD PTR [rdi+0x10]
   140008071:	lea    r8,[rbp+0x160]
   140008078:	mov    rcx,QWORD PTR [rdi+0x20]
   14000807c:	mov    r9d,0x401
   140008082:	mov    DWORD PTR [rsp+0x30],0x4
   14000808a:	mov    DWORD PTR [rsp+0x28],0x20
   140008092:	mov    QWORD PTR [rsp+0x20],rax
   140008097:	call   QWORD PTR [rip+0x2f83]        # 0x14000b020
   14000809d:	test   eax,eax
   14000809f:	je     0x1400080bc
   1400080a1:	cmp    eax,0x2afc
   1400080a6:	jne    0x1400080b1
   1400080a8:	cmp    WORD PTR [rbp+0x160],bx
   1400080af:	jne    0x1400080bc
   1400080b1:	mov    rdi,QWORD PTR [rdi+0x28]
   1400080b5:	test   rdi,rdi
   1400080b8:	jne    0x140008060
   1400080ba:	jmp    0x140008103
   1400080bc:	lea    rdx,[rip+0x36cd]        # 0x14000b790
   1400080c3:	lea    rcx,[rbp+0x160]
   1400080ca:	call   QWORD PTR [rip+0x3320]        # 0x14000b3f0
   1400080d0:	mov    rdi,rax
   1400080d3:	test   rax,rax
   1400080d6:	je     0x1400080e3
   1400080d8:	mov    rcx,rax
   1400080db:	call   QWORD PTR [rip+0x31b7]        # 0x14000b298
   1400080e1:	mov    ebx,eax
   1400080e3:	lea    eax,[rbx+0x1]
   1400080e6:	cmp    DWORD PTR [rsi],eax
   1400080e8:	jae    0x1400080f3
   1400080ea:	mov    DWORD PTR [rsi],eax
   1400080ec:	mov    ebx,0x1
   1400080f1:	jmp    0x140008103
   1400080f3:	mov    r8d,DWORD PTR [rsi]
   1400080f6:	mov    rdx,rdi
   1400080f9:	mov    rcx,r14
   1400080fc:	call   0x140006448
   140008101:	mov    ebx,eax
   140008103:	mov    rcx,QWORD PTR [rsp+0x40]
   140008108:	call   QWORD PTR [rip+0x2f0a]        # 0x14000b018
   14000810e:	mov    eax,ebx
   140008110:	jmp    0x140008127
   140008112:	call   QWORD PTR [rip+0x2f80]        # 0x14000b098
   140008118:	test   eax,eax
   14000811a:	jne    0x140008125
   14000811c:	lea    ecx,[rax+0x57]
   14000811f:	call   QWORD PTR [rip+0x2f7b]        # 0x14000b0a0
   140008125:	xor    eax,eax
   140008127:	mov    rcx,QWORD PTR [rbp+0x970]
   14000812e:	xor    rcx,rsp
   140008131:	call   0x140009fe0
   140008136:	add    rsp,0xa80
   14000813d:	pop    r14
   14000813f:	pop    rdi
   140008140:	pop    rsi
   140008141:	pop    rbx
   140008142:	pop    rbp
   140008143:	ret    
   140008144:	int3   
   140008145:	int3   
   140008146:	int3   
   140008147:	int3   
   140008148:	int3   
   140008149:	int3   
   14000814a:	int3   
   14000814b:	int3   
   14000814c:	mov    QWORD PTR [rsp+0x10],rbx
   140008151:	push   rdi
   140008152:	sub    rsp,0x20
   140008156:	xor    ebx,ebx
   140008158:	mov    rdi,rcx
   14000815b:	mov    QWORD PTR [rsp+0x30],rbx
   140008160:	test   rcx,rcx
   140008163:	je     0x1400081a9
   140008165:	call   QWORD PTR [rip+0x312d]        # 0x14000b298
   14000816b:	test   eax,eax
   14000816d:	je     0x1400081a9
   14000816f:	mov    rcx,rdi
   140008172:	call   0x140007b70
   140008177:	test   eax,eax
   140008179:	jne    0x1400081b6
   14000817b:	mov    r8,rdi
   14000817e:	lea    rdx,[rip+0x3613]        # 0x14000b798
   140008185:	lea    ecx,[rbx+0x1]
   140008188:	call   0x140005414
   14000818d:	test   eax,eax
   14000818f:	jne    0x1400081c0
   140008191:	call   QWORD PTR [rip+0x2f01]        # 0x14000b098
   140008197:	test   eax,eax
   140008199:	jne    0x1400081a4
   14000819b:	lea    ecx,[rax+0x8]
   14000819e:	call   QWORD PTR [rip+0x2efc]        # 0x14000b0a0
   1400081a4:	call   0x140005550
   1400081a9:	xor    eax,eax
   1400081ab:	mov    rbx,QWORD PTR [rsp+0x38]
   1400081b0:	add    rsp,0x20
   1400081b4:	pop    rdi
   1400081b5:	ret    
   1400081b6:	mov    rcx,rdi
   1400081b9:	call   0x140005398
   1400081be:	jmp    0x14000818d
   1400081c0:	call   0x140005358
   1400081c5:	mov    ecx,0xd
   1400081ca:	test   rax,rax
   1400081cd:	jne    0x1400081d6
   1400081cf:	call   0x1400050c8
   1400081d4:	jmp    0x1400081e4
   1400081d6:	xor    r9d,r9d
   1400081d9:	xor    r8d,r8d
   1400081dc:	mov    rdx,rax
   1400081df:	call   0x140005134
   1400081e4:	test   rax,rax
   1400081e7:	je     0x140008191
   1400081e9:	lea    r8,[rsp+0x30]
   1400081ee:	mov    edx,0x65
   1400081f3:	mov    rcx,rax
   1400081f6:	call   QWORD PTR [rip+0x7e44]        # 0x140010040
   1400081fc:	test   eax,eax
   1400081fe:	jne    0x1400081a9
   140008200:	mov    rcx,QWORD PTR [rsp+0x30]
   140008205:	test   DWORD PTR [rcx+0x18],0x1000
   14000820c:	je     0x14000821d
   14000820e:	mov    eax,DWORD PTR [rcx+0x10]
   140008211:	and    eax,0xf
   140008214:	imul   ebx,eax,0x3e8
   14000821a:	add    ebx,DWORD PTR [rcx+0x14]
   14000821d:	call   QWORD PTR [rip+0x7e0d]        # 0x140010030
   140008223:	mov    eax,ebx
   140008225:	jmp    0x1400081ab
   140008227:	int3   
   140008228:	int3   
   140008229:	int3   
   14000822a:	int3   
   14000822b:	int3   
   14000822c:	int3   
   14000822d:	int3   
   14000822e:	int3   
   14000822f:	int3   
   140008230:	mov    QWORD PTR [rsp+0x8],rbx
   140008235:	mov    QWORD PTR [rsp+0x10],rbp
   14000823a:	mov    QWORD PTR [rsp+0x18],rsi
   14000823f:	push   rdi
   140008240:	sub    rsp,0x50
   140008244:	mov    rbp,r8
   140008247:	mov    rsi,rdx
   14000824a:	mov    rbx,rcx
   14000824d:	test   rcx,rcx
   140008250:	je     0x1400083ba
   140008256:	call   0x140007bd8
   14000825b:	cmp    eax,0x1
   14000825e:	je     0x1400083ba
   140008264:	mov    rcx,rbx
   140008267:	call   0x140007b70
   14000826c:	cmp    eax,0x1
   14000826f:	jne    0x140008275
   140008271:	add    rbx,0x4
   140008275:	mov    rcx,rbx
   140008278:	call   0x140007db4
   14000827d:	test   eax,eax
   14000827f:	jne    0x140008291
   140008281:	call   0x140005550
   140008286:	call   QWORD PTR [rip+0x2e0c]        # 0x14000b098
   14000828c:	jmp    0x1400083f1
   140008291:	lea    rcx,[rip+0x3510]        # 0x14000b7a8
   140008298:	call   QWORD PTR [rip+0x2ffa]        # 0x14000b298
   14000829e:	mov    r8,rbx
   1400082a1:	test   eax,eax
   1400082a3:	je     0x1400082bf
   1400082a5:	lea    r9,[rip+0x34fc]        # 0x14000b7a8
   1400082ac:	mov    ecx,0x2
   1400082b1:	lea    rdx,[rip+0x3500]        # 0x14000b7b8
   1400082b8:	call   0x140005414
   1400082bd:	jmp    0x1400082d0
   1400082bf:	lea    rdx,[rip+0x34d2]        # 0x14000b798
   1400082c6:	mov    ecx,0x1
   1400082cb:	call   0x140005414
   1400082d0:	test   eax,eax
   1400082d2:	jne    0x1400082f5
   1400082d4:	call   QWORD PTR [rip+0x2dbe]        # 0x14000b098
   1400082da:	mov    ebx,0x8
   1400082df:	test   eax,eax
   1400082e1:	jne    0x1400082eb
   1400082e3:	mov    ecx,ebx
   1400082e5:	call   QWORD PTR [rip+0x2db5]        # 0x14000b0a0
   1400082eb:	call   0x140005550
   1400082f0:	jmp    0x1400083eb
   1400082f5:	call   0x140005358
   1400082fa:	mov    ecx,0x12
   1400082ff:	test   rax,rax
   140008302:	jne    0x14000830b
   140008304:	call   0x1400050c8
   140008309:	jmp    0x140008319
   14000830b:	xor    r9d,r9d
   14000830e:	xor    r8d,r8d
   140008311:	mov    rdx,rax
   140008314:	call   0x140005134
   140008319:	mov    rdi,rax
   14000831c:	test   rax,rax
   14000831f:	je     0x1400082d4
   140008321:	xor    edx,edx
   140008323:	lea    rcx,[rsp+0x20]
   140008328:	lea    r8d,[rdx+0x30]
   14000832c:	call   0x14000a892
   140008331:	and    DWORD PTR [rsp+0x24],0x0
   140008336:	lea    rcx,[rsp+0x20]
   14000833b:	and    QWORD PTR [rsp+0x48],0x0
   140008341:	xor    r9d,r9d
   140008344:	and    QWORD PTR [rsp+0x30],0x0
   14000834a:	mov    r8,rsi
   14000834d:	mov    rdx,rbp
   140008350:	mov    QWORD PTR [rsp+0x38],rdi
   140008355:	call   QWORD PTR [rip+0x7cad]        # 0x140010008
   14000835b:	mov    edi,eax
   14000835d:	test   eax,eax
   14000835f:	je     0x14000837e
   140008361:	cmp    eax,0x4b8
   140008366:	je     0x140008377
   140008368:	mov    ecx,eax
   14000836a:	call   QWORD PTR [rip+0x2d30]        # 0x14000b0a0
   140008370:	call   0x140005550
   140008375:	jmp    0x1400083b6
   140008377:	call   0x1400055fc
   14000837c:	jmp    0x1400083b6
   14000837e:	xor    ecx,ecx
   140008380:	xor    edi,edi
   140008382:	call   QWORD PTR [rip+0x2d18]        # 0x14000b0a0
   140008388:	mov    rcx,rbx
   14000838b:	call   0x14000814c
   140008390:	cmp    eax,0x1388
   140008395:	jae    0x1400083b6
   140008397:	mov    rcx,rbx
   14000839a:	call   0x14000840c
   14000839f:	mov    ecx,0x1580
   1400083a4:	call   0x1400059b8
   1400083a9:	mov    rcx,rax
   1400083ac:	call   0x140005398
   1400083b1:	mov    edi,0x4b8
   1400083b6:	mov    eax,edi
   1400083b8:	jmp    0x1400083f1
   1400083ba:	test   rsi,rsi
   1400083bd:	je     0x1400083ef
   1400083bf:	mov    rcx,rsi
   1400083c2:	call   QWORD PTR [rip+0x2ed0]        # 0x14000b298
   1400083c8:	test   eax,eax
   1400083ca:	je     0x1400083ef
   1400083cc:	mov    ecx,0x157e
   1400083d1:	call   0x1400059b8
   1400083d6:	mov    rcx,rax
   1400083d9:	call   0x140005398
   1400083de:	mov    ebx,0xa0010001
   1400083e3:	mov    ecx,ebx
   1400083e5:	call   QWORD PTR [rip+0x2cb5]        # 0x14000b0a0
   1400083eb:	mov    eax,ebx
   1400083ed:	jmp    0x1400083f1
   1400083ef:	xor    eax,eax
   1400083f1:	mov    rbx,QWORD PTR [rsp+0x60]
   1400083f6:	mov    rbp,QWORD PTR [rsp+0x68]
   1400083fb:	mov    rsi,QWORD PTR [rsp+0x70]
   140008400:	add    rsp,0x50
   140008404:	pop    rdi
   140008405:	ret    
   140008406:	int3   
   140008407:	int3   
   140008408:	int3   
   140008409:	int3   
   14000840a:	int3   
   14000840b:	int3   
   14000840c:	rex push rbx
   14000840e:	sub    rsp,0x20
   140008412:	mov    rbx,rcx
   140008415:	test   rcx,rcx
   140008418:	je     0x1400084ce
   14000841e:	call   QWORD PTR [rip+0x2e74]        # 0x14000b298
   140008424:	test   eax,eax
   140008426:	je     0x1400084ce
   14000842c:	mov    rcx,rbx
   14000842f:	call   0x140007b70
   140008434:	cmp    eax,0x1
   140008437:	jne    0x14000843d
   140008439:	add    rbx,0x4
   14000843d:	lea    r9,[rip+0x3364]        # 0x14000b7a8
   140008444:	mov    r8,rbx
   140008447:	lea    rdx,[rip+0x336a]        # 0x14000b7b8
   14000844e:	mov    ecx,0x2
   140008453:	call   0x140005414
   140008458:	test   eax,eax
   14000845a:	jne    0x140008475
   14000845c:	call   QWORD PTR [rip+0x2c36]        # 0x14000b098
   140008462:	mov    ebx,0x8
   140008467:	test   eax,eax
   140008469:	jne    0x1400084d0
   14000846b:	mov    ecx,ebx
   14000846d:	call   QWORD PTR [rip+0x2c2d]        # 0x14000b0a0
   140008473:	jmp    0x1400084d0
   140008475:	call   0x140005358
   14000847a:	mov    ecx,0x12
   14000847f:	test   rax,rax
   140008482:	jne    0x14000848b
   140008484:	call   0x1400050c8
   140008489:	jmp    0x140008499
   14000848b:	xor    r9d,r9d
   14000848e:	xor    r8d,r8d
   140008491:	mov    rdx,rax
   140008494:	call   0x140005134
   140008499:	test   rax,rax
   14000849c:	je     0x14000845c
   14000849e:	xor    edx,edx
   1400084a0:	mov    rcx,rax
   1400084a3:	lea    r8d,[rdx+0x1]
   1400084a7:	call   QWORD PTR [rip+0x7b63]        # 0x140010010
   1400084ad:	mov    ebx,eax
   1400084af:	test   eax,eax
   1400084b1:	je     0x1400084c8
   1400084b3:	cmp    eax,0x4b8
   1400084b8:	je     0x1400084c1
   1400084ba:	call   0x140005550
   1400084bf:	jmp    0x1400084d0
   1400084c1:	call   0x1400055fc
   1400084c6:	jmp    0x1400084d0
   1400084c8:	xor    ebx,ebx
   1400084ca:	xor    ecx,ecx
   1400084cc:	jmp    0x14000846d
   1400084ce:	xor    ebx,ebx
   1400084d0:	mov    eax,ebx
   1400084d2:	add    rsp,0x20
   1400084d6:	pop    rbx
   1400084d7:	ret    
   1400084d8:	int3   
   1400084d9:	int3   
   1400084da:	int3   
   1400084db:	int3   
   1400084dc:	int3   
   1400084dd:	int3   
   1400084de:	int3   
   1400084df:	int3   
   1400084e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400084e5:	mov    QWORD PTR [rsp+0x10],rbp
   1400084ea:	mov    DWORD PTR [rsp+0x18],r8d
   1400084ef:	push   rsi
   1400084f0:	push   rdi
   1400084f1:	push   r12
   1400084f3:	push   r13
   1400084f5:	push   r14
   1400084f7:	sub    rsp,0x60
   1400084fb:	mov    rsi,rcx
   1400084fe:	mov    r13,r9
   140008501:	xor    ecx,ecx
   140008503:	mov    r14,rdx
   140008506:	call   QWORD PTR [rip+0x2b94]        # 0x14000b0a0
   14000850c:	test   rsi,rsi
   14000850f:	je     0x1400088db
   140008515:	mov    rcx,rsi
   140008518:	call   QWORD PTR [rip+0x2d7a]        # 0x14000b298
   14000851e:	test   eax,eax
   140008520:	je     0x1400088db
   140008526:	mov    edi,0x1
   14000852b:	cmp    DWORD PTR [rsp+0xb8],edi
   140008532:	jne    0x140008571
   140008534:	test   r14,r14
   140008537:	je     0x140008552
   140008539:	cmp    DWORD PTR [rsp+0xa0],0x2
   140008541:	jb     0x140008552
   140008543:	test   r13,r13
   140008546:	je     0x140008552
   140008548:	cmp    DWORD PTR [rsp+0xb0],0x2
   140008550:	jae    0x140008571
   140008552:	call   QWORD PTR [rip+0x2b40]        # 0x14000b098
   140008558:	test   eax,eax
   14000855a:	jne    0x140008565
   14000855c:	lea    ecx,[rax+0x57]
   14000855f:	call   QWORD PTR [rip+0x2b3b]        # 0x14000b0a0
   140008565:	call   0x140005550
   14000856a:	xor    eax,eax
   14000856c:	jmp    0x1400088e0
   140008571:	mov    rcx,rsi
   140008574:	mov    rbx,rsi
   140008577:	call   0x140007b70
   14000857c:	cmp    eax,edi
   14000857e:	jne    0x140008584
   140008580:	lea    rbx,[rsi+0x4]
   140008584:	cmp    DWORD PTR [rsp+0xb8],edi
   14000858b:	jne    0x1400085bd
   14000858d:	test   r13,r13
   140008590:	je     0x1400085bd
   140008592:	xor    r9d,r9d
   140008595:	lea    rdx,[rip+0x315c]        # 0x14000b6f8
   14000859c:	mov    r8d,edi
   14000859f:	mov    rcx,r13
   1400085a2:	call   0x1400065e0
   1400085a7:	test   eax,eax
   1400085a9:	jne    0x1400085bd
   1400085ab:	mov    rcx,rbx
   1400085ae:	call   0x140007db4
   1400085b3:	test   eax,eax
   1400085b5:	jne    0x140008810
   1400085bb:	jmp    0x140008565
   1400085bd:	mov    rcx,rbx
   1400085c0:	xor    r12d,r12d
   1400085c3:	call   0x140007db4
   1400085c8:	test   eax,eax
   1400085ca:	je     0x140008565
   1400085cc:	test   r14,r14
   1400085cf:	je     0x14000860f
   1400085d1:	mov    rcx,r14
   1400085d4:	call   QWORD PTR [rip+0x2cbe]        # 0x14000b298
   1400085da:	test   eax,eax
   1400085dc:	je     0x14000860f
   1400085de:	xor    r8d,r8d
   1400085e1:	mov    rdx,r14
   1400085e4:	cmp    DWORD PTR [rsp+0xb8],r8d
   1400085ec:	mov    rcx,rsi
   1400085ef:	cmove  r8,r13
   1400085f3:	call   0x140008230
   1400085f8:	mov    ebx,eax
   1400085fa:	cmp    DWORD PTR [rsp+0xb8],edi
   140008601:	jne    0x14000876f
   140008607:	mov    r12d,edi
   14000860a:	jmp    0x14000876f
   14000860f:	mov    rcx,rsi
   140008612:	mov    r12d,edi
   140008615:	call   0x140007bd8
   14000861a:	cmp    eax,edi
   14000861c:	je     0x14000876d
   140008622:	mov    rcx,rsi
   140008625:	mov    rbp,rsi
   140008628:	call   0x140007b70
   14000862d:	cmp    eax,edi
   14000862f:	jne    0x140008635
   140008631:	lea    rbp,[rsi+0x4]
   140008635:	mov    rcx,rbp
   140008638:	call   0x140007db4
   14000863d:	test   eax,eax
   14000863f:	jne    0x140008653
   140008641:	call   0x140005550
   140008646:	call   QWORD PTR [rip+0x2a4c]        # 0x14000b098
   14000864c:	mov    ebx,eax
   14000864e:	jmp    0x14000876f
   140008653:	lea    rcx,[rip+0x314e]        # 0x14000b7a8
   14000865a:	call   QWORD PTR [rip+0x2c38]        # 0x14000b298
   140008660:	mov    r8,rbp
   140008663:	test   eax,eax
   140008665:	je     0x140008681
   140008667:	lea    r9,[rip+0x313a]        # 0x14000b7a8
   14000866e:	mov    ecx,0x2
   140008673:	lea    rdx,[rip+0x313e]        # 0x14000b7b8
   14000867a:	call   0x140005414
   14000867f:	jmp    0x14000868f
   140008681:	lea    rdx,[rip+0x3110]        # 0x14000b798
   140008688:	mov    ecx,edi
   14000868a:	call   0x140005414
   14000868f:	test   eax,eax
   140008691:	jne    0x1400086b4
   140008693:	call   QWORD PTR [rip+0x29ff]        # 0x14000b098
   140008699:	mov    ebx,0x8
   14000869e:	test   eax,eax
   1400086a0:	jne    0x1400086aa
   1400086a2:	mov    ecx,ebx
   1400086a4:	call   QWORD PTR [rip+0x29f6]        # 0x14000b0a0
   1400086aa:	call   0x140005550
   1400086af:	jmp    0x14000876f
   1400086b4:	call   0x140005358
   1400086b9:	mov    ecx,0x12
   1400086be:	test   rax,rax
   1400086c1:	jne    0x1400086ca
   1400086c3:	call   0x1400050c8
   1400086c8:	jmp    0x1400086d8
   1400086ca:	xor    r9d,r9d
   1400086cd:	xor    r8d,r8d
   1400086d0:	mov    rdx,rax
   1400086d3:	call   0x140005134
   1400086d8:	mov    rbx,rax
   1400086db:	test   rax,rax
   1400086de:	je     0x140008693
   1400086e0:	xor    edx,edx
   1400086e2:	lea    rcx,[rsp+0x30]
   1400086e7:	lea    r8d,[rdx+0x30]
   1400086eb:	call   0x14000a892
   1400086f0:	xor    eax,eax
   1400086f2:	mov    QWORD PTR [rsp+0x48],rbx
   1400086f7:	xor    r9d,r9d
   1400086fa:	mov    DWORD PTR [rsp+0x34],eax
   1400086fe:	xor    r8d,r8d
   140008701:	mov    QWORD PTR [rsp+0x58],rax
   140008706:	xor    edx,edx
   140008708:	mov    QWORD PTR [rsp+0x40],rax
   14000870d:	lea    rcx,[rsp+0x30]
   140008712:	call   QWORD PTR [rip+0x78f0]        # 0x140010008
   140008718:	mov    ebx,eax
   14000871a:	test   eax,eax
   14000871c:	je     0x140008733
   14000871e:	cmp    eax,0x4b8
   140008723:	je     0x14000872c
   140008725:	mov    ecx,eax
   140008727:	jmp    0x1400086a4
   14000872c:	call   0x1400055fc
   140008731:	jmp    0x14000876f
   140008733:	xor    ecx,ecx
   140008735:	xor    ebx,ebx
   140008737:	call   QWORD PTR [rip+0x2963]        # 0x14000b0a0
   14000873d:	mov    rcx,rbp
   140008740:	call   0x14000814c
   140008745:	cmp    eax,0x1388
   14000874a:	jae    0x14000876f
   14000874c:	mov    rcx,rbp
   14000874f:	call   0x14000840c
   140008754:	mov    ecx,0x1580
   140008759:	call   0x1400059b8
   14000875e:	mov    rcx,rax
   140008761:	call   0x140005398
   140008766:	mov    ebx,0x4b8
   14000876b:	jmp    0x14000876f
   14000876d:	xor    ebx,ebx
   14000876f:	cmp    ebx,0x55
   140008772:	jne    0x140008786
   140008774:	mov    ecx,0x50010001
   140008779:	call   QWORD PTR [rip+0x2921]        # 0x14000b0a0
   14000877f:	mov    eax,edi
   140008781:	jmp    0x1400088e0
   140008786:	test   ebx,ebx
   140008788:	jne    0x140008793
   14000878a:	cmp    r12d,edi
   14000878d:	je     0x140008774
   14000878f:	xor    ecx,ecx
   140008791:	jmp    0x140008779
   140008793:	cmp    ebx,0x34
   140008796:	je     0x1400088be
   14000879c:	cmp    ebx,0x56
   14000879f:	je     0x140008802
   1400087a1:	cmp    ebx,0x4be
   1400087a7:	je     0x1400088be
   1400087ad:	cmp    ebx,0x4c3
   1400087b3:	je     0x1400087f8
   1400087b5:	cmp    ebx,0x4ce
   1400087bb:	jbe    0x140008565
   1400087c1:	cmp    ebx,0x4d1
   1400087c7:	jbe    0x1400088be
   1400087cd:	cmp    ebx,0x52e
   1400087d3:	je     0x140008802
   1400087d5:	mov    esi,0xa0010001
   1400087da:	cmp    ebx,esi
   1400087dc:	jne    0x140008565
   1400087e2:	mov    ecx,0x157e
   1400087e7:	call   0x1400059b8
   1400087ec:	mov    rcx,rax
   1400087ef:	call   0x140005398
   1400087f4:	mov    ecx,esi
   1400087f6:	jmp    0x140008779
   1400087f8:	mov    ecx,0x4c3
   1400087fd:	jmp    0x140008779
   140008802:	cmp    DWORD PTR [rsp+0xb8],0x0
   14000880a:	je     0x14000856a
   140008810:	mov    rcx,r14
   140008813:	call   QWORD PTR [rip+0x2a7f]        # 0x14000b298
   140008819:	test   eax,eax
   14000881b:	jne    0x140008839
   14000881d:	lea    r8,[rsp+0xa0]
   140008825:	mov    rdx,r14
   140008828:	lea    ecx,[rax+0x2]
   14000882b:	call   QWORD PTR [rip+0x27cf]        # 0x14000b000
   140008831:	test   al,al
   140008833:	je     0x140008565
   140008839:	mov    ecx,0x157d
   14000883e:	call   0x1400059b8
   140008843:	mov    ecx,edi
   140008845:	mov    rbx,rax
   140008848:	call   0x14000a4f8
   14000884d:	mov    rcx,rax
   140008850:	mov    QWORD PTR [rsp+0x20],r14
   140008855:	mov    r9,rbx
   140008858:	mov    r8d,edi
   14000885b:	mov    edx,edi
   14000885d:	call   0x140006a08
   140008862:	mov    edx,DWORD PTR [rsp+0xb0]
   140008869:	mov    rcx,r13
   14000886c:	call   0x140006d2c
   140008871:	mov    r8,r13
   140008874:	mov    rdx,r14
   140008877:	mov    rcx,rsi
   14000887a:	call   0x140008230
   14000887f:	mov    ebx,eax
   140008881:	test   eax,eax
   140008883:	je     0x14000877f
   140008889:	cmp    eax,0x34
   14000888c:	je     0x1400088be
   14000888e:	cmp    eax,0x4be
   140008893:	je     0x1400088be
   140008895:	cmp    eax,0x4c3
   14000889a:	je     0x1400087f8
   1400088a0:	cmp    eax,0x4ce
   1400088a5:	jbe    0x140008565
   1400088ab:	cmp    eax,0x4d1
   1400088b0:	jbe    0x1400088be
   1400088b2:	mov    esi,0xa0010001
   1400088b7:	cmp    eax,esi
   1400088b9:	jmp    0x1400087dc
   1400088be:	mov    ecx,0x4c6
   1400088c3:	call   QWORD PTR [rip+0x27d7]        # 0x14000b0a0
   1400088c9:	call   0x140005550
   1400088ce:	mov    ecx,ebx
   1400088d0:	call   QWORD PTR [rip+0x27ca]        # 0x14000b0a0
   1400088d6:	jmp    0x14000856a
   1400088db:	mov    eax,0x1
   1400088e0:	lea    r11,[rsp+0x60]
   1400088e5:	mov    rbx,QWORD PTR [r11+0x30]
   1400088e9:	mov    rbp,QWORD PTR [r11+0x38]
   1400088ed:	mov    rsp,r11
   1400088f0:	pop    r14
   1400088f2:	pop    r13
   1400088f4:	pop    r12
   1400088f6:	pop    rdi
   1400088f7:	pop    rsi
   1400088f8:	ret    
   1400088f9:	int3   
   1400088fa:	int3   
   1400088fb:	int3   
   1400088fc:	int3   
   1400088fd:	int3   
   1400088fe:	int3   
   1400088ff:	int3   
   140008900:	mov    QWORD PTR [rsp+0x8],rbx
   140008905:	push   rbp
   140008906:	push   rsi
   140008907:	push   rdi
   140008908:	push   r12
   14000890a:	push   r13
   14000890c:	push   r14
   14000890e:	push   r15
   140008910:	mov    rbp,rsp
   140008913:	sub    rsp,0x50
   140008917:	xor    r15d,r15d
   14000891a:	mov    rsi,rcx
   14000891d:	xor    ecx,ecx
   14000891f:	mov    DWORD PTR [rbp+0x58],r15d
   140008923:	mov    DWORD PTR [rbp+0x48],r15d
   140008927:	mov    DWORD PTR [rbp+0x50],r15d
   14000892b:	mov    QWORD PTR [rbp-0x20],r15
   14000892f:	mov    QWORD PTR [rbp-0x10],r15
   140008933:	call   QWORD PTR [rip+0x2767]        # 0x14000b0a0
   140008939:	mov    ebx,0x104
   14000893e:	lea    r12d,[r15+0x1]
   140008942:	mov    edx,ebx
   140008944:	lea    r13d,[r15+0x7]
   140008948:	mov    eax,r15d
   14000894b:	neg    eax
   14000894d:	mov    r9d,r12d
   140008950:	mov    ecx,r13d
   140008953:	sbb    eax,eax
   140008955:	and    eax,ebx
   140008957:	add    edx,eax
   140008959:	mov    DWORD PTR [rbp+0x48],edx
   14000895c:	mov    r8d,edx
   14000895f:	xor    edx,edx
   140008961:	call   0x140005134
   140008966:	mov    rdi,rax
   140008969:	test   rax,rax
   14000896c:	je     0x140008b6f
   140008972:	mov    r8d,DWORD PTR [rbp+0x48]
   140008976:	mov    rdx,rax
   140008979:	xor    ecx,ecx
   14000897b:	call   QWORD PTR [rip+0x27c7]        # 0x14000b148
   140008981:	test   eax,eax
   140008983:	je     0x140008b82
   140008989:	mov    edx,DWORD PTR [rbp+0x48]
   14000898c:	lea    ecx,[rdx-0x1]
   14000898f:	cmp    eax,ecx
   140008991:	jae    0x14000894b
   140008993:	lea    r8,[rbp+0x58]
   140008997:	mov    rdx,rdi
   14000899a:	mov    ecx,r12d
   14000899d:	call   QWORD PTR [rip+0x2955]        # 0x14000b2f8
   1400089a3:	mov    DWORD PTR [rbp+0x48],eax
   1400089a6:	test   eax,eax
   1400089a8:	jne    0x1400089ce
   1400089aa:	call   QWORD PTR [rip+0x26e8]        # 0x14000b098
   1400089b0:	test   eax,eax
   1400089b2:	jne    0x140008b82
   1400089b8:	call   QWORD PTR [rip+0x26da]        # 0x14000b098
   1400089be:	test   eax,eax
   1400089c0:	jne    0x140008b82
   1400089c6:	lea    ecx,[rax+0x57]
   1400089c9:	jmp    0x140008b7c
   1400089ce:	add    eax,0xa
   1400089d1:	mov    ecx,eax
   1400089d3:	mov    DWORD PTR [rbp+0x48],eax
   1400089d6:	call   0x140007128
   1400089db:	mov    QWORD PTR [rbp-0x18],rax
   1400089df:	mov    rbx,rax
   1400089e2:	test   rax,rax
   1400089e5:	je     0x140008b82
   1400089eb:	mov    r9d,DWORD PTR [rbp+0x48]
   1400089ef:	xor    r8d,r8d
   1400089f2:	mov    rdx,rdi
   1400089f5:	mov    QWORD PTR [rsp+0x20],rax
   1400089fa:	lea    ecx,[r8+0x3]
   1400089fe:	call   QWORD PTR [rip+0x28ec]        # 0x14000b2f0
   140008a04:	test   eax,eax
   140008a06:	jne    0x140008a16
   140008a08:	lea    rcx,[rbp-0x18]
   140008a0c:	call   0x14000704c
   140008a11:	jmp    0x140008b82
   140008a16:	lea    r9,[rbp+0x50]
   140008a1a:	mov    rcx,rbx
   140008a1d:	lea    r8,[rbp-0x10]
   140008a21:	lea    rdx,[rip+0x2da0]        # 0x14000b7c8
   140008a28:	call   QWORD PTR [rip+0x28ba]        # 0x14000b2e8
   140008a2e:	test   eax,eax
   140008a30:	je     0x140008a08
   140008a32:	xor    edx,edx
   140008a34:	mov    r9d,r12d
   140008a37:	mov    ecx,r13d
   140008a3a:	lea    r8d,[rdx+0x40]
   140008a3e:	call   0x140005134
   140008a43:	test   DWORD PTR [rbp+0x50],0xfffffffc
   140008a4a:	mov    r14,rax
   140008a4d:	mov    QWORD PTR [rbp-0x20],r15
   140008a51:	mov    edi,r15d
   140008a54:	jbe    0x140008a08
   140008a56:	mov    rdx,QWORD PTR [rbp-0x10]
   140008a5a:	mov    r8d,edi
   140008a5d:	movzx  ecx,WORD PTR [rdx+r8*4+0x2]
   140008a63:	movzx  r9d,WORD PTR [rdx+r8*4]
   140008a68:	lea    r8,[rip+0x2d91]        # 0x14000b800
   140008a6f:	mov    DWORD PTR [rsp+0x20],ecx
   140008a73:	mov    edx,0x40
   140008a78:	mov    rcx,r14
   140008a7b:	call   0x140001008
   140008a80:	lea    r9,[rbp+0x48]
   140008a84:	mov    rdx,r14
   140008a87:	lea    r8,[rbp-0x20]
   140008a8b:	mov    rcx,rbx
   140008a8e:	call   QWORD PTR [rip+0x2854]        # 0x14000b2e8
   140008a94:	test   eax,eax
   140008a96:	jne    0x140008aae
   140008a98:	mov    eax,DWORD PTR [rbp+0x50]
   140008a9b:	add    edi,r12d
   140008a9e:	shr    eax,0x2
   140008aa1:	mov    rcx,r15
   140008aa4:	mov    QWORD PTR [rbp-0x20],rcx
   140008aa8:	cmp    edi,eax
   140008aaa:	jb     0x140008a56
   140008aac:	jmp    0x140008ab2
   140008aae:	mov    rcx,QWORD PTR [rbp-0x20]
   140008ab2:	test   rcx,rcx
   140008ab5:	je     0x140008a08
   140008abb:	call   QWORD PTR [rip+0x27d7]        # 0x14000b298
   140008ac1:	cmp    eax,0x4
   140008ac4:	ja     0x140008ae7
   140008ac6:	lea    rcx,[rbp-0x18]
   140008aca:	call   0x14000704c
   140008acf:	call   QWORD PTR [rip+0x25c3]        # 0x14000b098
   140008ad5:	test   eax,eax
   140008ad7:	jne    0x140008b82
   140008add:	mov    ecx,0x42b
   140008ae2:	jmp    0x140008b7c
   140008ae7:	mov    rcx,QWORD PTR [rbp-0x20]
   140008aeb:	lea    rdx,[rip+0x2d5e]        # 0x14000b850
   140008af2:	mov    r8d,r12d
   140008af5:	call   0x1400060d8
   140008afa:	cmp    eax,0xffffffff
   140008afd:	je     0x140008b28
   140008aff:	mov    rcx,QWORD PTR [rbp-0x20]
   140008b03:	call   QWORD PTR [rip+0x278f]        # 0x14000b298
   140008b09:	lea    rcx,[rip+0x2d40]        # 0x14000b850
   140008b10:	movsxd rbx,eax
   140008b13:	call   QWORD PTR [rip+0x277f]        # 0x14000b298
   140008b19:	movsxd rcx,eax
   140008b1c:	mov    rax,QWORD PTR [rbp-0x20]
   140008b20:	sub    rbx,rcx
   140008b23:	mov    WORD PTR [rax+rbx*2],r15w
   140008b28:	test   rsi,rsi
   140008b2b:	je     0x140008bb9
   140008b31:	mov    rcx,QWORD PTR [rbp-0x20]
   140008b35:	call   QWORD PTR [rip+0x275d]        # 0x14000b298
   140008b3b:	mov    rcx,rsi
   140008b3e:	mov    ebx,eax
   140008b40:	call   QWORD PTR [rip+0x2752]        # 0x14000b298
   140008b46:	mov    r9d,r12d
   140008b49:	xor    edx,edx
   140008b4b:	mov    ecx,r13d
   140008b4e:	lea    r8d,[rax+0xb]
   140008b52:	add    r8d,ebx
   140008b55:	mov    DWORD PTR [rbp+0x48],r8d
   140008b59:	call   0x140005134
   140008b5e:	mov    rbx,rax
   140008b61:	test   rax,rax
   140008b64:	jne    0x140008b9c
   140008b66:	lea    rcx,[rbp-0x18]
   140008b6a:	call   0x14000704c
   140008b6f:	call   QWORD PTR [rip+0x2523]        # 0x14000b098
   140008b75:	test   eax,eax
   140008b77:	jne    0x140008b82
   140008b79:	lea    ecx,[rax+0x8]
   140008b7c:	call   QWORD PTR [rip+0x251e]        # 0x14000b0a0
   140008b82:	xor    eax,eax
   140008b84:	mov    rbx,QWORD PTR [rsp+0x90]
   140008b8c:	add    rsp,0x50
   140008b90:	pop    r15
   140008b92:	pop    r14
   140008b94:	pop    r13
   140008b96:	pop    r12
   140008b98:	pop    rdi
   140008b99:	pop    rsi
   140008b9a:	pop    rbp
   140008b9b:	ret    
   140008b9c:	mov    edx,DWORD PTR [rbp+0x48]
   140008b9f:	lea    r8,[rip+0x2cba]        # 0x14000b860
   140008ba6:	mov    r9,QWORD PTR [rbp-0x20]
   140008baa:	mov    rcx,rax
   140008bad:	mov    QWORD PTR [rsp+0x20],rsi
   140008bb2:	call   0x140001008
   140008bb7:	jmp    0x140008bdf
   140008bb9:	mov    rdx,QWORD PTR [rbp-0x20]
   140008bbd:	mov    ecx,r13d
   140008bc0:	test   rdx,rdx
   140008bc3:	jne    0x140008bcc
   140008bc5:	call   0x1400050c8
   140008bca:	jmp    0x140008bd7
   140008bcc:	xor    r9d,r9d
   140008bcf:	xor    r8d,r8d
   140008bd2:	call   0x140005134
   140008bd7:	mov    rbx,rax
   140008bda:	test   rax,rax
   140008bdd:	je     0x140008b66
   140008bdf:	mov    rcx,rbx
   140008be2:	mov    QWORD PTR [rbp-0x20],rbx
   140008be6:	call   QWORD PTR [rip+0x269c]        # 0x14000b288
   140008bec:	mov    edi,0x50
   140008bf1:	mov    r9d,r12d
   140008bf4:	mov    r8d,edi
   140008bf7:	xor    edx,edx
   140008bf9:	lea    ecx,[rdi-0x45]
   140008bfc:	call   0x140005134
   140008c01:	mov    rbx,rax
   140008c04:	test   rax,rax
   140008c07:	je     0x140008b66
   140008c0d:	mov    ecx,0x15ed
   140008c12:	call   0x1400059b8
   140008c17:	mov    r9,QWORD PTR [rbp-0x20]
   140008c1b:	mov    r8,rax
   140008c1e:	mov    edx,edi
   140008c20:	mov    rcx,rbx
   140008c23:	call   0x140001008
   140008c28:	lea    rcx,[rbp-0x18]
   140008c2c:	call   0x14000704c
   140008c31:	mov    rax,rbx
   140008c34:	jmp    0x140008b84
   140008c39:	int3   
   140008c3a:	int3   
   140008c3b:	int3   
   140008c3c:	int3   
   140008c3d:	int3   
   140008c3e:	int3   
   140008c3f:	int3   
   140008c40:	mov    QWORD PTR [rsp+0x8],rbx
   140008c45:	mov    QWORD PTR [rsp+0x10],rsi
   140008c4a:	push   rdi
   140008c4b:	sub    rsp,0x20
   140008c4f:	mov    rdi,rcx
   140008c52:	xor    ecx,ecx
   140008c54:	call   QWORD PTR [rip+0x2446]        # 0x14000b0a0
   140008c5a:	test   rdi,rdi
   140008c5d:	je     0x140008cd6
   140008c5f:	mov    edx,0x7c
   140008c64:	mov    rcx,rdi
   140008c67:	call   0x140005ea4
   140008c6c:	mov    ebx,eax
   140008c6e:	cmp    eax,0xffffffff
   140008c71:	jne    0x140008c86
   140008c73:	xor    ecx,ecx
   140008c75:	call   QWORD PTR [rip+0x2425]        # 0x14000b0a0
   140008c7b:	mov    rcx,rdi
   140008c7e:	call   QWORD PTR [rip+0x2614]        # 0x14000b298
   140008c84:	mov    ebx,eax
   140008c86:	xor    edx,edx
   140008c88:	lea    r8d,[rbx+0x5]
   140008c8c:	lea    ecx,[rdx+0xc]
   140008c8f:	lea    r9d,[rdx+0x1]
   140008c93:	call   0x140005134
   140008c98:	mov    rsi,rax
   140008c9b:	test   rax,rax
   140008c9e:	jne    0x140008caf
   140008ca0:	call   QWORD PTR [rip+0x23f2]        # 0x14000b098
   140008ca6:	test   eax,eax
   140008ca8:	jne    0x140008ce9
   140008caa:	lea    ecx,[rsi+0x8]
   140008cad:	jmp    0x140008ce3
   140008caf:	lea    r8d,[rbx+0x1]
   140008cb3:	mov    rcx,rax
   140008cb6:	lea    rdx,[rip+0x2baf]        # 0x14000b86c
   140008cbd:	call   0x140006448
   140008cc2:	lea    r8d,[rbx+0x2]
   140008cc6:	mov    rdx,rdi
   140008cc9:	mov    rcx,rsi
   140008ccc:	call   0x1400064ec
   140008cd1:	mov    rax,rsi
   140008cd4:	jmp    0x140008ceb
   140008cd6:	call   QWORD PTR [rip+0x23bc]        # 0x14000b098
   140008cdc:	test   eax,eax
   140008cde:	jne    0x140008ce9
   140008ce0:	lea    ecx,[rax+0x57]
   140008ce3:	call   QWORD PTR [rip+0x23b7]        # 0x14000b0a0
   140008ce9:	xor    eax,eax
   140008ceb:	mov    rbx,QWORD PTR [rsp+0x30]
   140008cf0:	mov    rsi,QWORD PTR [rsp+0x38]
   140008cf5:	add    rsp,0x20
   140008cf9:	pop    rdi
   140008cfa:	ret    
   140008cfb:	int3   
   140008cfc:	int3   
   140008cfd:	int3   
   140008cfe:	int3   
   140008cff:	int3   
   140008d00:	int3   
   140008d01:	int3   
   140008d02:	int3   
   140008d03:	int3   
   140008d04:	mov    QWORD PTR [rsp+0x8],rbx
   140008d09:	mov    QWORD PTR [rsp+0x10],rbp
   140008d0e:	mov    QWORD PTR [rsp+0x18],rsi
   140008d13:	push   rdi
   140008d14:	push   r12
   140008d16:	push   r13
   140008d18:	push   r14
   140008d1a:	push   r15
   140008d1c:	sub    rsp,0x30
   140008d20:	mov    r14,rcx
   140008d23:	xor    r13d,r13d
   140008d26:	xor    ecx,ecx
   140008d28:	mov    r12d,r13d
   140008d2b:	mov    rbx,r8
   140008d2e:	call   QWORD PTR [rip+0x236c]        # 0x14000b0a0
   140008d34:	test   rbx,rbx
   140008d37:	jne    0x140008d4f
   140008d39:	call   QWORD PTR [rip+0x2359]        # 0x14000b098
   140008d3f:	test   eax,eax
   140008d41:	jne    0x140008fc9
   140008d47:	lea    ecx,[rax+0x57]
   140008d4a:	jmp    0x140008fc3
   140008d4f:	test   r14,r14
   140008d52:	je     0x140008d39
   140008d54:	or     DWORD PTR [r14],0xffffffff
   140008d58:	mov    r15d,r13d
   140008d5b:	add    rbx,0x58
   140008d5f:	lea    rbp,[rbx-0x58]
   140008d63:	test   rbp,rbp
   140008d66:	je     0x140008fb4
   140008d6c:	call   QWORD PTR [rip+0x23ee]        # 0x14000b160
   140008d72:	or     DWORD PTR [rsp+0x28],0xffffffff
   140008d77:	or     r9d,0xffffffff
   140008d7b:	mov    ecx,eax
   140008d7d:	mov    r8,rbp
   140008d80:	lea    rax,[rip+0x2ae9]        # 0x14000b870
   140008d87:	mov    QWORD PTR [rsp+0x20],rax
   140008d8c:	lea    edx,[r9+0x2]
   140008d90:	call   QWORD PTR [rip+0x23ea]        # 0x14000b180
   140008d96:	add    eax,0xfffffffe
   140008d99:	jne    0x140008d39
   140008d9b:	mov    rdi,QWORD PTR [rbx-0x48]
   140008d9f:	cmp    DWORD PTR [rbx],r13d
   140008da2:	jne    0x140008d39
   140008da4:	cmp    QWORD PTR [rbx+0x8],r13
   140008da8:	jne    0x140008d39
   140008daa:	cmp    QWORD PTR [rbx+0x10],r13
   140008dae:	jne    0x140008d39
   140008db0:	cmp    QWORD PTR [rbx+0x18],r13
   140008db4:	jne    0x140008d39
   140008db6:	mov    rsi,rdi
   140008db9:	and    esi,0x40000
   140008dbf:	jne    0x140008ddc
   140008dc1:	mov    rcx,QWORD PTR [rbx-0x38]
   140008dc5:	test   rcx,rcx
   140008dc8:	je     0x140008d39
   140008dce:	call   QWORD PTR [rip+0x24c4]        # 0x14000b298
   140008dd4:	test   eax,eax
   140008dd6:	je     0x140008d39
   140008ddc:	mov    rax,rdi
   140008ddf:	and    eax,0x20000
   140008de4:	je     0x140008df0
   140008de6:	cmp    DWORD PTR [rbx-0x50],0xa
   140008dea:	jne    0x140008d39
   140008df0:	test   rax,rax
   140008df3:	je     0x140008e05
   140008df5:	cmp    r12d,0x1
   140008df9:	je     0x140008d39
   140008dff:	mov    r12d,0x1
   140008e05:	test   rsi,rsi
   140008e08:	je     0x140008e17
   140008e0a:	cmp    DWORD PTR [r14],0xffffffff
   140008e0e:	jne    0x140008d39
   140008e14:	mov    DWORD PTR [r14],r15d
   140008e17:	mov    ecx,0x60000
   140008e1c:	mov    rax,rdi
   140008e1f:	and    rax,rcx
   140008e22:	cmp    rax,rcx
   140008e25:	je     0x140008d39
   140008e2b:	mov    eax,DWORD PTR [rbx-0x50]
   140008e2e:	cmp    eax,0x1
   140008e31:	je     0x140008ef8
   140008e37:	jbe    0x140008d39
   140008e3d:	cmp    eax,0x3
   140008e40:	jbe    0x140008e9b
   140008e42:	cmp    eax,0x6
   140008e45:	jbe    0x140008fad
   140008e4b:	cmp    eax,0x8
   140008e4e:	jbe    0x140008e9b
   140008e50:	cmp    eax,0x9
   140008e53:	je     0x140008e7e
   140008e55:	cmp    eax,0xa
   140008e58:	jne    0x140008d39
   140008e5e:	test   dil,0xf
   140008e62:	jne    0x140008d39
   140008e68:	test   rdi,0xfff0
   140008e6f:	jne    0x140008d39
   140008e75:	test   rdi,0xffffffffffedffff
   140008e7c:	jmp    0x140008eed
   140008e7e:	cmp    QWORD PTR [rbx-0x10],r13
   140008e82:	je     0x140008d39
   140008e88:	cmp    QWORD PTR [rbx-0x8],r13
   140008e8c:	jne    0x140008f91
   140008e92:	mov    QWORD PTR [rbx-0x8],rbp
   140008e96:	jmp    0x140008f91
   140008e9b:	test   dil,0x2
   140008e9f:	jne    0x140008fad
   140008ea5:	test   rdi,0x10040
   140008eac:	jne    0x140008d39
   140008eb2:	test   dil,dil
   140008eb5:	js     0x140008d39
   140008ebb:	mov    rax,QWORD PTR [rbx-0x20]
   140008ebf:	test   rax,rax
   140008ec2:	je     0x140008d39
   140008ec8:	test   dil,0x1
   140008ecc:	je     0x140008edf
   140008ece:	mov    rax,QWORD PTR [rax]
   140008ed1:	test   rax,rax
   140008ed4:	je     0x140008d39
   140008eda:	cmp    DWORD PTR [rax],0x9
   140008edd:	jmp    0x140008eed
   140008edf:	cmp    DWORD PTR [rbx-0x40],0x1
   140008ee3:	ja     0x140008d39
   140008ee9:	test   dil,0x20
   140008eed:	jne    0x140008d39
   140008ef3:	jmp    0x140008f91
   140008ef8:	mov    r8,rdi
   140008efb:	and    r8d,0x10000
   140008f02:	je     0x140008f2f
   140008f04:	mov    rax,rdi
   140008f07:	and    eax,0x1
   140008f0a:	jne    0x140008d39
   140008f10:	cmp    QWORD PTR [rbx-0x20],r13
   140008f14:	jne    0x140008d39
   140008f1a:	test   r13b,r13b
   140008f1d:	jne    0x140008d39
   140008f23:	cmp    DWORD PTR [rbx-0x18],0x1
   140008f27:	je     0x140008d39
   140008f2d:	jmp    0x140008f59
   140008f2f:	mov    rcx,QWORD PTR [rbx-0x20]
   140008f33:	test   rcx,rcx
   140008f36:	je     0x140008d39
   140008f3c:	mov    rax,rdi
   140008f3f:	and    eax,0x1
   140008f42:	je     0x140008f59
   140008f44:	mov    rdx,QWORD PTR [rcx]
   140008f47:	test   rdx,rdx
   140008f4a:	je     0x140008d39
   140008f50:	cmp    DWORD PTR [rdx],0x9
   140008f53:	jne    0x140008d39
   140008f59:	test   dil,0x2
   140008f5d:	je     0x140008f69
   140008f5f:	cmp    QWORD PTR [rbx-0x28],r13
   140008f63:	je     0x140008d39
   140008f69:	test   rax,rax
   140008f6c:	jne    0x140008f91
   140008f6e:	cmp    DWORD PTR [rbx-0x40],0x1
   140008f72:	jne    0x140008d39
   140008f78:	test   dil,0x20
   140008f7c:	jne    0x140008d39
   140008f82:	test   r8,r8
   140008f85:	jne    0x140008f91
   140008f87:	cmp    DWORD PTR [rbx-0x18],0x2
   140008f8b:	jb     0x140008d39
   140008f91:	mov    DWORD PTR [rbx-0x3c],r13d
   140008f95:	inc    r15d
   140008f98:	add    rbx,0x78
   140008f9c:	cmp    r15d,0xc
   140008fa0:	jb     0x140008d5f
   140008fa6:	mov    eax,0x1
   140008fab:	jmp    0x140008fcb
   140008fad:	mov    ecx,0x78
   140008fb2:	jmp    0x140008fc3
   140008fb4:	call   QWORD PTR [rip+0x20de]        # 0x14000b098
   140008fba:	test   eax,eax
   140008fbc:	jne    0x140008fc9
   140008fbe:	mov    ecx,0x42b
   140008fc3:	call   QWORD PTR [rip+0x20d7]        # 0x14000b0a0
   140008fc9:	xor    eax,eax
   140008fcb:	mov    rbx,QWORD PTR [rsp+0x60]
   140008fd0:	mov    rbp,QWORD PTR [rsp+0x68]
   140008fd5:	mov    rsi,QWORD PTR [rsp+0x70]
   140008fda:	add    rsp,0x30
   140008fde:	pop    r15
   140008fe0:	pop    r14
   140008fe2:	pop    r13
   140008fe4:	pop    r12
   140008fe6:	pop    rdi
   140008fe7:	ret    
   140008fe8:	int3   
   140008fe9:	int3   
   140008fea:	int3   
   140008feb:	int3   
   140008fec:	int3   
   140008fed:	int3   
   140008fee:	int3   
   140008fef:	int3   
   140008ff0:	mov    QWORD PTR [rsp+0x8],rbx
   140008ff5:	push   rbp
   140008ff6:	push   rsi
   140008ff7:	push   rdi
   140008ff8:	push   r12
   140008ffa:	push   r13
   140008ffc:	push   r14
   140008ffe:	push   r15
   140009000:	sub    rsp,0x60
   140009004:	and    DWORD PTR [rsp+0xb8],0x0
   14000900c:	mov    rdi,rcx
   14000900f:	and    DWORD PTR [rsp+0xb0],0x0
   140009017:	xor    ecx,ecx
   140009019:	movaps XMMWORD PTR [rsp+0x50],xmm6
   14000901e:	mov    r15,r8
   140009021:	movaps XMMWORD PTR [rsp+0x40],xmm7
   140009026:	mov    rsi,rdx
   140009029:	xorps  xmm7,xmm7
   14000902c:	xorps  xmm6,xmm6
   14000902f:	call   QWORD PTR [rip+0x206b]        # 0x14000b0a0
   140009035:	test   r15,r15
   140009038:	je     0x1400090e4
   14000903e:	mov    rbp,QWORD PTR [r15+0x10]
   140009042:	mov    r14,QWORD PTR [r15+0x8]
   140009046:	test   rbp,rbp
   140009049:	je     0x1400090e4
   14000904f:	test   r14,r14
   140009052:	je     0x1400090e4
   140009058:	mov    rcx,QWORD PTR [rbp+0x30]
   14000905c:	mov    eax,DWORD PTR [rbp+0x8]
   14000905f:	mov    rbx,QWORD PTR [rbp+0x38]
   140009063:	mov    r13,QWORD PTR [rbp+0x10]
   140009067:	mov    r12d,DWORD PTR [rbp+0x40]
   14000906b:	mov    QWORD PTR [rsp+0x30],rcx
   140009070:	cmp    eax,0xa
   140009073:	je     0x1400090d8
   140009075:	test   rsi,rsi
   140009078:	jne    0x1400090d8
   14000907a:	test   r13b,0x10
   14000907e:	jne    0x1400090d8
   140009080:	test   rdi,rdi
   140009083:	je     0x1400090b1
   140009085:	mov    rcx,rdi
   140009088:	call   QWORD PTR [rip+0x220a]        # 0x14000b298
   14000908e:	test   eax,eax
   140009090:	je     0x1400090b1
   140009092:	mov    ecx,0x15eb
   140009097:	call   0x1400059b8
   14000909c:	mov    r8,rdi
   14000909f:	mov    r9,r14
   1400090a2:	mov    rdx,rax
   1400090a5:	mov    ecx,0x2
   1400090aa:	call   0x140005414
   1400090af:	jmp    0x1400090cb
   1400090b1:	call   QWORD PTR [rip+0x1fe1]        # 0x14000b098
   1400090b7:	test   eax,eax
   1400090b9:	jne    0x1400090c6
   1400090bb:	mov    ecx,0x42b
   1400090c0:	call   QWORD PTR [rip+0x1fda]        # 0x14000b0a0
   1400090c6:	call   0x140005550
   1400090cb:	mov    ecx,0x800401e4
   1400090d0:	call   QWORD PTR [rip+0x1fca]        # 0x14000b0a0
   1400090d6:	jmp    0x1400090fc
   1400090d8:	test   rdi,rdi
   1400090db:	jne    0x140009120
   1400090dd:	bt     r13,0x12
   1400090e2:	jb     0x14000912c
   1400090e4:	call   QWORD PTR [rip+0x1fae]        # 0x14000b098
   1400090ea:	test   eax,eax
   1400090ec:	jne    0x1400090f7
   1400090ee:	lea    ecx,[rax+0x57]
   1400090f1:	call   QWORD PTR [rip+0x1fa9]        # 0x14000b0a0
   1400090f7:	call   0x140005550
   1400090fc:	xor    eax,eax
   1400090fe:	mov    rbx,QWORD PTR [rsp+0xa0]
   140009106:	movaps xmm6,XMMWORD PTR [rsp+0x50]
   14000910b:	movaps xmm7,XMMWORD PTR [rsp+0x40]
   140009110:	add    rsp,0x60
   140009114:	pop    r15
   140009116:	pop    r14
   140009118:	pop    r13
   14000911a:	pop    r12
   14000911c:	pop    rdi
   14000911d:	pop    rsi
   14000911e:	pop    rbp
   14000911f:	ret    
   140009120:	cmp    QWORD PTR [rbp+0x28],0x0
   140009125:	je     0x140009130
   140009127:	cmp    eax,0x9
   14000912a:	je     0x140009130
   14000912c:	mov    rdi,QWORD PTR [rbp+0x28]
   140009130:	cmp    eax,0x1
   140009133:	je     0x1400093f9
   140009139:	jbe    0x1400090e4
   14000913b:	cmp    eax,0x3
   14000913e:	jbe    0x1400092e5
   140009144:	cmp    eax,0x6
   140009147:	jbe    0x14000944f
   14000914d:	cmp    eax,0x8
   140009150:	jbe    0x1400091b1
   140009152:	cmp    eax,0x9
   140009155:	je     0x140009190
   140009157:	cmp    eax,0xa
   14000915a:	jne    0x1400090e4
   14000915c:	test   rsi,rsi
   14000915f:	je     0x140009185
   140009161:	test   rdi,rdi
   140009164:	je     0x1400090b1
   14000916a:	mov    rcx,rdi
   14000916d:	call   QWORD PTR [rip+0x2125]        # 0x14000b298
   140009173:	test   eax,eax
   140009175:	je     0x1400090b1
   14000917b:	mov    ecx,0x15f3
   140009180:	jmp    0x140009097
   140009185:	mov    DWORD PTR [rbx],0x1
   14000918b:	jmp    0x14000944f
   140009190:	mov    rbx,QWORD PTR [rbp+0x48]
   140009194:	mov    rcx,rbx
   140009197:	call   QWORD PTR [rip+0x22b3]        # 0x14000b450
   14000919d:	mov    r8,QWORD PTR [rbp+0x50]
   1400091a1:	mov    r9,r15
   1400091a4:	mov    rdx,rsi
   1400091a7:	mov    rcx,rdi
   1400091aa:	call   rbx
   1400091ac:	jmp    0x1400090fe
   1400091b1:	test   rsi,rsi
   1400091b4:	je     0x14000944f
   1400091ba:	mov    rcx,rsi
   1400091bd:	call   0x140005c38
   1400091c2:	call   QWORD PTR [rip+0x1ed0]        # 0x14000b098
   1400091c8:	test   eax,eax
   1400091ca:	je     0x140009218
   1400091cc:	test   r13b,0x10
   1400091d0:	je     0x1400091dd
   1400091d2:	cmp    DWORD PTR [r15+0x4],0xffffffff
   1400091d7:	jne    0x1400093c6
   1400091dd:	test   rdi,rdi
   1400091e0:	je     0x1400091f9
   1400091e2:	mov    rcx,rdi
   1400091e5:	call   QWORD PTR [rip+0x20ad]        # 0x14000b298
   1400091eb:	test   eax,eax
   1400091ed:	je     0x1400091f9
   1400091ef:	mov    ecx,0x15e3
   1400091f4:	jmp    0x140009097
   1400091f9:	mov    ecx,0x15f1
   1400091fe:	call   0x1400059b8
   140009203:	mov    rdx,rax
   140009206:	mov    r8,r14
   140009209:	mov    ecx,0x1
   14000920e:	call   0x140005414
   140009213:	jmp    0x1400090cb
   140009218:	cmp    DWORD PTR [rbp+0x8],0x7
   14000921c:	mov    rcx,rsi
   14000921f:	jne    0x14000922f
   140009221:	call   0x140005c38
   140009226:	xorps  xmm7,xmm7
   140009229:	cvtsd2ss xmm7,xmm0
   14000922d:	jmp    0x140009237
   14000922f:	call   0x140005c38
   140009234:	movaps xmm6,xmm0
   140009237:	test   r13b,0x1
   14000923b:	je     0x1400092cd
   140009241:	mov    eax,DWORD PTR [rbp+0x10]
   140009244:	bt     rax,0xe
   140009249:	jae    0x140009293
   14000924b:	mov    rcx,QWORD PTR [rbx]
   14000924e:	xor    r9d,r9d
   140009251:	cmp    DWORD PTR [rbp+0x8],0x7
   140009255:	jne    0x14000926f
   140009257:	movss  DWORD PTR [rsp+0xb0],xmm7
   140009260:	lea    r8,[rsp+0xb0]
   140009268:	mov    edx,0x60000
   14000926d:	jmp    0x140009285
   14000926f:	movsd  QWORD PTR [rsp+0xb0],xmm6
   140009278:	lea    r8,[rsp+0xb0]
   140009280:	mov    edx,0x70000
   140009285:	call   0x140007484
   14000928a:	cmp    eax,0xffffffff
   14000928d:	jne    0x14000944f
   140009293:	cmp    DWORD PTR [rbp+0x8],0x7
   140009297:	mov    rcx,QWORD PTR [rbx]
   14000929a:	jne    0x1400092a6
   14000929c:	movaps xmm1,xmm7
   14000929f:	call   0x1400077ac
   1400092a4:	jmp    0x1400092ae
   1400092a6:	movaps xmm1,xmm6
   1400092a9:	call   0x140007818
   1400092ae:	cmp    eax,0xffffffff
   1400092b1:	jne    0x14000944f
   1400092b7:	call   QWORD PTR [rip+0x1ddb]        # 0x14000b098
   1400092bd:	test   eax,eax
   1400092bf:	jne    0x1400090f7
   1400092c5:	lea    ecx,[rax+0x8]
   1400092c8:	jmp    0x1400090f1
   1400092cd:	cmp    DWORD PTR [rbp+0x8],0x7
   1400092d1:	jne    0x1400092dc
   1400092d3:	movss  DWORD PTR [rbx],xmm7
   1400092d7:	jmp    0x14000944f
   1400092dc:	movsd  QWORD PTR [rbx],xmm6
   1400092e0:	jmp    0x14000944f
   1400092e5:	xor    r12d,r12d
   1400092e8:	cmp    eax,0x2
   1400092eb:	sete   r12b
   1400092ef:	test   rsi,rsi
   1400092f2:	je     0x14000944f
   1400092f8:	mov    rcx,rsi
   1400092fb:	call   QWORD PTR [rip+0x1f97]        # 0x14000b298
   140009301:	test   eax,eax
   140009303:	je     0x1400093b9
   140009309:	mov    r8d,r12d
   14000930c:	mov    rcx,rsi
   14000930f:	call   0x140005dc4
   140009314:	test   eax,eax
   140009316:	je     0x1400093b9
   14000931c:	mov    rcx,rsi
   14000931f:	call   0x140005cf0
   140009324:	cmp    r12d,0x1
   140009328:	jne    0x140009335
   14000932a:	mov    edi,DWORD PTR [rsp+0xb0]
   140009331:	mov    esi,eax
   140009333:	jmp    0x14000933e
   140009335:	mov    esi,DWORD PTR [rsp+0xb8]
   14000933c:	mov    edi,eax
   14000933e:	test   r13b,0x1
   140009342:	je     0x1400093ab
   140009344:	mov    ecx,DWORD PTR [rbp+0x10]
   140009347:	bt     rcx,0xe
   14000934c:	jae    0x14000938a
   14000934e:	mov    rcx,QWORD PTR [rbx]
   140009351:	lea    r8,[rsp+0xb0]
   140009359:	xor    r9d,r9d
   14000935c:	cmp    r12d,0x1
   140009360:	jne    0x140009370
   140009362:	mov    DWORD PTR [rsp+0xb0],esi
   140009369:	mov    edx,0x30000
   14000936e:	jmp    0x14000937c
   140009370:	mov    DWORD PTR [rsp+0xb0],edi
   140009377:	mov    edx,0x40000
   14000937c:	call   0x140007484
   140009381:	cmp    eax,0xffffffff
   140009384:	jne    0x14000944f
   14000938a:	mov    rcx,QWORD PTR [rbx]
   14000938d:	cmp    r12d,0x1
   140009391:	jne    0x14000939f
   140009393:	mov    edx,esi
   140009395:	call   0x1400076dc
   14000939a:	jmp    0x1400092ae
   14000939f:	mov    edx,edi
   1400093a1:	call   0x140007744
   1400093a6:	jmp    0x1400092ae
   1400093ab:	cmp    r12d,0x1
   1400093af:	cmove  edi,esi
   1400093b2:	mov    DWORD PTR [rbx],edi
   1400093b4:	jmp    0x14000944f
   1400093b9:	test   r13b,0x10
   1400093bd:	je     0x1400093d3
   1400093bf:	cmp    DWORD PTR [r15+0x4],0xffffffff
   1400093c4:	je     0x1400093d3
   1400093c6:	mov    eax,0x1
   1400093cb:	mov    DWORD PTR [r15],eax
   1400093ce:	jmp    0x1400090fe
   1400093d3:	test   rdi,rdi
   1400093d6:	je     0x1400093ef
   1400093d8:	mov    rcx,rdi
   1400093db:	call   QWORD PTR [rip+0x1eb7]        # 0x14000b298
   1400093e1:	test   eax,eax
   1400093e3:	je     0x1400093ef
   1400093e5:	mov    ecx,0x15e2
   1400093ea:	jmp    0x140009097
   1400093ef:	mov    ecx,0x15f0
   1400093f4:	jmp    0x1400091fe
   1400093f9:	test   rsi,rsi
   1400093fc:	je     0x140009444
   1400093fe:	test   r13b,0x42
   140009402:	je     0x140009444
   140009404:	xor    r9d,r9d
   140009407:	xor    r8d,r8d
   14000940a:	mov    rdx,rsi
   14000940d:	lea    ecx,[r9+0xa]
   140009411:	call   0x140005134
   140009416:	test   rax,rax
   140009419:	je     0x1400092b7
   14000941f:	lea    rdx,[rip+0x22ee]        # 0x14000b714
   140009426:	mov    rcx,rax
   140009429:	call   0x14000617c
   14000942e:	mov    rsi,rax
   140009431:	call   QWORD PTR [rip+0x1c61]        # 0x14000b098
   140009437:	test   eax,eax
   140009439:	jne    0x1400090f7
   14000943f:	mov    rcx,QWORD PTR [rsp+0x30]
   140009444:	test   r13b,0x2
   140009448:	je     0x1400094b9
   14000944a:	test   rsi,rsi
   14000944d:	jne    0x140009459
   14000944f:	mov    eax,0x1
   140009454:	jmp    0x1400090fe
   140009459:	mov    rdx,rcx
   14000945c:	mov    r8d,0x1
   140009462:	mov    rcx,rsi
   140009465:	call   0x140005f0c
   14000946a:	test   eax,eax
   14000946c:	jne    0x1400094b9
   14000946e:	test   rdi,rdi
   140009471:	je     0x1400094a7
   140009473:	mov    rcx,rdi
   140009476:	call   QWORD PTR [rip+0x1e1c]        # 0x14000b298
   14000947c:	test   eax,eax
   14000947e:	je     0x1400094a7
   140009480:	mov    ecx,0x15e1
   140009485:	call   0x1400059b8
   14000948a:	mov    rdx,rax
   14000948d:	mov    QWORD PTR [rsp+0x20],r14
   140009492:	mov    r9,rdi
   140009495:	mov    r8,rsi
   140009498:	mov    ecx,0x3
   14000949d:	call   0x140005414
   1400094a2:	jmp    0x1400090cb
   1400094a7:	mov    ecx,0x15ec
   1400094ac:	call   0x1400059b8
   1400094b1:	mov    r8,rsi
   1400094b4:	jmp    0x14000909f
   1400094b9:	test   rsi,rsi
   1400094bc:	je     0x14000944f
   1400094be:	test   r13b,r13b
   1400094c1:	jns    0x1400094f6
   1400094c3:	mov    rcx,rsi
   1400094c6:	call   QWORD PTR [rip+0x1dcc]        # 0x14000b298
   1400094cc:	test   eax,eax
   1400094ce:	jne    0x1400094f6
   1400094d0:	test   rdi,rdi
   1400094d3:	je     0x1400094ec
   1400094d5:	mov    rcx,rdi
   1400094d8:	call   QWORD PTR [rip+0x1dba]        # 0x14000b298
   1400094de:	test   eax,eax
   1400094e0:	je     0x1400094ec
   1400094e2:	mov    ecx,0x15ee
   1400094e7:	jmp    0x140009097
   1400094ec:	mov    ecx,0x15ef
   1400094f1:	jmp    0x1400091fe
   1400094f6:	test   r13b,0x1
   1400094fa:	je     0x140009535
   1400094fc:	mov    eax,DWORD PTR [rbp+0x10]
   1400094ff:	bt     rax,0xe
   140009504:	jae    0x140009525
   140009506:	mov    rcx,QWORD PTR [rbx]
   140009509:	mov    r9d,0x1
   14000950f:	mov    r8,rsi
   140009512:	mov    edx,0x20000
   140009517:	call   0x140007484
   14000951c:	cmp    eax,0xffffffff
   14000951f:	jne    0x14000944f
   140009525:	mov    rcx,QWORD PTR [rbx]
   140009528:	mov    rdx,rsi
   14000952b:	call   0x140007648
   140009530:	jmp    0x1400092ae
   140009535:	test   r12d,r12d
   140009538:	je     0x14000959f
   14000953a:	mov    rcx,rsi
   14000953d:	call   QWORD PTR [rip+0x1d55]        # 0x14000b298
   140009543:	cmp    eax,r12d
   140009546:	jl     0x14000959f
   140009548:	test   rdi,rdi
   14000954b:	je     0x14000957e
   14000954d:	mov    rcx,rdi
   140009550:	call   QWORD PTR [rip+0x1d42]        # 0x14000b298
   140009556:	test   eax,eax
   140009558:	je     0x14000957e
   14000955a:	mov    ecx,0x15f4
   14000955f:	call   0x1400059b8
   140009564:	mov    rdx,rax
   140009567:	lea    r9d,[r12-0x1]
   14000956c:	mov    r8,rdi
   14000956f:	mov    ecx,0x2
   140009574:	call   0x140005414
   140009579:	jmp    0x1400090cb
   14000957e:	mov    ecx,0x15f2
   140009583:	call   0x1400059b8
   140009588:	mov    rdx,rax
   14000958b:	lea    r8d,[r12-0x1]
   140009590:	mov    ecx,0x1
   140009595:	call   0x140005414
   14000959a:	jmp    0x1400090cb
   14000959f:	bt     r13,0x10
   1400095a4:	jae    0x1400095cc
   1400095a6:	mov    rcx,rsi
   1400095a9:	call   QWORD PTR [rip+0x1ce9]        # 0x14000b298
   1400095af:	lea    r12d,[rax+0x1]
   1400095b3:	lea    ecx,[r12+r12*1]
   1400095b7:	call   0x140007128
   1400095bc:	mov    rbx,rax
   1400095bf:	test   rax,rax
   1400095c2:	je     0x1400092b7
   1400095c8:	mov    QWORD PTR [rbp+0x38],rax
   1400095cc:	mov    r8d,r12d
   1400095cf:	mov    rdx,rsi
   1400095d2:	mov    rcx,rbx
   1400095d5:	call   0x140006448
   1400095da:	jmp    0x14000944f
   1400095df:	int3   
   1400095e0:	int3   
   1400095e1:	int3   
   1400095e2:	int3   
   1400095e3:	int3   
   1400095e4:	int3   
   1400095e5:	int3   
   1400095e6:	int3   
   1400095e7:	int3   
   1400095e8:	mov    QWORD PTR [rsp+0x8],rbx
   1400095ed:	mov    QWORD PTR [rsp+0x10],rsi
   1400095f2:	mov    QWORD PTR [rsp+0x18],rdi
   1400095f7:	push   r14
   1400095f9:	sub    rsp,0x20
   1400095fd:	xor    ecx,ecx
   1400095ff:	mov    r14,r8
   140009602:	mov    rbx,rdx
   140009605:	call   QWORD PTR [rip+0x1a95]        # 0x14000b0a0
   14000960b:	test   rbx,rbx
   14000960e:	je     0x1400096bd
   140009614:	test   r14,r14
   140009617:	je     0x1400096bd
   14000961d:	xor    ecx,ecx
   14000961f:	call   QWORD PTR [rip+0x1a7b]        # 0x14000b0a0
   140009625:	mov    rcx,r14
   140009628:	call   QWORD PTR [rip+0x1c6a]        # 0x14000b298
   14000962e:	cmp    eax,0x1
   140009631:	jle    0x140009694
   140009633:	movzx  edx,WORD PTR [r14]
   140009637:	lea    rcx,[rip+0x223a]        # 0x14000b878
   14000963e:	call   0x140005ea4
   140009643:	cmp    eax,0xffffffff
   140009646:	je     0x140009694
   140009648:	xor    edi,edi
   14000964a:	add    rbx,0x20
   14000964e:	lea    rax,[rbx-0x20]
   140009652:	test   rax,rax
   140009655:	je     0x14000969f
   140009657:	mov    esi,DWORD PTR [rbx-0x10]
   14000965a:	mov    rcx,QWORD PTR [rbx]
   14000965d:	shr    rsi,0x14
   140009661:	not    esi
   140009663:	and    esi,0x1
   140009666:	test   rcx,rcx
   140009669:	je     0x140009689
   14000966b:	call   QWORD PTR [rip+0x1c27]        # 0x14000b298
   140009671:	test   eax,eax
   140009673:	jle    0x140009689
   140009675:	mov    rdx,QWORD PTR [rbx]
   140009678:	lea    rcx,[r14+0x2]
   14000967c:	mov    r8d,esi
   14000967f:	call   0x140005f0c
   140009684:	cmp    eax,0x1
   140009687:	je     0x14000969b
   140009689:	inc    edi
   14000968b:	add    rbx,0x78
   14000968f:	cmp    edi,0xc
   140009692:	jb     0x14000964e
   140009694:	mov    ecx,0x490
   140009699:	jmp    0x1400096ca
   14000969b:	mov    eax,edi
   14000969d:	jmp    0x1400096d3
   14000969f:	call   QWORD PTR [rip+0x19f3]        # 0x14000b098
   1400096a5:	test   eax,eax
   1400096a7:	jne    0x1400096b4
   1400096a9:	mov    ecx,0x42b
   1400096ae:	call   QWORD PTR [rip+0x19ec]        # 0x14000b0a0
   1400096b4:	call   0x140005550
   1400096b9:	xor    eax,eax
   1400096bb:	jmp    0x1400096d3
   1400096bd:	call   QWORD PTR [rip+0x19d5]        # 0x14000b098
   1400096c3:	test   eax,eax
   1400096c5:	jne    0x1400096d0
   1400096c7:	lea    ecx,[rax+0x57]
   1400096ca:	call   QWORD PTR [rip+0x19d0]        # 0x14000b0a0
   1400096d0:	or     eax,0xffffffff
   1400096d3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400096d8:	mov    rsi,QWORD PTR [rsp+0x38]
   1400096dd:	mov    rdi,QWORD PTR [rsp+0x40]
   1400096e2:	add    rsp,0x20
   1400096e6:	pop    r14
   1400096e8:	ret    
   1400096e9:	int3   
   1400096ea:	int3   
   1400096eb:	int3   
   1400096ec:	int3   
   1400096ed:	int3   
   1400096ee:	int3   
   1400096ef:	int3   
   1400096f0:	mov    rax,rsp
   1400096f3:	mov    QWORD PTR [rax+0x8],rbp
   1400096f7:	mov    QWORD PTR [rax+0x10],rsi
   1400096fb:	mov    QWORD PTR [rax+0x18],rdi
   1400096ff:	mov    QWORD PTR [rax+0x20],r14
   140009703:	push   r15
   140009705:	sub    rsp,0x20
   140009709:	xor    ecx,ecx
   14000970b:	mov    rdi,r9
   14000970e:	mov    rsi,r8
   140009711:	mov    r15,rdx
   140009714:	call   QWORD PTR [rip+0x1986]        # 0x14000b0a0
   14000971a:	test   r15,r15
   14000971d:	je     0x1400097e3
   140009723:	test   rsi,rsi
   140009726:	je     0x1400097e3
   14000972c:	test   rdi,rdi
   14000972f:	je     0x1400097e3
   140009735:	and    QWORD PTR [rdi],0x0
   140009739:	mov    edx,0x3a
   14000973e:	and    QWORD PTR [rdi+0x8],0x0
   140009743:	mov    rcx,rsi
   140009746:	call   0x140005ea4
   14000974b:	movsxd rbp,eax
   14000974e:	cmp    ebp,0xffffffff
   140009751:	je     0x1400097f6
   140009757:	mov    rcx,rsi
   14000975a:	call   QWORD PTR [rip+0x1b38]        # 0x14000b298
   140009760:	xor    edx,edx
   140009762:	lea    r8d,[rbp+0x5]
   140009766:	mov    r14d,eax
   140009769:	sub    r14d,ebp
   14000976c:	dec    r14d
   14000976f:	lea    ecx,[rdx+0x8]
   140009772:	lea    r9d,[rdx+0x1]
   140009776:	call   0x140005134
   14000977b:	mov    QWORD PTR [rdi],rax
   14000977e:	test   rax,rax
   140009781:	jne    0x140009792
   140009783:	call   QWORD PTR [rip+0x190f]        # 0x14000b098
   140009789:	test   eax,eax
   14000978b:	jne    0x1400097f6
   14000978d:	lea    ecx,[rax+0x8]
   140009790:	jmp    0x1400097f0
   140009792:	xor    edx,edx
   140009794:	lea    r8d,[r14+0x5]
   140009798:	lea    ecx,[rdx+0x9]
   14000979b:	lea    r9d,[rdx+0x1]
   14000979f:	call   0x140005134
   1400097a4:	mov    QWORD PTR [rdi+0x8],rax
   1400097a8:	test   rax,rax
   1400097ab:	je     0x140009783
   1400097ad:	mov    rcx,QWORD PTR [rdi]
   1400097b0:	lea    r8d,[rbp+0x1]
   1400097b4:	mov    rdx,rsi
   1400097b7:	call   0x140006448
   1400097bc:	test   r14d,r14d
   1400097bf:	je     0x1400097d6
   1400097c1:	mov    rcx,QWORD PTR [rdi+0x8]
   1400097c5:	lea    rdx,[rsi+0x2]
   1400097c9:	lea    rdx,[rdx+rbp*2]
   1400097cd:	lea    r8d,[r14+0x1]
   1400097d1:	call   0x140006448
   1400097d6:	mov    r8,QWORD PTR [rdi]
   1400097d9:	mov    rdx,r15
   1400097dc:	call   0x1400095e8
   1400097e1:	jmp    0x1400097f9
   1400097e3:	call   QWORD PTR [rip+0x18af]        # 0x14000b098
   1400097e9:	test   eax,eax
   1400097eb:	jne    0x1400097f6
   1400097ed:	lea    ecx,[rax+0x57]
   1400097f0:	call   QWORD PTR [rip+0x18aa]        # 0x14000b0a0
   1400097f6:	or     eax,0xffffffff
   1400097f9:	mov    rbp,QWORD PTR [rsp+0x30]
   1400097fe:	mov    rsi,QWORD PTR [rsp+0x38]
   140009803:	mov    rdi,QWORD PTR [rsp+0x40]
   140009808:	mov    r14,QWORD PTR [rsp+0x48]
   14000980d:	add    rsp,0x20
   140009811:	pop    r15
   140009813:	ret    
   140009814:	int3   
   140009815:	int3   
   140009816:	int3   
   140009817:	int3   
   140009818:	int3   
   140009819:	int3   
   14000981a:	int3   
   14000981b:	int3   
   14000981c:	mov    QWORD PTR [rsp+0x8],rbx
   140009821:	mov    QWORD PTR [rsp+0x10],rbp
   140009826:	mov    QWORD PTR [rsp+0x18],rsi
   14000982b:	push   rdi
   14000982c:	sub    rsp,0x20
   140009830:	mov    rbx,rdx
   140009833:	test   rdx,rdx
   140009836:	je     0x1400098ac
   140009838:	call   QWORD PTR [rip+0x185a]        # 0x14000b098
   14000983e:	mov    ebp,eax
   140009840:	call   0x140005358
   140009845:	mov    ecx,0x7
   14000984a:	test   rax,rax
   14000984d:	jne    0x140009856
   14000984f:	call   0x1400050c8
   140009854:	jmp    0x140009864
   140009856:	xor    r9d,r9d
   140009859:	xor    r8d,r8d
   14000985c:	mov    rdx,rax
   14000985f:	call   0x140005134
   140009864:	mov    rdi,rax
   140009867:	test   rax,rax
   14000986a:	je     0x1400098ac
   14000986c:	add    rbx,0x38
   140009870:	mov    esi,0xc
   140009875:	cmp    QWORD PTR [rbx],0x0
   140009879:	je     0x14000988d
   14000987b:	mov    eax,DWORD PTR [rbx-0x28]
   14000987e:	bt     rax,0x10
   140009883:	jae    0x14000988d
   140009885:	mov    rcx,rbx
   140009888:	call   0x14000704c
   14000988d:	add    rbx,0x78
   140009891:	sub    rsi,0x1
   140009895:	jne    0x140009875
   140009897:	mov    rcx,rdi
   14000989a:	call   0x140005398
   14000989f:	mov    ecx,ebp
   1400098a1:	call   QWORD PTR [rip+0x17f9]        # 0x14000b0a0
   1400098a7:	lea    eax,[rsi+0x1]
   1400098aa:	jmp    0x1400098ae
   1400098ac:	xor    eax,eax
   1400098ae:	mov    rbx,QWORD PTR [rsp+0x30]
   1400098b3:	mov    rbp,QWORD PTR [rsp+0x38]
   1400098b8:	mov    rsi,QWORD PTR [rsp+0x40]
   1400098bd:	add    rsp,0x20
   1400098c1:	pop    rdi
   1400098c2:	ret    
   1400098c3:	int3   
   1400098c4:	int3   
   1400098c5:	int3   
   1400098c6:	int3   
   1400098c7:	int3   
   1400098c8:	int3   
   1400098c9:	int3   
   1400098ca:	int3   
   1400098cb:	int3   
   1400098cc:	mov    DWORD PTR [rsp+0x20],r9d
   1400098d1:	mov    DWORD PTR [rsp+0x18],r8d
   1400098d6:	mov    QWORD PTR [rsp+0x10],rdx
   1400098db:	push   rbp
   1400098dc:	push   rbx
   1400098dd:	push   rsi
   1400098de:	push   rdi
   1400098df:	push   r12
   1400098e1:	push   r13
   1400098e3:	push   r14
   1400098e5:	push   r15
   1400098e7:	mov    rbp,rsp
   1400098ea:	sub    rsp,0x68
   1400098ee:	and    DWORD PTR [rbp+0x60],0x0
   1400098f2:	mov    r13d,ecx
   1400098f5:	xor    ecx,ecx
   1400098f7:	mov    rsi,rdx
   1400098fa:	call   QWORD PTR [rip+0x17a0]        # 0x14000b0a0
   140009900:	test   r13d,r13d
   140009903:	je     0x140009c31
   140009909:	test   rsi,rsi
   14000990c:	je     0x140009c31
   140009912:	mov    rbx,QWORD PTR [rbp+0x68]
   140009916:	test   rbx,rbx
   140009919:	je     0x140009c31
   14000991f:	call   0x1400058f8
   140009924:	test   eax,eax
   140009926:	jne    0x14000994a
   140009928:	mov    ecx,0x157f
   14000992d:	call   0x1400059b8
   140009932:	mov    rcx,rax
   140009935:	call   0x140005398
   14000993a:	mov    ecx,0x47e
   14000993f:	call   QWORD PTR [rip+0x175b]        # 0x14000b0a0
   140009945:	jmp    0x140009c41
   14000994a:	call   0x140004fe8
   14000994f:	test   eax,eax
   140009951:	je     0x140009c3c
   140009957:	xor    ecx,ecx
   140009959:	call   0x140008900
   14000995e:	mov    r15,rax
   140009961:	test   rax,rax
   140009964:	je     0x140009c3c
   14000996a:	mov    r8,rbx
   14000996d:	lea    rcx,[rbp+0x60]
   140009971:	call   0x140008d04
   140009976:	test   eax,eax
   140009978:	je     0x140009c3c
   14000997e:	and    DWORD PTR [rbp+0x58],0x0
   140009982:	mov    r12d,0x1
   140009988:	mov    edx,r12d
   14000998b:	mov    DWORD PTR [rbp+0x48],edx
   14000998e:	cmp    r13d,r12d
   140009991:	jbe    0x140009b4e
   140009997:	mov    eax,edx
   140009999:	mov    r12d,0x2
   14000999f:	mov    rdi,QWORD PTR [rsi+rax*8]
   1400099a3:	lea    eax,[rdx+0x1]
   1400099a6:	cmp    eax,r13d
   1400099a9:	jae    0x1400099b1
   1400099ab:	mov    r14,QWORD PTR [rsi+rax*8]
   1400099af:	jmp    0x1400099b4
   1400099b1:	xor    r14d,r14d
   1400099b4:	mov    r8,rdi
   1400099b7:	mov    rdx,rbx
   1400099ba:	call   0x1400095e8
   1400099bf:	cmp    eax,0xffffffff
   1400099c2:	jne    0x1400099f9
   1400099c4:	lea    r9,[rbp-0x38]
   1400099c8:	mov    r8,rdi
   1400099cb:	mov    rdx,rbx
   1400099ce:	call   0x1400096f0
   1400099d3:	cmp    eax,0xffffffff
   1400099d6:	jne    0x1400099eb
   1400099d8:	mov    eax,DWORD PTR [rbp+0x60]
   1400099db:	cmp    eax,0xffffffff
   1400099de:	je     0x140009ac6
   1400099e4:	mov    r14,rdi
   1400099e7:	xor    edi,edi
   1400099e9:	jmp    0x1400099f3
   1400099eb:	mov    rdi,QWORD PTR [rbp-0x38]
   1400099ef:	mov    r14,QWORD PTR [rbp-0x30]
   1400099f3:	mov    r12d,0x1
   1400099f9:	cdqe   
   1400099fb:	imul   rsi,rax,0x78
   1400099ff:	add    rsi,rbx
   140009a02:	je     0x140009b84
   140009a08:	test   r14,r14
   140009a0b:	je     0x140009a53
   140009a0d:	cmp    r12d,0x2
   140009a11:	jne    0x140009a53
   140009a13:	mov    ecx,DWORD PTR [rsi+0x8]
   140009a16:	lea    eax,[rcx-0x7]
   140009a19:	cmp    eax,r12d
   140009a1c:	jbe    0x140009a26
   140009a1e:	lea    eax,[rcx-0x1]
   140009a21:	cmp    eax,r12d
   140009a24:	ja     0x140009a4a
   140009a26:	mov    r8,r14
   140009a29:	mov    rdx,rbx
   140009a2c:	call   0x1400095e8
   140009a31:	cmp    eax,0xffffffff
   140009a34:	jne    0x140009a4a
   140009a36:	lea    r9,[rbp-0x38]
   140009a3a:	mov    r8,r14
   140009a3d:	mov    rdx,rbx
   140009a40:	call   0x1400096f0
   140009a45:	cmp    eax,0xffffffff
   140009a48:	je     0x140009a53
   140009a4a:	mov    r12d,0x1
   140009a50:	xor    r14d,r14d
   140009a53:	mov    eax,DWORD PTR [rbp+0x60]
   140009a56:	lea    r8,[rbp-0x28]
   140009a5a:	mov    rdx,r14
   140009a5d:	mov    DWORD PTR [rbp-0x24],eax
   140009a60:	mov    rcx,rdi
   140009a63:	mov    QWORD PTR [rbp-0x18],rsi
   140009a67:	mov    DWORD PTR [rbp-0x28],r12d
   140009a6b:	mov    QWORD PTR [rbp-0x20],r15
   140009a6f:	call   0x140008ff0
   140009a74:	mov    r8d,DWORD PTR [rbp-0x28]
   140009a78:	test   eax,eax
   140009a7a:	je     0x140009bc4
   140009a80:	mov    eax,DWORD PTR [rsi+0x18]
   140009a83:	test   eax,eax
   140009a85:	je     0x140009a8c
   140009a87:	cmp    eax,DWORD PTR [rsi+0x1c]
   140009a8a:	je     0x140009af3
   140009a8c:	mov    eax,DWORD PTR [rsi+0x10]
   140009a8f:	mov    r12d,0x1
   140009a95:	add    DWORD PTR [rsi+0x1c],r12d
   140009a99:	and    eax,0x20000
   140009a9e:	mov    ecx,DWORD PTR [rbp+0x58]
   140009aa1:	test   rax,rax
   140009aa4:	mov    edx,DWORD PTR [rbp+0x48]
   140009aa7:	cmovne ecx,r12d
   140009aab:	add    edx,r8d
   140009aae:	mov    DWORD PTR [rbp+0x58],ecx
   140009ab1:	mov    DWORD PTR [rbp+0x48],edx
   140009ab4:	cmp    edx,r13d
   140009ab7:	jae    0x140009b4a
   140009abd:	mov    rsi,QWORD PTR [rbp+0x50]
   140009ac1:	jmp    0x140009997
   140009ac6:	mov    ecx,0x15e7
   140009acb:	call   0x1400059b8
   140009ad0:	mov    ecx,r12d
   140009ad3:	mov    r9,r15
   140009ad6:	mov    r8,rdi
   140009ad9:	mov    rdx,rax
   140009adc:	call   0x140005414
   140009ae1:	mov    rdx,rbx
   140009ae4:	call   0x14000981c
   140009ae9:	mov    ecx,0x800401e4
   140009aee:	jmp    0x14000993f
   140009af3:	test   rdi,rdi
   140009af6:	je     0x140009b2a
   140009af8:	mov    rcx,rdi
   140009afb:	call   QWORD PTR [rip+0x1797]        # 0x14000b298
   140009b01:	test   eax,eax
   140009b03:	je     0x140009b2a
   140009b05:	mov    ecx,0x15e5
   140009b0a:	call   0x1400059b8
   140009b0f:	mov    r9d,DWORD PTR [rsi+0x18]
   140009b13:	mov    rdx,rax
   140009b16:	mov    r8,rdi
   140009b19:	mov    QWORD PTR [rsp+0x20],r15
   140009b1e:	mov    ecx,0x3
   140009b23:	call   0x140005414
   140009b28:	jmp    0x140009ae1
   140009b2a:	mov    ecx,0x15ea
   140009b2f:	call   0x1400059b8
   140009b34:	mov    r8d,DWORD PTR [rsi+0x18]
   140009b38:	mov    rdx,rax
   140009b3b:	mov    r9,r15
   140009b3e:	mov    ecx,0x2
   140009b43:	call   0x140005414
   140009b48:	jmp    0x140009ae1
   140009b4a:	test   ecx,ecx
   140009b4c:	jne    0x140009b74
   140009b4e:	xor    edx,edx
   140009b50:	mov    rcx,rbx
   140009b53:	test   rcx,rcx
   140009b56:	je     0x140009baa
   140009b58:	mov    eax,DWORD PTR [rcx+0x10]
   140009b5b:	bt     rax,0x13
   140009b60:	jae    0x140009b68
   140009b62:	cmp    DWORD PTR [rcx+0x1c],0x0
   140009b66:	je     0x140009b9c
   140009b68:	add    edx,r12d
   140009b6b:	add    rcx,0x78
   140009b6f:	cmp    edx,0xc
   140009b72:	jb     0x140009b53
   140009b74:	xor    ecx,ecx
   140009b76:	call   QWORD PTR [rip+0x1524]        # 0x14000b0a0
   140009b7c:	mov    eax,r12d
   140009b7f:	jmp    0x140009c43
   140009b84:	call   QWORD PTR [rip+0x150e]        # 0x14000b098
   140009b8a:	test   eax,eax
   140009b8c:	jne    0x140009c3c
   140009b92:	mov    ecx,0x42b
   140009b97:	jmp    0x140009c36
   140009b9c:	cmp    QWORD PTR [rcx+0x20],0x0
   140009ba1:	jne    0x140009bf8
   140009ba3:	bt     rax,0x12
   140009ba8:	jb     0x140009bce
   140009baa:	call   QWORD PTR [rip+0x14e8]        # 0x14000b098
   140009bb0:	test   eax,eax
   140009bb2:	jne    0x140009bbf
   140009bb4:	mov    ecx,0x42b
   140009bb9:	call   QWORD PTR [rip+0x14e1]        # 0x14000b0a0
   140009bbf:	call   0x140005550
   140009bc4:	mov    rdx,rbx
   140009bc7:	call   0x14000981c
   140009bcc:	jmp    0x140009c41
   140009bce:	mov    rdi,QWORD PTR [rcx+0x28]
   140009bd2:	test   rdi,rdi
   140009bd5:	je     0x140009c14
   140009bd7:	mov    rcx,rdi
   140009bda:	call   QWORD PTR [rip+0x16b8]        # 0x14000b298
   140009be0:	test   eax,eax
   140009be2:	je     0x140009c14
   140009be4:	mov    ecx,0x15e4
   140009be9:	call   0x1400059b8
   140009bee:	mov    ecx,0x2
   140009bf3:	jmp    0x140009ad3
   140009bf8:	mov    rdi,QWORD PTR [rcx+0x28]
   140009bfc:	test   rdi,rdi
   140009bff:	jne    0x140009bd7
   140009c01:	mov    rcx,QWORD PTR [rcx+0x20]
   140009c05:	call   0x140008c40
   140009c0a:	mov    rdi,rax
   140009c0d:	test   rax,rax
   140009c10:	jne    0x140009bd7
   140009c12:	jmp    0x140009bbf
   140009c14:	mov    ecx,0x15e8
   140009c19:	call   0x1400059b8
   140009c1e:	mov    rdx,rax
   140009c21:	mov    r8,r15
   140009c24:	mov    ecx,r12d
   140009c27:	call   0x140005414
   140009c2c:	jmp    0x140009ae1
   140009c31:	mov    ecx,0x57
   140009c36:	call   QWORD PTR [rip+0x1464]        # 0x14000b0a0
   140009c3c:	call   0x140005550
   140009c41:	xor    eax,eax
   140009c43:	add    rsp,0x68
   140009c47:	pop    r15
   140009c49:	pop    r14
   140009c4b:	pop    r13
   140009c4d:	pop    r12
   140009c4f:	pop    rdi
   140009c50:	pop    rsi
   140009c51:	pop    rbx
   140009c52:	pop    rbp
   140009c53:	ret    
   140009c54:	int3   
   140009c55:	int3   
   140009c56:	int3   
   140009c57:	int3   
   140009c58:	int3   
   140009c59:	int3   
   140009c5a:	int3   
   140009c5b:	int3   
   140009c5c:	int3   
   140009c5d:	int3   
   140009c5e:	int3   
   140009c5f:	int3   
   140009c60:	sub    rsp,0x38
   140009c64:	and    DWORD PTR [rsp+0x28],0x0
   140009c69:	mov    r9,QWORD PTR [rip+0x1410]        # 0x14000b080
   140009c70:	mov    r8,QWORD PTR [rip+0x1c09]        # 0x14000b880
   140009c77:	mov    QWORD PTR [rsp+0x20],rdx
   140009c7c:	mov    rdx,rcx
   140009c7f:	lea    rcx,[rip+0xffffffffffff637a]        # 0x140000000
   140009c86:	call   QWORD PTR [rip+0x13ec]        # 0x14000b078
   140009c8c:	add    rsp,0x38
   140009c90:	ret    
   140009c91:	int3   
   140009c92:	int3   
   140009c93:	int3   
   140009c94:	int3   
   140009c95:	int3   
   140009c96:	int3   
   140009c97:	int3   
   140009c98:	int3   
   140009c99:	int3   
   140009c9a:	int3   
   140009c9b:	int3   
   140009c9c:	int3   
   140009c9d:	int3   
   140009c9e:	int3   
   140009c9f:	int3   
   140009ca0:	sub    rsp,0x28
   140009ca4:	mov    eax,0x5a4d
   140009ca9:	cmp    WORD PTR [rip+0xffffffffffff6350],ax        # 0x140000000
   140009cb0:	je     0x140009cb6
   140009cb2:	xor    eax,eax
   140009cb4:	jmp    0x140009d05
   140009cb6:	movsxd rcx,DWORD PTR [rip+0xffffffffffff637f]        # 0x14000003c
   140009cbd:	lea    rax,[rip+0xffffffffffff633c]        # 0x140000000
   140009cc4:	add    rcx,rax
   140009cc7:	cmp    DWORD PTR [rcx],0x4550
   140009ccd:	jne    0x140009cb2
   140009ccf:	movzx  eax,WORD PTR [rcx+0x18]
   140009cd3:	cmp    eax,0x10b
   140009cd8:	je     0x140009cf4
   140009cda:	cmp    eax,0x20b
   140009cdf:	jne    0x140009cb2
   140009ce1:	xor    eax,eax
   140009ce3:	cmp    DWORD PTR [rcx+0x84],0xe
   140009cea:	jbe    0x140009d05
   140009cec:	cmp    DWORD PTR [rcx+0xf8],eax
   140009cf2:	jmp    0x140009d02
   140009cf4:	xor    eax,eax
   140009cf6:	cmp    DWORD PTR [rcx+0x74],0xe
   140009cfa:	jbe    0x140009d05
   140009cfc:	cmp    DWORD PTR [rcx+0xe8],eax
   140009d02:	setne  al
   140009d05:	mov    ecx,0x1
   140009d0a:	mov    DWORD PTR [rip+0x4330],eax        # 0x14000e040
   140009d10:	call   0x14000a0d8
   140009d15:	mov    ecx,eax
   140009d17:	call   QWORD PTR [rip+0x168b]        # 0x14000b3a8
   140009d1d:	mov    rcx,QWORD PTR [rip+0x162c]        # 0x14000b350
   140009d24:	or     rax,0xffffffffffffffff
   140009d28:	mov    QWORD PTR [rip+0x49d9],rax        # 0x14000e708
   140009d2f:	mov    QWORD PTR [rip+0x49da],rax        # 0x14000e710
   140009d36:	mov    eax,DWORD PTR [rip+0x4318]        # 0x14000e054
   140009d3c:	mov    DWORD PTR [rcx],eax
   140009d3e:	mov    rcx,QWORD PTR [rip+0x1603]        # 0x14000b348
   140009d45:	mov    eax,DWORD PTR [rip+0x42fd]        # 0x14000e048
   140009d4b:	mov    DWORD PTR [rcx],eax
   140009d4d:	call   0x14000a130
   140009d52:	cmp    DWORD PTR [rip+0x42a7],0x0        # 0x14000e000
   140009d59:	jne    0x140009d68
   140009d5b:	lea    rcx,[rip+0x3ce]        # 0x14000a130
   140009d62:	call   QWORD PTR [rip+0x1600]        # 0x14000b368
   140009d68:	xor    eax,eax
   140009d6a:	add    rsp,0x28
   140009d6e:	ret    
   140009d6f:	int3   
   140009d70:	int3   
   140009d71:	int3   
   140009d72:	int3   
   140009d73:	int3   
   140009d74:	int3   
   140009d75:	int3   
   140009d76:	int3   
   140009d77:	int3   
   140009d78:	int3   
   140009d79:	int3   
   140009d7a:	int3   
   140009d7b:	int3   
   140009d7c:	int3   
   140009d7d:	int3   
   140009d7e:	int3   
   140009d7f:	int3   
   140009d80:	sub    rsp,0x38
   140009d84:	mov    eax,DWORD PTR [rip+0x42c6]        # 0x14000e050
   140009d8a:	lea    r8,[rip+0x42a7]        # 0x14000e038
   140009d91:	mov    r9d,DWORD PTR [rip+0x42b4]        # 0x14000e04c
   140009d98:	lea    rdx,[rip+0x4291]        # 0x14000e030
   140009d9f:	mov    DWORD PTR [rip+0x429f],eax        # 0x14000e044
   140009da5:	lea    rcx,[rip+0x427c]        # 0x14000e028
   140009dac:	lea    rax,[rip+0x4291]        # 0x14000e044
   140009db3:	mov    QWORD PTR [rsp+0x20],rax
   140009db8:	call   QWORD PTR [rip+0x160a]        # 0x14000b3c8
   140009dbe:	mov    DWORD PTR [rip+0x4268],eax        # 0x14000e02c
   140009dc4:	add    rsp,0x38
   140009dc8:	ret    
   140009dc9:	int3   
   140009dca:	int3   
   140009dcb:	int3   
   140009dcc:	int3   
   140009dcd:	int3   
   140009dce:	int3   
   140009dcf:	int3   
   140009dd0:	mov    rax,rsp
   140009dd3:	mov    QWORD PTR [rax+0x8],rbx
   140009dd7:	mov    QWORD PTR [rax+0x10],rsi
   140009ddb:	mov    QWORD PTR [rax+0x18],rdi
   140009ddf:	mov    QWORD PTR [rax+0x20],r12
   140009de3:	push   r14
   140009de5:	sub    rsp,0x30
   140009de9:	mov    rax,QWORD PTR gs:0x30
   140009df2:	mov    rbx,QWORD PTR [rax+0x8]
   140009df6:	xor    r14d,r14d
   140009df9:	xor    eax,eax
   140009dfb:	lock cmpxchg QWORD PTR [rip+0x4914],rbx        # 0x14000e718
   140009e04:	je     0x140009e22
   140009e06:	cmp    rax,rbx
   140009e09:	jne    0x140009e15
   140009e0b:	mov    ebx,0x1
   140009e10:	mov    r14d,ebx
   140009e13:	jmp    0x140009e27
   140009e15:	mov    ecx,0x3e8
   140009e1a:	call   QWORD PTR [rip+0x1490]        # 0x14000b2b0
   140009e20:	jmp    0x140009df9
   140009e22:	mov    ebx,0x1
   140009e27:	mov    eax,DWORD PTR [rip+0x48f3]        # 0x14000e720
   140009e2d:	cmp    eax,ebx
   140009e2f:	jne    0x140009e3d
   140009e31:	mov    ecx,0x1f
   140009e36:	call   0x14000a124
   140009e3b:	jmp    0x140009ea6
   140009e3d:	mov    eax,DWORD PTR [rip+0x48dd]        # 0x14000e720
   140009e43:	test   eax,eax
   140009e45:	jne    0x140009ea0
   140009e47:	mov    DWORD PTR [rip+0x48d3],ebx        # 0x14000e720
   140009e4d:	lea    r12,[rip+0x163c]        # 0x14000b490
   140009e54:	lea    rdi,[rip+0x161d]        # 0x14000b478
   140009e5b:	mov    QWORD PTR [rsp+0x28],rdi
   140009e60:	mov    DWORD PTR [rsp+0x20],eax
   140009e64:	cmp    rdi,r12
   140009e67:	jae    0x140009e92
   140009e69:	test   eax,eax
   140009e6b:	jne    0x140009e96
   140009e6d:	mov    rsi,QWORD PTR [rdi]
   140009e70:	test   rsi,rsi
   140009e73:	je     0x140009e87
   140009e75:	mov    rcx,rsi
   140009e78:	mov    rax,QWORD PTR [rip+0x15d1]        # 0x14000b450
   140009e7f:	call   rax
   140009e81:	call   rsi
   140009e83:	mov    DWORD PTR [rsp+0x20],eax
   140009e87:	add    rdi,0x8
   140009e8b:	mov    QWORD PTR [rsp+0x28],rdi
   140009e90:	jmp    0x140009e64
   140009e92:	test   eax,eax
   140009e94:	je     0x140009ea6
   140009e96:	mov    eax,0xff
   140009e9b:	jmp    0x140009f87
   140009ea0:	mov    DWORD PTR [rip+0x417e],ebx        # 0x14000e024
   140009ea6:	mov    eax,DWORD PTR [rip+0x4874]        # 0x14000e720
   140009eac:	cmp    eax,ebx
   140009eae:	jne    0x140009ecd
   140009eb0:	lea    rdx,[rip+0x15b9]        # 0x14000b470
   140009eb7:	lea    rcx,[rip+0x15a2]        # 0x14000b460
   140009ebe:	call   0x14000a2fa
   140009ec3:	mov    DWORD PTR [rip+0x4853],0x2        # 0x14000e720
   140009ecd:	test   r14d,r14d
   140009ed0:	jne    0x140009edb
   140009ed2:	xor    eax,eax
   140009ed4:	xchg   QWORD PTR [rip+0x483d],rax        # 0x14000e718
   140009edb:	cmp    QWORD PTR [rip+0x4845],0x0        # 0x14000e728
   140009ee3:	je     0x140009f13
   140009ee5:	lea    rcx,[rip+0x483c]        # 0x14000e728
   140009eec:	call   0x14000a190
   140009ef1:	test   eax,eax
   140009ef3:	je     0x140009f13
   140009ef5:	mov    rbx,QWORD PTR [rip+0x482c]        # 0x14000e728
   140009efc:	mov    rcx,rbx
   140009eff:	mov    rax,QWORD PTR [rip+0x154a]        # 0x14000b450
   140009f06:	call   rax
   140009f08:	xor    r8d,r8d
   140009f0b:	lea    edx,[r8+0x2]
   140009f0f:	xor    ecx,ecx
   140009f11:	call   rbx
   140009f13:	mov    r8,QWORD PTR [rip+0x411e]        # 0x14000e038
   140009f1a:	mov    rdx,QWORD PTR [rip+0x410f]        # 0x14000e030
   140009f21:	mov    ecx,DWORD PTR [rip+0x4101]        # 0x14000e028
   140009f27:	call   0x140001088
   140009f2c:	mov    DWORD PTR [rip+0x40ee],eax        # 0x14000e020
   140009f32:	cmp    DWORD PTR [rip+0x4107],0x0        # 0x14000e040
   140009f39:	jne    0x140009f43
   140009f3b:	mov    ecx,eax
   140009f3d:	call   QWORD PTR [rip+0x149d]        # 0x14000b3e0
   140009f43:	cmp    DWORD PTR [rip+0x40da],0x0        # 0x14000e024
   140009f4a:	jne    0x140009f58
   140009f4c:	call   QWORD PTR [rip+0x141e]        # 0x14000b370
   140009f52:	mov    eax,DWORD PTR [rip+0x40c8]        # 0x14000e020
   140009f58:	jmp    0x140009f87
   140009f5a:	mov    DWORD PTR [rip+0x40c0],eax        # 0x14000e020
   140009f60:	cmp    DWORD PTR [rip+0x40d9],0x0        # 0x14000e040
   140009f67:	jne    0x140009f72
   140009f69:	mov    ecx,eax
   140009f6b:	call   QWORD PTR [rip+0x1407]        # 0x14000b378
   140009f71:	int3   
   140009f72:	cmp    DWORD PTR [rip+0x40ab],0x0        # 0x14000e024
   140009f79:	jne    0x140009f87
   140009f7b:	call   QWORD PTR [rip+0x13ef]        # 0x14000b370
   140009f81:	mov    eax,DWORD PTR [rip+0x4099]        # 0x14000e020
   140009f87:	mov    rbx,QWORD PTR [rsp+0x40]
   140009f8c:	mov    rsi,QWORD PTR [rsp+0x48]
   140009f91:	mov    rdi,QWORD PTR [rsp+0x50]
   140009f96:	mov    r12,QWORD PTR [rsp+0x58]
   140009f9b:	add    rsp,0x30
   140009f9f:	pop    r14
   140009fa1:	ret    
   140009fa2:	int3   
   140009fa3:	int3   
   140009fa4:	int3   
   140009fa5:	int3   
   140009fa6:	int3   
   140009fa7:	int3   
   140009fa8:	int3   
   140009fa9:	int3   
   140009faa:	int3   
   140009fab:	int3   
   140009fac:	int3   
   140009fad:	int3   
   140009fae:	int3   
   140009faf:	int3   
   140009fb0:	sub    rsp,0x28
   140009fb4:	call   0x14000a224
   140009fb9:	add    rsp,0x28
   140009fbd:	jmp    0x140009dd0
   140009fc2:	int3   
   140009fc3:	int3   
   140009fc4:	int3   
   140009fc5:	int3   
   140009fc6:	int3   
   140009fc7:	int3   
   140009fc8:	int3   
   140009fc9:	int3   
   140009fca:	int3   
   140009fcb:	int3   
   140009fcc:	int3   
   140009fcd:	int3   
   140009fce:	int3   
   140009fcf:	int3   
   140009fd0:	int3   
   140009fd1:	int3   
   140009fd2:	int3   
   140009fd3:	int3   
   140009fd4:	int3   
   140009fd5:	int3   
   140009fd6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140009fe0:	cmp    rcx,QWORD PTR [rip+0x4021]        # 0x14000e008
   140009fe7:	jne    0x140009ff9
   140009fe9:	rol    rcx,0x10
   140009fed:	test   cx,0xffff
   140009ff2:	jne    0x140009ff5
   140009ff4:	ret    
   140009ff5:	ror    rcx,0x10
   140009ff9:	jmp    0x14000a370
   140009ffe:	int3   
   140009fff:	int3   
   14000a000:	int3   
   14000a001:	int3   
   14000a002:	int3   
   14000a003:	int3   
   14000a004:	int3   
   14000a005:	int3   
   14000a006:	int3   
   14000a007:	int3   
   14000a008:	int3   
   14000a009:	int3   
   14000a00a:	int3   
   14000a00b:	int3   
   14000a00c:	int3   
   14000a00d:	int3   
   14000a00e:	int3   
   14000a00f:	int3   
   14000a010:	sub    rsp,0x28
   14000a014:	mov    rax,QWORD PTR [rcx]
   14000a017:	cmp    DWORD PTR [rax],0xe06d7363
   14000a01d:	jne    0x14000a042
   14000a01f:	cmp    DWORD PTR [rax+0x18],0x4
   14000a023:	jne    0x14000a042
   14000a025:	mov    ecx,DWORD PTR [rax+0x20]
   14000a028:	lea    eax,[rcx-0x19930520]
   14000a02e:	cmp    eax,0x2
   14000a031:	jbe    0x14000a03b
   14000a033:	cmp    ecx,0x1994000
   14000a039:	jne    0x14000a042
   14000a03b:	call   QWORD PTR [rip+0x12ff]        # 0x14000b340
   14000a041:	int3   
   14000a042:	xor    eax,eax
   14000a044:	add    rsp,0x28
   14000a048:	ret    
   14000a049:	int3   
   14000a04a:	int3   
   14000a04b:	int3   
   14000a04c:	int3   
   14000a04d:	int3   
   14000a04e:	int3   
   14000a04f:	int3   
   14000a050:	sub    rsp,0x28
   14000a054:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x14000a010
   14000a05b:	call   QWORD PTR [rip+0x102f]        # 0x14000b090
   14000a061:	xor    eax,eax
   14000a063:	add    rsp,0x28
   14000a067:	ret    
   14000a068:	int3   
   14000a069:	int3   
   14000a06a:	int3   
   14000a06b:	int3   
   14000a06c:	int3   
   14000a06d:	int3   
   14000a06e:	jmp    QWORD PTR [rip+0x1364]        # 0x14000b3d8
   14000a074:	int3   
   14000a075:	int3   
   14000a076:	int3   
   14000a077:	int3   
   14000a078:	int3   
   14000a079:	int3   
   14000a07a:	int3   
   14000a07b:	int3   
   14000a07c:	sub    rsp,0x18
   14000a080:	xor    edx,edx
   14000a082:	lea    rax,[rcx-0x1]
   14000a086:	cmp    rax,0xfffffffffffffffd
   14000a08a:	ja     0x14000a0c8
   14000a08c:	mov    eax,0x5a4d
   14000a091:	cmp    WORD PTR [rcx],ax
   14000a094:	jne    0x14000a0c0
   14000a096:	cmp    DWORD PTR [rcx+0x3c],edx
   14000a099:	jl     0x14000a0c0
   14000a09b:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   14000a0a2:	jae    0x14000a0c0
   14000a0a4:	movsxd rax,DWORD PTR [rcx+0x3c]
   14000a0a8:	add    rax,rcx
   14000a0ab:	mov    QWORD PTR [rsp],rax
   14000a0af:	cmp    DWORD PTR [rax],0x4550
   14000a0b5:	cmovne rax,rdx
   14000a0b9:	mov    rdx,rax
   14000a0bc:	mov    QWORD PTR [rsp],rax
   14000a0c0:	jmp    0x14000a0c8
   14000a0c2:	xor    edx,edx
   14000a0c4:	mov    QWORD PTR [rsp],rdx
   14000a0c8:	mov    rax,rdx
   14000a0cb:	add    rsp,0x18
   14000a0cf:	ret    
   14000a0d0:	int3   
   14000a0d1:	int3   
   14000a0d2:	int3   
   14000a0d3:	int3   
   14000a0d4:	int3   
   14000a0d5:	int3   
   14000a0d6:	int3   
   14000a0d7:	int3   
   14000a0d8:	rex push rbx
   14000a0da:	sub    rsp,0x20
   14000a0de:	mov    ebx,ecx
   14000a0e0:	xor    ecx,ecx
   14000a0e2:	call   QWORD PTR [rip+0x1068]        # 0x14000b150
   14000a0e8:	test   rax,rax
   14000a0eb:	je     0x14000a115
   14000a0ed:	mov    rcx,rax
   14000a0f0:	call   0x14000a07c
   14000a0f5:	test   rax,rax
   14000a0f8:	je     0x14000a115
   14000a0fa:	mov    ecx,0x2
   14000a0ff:	cmp    WORD PTR [rax+0x5c],cx
   14000a103:	jne    0x14000a109
   14000a105:	mov    eax,ecx
   14000a107:	jmp    0x14000a117
   14000a109:	cmp    WORD PTR [rax+0x5c],0x3
   14000a10e:	mov    eax,0x1
   14000a113:	je     0x14000a117
   14000a115:	mov    eax,ebx
   14000a117:	add    rsp,0x20
   14000a11b:	pop    rbx
   14000a11c:	ret    
   14000a11d:	int3   
   14000a11e:	int3   
   14000a11f:	int3   
   14000a120:	int3   
   14000a121:	int3   
   14000a122:	int3   
   14000a123:	int3   
   14000a124:	jmp    QWORD PTR [rip+0x12a6]        # 0x14000b3d0
   14000a12a:	int3   
   14000a12b:	int3   
   14000a12c:	int3   
   14000a12d:	int3   
   14000a12e:	int3   
   14000a12f:	int3   
   14000a130:	xor    eax,eax
   14000a132:	ret    
   14000a133:	int3   
   14000a134:	int3   
   14000a135:	int3   
   14000a136:	int3   
   14000a137:	int3   
   14000a138:	int3   
   14000a139:	int3   
   14000a13a:	int3   
   14000a13b:	int3   
   14000a13c:	int3   
   14000a13d:	int3   
   14000a13e:	int3   
   14000a13f:	int3   
   14000a140:	movsxd r8,DWORD PTR [rcx+0x3c]
   14000a144:	xor    r9d,r9d
   14000a147:	add    r8,rcx
   14000a14a:	mov    r10,rdx
   14000a14d:	movzx  eax,WORD PTR [r8+0x14]
   14000a152:	movzx  r11d,WORD PTR [r8+0x6]
   14000a157:	add    rax,0x18
   14000a15b:	add    rax,r8
   14000a15e:	test   r11d,r11d
   14000a161:	je     0x14000a181
   14000a163:	mov    edx,DWORD PTR [rax+0xc]
   14000a166:	cmp    r10,rdx
   14000a169:	jb     0x14000a175
   14000a16b:	mov    ecx,DWORD PTR [rax+0x8]
   14000a16e:	add    ecx,edx
   14000a170:	cmp    r10,rcx
   14000a173:	jb     0x14000a183
   14000a175:	inc    r9d
   14000a178:	add    rax,0x28
   14000a17c:	cmp    r9d,r11d
   14000a17f:	jb     0x14000a163
   14000a181:	xor    eax,eax
   14000a183:	ret    
   14000a184:	int3   
   14000a185:	int3   
   14000a186:	int3   
   14000a187:	int3   
   14000a188:	int3   
   14000a189:	int3   
   14000a18a:	int3   
   14000a18b:	int3   
   14000a18c:	int3   
   14000a18d:	int3   
   14000a18e:	int3   
   14000a18f:	int3   
   14000a190:	mov    QWORD PTR [rsp+0x8],rbx
   14000a195:	push   rdi
   14000a196:	sub    rsp,0x20
   14000a19a:	mov    rbx,rcx
   14000a19d:	lea    rdi,[rip+0xffffffffffff5e5c]        # 0x140000000
   14000a1a4:	mov    rcx,rdi
   14000a1a7:	call   0x14000a1f0
   14000a1ac:	test   eax,eax
   14000a1ae:	je     0x14000a1d2
   14000a1b0:	sub    rbx,rdi
   14000a1b3:	mov    rdx,rbx
   14000a1b6:	mov    rcx,rdi
   14000a1b9:	call   0x14000a140
   14000a1be:	test   rax,rax
   14000a1c1:	je     0x14000a1d2
   14000a1c3:	mov    eax,DWORD PTR [rax+0x24]
   14000a1c6:	shr    eax,0x1f
   14000a1c9:	not    eax
   14000a1cb:	and    eax,0x1
   14000a1ce:	jmp    0x14000a1d2
   14000a1d0:	xor    eax,eax
   14000a1d2:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a1d7:	add    rsp,0x20
   14000a1db:	pop    rdi
   14000a1dc:	ret    
   14000a1dd:	int3   
   14000a1de:	int3   
   14000a1df:	int3   
   14000a1e0:	int3   
   14000a1e1:	int3   
   14000a1e2:	int3   
   14000a1e3:	int3   
   14000a1e4:	int3   
   14000a1e5:	int3   
   14000a1e6:	int3   
   14000a1e7:	int3   
   14000a1e8:	int3   
   14000a1e9:	int3   
   14000a1ea:	int3   
   14000a1eb:	int3   
   14000a1ec:	int3   
   14000a1ed:	int3   
   14000a1ee:	int3   
   14000a1ef:	int3   
   14000a1f0:	mov    rax,rcx
   14000a1f3:	mov    ecx,0x5a4d
   14000a1f8:	cmp    WORD PTR [rax],cx
   14000a1fb:	je     0x14000a200
   14000a1fd:	xor    eax,eax
   14000a1ff:	ret    
   14000a200:	movsxd rcx,DWORD PTR [rax+0x3c]
   14000a204:	add    rcx,rax
   14000a207:	xor    eax,eax
   14000a209:	cmp    DWORD PTR [rcx],0x4550
   14000a20f:	jne    0x14000a21d
   14000a211:	mov    edx,0x20b
   14000a216:	cmp    WORD PTR [rcx+0x18],dx
   14000a21a:	sete   al
   14000a21d:	ret    
   14000a21e:	int3   
   14000a21f:	int3   
   14000a220:	int3   
   14000a221:	int3   
   14000a222:	int3   
   14000a223:	int3   
   14000a224:	mov    QWORD PTR [rsp+0x20],rbx
   14000a229:	push   rbp
   14000a22a:	mov    rbp,rsp
   14000a22d:	sub    rsp,0x20
   14000a231:	and    QWORD PTR [rbp+0x18],0x0
   14000a236:	movabs rbx,0x2b992ddfa232
   14000a240:	mov    rax,QWORD PTR [rip+0x3dc1]        # 0x14000e008
   14000a247:	cmp    rax,rbx
   14000a24a:	jne    0x14000a2df
   14000a250:	lea    rcx,[rbp+0x18]
   14000a254:	call   QWORD PTR [rip+0x1066]        # 0x14000b2c0
   14000a25a:	mov    rax,QWORD PTR [rbp+0x18]
   14000a25e:	mov    QWORD PTR [rbp+0x10],rax
   14000a262:	call   QWORD PTR [rip+0xf38]        # 0x14000b1a0
   14000a268:	mov    eax,eax
   14000a26a:	xor    QWORD PTR [rbp+0x10],rax
   14000a26e:	call   QWORD PTR [rip+0xf4c]        # 0x14000b1c0
   14000a274:	mov    eax,eax
   14000a276:	xor    QWORD PTR [rbp+0x10],rax
   14000a27a:	call   QWORD PTR [rip+0x1050]        # 0x14000b2d0
   14000a280:	mov    eax,eax
   14000a282:	shl    rax,0x18
   14000a286:	xor    QWORD PTR [rbp+0x10],rax
   14000a28a:	call   QWORD PTR [rip+0x1040]        # 0x14000b2d0
   14000a290:	mov    eax,eax
   14000a292:	lea    rcx,[rbp+0x10]
   14000a296:	xor    rax,QWORD PTR [rbp+0x10]
   14000a29a:	xor    rax,rcx
   14000a29d:	lea    rcx,[rbp+0x20]
   14000a2a1:	mov    QWORD PTR [rbp+0x10],rax
   14000a2a5:	call   QWORD PTR [rip+0xf25]        # 0x14000b1d0
   14000a2ab:	mov    eax,DWORD PTR [rbp+0x20]
   14000a2ae:	movabs rcx,0xffffffffffff
   14000a2b8:	shl    rax,0x20
   14000a2bc:	xor    rax,QWORD PTR [rbp+0x20]
   14000a2c0:	xor    rax,QWORD PTR [rbp+0x10]
   14000a2c4:	and    rax,rcx
   14000a2c7:	movabs rcx,0x2b992ddfa233
   14000a2d1:	cmp    rax,rbx
   14000a2d4:	cmove  rax,rcx
   14000a2d8:	mov    QWORD PTR [rip+0x3d29],rax        # 0x14000e008
   14000a2df:	mov    rbx,QWORD PTR [rsp+0x48]
   14000a2e4:	not    rax
   14000a2e7:	mov    QWORD PTR [rip+0x3d22],rax        # 0x14000e010
   14000a2ee:	add    rsp,0x20
   14000a2f2:	pop    rbp
   14000a2f3:	ret    
   14000a2f4:	int3   
   14000a2f5:	int3   
   14000a2f6:	int3   
   14000a2f7:	int3   
   14000a2f8:	int3   
   14000a2f9:	int3   
   14000a2fa:	jmp    QWORD PTR [rip+0x1060]        # 0x14000b360
   14000a300:	int3   
   14000a301:	int3   
   14000a302:	int3   
   14000a303:	int3   
   14000a304:	int3   
   14000a305:	int3   
   14000a306:	jmp    QWORD PTR [rip+0x104c]        # 0x14000b358
   14000a30c:	int3   
   14000a30d:	int3   
   14000a30e:	int3   
   14000a30f:	int3   
   14000a310:	int3   
   14000a311:	int3   
   14000a312:	int3   
   14000a313:	int3   
   14000a314:	int3   
   14000a315:	int3   
   14000a316:	int3   
   14000a317:	int3   
   14000a318:	int3   
   14000a319:	int3   
   14000a31a:	int3   
   14000a31b:	int3   
   14000a31c:	int3   
   14000a31d:	int3   
   14000a31e:	int3   
   14000a31f:	int3   
   14000a320:	ret    0x0
   14000a323:	int3   
   14000a324:	int3   
   14000a325:	int3   
   14000a326:	int3   
   14000a327:	int3   
   14000a328:	int3   
   14000a329:	int3   
   14000a32a:	int3   
   14000a32b:	int3   
   14000a32c:	rex push rbx
   14000a32e:	sub    rsp,0x20
   14000a332:	mov    rbx,rcx
   14000a335:	xor    ecx,ecx
   14000a337:	call   QWORD PTR [rip+0xd53]        # 0x14000b090
   14000a33d:	mov    rcx,rbx
   14000a340:	call   QWORD PTR [rip+0xd62]        # 0x14000b0a8
   14000a346:	call   QWORD PTR [rip+0xe6c]        # 0x14000b1b8
   14000a34c:	mov    rcx,rax
   14000a34f:	mov    edx,0xc0000409
   14000a354:	add    rsp,0x20
   14000a358:	pop    rbx
   14000a359:	rex.W jmp QWORD PTR [rip+0xe50]        # 0x14000b1b0
   14000a360:	int3   
   14000a361:	int3   
   14000a362:	int3   
   14000a363:	int3   
   14000a364:	int3   
   14000a365:	int3   
   14000a366:	int3   
   14000a367:	int3   
   14000a368:	int3   
   14000a369:	int3   
   14000a36a:	int3   
   14000a36b:	int3   
   14000a36c:	int3   
   14000a36d:	int3   
   14000a36e:	int3   
   14000a36f:	int3   
   14000a370:	mov    QWORD PTR [rsp+0x8],rcx
   14000a375:	sub    rsp,0x88
   14000a37c:	lea    rcx,[rip+0x3d7d]        # 0x14000e100
   14000a383:	call   QWORD PTR [rip+0xe8f]        # 0x14000b218
   14000a389:	mov    rax,QWORD PTR [rip+0x3e68]        # 0x14000e1f8
   14000a390:	mov    QWORD PTR [rsp+0x48],rax
   14000a395:	xor    r8d,r8d
   14000a398:	lea    rdx,[rsp+0x50]
   14000a39d:	mov    rcx,QWORD PTR [rsp+0x48]
   14000a3a2:	call   QWORD PTR [rip+0xe80]        # 0x14000b228
   14000a3a8:	mov    QWORD PTR [rsp+0x40],rax
   14000a3ad:	cmp    QWORD PTR [rsp+0x40],0x0
   14000a3b3:	je     0x14000a3f7
   14000a3b5:	mov    QWORD PTR [rsp+0x38],0x0
   14000a3be:	lea    rax,[rsp+0x58]
   14000a3c3:	mov    QWORD PTR [rsp+0x30],rax
   14000a3c8:	lea    rax,[rsp+0x60]
   14000a3cd:	mov    QWORD PTR [rsp+0x28],rax
   14000a3d2:	lea    rax,[rip+0x3d27]        # 0x14000e100
   14000a3d9:	mov    QWORD PTR [rsp+0x20],rax
   14000a3de:	mov    r9,QWORD PTR [rsp+0x40]
   14000a3e3:	mov    r8,QWORD PTR [rsp+0x48]
   14000a3e8:	mov    rdx,QWORD PTR [rsp+0x50]
   14000a3ed:	xor    ecx,ecx
   14000a3ef:	call   QWORD PTR [rip+0xe2b]        # 0x14000b220
   14000a3f5:	jmp    0x14000a41a
   14000a3f7:	mov    rax,QWORD PTR [rip+0x3d9a]        # 0x14000e198
   14000a3fe:	mov    rax,QWORD PTR [rax]
   14000a401:	mov    QWORD PTR [rip+0x3df0],rax        # 0x14000e1f8
   14000a408:	mov    rax,QWORD PTR [rip+0x3d89]        # 0x14000e198
   14000a40f:	add    rax,0x8
   14000a413:	mov    QWORD PTR [rip+0x3d7e],rax        # 0x14000e198
   14000a41a:	mov    rax,QWORD PTR [rip+0x3dd7]        # 0x14000e1f8
   14000a421:	mov    QWORD PTR [rip+0x3c48],rax        # 0x14000e070
   14000a428:	mov    rax,QWORD PTR [rsp+0x90]
   14000a430:	mov    QWORD PTR [rip+0x3d49],rax        # 0x14000e180
   14000a437:	mov    DWORD PTR [rip+0x3c1f],0xc0000409        # 0x14000e060
   14000a441:	mov    DWORD PTR [rip+0x3c19],0x1        # 0x14000e064
   14000a44b:	mov    DWORD PTR [rip+0x3c23],0x3        # 0x14000e078
   14000a455:	mov    eax,0x8
   14000a45a:	imul   rax,rax,0x0
   14000a45e:	lea    rcx,[rip+0x3c1b]        # 0x14000e080
   14000a465:	mov    QWORD PTR [rcx+rax*1],0x2
   14000a46d:	mov    eax,0x8
   14000a472:	imul   rax,rax,0x1
   14000a476:	lea    rcx,[rip+0x3c03]        # 0x14000e080
   14000a47d:	mov    rdx,QWORD PTR [rip+0x3b84]        # 0x14000e008
   14000a484:	mov    QWORD PTR [rcx+rax*1],rdx
   14000a488:	mov    eax,0x8
   14000a48d:	imul   rax,rax,0x2
   14000a491:	lea    rcx,[rip+0x3be8]        # 0x14000e080
   14000a498:	mov    rdx,QWORD PTR [rip+0x3b71]        # 0x14000e010
   14000a49f:	mov    QWORD PTR [rcx+rax*1],rdx
   14000a4a3:	mov    eax,0x8
   14000a4a8:	imul   rax,rax,0x0
   14000a4ac:	mov    rcx,QWORD PTR [rip+0x3b55]        # 0x14000e008
   14000a4b3:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   14000a4b8:	mov    eax,0x8
   14000a4bd:	imul   rax,rax,0x1
   14000a4c1:	mov    rcx,QWORD PTR [rip+0x3b48]        # 0x14000e010
   14000a4c8:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   14000a4cd:	lea    rcx,[rip+0x101c]        # 0x14000b4f0
   14000a4d4:	call   0x14000a32c
   14000a4d9:	add    rsp,0x88
   14000a4e0:	ret    
   14000a4e1:	int3   
   14000a4e2:	int3   
   14000a4e3:	int3   
   14000a4e4:	int3   
   14000a4e5:	int3   
   14000a4e6:	int3   
   14000a4e7:	int3   
   14000a4e8:	int3   
   14000a4e9:	int3   
   14000a4ea:	int3   
   14000a4eb:	int3   
   14000a4ec:	int3   
   14000a4ed:	int3   
   14000a4ee:	int3   
   14000a4ef:	int3   
   14000a4f0:	int3   
   14000a4f1:	int3   
   14000a4f2:	int3   
   14000a4f3:	int3   
   14000a4f4:	int3   
   14000a4f5:	int3   
   14000a4f6:	int3   
   14000a4f7:	int3   
   14000a4f8:	rex push rbx
   14000a4fa:	sub    rsp,0x20
   14000a4fe:	mov    ebx,ecx
   14000a500:	call   0x14000a7d2
   14000a505:	lea    rdx,[rbx+rbx*2]
   14000a509:	shl    rdx,0x4
   14000a50d:	add    rax,rdx
   14000a510:	add    rsp,0x20
   14000a514:	pop    rbx
   14000a515:	ret    
   14000a516:	int3   
   14000a517:	int3   
   14000a518:	int3   
   14000a519:	int3   
   14000a51a:	int3   
   14000a51b:	int3   
   14000a51c:	int3   
   14000a51d:	int3   
   14000a51e:	int3   
   14000a51f:	int3   
   14000a520:	lea    rax,[rip+0x5af9]        # 0x140010020
   14000a527:	jmp    0x14000a540
   14000a52c:	int3   
   14000a52d:	int3   
   14000a52e:	int3   
   14000a52f:	int3   
   14000a530:	int3   
   14000a531:	int3   
   14000a532:	int3   
   14000a533:	int3   
   14000a534:	int3   
   14000a535:	int3   
   14000a536:	int3   
   14000a537:	int3   
   14000a538:	int3   
   14000a539:	int3   
   14000a53a:	int3   
   14000a53b:	int3   
   14000a53c:	int3   
   14000a53d:	int3   
   14000a53e:	int3   
   14000a53f:	int3   
   14000a540:	mov    QWORD PTR [rsp+0x8],rcx
   14000a545:	mov    QWORD PTR [rsp+0x10],rdx
   14000a54a:	mov    QWORD PTR [rsp+0x18],r8
   14000a54f:	mov    QWORD PTR [rsp+0x20],r9
   14000a554:	sub    rsp,0x68
   14000a558:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14000a55e:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   14000a564:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   14000a56a:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   14000a570:	mov    rdx,rax
   14000a573:	lea    rcx,[rip+0x1c06]        # 0x14000c180
   14000a57a:	call   0x140009c60
   14000a57f:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   14000a585:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   14000a58b:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   14000a591:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   14000a597:	mov    rcx,QWORD PTR [rsp+0x70]
   14000a59c:	mov    rdx,QWORD PTR [rsp+0x78]
   14000a5a1:	mov    r8,QWORD PTR [rsp+0x80]
   14000a5a9:	mov    r9,QWORD PTR [rsp+0x88]
   14000a5b1:	add    rsp,0x68
   14000a5b5:	jmp    0x14000a5b7
   14000a5b7:	jmp    rax
   14000a5b9:	int3   
   14000a5ba:	int3   
   14000a5bb:	int3   
   14000a5bc:	int3   
   14000a5bd:	int3   
   14000a5be:	int3   
   14000a5bf:	int3   
   14000a5c0:	lea    rax,[rip+0x5a69]        # 0x140010030
   14000a5c7:	jmp    0x14000a5e0
   14000a5cc:	int3   
   14000a5cd:	int3   
   14000a5ce:	int3   
   14000a5cf:	int3   
   14000a5d0:	int3   
   14000a5d1:	int3   
   14000a5d2:	int3   
   14000a5d3:	int3   
   14000a5d4:	int3   
   14000a5d5:	int3   
   14000a5d6:	int3   
   14000a5d7:	int3   
   14000a5d8:	int3   
   14000a5d9:	int3   
   14000a5da:	int3   
   14000a5db:	int3   
   14000a5dc:	int3   
   14000a5dd:	int3   
   14000a5de:	int3   
   14000a5df:	int3   
   14000a5e0:	mov    QWORD PTR [rsp+0x8],rcx
   14000a5e5:	mov    QWORD PTR [rsp+0x10],rdx
   14000a5ea:	mov    QWORD PTR [rsp+0x18],r8
   14000a5ef:	mov    QWORD PTR [rsp+0x20],r9
   14000a5f4:	sub    rsp,0x68
   14000a5f8:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14000a5fe:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   14000a604:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   14000a60a:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   14000a610:	mov    rdx,rax
   14000a613:	lea    rcx,[rip+0x1b86]        # 0x14000c1a0
   14000a61a:	call   0x140009c60
   14000a61f:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   14000a625:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   14000a62b:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   14000a631:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   14000a637:	mov    rcx,QWORD PTR [rsp+0x70]
   14000a63c:	mov    rdx,QWORD PTR [rsp+0x78]
   14000a641:	mov    r8,QWORD PTR [rsp+0x80]
   14000a649:	mov    r9,QWORD PTR [rsp+0x88]
   14000a651:	add    rsp,0x68
   14000a655:	jmp    0x14000a657
   14000a657:	jmp    rax
   14000a659:	int3   
   14000a65a:	int3   
   14000a65b:	int3   
   14000a65c:	int3   
   14000a65d:	int3   
   14000a65e:	int3   
   14000a65f:	int3   
   14000a660:	lea    rax,[rip+0x59d9]        # 0x140010040
   14000a667:	jmp    0x14000a680
   14000a66c:	int3   
   14000a66d:	int3   
   14000a66e:	int3   
   14000a66f:	int3   
   14000a670:	int3   
   14000a671:	int3   
   14000a672:	int3   
   14000a673:	int3   
   14000a674:	int3   
   14000a675:	int3   
   14000a676:	int3   
   14000a677:	int3   
   14000a678:	int3   
   14000a679:	int3   
   14000a67a:	int3   
   14000a67b:	int3   
   14000a67c:	int3   
   14000a67d:	int3   
   14000a67e:	int3   
   14000a67f:	int3   
   14000a680:	mov    QWORD PTR [rsp+0x8],rcx
   14000a685:	mov    QWORD PTR [rsp+0x10],rdx
   14000a68a:	mov    QWORD PTR [rsp+0x18],r8
   14000a68f:	mov    QWORD PTR [rsp+0x20],r9
   14000a694:	sub    rsp,0x68
   14000a698:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14000a69e:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   14000a6a4:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   14000a6aa:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   14000a6b0:	mov    rdx,rax
   14000a6b3:	lea    rcx,[rip+0x1b06]        # 0x14000c1c0
   14000a6ba:	call   0x140009c60
   14000a6bf:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   14000a6c5:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   14000a6cb:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   14000a6d1:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   14000a6d7:	mov    rcx,QWORD PTR [rsp+0x70]
   14000a6dc:	mov    rdx,QWORD PTR [rsp+0x78]
   14000a6e1:	mov    r8,QWORD PTR [rsp+0x80]
   14000a6e9:	mov    r9,QWORD PTR [rsp+0x88]
   14000a6f1:	add    rsp,0x68
   14000a6f5:	jmp    0x14000a6f7
   14000a6f7:	jmp    rax
   14000a6f9:	int3   
   14000a6fa:	int3   
   14000a6fb:	int3   
   14000a6fc:	int3   
   14000a6fd:	int3   
   14000a6fe:	int3   
   14000a6ff:	int3   
   14000a700:	lea    rax,[rip+0x58f9]        # 0x140010000
   14000a707:	jmp    0x14000a720
   14000a70c:	int3   
   14000a70d:	int3   
   14000a70e:	int3   
   14000a70f:	int3   
   14000a710:	int3   
   14000a711:	int3   
   14000a712:	int3   
   14000a713:	int3   
   14000a714:	int3   
   14000a715:	int3   
   14000a716:	int3   
   14000a717:	int3   
   14000a718:	int3   
   14000a719:	int3   
   14000a71a:	int3   
   14000a71b:	int3   
   14000a71c:	int3   
   14000a71d:	int3   
   14000a71e:	int3   
   14000a71f:	int3   
   14000a720:	mov    QWORD PTR [rsp+0x8],rcx
   14000a725:	mov    QWORD PTR [rsp+0x10],rdx
   14000a72a:	mov    QWORD PTR [rsp+0x18],r8
   14000a72f:	mov    QWORD PTR [rsp+0x20],r9
   14000a734:	sub    rsp,0x68
   14000a738:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14000a73e:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   14000a744:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   14000a74a:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   14000a750:	mov    rdx,rax
   14000a753:	lea    rcx,[rip+0x1a86]        # 0x14000c1e0
   14000a75a:	call   0x140009c60
   14000a75f:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   14000a765:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   14000a76b:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   14000a771:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   14000a777:	mov    rcx,QWORD PTR [rsp+0x70]
   14000a77c:	mov    rdx,QWORD PTR [rsp+0x78]
   14000a781:	mov    r8,QWORD PTR [rsp+0x80]
   14000a789:	mov    r9,QWORD PTR [rsp+0x88]
   14000a791:	add    rsp,0x68
   14000a795:	jmp    0x14000a797
   14000a797:	jmp    rax
   14000a799:	int3   
   14000a79a:	int3   
   14000a79b:	int3   
   14000a79c:	int3   
   14000a79d:	int3   
   14000a79e:	int3   
   14000a79f:	int3   
   14000a7a0:	lea    rax,[rip+0x5861]        # 0x140010008
   14000a7a7:	jmp    0x14000a720
   14000a7ac:	int3   
   14000a7ad:	int3   
   14000a7ae:	int3   
   14000a7af:	int3   
   14000a7b0:	int3   
   14000a7b1:	int3   
   14000a7b2:	int3   
   14000a7b3:	int3   
   14000a7b4:	int3   
   14000a7b5:	int3   
   14000a7b6:	int3   
   14000a7b7:	int3   
   14000a7b8:	int3   
   14000a7b9:	int3   
   14000a7ba:	int3   
   14000a7bb:	int3   
   14000a7bc:	int3   
   14000a7bd:	int3   
   14000a7be:	int3   
   14000a7bf:	int3   
   14000a7c0:	lea    rax,[rip+0x5849]        # 0x140010010
   14000a7c7:	jmp    0x14000a720
   14000a7cc:	int3   
   14000a7cd:	int3   
   14000a7ce:	int3   
   14000a7cf:	int3   
   14000a7d0:	int3   
   14000a7d1:	int3   
   14000a7d2:	jmp    QWORD PTR [rip+0xbb0]        # 0x14000b388
   14000a7d8:	int3   
   14000a7d9:	int3   
   14000a7da:	int3   
   14000a7db:	int3   
   14000a7dc:	int3   
   14000a7dd:	int3   
   14000a7de:	int3   
   14000a7df:	int3   
   14000a7e0:	jmp    QWORD PTR [rip+0x89a]        # 0x14000b080
   14000a7e6:	int3   
   14000a7e7:	int3   
   14000a7e8:	int3   
   14000a7e9:	int3   
   14000a7ea:	int3   
   14000a7eb:	int3   
   14000a7ec:	sub    rsp,0x28
   14000a7f0:	mov    r8,QWORD PTR [r9+0x38]
   14000a7f4:	mov    rcx,rdx
   14000a7f7:	mov    rdx,r9
   14000a7fa:	call   0x14000a810
   14000a7ff:	mov    eax,0x1
   14000a804:	add    rsp,0x28
   14000a808:	ret    
   14000a809:	int3   
   14000a80a:	int3   
   14000a80b:	int3   
   14000a80c:	int3   
   14000a80d:	int3   
   14000a80e:	int3   
   14000a80f:	int3   
   14000a810:	rex push rbx
   14000a812:	sub    rsp,0x20
   14000a816:	mov    r11d,DWORD PTR [r8]
   14000a819:	mov    rbx,rdx
   14000a81c:	and    r11d,0xfffffff8
   14000a820:	mov    r9,rcx
   14000a823:	test   BYTE PTR [r8],0x4
   14000a827:	mov    r10,rcx
   14000a82a:	je     0x14000a83f
   14000a82c:	mov    eax,DWORD PTR [r8+0x8]
   14000a830:	movsxd r10,DWORD PTR [r8+0x4]
   14000a834:	neg    eax
   14000a836:	add    r10,rcx
   14000a839:	movsxd rcx,eax
   14000a83c:	and    r10,rcx
   14000a83f:	movsxd rax,r11d
   14000a842:	mov    rdx,QWORD PTR [rax+r10*1]
   14000a846:	mov    rax,QWORD PTR [rbx+0x10]
   14000a84a:	mov    ecx,DWORD PTR [rax+0x8]
   14000a84d:	add    rcx,QWORD PTR [rbx+0x8]
   14000a851:	test   BYTE PTR [rcx+0x3],0xf
   14000a855:	je     0x14000a863
   14000a857:	movzx  eax,BYTE PTR [rcx+0x3]
   14000a85b:	and    eax,0xfffffff0
   14000a85e:	cdqe   
   14000a860:	add    r9,rax
   14000a863:	xor    r9,rdx
   14000a866:	mov    rcx,r9
   14000a869:	add    rsp,0x20
   14000a86d:	pop    rbx
   14000a86e:	jmp    0x140009fe0
   14000a873:	int3   
   14000a874:	int3   
   14000a875:	int3   
   14000a876:	int3   
   14000a877:	int3   
   14000a878:	int3   
   14000a879:	int3   
   14000a87a:	int3   
   14000a87b:	int3   
   14000a87c:	int3   
   14000a87d:	int3   
   14000a87e:	int3   
   14000a87f:	int3   
   14000a880:	int3   
   14000a881:	int3   
   14000a882:	int3   
   14000a883:	int3   
   14000a884:	int3   
   14000a885:	int3   
   14000a886:	jmp    QWORD PTR [rip+0xb9c]        # 0x14000b428
   14000a88c:	int3   
   14000a88d:	int3   
   14000a88e:	int3   
   14000a88f:	int3   
   14000a890:	int3   
   14000a891:	int3   
   14000a892:	jmp    QWORD PTR [rip+0xb98]        # 0x14000b430
   14000a898:	int3   
   14000a899:	int3   
   14000a89a:	int3   
   14000a89b:	int3   
   14000a89c:	int3   
   14000a89d:	int3   
   14000a89e:	int3   
   14000a89f:	int3   
   14000a8a0:	int3   
   14000a8a1:	int3   
   14000a8a2:	int3   
   14000a8a3:	int3   
   14000a8a4:	int3   
   14000a8a5:	int3   
   14000a8a6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000a8b0:	jmp    rax
   14000a8b2:	int3   
   14000a8b3:	int3   
   14000a8b4:	int3   
   14000a8b5:	int3   
   14000a8b6:	int3   
   14000a8b7:	int3   
   14000a8b8:	int3   
   14000a8b9:	int3   
   14000a8ba:	int3   
   14000a8bb:	int3   
   14000a8bc:	int3   
   14000a8bd:	int3   
   14000a8be:	int3   
   14000a8bf:	int3   
   14000a8c0:	int3   
   14000a8c1:	int3   
   14000a8c2:	int3   
   14000a8c3:	int3   
   14000a8c4:	int3   
   14000a8c5:	int3   
   14000a8c6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000a8d0:	sub    rsp,0x10
   14000a8d4:	mov    QWORD PTR [rsp],r10
   14000a8d8:	mov    QWORD PTR [rsp+0x8],r11
   14000a8dd:	xor    r11,r11
   14000a8e0:	lea    r10,[rsp+0x18]
   14000a8e5:	sub    r10,rax
   14000a8e8:	cmovb  r10,r11
   14000a8ec:	mov    r11,QWORD PTR gs:0x10
   14000a8f5:	cmp    r10,r11
   14000a8f8:	jae    0x14000a90f
   14000a8fa:	and    r10w,0xf000
   14000a900:	lea    r11,[r11-0x1000]
   14000a907:	test   BYTE PTR [r11],r11b
   14000a90a:	cmp    r10,r11
   14000a90d:	jne    0x14000a900
   14000a90f:	mov    r10,QWORD PTR [rsp]
   14000a913:	mov    r11,QWORD PTR [rsp+0x8]
   14000a918:	add    rsp,0x10
   14000a91c:	ret    
   14000a91d:	int3   
   14000a91e:	int3   
   14000a91f:	int3   
   14000a920:	int3   
   14000a921:	int3   
   14000a922:	int3   
   14000a923:	int3   
   14000a924:	int3   
   14000a925:	int3   
   14000a926:	rex push rbp
   14000a928:	sub    rsp,0x20
   14000a92c:	mov    rbp,rdx
   14000a92f:	mov    rax,QWORD PTR [rcx]
   14000a932:	mov    rdx,rcx
   14000a935:	mov    ecx,DWORD PTR [rax]
   14000a937:	call   0x14000a06e
   14000a93c:	nop
   14000a93d:	add    rsp,0x20
   14000a941:	pop    rbp
   14000a942:	ret    
   14000a943:	int3   
   14000a944:	int3   
   14000a945:	int3   
   14000a946:	int3   
   14000a947:	int3   
   14000a948:	int3   
   14000a949:	int3   
   14000a94a:	int3   
   14000a94b:	int3   
   14000a94c:	int3   
   14000a94d:	int3   
   14000a94e:	int3   
   14000a94f:	int3   
   14000a950:	rex push rbp
   14000a952:	sub    rsp,0x20
   14000a956:	mov    rbp,rdx
   14000a959:	mov    rax,QWORD PTR [rcx]
   14000a95c:	xor    ecx,ecx
   14000a95e:	cmp    DWORD PTR [rax],0xc0000005
   14000a964:	sete   cl
   14000a967:	mov    eax,ecx
   14000a969:	add    rsp,0x20
   14000a96d:	pop    rbp
   14000a96e:	ret    
   14000a96f:	int3   

Disassembly of section .rdata:

000000014000b000 <.rdata>:
   14000b000:	je     0x14000afd1
	...
   14000b00e:	add    BYTE PTR [rax],al
   14000b010:	cmp    bh,cl
   14000b012:	add    BYTE PTR [rax],al
   14000b014:	add    BYTE PTR [rax],al
   14000b016:	add    BYTE PTR [rax],al
   14000b018:	pop    rax
   14000b019:	iret   
   14000b01a:	add    BYTE PTR [rax],al
   14000b01c:	add    BYTE PTR [rax],al
   14000b01e:	add    BYTE PTR [rax],al
   14000b020:	iretq  
   14000b022:	add    BYTE PTR [rax],al
   14000b024:	add    BYTE PTR [rax],al
   14000b026:	add    BYTE PTR [rax],al
   14000b028:	outs   dx,DWORD PTR ds:[rsi]
   14000b029:	add    BYTE PTR [rax],al
   14000b02b:	add    BYTE PTR [rax],al
   14000b02d:	add    BYTE PTR [rax],al
   14000b02f:	xor    BYTE PTR [rbx+0x0],0x0
   14000b033:	add    BYTE PTR [rax],al
   14000b035:	add    BYTE PTR [rax],al
   14000b037:	xor    BYTE PTR [rax+rax*1+0x0],0x0
   14000b03c:	add    BYTE PTR [rax],al
   14000b03e:	add    BYTE PTR [rax+0x0],al
   14000b044:	add    BYTE PTR [rax],al
   14000b046:	add    BYTE PTR [rax],al
   14000b048:	js     0x14000b01b
   14000b04a:	add    BYTE PTR [rax],al
   14000b04c:	add    BYTE PTR [rax],al
   14000b04e:	add    BYTE PTR [rax],al
   14000b050:	pop    rdx
   14000b051:	rol    DWORD PTR [rax],1
   14000b053:	add    BYTE PTR [rax],al
   14000b055:	add    BYTE PTR [rax],al
   14000b057:	add    BYTE PTR [rcx+rdx*8],dl
   14000b05a:	add    BYTE PTR [rax],al
   14000b05c:	add    BYTE PTR [rax],al
   14000b05e:	add    BYTE PTR [rax],al
   14000b060:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b061:	rol    DWORD PTR [rax],1
   14000b063:	add    BYTE PTR [rax],al
   14000b065:	add    BYTE PTR [rax],al
   14000b067:	add    dl,al
   14000b069:	rol    DWORD PTR [rax],1
	...
   14000b077:	add    BYTE PTR [rsi+0xd2],ah
   14000b07d:	add    BYTE PTR [rax],al
   14000b07f:	add    BYTE PTR [rsi+0xd2],bh
	...
   14000b08d:	add    BYTE PTR [rax],al
   14000b08f:	add    BYTE PTR [rsp+rcx*8+0x0],dl
   14000b093:	add    BYTE PTR [rax],al
   14000b095:	add    BYTE PTR [rax],al
   14000b097:	add    al,bl
   14000b099:	retf   
   14000b09a:	add    BYTE PTR [rax],al
   14000b09c:	add    BYTE PTR [rax],al
   14000b09e:	add    BYTE PTR [rax],al
   14000b0a0:	call   0x14000b170
   14000b0a5:	add    BYTE PTR [rax],al
   14000b0a7:	add    BYTE PTR [rax],bh
   14000b0a9:	int    0x0
	...
   14000b0b7:	add    dl,cl
   14000b0b9:	retf   
   14000b0ba:	add    BYTE PTR [rax],al
   14000b0bc:	add    BYTE PTR [rax],al
   14000b0be:	add    BYTE PTR [rax],al
   14000b0c0:	mov    dh,0xd1
   14000b0c2:	add    BYTE PTR [rax],al
   14000b0c4:	add    BYTE PTR [rax],al
   14000b0c6:	add    BYTE PTR [rax],al
   14000b0c8:	(bad)  
   14000b0c9:	rol    DWORD PTR [rax],1
   14000b0cb:	add    BYTE PTR [rax],al
   14000b0cd:	add    BYTE PTR [rax],al
   14000b0cf:	add    BYTE PTR [rdx+0xcb],dl
	...
   14000b0dd:	add    BYTE PTR [rax],al
   14000b0df:	add    BYTE PTR [rsi],bl
   14000b0e1:	int3   
	...
   14000b0ee:	add    BYTE PTR [rax],al
   14000b0f0:	rcl    cl,cl
   14000b0f2:	add    BYTE PTR [rax],al
   14000b0f4:	add    BYTE PTR [rax],al
   14000b0f6:	add    BYTE PTR [rax],al
   14000b0f8:	in     al,0xd1
   14000b0fa:	add    BYTE PTR [rax],al
   14000b0fc:	add    BYTE PTR [rax],al
   14000b0fe:	add    BYTE PTR [rax],al
   14000b100:	lock rol DWORD PTR [rax],1
   14000b103:	add    BYTE PTR [rax],al
   14000b105:	add    BYTE PTR [rax],al
   14000b107:	add    BYTE PTR [rax],al
   14000b109:	rol    BYTE PTR [rax],cl
   14000b10b:	add    BYTE PTR [rax],al
   14000b10d:	add    BYTE PTR [rax],al
   14000b10f:	add    BYTE PTR [rdx+rdx*8],cl
   14000b112:	add    BYTE PTR [rax],al
   14000b114:	add    BYTE PTR [rax],al
   14000b116:	add    BYTE PTR [rax],al
   14000b118:	sbb    dl,dl
   14000b11a:	add    BYTE PTR [rax],al
   14000b11c:	add    BYTE PTR [rax],al
   14000b11e:	add    BYTE PTR [rax],al
   14000b120:	or     ah,cl
	...
   14000b12e:	add    BYTE PTR [rax],al
   14000b130:	rcl    al,0x0
	...
   14000b13f:	add    dl,ah
   14000b141:	rol    BYTE PTR [rax],1
   14000b143:	add    BYTE PTR [rax],al
   14000b145:	add    BYTE PTR [rax],al
   14000b147:	add    BYTE PTR [rdx+rdx*8],bh
   14000b14a:	add    BYTE PTR [rax],al
   14000b14c:	add    BYTE PTR [rax],al
   14000b14e:	add    BYTE PTR [rax],al
   14000b150:	jb     0x14000b11e
	...
   14000b15e:	add    BYTE PTR [rax],al
   14000b160:	rol    QWORD PTR [rax],1
   14000b163:	add    BYTE PTR [rax],al
   14000b165:	add    BYTE PTR [rax],al
   14000b167:	add    BYTE PTR [rax+0xcb],ah
   14000b16d:	add    BYTE PTR [rax],al
   14000b16f:	add    BYTE PTR [rsi+0xd0],ch
	...
   14000b17d:	add    BYTE PTR [rax],al
   14000b17f:	add    BYTE PTR [rdx-0x30],ch
	...
   14000b18e:	add    BYTE PTR [rax],al
   14000b190:	rol    DWORD PTR es:[rax],1
	...
   14000b19f:	add    BYTE PTR [rax+0xcc],ah
   14000b1a5:	add    BYTE PTR [rax],al
   14000b1a7:	add    BYTE PTR [rdx-0x2f],ch
   14000b1aa:	add    BYTE PTR [rax],al
   14000b1ac:	add    BYTE PTR [rax],al
   14000b1ae:	add    BYTE PTR [rax],al
   14000b1b0:	push   0xcd
   14000b1b5:	add    BYTE PTR [rax],al
   14000b1b7:	add    BYTE PTR [rbp+rcx*8+0x0],dl
   14000b1bb:	add    BYTE PTR [rax],al
   14000b1bd:	add    BYTE PTR [rax],al
   14000b1bf:	add    BYTE PTR [rsi+0xcc],dh
	...
   14000b1cd:	add    BYTE PTR [rax],al
   14000b1cf:	add    BYTE PTR [rsi+0xcc],al
	...
   14000b1dd:	add    BYTE PTR [rax],al
   14000b1df:	add    BYTE PTR [rsi+0xcb],dh
   14000b1e5:	add    BYTE PTR [rax],al
   14000b1e7:	add    BYTE PTR [rdx],bh
   14000b1e9:	int3   
   14000b1ea:	add    BYTE PTR [rax],al
   14000b1ec:	add    BYTE PTR [rax],al
   14000b1ee:	add    BYTE PTR [rax],al
   14000b1f0:	sub    al,0xcc
   14000b1f2:	add    BYTE PTR [rax],al
   14000b1f4:	add    BYTE PTR [rax],al
   14000b1f6:	add    BYTE PTR [rax],al
   14000b1f8:	clc    
   14000b1f9:	retf   
	...
   14000b206:	add    BYTE PTR [rax],al
   14000b208:	and    bl,cl
	...
   14000b216:	add    BYTE PTR [rax],al
   14000b218:	test   ah,0x0
   14000b21b:	add    BYTE PTR [rax],al
   14000b21d:	add    BYTE PTR [rax],al
   14000b21f:	add    BYTE PTR [rcx*8+0x0],ah
   14000b226:	add    BYTE PTR [rax],al
   14000b228:	or     cl,ch
	...
   14000b236:	add    BYTE PTR [rax],al
   14000b238:	(bad)  
   14000b239:	rol    BYTE PTR [rax],1
   14000b23b:	add    BYTE PTR [rax],al
   14000b23d:	add    BYTE PTR [rax],al
   14000b23f:	add    BYTE PTR [rax],dl
   14000b241:	rol    BYTE PTR [rax],1
   14000b243:	add    BYTE PTR [rax],al
   14000b245:	add    BYTE PTR [rax],al
   14000b247:	add    BYTE PTR [rax+rdx*8],bl
   14000b24a:	add    BYTE PTR [rax],al
   14000b24c:	add    BYTE PTR [rax],al
   14000b24e:	add    BYTE PTR [rax],al
   14000b250:	pop    rdx
   14000b251:	retf   
   14000b252:	add    BYTE PTR [rax],al
   14000b254:	add    BYTE PTR [rax],al
   14000b256:	add    BYTE PTR [rax],al
   14000b258:	cli    
   14000b259:	iret   
	...
   14000b266:	add    BYTE PTR [rax],al
   14000b268:	rol    DWORD PTR ss:[rax],1
   14000b26b:	add    BYTE PTR [rax],al
   14000b26d:	add    BYTE PTR [rax],al
   14000b26f:	add    al,dh
   14000b271:	rol    BYTE PTR [rax],1
   14000b273:	add    BYTE PTR [rax],al
   14000b275:	add    BYTE PTR [rax],al
   14000b277:	add    BYTE PTR [rsi+0xd1],cl
	...
   14000b285:	add    BYTE PTR [rax],al
   14000b287:	add    BYTE PTR [rax+0xd2],bl
	...
   14000b295:	add    BYTE PTR [rax],al
   14000b297:	add    BYTE PTR [rdx],dh
   14000b299:	rol    BYTE PTR [rax],1
   14000b29b:	add    BYTE PTR [rax],al
   14000b29d:	add    BYTE PTR [rax],al
   14000b29f:	add    BYTE PTR [rsi],ah
   14000b2a1:	rol    BYTE PTR [rax],1
	...
   14000b2af:	add    BYTE PTR [rsp+rcx*8+0x0],cl
	...
   14000b2bf:	add    ah,cl
   14000b2c1:	int3   
   14000b2c2:	add    BYTE PTR [rax],al
   14000b2c4:	add    BYTE PTR [rax],al
   14000b2c6:	add    BYTE PTR [rax],al
   14000b2c8:	rol    BYTE PTR es:[rax],cl
   14000b2cb:	add    BYTE PTR [rax],al
   14000b2cd:	add    BYTE PTR [rax],al
   14000b2cf:	add    dh,ah
   14000b2d1:	int3   
   14000b2d2:	add    BYTE PTR [rax],al
   14000b2d4:	add    BYTE PTR [rax],al
   14000b2d6:	add    BYTE PTR [rax],al
   14000b2d8:	int3   
   14000b2d9:	rol    BYTE PTR [rax],1
	...
   14000b2e7:	add    BYTE PTR [rsi+0xd2],al
   14000b2ed:	add    BYTE PTR [rax],al
   14000b2ef:	add    BYTE PTR [rsi-0x2e],ch
   14000b2f2:	add    BYTE PTR [rax],al
   14000b2f4:	add    BYTE PTR [rax],al
   14000b2f6:	add    BYTE PTR [rax],al
   14000b2f8:	push   rdx
   14000b2f9:	rol    BYTE PTR [rax],cl
	...
   14000b307:	add    BYTE PTR [rax],bl
   14000b309:	retf   0x0
   14000b30c:	add    BYTE PTR [rax],al
   14000b30e:	add    BYTE PTR [rax],al
   14000b310:	(bad)  
   14000b311:	retf   0x0
   14000b314:	add    BYTE PTR [rax],al
   14000b316:	add    BYTE PTR [rax],al
   14000b318:	add    al,0xca
   14000b31a:	add    BYTE PTR [rax],al
   14000b31c:	add    BYTE PTR [rax],al
   14000b31e:	add    BYTE PTR [rax],al
   14000b320:	enter  0xc9,0x0
   14000b324:	add    BYTE PTR [rax],al
   14000b326:	add    BYTE PTR [rax],al
   14000b328:	cli    
   14000b329:	leave  
   14000b32a:	add    BYTE PTR [rax],al
   14000b32c:	add    BYTE PTR [rax],al
   14000b32e:	add    BYTE PTR [rax],al
   14000b330:	in     al,0xc9
   14000b332:	add    BYTE PTR [rax],al
   14000b334:	add    BYTE PTR [rax],al
   14000b336:	add    BYTE PTR [rax],al
   14000b338:	fmul   st(1),st
   14000b33a:	add    BYTE PTR [rax],al
   14000b33c:	add    BYTE PTR [rax],al
   14000b33e:	add    BYTE PTR [rax],al
   14000b340:	or     al,0xcb
   14000b342:	add    BYTE PTR [rax],al
   14000b344:	add    BYTE PTR [rax],al
   14000b346:	add    BYTE PTR [rax],al
   14000b348:	hlt    
   14000b349:	retf   0x0
   14000b34c:	add    BYTE PTR [rax],al
   14000b34e:	add    BYTE PTR [rax],al
   14000b350:	(bad)  
   14000b351:	retf   0x0
   14000b354:	add    BYTE PTR [rax],al
   14000b356:	add    BYTE PTR [rax],al
   14000b358:	ror    dl,cl
   14000b35a:	add    BYTE PTR [rax],al
   14000b35c:	add    BYTE PTR [rax],al
   14000b35e:	add    BYTE PTR [rax],al
   14000b360:	(bad)  
   14000b361:	retf   0x0
   14000b364:	add    BYTE PTR [rax],al
   14000b366:	add    BYTE PTR [rax],al
   14000b368:	mov    dl,0xca
   14000b36a:	add    BYTE PTR [rax],al
   14000b36c:	add    BYTE PTR [rax],al
   14000b36e:	add    BYTE PTR [rax],al
   14000b370:	test   al,0xca
   14000b372:	add    BYTE PTR [rax],al
   14000b374:	add    BYTE PTR [rax],al
   14000b376:	add    BYTE PTR [rax],al
   14000b378:	movabs al,ds:0xd2000000000000ca
   14000b381:	leave  
   14000b382:	add    BYTE PTR [rax],al
   14000b384:	add    BYTE PTR [rax],al
   14000b386:	add    BYTE PTR [rax],al
   14000b388:	xchg   edx,eax
   14000b389:	iret   
   14000b38a:	add    BYTE PTR [rax],al
   14000b38c:	add    BYTE PTR [rax],al
   14000b38e:	add    BYTE PTR [rax],al
   14000b390:	movabs al,ds:0xac000000000000cf
   14000b399:	iret   
   14000b39a:	add    BYTE PTR [rax],al
   14000b39c:	add    BYTE PTR [rax],al
   14000b39e:	add    BYTE PTR [rax],al
   14000b3a0:	lock iret 
   14000b3a2:	add    BYTE PTR [rax],al
   14000b3a4:	add    BYTE PTR [rax],al
   14000b3a6:	add    BYTE PTR [rax],al
   14000b3a8:	mov    cs,edx
   14000b3aa:	add    BYTE PTR [rax],al
   14000b3ac:	add    BYTE PTR [rax],al
   14000b3ae:	add    BYTE PTR [rax],al
   14000b3b0:	out    0xcf,al
   14000b3b2:	add    BYTE PTR [rax],al
   14000b3b4:	add    BYTE PTR [rax],al
   14000b3b6:	add    BYTE PTR [rax],al
   14000b3b8:	(bad)  
   14000b3b9:	iret   
   14000b3ba:	add    BYTE PTR [rax],al
   14000b3bc:	add    BYTE PTR [rax],al
   14000b3be:	add    BYTE PTR [rax],al
   14000b3c0:	retf   0xcf
   14000b3c3:	add    BYTE PTR [rax],al
   14000b3c5:	add    BYTE PTR [rax],al
   14000b3c7:	add    BYTE PTR [rdx+rcx*8+0x0],bh
   14000b3cb:	add    BYTE PTR [rax],al
   14000b3cd:	add    BYTE PTR [rax],al
   14000b3cf:	add    BYTE PTR [rsi-0x36],ch
   14000b3d2:	add    BYTE PTR [rax],al
   14000b3d4:	add    BYTE PTR [rax],al
   14000b3d6:	add    BYTE PTR [rax],al
   14000b3d8:	(bad)  
   14000b3d9:	retf   0x0
   14000b3dc:	add    BYTE PTR [rax],al
   14000b3de:	add    BYTE PTR [rax],al
   14000b3e0:	pop    rax
   14000b3e1:	retf   0x0
   14000b3e4:	add    BYTE PTR [rax],al
   14000b3e6:	add    BYTE PTR [rax],al
   14000b3e8:	rex.WRX retf 0x0
   14000b3ec:	add    BYTE PTR [rax],al
   14000b3ee:	add    BYTE PTR [rax],al
   14000b3f0:	rex.R retf 0x0
   14000b3f4:	add    BYTE PTR [rax],al
   14000b3f6:	add    BYTE PTR [rax],al
   14000b3f8:	cmp    al,0xca
   14000b3fa:	add    BYTE PTR [rax],al
   14000b3fc:	add    BYTE PTR [rax],al
   14000b3fe:	add    BYTE PTR [rax],al
   14000b400:	cs retf 0x0
   14000b404:	add    BYTE PTR [rax],al
   14000b406:	add    BYTE PTR [rax],al
   14000b408:	ror    bh,0x0
   14000b40b:	add    BYTE PTR [rax],al
   14000b40d:	add    BYTE PTR [rax],al
   14000b40f:	add    BYTE PTR [rsi+0xcf],dh
   14000b415:	add    BYTE PTR [rax],al
   14000b417:	add    al,dh
   14000b419:	leave  
   14000b41a:	add    BYTE PTR [rax],al
   14000b41c:	add    BYTE PTR [rax],al
   14000b41e:	add    BYTE PTR [rax],al
   14000b420:	and    cl,dl
   14000b422:	add    BYTE PTR [rax],al
   14000b424:	add    BYTE PTR [rax],al
   14000b426:	add    BYTE PTR [rax],al
   14000b428:	clc    
   14000b429:	rol    DWORD PTR [rax],cl
   14000b42b:	add    BYTE PTR [rax],al
   14000b42d:	add    BYTE PTR [rax],al
   14000b42f:	add    BYTE PTR [rdx],al
   14000b431:	(bad)  
	...
   14000b43e:	add    BYTE PTR [rax],al
   14000b440:	(bad)  
   14000b441:	rol    DWORD PTR [rax],cl
	...
   14000b44f:	add    BYTE PTR [rax],ah
   14000b451:	movabs ds:0xa8b0000000014000,eax
   14000b45a:	add    BYTE PTR [rax+0x1],al
	...
   14000b465:	add    BYTE PTR [rax],al
   14000b467:	add    BYTE PTR [rax+0x140009d],al
	...
   14000b47d:	add    BYTE PTR [rax],al
   14000b47f:	add    BYTE PTR [rax+0x140009c],ah
   14000b485:	add    BYTE PTR [rax],al
   14000b487:	add    BYTE PTR [rax-0x60],dl
   14000b48a:	add    BYTE PTR [rax+0x1],al
	...
   14000b495:	add    BYTE PTR [rax],al
   14000b497:	add    BYTE PTR [rax-0x64],ah
   14000b49a:	add    BYTE PTR [rax],al
   14000b49c:	movabs al,ds:0xb000009d8000009c
   14000b4a5:	lahf   
   14000b4a6:	add    BYTE PTR [rax],al
   14000b4a8:	adc    BYTE PTR [rax-0x5fb00000],ah
   14000b4ae:	add    BYTE PTR [rax],al
   14000b4b0:	xor    BYTE PTR [rcx-0x5ce00000],ah
   14000b4b6:	add    BYTE PTR [rax],al
   14000b4b8:	jo     0x14000b45d
   14000b4ba:	add    BYTE PTR [rax],al
   14000b4bc:	and    BYTE PTR [rbp-0x5ac00000],ah
   14000b4c2:	add    BYTE PTR [rax],al
   14000b4c4:	shl    BYTE PTR [rbp-0x5a200000],0x0
   14000b4cb:	add    BYTE PTR [rax-0x5a],ah
   14000b4ce:	add    BYTE PTR [rax],al
   14000b4d0:	and    BYTE PTR [rsi-0x59000000],0x0
   14000b4d7:	add    BYTE PTR [rax],ah
   14000b4d9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000b4da:	add    BYTE PTR [rax],al
   14000b4dc:	movabs al,ds:0xe00000a7c00000a7
   14000b4e5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
	...
   14000b4ee:	add    BYTE PTR [rax],al
   14000b4f0:	(bad)  
   14000b4f1:	loopne 0x14000b4f3
   14000b4f3:	rex add DWORD PTR [rax],eax
   14000b4f6:	add    BYTE PTR [rax],al
   14000b4f8:	add    cl,ah
   14000b4fa:	add    BYTE PTR [rax+0x1],al
   14000b4fd:	add    BYTE PTR [rax],al
   14000b4ff:	add    BYTE PTR [rbp+0x53],dl
   14000b502:	rex.RB push r10
   14000b504:	xor    esi,DWORD PTR [rdx]
   14000b506:	cs fs ins BYTE PTR es:[rdi],dx
   14000b509:	ins    BYTE PTR es:[rdi],dx
   14000b50a:	add    BYTE PTR [rax],al
   14000b50c:	add    BYTE PTR [rax],al
   14000b50e:	add    BYTE PTR [rax],al
   14000b510:	outs   dx,BYTE PTR ds:[rsi]
   14000b511:	gs je  0x14000b589
   14000b514:	je     0x14000b57f
   14000b516:	ins    BYTE PTR es:[rdi],dx
   14000b517:	jae    0x14000b547
   14000b519:	fs ins BYTE PTR es:[rdi],dx
   14000b51b:	ins    BYTE PTR es:[rdi],dx
   14000b51c:	add    BYTE PTR [rax],al
   14000b51e:	add    BYTE PTR [rax],al
   14000b520:	jae    0x14000b594
   14000b522:	jbe    0x14000b587
   14000b524:	ins    BYTE PTR es:[rdi],dx
   14000b525:	imul   ebp,DWORD PTR [rsi],0x6c6c64
   14000b52b:	add    BYTE PTR [rax],al
   14000b52d:	add    BYTE PTR [rax],al
   14000b52f:	add    BYTE PTR [rbp+0x50],cl
   14000b532:	push   rdx
   14000b533:	cs fs ins BYTE PTR es:[rdi],dx
   14000b536:	ins    BYTE PTR es:[rdi],dx
   14000b537:	add    BYTE PTR [rax],al
   14000b539:	add    BYTE PTR [rax],al
   14000b53b:	add    BYTE PTR [rbx+0x0],ch
   14000b53e:	add    BYTE PTR [rax],al
   14000b540:	and    BYTE PTR [rax],al
   14000b542:	or     al,BYTE PTR [rax]
   14000b544:	or     DWORD PTR [rax],eax
   14000b546:	or     eax,0x0
   14000b54b:	add    BYTE PTR [rdx],bh
   14000b54d:	add    BYTE PTR [rax],al
   14000b54f:	add    BYTE PTR [rax+rax*1+0x5c],bl
   14000b553:	add    BYTE PTR [rax],al
   14000b555:	add    BYTE PTR [rax],al
   14000b557:	add    BYTE PTR [rax+rax*1+0x0],bl
   14000b55b:	add    BYTE PTR [rdx+0x0],dh
   14000b55e:	add    BYTE PTR [rax],al
   14000b560:	or     al,BYTE PTR [rax]
   14000b562:	add    BYTE PTR [rax],al
   14000b564:	add    BYTE PTR [rax],al
   14000b566:	add    BYTE PTR [rax],al
   14000b568:	sub    BYTE PTR [rax],al
   14000b56a:	and    eax,0x64006c00
   14000b56f:	add    BYTE PTR [rax+rax*1],ch
   14000b572:	and    eax,0x64006c00
   14000b577:	add    BYTE PTR [rcx],ch
   14000b579:	add    BYTE PTR [rax],al
   14000b57b:	add    BYTE PTR [rsi],ch
   14000b57d:	add    BYTE PTR [rdx],cl
	...
   14000b587:	add    BYTE PTR [rbp+0x0],al
   14000b58a:	outs   dx,BYTE PTR ds:[rsi]
   14000b58b:	add    BYTE PTR [rsi+0x0],dh
   14000b58e:	imul   eax,DWORD PTR [rax],0x6f0072
   14000b594:	outs   dx,BYTE PTR ds:[rsi]
   14000b595:	add    BYTE PTR [rbp+0x0],ch
   14000b598:	add    BYTE PTR gs:[rsi+0x0],ch
   14000b59c:	je     0x14000b59e
   14000b59e:	add    BYTE PTR [rax],al
   14000b5a0:	push   rbx
   14000b5a1:	add    BYTE PTR [rcx+0x0],bl
   14000b5a4:	push   rbx
   14000b5a5:	add    BYTE PTR [rax+rax*1+0x45],dl
   14000b5a9:	add    BYTE PTR [rbp+0x0],cl
   14000b5ac:	pop    rsp
   14000b5ad:	add    BYTE PTR [rbx+0x0],al
   14000b5b0:	jne    0x14000b5b2
   14000b5b2:	jb     0x14000b5b4
   14000b5b4:	jb     0x14000b5b6
   14000b5b6:	add    BYTE PTR gs:[rsi+0x0],ch
   14000b5ba:	je     0x14000b5bc
   14000b5bc:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000b5c0:	outs   dx,BYTE PTR ds:[rsi]
   14000b5c1:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000b5c5:	add    BYTE PTR [rdi+0x0],ch
   14000b5c8:	ins    BYTE PTR es:[rdi],dx
   14000b5c9:	add    BYTE PTR [rbx+0x0],dl
   14000b5cc:	add    BYTE PTR gs:[rax+rax*1+0x5c],dh
   14000b5d1:	add    BYTE PTR [rbx+0x0],al
   14000b5d4:	outs   dx,DWORD PTR ds:[rsi]
   14000b5d5:	add    BYTE PTR [rsi+0x0],ch
   14000b5d8:	je     0x14000b5da
   14000b5da:	jb     0x14000b5dc
   14000b5dc:	outs   dx,DWORD PTR ds:[rsi]
   14000b5dd:	add    BYTE PTR [rax+rax*1+0x5c],ch
   14000b5e1:	add    BYTE PTR [rbx+0x0],dl
   14000b5e4:	add    BYTE PTR gs:[rbx+0x0],dh
   14000b5e8:	jae    0x14000b5ea
   14000b5ea:	imul   eax,DWORD PTR [rax],0x6e006f
   14000b5f0:	and    BYTE PTR [rax],al
   14000b5f2:	rex.WRB add BYTE PTR [r9+0x0],r12b
   14000b5f6:	outs   dx,BYTE PTR ds:[rsi]
   14000b5f7:	add    BYTE PTR [rcx+0x0],ah
   14000b5fa:	add    BYTE PTR [ebp+0x0],ah
   14000b5fe:	jb     0x14000b600
   14000b600:	pop    rsp
   14000b601:	add    BYTE PTR [rbp+0x0],al
   14000b604:	outs   dx,BYTE PTR ds:[rsi]
   14000b605:	add    BYTE PTR [rsi+0x0],dh
   14000b608:	imul   eax,DWORD PTR [rax],0x6f0072
   14000b60e:	outs   dx,BYTE PTR ds:[rsi]
   14000b60f:	add    BYTE PTR [rbp+0x0],ch
   14000b612:	add    BYTE PTR gs:[rsi+0x0],ch
   14000b616:	je     0x14000b618
	...
   14000b620:	rex.W add BYTE PTR [rbx+0x0],cl
   14000b624:	add    BYTE PTR [r9+0x0],r11b
   14000b628:	pop    rdi
   14000b629:	add    BYTE PTR [rax+rax*1+0x4f],cl
   14000b62d:	add    BYTE PTR [rbx+0x0],al
   14000b630:	add    BYTE PTR [r8+rax*1+0x5f],cl
   14000b635:	add    BYTE PTR [rbp+0x0],cl
   14000b638:	add    BYTE PTR [r11+0x0],al
   14000b63c:	rex.W add BYTE PTR [rcx+0x0],cl
   14000b640:	rex.WRX add BYTE PTR [rbp+0x0],r8b
   14000b644:	add    BYTE PTR [rax],al
   14000b646:	add    BYTE PTR [rax],al
   14000b648:	rex.W add BYTE PTR [rbx+0x0],cl
   14000b64c:	rex.WR add BYTE PTR [rbp+0x0],r9b
	...
   14000b658:	rex.W add BYTE PTR [rbx+0x0],cl
   14000b65c:	add    BYTE PTR [r9+0x0],r11b
   14000b660:	pop    rdi
   14000b661:	add    BYTE PTR [rbx+0x0],al
   14000b664:	push   rbp
   14000b665:	add    BYTE PTR [rdx+0x0],dl
   14000b668:	push   rdx
   14000b669:	add    BYTE PTR [rbp+0x0],al
   14000b66c:	rex.WRX add BYTE PTR [rax+r8*1+0x5f],r10b
   14000b671:	add    BYTE PTR [rbp+0x0],dl
   14000b674:	push   rbx
   14000b675:	add    BYTE PTR [rbp+0x0],al
   14000b678:	push   rdx
   14000b679:	add    BYTE PTR [rax],al
   14000b67b:	add    BYTE PTR [rax],al
   14000b67d:	add    BYTE PTR [rax],al
   14000b67f:	add    BYTE PTR [rax+0x0],cl
   14000b682:	rex.WXB add BYTE PTR [r11+0x0],al
   14000b686:	push   rbp
	...
   14000b68f:	add    BYTE PTR [rip+0x7500],ah        # 0x140012b95
   14000b695:	add    BYTE PTR [rax],al
   14000b697:	add    BYTE PTR [rdx],ah
   14000b699:	add    BYTE PTR [rip+0x22007300],ah        # 0x16201299f
   14000b69f:	add    BYTE PTR [rsi],ch
   14000b6a1:	add    BYTE PTR [rax],al
   14000b6a3:	add    BYTE PTR [rbx],bh
   14000b6a5:	add    BYTE PTR [rax],al
   14000b6a7:	add    BYTE PTR [rax],ch
   14000b6a9:	add    BYTE PTR [rip+0x64006c00],ah        # 0x1a40122af
   14000b6af:	add    BYTE PTR [rax+rax*1],ch
   14000b6b2:	and    eax,0x64006c00
   14000b6b7:	add    BYTE PTR [rax],ah
   14000b6b9:	add    BYTE PTR [rip+0x29007300],ah        # 0x1690129bf
   14000b6bf:	add    BYTE PTR [rax],al
   14000b6c1:	add    BYTE PTR [rax],al
   14000b6c3:	add    BYTE PTR [rbx+0x0],dh
   14000b6c6:	add    BYTE PTR [rax],al
   14000b6c8:	jne    0x14000b6ca
   14000b6ca:	add    BYTE PTR [rax],al
   14000b6cc:	jo     0x14000b6ce
   14000b6ce:	add    BYTE PTR [rax],al
   14000b6d0:	ins    DWORD PTR es:[rdi],dx
   14000b6d1:	add    BYTE PTR [rax],al
   14000b6d3:	add    BYTE PTR [rdi],bh
   14000b6d5:	add    BYTE PTR [rax],al
   14000b6d7:	add    BYTE PTR [rsi+0x0],ah
   14000b6da:	add    BYTE PTR [rax],al
   14000b6dc:	js     0x14000b6de
   14000b6de:	add    BYTE PTR [rax],al
   14000b6e0:	(bad)  
   14000b6e1:	add    BYTE PTR [rax],al
   14000b6e3:	add    BYTE PTR [rax+rax*1+0x0],ah
   14000b6e7:	add    BYTE PTR [rax+0x41],dl
   14000b6ea:	push   rdx
   14000b6eb:	push   rbx
   14000b6ec:	rex.RB push r10
   14000b6ee:	xor    al,BYTE PTR [rax]
   14000b6f0:	add    BYTE PTR [rax],al
   14000b6f2:	add    BYTE PTR [rax],al
   14000b6f4:	and    BYTE PTR [rax],al
   14000b6f6:	add    BYTE PTR [rax],al
   14000b6f8:	sub    al,BYTE PTR [rax]
   14000b6fa:	add    BYTE PTR [rax],al
   14000b6fc:	add    BYTE PTR [rax],al
   14000b6fe:	add    BYTE PTR [rax],al
   14000b700:	and    eax,0x20007300
   14000b705:	add    BYTE PTR [rax],al
   14000b707:	add    BYTE PTR [rax+rax*1+0x25],bh
   14000b70b:	add    BYTE PTR [rbx+0x0],dh
   14000b70e:	jl     0x14000b710
   14000b710:	add    BYTE PTR [rax],al
   14000b712:	add    BYTE PTR [rax],al
   14000b714:	and    BYTE PTR [rax],al
   14000b716:	or     DWORD PTR [rax],eax
   14000b718:	add    BYTE PTR [rax],al
   14000b71a:	add    BYTE PTR [rax],al
   14000b71c:	and    eax,0x25000073
   14000b721:	add    BYTE PTR [rbx+0x0],ah
   14000b724:	add    BYTE PTR [rax],al
   14000b726:	add    BYTE PTR [rax],al
   14000b728:	(bad)  
   14000b729:	add    BYTE PTR [rax],al
   14000b72b:	add    BYTE PTR [rdx],cl
   14000b72d:	add    BYTE PTR [rdx],cl
   14000b72f:	add    BYTE PTR [rax],al
   14000b731:	add    BYTE PTR [rax],al
   14000b733:	add    BYTE PTR [rdx+0x55],al
   14000b736:	rex.RX
   14000b737:	rex.RX
   14000b738:	rex.RB push r10
   14000b73a:	add    BYTE PTR [rax],al
   14000b73c:	add    BYTE PTR [rax],al
   14000b73e:	add    BYTE PTR [rax],al
   14000b740:	ins    BYTE PTR es:[rdi],dx
   14000b741:	add    BYTE PTR [rdi+0x0],ch
   14000b744:	movsxd eax,DWORD PTR [rax]
   14000b746:	(bad)  
   14000b747:	add    BYTE PTR [rax+rax*1+0x68],ch
   14000b74b:	add    BYTE PTR [rdi+0x0],ch
   14000b74e:	jae    0x14000b750
   14000b750:	je     0x14000b752
   14000b752:	add    BYTE PTR [rax],al
   14000b754:	add    BYTE PTR [rax],al
   14000b756:	add    BYTE PTR [rax],al
   14000b758:	and    BYTE PTR [rax],al
   14000b75a:	pop    rsp
   14000b75b:	add    BYTE PTR [rdi],ch
   14000b75d:	add    BYTE PTR [rbx+0x0],bl
   14000b760:	pop    rbp
   14000b761:	add    BYTE PTR [rdx],bh
   14000b763:	add    BYTE PTR [rax+rax*1+0x3c],bh
   14000b767:	add    BYTE PTR [rsi],bh
   14000b769:	add    BYTE PTR [rbx],ch
   14000b76b:	add    BYTE PTR [rip+0x2c003b00],bh        # 0x16c00f271
   14000b771:	add    BYTE PTR [rdi],bh
   14000b773:	add    BYTE PTR [rax+rax*1],ah
   14000b776:	and    eax,DWORD PTR [rax]
   14000b778:	sub    BYTE PTR [rax],al
   14000b77a:	sub    DWORD PTR [rax],eax
   14000b77c:	and    DWORD PTR [rax],eax
   14000b77e:	add    BYTE PTR [rsi+0x0],bl
   14000b782:	and    al,BYTE PTR [rax]
   14000b784:	(bad)  
   14000b785:	add    BYTE PTR [rbx+0x0],bh
   14000b788:	jge    0x14000b78a
   14000b78a:	sub    al,BYTE PTR [rax]
   14000b78c:	and    eax,0x2e000000
   14000b791:	add    BYTE PTR [rax],al
   14000b793:	add    BYTE PTR [rax],al
   14000b795:	add    BYTE PTR [rax],al
   14000b797:	add    BYTE PTR [rax+rax*1+0x5c],bl
   14000b79b:	add    BYTE PTR [rip+0x7300],ah        # 0x140012aa1
   14000b7a1:	add    BYTE PTR [rax],al
   14000b7a3:	add    BYTE PTR [rax],al
   14000b7a5:	add    BYTE PTR [rax],al
   14000b7a7:	add    BYTE PTR [rcx+0x0],cl
   14000b7aa:	push   rax
   14000b7ab:	add    BYTE PTR [rbx+0x0],al
   14000b7ae:	and    al,0x0
	...
   14000b7b8:	pop    rsp
   14000b7b9:	add    BYTE PTR [rax+rax*1+0x25],bl
   14000b7bd:	add    BYTE PTR [rbx+0x0],dh
   14000b7c0:	pop    rsp
   14000b7c1:	add    BYTE PTR [rip+0x7300],ah        # 0x140012ac7
   14000b7c7:	add    BYTE PTR [rax+rax*1+0x56],bl
   14000b7cb:	add    BYTE PTR [rcx+0x0],ah
   14000b7ce:	jb     0x14000b7d0
   14000b7d0:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000b7d4:	ins    BYTE PTR es:[rdi],dx
   14000b7d5:	add    BYTE PTR [rbp+0x0],ah
   14000b7d8:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000b7dc:	data16 add BYTE PTR [rdi+0x0],ch
   14000b7e0:	pop    rsp
   14000b7e1:	add    BYTE PTR [rax+rax*1+0x72],dl
   14000b7e5:	add    BYTE PTR [rcx+0x0],ah
   14000b7e8:	outs   dx,BYTE PTR ds:[rsi]
   14000b7e9:	add    BYTE PTR [rbx+0x0],dh
   14000b7ec:	ins    BYTE PTR es:[rdi],dx
   14000b7ed:	add    BYTE PTR [rcx+0x0],ah
   14000b7f0:	je     0x14000b7f2
   14000b7f2:	imul   eax,DWORD PTR [rax],0x6e006f
	...
   14000b800:	pop    rsp
   14000b801:	add    BYTE PTR [rbx+0x0],dl
   14000b804:	je     0x14000b806
   14000b806:	jb     0x14000b808
   14000b808:	imul   eax,DWORD PTR [rax],0x67006e
   14000b80e:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000b812:	ins    BYTE PTR es:[rdi],dx
   14000b813:	add    BYTE PTR [rbp+0x0],ah
   14000b816:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000b81a:	data16 add BYTE PTR [rdi+0x0],ch
   14000b81e:	pop    rsp
   14000b81f:	add    BYTE PTR [rip+0x34003000],ah        # 0x17400e825
   14000b825:	add    BYTE PTR [rax+0x0],bh
   14000b828:	and    eax,0x34003000
   14000b82d:	add    BYTE PTR [rax+0x0],bh
   14000b830:	pop    rsp
   14000b831:	add    BYTE PTR [rcx+0x0],cl
   14000b834:	outs   dx,BYTE PTR ds:[rsi]
   14000b835:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000b839:	add    BYTE PTR [rdx+0x0],dh
   14000b83c:	outs   dx,BYTE PTR ds:[rsi]
   14000b83d:	add    BYTE PTR [rcx+0x0],ah
   14000b840:	ins    BYTE PTR es:[rdi],dx
   14000b841:	add    BYTE PTR [rsi+0x0],cl
   14000b844:	(bad)  
   14000b845:	add    BYTE PTR [rbp+0x0],ch
   14000b848:	add    BYTE PTR gs:[rax],al
   14000b84b:	add    BYTE PTR [rax],al
   14000b84d:	add    BYTE PTR [rax],al
   14000b84f:	add    BYTE PTR [rsi],ch
   14000b851:	add    BYTE PTR [rbp+0x0],al
   14000b854:	pop    rax
   14000b855:	add    BYTE PTR [rbp+0x0],al
	...
   14000b860:	and    eax,0x20007300
   14000b865:	add    BYTE PTR [rip+0x7300],ah        # 0x140012b6b
   14000b86b:	add    BYTE PTR [rdi],ch
   14000b86d:	add    BYTE PTR [rax],al
   14000b86f:	add    BYTE PTR [rax+0x41],dl
   14000b872:	push   rdx
   14000b873:	push   rbx
   14000b874:	rex.RB push r10
   14000b876:	xor    al,BYTE PTR [rax]
   14000b878:	sub    eax,0x2f00
	...
   14000b891:	add    BYTE PTR [rax],al
   14000b893:	add    BYTE PTR [rax+rdi*1+0x559f],bl
   14000b89a:	add    BYTE PTR [rax],al
   14000b89c:	add    al,BYTE PTR [rax]
   14000b89e:	add    BYTE PTR [rax],al
   14000b8a0:	and    DWORD PTR [rax],eax
   14000b8a2:	add    BYTE PTR [rax],al
   14000b8a4:	nop
   14000b8a5:	mov    ecx,0xa7900000
   14000b8aa:	add    BYTE PTR [rax],al
   14000b8ac:	add    BYTE PTR [rax],al
   14000b8ae:	add    BYTE PTR [rax],al
   14000b8b0:	pushf  
   14000b8b1:	cmp    BYTE PTR [rdi+0x55],bl
   14000b8b7:	add    BYTE PTR [rip+0x58000000],cl        # 0x19800b8bd
   14000b8bd:	add    al,BYTE PTR [rax]
   14000b8bf:	add    al,cl
   14000b8c1:	mov    ecx,0xa7c80000
	...
   14000b8ee:	add    BYTE PTR [rax],al
   14000b8f0:	movabs al,ds:0x0
	...
   14000b945:	add    BYTE PTR [rax],al
   14000b947:	add    BYTE PTR [rax],cl
   14000b949:	loopne 0x14000b94b
   14000b94b:	rex add DWORD PTR [rax],eax
	...
   14000b95e:	add    BYTE PTR [rax],al
   14000b960:	push   rax
   14000b961:	mov    ah,0x0
   14000b963:	rex add DWORD PTR [rax],eax
   14000b966:	add    BYTE PTR [rax],al
   14000b968:	pop    rax
   14000b969:	mov    ah,0x0
   14000b96b:	rex add DWORD PTR [rax],eax
   14000b96e:	add    BYTE PTR [rax],al
   14000b970:	cwde   
   14000b971:	mov    ah,0x0
   14000b973:	rex add DWORD PTR [rax],eax
   14000b976:	add    BYTE PTR [rax],al
   14000b978:	adc    al,0x0
   14000b97a:	add    BYTE PTR [rax],al
   14000b97c:	add    BYTE PTR [rax],al
   14000b97e:	add    BYTE PTR [rax],al
   14000b980:	add    BYTE PTR [rip+0x0],dh        # 0x14000b986
	...
   14000b98e:	add    BYTE PTR [rax],al
   14000b990:	push   rdx
   14000b991:	push   rbx
   14000b992:	rex.R push rbx
   14000b994:	lea    eax,[rdi+0x69]
   14000b997:	cmp    eax,0x4e2c88eb
   14000b99c:	mov    eax,0xd2113fa0
   14000b9a1:	pop    rcx
   14000b9a2:	(bad)  
   14000b9a3:	xor    DWORD PTR [rcx],eax
   14000b9a5:	add    BYTE PTR [rax],al
   14000b9a7:	add    BYTE PTR [rbx+0x65],dh
   14000b9aa:	je     0x14000ba24
   14000b9ac:	cs jo  0x14000ba13
   14000b9af:	(bad)  
	...
   14000b9c8:	rex.RXB
   14000b9c9:	rex.XB push r12
   14000b9cb:	rex.WR add BYTE PTR [rax],r10b
   14000b9ce:	add    BYTE PTR [rax],al
   14000b9d0:	cwde   
   14000b9d1:	cwde   
   14000b9d2:	add    BYTE PTR [rax],al
   14000b9d4:	cs je  0x14000ba3c
   14000b9d7:	js     0x14000ba4d
   14000b9d9:	and    al,0x6d
   14000b9db:	outs   dx,BYTE PTR ds:[rsi]
   14000b9dc:	add    BYTE PTR [rax],al
   14000b9de:	add    BYTE PTR [rax],al
   14000b9e0:	movabs al,ds:0x2e0000007d0000a8
   14000b9e9:	je     0x14000ba50
   14000b9eb:	js     0x14000ba61
   14000b9ed:	and    al,0x6d
   14000b9ef:	outs   dx,BYTE PTR ds:[rsi]
   14000b9f0:	and    al,0x30
   14000b9f2:	xor    BYTE PTR [rax],al
   14000b9f4:	and    BYTE PTR [rcx+0x500000],ch
   14000b9fa:	add    BYTE PTR [rax],al
   14000b9fc:	cs je  0x14000ba64
   14000b9ff:	js     0x14000ba75
   14000ba01:	and    al,0x78
   14000ba03:	add    BYTE PTR [rax],al
   14000ba05:	mov    al,0x0
   14000ba07:	add    BYTE PTR [rax+0x4],dl
   14000ba0a:	add    BYTE PTR [rax],al
   14000ba0c:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x352461
   14000ba15:	add    BYTE PTR [rax],al
   14000ba17:	add    BYTE PTR [rax-0x4c],dl
   14000ba1a:	add    BYTE PTR [rax],al
   14000ba1c:	adc    BYTE PTR [rax],al
   14000ba1e:	add    BYTE PTR [rax],al
   14000ba20:	xor    BYTE PTR cs:[rax],dh
   14000ba23:	movsxd esp,DWORD PTR [rsi+0x67]
   14000ba26:	add    BYTE PTR [rax],al
   14000ba28:	(bad)  
   14000ba29:	mov    ah,0x0
   14000ba2b:	add    BYTE PTR [rax],cl
   14000ba2d:	add    BYTE PTR [rax],al
   14000ba2f:	add    BYTE PTR [rsi],ch
   14000ba31:	rex.XB push r10
   14000ba33:	push   rsp
   14000ba34:	and    al,0x58
   14000ba36:	rex.XB
   14000ba37:	add    BYTE PTR [r8],al
   14000ba3a:	add    BYTE PTR [rax],al
   14000ba3c:	push   0x80000b4
   14000ba41:	add    BYTE PTR [rax],al
   14000ba43:	add    BYTE PTR [rsi],ch
   14000ba45:	rex.XB push r10
   14000ba47:	push   rsp
   14000ba48:	and    al,0x58
   14000ba4a:	rex.XB
   14000ba4b:	rex.B
   14000ba4c:	add    BYTE PTR [r8],al
   14000ba4f:	add    BYTE PTR [rax-0x4c],dh
   14000ba52:	add    BYTE PTR [rax],al
   14000ba54:	or     BYTE PTR [rax],al
   14000ba56:	add    BYTE PTR [rax],al
   14000ba58:	cs rex.XB push r10
   14000ba5b:	push   rsp
   14000ba5c:	and    al,0x58
   14000ba5e:	rex.XB pop r10
   14000ba60:	add    BYTE PTR [rax],al
   14000ba62:	add    BYTE PTR [rax],al
   14000ba64:	js     0x14000ba1a
   14000ba66:	add    BYTE PTR [rax],al
   14000ba68:	or     BYTE PTR [rax],al
   14000ba6a:	add    BYTE PTR [rax],al
   14000ba6c:	cs rex.XB push r10
   14000ba6f:	push   rsp
   14000ba70:	and    al,0x58
   14000ba72:	rex.WB
   14000ba73:	add    BYTE PTR [r8],al
   14000ba76:	add    BYTE PTR [rax],al
   14000ba78:	xor    BYTE PTR [rax+rax*1+0x800],0x0
   14000ba80:	cs rex.XB push r10
   14000ba83:	push   rsp
   14000ba84:	and    al,0x58
   14000ba86:	rex.WB
   14000ba87:	rex.B
   14000ba88:	add    BYTE PTR [r8],al
   14000ba8b:	add    BYTE PTR [rax+0x80000b4],cl
   14000ba91:	add    BYTE PTR [rax],al
   14000ba93:	add    BYTE PTR [rsi],ch
   14000ba95:	rex.XB push r10
   14000ba97:	push   rsp
   14000ba98:	and    al,0x58
   14000ba9a:	rex.WB pop r9
   14000ba9c:	add    BYTE PTR [rax],al
   14000ba9e:	add    BYTE PTR [rax],al
   14000baa0:	nop
   14000baa1:	mov    ah,0x0
   14000baa3:	add    BYTE PTR [rax],cl
   14000baa5:	add    BYTE PTR [rax],al
   14000baa7:	add    BYTE PTR [rsi],ch
   14000baa9:	rex.XB push r10
   14000baab:	push   rsp
   14000baac:	and    al,0x58
   14000baae:	rex.WB pop r10
   14000bab0:	add    BYTE PTR [rax],al
   14000bab2:	add    BYTE PTR [rax],al
   14000bab4:	cwde   
   14000bab5:	mov    ah,0x0
   14000bab7:	add    BYTE PTR [rax+0x0],dl
   14000baba:	add    BYTE PTR [rax],al
   14000babc:	imul   sp,WORD PTR cs:[ebx+esi*2+0x24],0x78
   14000bac5:	add    BYTE PTR [rax],al
   14000bac7:	add    al,dh
   14000bac9:	mov    ah,0x0
   14000bacb:	add    BYTE PTR [rax+0x2e000004],ah
   14000bad1:	jb     0x14000bb37
   14000bad3:	(bad)  
   14000bad4:	je     0x14000bb37
   14000bad6:	add    BYTE PTR [rax],al
   14000bad8:	nop
   14000bad9:	mov    ecx,0x2900000
   14000bade:	add    BYTE PTR [rax],al
   14000bae0:	cs jb  0x14000bb47
   14000bae3:	(bad)  
   14000bae4:	je     0x14000bb47
   14000bae6:	and    al,0x7a
   14000bae8:	jp     0x14000bb64
   14000baea:	fs (bad) 
   14000baec:	add    BYTE PTR [eax],al
   14000baef:	add    BYTE PTR [rax],ah
   14000baf1:	mov    esp,0x5600000
   14000baf6:	add    BYTE PTR [rax],al
   14000baf8:	cs js  0x14000bb5f
   14000bafb:	(bad)  
   14000bafc:	je     0x14000bb5f
   14000bafe:	add    BYTE PTR [rax],al
   14000bb00:	add    cl,0x0
   14000bb03:	add    BYTE PTR [rax+0x2e000000],al
   14000bb09:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3224
   14000bb12:	add    BYTE PTR [rax],al
   14000bb14:	add    dl,al
   14000bb16:	add    BYTE PTR [rax],al
   14000bb18:	and    BYTE PTR [rax],al
   14000bb1a:	add    BYTE PTR [rax],al
   14000bb1c:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3324
   14000bb26:	add    BYTE PTR [rax],al
   14000bb28:	and    dl,al
   14000bb2a:	add    BYTE PTR [rax],al
   14000bb2c:	push   rax
   14000bb2d:	add    BYTE PTR [rax],al
   14000bb2f:	add    BYTE PTR [rsi],ch
   14000bb31:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3424
   14000bb3a:	add    BYTE PTR [rax],al
   14000bb3c:	jo     0x14000bb00
   14000bb3e:	add    BYTE PTR [rax],al
   14000bb40:	(bad)  
   14000bb41:	add    BYTE PTR [rax],al
   14000bb43:	add    BYTE PTR [rsi],ch
   14000bb45:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3624
   14000bb4e:	add    BYTE PTR [rax],al
   14000bb50:	clc    
   14000bb51:	ret    0x0
   14000bb54:	push   rax
   14000bb55:	add    BYTE PTR [rax],al
   14000bb57:	add    BYTE PTR [rsi],ch
   14000bb59:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3724
   14000bb62:	add    BYTE PTR [rax],al
   14000bb64:	rex.W ret 
   14000bb66:	add    BYTE PTR [rax],al
   14000bb68:	sbb    al,0x2
   14000bb6a:	add    BYTE PTR [rax],al
   14000bb6c:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x322461
   14000bb75:	add    BYTE PTR [rax],al
   14000bb77:	add    BYTE PTR [rbp+rax*8+0x0],ah
   14000bb7b:	add    BYTE PTR [rax+rax*1],dl
   14000bb7e:	add    BYTE PTR [rax],al
   14000bb80:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   14000bb89:	add    BYTE PTR [rax],al
   14000bb8b:	add    BYTE PTR [rax-0x3b],bh
   14000bb8e:	add    BYTE PTR [rax],al
   14000bb90:	push   rax
   14000bb91:	add    al,0x0
   14000bb93:	add    BYTE PTR [rsi],ch
   14000bb95:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x342461
   14000bb9d:	add    BYTE PTR [rax],al
   14000bb9f:	add    al,cl
   14000bba1:	leave  
   14000bba2:	add    BYTE PTR [rax],al
   14000bba4:	or     r8b,BYTE PTR [rax]
   14000bba7:	add    BYTE PTR [rsi],ch
   14000bba9:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x362461
   14000bbb1:	add    BYTE PTR [rax],al
   14000bbb3:	add    BYTE PTR [rax],al
   14000bbb5:	loopne 0x14000bbb7
   14000bbb7:	add    BYTE PTR [rax],ah
   14000bbb9:	add    BYTE PTR [rax],al
   14000bbbb:	add    BYTE PTR [rsi],ch
   14000bbbd:	fs (bad) 
   14000bbbf:	je     0x14000bc22
   14000bbc1:	add    BYTE PTR [rax],al
   14000bbc3:	add    BYTE PTR [rax],ah
   14000bbc5:	loopne 0x14000bbc7
   14000bbc7:	add    BYTE PTR [rdi+rax*1],dl
   14000bbca:	add    BYTE PTR [rax],al
   14000bbcc:	cs (bad) 
   14000bbcf:	jae    0x14000bbd1
   14000bbd1:	add    BYTE PTR [rax],al
   14000bbd3:	add    BYTE PTR [rax],al
   14000bbd5:	lock add BYTE PTR [rax],al
   14000bbd8:	clc    
   14000bbd9:	add    al,0x0
   14000bbdb:	add    BYTE PTR [rsi],ch
   14000bbdd:	jo     0x14000bc43
   14000bbdf:	(bad)  
   14000bbe0:	je     0x14000bc43
   14000bbe2:	add    BYTE PTR [rax],al
   14000bbe4:	add    BYTE PTR [rax],al
   14000bbe6:	add    DWORD PTR [rax],eax
   14000bbe8:	push   rax
   14000bbe9:	add    BYTE PTR [rax],al
   14000bbeb:	add    BYTE PTR [rsi],ch
   14000bbed:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3524
   14000bbf6:	add    BYTE PTR [rax],al
   14000bbf8:	add    BYTE PTR [rax],dl
   14000bbfa:	add    DWORD PTR [rax],eax
   14000bbfc:	lock add BYTE PTR [rax],al
   14000bbff:	add    BYTE PTR [rsi],ch
   14000bc01:	jb     0x14000bc76
   14000bc03:	jb     0x14000bc68
   14000bc05:	and    al,0x30
   14000bc07:	xor    DWORD PTR [rax],eax
   14000bc09:	add    BYTE PTR [rax],al
   14000bc0b:	add    al,dh
   14000bc0d:	adc    BYTE PTR [rcx],al
   14000bc0f:	add    BYTE PTR [rax],ah
   14000bc11:	(bad)  
   14000bc12:	add    BYTE PTR [rax],al
   14000bc14:	cs jb  0x14000bc8a
   14000bc17:	jb     0x14000bc7c
   14000bc19:	and    al,0x30
   14000bc1b:	xor    al,BYTE PTR [rax]
   14000bc1d:	add    BYTE PTR [rax],al
   14000bc1f:	add    BYTE PTR [rcx],al
   14000bc21:	adc    al,BYTE PTR [rip+0xe421200]        # 0x14e42ce27
   14000bc27:	jo     0x14000bc36
   14000bc29:	(bad)  
   14000bc2a:	or     al,0x50
   14000bc2c:	or     esi,DWORD PTR [rax]
   14000bc2e:	add    BYTE PTR [rax],al
   14000bc30:	sbb    DWORD PTR [rip+0x742c000d],edi        # 0x1b42cbc43
   14000bc36:	add    DWORD PTR [rsp+rbp*1],eax
   14000bc39:	add    BYTE PTR fs:[rsp+rbp*1],al
   14000bc3d:	xor    al,0xfe
   14000bc3f:	add    ebp,DWORD PTR [rcx+rax*1]
   14000bc42:	clc    
   14000bc43:	add    ebx,DWORD PTR [rax]
   14000bc45:	lock (bad) 
   14000bc47:	loopne 0x14000bc5d
   14000bc49:	rcl    BYTE PTR [rdx],1
   14000bc4b:	rcl    BYTE PTR [rax],0x50
   14000bc4e:	add    BYTE PTR [rax],al
   14000bc50:	in     al,dx
   14000bc51:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000bc52:	add    BYTE PTR [rax],al
   14000bc54:	mov    al,0x1f
   14000bc56:	add    BYTE PTR [rax],al
   14000bc58:	add    DWORD PTR [rcx],ebx
   14000bc5a:	or     al,BYTE PTR [rax]
   14000bc5c:	sbb    DWORD PTR [rdi+rcx*1+0x0],esp
   14000bc60:	sbb    DWORD PTR [rsi+rcx*1],esi
   14000bc63:	add    BYTE PTR [rcx],bl
   14000bc65:	jb     0x14000bc79
   14000bc67:	lock adc al,ah
   14000bc6a:	(bad)  
   14000bc6b:	ror    BYTE PTR [rax+rsi*2],0xb
   14000bc6f:	push   rax
   14000bc70:	sbb    DWORD PTR [rip+0x11c000a],ebp        # 0x1411cbc80
   14000bc76:	adc    eax,DWORD PTR [rcx]
   14000bc78:	or     eax,0x9e00bf0
   14000bc7d:	rol    BYTE PTR [rdi],1
   14000bc7f:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x14360c0f6
   14000bc86:	add    dl,BYTE PTR [rax-0x14]
   14000bc89:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000bc8a:	add    BYTE PTR [rax],al
   14000bc8c:	or     BYTE PTR [rax],0x0
   14000bc8f:	add    BYTE PTR [rcx],bl
   14000bc91:	or     al,BYTE PTR es:[rax]
   14000bc94:	adc    al,0x1
   14000bc96:	leave  
   14000bc97:	add    BYTE PTR [rip+0x9e00bf0],cl        # 0x149e0c88d
   14000bc9d:	rol    BYTE PTR [rdi],1
   14000bc9f:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x14360c116
   14000bca6:	add    dh,BYTE PTR [rax]
   14000bca8:	in     al,dx
   14000bca9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000bcaa:	add    BYTE PTR [rax],al
   14000bcac:	xor    BYTE PTR [rsi],al
   14000bcae:	add    BYTE PTR [rax],al
   14000bcb0:	add    DWORD PTR [rip+0x74150008],edx        # 0x1b415bcbe
   14000bcb6:	or     BYTE PTR [rax],al
   14000bcb8:	adc    eax,0x15000764
   14000bcbd:	xor    al,0x6
   14000bcbf:	add    BYTE PTR [rip+0x1e01132],dl        # 0x141e0cdf7
   14000bcc5:	and    DWORD PTR [rdx],ecx
   14000bcc7:	add    BYTE PTR [rcx],ah
   14000bcc9:	xor    al,0x12
   14000bccb:	add    BYTE PTR [rcx],ah
   14000bccd:	xchg   edx,eax
   14000bcce:	sbb    dh,al
   14000bcd0:	sbb    al,ah
   14000bcd2:	(bad)  
   14000bcd3:	rcl    BYTE PTR [rax+rax*8],1
   14000bcd6:	adc    dh,BYTE PTR [rax+0x11]
   14000bcd9:	(bad)  
   14000bcda:	adc    BYTE PTR [rax+0x19],dl
   14000bcdd:	or     eax,DWORD PTR ss:[rax]
   14000bce0:	and    eax,0x2505b534
   14000bce5:	add    DWORD PTR [rdx+0xef01005],ebp
   14000bceb:	loopne 0x14000bcf9
   14000bced:	ror    BYTE PTR [rdx],1
   14000bcef:	ror    BYTE PTR [rax],0x70
   14000bcf2:	(bad)  
   14000bcf3:	(bad)  
   14000bcf4:	(bad)  
   14000bcf5:	push   rax
   14000bcf6:	add    BYTE PTR [rax],al
   14000bcf8:	in     al,dx
   14000bcf9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000bcfa:	add    BYTE PTR [rax],al
   14000bcfc:	rex sub eax,0x2b190000
   14000bd02:	(bad)  
   14000bd03:	add    BYTE PTR [rdx],bl
   14000bd05:	je     0x14000bcd1
   14000bd07:	add    BYTE PTR [rdx],bl
   14000bd09:	xor    al,0xc8
   14000bd0b:	add    BYTE PTR [rdx],bl
   14000bd0d:	add    esi,eax
   14000bd0f:	add    BYTE PTR [rbx],cl
   14000bd11:	push   rax
   14000bd12:	add    BYTE PTR [rax],al
   14000bd14:	in     al,dx
   14000bd15:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000bd16:	add    BYTE PTR [rax],al
   14000bd18:	and    BYTE PTR [rsi],al
   14000bd1a:	add    BYTE PTR [rax],al
   14000bd1c:	sbb    DWORD PTR [rsi],esp
   14000bd1e:	or     al,BYTE PTR [rax]
   14000bd20:	adc    al,0x1
   14000bd22:	rex.WB add BYTE PTR [rip+0x9e00bf0],cl        # 0x149e0c919
   14000bd29:	rol    BYTE PTR [rdi],1
   14000bd2b:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x14360c1a2
   14000bd32:	add    dh,BYTE PTR [rax]
   14000bd34:	in     al,dx
   14000bd35:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000bd36:	add    BYTE PTR [rax],al
   14000bd38:	xor    BYTE PTR [rdx],al
   14000bd3a:	add    BYTE PTR [rax],al
   14000bd3c:	sbb    DWORD PTR [rax],esi
   14000bd3e:	or     eax,DWORD PTR [rax]
   14000bd40:	(bad)  
   14000bd41:	xor    al,0xce
   14000bd43:	add    BYTE PTR [rdi],bl
   14000bd45:	add    esi,eax
   14000bd47:	add    BYTE PTR [rax],dl
   14000bd49:	lock (bad) 
   14000bd4b:	loopne 0x14000bd59
   14000bd4d:	ror    BYTE PTR [rdx],1
   14000bd4f:	ror    BYTE PTR [rax],0x70
   14000bd52:	(bad)  
   14000bd53:	(bad)  
   14000bd54:	(bad)  
   14000bd55:	push   rax
   14000bd56:	add    BYTE PTR [rax],al
   14000bd58:	in     al,dx
   14000bd59:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000bd5a:	add    BYTE PTR [rax],al
   14000bd5c:	and    BYTE PTR [rsi],al
   14000bd5e:	add    BYTE PTR [rax],al
   14000bd60:	add    DWORD PTR [rcx+rax*1],eax
   14000bd63:	add    BYTE PTR [rdx+rax*2],al
   14000bd66:	add    BYTE PTR [rax],al
   14000bd68:	add    DWORD PTR [rsi],eax
   14000bd6a:	add    al,BYTE PTR [rax]
   14000bd6c:	(bad)  
   14000bd6d:	xor    al,BYTE PTR [rdx]
   14000bd6f:	xor    BYTE PTR [rcx],al
   14000bd71:	adc    cl,BYTE PTR [rax]
   14000bd73:	add    BYTE PTR [rdx],dl
   14000bd75:	push   rsp
   14000bd76:	or     al,BYTE PTR [rax]
   14000bd78:	adc    dh,BYTE PTR [rax+rcx*1]
   14000bd7b:	add    BYTE PTR [rdx],dl
   14000bd7d:	xor    cl,BYTE PTR [rsi]
   14000bd7f:	loopne 0x14000bd8d
   14000bd81:	jo     0x14000bd8e
   14000bd83:	(bad)  
   14000bd84:	add    DWORD PTR [rdx],ecx
   14000bd86:	add    al,0x0
   14000bd88:	or     dh,BYTE PTR [rsi+rax*1]
   14000bd8b:	add    BYTE PTR [rdx],cl
   14000bd8d:	xor    al,BYTE PTR [rsi]
   14000bd8f:	jo     0x14000bd92
   14000bd91:	sbb    eax,DWORD PTR [rdi]
   14000bd93:	add    BYTE PTR [rbx],bl
   14000bd95:	(bad)  
   14000bd96:	(bad)  
   14000bd97:	loopne 0x14000bdae
   14000bd99:	rcl    BYTE PTR [rbx],0x70
   14000bd9c:	adc    ah,BYTE PTR [rax+0x11]
   14000bd9f:	push   rax
   14000bda0:	adc    BYTE PTR [rax],dh
   14000bda2:	add    BYTE PTR [rax],al
   14000bda4:	add    DWORD PTR [rsi],eax
   14000bda6:	add    al,BYTE PTR [rax]
   14000bda8:	(bad)  
   14000bda9:	jb     0x14000bdad
   14000bdab:	xor    BYTE PTR [rcx],al
   14000bdad:	clts   
   14000bdaf:	add    BYTE PTR [rdi],cl
   14000bdb1:	or     al,BYTE PTR fs:[rax]
   14000bdb4:	sysenter 
   14000bdb6:	or     DWORD PTR [rax],eax
   14000bdb8:	rsqrtps xmm1,XMMWORD PTR [rbx]
   14000bdbb:	jo     0x14000bdbe
   14000bdbd:	clts   
   14000bdbf:	add    BYTE PTR [rdi],cl
   14000bdc1:	or     DWORD PTR fs:[rax],eax
   14000bdc4:	sysenter 
   14000bdc6:	or     BYTE PTR [rax],al
   14000bdc8:	rsqrtps xmm1,XMMWORD PTR [rbx]
   14000bdcb:	jo     0x14000bdce
   14000bdcd:	or     al,BYTE PTR [rax+rax*1]
   14000bdd0:	or     dh,BYTE PTR [rax+rcx*1]
   14000bdd3:	add    BYTE PTR [rdx],cl
   14000bdd5:	xor    al,BYTE PTR [rsi]
   14000bdd7:	jo     0x14000bdf2
   14000bdd9:	sbb    DWORD PTR [rdx],eax
   14000bddb:	add    BYTE PTR [rdi],al
   14000bddd:	add    DWORD PTR [rbx],ebp
   14000bddf:	add    ah,ch
   14000bde1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000bde2:	add    BYTE PTR [rax],al
   14000bde4:	rex add DWORD PTR [rax],eax
   14000bde7:	add    BYTE PTR [rcx],al
   14000bde9:	(bad)  
   14000bdea:	or     BYTE PTR [rax],al
   14000bdec:	(bad)  
   14000bded:	push   rsp
   14000bdee:	(bad)  
   14000bdef:	add    BYTE PTR [rdi],dl
   14000bdf1:	xor    al,0xd
   14000bdf3:	add    BYTE PTR [rdi],dl
   14000bdf5:	jb     0x14000be0a
   14000bdf7:	loopne 0x14000be0a
   14000bdf9:	jo     0x14000be0b
   14000bdfb:	(bad)  
   14000bdfc:	add    DWORD PTR [rsp+rax*1],edx
   14000bdff:	add    BYTE PTR [rax+rbp*2],dl
   14000be02:	add    al,BYTE PTR [rax]
   14000be04:	(bad)  
   14000be05:	push   rdx
   14000be06:	add    dh,BYTE PTR [rax]
   14000be08:	add    DWORD PTR [rsp+rcx*1],ebx
   14000be0b:	add    BYTE PTR [rsp+riz*2],bl
   14000be0e:	or     al,0x0
   14000be10:	sbb    al,0x54
   14000be12:	or     eax,DWORD PTR [rax]
   14000be14:	sbb    al,0x34
   14000be16:	or     al,BYTE PTR [rax]
   14000be18:	sbb    al,0x32
   14000be1a:	sbb    al,dh
   14000be1c:	(bad)  
   14000be1d:	loopne 0x14000be33
   14000be1f:	rcl    BYTE PTR [rdx],1
   14000be21:	rcl    BYTE PTR [rax],0x70
   14000be24:	add    DWORD PTR [rax+rcx*1],edx
   14000be27:	add    BYTE PTR [rsp+riz*2],dl
   14000be2a:	or     BYTE PTR [rax],al
   14000be2c:	adc    al,0x54
   14000be2e:	(bad)  
   14000be2f:	add    BYTE PTR [rsp+rsi*1],dl
   14000be32:	(bad)  
   14000be33:	add    BYTE PTR [rdx+rsi*1],dl
   14000be36:	adc    BYTE PTR [rax+0x19],dh
   14000be39:	(bad)  
   14000be3a:	or     BYTE PTR [rax],al
   14000be3c:	adc    BYTE PTR [rsi+rcx*1],dh
   14000be3f:	add    BYTE PTR [rax],dl
   14000be41:	push   rdx
   14000be42:	or     al,0xf0
   14000be44:	or     ah,al
   14000be46:	or     BYTE PTR [rax+0x7],dh
   14000be49:	(bad)  
   14000be4a:	(bad)  
   14000be4b:	push   rax
   14000be4c:	in     al,dx
   14000be4d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000be4e:	add    BYTE PTR [rax],al
   14000be50:	sub    BYTE PTR [rax],al
   14000be52:	add    BYTE PTR [rax],al
   14000be54:	add    DWORD PTR [rdi],ecx
   14000be56:	(bad)  
   14000be57:	add    BYTE PTR [rdi],cl
   14000be59:	fs (bad) 
   14000be5b:	add    BYTE PTR [rdi],cl
   14000be5d:	xor    al,0x6
   14000be5f:	add    BYTE PTR [rdi],cl
   14000be61:	xor    cl,BYTE PTR [rbx]
   14000be63:	jo     0x14000be66
   14000be65:	clts   
   14000be67:	add    BYTE PTR [rdi],cl
   14000be69:	or     BYTE PTR fs:[rax],al
   14000be6c:	sysenter 
   14000be6e:	(bad)  
   14000be6f:	add    BYTE PTR [rdi],cl
   14000be71:	xor    cl,BYTE PTR [rbx]
   14000be73:	jo     0x14000be76
   14000be75:	adc    al,0x8
   14000be77:	add    BYTE PTR [rsp+riz*2],dl
   14000be7a:	or     al,BYTE PTR [rax]
   14000be7c:	adc    al,0x54
   14000be7e:	or     DWORD PTR [rax],eax
   14000be80:	adc    al,0x34
   14000be82:	or     BYTE PTR [rax],al
   14000be84:	adc    al,0x52
   14000be86:	adc    BYTE PTR [rax+0x1],dh
   14000be89:	add    al,0x1
   14000be8b:	add    BYTE PTR [rdx+riz*2],al
   14000be8e:	add    BYTE PTR [rax],al
   14000be90:	add    DWORD PTR [rsp+rcx*1],ebx
   14000be93:	add    BYTE PTR [rsp+riz*2],bl
   14000be96:	adc    DWORD PTR [rax],eax
   14000be98:	sbb    al,0x54
   14000be9a:	adc    BYTE PTR [rax],al
   14000be9c:	sbb    al,0x34
   14000be9e:	ltr    WORD PTR [rdx+rsi*2]
   14000bea2:	sbb    al,dh
   14000bea4:	(bad)  
   14000bea5:	loopne 0x14000bebb
   14000bea7:	rcl    BYTE PTR [rdx],1
   14000bea9:	rcl    BYTE PTR [rax],0x70
   14000beac:	add    DWORD PTR [rcx],edx
   14000beae:	(bad)  
   14000beaf:	add    BYTE PTR [rcx],dl
   14000beb1:	movabs ds:0x60087009e00bf00d,al
   14000beba:	(bad)  
   14000bebb:	push   rax
   14000bebc:	(bad)  
   14000bebd:	xor    BYTE PTR [rax],al
   14000bebf:	add    BYTE PTR [rcx],bl
   14000bec1:	xor    BYTE PTR [rax+rax*1],cl
   14000bec4:	and    dh,BYTE PTR [rcx+rbx*1+0x0]
   14000bec8:	and    ah,BYTE PTR [rax+rbx*1+0x0]
   14000becc:	and    dh,BYTE PTR [rdi+rdx*1]
   14000becf:	add    BYTE PTR [rdx],ah
   14000bed1:	repnz sbb al,dh
   14000bed4:	(bad)  
   14000bed5:	loopne 0x14000beeb
   14000bed7:	rcl    BYTE PTR [rdx],1
   14000bed9:	rcl    BYTE PTR [rax],0x50
   14000bedc:	in     al,dx
   14000bedd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000bede:	add    BYTE PTR [rax],al
   14000bee0:	jo     0x14000bee2
   14000bee2:	add    BYTE PTR [rax],al
   14000bee4:	or     DWORD PTR [rsi],eax
   14000bee6:	add    al,BYTE PTR [rax]
   14000bee8:	(bad)  
   14000bee9:	push   rdx
   14000beea:	add    dh,BYTE PTR [rax]
   14000beec:	(bad)  
   14000beed:	movabs ds:0x7156000000010000,eax
   14000bef6:	add    BYTE PTR [rax],al
   14000bef8:	ins    BYTE PTR es:[rdi],dx
   14000bef9:	jno    0x14000befb
   14000befb:	add    BYTE PTR [rcx],al
   14000befd:	add    BYTE PTR [rax],al
   14000beff:	add    BYTE PTR [rsi+0x71],ch
   14000bf02:	add    BYTE PTR [rax],al
   14000bf04:	or     DWORD PTR [rdx],ecx
   14000bf06:	add    al,0x0
   14000bf08:	or     dh,BYTE PTR [rsi+rax*1]
   14000bf0b:	add    BYTE PTR [rdx],cl
   14000bf0d:	xor    al,BYTE PTR [rsi]
   14000bf0f:	jo     0x14000bf17
   14000bf11:	movabs ds:0x721e000000010000,eax
   14000bf1a:	add    BYTE PTR [rax],al
   14000bf1c:	push   rcx
   14000bf1d:	jb     0x14000bf1f
   14000bf1f:	add    BYTE PTR [rcx],al
   14000bf21:	add    BYTE PTR [rax],al
   14000bf23:	add    BYTE PTR [rax+0x72],bl
   14000bf26:	add    BYTE PTR [rax],al
   14000bf28:	add    DWORD PTR [rdx],ecx
   14000bf2a:	add    al,BYTE PTR [rax]
   14000bf2c:	or     dh,BYTE PTR [rdx]
   14000bf2e:	(bad)  
   14000bf2f:	xor    BYTE PTR [rcx],al
   14000bf31:	sbb    BYTE PTR [rdx],cl
   14000bf33:	add    BYTE PTR [rax],bl
   14000bf35:	or     al,BYTE PTR fs:[rax]
   14000bf38:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   14000bf3c:	sbb    BYTE PTR [rax+rcx*1],dh
   14000bf3f:	add    BYTE PTR [rax],bl
   14000bf41:	xor    dl,BYTE PTR [rax+rsi*8]
   14000bf44:	adc    ah,al
   14000bf46:	adc    BYTE PTR [rax+0x1],dh
   14000bf49:	(bad)  
   14000bf4b:	add    BYTE PTR [rdi],cl
   14000bf4d:	xor    al,0x7
   14000bf4f:	add    BYTE PTR [rdi],cl
   14000bf51:	xor    cl,BYTE PTR [rbx]
   14000bf53:	jo     0x14000bf56
   14000bf55:	adc    cl,BYTE PTR [rax]
   14000bf57:	add    BYTE PTR [rdx],dl
   14000bf59:	push   rsp
   14000bf5a:	or     al,BYTE PTR [rax]
   14000bf5c:	adc    dh,BYTE PTR [rcx+rcx*1]
   14000bf5f:	add    BYTE PTR [rdx],dl
   14000bf61:	xor    cl,BYTE PTR [rsi]
   14000bf63:	loopne 0x14000bf71
   14000bf65:	jo     0x14000bf72
   14000bf67:	(bad)  
   14000bf68:	add    DWORD PTR [rdx],ecx
   14000bf6a:	add    al,0x0
   14000bf6c:	or     dh,BYTE PTR [rdi+rax*1]
   14000bf6f:	add    BYTE PTR [rdx],cl
   14000bf71:	xor    al,BYTE PTR [rsi]
   14000bf73:	jo     0x14000bf76
   14000bf75:	or     eax,DWORD PTR [rax+rax*1]
   14000bf78:	or     ebp,DWORD PTR [rax+0x2]
   14000bf7b:	add    BYTE PTR [rsi],al
   14000bf7d:	push   rdx
   14000bf7e:	add    dh,BYTE PTR [rax]
   14000bf80:	add    DWORD PTR [rsi+rax*1],edx
   14000bf83:	add    BYTE PTR [rsp+riz*2],dl
   14000bf86:	or     BYTE PTR [rax],al
   14000bf88:	adc    al,0x34
   14000bf8a:	(bad)  
   14000bf8b:	add    BYTE PTR [rdx+rsi*1],dl
   14000bf8e:	adc    BYTE PTR [rax+0x1],dh
   14000bf91:	sbb    DWORD PTR [rdx],ecx
   14000bf93:	add    BYTE PTR [rcx],bl
   14000bf95:	je     0x14000bfa0
   14000bf97:	add    BYTE PTR [rcx],bl
   14000bf99:	or     BYTE PTR fs:[rax],al
   14000bf9c:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   14000bfa0:	sbb    DWORD PTR [rsi+rax*1],esi
   14000bfa3:	add    BYTE PTR [rcx],bl
   14000bfa5:	xor    dl,BYTE PTR [rip+0xa1b01e0]        # 0x14a1bc18b
   14000bfab:	add    BYTE PTR [rbx],bl
   14000bfad:	je     0x14000bfba
   14000bfaf:	add    BYTE PTR [rbx],bl
   14000bfb1:	or     al,BYTE PTR fs:[rax]
   14000bfb4:	sbb    esi,DWORD PTR [rcx+rcx*1]
   14000bfb7:	add    BYTE PTR [rbx],bl
   14000bfb9:	xor    dl,BYTE PTR [rax+rsi*8]
   14000bfbc:	adc    ah,al
   14000bfbe:	adc    BYTE PTR [rax+0x19],dl
   14000bfc1:	sbb    DWORD PTR [rax+rax*1],eax
   14000bfc4:	or     dh,BYTE PTR [rcx+rdx*1]
   14000bfc7:	add    BYTE PTR [rdx],cl
   14000bfc9:	rol    BYTE PTR [rsi],cl
   14000bfcb:	jo     0x14000bfb9
   14000bfcd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000bfce:	add    BYTE PTR [rax],al
   14000bfd0:	(bad)  
   14000bfd1:	add    BYTE PTR [rax],al
   14000bfd3:	add    BYTE PTR [rcx],bl
   14000bfd5:	sbb    DWORD PTR [rax+rax*1],eax
   14000bfd8:	or     dh,BYTE PTR [rbx+rcx*1]
   14000bfdb:	add    BYTE PTR [rdx],cl
   14000bfdd:	jb     0x14000bfe5
   14000bfdf:	jo     0x14000bfcd
   14000bfe1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000bfe2:	add    BYTE PTR [rax],al
   14000bfe4:	xor    BYTE PTR [rax],al
   14000bfe6:	add    BYTE PTR [rax],al
   14000bfe8:	sbb    DWORD PTR [rdi],esp
   14000bfea:	(bad)  
   14000bfeb:	add    BYTE PTR [rsi],dl
   14000bfed:	add    DWORD PTR [rax+0x1],edx
   14000bff0:	(bad)  
   14000bff1:	loopne 0x14000bff8
   14000bff3:	jo     0x14000bff9
   14000bff5:	(bad)  
   14000bff6:	add    esi,DWORD PTR [rax]
   14000bff8:	add    dl,BYTE PTR [rax+0x0]
   14000bffb:	add    ah,ch
   14000bffd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000bffe:	add    BYTE PTR [rax],al
   14000c000:	jo     0x14000c00c
   14000c002:	add    BYTE PTR [rax],al
   14000c004:	add    DWORD PTR [rax+rcx*1],edx
   14000c007:	add    BYTE PTR [rsp+riz*2],dl
   14000c00a:	(bad)  
   14000c00b:	add    BYTE PTR [rsp+rdx*2],dl
   14000c00e:	or     eax,0xc341400
   14000c013:	add    BYTE PTR [rdx+rdx*4],dl
   14000c016:	adc    BYTE PTR [rax+0x1],dh
   14000c019:	sbb    ecx,DWORD PTR [rdx]
   14000c01b:	add    BYTE PTR [rbx],bl
   14000c01d:	push   rsp
   14000c01e:	adc    eax,DWORD PTR [rax]
   14000c020:	sbb    esi,DWORD PTR [rdx+rdx*1]
   14000c023:	add    BYTE PTR [rbx],bl
   14000c025:	mov    dl,0x17
   14000c027:	loopne 0x14000c03e
   14000c029:	rcl    BYTE PTR [rbx],1
   14000c02b:	rcl    BYTE PTR [rcx],0x70
   14000c02e:	adc    BYTE PTR [rax+0x1],ah
   14000c031:	(bad)  
   14000c032:	or     al,BYTE PTR [rax]
   14000c034:	(bad)  
   14000c035:	xor    al,0x12
   14000c037:	add    BYTE PTR [rdi],dl
   14000c039:	xchg   edx,eax
   14000c03a:	adc    al,dh
   14000c03c:	(bad)  
   14000c03d:	loopne 0x14000c04b
   14000c03f:	ror    BYTE PTR [rdx],1
   14000c041:	ror    BYTE PTR [rax],0x70
   14000c044:	(bad)  
   14000c045:	(bad)  
   14000c046:	(bad)  
   14000c047:	push   rax
   14000c048:	add    DWORD PTR [rsp+rcx*1],ebx
   14000c04b:	add    BYTE PTR [rsp+riz*2],bl
   14000c04e:	(bad)  
   14000c04f:	add    BYTE PTR [rsp+rdx*2],bl
   14000c052:	or     eax,0xc341c00
   14000c057:	add    BYTE PTR [rdx+rdx*2],bl
   14000c05a:	sbb    al,dh
   14000c05c:	(bad)  
   14000c05d:	loopne 0x14000c073
   14000c05f:	rcl    BYTE PTR [rdx],1
   14000c061:	rcl    BYTE PTR [rax],0x70
   14000c064:	add    DWORD PTR [rsi],esi
   14000c066:	(bad)  
   14000c067:	add    BYTE PTR [rsi],dh
   14000c069:	js     0x14000c06f
   14000c06b:	add    BYTE PTR [rsi],ch
   14000c06d:	push   0x34140005
   14000c072:	adc    al,0x0
   14000c074:	adc    al,0xb2
   14000c076:	adc    al,dh
   14000c078:	(bad)  
   14000c079:	loopne 0x14000c087
   14000c07b:	ror    BYTE PTR [rdx],1
   14000c07d:	ror    BYTE PTR [rax],0x70
   14000c080:	(bad)  
   14000c081:	(bad)  
   14000c082:	(bad)  
   14000c083:	push   rax
   14000c084:	add    DWORD PTR [rcx],ebx
   14000c086:	or     al,BYTE PTR [rax]
   14000c088:	sbb    esp,esp
   14000c08a:	or     DWORD PTR [rax],eax
   14000c08c:	sbb    DWORD PTR [rax+rcx*1+0x0],esi
   14000c090:	sbb    DWORD PTR [rdi+rax*1+0x0],esp
   14000c094:	sbb    DWORD PTR [rsi+rax*1+0x0],edx
   14000c098:	sbb    DWORD PTR [rdx],esi
   14000c09a:	adc    eax,0x92201f0
   14000c09f:	add    BYTE PTR [rdx],ah
   14000c0a1:	ret    0xf01b
   14000c0a4:	sbb    eax,esp
   14000c0a6:	(bad)  
   14000c0a7:	rcl    BYTE PTR [rip+0x127013c0],1        # 0x15270d46d
   14000c0ad:	(bad)  
   14000c0ae:	adc    DWORD PTR [rax],esi
   14000c0b0:	adc    BYTE PTR [rax+0x0],dl
   14000c0b3:	add    BYTE PTR [rcx],cl
   14000c0b5:	sbb    DWORD PTR [rdx],ecx
   14000c0b7:	add    BYTE PTR [rcx],bl
   14000c0b9:	(bad)  
   14000c0ba:	or     eax,DWORD PTR [rax]
   14000c0bc:	sbb    DWORD PTR [rdx+rcx*1+0x0],esi
   14000c0c0:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   14000c0c4:	sbb    DWORD PTR [rax+rcx*1],esi
   14000c0c7:	add    BYTE PTR [rcx],bl
   14000c0c9:	push   rdx
   14000c0ca:	adc    eax,0xa306e0
   14000c0cf:	add    BYTE PTR [rcx],al
   14000c0d1:	add    BYTE PTR [rax],al
   14000c0d3:	add    cl,ch
   14000c0d5:	popf   
   14000c0d6:	add    BYTE PTR [rax],al
   14000c0d8:	pop    rdx
   14000c0d9:	lahf   
   14000c0da:	add    BYTE PTR [rax],al
   14000c0dc:	es test eax,0x9f5a0000
   14000c0e2:	add    BYTE PTR [rax],al
   14000c0e4:	add    BYTE PTR [rax],al
   14000c0e6:	add    BYTE PTR [rax],al
   14000c0e8:	add    DWORD PTR [rax],eax
   14000c0ea:	add    BYTE PTR [rax],al
   14000c0ec:	or     DWORD PTR [rcx+rax*1],eax
   14000c0ef:	add    BYTE PTR [rdx+riz*1],al
   14000c0f2:	add    BYTE PTR [rax],al
   14000c0f4:	(bad)  
   14000c0f5:	movabs ds:0xa08c000000010000,eax
   14000c0fe:	add    BYTE PTR [rax],al
   14000c100:	ret    0xa0
   14000c103:	add    BYTE PTR [rcx],al
   14000c105:	add    BYTE PTR [rax],al
   14000c107:	add    dl,al
   14000c109:	movabs al,ds:0x340a00040a090000
   14000c112:	(bad)  
   14000c113:	add    BYTE PTR [rdx],cl
   14000c115:	xor    al,BYTE PTR [rsi]
   14000c117:	jo     0x14000c11f
   14000c119:	movabs ds:0xa19d000000010000,eax
   14000c122:	add    BYTE PTR [rax],al
   14000c124:	shl    BYTE PTR [rcx-0x56b00000],1
   14000c12a:	add    BYTE PTR [rax],al
   14000c12c:	shl    BYTE PTR [rcx+0x6010000],1
   14000c132:	add    al,BYTE PTR [rax]
   14000c134:	(bad)  
   14000c135:	xor    al,BYTE PTR [rdx]
   14000c137:	push   rax
   14000c138:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740dc142
   14000c13e:	or     DWORD PTR [rax],eax
   14000c140:	or     eax,0x1500632
   14000c145:	or     al,0x2
   14000c147:	add    BYTE PTR [rcx+rax*1],cl
   14000c14a:	adc    DWORD PTR [rax],eax
   14000c14c:	add    BYTE PTR [rax],al
   14000c14e:	add    BYTE PTR [rax],al
   14000c150:	add    DWORD PTR [rax],eax
   14000c152:	add    BYTE PTR [rax],al
   14000c154:	add    DWORD PTR [rax],ebx
   14000c156:	add    DWORD PTR [rax],eax
   14000c158:	sbb    dl,al
   14000c15a:	add    BYTE PTR [rax],al
   14000c15c:	add    DWORD PTR [rax],ebx
   14000c15e:	add    DWORD PTR [rax],eax
   14000c160:	sbb    dl,al
   14000c162:	add    BYTE PTR [rax],al
   14000c164:	add    DWORD PTR [rax],ebx
   14000c166:	add    DWORD PTR [rax],eax
   14000c168:	sbb    dl,al
   14000c16a:	add    BYTE PTR [rax],al
   14000c16c:	add    DWORD PTR [rax],ebx
   14000c16e:	add    DWORD PTR [rax],eax
   14000c170:	sbb    dl,al
   14000c172:	add    BYTE PTR [rax],al
   14000c174:	add    BYTE PTR [rax],al
   14000c176:	add    BYTE PTR [rax],al
   14000c178:	add    DWORD PTR [rcx+rax*1],eax
   14000c17b:	add    BYTE PTR [rdx+rdx*1],al
   14000c17e:	add    BYTE PTR [rax],al
   14000c180:	add    DWORD PTR [rax],eax
   14000c182:	add    BYTE PTR [rax],al
   14000c184:	add    BYTE PTR [rbp-0x1a300000],dh
   14000c18a:	add    BYTE PTR [rax],al
   14000c18c:	and    BYTE PTR [rax],al
   14000c18e:	add    DWORD PTR [rax],eax
   14000c190:	rex ret 0x0
   14000c194:	clc    
   14000c195:	ret    0x0
	...
   14000c1a0:	add    DWORD PTR [rax],eax
   14000c1a2:	add    BYTE PTR [rax],al
   14000c1a4:	adc    BYTE PTR [rbp-0x1a280000],dh
   14000c1aa:	add    BYTE PTR [rax],al
   14000c1ac:	xor    BYTE PTR [rax],al
   14000c1ae:	add    DWORD PTR [rax],eax
   14000c1b0:	push   rax
   14000c1b1:	ret    0x0
   14000c1b4:	or     bl,al
	...
   14000c1be:	add    BYTE PTR [rax],al
   14000c1c0:	add    DWORD PTR [rax],eax
   14000c1c2:	add    BYTE PTR [rax],al
   14000c1c4:	and    BYTE PTR [rbp-0x1a200000],dh
   14000c1ca:	add    BYTE PTR [rax],al
   14000c1cc:	add    BYTE PTR [rcx],al
   14000c1cf:	add    BYTE PTR [rax-0x3e],ah
   14000c1d2:	add    BYTE PTR [rax],al
   14000c1d4:	sbb    bl,al
	...
   14000c1de:	add    BYTE PTR [rax],al
   14000c1e0:	add    DWORD PTR [rax],eax
   14000c1e2:	add    BYTE PTR [rax],al
   14000c1e4:	xor    BYTE PTR [rbp-0x1a180000],dh
   14000c1ea:	add    BYTE PTR [rax],al
   14000c1ec:	add    BYTE PTR [rax],al
   14000c1ee:	add    DWORD PTR [rax],eax
   14000c1f0:	and    dl,al
   14000c1f2:	add    BYTE PTR [rax],al
   14000c1f4:	sub    bl,al
	...
   14000c21e:	add    BYTE PTR [rax],al
   14000c220:	scas   al,BYTE PTR es:[rdi]
   14000c221:	ret    0x0
   14000c224:	add    BYTE PTR [rax],al
   14000c226:	add    BYTE PTR [rax],al
   14000c228:	ret    0xc2
   14000c22b:	add    BYTE PTR [rax],al
   14000c22d:	add    BYTE PTR [rax],al
   14000c22f:	add    al,bl
   14000c231:	ret    0x0
	...
   14000c240:	jo     0x14000c204
	...
   14000c24e:	add    BYTE PTR [rax],al
   14000c250:	xchg   dl,al
	...
   14000c25e:	add    BYTE PTR [rax],al
   14000c260:	(bad)  
   14000c261:	ret    0x0
	...
   14000c270:	add    BYTE PTR [rax],al
   14000c272:	push   rbx
   14000c273:	outs   dx,BYTE PTR gs:[rsi]
   14000c275:	fs rex.WRB
   14000c277:	gs jae 0x14000c2ed
   14000c27a:	(bad)  
   14000c27b:	addr32 gs push rsp
   14000c27e:	imul   ebp,DWORD PTR [rbp+0x65],0x5774756f
   14000c285:	add    BYTE PTR [rax],al
   14000c287:	add    BYTE PTR [rsi+0x65],cl
   14000c28a:	je     0x14000c2cd
   14000c28c:	jo     0x14000c2f7
   14000c28e:	rex.X jne 0x14000c2f7
   14000c291:	data16 gs jb 0x14000c2db
   14000c295:	jb     0x14000c2fc
   14000c297:	add    BYTE PTR gs:[rax],al
   14000c29a:	add    BYTE PTR [rax],al
   14000c29c:	rex.WRX
   14000c29d:	gs je  0x14000c2f3
   14000c2a0:	gs jb  0x14000c319
   14000c2a3:	gs jb  0x14000c2ed
   14000c2a6:	gs je  0x14000c2f2
   14000c2a9:	outs   dx,BYTE PTR ds:[rsi]
   14000c2aa:	outs   dx,WORD PTR ds:[rsi]
   14000c2ac:	add    BYTE PTR [rax],al
   14000c2ae:	add    BYTE PTR [rax],al
   14000c2b0:	push   rdi
   14000c2b1:	rex.WRX
   14000c2b2:	gs je  0x14000c2fc
   14000c2b5:	gs je  0x14000c304
   14000c2b8:	(bad)  
   14000c2b9:	jae    0x14000c32f
   14000c2bb:	rex.RB jb 0x14000c330
   14000c2be:	outs   dx,DWORD PTR ds:[rsi]
   14000c2bf:	jb     0x14000c318
   14000c2c1:	add    BYTE PTR [rax],al
   14000c2c3:	add    BYTE PTR [rdi+0x4e],dl
   14000c2c6:	gs je  0x14000c30a
   14000c2c9:	fs rex.XB outs dx,DWORD PTR fs:[rsi]
   14000c2cd:	outs   dx,BYTE PTR ds:[rsi]
   14000c2ce:	outs   dx,BYTE PTR ds:[rsi]
   14000c2cf:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000c2d4:	outs   dx,BYTE PTR ds:[rsi]
   14000c2d5:	xor    dl,BYTE PTR [rdi+0x0]
   14000c2d8:	add    BYTE PTR [rax],al
   14000c2da:	push   rdi
   14000c2db:	rex.WRX
   14000c2dc:	gs je  0x14000c322
   14000c2df:	(bad)  
   14000c2e0:	outs   dx,BYTE PTR ds:[rsi]
   14000c2e1:	movsxd esp,DWORD PTR [rbp+0x6c]
   14000c2e4:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000c2e6:	outs   dx,BYTE PTR ds:[rsi]
   14000c2e7:	outs   dx,BYTE PTR ds:[rsi]
   14000c2e8:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000c2ed:	outs   dx,BYTE PTR ds:[rsi]
   14000c2ee:	xor    dl,BYTE PTR [rdi+0x0]
	...
   14000c345:	add    BYTE PTR [rax],al
   14000c347:	add    BYTE PTR [rax+0xc8],al
	...
   14000c355:	retf   
   14000c356:	add    BYTE PTR [rax],al
   14000c358:	or     BYTE PTR [rbx-0x38800000],dh
	...
   14000c366:	add    BYTE PTR [rax],al
   14000c368:	ss retf 
   14000c36a:	add    BYTE PTR [rax],al
   14000c36c:	or     BYTE PTR [rdx-0x38500000],dh
	...
   14000c37a:	add    BYTE PTR [rax],al
   14000c37c:	retfw  
   14000c37e:	add    BYTE PTR [rax],al
   14000c380:	cmp    BYTE PTR [rdx-0x39d00000],dh
	...
   14000c38e:	add    BYTE PTR [rax],al
   14000c390:	jl     0x14000c35f
   14000c392:	add    BYTE PTR [rax],al
   14000c394:	mov    eax,0xd80000b0
   14000c399:	mov    BYTE PTR [rax],0x0
	...
   14000c3a4:	pushf  
   14000c3a5:	int    0x0
   14000c3a7:	add    BYTE PTR [rax-0x4f],ah
   14000c3aa:	add    BYTE PTR [rax],al
   14000c3ac:	pop    rax
   14000c3ad:	mov    DWORD PTR [rax],0x0
   14000c3b3:	add    BYTE PTR [rax],al
   14000c3b5:	add    BYTE PTR [rax],al
   14000c3b7:	add    ah,al
   14000c3b9:	int    0x0
   14000c3bb:	add    al,ah
   14000c3bd:	mov    cl,0x0
   14000c3bf:	add    BYTE PTR [rax],cl
   14000c3c1:	mov    BYTE PTR [rax],0x0
	...
   14000c3cc:	call   0xd000c49e
   14000c3d1:	mov    al,0x0
   14000c3d3:	add    BYTE PTR [rax-0x3a],ch
	...
   14000c3de:	add    BYTE PTR [rax],al
   14000c3e0:	adc    cl,dh
   14000c3e2:	add    BYTE PTR [rax],al
   14000c3e4:	lock mov al,0x0
   14000c3e7:	add    BYTE PTR [rax-0x3a],bl
	...
   14000c3f2:	add    BYTE PTR [rax],al
   14000c3f4:	xor    cl,dh
   14000c3f6:	add    BYTE PTR [rax],al
   14000c3f8:	loopne 0x14000c3aa
   14000c3fa:	add    BYTE PTR [rax],al
   14000c3fc:	sub    al,cl
	...
   14000c406:	add    BYTE PTR [rax],al
   14000c408:	push   rsp
   14000c409:	(bad)  
   14000c40a:	add    BYTE PTR [rax],al
   14000c40c:	mov    al,0xb2
   14000c40e:	add    BYTE PTR [rax],al
   14000c410:	mov    eax,0xc6
   14000c415:	add    BYTE PTR [rax],al
   14000c417:	add    BYTE PTR [rax],al
   14000c419:	add    BYTE PTR [rax],al
   14000c41b:	add    BYTE PTR [rsi-0x32],dh
   14000c41e:	add    BYTE PTR [rax],al
   14000c420:	mov    cl,0x0
   14000c423:	add    BYTE PTR [rax-0x39],cl
	...
   14000c42e:	add    BYTE PTR [rax],al
   14000c430:	movabs al,ds:0x180000b1d00000ce
   14000c439:	mov    DWORD PTR [rax],0x0
   14000c43f:	add    BYTE PTR [rax],al
   14000c441:	add    BYTE PTR [rax],al
   14000c443:	add    ah,al
   14000c445:	(bad)  
   14000c446:	add    BYTE PTR [rax],al
   14000c448:	movabs al,ds:0xc8380000b1
   14000c451:	add    BYTE PTR [rax],al
   14000c453:	add    BYTE PTR [rax],al
   14000c455:	add    BYTE PTR [rax],al
   14000c457:	add    dh,ch
   14000c459:	(bad)  
   14000c45a:	add    BYTE PTR [rax],al
   14000c45c:	shl    BYTE PTR [rdx-0x38700000],0x0
	...
   14000c46b:	add    BYTE PTR [rdx],dl
   14000c46d:	iret   
   14000c46e:	add    BYTE PTR [rax],al
   14000c470:	sbb    BYTE PTR [rdx-0x3a780000],dh
	...
   14000c47e:	add    BYTE PTR [rax],al
   14000c480:	push   0x100000cf
   14000c485:	mov    al,0x0
   14000c487:	add    BYTE PTR [rax-0x3b],bh
	...
   14000c492:	add    BYTE PTR [rax],al
   14000c494:	xchg   bh,cl
   14000c496:	add    BYTE PTR [rax],al
   14000c498:	add    BYTE PTR [rax-0x37f00000],dh
	...
   14000c4a6:	add    BYTE PTR [rax],al
   14000c4a8:	rol    BYTE PTR ds:[rax],1
   14000c4ab:	add    BYTE PTR [rax-0x7ffff4e],bl
   14000c4b1:	mov    BYTE PTR [rax],0x0
	...
   14000c4bc:	jl     0x14000c48e
   14000c4be:	add    BYTE PTR [rax],al
   14000c4c0:	xor    BYTE PTR [rcx-0x39580000],0x0
	...
   14000c4cf:	add    dh,dl
   14000c4d1:	rol    BYTE PTR [rax],cl
   14000c4d3:	add    BYTE PTR [rax],dh
   14000c4d5:	mov    cl,0x0
   14000c4d7:	add    al,ah
   14000c4d9:	mov    DWORD PTR [rax],0x0
   14000c4df:	add    BYTE PTR [rax],al
   14000c4e1:	add    BYTE PTR [rax],al
   14000c4e3:	add    dh,dh
   14000c4e5:	rol    BYTE PTR [rax],cl
   14000c4e7:	add    BYTE PTR [rax-0x4e],ch
   14000c4ea:	add    BYTE PTR [rax],al
   14000c4ec:	rol    ch,0x0
	...
   14000c4f7:	add    BYTE PTR [rax],bl
   14000c4f9:	rol    DWORD PTR [rax],cl
   14000c4fb:	add    BYTE PTR [rax-0x50],cl
   14000c4fe:	add    BYTE PTR [rax],al
   14000c500:	or     bh,al
	...
   14000c50a:	add    BYTE PTR [rax],al
   14000c50c:	cmp    al,0xd3
   14000c50e:	add    BYTE PTR [rax],al
   14000c510:	nop
   14000c511:	mov    cl,0x0
   14000c513:	add    BYTE PTR [rax-0x38],ah
	...
   14000c51e:	add    BYTE PTR [rax],al
   14000c520:	push   0xffffffffffffffd3
   14000c522:	add    BYTE PTR [rax],al
   14000c524:	call   0x14000c5db
   14000c529:	enter  0x0,0x0
   14000c52d:	add    BYTE PTR [rax],al
   14000c52f:	add    BYTE PTR [rax],al
   14000c531:	add    BYTE PTR [rax],al
   14000c533:	add    BYTE PTR [rsi-0x77ffff2d],cl
   14000c539:	mov    dl,0x0
   14000c53b:	add    al,dh
   14000c53d:	(bad)
	...
   14000c548:	mov    al,0xd3
   14000c54a:	add    BYTE PTR [rax],al
   14000c54c:	js     0x14000c4fe
   14000c54e:	add    BYTE PTR [rax],al
   14000c550:	mov    eax,0xc9
   14000c555:	add    BYTE PTR [rax],al
   14000c557:	add    BYTE PTR [rax],al
   14000c559:	add    BYTE PTR [rax],al
   14000c55b:	add    dh,ch
   14000c55d:	rol    DWORD PTR [rax],cl
   14000c55f:	add    BYTE PTR [rax-0x4c],al
	...
   14000c576:	add    BYTE PTR [rax],al
   14000c578:	je     0x14000c549
	...
   14000c586:	add    BYTE PTR [rax],al
   14000c588:	cmp    bh,cl
   14000c58a:	add    BYTE PTR [rax],al
   14000c58c:	add    BYTE PTR [rax],al
   14000c58e:	add    BYTE PTR [rax],al
   14000c590:	pop    rax
   14000c591:	iret   
   14000c592:	add    BYTE PTR [rax],al
   14000c594:	add    BYTE PTR [rax],al
   14000c596:	add    BYTE PTR [rax],al
   14000c598:	iretq  
   14000c59a:	add    BYTE PTR [rax],al
   14000c59c:	add    BYTE PTR [rax],al
   14000c59e:	add    BYTE PTR [rax],al
   14000c5a0:	outs   dx,DWORD PTR ds:[rsi]
   14000c5a1:	add    BYTE PTR [rax],al
   14000c5a3:	add    BYTE PTR [rax],al
   14000c5a5:	add    BYTE PTR [rax],al
   14000c5a7:	xor    BYTE PTR [rbx+0x0],0x0
   14000c5ab:	add    BYTE PTR [rax],al
   14000c5ad:	add    BYTE PTR [rax],al
   14000c5af:	xor    BYTE PTR [rax+rax*1+0x0],0x0
   14000c5b4:	add    BYTE PTR [rax],al
   14000c5b6:	add    BYTE PTR [rax+0x0],al
   14000c5bc:	add    BYTE PTR [rax],al
   14000c5be:	add    BYTE PTR [rax],al
   14000c5c0:	js     0x14000c593
   14000c5c2:	add    BYTE PTR [rax],al
   14000c5c4:	add    BYTE PTR [rax],al
   14000c5c6:	add    BYTE PTR [rax],al
   14000c5c8:	pop    rdx
   14000c5c9:	rol    DWORD PTR [rax],1
   14000c5cb:	add    BYTE PTR [rax],al
   14000c5cd:	add    BYTE PTR [rax],al
   14000c5cf:	add    BYTE PTR [rcx+rdx*8],dl
   14000c5d2:	add    BYTE PTR [rax],al
   14000c5d4:	add    BYTE PTR [rax],al
   14000c5d6:	add    BYTE PTR [rax],al
   14000c5d8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c5d9:	rol    DWORD PTR [rax],1
   14000c5db:	add    BYTE PTR [rax],al
   14000c5dd:	add    BYTE PTR [rax],al
   14000c5df:	add    dl,al
   14000c5e1:	rol    DWORD PTR [rax],1
	...
   14000c5ef:	add    BYTE PTR [rsi+0xd2],ah
   14000c5f5:	add    BYTE PTR [rax],al
   14000c5f7:	add    BYTE PTR [rsi+0xd2],bh
	...
   14000c605:	add    BYTE PTR [rax],al
   14000c607:	add    BYTE PTR [rsp+rcx*8+0x0],dl
   14000c60b:	add    BYTE PTR [rax],al
   14000c60d:	add    BYTE PTR [rax],al
   14000c60f:	add    al,bl
   14000c611:	retf   
   14000c612:	add    BYTE PTR [rax],al
   14000c614:	add    BYTE PTR [rax],al
   14000c616:	add    BYTE PTR [rax],al
   14000c618:	call   0x14000c6e8
   14000c61d:	add    BYTE PTR [rax],al
   14000c61f:	add    BYTE PTR [rax],bh
   14000c621:	int    0x0
	...
   14000c62f:	add    dl,cl
   14000c631:	retf   
   14000c632:	add    BYTE PTR [rax],al
   14000c634:	add    BYTE PTR [rax],al
   14000c636:	add    BYTE PTR [rax],al
   14000c638:	mov    dh,0xd1
   14000c63a:	add    BYTE PTR [rax],al
   14000c63c:	add    BYTE PTR [rax],al
   14000c63e:	add    BYTE PTR [rax],al
   14000c640:	(bad)  
   14000c641:	rol    DWORD PTR [rax],1
   14000c643:	add    BYTE PTR [rax],al
   14000c645:	add    BYTE PTR [rax],al
   14000c647:	add    BYTE PTR [rdx+0xcb],dl
	...
   14000c655:	add    BYTE PTR [rax],al
   14000c657:	add    BYTE PTR [rsi],bl
   14000c659:	int3   
	...
   14000c666:	add    BYTE PTR [rax],al
   14000c668:	rcl    cl,cl
   14000c66a:	add    BYTE PTR [rax],al
   14000c66c:	add    BYTE PTR [rax],al
   14000c66e:	add    BYTE PTR [rax],al
   14000c670:	in     al,0xd1
   14000c672:	add    BYTE PTR [rax],al
   14000c674:	add    BYTE PTR [rax],al
   14000c676:	add    BYTE PTR [rax],al
   14000c678:	lock rol DWORD PTR [rax],1
   14000c67b:	add    BYTE PTR [rax],al
   14000c67d:	add    BYTE PTR [rax],al
   14000c67f:	add    BYTE PTR [rax],al
   14000c681:	rol    BYTE PTR [rax],cl
   14000c683:	add    BYTE PTR [rax],al
   14000c685:	add    BYTE PTR [rax],al
   14000c687:	add    BYTE PTR [rdx+rdx*8],cl
   14000c68a:	add    BYTE PTR [rax],al
   14000c68c:	add    BYTE PTR [rax],al
   14000c68e:	add    BYTE PTR [rax],al
   14000c690:	sbb    dl,dl
   14000c692:	add    BYTE PTR [rax],al
   14000c694:	add    BYTE PTR [rax],al
   14000c696:	add    BYTE PTR [rax],al
   14000c698:	or     ah,cl
	...
   14000c6a6:	add    BYTE PTR [rax],al
   14000c6a8:	rcl    al,0x0
	...
   14000c6b7:	add    dl,ah
   14000c6b9:	rol    BYTE PTR [rax],1
   14000c6bb:	add    BYTE PTR [rax],al
   14000c6bd:	add    BYTE PTR [rax],al
   14000c6bf:	add    BYTE PTR [rdx+rdx*8],bh
   14000c6c2:	add    BYTE PTR [rax],al
   14000c6c4:	add    BYTE PTR [rax],al
   14000c6c6:	add    BYTE PTR [rax],al
   14000c6c8:	jb     0x14000c696
	...
   14000c6d6:	add    BYTE PTR [rax],al
   14000c6d8:	rol    QWORD PTR [rax],1
   14000c6db:	add    BYTE PTR [rax],al
   14000c6dd:	add    BYTE PTR [rax],al
   14000c6df:	add    BYTE PTR [rax+0xcb],ah
   14000c6e5:	add    BYTE PTR [rax],al
   14000c6e7:	add    BYTE PTR [rsi+0xd0],ch
	...
   14000c6f5:	add    BYTE PTR [rax],al
   14000c6f7:	add    BYTE PTR [rdx-0x30],ch
	...
   14000c706:	add    BYTE PTR [rax],al
   14000c708:	rol    DWORD PTR es:[rax],1
	...
   14000c717:	add    BYTE PTR [rax+0xcc],ah
   14000c71d:	add    BYTE PTR [rax],al
   14000c71f:	add    BYTE PTR [rdx-0x2f],ch
   14000c722:	add    BYTE PTR [rax],al
   14000c724:	add    BYTE PTR [rax],al
   14000c726:	add    BYTE PTR [rax],al
   14000c728:	push   0xcd
   14000c72d:	add    BYTE PTR [rax],al
   14000c72f:	add    BYTE PTR [rbp+rcx*8+0x0],dl
   14000c733:	add    BYTE PTR [rax],al
   14000c735:	add    BYTE PTR [rax],al
   14000c737:	add    BYTE PTR [rsi+0xcc],dh
	...
   14000c745:	add    BYTE PTR [rax],al
   14000c747:	add    BYTE PTR [rsi+0xcc],al
	...
   14000c755:	add    BYTE PTR [rax],al
   14000c757:	add    BYTE PTR [rsi+0xcb],dh
   14000c75d:	add    BYTE PTR [rax],al
   14000c75f:	add    BYTE PTR [rdx],bh
   14000c761:	int3   
   14000c762:	add    BYTE PTR [rax],al
   14000c764:	add    BYTE PTR [rax],al
   14000c766:	add    BYTE PTR [rax],al
   14000c768:	sub    al,0xcc
   14000c76a:	add    BYTE PTR [rax],al
   14000c76c:	add    BYTE PTR [rax],al
   14000c76e:	add    BYTE PTR [rax],al
   14000c770:	clc    
   14000c771:	retf   
	...
   14000c77e:	add    BYTE PTR [rax],al
   14000c780:	and    bl,cl
	...
   14000c78e:	add    BYTE PTR [rax],al
   14000c790:	test   ah,0x0
   14000c793:	add    BYTE PTR [rax],al
   14000c795:	add    BYTE PTR [rax],al
   14000c797:	add    BYTE PTR [rcx*8+0x0],ah
   14000c79e:	add    BYTE PTR [rax],al
   14000c7a0:	or     cl,ch
	...
   14000c7ae:	add    BYTE PTR [rax],al
   14000c7b0:	(bad)  
   14000c7b1:	rol    BYTE PTR [rax],1
   14000c7b3:	add    BYTE PTR [rax],al
   14000c7b5:	add    BYTE PTR [rax],al
   14000c7b7:	add    BYTE PTR [rax],dl
   14000c7b9:	rol    BYTE PTR [rax],1
   14000c7bb:	add    BYTE PTR [rax],al
   14000c7bd:	add    BYTE PTR [rax],al
   14000c7bf:	add    BYTE PTR [rax+rdx*8],bl
   14000c7c2:	add    BYTE PTR [rax],al
   14000c7c4:	add    BYTE PTR [rax],al
   14000c7c6:	add    BYTE PTR [rax],al
   14000c7c8:	pop    rdx
   14000c7c9:	retf   
   14000c7ca:	add    BYTE PTR [rax],al
   14000c7cc:	add    BYTE PTR [rax],al
   14000c7ce:	add    BYTE PTR [rax],al
   14000c7d0:	cli    
   14000c7d1:	iret   
	...
   14000c7de:	add    BYTE PTR [rax],al
   14000c7e0:	rol    DWORD PTR ss:[rax],1
   14000c7e3:	add    BYTE PTR [rax],al
   14000c7e5:	add    BYTE PTR [rax],al
   14000c7e7:	add    al,dh
   14000c7e9:	rol    BYTE PTR [rax],1
   14000c7eb:	add    BYTE PTR [rax],al
   14000c7ed:	add    BYTE PTR [rax],al
   14000c7ef:	add    BYTE PTR [rsi+0xd1],cl
	...
   14000c7fd:	add    BYTE PTR [rax],al
   14000c7ff:	add    BYTE PTR [rax+0xd2],bl
	...
   14000c80d:	add    BYTE PTR [rax],al
   14000c80f:	add    BYTE PTR [rdx],dh
   14000c811:	rol    BYTE PTR [rax],1
   14000c813:	add    BYTE PTR [rax],al
   14000c815:	add    BYTE PTR [rax],al
   14000c817:	add    BYTE PTR [rsi],ah
   14000c819:	rol    BYTE PTR [rax],1
	...
   14000c827:	add    BYTE PTR [rsp+rcx*8+0x0],cl
	...
   14000c837:	add    ah,cl
   14000c839:	int3   
   14000c83a:	add    BYTE PTR [rax],al
   14000c83c:	add    BYTE PTR [rax],al
   14000c83e:	add    BYTE PTR [rax],al
   14000c840:	rol    BYTE PTR es:[rax],cl
   14000c843:	add    BYTE PTR [rax],al
   14000c845:	add    BYTE PTR [rax],al
   14000c847:	add    dh,ah
   14000c849:	int3   
   14000c84a:	add    BYTE PTR [rax],al
   14000c84c:	add    BYTE PTR [rax],al
   14000c84e:	add    BYTE PTR [rax],al
   14000c850:	int3   
   14000c851:	rol    BYTE PTR [rax],1
	...
   14000c85f:	add    BYTE PTR [rsi+0xd2],al
   14000c865:	add    BYTE PTR [rax],al
   14000c867:	add    BYTE PTR [rsi-0x2e],ch
   14000c86a:	add    BYTE PTR [rax],al
   14000c86c:	add    BYTE PTR [rax],al
   14000c86e:	add    BYTE PTR [rax],al
   14000c870:	push   rdx
   14000c871:	rol    BYTE PTR [rax],cl
	...
   14000c87f:	add    BYTE PTR [rax],bl
   14000c881:	retf   0x0
   14000c884:	add    BYTE PTR [rax],al
   14000c886:	add    BYTE PTR [rax],al
   14000c888:	(bad)  
   14000c889:	retf   0x0
   14000c88c:	add    BYTE PTR [rax],al
   14000c88e:	add    BYTE PTR [rax],al
   14000c890:	add    al,0xca
   14000c892:	add    BYTE PTR [rax],al
   14000c894:	add    BYTE PTR [rax],al
   14000c896:	add    BYTE PTR [rax],al
   14000c898:	enter  0xc9,0x0
   14000c89c:	add    BYTE PTR [rax],al
   14000c89e:	add    BYTE PTR [rax],al
   14000c8a0:	cli    
   14000c8a1:	leave  
   14000c8a2:	add    BYTE PTR [rax],al
   14000c8a4:	add    BYTE PTR [rax],al
   14000c8a6:	add    BYTE PTR [rax],al
   14000c8a8:	in     al,0xc9
   14000c8aa:	add    BYTE PTR [rax],al
   14000c8ac:	add    BYTE PTR [rax],al
   14000c8ae:	add    BYTE PTR [rax],al
   14000c8b0:	fmul   st(1),st
   14000c8b2:	add    BYTE PTR [rax],al
   14000c8b4:	add    BYTE PTR [rax],al
   14000c8b6:	add    BYTE PTR [rax],al
   14000c8b8:	or     al,0xcb
   14000c8ba:	add    BYTE PTR [rax],al
   14000c8bc:	add    BYTE PTR [rax],al
   14000c8be:	add    BYTE PTR [rax],al
   14000c8c0:	hlt    
   14000c8c1:	retf   0x0
   14000c8c4:	add    BYTE PTR [rax],al
   14000c8c6:	add    BYTE PTR [rax],al
   14000c8c8:	(bad)  
   14000c8c9:	retf   0x0
   14000c8cc:	add    BYTE PTR [rax],al
   14000c8ce:	add    BYTE PTR [rax],al
   14000c8d0:	ror    dl,cl
   14000c8d2:	add    BYTE PTR [rax],al
   14000c8d4:	add    BYTE PTR [rax],al
   14000c8d6:	add    BYTE PTR [rax],al
   14000c8d8:	(bad)  
   14000c8d9:	retf   0x0
   14000c8dc:	add    BYTE PTR [rax],al
   14000c8de:	add    BYTE PTR [rax],al
   14000c8e0:	mov    dl,0xca
   14000c8e2:	add    BYTE PTR [rax],al
   14000c8e4:	add    BYTE PTR [rax],al
   14000c8e6:	add    BYTE PTR [rax],al
   14000c8e8:	test   al,0xca
   14000c8ea:	add    BYTE PTR [rax],al
   14000c8ec:	add    BYTE PTR [rax],al
   14000c8ee:	add    BYTE PTR [rax],al
   14000c8f0:	movabs al,ds:0xd2000000000000ca
   14000c8f9:	leave  
   14000c8fa:	add    BYTE PTR [rax],al
   14000c8fc:	add    BYTE PTR [rax],al
   14000c8fe:	add    BYTE PTR [rax],al
   14000c900:	xchg   edx,eax
   14000c901:	iret   
   14000c902:	add    BYTE PTR [rax],al
   14000c904:	add    BYTE PTR [rax],al
   14000c906:	add    BYTE PTR [rax],al
   14000c908:	movabs al,ds:0xac000000000000cf
   14000c911:	iret   
   14000c912:	add    BYTE PTR [rax],al
   14000c914:	add    BYTE PTR [rax],al
   14000c916:	add    BYTE PTR [rax],al
   14000c918:	lock iret 
   14000c91a:	add    BYTE PTR [rax],al
   14000c91c:	add    BYTE PTR [rax],al
   14000c91e:	add    BYTE PTR [rax],al
   14000c920:	mov    cs,edx
   14000c922:	add    BYTE PTR [rax],al
   14000c924:	add    BYTE PTR [rax],al
   14000c926:	add    BYTE PTR [rax],al
   14000c928:	out    0xcf,al
   14000c92a:	add    BYTE PTR [rax],al
   14000c92c:	add    BYTE PTR [rax],al
   14000c92e:	add    BYTE PTR [rax],al
   14000c930:	(bad)  
   14000c931:	iret   
   14000c932:	add    BYTE PTR [rax],al
   14000c934:	add    BYTE PTR [rax],al
   14000c936:	add    BYTE PTR [rax],al
   14000c938:	retf   0xcf
   14000c93b:	add    BYTE PTR [rax],al
   14000c93d:	add    BYTE PTR [rax],al
   14000c93f:	add    BYTE PTR [rdx+rcx*8+0x0],bh
   14000c943:	add    BYTE PTR [rax],al
   14000c945:	add    BYTE PTR [rax],al
   14000c947:	add    BYTE PTR [rsi-0x36],ch
   14000c94a:	add    BYTE PTR [rax],al
   14000c94c:	add    BYTE PTR [rax],al
   14000c94e:	add    BYTE PTR [rax],al
   14000c950:	(bad)  
   14000c951:	retf   0x0
   14000c954:	add    BYTE PTR [rax],al
   14000c956:	add    BYTE PTR [rax],al
   14000c958:	pop    rax
   14000c959:	retf   0x0
   14000c95c:	add    BYTE PTR [rax],al
   14000c95e:	add    BYTE PTR [rax],al
   14000c960:	rex.WRX retf 0x0
   14000c964:	add    BYTE PTR [rax],al
   14000c966:	add    BYTE PTR [rax],al
   14000c968:	rex.R retf 0x0
   14000c96c:	add    BYTE PTR [rax],al
   14000c96e:	add    BYTE PTR [rax],al
   14000c970:	cmp    al,0xca
   14000c972:	add    BYTE PTR [rax],al
   14000c974:	add    BYTE PTR [rax],al
   14000c976:	add    BYTE PTR [rax],al
   14000c978:	cs retf 0x0
   14000c97c:	add    BYTE PTR [rax],al
   14000c97e:	add    BYTE PTR [rax],al
   14000c980:	ror    bh,0x0
   14000c983:	add    BYTE PTR [rax],al
   14000c985:	add    BYTE PTR [rax],al
   14000c987:	add    BYTE PTR [rsi+0xcf],dh
   14000c98d:	add    BYTE PTR [rax],al
   14000c98f:	add    al,dh
   14000c991:	leave  
   14000c992:	add    BYTE PTR [rax],al
   14000c994:	add    BYTE PTR [rax],al
   14000c996:	add    BYTE PTR [rax],al
   14000c998:	and    cl,dl
   14000c99a:	add    BYTE PTR [rax],al
   14000c99c:	add    BYTE PTR [rax],al
   14000c99e:	add    BYTE PTR [rax],al
   14000c9a0:	clc    
   14000c9a1:	rol    DWORD PTR [rax],cl
   14000c9a3:	add    BYTE PTR [rax],al
   14000c9a5:	add    BYTE PTR [rax],al
   14000c9a7:	add    BYTE PTR [rdx],al
   14000c9a9:	(bad)  
	...
   14000c9b6:	add    BYTE PTR [rax],al
   14000c9b8:	(bad)  
   14000c9b9:	rol    DWORD PTR [rax],cl
	...
   14000c9c7:	add    BYTE PTR [rcx],al
   14000c9c9:	add    eax,0x63736377
   14000c9ce:	push   0xffffffff94000072
   14000c9d3:	add    al,0x6d
   14000c9d5:	gs ins DWORD PTR es:[rdi],dx
   14000c9d7:	ins    DWORD PTR es:[rdi],dx
   14000c9d8:	outs   dx,DWORD PTR ds:[rsi]
   14000c9d9:	jbe    0x14000ca40
   14000c9db:	add    BYTE PTR [rip+0x74775f04],al        # 0x1b47828e5
   14000c9e1:	outs   dx,DWORD PTR ds:[rsi]
   14000c9e2:	imul   eax,DWORD PTR [rax],0x775f0398
   14000c9e8:	movsxd esi,DWORD PTR [rbx+0x6e]
   14000c9eb:	jae    0x14000ca52
   14000c9ed:	je     0x14000c9ef
   14000c9ef:	add    BYTE PTR [rax+0x6d656d04],dl
   14000c9f5:	movsxd ebp,DWORD PTR [rax+0x72]
   14000c9f8:	add    BYTE PTR [rax],al
   14000c9fa:	ret    
   14000c9fb:	add    ebx,DWORD PTR [rdi+0x77]
   14000c9fe:	outs   dx,WORD PTR ds:[rsi]
   14000ca00:	jo     0x14000ca67
   14000ca02:	outs   dx,BYTE PTR ds:[rsi]
   14000ca03:	add    BYTE PTR [rax],bl
   14000ca05:	add    eax,0x74736377
   14000ca0a:	outs   dx,DWORD PTR ds:[rsi]
   14000ca0b:	ins    BYTE PTR es:[rdi],dx
   14000ca0c:	add    BYTE PTR [rax],al
   14000ca0e:	ds add al,0x66
   14000ca11:	addr32 gs je 0x14000ca8c
   14000ca15:	jae    0x14000ca17
   14000ca17:	add    BYTE PTR [rax*1+0x73736377],dl
   14000ca1e:	je     0x14000ca92
   14000ca20:	add    BYTE PTR [rax],al
   14000ca22:	jb     0x14000ca28
   14000ca24:	imul   esi,DWORD PTR [rbx+0x77],0x70797463
   14000ca2b:	add    BYTE PTR gs:[rax],al
   14000ca2e:	imul   eax,DWORD PTR [rbx],0x6e73765f
   14000ca34:	ja     0x14000caa6
   14000ca36:	jb     0x14000caa1
   14000ca38:	outs   dx,BYTE PTR ds:[rsi]
   14000ca39:	je     0x14000caa1
   14000ca3b:	add    BYTE PTR [rdx+0x4],dl
   14000ca3e:	data16 jae 0x14000caa6
   14000ca41:	imul   eax,DWORD PTR gs:[rax],0x16
   14000ca45:	add    eax,0x74736377
   14000ca4a:	outs   dx,DWORD PTR ds:[rsi]
   14000ca4b:	imul   eax,DWORD PTR [rax],0x0
   14000ca4e:	ss add al,0x66
   14000ca51:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
   14000ca55:	add    BYTE PTR gs:[rax],al
   14000ca58:	xor    al,BYTE PTR [riz*2+0x746978]
   14000ca5f:	add    BYTE PTR [rbp+0x0],dl
   14000ca62:	pop    rdi
   14000ca63:	pop    rax
   14000ca64:	movsxd esi,DWORD PTR [rax+0x74]
   14000ca67:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   14000ca70:	pop    rdi
   14000ca71:	(bad)  
   14000ca72:	ins    DWORD PTR es:[rdi],dx
   14000ca73:	jae    0x14000cadc
   14000ca75:	pop    rdi
   14000ca76:	gs js  0x14000cae2
   14000ca79:	je     0x14000ca7b
   14000ca7b:	add    BYTE PTR [rbp+0x775f5f00],bl
   14000ca81:	addr32 gs je 0x14000caf2
   14000ca85:	(bad)  
   14000ca86:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   14000ca8d:	add    BYTE PTR [rsi+0x735f5f00],cl
   14000ca93:	gs je  0x14000caf5
   14000ca96:	(bad)  
   14000ca97:	jo     0x14000cb09
   14000ca99:	pop    rdi
   14000ca9a:	je     0x14000cb15
   14000ca9c:	jo     0x14000cb03
   14000ca9e:	add    BYTE PTR [rax],al
   14000caa0:	(bad)  
   14000caa1:	add    DWORD PTR [rdi+0x65],ebx
   14000caa4:	js     0x14000cb0f
   14000caa6:	je     0x14000caa8
   14000caa8:	rol    DWORD PTR [rax],0x5f
   14000caab:	movsxd esp,DWORD PTR [rbp+0x78]
   14000caae:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   14000cab6:	jae    0x14000cb1d
   14000cab8:	je     0x14000cb2f
   14000caba:	jae    0x14000cb21
   14000cabc:	jb     0x14000cb2b
   14000cabe:	(bad)  
   14000cabf:	je     0x14000cb29
   14000cac1:	gs jb  0x14000cb36
   14000cac4:	add    BYTE PTR [rax],al
   14000cac6:	jge    0x14000cac9
   14000cac8:	pop    rdi
   14000cac9:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   14000cad0:	ins    DWORD PTR es:[rdi],dx
   14000cad1:	add    BYTE PTR [rdi+0x0],dl
   14000cad4:	pop    rdi
   14000cad5:	pop    rdi
   14000cad6:	rex.XB pop r15
   14000cad8:	jae    0x14000cb4a
   14000cada:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14000cade:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   14000cae5:	ins    BYTE PTR es:[rdi],dx
   14000cae6:	gs jb  0x14000cae9
   14000cae9:	add    BYTE PTR [rdi],ah
   14000caeb:	add    DWORD PTR [rdi+0x66],ebx
   14000caee:	ins    DWORD PTR es:[rdi],dx
   14000caef:	outs   dx,DWORD PTR ds:[rsi]
   14000caf0:	fs add BYTE PTR gs:[rax],al
   14000caf4:	rol    BYTE PTR [rax],cl
   14000caf6:	pop    rdi
   14000caf7:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000cafa:	ins    DWORD PTR es:[rdi],dx
   14000cafb:	outs   dx,DWORD PTR ds:[rsi]
   14000cafc:	fs add BYTE PTR gs:[rax],al
   14000cb00:	ins    DWORD PTR es:[rdi],dx
   14000cb01:	jae    0x14000cb79
   14000cb03:	movsxd esi,DWORD PTR [rdx+0x74]
   14000cb06:	cs fs ins BYTE PTR es:[rdi],dx
   14000cb09:	ins    BYTE PTR es:[rdi],dx
   14000cb0a:	add    BYTE PTR [rax],al
   14000cb0c:	(bad)  
   14000cb0d:	add    BYTE PTR [rdi],bh
   14000cb0f:	je     0x14000cb76
   14000cb11:	jb     0x14000cb80
   14000cb13:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   14000cb1a:	pop    rcx
   14000cb1b:	pop    r8
   14000cb1d:	pop    rax
   14000cb1e:	pop    rdx
   14000cb1f:	add    BYTE PTR [rcx],al
   14000cb21:	add    BYTE PTR [rdx+0x65],dl
   14000cb24:	rex.XB outs dx,DWORD PTR ds:[esi]
   14000cb27:	outs   dx,BYTE PTR ds:[rsi]
   14000cb28:	outs   dx,BYTE PTR ds:[rsi]
   14000cb29:	movsxd esi,DWORD PTR gs:[rdx+rdx*2+0x65]
   14000cb2e:	imul   esi,DWORD PTR [ebx+0x74],0x577972
   14000cb36:	(bad)  
   14000cb37:	jo     0x14000cba2
   14000cb39:	sub    eax,0x772d736d
   14000cb3e:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000cb45:	sub    eax,0x69676572
   14000cb4a:	jae    0x14000cbc0
   14000cb4c:	jb     0x14000cbc7
   14000cb4e:	sub    eax,0x322d326c
   14000cb53:	sub    eax,0x6c642e30
   14000cb58:	ins    BYTE PTR es:[rdi],dx
   14000cb59:	add    BYTE PTR [rbx],bh
   14000cb5b:	add    BYTE PTR [rbx+0x74],dl
   14000cb5e:	jb     0x14000cbb4
   14000cb60:	jb     0x14000cbcb
   14000cb62:	ins    DWORD PTR es:[rdi],dx
   14000cb63:	push   rdi
   14000cb64:	add    BYTE PTR [rax],al
   14000cb66:	(bad)  
   14000cb67:	jo     0x14000cbd2
   14000cb69:	sub    eax,0x772d736d
   14000cb6e:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000cb75:	sub    eax,0x776c6873
   14000cb7a:	(bad)  
   14000cb7b:	jo     0x14000cbe6
   14000cb7d:	sub    eax,0x6f73626f
   14000cb82:	ins    BYTE PTR es:[rdi],dx
   14000cb83:	gs je  0x14000cbeb
   14000cb86:	sub    eax,0x322d316c
   14000cb8b:	sub    eax,0x6c642e30
   14000cb90:	ins    BYTE PTR es:[rdi],dx
   14000cb91:	add    BYTE PTR [rax+rax*1],ch
   14000cb94:	rex.RXB
   14000cb95:	gs je  0x14000cbde
   14000cb98:	imul   ebp,DWORD PTR [rbp+riz*2+0x53],0x657a69
   14000cba0:	cmp    al,BYTE PTR [rax]
   14000cba2:	push   rbx
   14000cba3:	gs je  0x14000cbfa
   14000cba6:	push   0x64616572
   14000cbab:	push   rbp
   14000cbac:	rex.WB
   14000cbad:	rex.WR (bad) 
   14000cbaf:	outs   dx,BYTE PTR ds:[rsi]
   14000cbb0:	addr32 jne 0x14000cc14
   14000cbb3:	add    BYTE PTR gs:[ebx],ah
   14000cbb7:	add    BYTE PTR [rdx+0x65],dl
   14000cbba:	addr32 push rcx
   14000cbbc:	jne    0x14000cc23
   14000cbbe:	jb     0x14000cc39
   14000cbc0:	push   rsi
   14000cbc1:	(bad)  
   14000cbc2:	ins    BYTE PTR es:[rdi],dx
   14000cbc3:	jne    0x14000cc2a
   14000cbc5:	rex.RB js 0x14000cc1f
   14000cbc8:	add    BYTE PTR [rax],al
   14000cbca:	(bad)  
   14000cbcb:	add    BYTE PTR [rbx+0x72],al
   14000cbce:	gs (bad) 
   14000cbd0:	je     0x14000cc37
   14000cbd2:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x47000500
   14000cbdb:	gs je  0x14000cc2a
   14000cbde:	(bad)  
   14000cbdf:	jae    0x14000cc55
   14000cbe1:	rex.RB jb 0x14000cc56
   14000cbe4:	outs   dx,DWORD PTR ds:[rsi]
   14000cbe5:	jb     0x14000cbe7
   14000cbe7:	add    BYTE PTR [rip+0x74655300],cl        # 0x1b4661eed
   14000cbed:	rex.WR (bad) 
   14000cbef:	jae    0x14000cc65
   14000cbf1:	rex.RB jb 0x14000cc66
   14000cbf4:	outs   dx,DWORD PTR ds:[rsi]
   14000cbf5:	jb     0x14000cbf7
   14000cbf7:	add    BYTE PTR [rsi],bl
   14000cbf9:	add    BYTE PTR [rdx+0x65],dl
   14000cbfc:	addr32 rex.WRXB jo 0x14000cc65
   14000cc00:	outs   dx,BYTE PTR ds:[rsi]
   14000cc01:	rex.WXB
   14000cc02:	gs jns 0x14000cc4a
   14000cc05:	js     0x14000cc5e
   14000cc07:	add    BYTE PTR [rdx],cl
   14000cc09:	add    BYTE PTR [rax+0x65],cl
   14000cc0c:	(bad)  
   14000cc0d:	jo     0x14000cc62
   14000cc0f:	gs je  0x14000cc5b
   14000cc12:	outs   dx,BYTE PTR ds:[rsi]
   14000cc13:	outs   dx,WORD PTR ds:[rsi]
   14000cc15:	jb     0x14000cc84
   14000cc17:	(bad)  
   14000cc18:	je     0x14000cc83
   14000cc1a:	outs   dx,DWORD PTR ds:[rsi]
   14000cc1b:	outs   dx,BYTE PTR ds:[rsi]
   14000cc1c:	add    BYTE PTR [rax],al
   14000cc1e:	add    BYTE PTR [rax],al
   14000cc20:	rex.XB ins BYTE PTR es:[rdi],dx
   14000cc22:	outs   dx,DWORD PTR ds:[rsi]
   14000cc23:	jae    0x14000cc8a
   14000cc25:	rex.W (bad) 
   14000cc27:	outs   dx,BYTE PTR ds:[rsi]
   14000cc28:	fs ins BYTE PTR es:[rdi],dx
   14000cc2a:	add    BYTE PTR gs:[rax],al
   14000cc2d:	add    BYTE PTR [rdx+0x65],dl
   14000cc30:	rex.XB ins BYTE PTR es:[edi],dx
   14000cc33:	outs   dx,DWORD PTR ds:[rsi]
   14000cc34:	jae    0x14000cc9b
   14000cc36:	rex.WXB
   14000cc37:	gs jns 0x14000cc3a
   14000cc3a:	sub    al,0x0
   14000cc3c:	push   rdx
   14000cc3d:	gs addr32 push rbx
   14000cc40:	gs je  0x14000cc99
   14000cc43:	(bad)  
   14000cc44:	ins    BYTE PTR es:[rdi],dx
   14000cc45:	jne    0x14000ccac
   14000cc47:	rex.RB js 0x14000cca1
   14000cc4a:	add    BYTE PTR [rax],al
   14000cc4c:	sub    eax,0x656c5300
   14000cc51:	gs jo  0x14000cc54
   14000cc54:	lldt   WORD PTR [rbx+0x65]
   14000cc58:	je     0x14000ccaf
   14000cc5a:	outs   dx,BYTE PTR ds:[rsi]
   14000cc5b:	push   0x6c646e61
   14000cc60:	gs fs rex.RB js 0x14000ccc8
   14000cc65:	gs jo  0x14000ccdc
   14000cc68:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000cc6f:	gs jb  0x14000cc72
   14000cc72:	adc    eax,DWORD PTR [rax]
   14000cc74:	rex.RXB
   14000cc75:	gs je  0x14000ccc5
   14000cc78:	outs   dx,DWORD PTR ds:[rsi]
   14000cc79:	fs jne 0x14000cce8
   14000cc7c:	gs rex.W (bad) 
   14000cc7f:	outs   dx,BYTE PTR ds:[rsi]
   14000cc80:	fs ins BYTE PTR es:[rdi],dx
   14000cc82:	gs push rdi
   14000cc84:	add    BYTE PTR [rax],al
   14000cc86:	add    BYTE PTR [rax],al
   14000cc88:	push   rcx
   14000cc89:	jne    0x14000ccf0
   14000cc8b:	jb     0x14000cd06
   14000cc8d:	push   rax
   14000cc8e:	gs jb  0x14000ccf7
   14000cc91:	outs   dx,DWORD PTR ds:[rsi]
   14000cc92:	jb     0x14000cd01
   14000cc94:	(bad)  
   14000cc95:	outs   dx,BYTE PTR ds:[rsi]
   14000cc96:	movsxd esp,DWORD PTR [rbp+0x43]
   14000cc99:	outs   dx,DWORD PTR ds:[rsi]
   14000cc9a:	jne    0x14000cd0a
   14000cc9c:	je     0x14000cd03
   14000cc9e:	jb     0x14000cca0
   14000cca0:	or     eax,0x74654700
   14000cca5:	rex.XB jne 0x14000cd1a
   14000cca8:	jb     0x14000cd0f
   14000ccaa:	outs   dx,BYTE PTR ds:[rsi]
   14000ccab:	je     0x14000ccfd
   14000ccad:	jb     0x14000cd1e
   14000ccaf:	movsxd esp,DWORD PTR [rbp+0x73]
   14000ccb2:	jae    0x14000ccfd
   14000ccb4:	add    BYTE PTR fs:[rcx],dl
   14000ccb7:	add    BYTE PTR [rdi+0x65],al
   14000ccba:	je     0x14000ccff
   14000ccbc:	jne    0x14000cd30
   14000ccbe:	jb     0x14000cd25
   14000ccc0:	outs   dx,BYTE PTR ds:[rsi]
   14000ccc1:	je     0x14000cd17
   14000ccc3:	push   0x64616572
   14000ccc8:	rex.WB
   14000ccc9:	add    BYTE PTR fs:[rax],al
   14000cccc:	adc    al,0x0
   14000ccce:	rex.RXB
   14000cccf:	gs je  0x14000cd25
   14000ccd2:	jns    0x14000cd47
   14000ccd4:	je     0x14000cd3b
   14000ccd6:	ins    DWORD PTR es:[rdi],dx
   14000ccd7:	push   rsp
   14000ccd8:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14000ccdf:	ins    BYTE PTR es:[rdi],dx
   14000cce0:	gs push rsp
   14000cce2:	imul   ebp,DWORD PTR [rbp+0x65],0x47001800
   14000cce9:	gs je  0x14000cd40
   14000ccec:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   14000ccf3:	je     0x14000ccf5
   14000ccf5:	add    BYTE PTR [rdx],al
   14000ccf7:	add    BYTE PTR [rdx+0x74],dl
   14000ccfa:	ins    BYTE PTR es:[rdi],dx
   14000ccfb:	rex.XB (bad) 
   14000ccfd:	jo     0x14000cd73
   14000ccff:	jne    0x14000cd73
   14000cd01:	rex.XB outs dx,DWORD PTR gs:[rsi]
   14000cd04:	outs   dx,BYTE PTR ds:[rsi]
   14000cd05:	je     0x14000cd6c
   14000cd07:	js     0x14000cd7d
   14000cd09:	add    BYTE PTR [rcx],cl
   14000cd0b:	add    BYTE PTR [rdx+0x74],dl
   14000cd0e:	ins    BYTE PTR es:[rdi],dx
   14000cd0f:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000cd11:	outs   dx,DWORD PTR ds:[rsi]
   14000cd12:	imul   esi,DWORD PTR [rbp+0x70],0x46
   14000cd16:	jne    0x14000cd86
   14000cd18:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000cd1c:	outs   dx,BYTE PTR ds:[rsi]
   14000cd1d:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000cd1f:	je     0x14000cd93
   14000cd21:	jns    0x14000cd23
   14000cd23:	add    BYTE PTR [rdi],cl
   14000cd25:	add    BYTE PTR [rdx+0x74],dl
   14000cd28:	ins    BYTE PTR es:[rdi],dx
   14000cd29:	push   rsi
   14000cd2a:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   14000cd31:	outs   dx,BYTE PTR ds:[rsi]
   14000cd32:	ja     0x14000cd9d
   14000cd34:	outs   dx,BYTE PTR ds:[rsi]
   14000cd35:	add    BYTE PTR fs:[rax],al
   14000cd38:	adc    DWORD PTR [rax],eax
   14000cd3a:	push   rbp
   14000cd3b:	outs   dx,BYTE PTR ds:[rsi]
   14000cd3c:	push   0x6c646e61
   14000cd41:	gs fs rex.RB js 0x14000cda9
   14000cd46:	gs jo  0x14000cdbd
   14000cd49:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000cd50:	gs jb  0x14000cd53
   14000cd53:	add    BYTE PTR [rax+rax*1],cl
   14000cd56:	rex.RXB
   14000cd57:	gs je  0x14000cd9d
   14000cd5a:	jne    0x14000cdce
   14000cd5c:	jb     0x14000cdc3
   14000cd5e:	outs   dx,BYTE PTR ds:[rsi]
   14000cd5f:	je     0x14000cdb1
   14000cd61:	jb     0x14000cdd2
   14000cd63:	movsxd esp,DWORD PTR [rbp+0x73]
   14000cd66:	jae    0x14000cd68
   14000cd68:	rex.WXB add BYTE PTR [r13+r12*2+0x72],dl
   14000cd6d:	ins    DWORD PTR es:[rdi],dx
   14000cd6e:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   14000cd75:	outs   dx,DWORD PTR ds:[rsi]
   14000cd76:	movsxd esp,DWORD PTR [rbp+0x73]
   14000cd79:	jae    0x14000cd7b
   14000cd7b:	add    BYTE PTR [rcx+0x70],ah
   14000cd7e:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e40f5
   14000cd88:	outs   dx,DWORD PTR ds:[rsi]
   14000cd89:	jb     0x14000cdf0
   14000cd8b:	sub    eax,0x656c6966
   14000cd90:	sub    eax,0x322d316c
   14000cd95:	sub    eax,0x6c642e31
   14000cd9a:	ins    BYTE PTR es:[rdi],dx
   14000cd9b:	add    BYTE PTR [rcx+0x70],ah
   14000cd9e:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e4115
   14000cda8:	outs   dx,DWORD PTR ds:[rsi]
   14000cda9:	jb     0x14000ce10
   14000cdab:	sub    eax,0x61636f6c
   14000cdb0:	ins    BYTE PTR es:[rdi],dx
   14000cdb1:	imul   edi,DWORD PTR [rdx+0x61],0x6e6f6974
   14000cdb8:	sub    eax,0x322d316c
   14000cdbd:	sub    eax,0x6c642e31
   14000cdc2:	ins    BYTE PTR es:[rdi],dx
   14000cdc3:	add    BYTE PTR [rcx+0x70],ah
   14000cdc6:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e413d
   14000cdd0:	outs   dx,DWORD PTR ds:[rsi]
   14000cdd1:	jb     0x14000ce38
   14000cdd3:	sub    eax,0x69676572
   14000cdd8:	jae    0x14000ce4e
   14000cdda:	jb     0x14000ce55
   14000cddc:	sub    eax,0x312d316c
   14000cde1:	sub    eax,0x6c642e30
   14000cde6:	ins    BYTE PTR es:[rdi],dx
   14000cde7:	add    BYTE PTR [rcx+0x70],ah
   14000cdea:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e4161
   14000cdf4:	outs   dx,DWORD PTR ds:[rsi]
   14000cdf5:	jb     0x14000ce5c
   14000cdf7:	sub    eax,0x6f727265
   14000cdfc:	jb     0x14000ce66
   14000cdfe:	(bad)  
   14000cdff:	outs   dx,BYTE PTR ds:[rsi]
   14000ce00:	fs ins BYTE PTR es:[rdi],dx
   14000ce02:	imul   ebp,DWORD PTR [rsi+0x67],0x2d316c2d
   14000ce09:	xor    DWORD PTR [rip+0x6c642e31],ebp        # 0x1ac64fc40
   14000ce0f:	ins    BYTE PTR es:[rdi],dx
   14000ce10:	add    BYTE PTR [rax],al
   14000ce12:	(bad)  
   14000ce13:	jo     0x14000ce7e
   14000ce15:	sub    eax,0x772d736d
   14000ce1a:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000ce21:	sub    eax,0x70616568
   14000ce26:	sub    eax,0x322d316c
   14000ce2b:	sub    eax,0x6c642e30
   14000ce30:	ins    BYTE PTR es:[rdi],dx
   14000ce31:	add    BYTE PTR [rcx+0x70],ah
   14000ce34:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e41ab
   14000ce3e:	outs   dx,DWORD PTR ds:[rsi]
   14000ce3f:	jb     0x14000cea6
   14000ce41:	sub    eax,0x646e6168
   14000ce46:	ins    BYTE PTR es:[rdi],dx
   14000ce47:	gs sub eax,0x312d316c
   14000ce4d:	sub    eax,0x6c642e30
   14000ce52:	ins    BYTE PTR es:[rdi],dx
   14000ce53:	add    BYTE PTR [rcx+0x70],ah
   14000ce56:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e41cd
   14000ce60:	outs   dx,DWORD PTR ds:[rsi]
   14000ce61:	jb     0x14000cec8
   14000ce63:	sub    eax,0x636e7973
   14000ce68:	push   0x2d316c2d
   14000ce6d:	xor    ch,BYTE PTR [rip+0x6c642e30]        # 0x1ac64fca3
   14000ce73:	ins    BYTE PTR es:[rdi],dx
   14000ce74:	add    BYTE PTR [rax],al
   14000ce76:	(bad)  
   14000ce77:	jo     0x14000cee2
   14000ce79:	sub    eax,0x772d736d
   14000ce7e:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000ce85:	sub    eax,0x7262696c
   14000ce8a:	(bad)  
   14000ce8b:	jb     0x14000cf06
   14000ce8d:	ins    BYTE PTR es:[rdi],dx
   14000ce8e:	outs   dx,DWORD PTR ds:[rsi]
   14000ce8f:	(bad)  
   14000ce90:	fs gs jb 0x14000cec1
   14000ce94:	ins    BYTE PTR es:[rdi],dx
   14000ce95:	xor    DWORD PTR [rip+0x2e302d32],ebp        # 0x16e30fbcd
   14000ce9b:	fs ins BYTE PTR es:[rdi],dx
   14000ce9d:	ins    BYTE PTR es:[rdi],dx
   14000ce9e:	add    BYTE PTR [rax],al
   14000cea0:	(bad)  
   14000cea1:	jo     0x14000cf0c
   14000cea3:	sub    eax,0x772d736d
   14000cea8:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000ceaf:	sub    eax,0x666f7270
   14000ceb4:	imul   ebp,DWORD PTR [rbp+riz*2+0x2d],0x312d316c
   14000cebc:	sub    eax,0x6c642e30
   14000cec1:	ins    BYTE PTR es:[rdi],dx
   14000cec2:	add    BYTE PTR [rax],al
   14000cec4:	(bad)  
   14000cec5:	jo     0x14000cf30
   14000cec7:	sub    eax,0x772d736d
   14000cecc:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000ced3:	sub    eax,0x636f7270
   14000ced8:	gs jae 0x14000cf4e
   14000cedb:	je     0x14000cf45
   14000cedd:	jb     0x14000cf44
   14000cedf:	(bad)  
   14000cee0:	fs jae 0x14000cf10
   14000cee3:	ins    BYTE PTR es:[rdi],dx
   14000cee4:	xor    DWORD PTR [rip+0x2e322d31],ebp        # 0x16e32fc1b
   14000ceea:	fs ins BYTE PTR es:[rdi],dx
   14000ceec:	ins    BYTE PTR es:[rdi],dx
   14000ceed:	add    BYTE PTR [rcx+0x70],ah
   14000cef0:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e4267
   14000cefa:	outs   dx,DWORD PTR ds:[rsi]
   14000cefb:	jb     0x14000cf62
   14000cefd:	sub    eax,0x69737973
   14000cf02:	outs   dx,BYTE PTR ds:[rsi]
   14000cf03:	outs   dx,WORD PTR ds:[rsi]
   14000cf05:	sub    eax,0x322d316c
   14000cf0a:	sub    eax,0x6c642e31
   14000cf0f:	ins    BYTE PTR es:[rdi],dx
   14000cf10:	add    BYTE PTR [rax],al
   14000cf12:	(bad)  
   14000cf13:	jo     0x14000cf7e
   14000cf15:	sub    eax,0x772d736d
   14000cf1a:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000cf21:	sub    eax,0x736c7472
   14000cf26:	jne    0x14000cf98
   14000cf28:	jo     0x14000cf99
   14000cf2a:	jb     0x14000cfa0
   14000cf2c:	sub    eax,0x322d316c
   14000cf31:	sub    eax,0x6c642e30
   14000cf36:	ins    BYTE PTR es:[rdi],dx
   14000cf37:	add    BYTE PTR [rdi],al
   14000cf39:	add    BYTE PTR [rdi+0x65],al
   14000cf3c:	je     0x14000cf7f
   14000cf3e:	fs fs jb 0x14000cf8b
   14000cf42:	outs   dx,BYTE PTR ds:[rsi]
   14000cf43:	outs   dx,WORD PTR ds:[rsi]
   14000cf45:	push   rdi
   14000cf46:	add    BYTE PTR [rax],al
   14000cf48:	or     DWORD PTR [rax],eax
   14000cf4a:	rex.RXB
   14000cf4b:	gs je  0x14000cf9c
   14000cf4e:	(bad)  
   14000cf4f:	ins    DWORD PTR es:[rdi],dx
   14000cf50:	rex.WB outs dx,BYTE PTR gs:[rsi]
   14000cf53:	outs   dx,WORD PTR ds:[rsi]
   14000cf55:	push   rdi
   14000cf56:	add    BYTE PTR [rax],al
   14000cf58:	add    al,BYTE PTR [rax]
   14000cf5a:	rex.RX jb 0x14000cfc2
   14000cf5d:	gs rex.B
   14000cf5f:	fs fs jb 0x14000cfac
   14000cf63:	outs   dx,BYTE PTR ds:[rsi]
   14000cf64:	outs   dx,WORD PTR ds:[rsi]
   14000cf66:	push   rdi
   14000cf67:	add    BYTE PTR [rdi+0x53],dl
   14000cf6a:	xor    bl,BYTE PTR [rdi+0x33]
   14000cf6d:	xor    ch,BYTE PTR [rsi]
   14000cf6f:	fs ins BYTE PTR es:[rdi],dx
   14000cf71:	ins    BYTE PTR es:[rdi],dx
   14000cf72:	add    BYTE PTR [rax],al
   14000cf74:	sbb    DWORD PTR [rax],eax
   14000cf76:	rex.RXB
   14000cf77:	gs je  0x14000cfcf
   14000cf7a:	jae    0x14000cfe1
   14000cf7c:	jb     0x14000cfcc
   14000cf7e:	(bad)  
   14000cf7f:	ins    DWORD PTR es:[rdi],dx
   14000cf80:	gs rex.RB js 0x14000cfdb
   14000cf84:	add    BYTE PTR [rax],al
   14000cf86:	push   rbx
   14000cf87:	jae    0x14000cff9
   14000cf89:	imul   eax,DWORD PTR [rbx+0x6c],0x6c642e69
   14000cf90:	ins    BYTE PTR es:[rdi],dx
   14000cf91:	add    BYTE PTR [rcx+0x695f5f00],al
   14000cf97:	outs   dx,DWORD PTR ds:[rsi]
   14000cf98:	(bad)  
   14000cf99:	pop    rdi
   14000cf9a:	data16 jne 0x14000d00b
   14000cf9d:	movsxd eax,DWORD PTR [rax]
   14000cf9f:	add    BYTE PTR [rdx+0x656d5f02],al
   14000cfa5:	ins    DWORD PTR es:[rdi],dx
   14000cfa6:	imul   esp,DWORD PTR [rbx+0x6d],0x5000070
   14000cfad:	add    DWORD PTR [rdi+0x65],ebx
   14000cfb0:	jb     0x14000d024
   14000cfb2:	outs   dx,BYTE PTR ds:[rsi]
   14000cfb3:	outs   dx,DWORD PTR ds:[rsi]
   14000cfb4:	add    BYTE PTR [rax],al
   14000cfb6:	adc    eax,0x73637705
   14000cfbb:	je     0x14000d02c
   14000cfbd:	add    BYTE PTR fs:[rax],al
   14000cfc0:	sbb    eax,DWORD PTR [rip+0x74736377]        # 0x1b474333d
   14000cfc6:	outs   dx,DWORD PTR ds:[rsi]
   14000cfc7:	jne    0x14000d035
   14000cfc9:	add    BYTE PTR [rbx],bl
   14000cfcb:	add    DWORD PTR [rdi+0x66],ebx
   14000cfce:	imul   ebp,DWORD PTR [rbp+riz*2+0x6e],0x155006f
   14000cfd6:	pop    rdi
   14000cfd7:	addr32 gs je 0x14000d03a
   14000cfdb:	outs   dx,DWORD PTR ds:[rsi]
   14000cfdc:	jae    0x14000d044
   14000cfde:	push   0x6c646e61
   14000cfe3:	add    BYTE PTR gs:[rax],al
   14000cfe6:	rex.RB add al,0x66
   14000cfe9:	jo     0x14000d05d
   14000cfeb:	imul   ebp,DWORD PTR [rsi+0x74],0x4390066
   14000cff2:	data16 data16 ins BYTE PTR es:[rdi],dx
   14000cff5:	jne    0x14000d06a
   14000cff7:	push   0xa0000
   14000cffc:	push   rbx
   14000cffd:	je     0x14000d071
   14000cfff:	rex.XB push 0x574972
   14000d005:	add    BYTE PTR [rip+0x72745300],cl        # 0x1b275230b
   14000d00b:	rex.XB push 0x30005772
   14000d011:	add    BYTE PTR [rbx+0x74],dl
   14000d014:	jb     0x14000d069
   14000d016:	je     0x14000d08a
   14000d018:	rex.WB push r15
   14000d01a:	add    BYTE PTR [rax],al
   14000d01c:	xor    eax,DWORD PTR [rax]
   14000d01e:	push   rbx
   14000d01f:	je     0x14000d093
   14000d021:	push   rbx
   14000d022:	je     0x14000d096
   14000d024:	push   rdi
   14000d025:	add    BYTE PTR [rdx],cl
   14000d027:	add    BYTE PTR [rbx+rsi*2+0x74],ch
   14000d02b:	jb     0x14000d099
   14000d02d:	outs   dx,BYTE PTR gs:[rsi]
   14000d02f:	add    BYTE PTR [r8],al
   14000d032:	or     eax,DWORD PTR [rax]
   14000d034:	ins    BYTE PTR es:[rdi],dx
   14000d035:	jae    0x14000d0ab
   14000d037:	jb     0x14000d0a5
   14000d039:	outs   dx,BYTE PTR gs:[rsi]
   14000d03b:	push   rdi
   14000d03c:	add    BYTE PTR [rax],al
   14000d03e:	(bad)  
   14000d03f:	jo     0x14000d0aa
   14000d041:	sub    eax,0x772d736d
   14000d046:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000d04d:	sub    eax,0x69727473
   14000d052:	outs   dx,BYTE PTR ds:[rsi]
   14000d053:	addr32 sub eax,0x6f73626f
   14000d059:	ins    BYTE PTR es:[rdi],dx
   14000d05a:	gs je  0x14000d0c2
   14000d05d:	sub    eax,0x312d316c
   14000d062:	sub    eax,0x6c642e30
   14000d067:	ins    BYTE PTR es:[rdi],dx
   14000d068:	add    BYTE PTR [rax],al
   14000d06a:	add    BYTE PTR [rax],al
   14000d06c:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000d06e:	ins    DWORD PTR es:[rdi],dx
   14000d06f:	jo     0x14000d0d2
   14000d071:	jb     0x14000d0d8
   14000d073:	push   rbx
   14000d074:	je     0x14000d0e8
   14000d076:	imul   ebp,DWORD PTR [rsi+0x67],0x61000041
   14000d07d:	jo     0x14000d0e8
   14000d07f:	sub    eax,0x772d736d
   14000d084:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000d08b:	sub    eax,0x61636f6c
   14000d090:	ins    BYTE PTR es:[rdi],dx
   14000d091:	imul   edi,DWORD PTR [rdx+0x61],0x6e6f6974
   14000d098:	sub    eax,0x6f73626f
   14000d09d:	ins    BYTE PTR es:[rdi],dx
   14000d09e:	gs je  0x14000d106
   14000d0a1:	sub    eax,0x332d316c
   14000d0a6:	sub    eax,0x6c642e30
   14000d0ab:	ins    BYTE PTR es:[rdi],dx
   14000d0ac:	add    BYTE PTR [rax],al
   14000d0ae:	or     BYTE PTR [rax],al
   14000d0b0:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14000d0b2:	jb     0x14000d121
   14000d0b4:	(bad)  
   14000d0b5:	je     0x14000d104
   14000d0b7:	gs jae 0x14000d12d
   14000d0ba:	(bad)  
   14000d0bb:	addr32 gs push rdi
   14000d0be:	add    BYTE PTR [rax],al
   14000d0c0:	add    eax,DWORD PTR [rax]
   14000d0c2:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000d0c4:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000d0c7:	rex.RX jb 0x14000d12f
   14000d0ca:	add    BYTE PTR gs:[rcx],ch
   14000d0cd:	add    BYTE PTR [rsi+0x65],dl
   14000d0d0:	jb     0x14000d125
   14000d0d2:	gs je  0x14000d118
   14000d0d5:	outs   dx,DWORD PTR ds:[rsi]
   14000d0d6:	outs   dx,BYTE PTR ds:[rsi]
   14000d0d7:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x73614d6e
   14000d0e0:	imul   eax,DWORD PTR [rax],0x1b
   14000d0e3:	add    BYTE PTR [rdi+rbp*2+0x61],cl
   14000d0e7:	fs push rbx
   14000d0e9:	je     0x14000d15d
   14000d0eb:	imul   ebp,DWORD PTR [rsi+0x67],0x70057
   14000d0f2:	push   rdi
   14000d0f3:	imul   esp,DWORD PTR [rbp+riz*2+0x43],0x54726168
   14000d0fb:	outs   dx,DWORD PTR ds:[rsi]
   14000d0fc:	rex.WRB jne 0x14000d16b
   14000d0ff:	je     0x14000d16a
   14000d101:	rex.X jns 0x14000d178
   14000d104:	add    BYTE PTR gs:[rdi],ch
   14000d107:	add    BYTE PTR [rdi+0x65],al
   14000d10a:	je     0x14000d152
   14000d10c:	imul   ebp,DWORD PTR [rbp+riz*2+0x54],0x657079
   14000d114:	add    al,BYTE PTR [rax]
   14000d116:	rex.RXB
   14000d117:	gs je  0x14000d15d
   14000d11a:	outs   dx,DWORD PTR ds:[rsi]
   14000d11b:	outs   dx,BYTE PTR ds:[rsi]
   14000d11c:	jae    0x14000d18d
   14000d11e:	ins    BYTE PTR es:[rdi],dx
   14000d11f:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   14000d122:	fs add BYTE PTR gs:[rax],al
   14000d126:	or     al,0x0
   14000d128:	rex.RXB
   14000d129:	gs je  0x14000d17f
   14000d12c:	je     0x14000d192
   14000d12e:	rex.W (bad) 
   14000d130:	outs   dx,BYTE PTR ds:[rsi]
   14000d131:	fs ins BYTE PTR es:[rdi],dx
   14000d133:	add    BYTE PTR gs:[rax],al
   14000d136:	add    al,BYTE PTR [rax]
   14000d138:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000d13a:	ins    DWORD PTR es:[rdi],dx
   14000d13b:	jo     0x14000d19e
   14000d13d:	jb     0x14000d1a4
   14000d13f:	push   rbx
   14000d140:	je     0x14000d1b4
   14000d142:	imul   ebp,DWORD PTR [rsi+0x67],0x1c000057
   14000d149:	add    BYTE PTR [rdi+0x65],al
   14000d14c:	je     0x14000d1a2
   14000d14e:	push   0x64616572
   14000d153:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000d155:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000d158:	add    BYTE PTR gs:[rip+0x69725700],cl        # 0x1a973285f
   14000d15f:	je     0x14000d1c6
   14000d161:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000d163:	outs   dx,BYTE PTR ds:[rsi]
   14000d164:	jae    0x14000d1d5
   14000d166:	ins    BYTE PTR es:[rdi],dx
   14000d167:	gs push rdi
   14000d169:	add    BYTE PTR [rax],cl
   14000d16b:	add    BYTE PTR [rbp+0x78],al
   14000d16e:	imul   esi,DWORD PTR [rax+rdx*2+0x72],0x7365636f
   14000d176:	jae    0x14000d178
   14000d178:	add    eax,DWORD PTR [rax]
   14000d17a:	rex.RXB
   14000d17b:	gs je  0x14000d1c1
   14000d17e:	outs   dx,DWORD PTR ds:[rsi]
   14000d17f:	outs   dx,BYTE PTR ds:[rsi]
   14000d180:	jae    0x14000d1f1
   14000d182:	ins    BYTE PTR es:[rdi],dx
   14000d183:	gs rex.WRXB jne 0x14000d1fb
   14000d187:	jo     0x14000d1fe
   14000d189:	je     0x14000d1ce
   14000d18b:	push   rax
   14000d18c:	add    BYTE PTR [rax],al
   14000d18e:	(bad)  
   14000d18f:	add    BYTE PTR [rbp+0x75],cl
   14000d192:	ins    BYTE PTR es:[rdi],dx
   14000d193:	je     0x14000d1fe
   14000d195:	rex.X jns 0x14000d20c
   14000d198:	gs push rsp
   14000d19a:	outs   dx,DWORD PTR ds:[rsi]
   14000d19b:	push   rdi
   14000d19c:	imul   esp,DWORD PTR [rbp+riz*2+0x43],0x726168
   14000d1a4:	or     eax,DWORD PTR [rax]
   14000d1a6:	push   rbx
   14000d1a7:	gs je  0x14000d1ed
   14000d1aa:	outs   dx,DWORD PTR ds:[rsi]
   14000d1ab:	outs   dx,BYTE PTR ds:[rsi]
   14000d1ac:	jae    0x14000d21d
   14000d1ae:	ins    BYTE PTR es:[rdi],dx
   14000d1af:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   14000d1b2:	fs add BYTE PTR gs:[rax],al
   14000d1b6:	rex.RXB add BYTE PTR [r10+0x65],r10b
   14000d1ba:	(bad)  
   14000d1bb:	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x0],0x52000900
   14000d1c5:	gs (bad) 
   14000d1c7:	rex.XB outs dx,DWORD PTR fs:[rsi]
   14000d1ca:	outs   dx,BYTE PTR ds:[rsi]
   14000d1cb:	jae    0x14000d23c
   14000d1cd:	ins    BYTE PTR es:[rdi],dx
   14000d1ce:	gs push rdi
   14000d1d0:	add    BYTE PTR [rax],al
   14000d1d2:	add    BYTE PTR [rax],al
   14000d1d4:	rex.RXB
   14000d1d5:	gs je  0x14000d228
   14000d1d8:	jb     0x14000d249
   14000d1da:	movsxd esp,DWORD PTR [rbp+0x73]
   14000d1dd:	jae    0x14000d227
   14000d1df:	gs (bad) 
   14000d1e1:	jo     0x14000d1e3
   14000d1e3:	add    BYTE PTR [rsi],al
   14000d1e5:	add    BYTE PTR [rax+0x65],cl
   14000d1e8:	(bad)  
   14000d1e9:	jo     0x14000d231
   14000d1eb:	jb     0x14000d252
   14000d1ed:	add    BYTE PTR gs:[rax],al
   14000d1f0:	or     eax,0x61654800
   14000d1f5:	jo     0x14000d24d
   14000d1f7:	(bad)  
   14000d1f8:	ins    BYTE PTR es:[rdi],dx
   14000d1f9:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x2000065
   14000d201:	add    BYTE PTR [rax+0x65],cl
   14000d204:	(bad)  
   14000d205:	jo     0x14000d248
   14000d207:	ins    BYTE PTR es:[rdi],dx
   14000d208:	ins    BYTE PTR es:[rdi],dx
   14000d209:	outs   dx,DWORD PTR ds:[rsi]
   14000d20a:	movsxd eax,DWORD PTR [rax]
   14000d20c:	or     DWORD PTR [rax],eax
   14000d20e:	rex.W
   14000d20f:	gs (bad) 
   14000d211:	jo     0x14000d265
   14000d213:	gs rex.B ins BYTE PTR es:[rdi],dx
   14000d216:	ins    BYTE PTR es:[rdi],dx
   14000d217:	outs   dx,DWORD PTR ds:[rsi]
   14000d218:	movsxd eax,DWORD PTR [rax]
   14000d21a:	or     eax,DWORD PTR [rax]
   14000d21c:	rex.W
   14000d21d:	gs (bad) 
   14000d21f:	jo     0x14000d274
   14000d221:	imul   edi,DWORD PTR [rdx+0x65],0x30000
   14000d228:	rex.RXB
   14000d229:	gs je  0x14000d26f
   14000d22c:	outs   dx,DWORD PTR ds:[rsi]
   14000d22d:	ins    DWORD PTR es:[rdi],dx
   14000d22e:	jo     0x14000d2a5
   14000d230:	je     0x14000d297
   14000d232:	jb     0x14000d282
   14000d234:	(bad)  
   14000d235:	ins    DWORD PTR es:[rdi],dx
   14000d236:	gs rex.RB js 0x14000d291
   14000d23a:	add    BYTE PTR [rax],al
   14000d23c:	sldt   WORD PTR [rdi+0x65]
   14000d240:	je     0x14000d28f
   14000d242:	outs   dx,DWORD PTR ds:[rsi]
   14000d243:	fs jne 0x14000d2b2
   14000d246:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x57656d61
   14000d250:	add    BYTE PTR [rax],al
   14000d252:	add    DWORD PTR [rax],eax
   14000d254:	rex.RXB
   14000d255:	gs je  0x14000d29e
   14000d258:	imul   ebp,DWORD PTR [rbp+riz*2+0x56],0x69737265
   14000d260:	outs   dx,DWORD PTR ds:[rsi]
   14000d261:	outs   dx,BYTE PTR ds:[rsi]
   14000d262:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000d264:	outs   dx,WORD PTR ds:[rsi]
   14000d266:	push   rbx
   14000d267:	imul   edi,DWORD PTR [rdx+0x65],0x577845
   14000d26e:	add    BYTE PTR [rax],al
   14000d270:	rex.RXB
   14000d271:	gs je  0x14000d2ba
   14000d274:	imul   ebp,DWORD PTR [rbp+riz*2+0x56],0x69737265
   14000d27c:	outs   dx,DWORD PTR ds:[rsi]
   14000d27d:	outs   dx,BYTE PTR ds:[rsi]
   14000d27e:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000d280:	outs   dx,WORD PTR ds:[rsi]
   14000d282:	rex.RB js 0x14000d2dc
   14000d285:	add    BYTE PTR [rip+0x72655600],al        # 0x1b266288b
   14000d28b:	push   rcx
   14000d28c:	jne    0x14000d2f3
   14000d28e:	jb     0x14000d309
   14000d290:	push   rsi
   14000d291:	(bad)  
   14000d292:	ins    BYTE PTR es:[rdi],dx
   14000d293:	jne    0x14000d2fa
   14000d295:	push   rdi
   14000d296:	add    BYTE PTR [rax],al
   14000d298:	add    eax,0x61684300
   14000d29d:	jb     0x14000d2f4
   14000d29f:	jo     0x14000d311
   14000d2a1:	gs jb  0x14000d2fb
   14000d2a4:	add    BYTE PTR [rax],al
   14000d2a6:	add    DWORD PTR [rax],eax
   14000d2a8:	push   rdx
   14000d2a9:	gs jae 0x14000d31b
   14000d2ac:	ins    BYTE PTR es:[rdi],dx
   14000d2ad:	jbe    0x14000d314
   14000d2af:	rex.R
   14000d2b0:	gs ins BYTE PTR es:[rdi],dx
   14000d2b2:	(bad)  
   14000d2b3:	jns    0x14000d301
   14000d2b5:	outs   dx,DWORD PTR ds:[rsi]
   14000d2b6:	(bad)  
   14000d2b7:	fs gs fs push r8
   14000d2bc:	rex.WB add BYTE PTR [r8],al
   14000d2bf:	add    BYTE PTR [rbp+riz*2+0x6c],al
   14000d2c3:	(bad)  
   14000d2c4:	jns    0x14000d312
   14000d2c6:	outs   dx,DWORD PTR ds:[rsi]
   14000d2c7:	(bad)  
   14000d2c8:	fs rex.RX (bad) 
   14000d2cb:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6f6f4865
   14000d2d3:	imul   eax,DWORD PTR [rax],0x0
   14000d2d6:	(bad)  
   14000d2d7:	jo     0x14000d342
   14000d2d9:	sub    eax,0x772d736d
   14000d2de:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000d2e5:	sub    eax,0x70616568
   14000d2ea:	sub    eax,0x312d326c
   14000d2ef:	sub    eax,0x6c642e30
   14000d2f4:	ins    BYTE PTR es:[rdi],dx
   14000d2f5:	add    BYTE PTR [rcx+0x70],ah
   14000d2f8:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e466f
   14000d302:	outs   dx,DWORD PTR ds:[rsi]
   14000d303:	jb     0x14000d36a
   14000d305:	sub    eax,0x69727473
   14000d30a:	outs   dx,BYTE PTR ds:[rsi]
   14000d30b:	addr32 sub eax,0x312d316c
   14000d311:	sub    eax,0x6c642e30
   14000d316:	ins    BYTE PTR es:[rdi],dx
   14000d317:	add    BYTE PTR [rcx+0x70],ah
   14000d31a:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e4691
   14000d324:	outs   dx,DWORD PTR ds:[rsi]
   14000d325:	jb     0x14000d38c
   14000d327:	sub    eax,0x736e6f63
   14000d32c:	outs   dx,DWORD PTR ds:[rsi]
   14000d32d:	ins    BYTE PTR es:[rdi],dx
   14000d32e:	gs sub eax,0x312d316c
   14000d334:	sub    eax,0x6c642e30
   14000d339:	ins    BYTE PTR es:[rdi],dx
   14000d33a:	add    BYTE PTR [rax],al
   14000d33c:	(bad)  
   14000d33d:	jo     0x14000d3a8
   14000d33f:	sub    eax,0x772d736d
   14000d344:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000d34b:	sub    eax,0x636f7270
   14000d350:	gs jae 0x14000d3c6
   14000d353:	outs   dx,BYTE PTR gs:[rsi]
   14000d355:	jbe    0x14000d3c0
   14000d357:	jb     0x14000d3c8
   14000d359:	outs   dx,BYTE PTR ds:[rsi]
   14000d35a:	ins    DWORD PTR es:[rdi],dx
   14000d35b:	outs   dx,BYTE PTR gs:[rsi]
   14000d35d:	je     0x14000d38c
   14000d35f:	ins    BYTE PTR es:[rdi],dx
   14000d360:	xor    DWORD PTR [rip+0x2e302d32],ebp        # 0x16e310098
   14000d366:	fs ins BYTE PTR es:[rdi],dx
   14000d368:	ins    BYTE PTR es:[rdi],dx
   14000d369:	add    BYTE PTR [rcx+0x70],ah
   14000d36c:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e46e3
   14000d376:	outs   dx,DWORD PTR ds:[rsi]
   14000d377:	jb     0x14000d3de
   14000d379:	sub    eax,0x73726576
   14000d37e:	imul   ebp,DWORD PTR [rdi+0x6e],0x2d316c2d
   14000d385:	xor    DWORD PTR [rip+0x6c642e30],ebp        # 0x1ac6501bb
   14000d38b:	ins    BYTE PTR es:[rdi],dx
   14000d38c:	add    BYTE PTR [rax],al
   14000d38e:	(bad)  
   14000d38f:	jo     0x14000d3fa
   14000d391:	sub    eax,0x772d736d
   14000d396:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000d39d:	sub    eax,0x69727473
   14000d3a2:	outs   dx,BYTE PTR ds:[rsi]
   14000d3a3:	addr32 sub eax,0x312d326c
   14000d3a9:	sub    eax,0x6c642e30
   14000d3ae:	ins    BYTE PTR es:[rdi],dx
   14000d3af:	add    BYTE PTR [rcx+0x70],ah
   14000d3b2:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e4729
   14000d3bc:	outs   dx,DWORD PTR ds:[rsi]
   14000d3bd:	jb     0x14000d424
   14000d3bf:	sub    eax,0x616c6564
   14000d3c4:	jns    0x14000d432
   14000d3c6:	outs   dx,DWORD PTR ds:[rsi]
   14000d3c7:	(bad)  
   14000d3c8:	fs sub eax,0x312d316c
   14000d3ce:	sub    eax,0x6c642e31
   14000d3d3:	ins    BYTE PTR es:[rdi],dx
   14000d3d4:	add    BYTE PTR [rax],al
   14000d3d6:	mov    al,BYTE PTR [rip+0x566c7452]        # 0x1966d482e
   14000d3dc:	gs jb  0x14000d448
   14000d3df:	data16 jns 0x14000d438
   14000d3e2:	gs jb  0x14000d458
   14000d3e5:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f666e49
   14000d3ec:	add    BYTE PTR [rax],al
   14000d3ee:	outs   dx,BYTE PTR ds:[rsi]
   14000d3ef:	je     0x14000d455
   14000d3f1:	ins    BYTE PTR es:[rdi],dx
   14000d3f2:	ins    BYTE PTR es:[rdi],dx
   14000d3f3:	cs fs ins BYTE PTR es:[rdi],dx
   14000d3f6:	ins    BYTE PTR es:[rdi],dx
   14000d3f7:	add    BYTE PTR [rdx+0x6d656d04],dl
   14000d3fd:	movsxd esi,DWORD PTR [rax+0x79]
   14000d400:	add    BYTE PTR [rax],al
   14000d402:	xchg   esi,eax
   14000d403:	add    al,0x6d
   14000d405:	gs ins DWORD PTR es:[rdi],dx
   14000d407:	jae    0x14000d46e
   14000d409:	je     0x14000d40b
	...

Disassembly of section .data:

000000014000e000 <.data>:
   14000e000:	add    DWORD PTR [rax],eax
   14000e002:	add    BYTE PTR [rax],al
   14000e004:	add    BYTE PTR [rax],al
   14000e006:	add    BYTE PTR [rax],al
   14000e008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000e00e:	add    BYTE PTR [rax],al
   14000e010:	int    0x5d
   14000e012:	and    dl,dl
   14000e014:	data16 (bad) 
   14000e016:	(bad)  
   14000e017:	inc    DWORD PTR [rax]
	...

Disassembly of section .pdata:

000000014000f000 <.pdata>:
   14000f000:	or     BYTE PTR [rax],dl
   14000f002:	add    BYTE PTR [rax],al
   14000f004:	jg     0x14000f016
   14000f006:	add    BYTE PTR [rax],al
   14000f008:	and    BYTE PTR [rax+rax*1+0x108800],bh
   14000f00f:	add    BYTE PTR [rdi+0x20],ah
   14000f012:	add    BYTE PTR [rax],al
   14000f014:	xor    BYTE PTR [rax+rax*1+0x207000],bh
   14000f01b:	add    ch,al
   14000f01d:	and    eax,DWORD PTR [rax]
   14000f01f:	add    BYTE PTR [rax-0x44],bl
   14000f022:	add    BYTE PTR [rax],al
   14000f024:	int3   
   14000f025:	and    eax,DWORD PTR [rax]
   14000f027:	add    BYTE PTR [rbp+0x7000002d],bl
   14000f02d:	mov    esp,0x2da40000
   14000f032:	add    BYTE PTR [rax],al
   14000f034:	jae    0x14000f066
   14000f036:	add    BYTE PTR [rax],al
   14000f038:	nop
   14000f039:	mov    esp,0x307c0000
   14000f03e:	add    BYTE PTR [rax],al
   14000f040:	cmp    BYTE PTR [rcx],dh
   14000f042:	add    BYTE PTR [rax],al
   14000f044:	mov    al,0xbc
   14000f046:	add    BYTE PTR [rax],al
   14000f048:	rex xor DWORD PTR [rax],eax
   14000f04b:	add    bl,al
   14000f04d:	xor    eax,0xbcc40000
   14000f052:	add    BYTE PTR [rax],al
   14000f054:	int3   
   14000f055:	xor    eax,0x38b70000
   14000f05a:	add    BYTE PTR [rax],al
   14000f05c:	fdivr  QWORD PTR [rax+rax*1+0x38c000]
   14000f063:	add    BYTE PTR [rdi+0x3b],dl
   14000f066:	add    BYTE PTR [rax],al
   14000f068:	add    BYTE PTR [rbp+0x3b600000],bh
   14000f06e:	add    BYTE PTR [rax],al
   14000f070:	adc    bh,BYTE PTR [rsi]
   14000f072:	add    BYTE PTR [rax],al
   14000f074:	sbb    al,0xbd
   14000f076:	add    BYTE PTR [rax],al
   14000f078:	sbb    BYTE PTR [rsi],bh
   14000f07a:	add    BYTE PTR [rax],al
   14000f07c:	(bad)  
   14000f07d:	rex.WRXB add BYTE PTR [r8],r8b
   14000f080:	cmp    al,0xbd
   14000f082:	add    BYTE PTR [rax],al
   14000f084:	int3   
   14000f085:	rex.WRXB add BYTE PTR [r8],r8b
   14000f088:	loop   0x14000f0d9
   14000f08a:	add    BYTE PTR [rax],al
   14000f08c:	(bad)  
   14000f08d:	mov    ebp,0x4fe80000
   14000f092:	add    BYTE PTR [rax],al
   14000f094:	ret    0x50
   14000f097:	add    BYTE PTR [rax-0x43],ch
   14000f09a:	add    BYTE PTR [rax],al
   14000f09c:	enter  0x50,0x0
   14000f0a0:	sub    edx,DWORD PTR [rcx+0x0]
   14000f0a3:	add    BYTE PTR [rax-0x43],ch
   14000f0a6:	add    BYTE PTR [rax],al
   14000f0a8:	xor    al,0x51
   14000f0aa:	add    BYTE PTR [rax],al
   14000f0ac:	rex.WRXB push r11
   14000f0ae:	add    BYTE PTR [rax],al
   14000f0b0:	jo     0x14000f06f
   14000f0b2:	add    BYTE PTR [rax],al
   14000f0b4:	cwde   
   14000f0b5:	push   rbx
   14000f0b6:	add    BYTE PTR [rax],al
   14000f0b8:	(bad)  
   14000f0b9:	push   rsp
   14000f0ba:	add    BYTE PTR [rax],al
   14000f0bc:	test   BYTE PTR [rbp+0x54140000],bh
   14000f0c2:	add    BYTE PTR [rax],al
   14000f0c4:	rex.RXB push r13
   14000f0c6:	add    BYTE PTR [rax],al
   14000f0c8:	nop
   14000f0c9:	mov    ebp,0x55500000
   14000f0ce:	add    BYTE PTR [rax],al
   14000f0d0:	repz push rbp
   14000f0d2:	add    BYTE PTR [rax],al
   14000f0d4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f0d5:	mov    ebp,0x55fc0000
   14000f0da:	add    BYTE PTR [rax],al
   14000f0dc:	mov    bl,0x56
   14000f0de:	add    BYTE PTR [rax],al
   14000f0e0:	lods   al,BYTE PTR ds:[rsi]
   14000f0e1:	mov    ebp,0x56bc0000
   14000f0e6:	add    BYTE PTR [rax],al
   14000f0e8:	not    BYTE PTR [rsi+0x0]
   14000f0eb:	add    BYTE PTR [rbp+rdi*4+0x56fc0000],al
   14000f0f2:	add    BYTE PTR [rax],al
   14000f0f4:	mov    dl,0x57
   14000f0f6:	add    BYTE PTR [rax],al
   14000f0f8:	mov    esp,0xb80000bd
   14000f0fd:	push   rdi
   14000f0fe:	add    BYTE PTR [rax],al
   14000f100:	repnz pop rax
   14000f102:	add    BYTE PTR [rax],al
   14000f104:	int3   
   14000f105:	mov    ebp,0x58f80000
   14000f10a:	add    BYTE PTR [rax],al
   14000f10c:	mov    al,0x59
   14000f10e:	add    BYTE PTR [rax],al
   14000f110:	fdivr  DWORD PTR [rbp+0x59f00000]
   14000f116:	add    BYTE PTR [rax],al
   14000f118:	(bad)  
   14000f119:	pop    rsp
   14000f11a:	add    BYTE PTR [rax],al
   14000f11c:	call   0x17800f1de
   14000f121:	pop    rsp
   14000f122:	add    BYTE PTR [rax],al
   14000f124:	(bad)  
   14000f125:	pop    rsp
   14000f126:	add    BYTE PTR [rax],al
   14000f128:	cld    
   14000f129:	mov    ebp,0x5cf00000
   14000f12e:	add    BYTE PTR [rax],al
   14000f130:	mov    esi,0x6800005d
   14000f135:	mov    ebp,0x5dc40000
   14000f13a:	add    BYTE PTR [rax],al
   14000f13c:	pushf  
   14000f13d:	pop    rsi
   14000f13e:	add    BYTE PTR [rax],al
   14000f140:	test   BYTE PTR [rbp+0x5ea40000],bh
   14000f146:	add    BYTE PTR [rax],al
   14000f148:	add    eax,0x8400005f
   14000f14d:	mov    ebp,0x5f0c0000
   14000f152:	add    BYTE PTR [rax],al
   14000f154:	sub    DWORD PTR [rax+0x0],esp
   14000f157:	add    BYTE PTR [rax],cl
   14000f159:	mov    esi,0x60300000
   14000f15e:	add    BYTE PTR [rax],al
   14000f160:	iret   
   14000f161:	(bad)  
   14000f162:	add    BYTE PTR [rax],al
   14000f164:	and    al,0xbe
   14000f166:	add    BYTE PTR [rax],al
   14000f168:	fsub   DWORD PTR [rax+0x0]
   14000f16b:	add    BYTE PTR [rbp+0x61],dh
   14000f16e:	add    BYTE PTR [rax],al
   14000f170:	and    al,0xbe
   14000f172:	add    BYTE PTR [rax],al
   14000f174:	jl     0x14000f1d7
   14000f176:	add    BYTE PTR [rax],al
   14000f178:	xchg   esp,eax
   14000f179:	(bad)  
   14000f17a:	add    BYTE PTR [rax],al
   14000f17c:	cmp    BYTE PTR [rsi+0x629c0000],bh
   14000f182:	add    BYTE PTR [rax],al
   14000f184:	jmp    0x14000f1e8
   14000f186:	add    BYTE PTR [rax],al
   14000f188:	push   rsp
   14000f189:	mov    esi,0x62f40000
   14000f18e:	add    BYTE PTR [rax],al
   14000f190:	mov    bh,0x63
   14000f192:	add    BYTE PTR [rax],al
   14000f194:	fs mov esi,0x63c00000
   14000f19a:	add    BYTE PTR [rax],al
   14000f19c:	rex.B
   14000f19d:	add    BYTE PTR fs:[rax],al
   14000f1a0:	(bad)  
   14000f1a1:	mov    ebp,0x64480000
   14000f1a6:	add    BYTE PTR [rax],al
   14000f1a8:	jrcxz  0x14000f20e
   14000f1aa:	add    BYTE PTR [rax],al
   14000f1ac:	push   0xffffffffec0000bd
   14000f1b1:	add    BYTE PTR fs:[rax],al
   14000f1b4:	fsub   DWORD PTR [rbp+0x0]
   14000f1b7:	add    BYTE PTR [rbp+rdi*4+0x65e00000],al
   14000f1be:	add    BYTE PTR [rax],al
   14000f1c0:	data16 add BYTE PTR [eax],al
   14000f1c4:	je     0x14000f184
   14000f1c6:	add    BYTE PTR [rax],al
   14000f1c8:	jo     0x14000f230
   14000f1ca:	add    BYTE PTR [rax],al
   14000f1cc:	mov    ebp,0x88000066
   14000f1d1:	mov    esi,0x66c40000
   14000f1d6:	add    BYTE PTR [rax],al
   14000f1d8:	jmp    FWORD PTR [rcx+0x0]
   14000f1db:	add    BYTE PTR [rax+0x80000be],dl
   14000f1e1:	push   0x0
   14000f1e3:	add    BYTE PTR [rcx],cl
   14000f1e5:	ins    BYTE PTR es:[rdi],dx
   14000f1e6:	add    BYTE PTR [rax],al
   14000f1e8:	lods   al,BYTE PTR ds:[rsi]
   14000f1e9:	mov    esi,0x6c100000
   14000f1ee:	add    BYTE PTR [rax],al
   14000f1f0:	and    eax,0x7400006d
   14000f1f5:	mov    esi,0x6d2c0000
   14000f1fa:	add    BYTE PTR [rax],al
   14000f1fc:	rex.RX jo 0x14000f1ff
   14000f1ff:	add    al,al
   14000f201:	mov    esi,0x704c0000
   14000f206:	add    BYTE PTR [rax],al
   14000f208:	(bad)  
   14000f209:	jo     0x14000f20b
   14000f20b:	add    BYTE PTR [rbp+rdi*4+0x70d40000],al
   14000f212:	add    BYTE PTR [rax],al
   14000f214:	(bad)  
   14000f215:	jno    0x14000f217
   14000f217:	add    BYTE PTR [rax-0x43],ch
   14000f21a:	add    BYTE PTR [rax],al
   14000f21c:	sub    BYTE PTR [rcx+0x0],dh
   14000f21f:	add    dl,al
   14000f221:	jno    0x14000f223
   14000f223:	add    ah,ah
   14000f225:	mov    esi,0x71c80000
   14000f22a:	add    BYTE PTR [rax],al
   14000f22c:	enter  0x72,0x0
   14000f230:	add    al,0xbf
   14000f232:	add    BYTE PTR [rax],al
   14000f234:	shl    BYTE PTR [rdx+0x0],1
   14000f237:	add    BYTE PTR [rdx],ah
   14000f239:	jae    0x14000f23b
   14000f23b:	add    BYTE PTR [rax-0x43],ch
   14000f23e:	add    BYTE PTR [rax],al
   14000f240:	push   0xfffffffffd000073
   14000f245:	jae    0x14000f247
   14000f247:	add    BYTE PTR [rsi+rdi*4],ah
   14000f24a:	add    BYTE PTR [rax],al
   14000f24c:	add    al,0x74
   14000f24e:	add    BYTE PTR [rax],al
   14000f250:	jle    0x14000f2c6
   14000f252:	add    BYTE PTR [rax],al
   14000f254:	sub    BYTE PTR [rdi+0x74840000],bh
   14000f25a:	add    BYTE PTR [rax],al
   14000f25c:	pop    rsp
   14000f25d:	jne    0x14000f25f
   14000f25f:	add    BYTE PTR [rax],dh
   14000f261:	mov    edi,0x75640000
   14000f266:	add    BYTE PTR [rax],al
   14000f268:	(bad)
   14000f26b:	add    BYTE PTR [rax-0x41],cl
   14000f26e:	add    BYTE PTR [rax],al
   14000f270:	int3   
   14000f271:	jne    0x14000f273
   14000f273:	add    BYTE PTR [rcx+0x76],al
   14000f276:	add    BYTE PTR [rax],al
   14000f278:	fs mov esi,0x76480000
   14000f27e:	add    BYTE PTR [rax],al
   14000f280:	(bad)  
   14000f281:	jbe    0x14000f283
   14000f283:	add    BYTE PTR [rdi+rdi*4+0x0],dl
   14000f287:	add    ah,bl
   14000f289:	jbe    0x14000f28b
   14000f28b:	add    BYTE PTR [rsi],bh
   14000f28d:	ja     0x14000f28f
   14000f28f:	add    BYTE PTR [rax-0x41],ch
   14000f292:	add    BYTE PTR [rax],al
   14000f294:	rex.R ja 0x14000f297
   14000f297:	add    BYTE PTR [rsi+0x68000077],ah
   14000f29d:	mov    edi,0x77ac0000
   14000f2a2:	add    BYTE PTR [rax],al
   14000f2a4:	adc    bh,BYTE PTR [rax+0x0]
   14000f2a7:	add    BYTE PTR [rdi+rdi*4+0x0],dh
   14000f2ab:	add    BYTE PTR [rax],bl
   14000f2ad:	js     0x14000f2af
   14000f2af:	add    BYTE PTR [rsi+0x78],bh
   14000f2b2:	add    BYTE PTR [rax],al
   14000f2b4:	je     0x14000f275
   14000f2b6:	add    BYTE PTR [rax],al
   14000f2b8:	test   BYTE PTR [rax+0x0],bh
   14000f2bb:	add    BYTE PTR [rax],dh
   14000f2bd:	jns    0x14000f2bf
   14000f2bf:	add    BYTE PTR [rax+0x380000bf],al
   14000f2c5:	jns    0x14000f2c7
   14000f2c7:	add    BYTE PTR [rsi+0x54000079],cl
   14000f2cd:	mov    esi,0x79940000
   14000f2d2:	add    BYTE PTR [rax],al
   14000f2d4:	sar    DWORD PTR [rcx+0x0],cl
   14000f2d7:	add    BYTE PTR [rax-0x43],ah
   14000f2da:	add    BYTE PTR [rax],al
   14000f2dc:	fdivr  QWORD PTR [rcx+0x0]
   14000f2df:	add    BYTE PTR [rip+0x6000007a],bh        # 0x1a000f35f
   14000f2e5:	mov    ebp,0x7a440000
   14000f2ea:	add    BYTE PTR [rax],al
   14000f2ec:	adc    bh,BYTE PTR [rbx+0x0]
   14000f2ef:	add    BYTE PTR [rax+0x180000bf],dl
   14000f2f5:	jnp    0x14000f2f7
   14000f2f7:	add    BYTE PTR [rdi+0x7b],ah
   14000f2fa:	add    BYTE PTR [rax],al
   14000f2fc:	(bad)  
   14000f2fd:	mov    ebp,0x7b700000
   14000f302:	add    BYTE PTR [rax],al
   14000f304:	sar    DWORD PTR [rbx+0x0],1
   14000f307:	add    BYTE PTR [rbp+rdi*4+0x7bd80000],al
   14000f30e:	add    BYTE PTR [rax],al
   14000f310:	stos   DWORD PTR es:[rdi],eax
   14000f311:	jge    0x14000f313
   14000f313:	add    BYTE PTR [rax-0x4bffff41],ch
   14000f319:	jge    0x14000f31b
   14000f31b:	add    BYTE PTR [rsi-0x3fffff82],ch
   14000f321:	mov    edi,0x7eb40000
   14000f326:	add    BYTE PTR [rax],al
   14000f328:	mov    BYTE PTR [rdi+0x0],bh
   14000f32b:	add    ah,dl
   14000f32d:	mov    edi,0x7f900000
   14000f332:	add    BYTE PTR [rax],al
   14000f334:	rex.R add DWORD PTR [rax],0xbfe800
   14000f33b:	add    BYTE PTR [rcx+rax*4+0x0],cl
   14000f33f:	add    BYTE PTR [rdi],ah
   14000f341:	(bad)  
   14000f342:	add    BYTE PTR [rax],al
   14000f344:	push   0x300000bf
   14000f349:	(bad)  
   14000f34a:	add    BYTE PTR [rax],al
   14000f34c:	(bad)  
   14000f34d:	test   BYTE PTR [rax],al
   14000f34f:	add    BYTE PTR [rax+rax*8],al
   14000f352:	add    BYTE PTR [rax],al
   14000f354:	or     al,0x84
   14000f356:	add    BYTE PTR [rax],al
   14000f358:	fadd   DWORD PTR [rax+rax*1+0xbd6800]
   14000f35f:	add    al,ah
   14000f361:	test   BYTE PTR [rax],al
   14000f363:	add    cl,bh
   14000f365:	mov    BYTE PTR [rax],al
   14000f367:	add    BYTE PTR [rax],bl
   14000f369:	rol    BYTE PTR [rax],0x0
   14000f36c:	add    BYTE PTR [rcx-0x73c70000],cl
   14000f372:	add    BYTE PTR [rax],al
   14000f374:	xor    al,al
   14000f376:	add    BYTE PTR [rax],al
   14000f378:	rex mov WORD PTR [rax],es
   14000f37b:	add    bl,bh
   14000f37d:	mov    WORD PTR [rax],es
   14000f37f:	add    BYTE PTR [rsi+rdi*4+0x0],dl
   14000f383:	add    BYTE PTR [rcx*4-0x70180000],al
   14000f38a:	add    BYTE PTR [rax],al
   14000f38c:	rex.W rol BYTE PTR [rax],0x0
   14000f390:	lock pop QWORD PTR [rax]
   14000f393:	add    bh,bl
   14000f395:	xchg   ebp,eax
   14000f396:	add    BYTE PTR [rax],al
   14000f398:	rol    BYTE PTR fs:[rax],0x0
   14000f39c:	call   0x12900f436
   14000f3a1:	xchg   esi,eax
   14000f3a2:	add    BYTE PTR [rax],al
   14000f3a4:	mov    al,0xbc
   14000f3a6:	add    BYTE PTR [rax],al
   14000f3a8:	lock xchg esi,eax
   14000f3aa:	add    BYTE PTR [rax],al
   14000f3ac:	adc    al,0x98
   14000f3ae:	add    BYTE PTR [rax],al
   14000f3b0:	test   al,al
   14000f3b2:	add    BYTE PTR [rax],al
   14000f3b4:	sbb    al,0x98
   14000f3b6:	add    BYTE PTR [rax],al
   14000f3b8:	ret    
   14000f3b9:	cwde   
   14000f3ba:	add    BYTE PTR [rax],al
   14000f3bc:	and    al,0xbe
   14000f3be:	add    BYTE PTR [rax],al
   14000f3c0:	int3   
   14000f3c1:	cwde   
   14000f3c2:	add    BYTE PTR [rax],al
   14000f3c4:	push   rsp
   14000f3c5:	pushf  
   14000f3c6:	add    BYTE PTR [rax],al
   14000f3c8:	pushf  
   14000f3c9:	rol    BYTE PTR [rax],0x0
   14000f3cc:	(bad)  
   14000f3cd:	pushf  
   14000f3ce:	add    BYTE PTR [rax],al
   14000f3d0:	xchg   ecx,eax
   14000f3d1:	pushf  
   14000f3d2:	add    BYTE PTR [rax],al
   14000f3d4:	mov    BYTE PTR [rsi-0x63600000],bh
   14000f3da:	add    BYTE PTR [rax],al
   14000f3dc:	outs   dx,DWORD PTR ds:[rsi]
   14000f3dd:	popf   
   14000f3de:	add    BYTE PTR [rax],al
   14000f3e0:	(bad)  
   14000f3e1:	mov    ebp,0x9d800000
   14000f3e6:	add    BYTE PTR [rax],al
   14000f3e8:	leave  
   14000f3e9:	popf   
   14000f3ea:	add    BYTE PTR [rax],al
   14000f3ec:	mov    BYTE PTR [rsi-0x62300000],bh
   14000f3f2:	add    BYTE PTR [rax],al
   14000f3f4:	movabs ds:0xb00000c0b400009f,al
   14000f3fd:	lahf   
   14000f3fe:	add    BYTE PTR [rax],al
   14000f400:	ret    0x9f
   14000f403:	add    BYTE PTR [rax-0x43],ah
   14000f406:	add    BYTE PTR [rax],al
   14000f408:	loopne 0x14000f3a9
   14000f40a:	add    BYTE PTR [rax],al
   14000f40c:	(bad)  
   14000f40d:	lahf   
   14000f40e:	add    BYTE PTR [rax],al
   14000f410:	call   0x15000f4d5
   14000f415:	movabs al,ds:0xbd600000a0490000
   14000f41e:	add    BYTE PTR [rax],al
   14000f420:	push   rax
   14000f421:	movabs al,ds:0xbd600000a0680000
   14000f42a:	add    BYTE PTR [rax],al
   14000f42c:	jl     0x14000f3ce
   14000f42e:	add    BYTE PTR [rax],al
   14000f430:	shl    BYTE PTR [rax-0x3f140000],1
   14000f436:	add    BYTE PTR [rax],al
   14000f438:	fsub   DWORD PTR [rax-0x5ee30000]
   14000f43e:	add    BYTE PTR [rax],al
   14000f440:	push   0xffffffff900000bd
   14000f445:	movabs eax,ds:0xc10c0000a1dd0000
   14000f44e:	add    BYTE PTR [rax],al
   14000f450:	and    al,0xa2
   14000f452:	add    BYTE PTR [rax],al
   14000f454:	hlt    
   14000f455:	movabs ds:0xa32c0000c1380000,al
   14000f45e:	add    BYTE PTR [rax],al
   14000f460:	(bad)  
   14000f461:	movabs ds:0xa3700000bd680000,eax
   14000f46a:	add    BYTE PTR [rax],al
   14000f46c:	loope  0x14000f412
   14000f46e:	add    BYTE PTR [rax],al
   14000f470:	rex.R rol DWORD PTR [rax],0x0
   14000f474:	clc    
   14000f475:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f476:	add    BYTE PTR [rax],al
   14000f478:	(bad)  
   14000f479:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f47a:	add    BYTE PTR [rax],al
   14000f47c:	push   0x400000bd
   14000f481:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f482:	add    BYTE PTR [rax],al
   14000f484:	mov    bh,0xa5
   14000f486:	add    BYTE PTR [rax],al
   14000f488:	push   rsp
   14000f489:	rol    DWORD PTR [rax],0x0
   14000f48c:	loopne 0x14000f433
   14000f48e:	add    BYTE PTR [rax],al
   14000f490:	push   rdi
   14000f491:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f492:	add    BYTE PTR [rax],al
   14000f494:	pop    rsp
   14000f495:	rol    DWORD PTR [rax],0x0
   14000f498:	and    BYTE PTR [rsi-0x59090000],0x0
   14000f49f:	add    BYTE PTR [rcx+rax*8+0x0],ah
   14000f4a3:	add    BYTE PTR [rax],ah
   14000f4a5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f4a6:	add    BYTE PTR [rax],al
   14000f4a8:	xchg   edi,eax
   14000f4a9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f4aa:	add    BYTE PTR [rax],al
   14000f4ac:	ins    BYTE PTR es:[rdi],dx
   14000f4ad:	rol    DWORD PTR [rax],0x0
   14000f4b0:	in     al,dx
   14000f4b1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f4b2:	add    BYTE PTR [rax],al
   14000f4b4:	or     DWORD PTR [rax-0x42a00000],ebp
   14000f4ba:	add    BYTE PTR [rax],al
   14000f4bc:	adc    BYTE PTR [rax-0x578d0000],ch
   14000f4c2:	add    BYTE PTR [rax],al
   14000f4c4:	push   0xffffffffb00000bd
   14000f4c9:	test   al,0x0
   14000f4cb:	add    BYTE PTR [rdx+0x500000a8],dh
   14000f4d1:	rol    DWORD PTR [rax],0x0
   14000f4d4:	shr    BYTE PTR [rax-0x56e30000],1
   14000f4da:	add    BYTE PTR [rax],al
   14000f4dc:	js     0x14000f49f
   14000f4de:	add    BYTE PTR [rax],al
   14000f4e0:	es test eax,0xa9440000
   14000f4e6:	add    BYTE PTR [rax],al
   14000f4e8:	xor    cl,al
   14000f4ea:	add    BYTE PTR [rax],al
   14000f4ec:	push   rax
   14000f4ed:	test   eax,0xa9700000
   14000f4f2:	add    BYTE PTR [rax],al
   14000f4f4:	xor    cl,al
	...

Disassembly of section .didat:

0000000140010000 <.didat>:
   140010000:	add    BYTE PTR [rdi+0x14000],ah
   140010006:	add    BYTE PTR [rax],al
   140010008:	movabs al,ds:0xc0000000014000a7
   140010011:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010012:	add    BYTE PTR [rax+0x1],al
	...
   14001001d:	add    BYTE PTR [rax],al
   14001001f:	add    BYTE PTR [rax],ah
   140010021:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010022:	add    BYTE PTR [rax+0x1],al
	...
   14001002d:	add    BYTE PTR [rax],al
   14001002f:	add    al,al
   140010031:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010032:	add    BYTE PTR [rax+0x1],al
	...
   14001003d:	add    BYTE PTR [rax],al
   14001003f:	add    BYTE PTR [rax-0x5a],ah
   140010042:	add    BYTE PTR [rax+0x1],al
	...

Disassembly of section .rsrc:

0000000140011000 <.rsrc>:
	...
   14001100c:	add    DWORD PTR [rax],eax
   14001100e:	add    al,BYTE PTR [rax]
   140011010:	call   0x168811015
   140011015:	add    BYTE PTR [rax],al
   140011017:	adc    BYTE PTR [rax],0x0
   14001101a:	add    BYTE PTR [rax],al
   14001101c:	add    BYTE PTR [rax],al
   14001101f:	sbb    BYTE PTR [rax],0x0
   140011022:	add    BYTE PTR [rax],al
   140011024:	pop    rax
   140011025:	add    BYTE PTR [rax],al
   140011027:	add    BYTE PTR [rax],0x0
	...
   140011036:	add    DWORD PTR [rax],eax
   140011038:	add    DWORD PTR [rax],eax
   14001103a:	add    BYTE PTR [rax],al
   14001103c:	jo     0x14001103e
   14001103e:	add    BYTE PTR [rax+0x0],al
	...
   14001104c:	add    BYTE PTR [rax],al
   14001104e:	add    DWORD PTR [rax],eax
   140011050:	add    DWORD PTR [rax],eax
   140011052:	add    BYTE PTR [rax],al
   140011054:	mov    BYTE PTR [rax],al
   140011056:	add    BYTE PTR [rax+0x0],al
	...
   140011064:	add    BYTE PTR [rax],al
   140011066:	add    DWORD PTR [rax],eax
   140011068:	add    DWORD PTR [rax],eax
   14001106a:	add    BYTE PTR [rax],al
   14001106c:	movabs al,ds:0x800000
	...
   14001107d:	add    BYTE PTR [rcx],al
   14001107f:	add    BYTE PTR [rcx],cl
   140011081:	add    al,0x0
   140011083:	add    BYTE PTR [rax+0x0],bh
	...
   140011095:	add    BYTE PTR [rcx],al
   140011097:	add    BYTE PTR [rcx],cl
   140011099:	add    al,0x0
   14001109b:	add    al,cl
	...
   1400110ad:	add    BYTE PTR [rcx],al
   1400110af:	add    BYTE PTR [rcx],cl
   1400110b1:	add    al,0x0
   1400110b3:	add    al,bl
   1400110b5:	add    BYTE PTR [rax],al
   1400110b7:	add    BYTE PTR [rax+0x17],cl
   1400110ba:	add    DWORD PTR [rax],eax
   1400110bc:	enter  0x0,0x0
	...
   1400110c8:	test   al,0x13
   1400110ca:	add    DWORD PTR [rax],eax
   1400110cc:	movabs al,ds:0x3
   1400110d5:	add    BYTE PTR [rax],al
   1400110d7:	add    al,dh
   1400110d9:	adc    BYTE PTR [rcx],al
   1400110db:	add    BYTE PTR [rcx+0x2],dh
   1400110e1:	add    BYTE PTR [rax],al
   1400110e3:	add    BYTE PTR [rax],al
   1400110e5:	add    BYTE PTR [rax],al
   1400110e7:	add    BYTE PTR [rbx],al
   1400110e9:	add    BYTE PTR [rbp+0x0],cl
   1400110ec:	push   rbp
   1400110ed:	add    BYTE PTR [rcx+0x0],cl
   1400110f0:	cmp    al,0x3f
   1400110f2:	js     0x140011161
   1400110f4:	ins    BYTE PTR es:[rdi],dx
   1400110f5:	and    BYTE PTR [rsi+0x65],dh
   1400110f8:	jb     0x14001116d
   1400110fa:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   140011101:	xor    BYTE PTR [rdx],ah
   140011103:	and    BYTE PTR [rbp+0x6e],ah
   140011106:	movsxd ebp,DWORD PTR [rdi+0x64]
   140011109:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   140011110:	rex.RX sub eax,0x73202238
   140011116:	je     0x140011179
   140011118:	outs   dx,BYTE PTR ds:[rsi]
   140011119:	fs (bad) 
   14001111b:	ins    BYTE PTR es:[rdi],dx
   14001111c:	outs   dx,DWORD PTR ds:[rsi]
   14001111d:	outs   dx,BYTE PTR ds:[rsi]
   14001111e:	gs cmp eax,0x73657922
   140011124:	and    bh,BYTE PTR [rdi]
   140011126:	ds or  eax,0x2d213c0a
   14001112c:	sub    eax,0x706f4320
   140011131:	jns    0x1400111a5
   140011133:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   14001113a:	sub    DWORD PTR [rax],esp
   14001113c:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   140011144:	je     0x140011166
   140011146:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140011148:	jb     0x1400111ba
   14001114a:	outs   dx,DWORD PTR ds:[rsi]
   14001114b:	jb     0x1400111ae
   14001114d:	je     0x1400111b8
   14001114f:	outs   dx,DWORD PTR ds:[rsi]
   140011150:	outs   dx,BYTE PTR ds:[rsi]
   140011151:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0e4f84
   140011157:	cmp    al,0x61
   140011159:	jae    0x1400111ce
   14001115b:	gs ins DWORD PTR es:[rdi],dx
   14001115d:	(bad)  
   14001115e:	ins    BYTE PTR es:[rdi],dx
   14001115f:	jns    0x140011181
   140011161:	js     0x1400111d0
   140011163:	ins    BYTE PTR es:[rdi],dx
   140011164:	outs   dx,BYTE PTR ds:[rsi]
   140011165:	jae    0x1400111a4
   140011167:	and    dh,BYTE PTR [rbp+0x72]
   14001116a:	outs   dx,BYTE PTR ds:[rsi]
   14001116b:	cmp    dh,BYTE PTR [rbx+0x63]
   14001116e:	push   0x73616d65
   140011173:	sub    eax,0x7263696d
   140011178:	outs   dx,DWORD PTR ds:[rsi]
   140011179:	jae    0x1400111ea
   14001117b:	data16 je 0x1400111ab
   14001117e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140011181:	cmp    ah,BYTE PTR [rcx+0x73]
   140011184:	ins    DWORD PTR es:[rdi],dx
   140011185:	cs jbe 0x1400111b9
   140011188:	and    ah,BYTE PTR [rax]
   14001118a:	ins    DWORD PTR es:[rdi],dx
   14001118b:	(bad)  
   14001118c:	outs   dx,BYTE PTR ds:[rsi]
   14001118d:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   140011194:	jb     0x140011209
   140011196:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14001119d:	xor    BYTE PTR [rdx],ah
   14001119f:	ds or  eax,0x73613c0a
   1400111a5:	jae    0x14001120c
   1400111a7:	ins    DWORD PTR es:[rdi],dx
   1400111a8:	(bad)  
   1400111a9:	ins    BYTE PTR es:[rdi],dx
   1400111aa:	jns    0x1400111f5
   1400111ac:	fs outs dx,BYTE PTR gs:[rsi]
   1400111af:	je     0x14001121a
   1400111b1:	je     0x14001122c
   1400111b3:	or     eax,0x2020200a
   1400111b8:	and    BYTE PTR [rsi+0x65],dh
   1400111bb:	jb     0x140011230
   1400111bd:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e35223d
   1400111c4:	xor    DWORD PTR [rsi],ebp
   1400111c6:	xor    BYTE PTR [rsi],ch
   1400111c8:	xor    BYTE PTR [rdx],ah
   1400111ca:	or     eax,0x2020200a
   1400111cf:	and    BYTE PTR [rax+0x72],dh
   1400111d2:	outs   dx,DWORD PTR ds:[rsi]
   1400111d3:	movsxd esp,DWORD PTR [rbp+0x73]
   1400111d6:	jae    0x140011247
   1400111d8:	jb     0x14001121b
   1400111da:	jb     0x14001123f
   1400111dc:	push   0x63657469
   1400111e1:	je     0x140011258
   1400111e3:	jb     0x14001124a
   1400111e5:	cmp    eax,0x646d6122
   1400111ea:	ss xor al,0x22
   1400111ed:	or     eax,0x2020200a
   1400111f2:	and    BYTE PTR [rsi+0x61],ch
   1400111f5:	ins    DWORD PTR es:[rdi],dx
   1400111f6:	gs cmp eax,0x63694d22
   1400111fc:	jb     0x14001126d
   1400111fe:	jae    0x14001126f
   140011200:	data16 je 0x140011231
   140011203:	push   rdi
   140011204:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14001120b:	imul   r13d,DWORD PTR [rbp+r12*2+0x73],0x65747379
   140011214:	ins    DWORD PTR es:[rdi],dx
   140011215:	cs push rbx
   140011217:	gs je  0x140011272
   14001121a:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16021322a
   140011220:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   140011224:	gs cmp eax,0x6e697722
   14001122a:	xor    esi,DWORD PTR [rdx]
   14001122c:	and    cl,BYTE PTR [rip+0xd3e2f0a]        # 0x14d3f413c
   140011232:	or     bh,BYTE PTR [rsp+riz*2]
   140011235:	gs jae 0x14001129b
   140011238:	jb     0x1400112a3
   14001123a:	jo     0x1400112b0
   14001123c:	imul   ebp,DWORD PTR [rdi+0x6e],0x7465533e
   140011243:	js     0x140011265
   140011245:	sub    eax,0x74655320
   14001124a:	jae    0x14001126c
   14001124c:	outs   dx,BYTE PTR gs:[rsi]
   14001124e:	jbe    0x1400112b9
   140011250:	jb     0x1400112c1
   140011252:	outs   dx,BYTE PTR ds:[rsi]
   140011253:	ins    DWORD PTR es:[rdi],dx
   140011254:	outs   dx,BYTE PTR gs:[rsi]
   140011256:	je     0x140011278
   140011258:	jbe    0x1400112bb
   14001125a:	jb     0x1400112c5
   14001125c:	(bad)  
   14001125d:	(bad)  
   14001125e:	ins    BYTE PTR es:[rdi],dx
   14001125f:	gs jae 0x14001129e
   140011262:	(bad)  
   140011263:	fs gs jae 0x1400112ca
   140011267:	jb     0x1400112d2
   140011269:	jo     0x1400112df
   14001126b:	imul   ebp,DWORD PTR [rdi+0x6e],0xd0a0d3e
   140011272:	or     bh,BYTE PTR [rsp+rsi*2]
   140011275:	jb     0x1400112ec
   140011277:	jae    0x1400112ed
   140011279:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001127b:	outs   dx,WORD PTR ds:[rsi]
   14001127d:	and    BYTE PTR [rax+0x6d],bh
   140011280:	ins    BYTE PTR es:[rdi],dx
   140011281:	outs   dx,BYTE PTR ds:[rsi]
   140011282:	jae    0x1400112c1
   140011284:	and    dh,BYTE PTR [rbp+0x72]
   140011287:	outs   dx,BYTE PTR ds:[rsi]
   140011288:	cmp    dh,BYTE PTR [rbx+0x63]
   14001128b:	push   0x73616d65
   140011290:	sub    eax,0x7263696d
   140011295:	outs   dx,DWORD PTR ds:[rsi]
   140011296:	jae    0x140011307
   140011298:	data16 je 0x1400112c8
   14001129b:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14001129e:	cmp    ah,BYTE PTR [rcx+0x73]
   1400112a1:	ins    DWORD PTR es:[rdi],dx
   1400112a2:	cs jbe 0x1400112d8
   1400112a5:	and    bh,BYTE PTR [rsi]
   1400112a7:	or     eax,0x2020200a
   1400112ac:	and    BYTE PTR [rbx+rsi*2],bh
   1400112af:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   1400112b3:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   1400112bb:	and    BYTE PTR [rax],ah
   1400112bd:	and    BYTE PTR [rax],ah
   1400112bf:	and    BYTE PTR [rax],ah
   1400112c1:	cmp    al,0x72
   1400112c3:	gs jno 0x14001133b
   1400112c6:	gs jae 0x14001133d
   1400112c9:	gs fs push rax
   1400112cc:	jb     0x140011337
   1400112ce:	jbe    0x140011339
   1400112d0:	ins    BYTE PTR es:[rdi],dx
   1400112d1:	gs addr32 gs jae 0x140011314
   1400112d6:	or     eax,0x2020200a
   1400112db:	and    BYTE PTR [rax],ah
   1400112dd:	and    BYTE PTR [rax],ah
   1400112df:	and    BYTE PTR [rax],ah
   1400112e1:	and    BYTE PTR [rax],ah
   1400112e3:	and    BYTE PTR [rdx+rsi*2],bh
   1400112e6:	gs jno 0x14001135e
   1400112e9:	gs jae 0x140011360
   1400112ec:	gs fs rex.RB js 0x140011356
   1400112f1:	movsxd esi,DWORD PTR [rbp+0x74]
   1400112f4:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   1400112fb:	ins    BYTE PTR es:[rdi],dx
   1400112fc:	or     eax,0x2020200a
   140011301:	and    BYTE PTR [rax],ah
   140011303:	and    BYTE PTR [rax],ah
   140011305:	and    BYTE PTR [rax],ah
   140011307:	and    BYTE PTR [rax],ah
   140011309:	and    BYTE PTR [rax],ah
   14001130b:	and    BYTE PTR [rax],ah
   14001130d:	and    BYTE PTR [rbp+riz*2+0x76],ch
   140011311:	gs ins BYTE PTR es:[rdi],dx
   140011313:	cmp    eax,0x49736122
   140011318:	outs   dx,BYTE PTR ds:[rsi]
   140011319:	jbe    0x14001138a
   14001131b:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14001131f:	or     eax,0x2020200a
   140011324:	and    BYTE PTR [rax],ah
   140011326:	and    BYTE PTR [rax],ah
   140011328:	and    BYTE PTR [rax],ah
   14001132a:	and    BYTE PTR [rax],ah
   14001132c:	and    BYTE PTR [rax],ah
   14001132e:	and    BYTE PTR [rax],ah
   140011330:	and    BYTE PTR [rbp+0x69],dh
   140011333:	movsxd esp,DWORD PTR [r11+0x65]
   140011337:	jae    0x1400113ac
   140011339:	cmp    eax,0x6c616622
   14001133e:	jae    0x1400113a5
   140011340:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x160213350
   140011346:	and    BYTE PTR [rax],ah
   140011348:	and    BYTE PTR [rax],ah
   14001134a:	and    BYTE PTR [rax],ah
   14001134c:	and    BYTE PTR [rax],ah
   14001134e:	and    BYTE PTR [rdi],ch
   140011350:	ds or  eax,0x2020200a
   140011356:	and    BYTE PTR [rax],ah
   140011358:	and    BYTE PTR [rax],ah
   14001135a:	and    BYTE PTR [rdi+rbp*1],bh
   14001135d:	jb     0x1400113c4
   14001135f:	jno    0x1400113d6
   140011361:	gs jae 0x1400113d8
   140011364:	gs fs push rax
   140011367:	jb     0x1400113d2
   140011369:	jbe    0x1400113d4
   14001136b:	ins    BYTE PTR es:[rdi],dx
   14001136c:	gs addr32 gs jae 0x1400113af
   140011371:	or     eax,0x2020200a
   140011376:	and    BYTE PTR [rdi+rbp*1],bh
   140011379:	jae    0x1400113e0
   14001137b:	movsxd esi,DWORD PTR [rbp+0x72]
   14001137e:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x2f3c0a0d
   140011386:	je     0x1400113fa
   140011388:	jne    0x1400113fd
   14001138a:	je     0x1400113d5
   14001138c:	outs   dx,BYTE PTR ds:[rsi]
   14001138d:	outs   dx,WORD PTR ds:[rsi]
   14001138f:	ds or  eax,0x612f3c0a
   140011395:	jae    0x14001140a
   140011397:	gs ins DWORD PTR es:[rdi],dx
   140011399:	(bad)  
   14001139a:	ins    BYTE PTR es:[rdi],dx
   14001139b:	jns    0x1400113db
   14001139d:	or     eax,0xa0d0a
   1400113a2:	add    BYTE PTR [rax],al
   1400113a4:	add    BYTE PTR [rax],al
   1400113a6:	add    BYTE PTR [rax],al
   1400113a8:	movabs al,ds:0x5300560000003403
   1400113b1:	add    BYTE PTR [rdi+0x0],bl
   1400113b4:	push   rsi
   1400113b5:	add    BYTE PTR [rbp+0x0],al
   1400113b8:	push   rdx
   1400113b9:	add    BYTE PTR [rbx+0x0],dl
   1400113bc:	rex.WB add BYTE PTR [r15+0x0],cl
   1400113c0:	rex.WRX add BYTE PTR [rdi+0x0],r11b
   1400113c4:	rex.WB add BYTE PTR [r14+0x0],cl
   1400113c8:	rex.RX add BYTE PTR [rdi+0x0],r9b
   1400113cc:	add    BYTE PTR [rax],al
   1400113ce:	add    BYTE PTR [rax],al
   1400113d0:	mov    ebp,0xfeef04
   1400113d5:	add    BYTE PTR [rcx],al
   1400113d7:	add    BYTE PTR [rax],al
   1400113d9:	add    BYTE PTR [rdx],cl
   1400113db:	add    BYTE PTR [rax],al
   1400113dd:	add    BYTE PTR [rax],bpl
   1400113e0:	add    BYTE PTR [rax],al
   1400113e2:	or     al,BYTE PTR [rax]
   1400113e4:	add    BYTE PTR [rax+0x0],al
   1400113e7:	sub    BYTE PTR [rdi],bh
   1400113e9:	add    BYTE PTR [rax],al
   1400113eb:	add    BYTE PTR [rax],al
   1400113ed:	add    BYTE PTR [rax],al
   1400113ef:	add    BYTE PTR [rax+rax*1],al
   1400113f2:	add    al,0x0
   1400113f4:	add    DWORD PTR [rax],eax
	...
   140011402:	add    BYTE PTR [rax],al
   140011404:	inc    BYTE PTR [rdx]
   140011406:	add    BYTE PTR [rax],al
   140011408:	add    DWORD PTR [rax],eax
   14001140a:	push   rbx
   14001140b:	add    BYTE PTR [rax+rax*1+0x72],dh
   14001140f:	add    BYTE PTR [rcx+0x0],ch
   140011412:	outs   dx,BYTE PTR ds:[rsi]
   140011413:	add    BYTE PTR [rdi+0x0],ah
   140011416:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14001141a:	ins    BYTE PTR es:[rdi],dx
   14001141b:	add    BYTE PTR [rbp+0x0],ah
   14001141e:	rex.WB add BYTE PTR [r14+0x0],bpl
   140011422:	data16 add BYTE PTR [rdi+0x0],ch
   140011426:	add    BYTE PTR [rax],al
   140011428:	fiadd  DWORD PTR [rdx]
   14001142a:	add    BYTE PTR [rax],al
   14001142c:	add    DWORD PTR [rax],eax
   14001142e:	xor    BYTE PTR [rax],al
   140011430:	xor    al,0x0
   140011432:	xor    BYTE PTR [rax],al
   140011434:	cmp    DWORD PTR [rax],eax
   140011436:	xor    BYTE PTR [rax],al
   140011438:	xor    al,0x0
   14001143a:	rex.X add BYTE PTR [rax],sil
   14001143d:	add    BYTE PTR [rax],al
   14001143f:	add    BYTE PTR [rax+rax*1+0x16],cl
   140011443:	add    BYTE PTR [rcx],al
   140011445:	add    BYTE PTR [rbx+0x0],al
   140011448:	outs   dx,DWORD PTR ds:[rsi]
   140011449:	add    BYTE PTR [rbp+0x0],ch
   14001144c:	jo     0x14001144e
   14001144e:	(bad)  
   14001144f:	add    BYTE PTR [rsi+0x0],ch
   140011452:	jns    0x140011454
   140011454:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140011458:	ins    DWORD PTR es:[rdi],dx
   140011459:	add    BYTE PTR [rbp+0x0],ah
   14001145c:	add    BYTE PTR [rax],al
   14001145e:	add    BYTE PTR [rax],al
   140011460:	rex.WRB add BYTE PTR [r9+0x0],r13b
   140011464:	movsxd eax,DWORD PTR [rax]
   140011466:	jb     0x140011468
   140011468:	outs   dx,DWORD PTR ds:[rsi]
   140011469:	add    BYTE PTR [rbx+0x0],dh
   14001146c:	outs   dx,DWORD PTR ds:[rsi]
   14001146d:	add    BYTE PTR [rsi+0x0],ah
   140011470:	je     0x140011472
   140011472:	and    BYTE PTR [rax],al
   140011474:	rex.XB add BYTE PTR [r15+0x0],bpl
   140011478:	jb     0x14001147a
   14001147a:	jo     0x14001147c
   14001147c:	outs   dx,DWORD PTR ds:[rsi]
   14001147d:	add    BYTE PTR [rdx+0x0],dh
   140011480:	(bad)  
   140011481:	add    BYTE PTR [rax+rax*1+0x69],dh
   140011485:	add    BYTE PTR [rdi+0x0],ch
   140011488:	outs   dx,BYTE PTR ds:[rsi]
   140011489:	add    BYTE PTR [rax],al
   14001148b:	add    BYTE PTR [rax+rax*1+0x22],ch
   14001148f:	add    BYTE PTR [rcx],al
   140011491:	add    BYTE PTR [rsi+0x0],al
   140011494:	imul   eax,DWORD PTR [rax],0x65006c
   14001149a:	add    BYTE PTR [rbp+0x0],r12b
   14001149e:	jae    0x1400114a0
   1400114a0:	movsxd eax,DWORD PTR [rax]
   1400114a2:	jb     0x1400114a4
   1400114a4:	imul   eax,DWORD PTR [rax],0x740070
   1400114aa:	imul   eax,DWORD PTR [rax],0x6e006f
   1400114b0:	add    BYTE PTR [rax],al
   1400114b2:	add    BYTE PTR [rax],al
   1400114b4:	push   rbx
   1400114b5:	add    BYTE PTR [rbp+0x0],ah
   1400114b8:	je     0x1400114ba
   1400114ba:	js     0x1400114bc
   1400114bc:	and    BYTE PTR [rax],al
   1400114be:	sub    eax,0x53002000
   1400114c3:	add    BYTE PTR [rbp+0x0],ah
   1400114c6:	je     0x1400114c8
   1400114c8:	jae    0x1400114ca
   1400114ca:	and    BYTE PTR [rax],al
   1400114cc:	add    BYTE PTR gs:[rsi+0x0],ch
   1400114d0:	jbe    0x1400114d2
   1400114d2:	imul   eax,DWORD PTR [rax],0x6f0072
   1400114d8:	outs   dx,BYTE PTR ds:[rsi]
   1400114d9:	add    BYTE PTR [rbp+0x0],ch
   1400114dc:	add    BYTE PTR gs:[rsi+0x0],ch
   1400114e0:	je     0x1400114e2
   1400114e2:	and    BYTE PTR [rax],al
   1400114e4:	jbe    0x1400114e6
   1400114e6:	(bad)  
   1400114e7:	add    BYTE PTR [rdx+0x0],dh
   1400114ea:	imul   eax,DWORD PTR [rax],0x620061
   1400114f0:	ins    BYTE PTR es:[rdi],dx
   1400114f1:	add    BYTE PTR [rbp+0x0],ah
   1400114f4:	jae    0x1400114f6
   1400114f6:	add    BYTE PTR [rax],al
   1400114f8:	data16 add BYTE PTR [rbx],ah
   1400114fb:	add    BYTE PTR [rcx],al
   1400114fd:	add    BYTE PTR [rsi+0x0],al
   140011500:	imul   eax,DWORD PTR [rax],0x65006c
   140011506:	push   rsi
   140011507:	add    BYTE PTR [rbp+0x0],ah
   14001150a:	jb     0x14001150c
   14001150c:	jae    0x14001150e
   14001150e:	imul   eax,DWORD PTR [rax],0x6e006f
   140011514:	add    BYTE PTR [rax],al
   140011516:	add    BYTE PTR [rax],al
   140011518:	xor    DWORD PTR [rax],eax
   14001151a:	xor    BYTE PTR [rax],al
   14001151c:	add    BYTE PTR cs:[rax],dh
   14001151f:	add    BYTE PTR [rsi],ch
   140011521:	add    BYTE PTR [rcx],dh
   140011523:	add    BYTE PTR [rax],dh
   140011525:	add    BYTE PTR [rdx],dh
   140011527:	add    BYTE PTR [rax+rax*1],dh
   14001152a:	xor    BYTE PTR [rax],al
   14001152c:	add    BYTE PTR cs:[rcx],dh
   14001152f:	add    BYTE PTR [rsi],dh
   140011531:	add    BYTE PTR [rbx],dh
   140011533:	add    BYTE PTR [rax],bh
   140011535:	add    BYTE PTR [rax+rax*1],dh
   140011538:	and    BYTE PTR [rax],al
   14001153a:	sub    BYTE PTR [rax],al
   14001153c:	je     0x14001153e
   14001153e:	push   0x2e003100
   140011543:	add    BYTE PTR [rcx],dh
   140011545:	add    BYTE PTR [rip+0x37003000],dh        # 0x17701454b
   14001154b:	add    BYTE PTR [rax],dh
   14001154d:	add    BYTE PTR [rcx],bh
   14001154f:	add    BYTE PTR [rip+0x37003100],ch        # 0x177014655
   140011555:	add    BYTE PTR [rax],dh
   140011557:	add    BYTE PTR [rax],dh
   140011559:	add    BYTE PTR [rcx],ch
   14001155b:	add    BYTE PTR [rax],al
   14001155d:	add    BYTE PTR [rax],al
   14001155f:	add    BYTE PTR [rdx],dh
   140011561:	add    BYTE PTR [rcx],cl
   140011563:	add    BYTE PTR [rcx],al
   140011565:	add    BYTE PTR [rcx+0x0],cl
   140011568:	outs   dx,BYTE PTR ds:[rsi]
   140011569:	add    BYTE PTR [rax+rax*1+0x65],dh
   14001156d:	add    BYTE PTR [rdx+0x0],dh
   140011570:	outs   dx,BYTE PTR ds:[rsi]
   140011571:	add    BYTE PTR [rcx+0x0],ah
   140011574:	ins    BYTE PTR es:[rdi],dx
   140011575:	add    BYTE PTR [rsi+0x0],cl
   140011578:	(bad)  
   140011579:	add    BYTE PTR [rbp+0x0],ch
   14001157c:	add    BYTE PTR gs:[rax],al
   14001157f:	add    BYTE PTR [rbx+0x0],dh
   140011582:	add    BYTE PTR gs:[rax+rax*1+0x78],dh
   140011587:	add    BYTE PTR [rsi],ch
   140011589:	add    BYTE PTR [rbp+0x0],ah
   14001158c:	js     0x14001158e
   14001158e:	add    BYTE PTR gs:[rax],al
   140011591:	add    BYTE PTR [rax],al
   140011593:	add    BYTE PTR [rax+0x1002e00],al
   140011599:	add    BYTE PTR [rax+rax*1+0x65],cl
   14001159d:	add    BYTE PTR [rdi+0x0],ah
   1400115a0:	(bad)  
   1400115a1:	add    BYTE PTR [rax+rax*1+0x43],ch
   1400115a5:	add    BYTE PTR [rdi+0x0],ch
   1400115a8:	jo     0x1400115aa
   1400115aa:	jns    0x1400115ac
   1400115ac:	jb     0x1400115ae
   1400115ae:	imul   eax,DWORD PTR [rax],0x680067
   1400115b4:	je     0x1400115b6
   1400115b6:	add    BYTE PTR [rax],al
   1400115b8:	test   eax,0x4d002000
   1400115bd:	add    BYTE PTR [rcx+0x0],ch
   1400115c0:	movsxd eax,DWORD PTR [rax]
   1400115c2:	jb     0x1400115c4
   1400115c4:	outs   dx,DWORD PTR ds:[rsi]
   1400115c5:	add    BYTE PTR [rbx+0x0],dh
   1400115c8:	outs   dx,DWORD PTR ds:[rsi]
   1400115c9:	add    BYTE PTR [rsi+0x0],ah
   1400115cc:	je     0x1400115ce
   1400115ce:	and    BYTE PTR [rax],al
   1400115d0:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400115d4:	jb     0x1400115d6
   1400115d6:	jo     0x1400115d8
   1400115d8:	outs   dx,DWORD PTR ds:[rsi]
   1400115d9:	add    BYTE PTR [rdx+0x0],dh
   1400115dc:	(bad)  
   1400115dd:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400115e1:	add    BYTE PTR [rdi+0x0],ch
   1400115e4:	outs   dx,BYTE PTR ds:[rsi]
   1400115e5:	add    BYTE PTR [rsi],ch
   1400115e7:	add    BYTE PTR [rax],ah
   1400115e9:	add    BYTE PTR [rcx+0x0],al
   1400115ec:	ins    BYTE PTR es:[rdi],dx
   1400115ed:	add    BYTE PTR [rax+rax*1+0x20],ch
   1400115f1:	add    BYTE PTR [rdx+0x0],dh
   1400115f4:	imul   eax,DWORD PTR [rax],0x680067
   1400115fa:	je     0x1400115fc
   1400115fc:	jae    0x1400115fe
   1400115fe:	and    BYTE PTR [rax],al
   140011600:	jb     0x140011602
   140011602:	add    BYTE PTR gs:[rbx+0x0],dh
   140011606:	add    BYTE PTR gs:[rdx+0x0],dh
   14001160a:	jbe    0x14001160c
   14001160c:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   140011611:	add    BYTE PTR [rax],al
   140011613:	add    BYTE PTR [rdx],bh
   140011615:	add    BYTE PTR [rcx],cl
   140011617:	add    BYTE PTR [rcx],al
   140011619:	add    BYTE PTR [rdi+0x0],cl
   14001161c:	jb     0x14001161e
   14001161e:	imul   eax,DWORD PTR [rax],0x690067
   140011624:	outs   dx,BYTE PTR ds:[rsi]
   140011625:	add    BYTE PTR [rcx+0x0],ah
   140011628:	ins    BYTE PTR es:[rdi],dx
   140011629:	add    BYTE PTR [rsi+0x0],al
   14001162c:	imul   eax,DWORD PTR [rax],0x65006c
   140011632:	outs   dx,BYTE PTR ds:[rsi]
   140011633:	add    BYTE PTR [rcx+0x0],ah
   140011636:	ins    DWORD PTR es:[rdi],dx
   140011637:	add    BYTE PTR [rbp+0x0],ah
   14001163a:	add    BYTE PTR [rax],al
   14001163c:	jae    0x14001163e
   14001163e:	add    BYTE PTR gs:[rax+rax*1+0x78],dh
   140011643:	add    BYTE PTR [rsi],ch
   140011645:	add    BYTE PTR [rbp+0x0],ah
   140011648:	js     0x14001164a
   14001164a:	add    BYTE PTR gs:[rax],al
   14001164d:	add    BYTE PTR [rax],al
   14001164f:	add    BYTE PTR [rdx+0x0],ch
   140011652:	and    eax,0x50000100
   140011657:	add    BYTE PTR [rdx+0x0],dh
   14001165a:	outs   dx,DWORD PTR ds:[rsi]
   14001165b:	add    BYTE PTR [rax+rax*1+0x75],ah
   14001165f:	add    BYTE PTR [rbx+0x0],ah
   140011662:	je     0x140011664
   140011664:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140011668:	ins    DWORD PTR es:[rdi],dx
   140011669:	add    BYTE PTR [rbp+0x0],ah
   14001166c:	add    BYTE PTR [rax],al
   14001166e:	add    BYTE PTR [rax],al
   140011670:	rex.WRB add BYTE PTR [r9+0x0],r13b
   140011674:	movsxd eax,DWORD PTR [rax]
   140011676:	jb     0x140011678
   140011678:	outs   dx,DWORD PTR ds:[rsi]
   140011679:	add    BYTE PTR [rbx+0x0],dh
   14001167c:	outs   dx,DWORD PTR ds:[rsi]
   14001167d:	add    BYTE PTR [rsi+0x0],ah
   140011680:	je     0x140011682
   140011682:	scas   al,BYTE PTR es:[rdi]
   140011683:	add    BYTE PTR [rax],ah
   140011685:	add    BYTE PTR [rdi+0x0],dl
   140011688:	imul   eax,DWORD PTR [rax],0x64006e
   14001168e:	outs   dx,DWORD PTR ds:[rsi]
   14001168f:	add    BYTE PTR [rdi+0x0],dh
   140011692:	jae    0x140011694
   140011694:	scas   al,BYTE PTR es:[rdi]
   140011695:	add    BYTE PTR [rax],ah
   140011697:	add    BYTE PTR [rdi+0x0],cl
   14001169a:	jo     0x14001169c
   14001169c:	add    BYTE PTR gs:[rdx+0x0],dh
   1400116a0:	(bad)  
   1400116a1:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400116a5:	add    BYTE PTR [rsi+0x0],ch
   1400116a8:	add    BYTE PTR [eax],ah
   1400116ab:	add    BYTE PTR [rbx+0x0],dl
   1400116ae:	jns    0x1400116b0
   1400116b0:	jae    0x1400116b2
   1400116b2:	je     0x1400116b4
   1400116b4:	add    BYTE PTR gs:[rbp+0x0],ch
   1400116b8:	add    BYTE PTR [rax],al
   1400116ba:	add    BYTE PTR [rax],al
   1400116bc:	rex.RX add BYTE PTR [rcx],r10b
   1400116bf:	add    BYTE PTR [rcx],al
   1400116c1:	add    BYTE PTR [rax+0x0],dl
   1400116c4:	jb     0x1400116c6
   1400116c6:	outs   dx,DWORD PTR ds:[rsi]
   1400116c7:	add    BYTE PTR [rax+rax*1+0x75],ah
   1400116cb:	add    BYTE PTR [rbx+0x0],ah
   1400116ce:	je     0x1400116d0
   1400116d0:	push   rsi
   1400116d1:	add    BYTE PTR [rbp+0x0],ah
   1400116d4:	jb     0x1400116d6
   1400116d6:	jae    0x1400116d8
   1400116d8:	imul   eax,DWORD PTR [rax],0x6e006f
   1400116de:	add    BYTE PTR [rax],al
   1400116e0:	xor    DWORD PTR [rax],eax
   1400116e2:	xor    BYTE PTR [rax],al
   1400116e4:	add    BYTE PTR cs:[rax],dh
   1400116e7:	add    BYTE PTR [rsi],ch
   1400116e9:	add    BYTE PTR [rcx],dh
   1400116eb:	add    BYTE PTR [rax],dh
   1400116ed:	add    BYTE PTR [rdx],dh
   1400116ef:	add    BYTE PTR [rax+rax*1],dh
   1400116f2:	xor    BYTE PTR [rax],al
   1400116f4:	add    BYTE PTR cs:[rcx],dh
   1400116f7:	add    BYTE PTR [rsi],dh
   1400116f9:	add    BYTE PTR [rbx],dh
   1400116fb:	add    BYTE PTR [rax],bh
   1400116fd:	add    BYTE PTR [rax+rax*1],dh
   140011700:	add    BYTE PTR [rax],al
   140011702:	add    BYTE PTR [rax],al
   140011704:	add    BYTE PTR [rax],r8b
   140011707:	add    BYTE PTR [rcx],al
   140011709:	add    BYTE PTR [rsi+0x0],dl
   14001170c:	(bad)  
   14001170d:	add    BYTE PTR [rdx+0x0],dh
   140011710:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140011714:	ins    BYTE PTR es:[rdi],dx
   140011715:	add    BYTE PTR [rbp+0x0],ah
   140011718:	rex.WB add BYTE PTR [r14+0x0],bpl
   14001171c:	data16 add BYTE PTR [rdi+0x0],ch
   140011720:	add    BYTE PTR [rax],al
   140011722:	add    BYTE PTR [rax],al
   140011724:	and    al,0x0
   140011726:	add    al,0x0
   140011728:	add    BYTE PTR [rax],al
   14001172a:	push   rsp
   14001172b:	add    BYTE PTR [rdx+0x0],dh
   14001172e:	(bad)  
   14001172f:	add    BYTE PTR [rsi+0x0],ch
   140011732:	jae    0x140011734
   140011734:	ins    BYTE PTR es:[rdi],dx
   140011735:	add    BYTE PTR [rcx+0x0],ah
   140011738:	je     0x14001173a
   14001173a:	imul   eax,DWORD PTR [rax],0x6e006f
   140011740:	add    BYTE PTR [rax],al
   140011742:	add    BYTE PTR [rax],al
   140011744:	or     DWORD PTR [rax+rsi*4],eax
   140011747:	add    al,0xcd
   140011749:	dec    ch
   14001174b:	dec    al
   14001174d:	add    BYTE PTR [rax],al
   14001174f:	add    BYTE PTR [rax],al
   140011751:	add    BYTE PTR [rcx],al
   140011753:	add    BYTE PTR [rax],al
   140011755:	add    BYTE PTR [rax],al
   140011757:	add    BYTE PTR [rcx],dl
   140011759:	add    BYTE PTR [rax],al
   14001175b:	add    BYTE PTR [rax],al
   14001175d:	add    BYTE PTR [rax],al
   14001175f:	add    BYTE PTR [rdx],al
   140011761:	add    BYTE PTR [rax],al
   140011763:	add    BYTE PTR [rdx],al
   140011765:	or     eax,0x34199ecf
   14001176a:	repnz mov dl,0xe1
   14001176d:	mov    ebx,0xaab009d6
   140011772:	(bad)  
   140011773:	add    DWORD PTR [rax+0x4e],edi
   140011776:	out    0xb8,al
   140011778:	cld    
   140011779:	js     0x140011752
   14001177b:	pop    rcx
   14001177c:	outs   dx,DWORD PTR ds:[rsi]
   14001177d:	jp     0x140011726
   14001177f:	(bad)  
   140011780:	rex.WX push rcx
   140011782:	sbb    DWORD PTR [rbx],ebx
	...
   14001179c:	mov    BYTE PTR [rax],al
   14001179e:	add    BYTE PTR [rax],al
   1400117a0:	(bad)  
   1400117a1:	add    BYTE PTR [rax],al
   1400117a3:	add    BYTE PTR [rax+0x8000000],bl
   1400117a9:	add    BYTE PTR [rax],al
   1400117ab:	add    BYTE PTR [rax+0xe000000],ah
   1400117b1:	add    BYTE PTR [rax],al
   1400117b3:	add    BYTE PTR [rax+0x8000000],dh
	...
   1400117c1:	add    BYTE PTR [rax],al
   1400117c3:	add    BYTE PTR [rax+0xc000000],bh
   1400117c9:	add    BYTE PTR [rax],al
   1400117cb:	add    BYTE PTR [rax],al
   1400117cd:	add    BYTE PTR [rax],al
   1400117cf:	add    BYTE PTR [rbp+0x0],cl
   1400117d2:	push   rbp
   1400117d3:	add    BYTE PTR [rcx+0x0],cl
	...
   1400117de:	add    BYTE PTR [rax],al
   1400117e0:	adc    BYTE PTR [rax],al
   1400117e2:	add    BYTE PTR [rax],al
   1400117e4:	sbb    BYTE PTR [rax],al
   1400117e6:	add    BYTE PTR [rax],al
   1400117e8:	rex.WRB add BYTE PTR [r13+0x0],r10b
   1400117ec:	rex.WB add BYTE PTR [r8],al
	...
   1400117f7:	add    BYTE PTR [rsi],al
   1400117f9:	add    BYTE PTR [rax],al
   1400117fb:	add    BYTE PTR [rax],dl
   1400117fd:	add    BYTE PTR [rax],al
   1400117ff:	add    BYTE PTR [rbp+0x0],ah
   140011802:	outs   dx,BYTE PTR ds:[rsi]
   140011803:	add    BYTE PTR [rip+0x53005500],ch        # 0x193016d09
   140011809:	add    BYTE PTR [rax],al
   14001180b:	add    BYTE PTR [rax],al
   14001180d:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

0000000140012000 <.reloc>:
   140012000:	add    BYTE PTR [rax+0x200000],dh
   140012006:	add    BYTE PTR [rax],al
   140012008:	push   rax
   140012009:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001200a:	pop    rax
   14001200b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001200c:	push   0xffffffff88a480a4
   140012011:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012012:	lock movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012014:	clc    
   140012015:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012016:	test   rax,0xffffffffa968a960
   14001201c:	jo     0x140011fc7
   14001201e:	add    BYTE PTR [rax],al
   140012020:	add    BYTE PTR [rax],al
   140012022:	add    DWORD PTR [rax],eax
   140012024:	adc    al,0x0
   140012026:	add    BYTE PTR [rax],al
   140012028:	add    BYTE PTR [rax-0x5fef5ff8],ah
   14001202e:	and    BYTE PTR [rax-0x5fbf5fd0],ah
